{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/Person.java",
  "packageName" : "android.app",
  "className" : "Builder",
  "comment" : " Builder for the immutable {@link Person} class. ",
  "variables" : [ {
    "name" : "mName",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUri",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKey",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsBot",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsImportant",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Person.Builder setName(@Nullable CharSequence name)",
    "returnType" : "Person.Builder",
    "comment" : "\n         * Give this person a name.\n         *\n         * @param name the name of this person.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Person.Builder setIcon(@Nullable Icon icon)",
    "returnType" : "Person.Builder",
    "comment" : "\n         * Add an icon for this person.\n         * <br />\n         * The system will prefer this icon over any images that are resolved from the URI.\n         *\n         * @param icon the icon of the person.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Person.Builder setUri(@Nullable String uri)",
    "returnType" : "Person.Builder",
    "comment" : "\n         * Set a URI associated with this person.\n         *\n         * <P>\n         * The person should be specified by the {@code String} representation of a\n         * {@link android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI}.\n         * </P>\n         *\n         * <P>The system will also attempt to resolve {@code mailto:} and {@code tel:} schema\n         * URIs. The path part of these URIs must exist in the contacts database, in the\n         * appropriate column, or the reference will be discarded as invalid. Telephone schema\n         * URIs will be resolved by {@link android.provider.ContactsContract.PhoneLookup}.\n         * </P>\n         *\n         * @param uri a URI for the person.\n         ",
    "links" : [ "android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI", "android.provider.ContactsContract.PhoneLookup" ]
  }, {
    "name" : "public Person.Builder setKey(@Nullable String key)",
    "returnType" : "Person.Builder",
    "comment" : "\n         * Add a key to this person in order to uniquely identify it.\n         * This is especially useful if the name doesn't uniquely identify this person or if the\n         * display name is a short handle of the actual name.\n         *\n         * <P>If no key is provided, the name serves as the key for the purpose of\n         * identification.</P>\n         *\n         * @param key the key that uniquely identifies this person.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Person.Builder setImportant(boolean isImportant)",
    "returnType" : "Person.Builder",
    "comment" : "\n         * Sets whether this is an important person. Use this method to denote users who frequently\n         * interact with the user of this device when {@link #setUri(String)} isn't provided with\n         * {@link android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI}, and instead with\n         * the {@code mailto:} or {@code tel:} schemas.\n         *\n         * @param isImportant {@code true} if this is an important person, {@code false} otherwise.\n         ",
    "links" : [ "android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI", "#setUri(String)" ]
  }, {
    "name" : "public Person.Builder setBot(boolean isBot)",
    "returnType" : "Person.Builder",
    "comment" : "\n         * Sets whether this person is a machine rather than a human.\n         *\n         * @param isBot {@code true} if this person is a machine, {@code false} otherwise.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Person build()",
    "returnType" : "Person",
    "comment" : " Creates and returns the {@link Person} this builder represents. ",
    "links" : [ "android.app.Person" ]
  } ],
  "variableNames" : [ "mName", "mIcon", "mUri", "mKey", "mIsBot", "mIsImportant" ],
  "methodNames" : [ "public Person.Builder setName(@Nullable CharSequence name)", "public Person.Builder setIcon(@Nullable Icon icon)", "public Person.Builder setUri(@Nullable String uri)", "public Person.Builder setKey(@Nullable String key)", "public Person.Builder setImportant(boolean isImportant)", "public Person.Builder setBot(boolean isBot)", "public Person build()" ]
}