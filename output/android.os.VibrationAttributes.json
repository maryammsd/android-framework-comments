{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/VibrationAttributes.java",
  "packageName" : "android.os",
  "className" : "VibrationAttributes",
  "comment" : "\n * A class to encapsulate a collection of attributes describing information about a vibration\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "USAGE_CLASS_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Vibration usage class value to use when the vibration usage class is unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_CLASS_ALARM",
    "type" : "int",
    "comment" : "\n     * Vibration usage class value to use when the vibration is initiated to catch user's\n     * attention, such as alarm, ringtone, and notification vibrations.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_CLASS_FEEDBACK",
    "type" : "int",
    "comment" : "\n     * Vibration usage class value to use when the vibration is initiated as a response to user's\n     * actions, such as emulation of physical effects, and texting feedback vibration.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_CLASS_MASK",
    "type" : "int",
    "comment" : "\n     * Mask for vibration usage class value.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Usage value to use when usage is unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_ALARM",
    "type" : "int",
    "comment" : "\n     * Usage value to use for alarm vibrations.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_RINGTONE",
    "type" : "int",
    "comment" : "\n     * Usage value to use for ringtone vibrations.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_NOTIFICATION",
    "type" : "int",
    "comment" : "\n     * Usage value to use for notification vibrations.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_COMMUNICATION_REQUEST",
    "type" : "int",
    "comment" : "\n     * Usage value to use for vibrations which mean a request to enter/end a\n     * communication, such as a VoIP communication or video-conference.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_TOUCH",
    "type" : "int",
    "comment" : "\n     * Usage value to use for touch vibrations.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_PHYSICAL_EMULATION",
    "type" : "int",
    "comment" : "\n     * Usage value to use for vibrations which emulate physical effects, such as edge squeeze.\n     ",
    "links" : [ ]
  }, {
    "name" : "USAGE_HARDWARE_FEEDBACK",
    "type" : "int",
    "comment" : "\n     * Usage value to use for vibrations which provide a feedback for hardware interaction,\n     * such as a fingerprint sensor.\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_BYPASS_INTERRUPTION_POLICY",
    "type" : "int",
    "comment" : "\n     * Flag requesting vibration effect to be played even under limited interruptions.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_HAPTIC_FEEDBACK_DURATION",
    "type" : "long",
    "comment" : " If a vibration is playing for longer than 5s, it's probably not haptic feedback",
    "links" : [ ]
  }, {
    "name" : "mUsage",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioAttributes",
    "type" : "AudioAttributes",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<VibrationAttributes>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getUsageClass()",
    "returnType" : "int",
    "comment" : "\n     * Return the vibration usage class.\n     * @return USAGE_CLASS_ALARM, USAGE_CLASS_FEEDBACK or USAGE_CLASS_UNKNOWN\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getUsage()",
    "returnType" : "int",
    "comment" : "\n     * Return the vibration usage.\n     * @return one of the values that can be set in {@link Builder#setUsage(int)}\n     ",
    "links" : [ "#setUsage(int)" ]
  }, {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : "\n     * Return the flags.\n     * @return a combined mask of all flags\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFlagSet(int flag)",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether a flag is set\n     * @return true if a flag is set and false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public AudioAttributes getAudioAttributes()",
    "returnType" : "AudioAttributes",
    "comment" : "\n     * Return AudioAttributes equivalent to this VibrationAttributes.\n     * @deprecated Temporary support of AudioAttributes, will be removed when out of WIP\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String usageToString()",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String usageToString(int usage)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "USAGE_CLASS_UNKNOWN", "USAGE_CLASS_ALARM", "USAGE_CLASS_FEEDBACK", "USAGE_CLASS_MASK", "USAGE_UNKNOWN", "USAGE_ALARM", "USAGE_RINGTONE", "USAGE_NOTIFICATION", "USAGE_COMMUNICATION_REQUEST", "USAGE_TOUCH", "USAGE_PHYSICAL_EMULATION", "USAGE_HARDWARE_FEEDBACK", "FLAG_BYPASS_INTERRUPTION_POLICY", "MAX_HAPTIC_FEEDBACK_DURATION", "mUsage", "mFlags", "mAudioAttributes", "CREATOR" ],
  "methodNames" : [ "public int getUsageClass()", "public int getUsage()", "public int getFlags()", "public boolean isFlagSet(int flag)", "public AudioAttributes getAudioAttributes()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public String toString()", "public String usageToString()", "public String usageToString(int usage)" ]
}