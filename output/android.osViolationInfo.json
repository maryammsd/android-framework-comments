{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/StrictMode.java",
  "packageName" : "android.os",
  "className" : "ViolationInfo",
  "comment" : "\n     * Parcelable that gets sent in Binder call headers back to callers to report violations that\n     * happened during a cross-process call.\n     *\n     * @hide\n     ",
  "variables" : [ {
    "name" : "mViolation",
    "type" : "Violation",
    "comment" : " Stack and violation details. ",
    "links" : [ ]
  }, {
    "name" : "mBinderStack",
    "type" : "Deque<StackTraceElement[]>",
    "comment" : " Path leading to a violation that occurred across binder. ",
    "links" : [ ]
  }, {
    "name" : "mStackTrace",
    "type" : "String",
    "comment" : " Memoized stack trace of full violation. ",
    "links" : [ ]
  }, {
    "name" : "mPenaltyMask",
    "type" : "int",
    "comment" : " The strict mode penalty mask at the time of violation. ",
    "links" : [ ]
  }, {
    "name" : "durationMillis",
    "type" : "int",
    "comment" : " The wall time duration of the violation, when known. -1 when not known. ",
    "links" : [ ]
  }, {
    "name" : "numAnimationsRunning",
    "type" : "int",
    "comment" : " The number of animations currently running. ",
    "links" : [ ]
  }, {
    "name" : "tags",
    "type" : "String[]",
    "comment" : " List of tags from active Span instances during this violation, or null for none. ",
    "links" : [ ]
  }, {
    "name" : "violationNumThisLoop",
    "type" : "int",
    "comment" : "\n         * Which violation number this was (1-based) since the last Looper loop, from the\n         * perspective of the root caller (if it crossed any processes via Binder calls). The value\n         * is 0 if the root caller wasn't on a Looper thread.\n         ",
    "links" : [ ]
  }, {
    "name" : "violationUptimeMillis",
    "type" : "long",
    "comment" : " The time (in terms of SystemClock.uptimeMillis()) that the violation occurred. ",
    "links" : [ ]
  }, {
    "name" : "broadcastIntentAction",
    "type" : "String",
    "comment" : "\n         * The action of the Intent being broadcast to somebody's onReceive on this thread right\n         * now, or null.\n         ",
    "links" : [ ]
  }, {
    "name" : "numInstances",
    "type" : "long",
    "comment" : " If this is a instance count violation, the number of instances in memory, else -1. ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ViolationInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getStackTrace()",
    "returnType" : "String",
    "comment" : "\n         * Equivalent output to\n         * {@link android.app.ApplicationErrorReport.CrashInfo#stackTrace}.\n         ",
    "links" : [ "android.app.ApplicationErrorReport.CrashInfo#stackTrace" ]
  }, {
    "name" : "public Class<? extends Violation> getViolationClass()",
    "returnType" : "Class<? extends Violation>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getViolationDetails()",
    "returnType" : "String",
    "comment" : "\n         * Optional message describing this violation.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : " boolean penaltyEnabled(int p)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addLocalStack(Throwable t)",
    "returnType" : "void",
    "comment" : "\n         * Add a {@link Throwable} from the current process that caused the underlying violation. We\n         * only preserve the stack trace elements.\n         *\n         * @hide\n         ",
    "links" : [ "Throwable" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Save a ViolationInfo instance to a parcel. ",
    "links" : [ ]
  }, {
    "name" : "public void dump(Printer pw, String prefix)",
    "returnType" : "void",
    "comment" : " Dump a ViolationInfo instance to a Printer. ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mViolation", "mBinderStack", "mStackTrace", "mPenaltyMask", "durationMillis", "numAnimationsRunning", "tags", "violationNumThisLoop", "violationUptimeMillis", "broadcastIntentAction", "numInstances", "CREATOR" ],
  "methodNames" : [ "public String getStackTrace()", "public Class<? extends Violation> getViolationClass()", "public String getViolationDetails()", " boolean penaltyEnabled(int p)", " void addLocalStack(Throwable t)", "public int hashCode()", "public void writeToParcel(Parcel dest, int flags)", "public void dump(Printer pw, String prefix)", "public int describeContents()" ]
}