{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/templates/ElemMessage.java",
  "packageName" : "org.apache.xalan.templates",
  "className" : "ElemMessage",
  "comment" : "\n * Implement xsl:message.\n * <pre>\n * <!ELEMENT xsl:message %template;>\n * <!ATTLIST xsl:message\n *   %space-att;\n *   terminate (yes|no) \"no\"\n * >\n * </pre>\n * @see <a href=\"http://www.w3.org/TR/xslt#message\">message in XSLT Specification</a>\n * @xsl.usage advanced\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_terminate",
    "type" : "boolean",
    "comment" : " default value ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setTerminate(boolean v)",
    "returnType" : "void",
    "comment" : "\n   * Set the \"terminate\" attribute.\n   * If the terminate attribute has the value yes, then the\n   * XSLT transformer should terminate processing after sending\n   * the message. The default value is no.\n   *\n   * @param v Value to set for \"terminate\" attribute. \n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean getTerminate()",
    "returnType" : "boolean",
    "comment" : "\n   * Get the \"terminate\" attribute.\n   * If the terminate attribute has the value yes, then the\n   * XSLT transformer should terminate processing after sending\n   * the message. The default value is no.\n   *\n   * @return value of \"terminate\" attribute.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getXSLToken()",
    "returnType" : "int",
    "comment" : "\n   * Get an int constant identifying the type of element.\n   * @see org.apache.xalan.templates.Constants\n   *\n   * @return The token ID for this element\n   ",
    "links" : [ ]
  }, {
    "name" : "public String getNodeName()",
    "returnType" : "String",
    "comment" : "\n   * Return the node name.\n   *\n   * @return name of the element \n   ",
    "links" : [ ]
  }, {
    "name" : "public void execute(TransformerImpl transformer) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Send a message to diagnostics.\n   * The xsl:message instruction sends a message in a way that\n   * is dependent on the XSLT transformer. The content of the xsl:message\n   * instruction is a template. The xsl:message is instantiated by\n   * instantiating the content to create an XML fragment. This XML\n   * fragment is the content of the message.\n   *\n   * @param transformer non-null reference to the the current transform-time state.\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setTerminate(boolean v)", "public boolean getTerminate()", "public int getXSLToken()", "public String getNodeName()", "public void execute(TransformerImpl transformer) throws TransformerException" ],
  "variableNames" : [ "serialVersionUID", "m_terminate" ]
}