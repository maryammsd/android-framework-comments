{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/test/suitebuilder/TestGrouping.java",
  "packageName" : "android.test.suitebuilder",
  "className" : "TestGrouping",
  "comment" : "\n * Represents a collection of test classes present on the classpath. You can add individual classes\n * or entire packages. By default sub-packages are included recursively, but methods are\n * provided to allow for arbitrary inclusion or exclusion of sub-packages. Typically a\n * {@link TestGrouping} will have only one root package, but this is not a requirement.\n * \n * {@hide} Not needed for 1.0 SDK.\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "testCaseClasses",
    "type" : "SortedSet<Class<? extends TestCase>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SORT_BY_SIMPLE_NAME",
    "type" : "Comparator<Class<? extends TestCase>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SORT_BY_FULLY_QUALIFIED_NAME",
    "type" : "Comparator<Class<? extends TestCase>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "classLoader",
    "type" : "ClassLoader",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<TestMethod> getTests()",
    "returnType" : "List<TestMethod>",
    "comment" : "\n     * @return A list of all tests in the package, including small, medium, large,\n     *         flaky, and suppressed tests. Includes sub-packages recursively.\n     ",
    "links" : [ ]
  }, {
    "name" : "private List<Method> getTestMethods(Class<? extends TestCase> testCaseClass)",
    "returnType" : "List<Method>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addPackagesRecursive(String... packageNames)",
    "returnType" : "void",
    "comment" : "\n     * Include all tests in the given packages and all their sub-packages, unless otherwise\n     * specified. Each of the given packages must contain at least one test class, either directly\n     * or in a sub-package.\n     *\n     * @param packageNames Names of packages to add.\n     ",
    "links" : [ ]
  }, {
    "name" : " void removePackagesRecursive(String... packageNames)",
    "returnType" : "void",
    "comment" : "\n     * Exclude all tests in the given packages and all their sub-packages, unless otherwise\n     * specified.\n     *\n     * @param packageNames Names of packages to remove.\n     ",
    "links" : [ ]
  }, {
    "name" : "private List<Class<? extends TestCase>> testCaseClassesInPackage(String packageName)",
    "returnType" : "List<Class<? extends TestCase>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private List<Class<? extends TestCase>> selectTestClasses(Set<Class<?>> allClasses)",
    "returnType" : "List<Class<? extends TestCase>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private List<T> select(Collection<T> items, Predicate<T> predicate)",
    "returnType" : "List<T>",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "testCaseClasses", "SORT_BY_SIMPLE_NAME", "SORT_BY_FULLY_QUALIFIED_NAME", "classLoader" ],
  "methodNames" : [ "public List<TestMethod> getTests()", "private List<Method> getTestMethods(Class<? extends TestCase> testCaseClass)", "public boolean equals(Object o)", "public int hashCode()", " void addPackagesRecursive(String... packageNames)", " void removePackagesRecursive(String... packageNames)", "private List<Class<? extends TestCase>> testCaseClassesInPackage(String packageName)", "private List<Class<? extends TestCase>> selectTestClasses(Set<Class<?>> allClasses)", "private List<T> select(Collection<T> items, Predicate<T> predicate)" ]
}