{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/transform/stream/StreamResult.java",
  "packageName" : "javax.xml.transform.stream",
  "className" : "StreamResult",
  "comment" : "\n * <p>Acts as an holder for a transformation result,\n * which may be XML, plain Text, HTML, or some other form of markup.</p>\n *\n * @author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "FEATURE",
    "type" : "String",
    "comment" : " If {@link javax.xml.transform.TransformerFactory#getFeature}\n     * returns true when passed this value as an argument,\n     * the Transformer supports Result output of this type.\n     ",
    "links" : [ "javax.xml.transform.TransformerFactory#getFeature" ]
  }, {
    "name" : "systemId",
    "type" : "String",
    "comment" : "\n     * The systemID that may be used in association\n     * with the byte or character stream, or, if neither is set, use\n     * this value as a writeable URI (probably a file name).\n     ",
    "links" : [ ]
  }, {
    "name" : "outputStream",
    "type" : "OutputStream",
    "comment" : "\n     * The byte stream that is to be written to.\n     ",
    "links" : [ ]
  }, {
    "name" : "writer",
    "type" : "Writer",
    "comment" : "\n     * The character stream that is to be written to.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setOutputStream(OutputStream outputStream)",
    "returnType" : "void",
    "comment" : "\n     * Set the ByteStream that is to be written to.  Normally,\n     * a stream should be used rather than a reader, so that\n     * the transformer may use instructions contained in the\n     * transformation instructions to control the encoding.\n     *\n     * @param outputStream A valid OutputStream reference.\n     ",
    "links" : [ ]
  }, {
    "name" : "public OutputStream getOutputStream()",
    "returnType" : "OutputStream",
    "comment" : "\n     * Get the byte stream that was set with setOutputStream.\n     *\n     * @return The byte stream that was set with setOutputStream, or null\n     * if setOutputStream or the ByteStream constructor was not called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setWriter(Writer writer)",
    "returnType" : "void",
    "comment" : "\n     * Set the writer that is to receive the result.  Normally,\n     * a stream should be used rather than a writer, so that\n     * the transformer may use instructions contained in the\n     * transformation instructions to control the encoding.  However,\n     * there are times when it is useful to write to a writer,\n     * such as when using a StringWriter.\n     *\n     * @param writer  A valid Writer reference.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Writer getWriter()",
    "returnType" : "Writer",
    "comment" : "\n     * Get the character stream that was set with setWriter.\n     *\n     * @return The character stream that was set with setWriter, or null\n     * if setWriter or the Writer constructor was not called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSystemId(String systemId)",
    "returnType" : "void",
    "comment" : "\n     * Set the systemID that may be used in association\n     * with the byte or character stream, or, if neither is set, use\n     * this value as a writeable URI (probably a file name).\n     *\n     * @param systemId The system identifier as a URI string.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSystemId(File f)",
    "returnType" : "void",
    "comment" : "\n     * <p>Set the system ID from a <code>File</code> reference.</p>\n     *\n     * <p>Note the use of {@link File#toURI()} and {@link File#toURL()}.\n     * <code>toURI()</code> is preferred and used if possible.\n     * To allow JAXP 1.3 to run on J2SE 1.3, <code>toURL()</code>\n     * is used if a {@link NoSuchMethodException} is thrown by the attempt\n     * to use <code>toURI()</code>.</p>\n     *\n     * @param f Must a non-null File reference.\n     ",
    "links" : [ "java.io.File#toURL()", "java.io.File#toURI()", "NoSuchMethodException" ]
  }, {
    "name" : "public String getSystemId()",
    "returnType" : "String",
    "comment" : "\n     * Get the system identifier that was set with setSystemId.\n     *\n     * @return The system identifier that was set with setSystemId, or null\n     * if setSystemId was not called.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setOutputStream(OutputStream outputStream)", "public OutputStream getOutputStream()", "public void setWriter(Writer writer)", "public Writer getWriter()", "public void setSystemId(String systemId)", "public void setSystemId(File f)", "public String getSystemId()" ],
  "variableNames" : [ "FEATURE", "systemId", "outputStream", "writer" ]
}