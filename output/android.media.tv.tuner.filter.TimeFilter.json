{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/tuner/filter/TimeFilter.java",
  "packageName" : "android.media.tv.tuner.filter",
  "className" : "TimeFilter",
  "comment" : "\n *  A timer filter is used to filter data based on timestamps.\n *\n *  <p> If the timestamp is set, data is discarded if its timestamp is smaller than the\n *  timestamp in this time filter.\n *\n *  <p> The format of the timestamps is the same as PTS defined in ISO/IEC 13818-1:2019. The\n *  timestamps may or may not be related to PTS or DTS.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mNativeContext",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private native int nativeSetTimestamp(long timestamp)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeClearTimestamp()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native Long nativeGetTimestamp()",
    "returnType" : "Long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native Long nativeGetSourceTime()",
    "returnType" : "Long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeClose()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int setCurrentTimestamp(long timestamp)",
    "returnType" : "int",
    "comment" : "\n     * Set timestamp for time based filter.\n     *\n     * It is used to set initial timestamp and enable time filtering. Once set, the time will be\n     * increased automatically like a clock. Contents are discarded if their timestamps are\n     * older than the time in the time filter.\n     *\n     * This method can be called more than once to reset the initial timestamp.\n     *\n     * @param timestamp initial timestamp for the time filter before it's increased. It's\n     * based on the 90KHz counter, and it's the same format as PTS (Presentation Time Stamp)\n     * defined in ISO/IEC 13818-1:2019. The timestamps may or may not be related to PTS or DTS.\n     * @return result status of the operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int clearTimestamp()",
    "returnType" : "int",
    "comment" : "\n     * Clear the timestamp in the time filter.\n     *\n     * It is used to clear the time value of the time filter. Time filtering is disabled then.\n     *\n     * @return result status of the operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTimeStamp()",
    "returnType" : "long",
    "comment" : "\n     * Get the current time in the time filter.\n     *\n     * It is used to inquiry current time in the time filter.\n     *\n     * @return current timestamp in the time filter. It's based on the 90KHz counter, and it's\n     * the same format as PTS (Presentation Time Stamp) defined in ISO/IEC 13818-1:2019. The\n     * timestamps may or may not be related to PTS or DTS. Returns\n     * {@link Tuner#INVALID_TIMESTAMP} if the timestamp is never set.\n     ",
    "links" : [ "android.media.tv.tuner.Tuner#INVALID_TIMESTAMP" ]
  }, {
    "name" : "public long getSourceTime()",
    "returnType" : "long",
    "comment" : "\n     * Get the timestamp from the beginning of incoming data stream.\n     *\n     * It is used to inquiry the timestamp from the beginning of incoming data stream.\n     *\n     * @return first timestamp of incoming data stream. It's based on the 90KHz counter, and\n     * it's the same format as PTS (Presentation Time Stamp) defined in ISO/IEC 13818-1:2019.\n     * The timestamps may or may not be related to PTS or DTS. Returns\n     * {@link Tuner#INVALID_TIMESTAMP} if the timestamp is not available.\n     ",
    "links" : [ "android.media.tv.tuner.Tuner#INVALID_TIMESTAMP" ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Close the Time Filter instance\n     *\n     * It is to release the TimeFilter instance. Resources are reclaimed so the instance must\n     * not be accessed after this method is called.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private native int nativeSetTimestamp(long timestamp)", "private native int nativeClearTimestamp()", "private native Long nativeGetTimestamp()", "private native Long nativeGetSourceTime()", "private native int nativeClose()", "public int setCurrentTimestamp(long timestamp)", "public int clearTimestamp()", "public long getTimeStamp()", "public long getSourceTime()", "public void close()" ],
  "variableNames" : [ "mNativeContext", "mEnable" ]
}