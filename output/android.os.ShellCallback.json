{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/ShellCallback.java",
  "packageName" : "android.os",
  "className" : "ShellCallback",
  "comment" : "\n * Special-purpose API for use with {@link IBinder#shellCommand IBinder.shellCommand} for\n * performing operations back on the invoking shell.\n * @hide\n ",
  "links" : [ "android.os.IBinder#shellCommand" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLocal",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShellCallback",
    "type" : "IShellCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ShellCallback>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ParcelFileDescriptor openFile(String path, String seLinuxContext, String mode)",
    "returnType" : "ParcelFileDescriptor",
    "comment" : "\n     * Ask the shell to open a file.  If opening for writing, will truncate the file if it\n     * already exists and will create the file if it doesn't exist.\n     * @param path Path of the file to be opened/created.\n     * @param seLinuxContext Optional SELinux context that must be allowed to have\n     * access to the file; if null, nothing is required.\n     * @param mode Mode to open file in: \"r\" for input/reading an existing file,\n     * \"r+\" for reading/writing an existing file, \"w\" for output/writing a new file (either\n     * creating or truncating an existing one), \"w+\" for reading/writing a new file (either\n     * creating or truncating an existing one).\n     ",
    "links" : [ ]
  }, {
    "name" : "public ParcelFileDescriptor onOpenFile(String path, String seLinuxContext, String mode)",
    "returnType" : "ParcelFileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void writeToParcel(ShellCallback callback, Parcel out)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public IBinder getShellCallbackBinder()",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ParcelFileDescriptor openFile(String path, String seLinuxContext, String mode)", "public ParcelFileDescriptor onOpenFile(String path, String seLinuxContext, String mode)", "public static void writeToParcel(ShellCallback callback, Parcel out)", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "public IBinder getShellCallbackBinder()" ],
  "variableNames" : [ "TAG", "DEBUG", "mLocal", "mShellCallback", "CREATOR" ]
}