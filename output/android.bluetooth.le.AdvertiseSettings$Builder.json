{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/le/AdvertiseSettings.java",
  "packageName" : "android.bluetooth.le",
  "className" : "Builder",
  "comment" : " Builder class for {@link AdvertiseSettings}. ",
  "links" : [ "android.bluetooth.le.AdvertiseSettings" ],
  "variables" : [ {
    "name" : "mMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxPowerLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeoutMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDiscoverable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOwnAddressType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setAdvertiseMode(int advertiseMode)",
    "returnType" : "Builder",
    "comment" : "\n         * Set advertise mode to control the advertising power and latency.\n         *\n         * @param advertiseMode Bluetooth LE Advertising mode, can only be one of {@link\n         *     AdvertiseSettings#ADVERTISE_MODE_LOW_POWER}, {@link\n         *     AdvertiseSettings#ADVERTISE_MODE_BALANCED}, or {@link\n         *     AdvertiseSettings#ADVERTISE_MODE_LOW_LATENCY}.\n         * @throws IllegalArgumentException If the advertiseMode is invalid.\n         ",
    "links" : [ "android.bluetooth.le.AdvertiseSettings#ADVERTISE_MODE_BALANCED", "android.bluetooth.le.AdvertiseSettings#ADVERTISE_MODE_LOW_LATENCY", "android.bluetooth.le.AdvertiseSettings#ADVERTISE_MODE_LOW_POWER" ]
  }, {
    "name" : "public Builder setTxPowerLevel(int txPowerLevel)",
    "returnType" : "Builder",
    "comment" : "\n         * Set advertise TX power level to control the transmission power level for the advertising.\n         *\n         * @param txPowerLevel Transmission power of Bluetooth LE Advertising, can only be one of\n         *     {@link AdvertiseSettings#ADVERTISE_TX_POWER_ULTRA_LOW}, {@link\n         *     AdvertiseSettings#ADVERTISE_TX_POWER_LOW}, {@link\n         *     AdvertiseSettings#ADVERTISE_TX_POWER_MEDIUM} or {@link\n         *     AdvertiseSettings#ADVERTISE_TX_POWER_HIGH}.\n         * @throws IllegalArgumentException If the {@code txPowerLevel} is invalid.\n         ",
    "links" : [ "android.bluetooth.le.AdvertiseSettings#ADVERTISE_TX_POWER_ULTRA_LOW", "android.bluetooth.le.AdvertiseSettings#ADVERTISE_TX_POWER_MEDIUM", "android.bluetooth.le.AdvertiseSettings#ADVERTISE_TX_POWER_HIGH", "android.bluetooth.le.AdvertiseSettings#ADVERTISE_TX_POWER_LOW" ]
  }, {
    "name" : "public Builder setConnectable(boolean connectable)",
    "returnType" : "Builder",
    "comment" : "\n         * Set whether the advertisement type should be connectable or non-connectable.\n         *\n         * @param connectable Controls whether the advertisement type will be connectable (true) or\n         *     non-connectable (false).\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDiscoverable(boolean discoverable)",
    "returnType" : "Builder",
    "comment" : "\n         * Set whether the advertisement type should be discoverable or non-discoverable.\n         *\n         * @param discoverable Controls whether the advertisement type will be discoverable ({@code\n         *     true}) or non-discoverable ({@code false}).\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setTimeout(int timeoutMillis)",
    "returnType" : "Builder",
    "comment" : "\n         * Limit advertising to a given amount of time.\n         *\n         * @param timeoutMillis Advertising time limit. May not exceed 180000 milliseconds. A value\n         *     of 0 will disable the time limit.\n         * @throws IllegalArgumentException If the provided timeout is over 180000 ms.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setOwnAddressType(@AddressTypeStatus int ownAddressType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set own address type for advertising to control public or privacy mode. If used to set\n         * address type anything other than {@link AdvertisingSetParameters#ADDRESS_TYPE_DEFAULT},\n         * then it will require BLUETOOTH_PRIVILEGED permission and will be checked at the time of\n         * starting advertising.\n         *\n         * @throws IllegalArgumentException If the {@code ownAddressType} is invalid\n         * @hide\n         ",
    "links" : [ "android.bluetooth.le.AdvertisingSetParameters#ADDRESS_TYPE_DEFAULT" ]
  }, {
    "name" : "public AdvertiseSettings build()",
    "returnType" : "AdvertiseSettings",
    "comment" : " Build the {@link AdvertiseSettings} object. ",
    "links" : [ "android.bluetooth.le.AdvertiseSettings" ]
  } ],
  "methodNames" : [ "public Builder setAdvertiseMode(int advertiseMode)", "public Builder setTxPowerLevel(int txPowerLevel)", "public Builder setConnectable(boolean connectable)", "public Builder setDiscoverable(boolean discoverable)", "public Builder setTimeout(int timeoutMillis)", "public Builder setOwnAddressType(@AddressTypeStatus int ownAddressType)", "public AdvertiseSettings build()" ],
  "variableNames" : [ "mMode", "mTxPowerLevel", "mTimeoutMillis", "mConnectable", "mDiscoverable", "mOwnAddressType" ]
}