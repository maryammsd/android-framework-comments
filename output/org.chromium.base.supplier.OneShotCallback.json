{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/supplier/OneShotCallback.java",
  "packageName" : "org.chromium.base.supplier",
  "className" : "OneShotCallback",
  "comment" : "\n * Helper class to handle safely querying a single instance of an object from an\n * {@link ObservableSupplier}.\n *\n * Assuming the underlying {@link Supplier} gets set with a\n * value, this class will guarantee only a single call makes it back to the passed in\n * {@link Callback}.\n *\n * For {@link ObservableSupplier}s that already have a valid value set, this will have the same\n * underlying behavior as {@link ObservableSupplierImpl}, which asynchronously triggers the callback\n * when {@link ObservableSupplier#addObserver(Callback)} is called.\n *\n * This class does not hold a strong reference to the {@link ObservableSupplier}, but does hold a\n * strong reference to the {@link Callback}.\n *\n * @param <E> The type of the wrapped object.\n ",
  "links" : [ "org.chromium.base.supplier.Supplier", "org.chromium.base.Callback", "org.chromium.base.supplier.ObservableSupplierImpl", "org.chromium.base.supplier.ObservableSupplier", "org.chromium.base.supplier.ObservableSupplier#addObserver(Callback)" ],
  "variables" : [ {
    "name" : "mCallbackWrapper",
    "type" : "Callback<E>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWeakSupplier",
    "type" : "WeakReference<ObservableSupplier<E>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "Callback<E>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "mCallbackWrapper", "mWeakSupplier", "mCallback" ]
}