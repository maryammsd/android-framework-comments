{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/objects/XRTreeFragSelectWrapper.java",
  "packageName" : "org.apache.xpath.objects",
  "className" : "XRTreeFragSelectWrapper",
  "comment" : "\n * This class makes an select statement act like an result tree fragment.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void fixupVariables(java.util.Vector vars, int globalsSize)",
    "returnType" : "void",
    "comment" : "\n   * This function is used to fixup variables from QNames to stack frame \n   * indexes at stylesheet build time.\n   * @param vars List of QNames that correspond to variables.  This list \n   * should be searched backwards for the first qualified name that \n   * corresponds to the variable reference qname.  The position of the \n   * QName in the vector from the start of the vector will be its position \n   * in the stack frame (but variables above the globalsTop value will need \n   * to be offset to the current stack frame).\n   ",
    "links" : [ ]
  }, {
    "name" : "public XObject execute(XPathContext xctxt) throws javax.xml.transform.TransformerException",
    "returnType" : "XObject",
    "comment" : "\n   * For support of literal objects in xpaths.\n   *\n   * @param xctxt The XPath execution context.\n   *\n   * @return the result of executing the select expression\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public void detach()",
    "returnType" : "void",
    "comment" : "\n   * Detaches the <code>DTMIterator</code> from the set which it iterated\n   * over, releasing any computational resources and placing the iterator\n   * in the INVALID state. After <code>detach</code> has been invoked,\n   * calls to <code>nextNode</code> or <code>previousNode</code> will\n   * raise a runtime exception.\n   * \n   * In general, detach should only be called once on the object.\n   ",
    "links" : [ ]
  }, {
    "name" : "public double num() throws javax.xml.transform.TransformerException",
    "returnType" : "double",
    "comment" : "\n   * Cast result object to a number.\n   *\n   * @return The result tree fragment as a number or NaN\n   ",
    "links" : [ ]
  }, {
    "name" : "public XMLString xstr()",
    "returnType" : "XMLString",
    "comment" : "\n   * Cast result object to an XMLString.\n   *\n   * @return The document fragment node data or the empty string. \n   ",
    "links" : [ ]
  }, {
    "name" : "public String str()",
    "returnType" : "String",
    "comment" : "\n   * Cast result object to a string.\n   *\n   * @return The document fragment node data or the empty string. \n   ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n   * Tell what kind of class this is.\n   *\n   * @return the string type\n   ",
    "links" : [ ]
  }, {
    "name" : "public int rtf()",
    "returnType" : "int",
    "comment" : "\n   * Cast result object to a result tree fragment.\n   *\n   * @return The document fragment this wraps\n   ",
    "links" : [ ]
  }, {
    "name" : "public DTMIterator asNodeIterator()",
    "returnType" : "DTMIterator",
    "comment" : "\n   * Cast result object to a DTMIterator.\n   *\n   * @return The document fragment as a DTMIterator\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void fixupVariables(java.util.Vector vars, int globalsSize)", "public XObject execute(XPathContext xctxt) throws javax.xml.transform.TransformerException", "public void detach()", "public double num() throws javax.xml.transform.TransformerException", "public XMLString xstr()", "public String str()", "public int getType()", "public int rtf()", "public DTMIterator asNodeIterator()" ],
  "variableNames" : [ "serialVersionUID" ]
}