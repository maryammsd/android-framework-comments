{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/PackageUtils.java",
  "packageName" : "org.chromium.base",
  "className" : "PackageUtils",
  "comment" : " This class provides package checking related methods. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HEX_CHAR_LOOKUP",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static PackageInfo getPackageInfo(String packageName, int flags)",
    "returnType" : "PackageInfo",
    "comment" : " Retrieves the PackageInfo for the given package, or null if it is not installed. ",
    "links" : [ ]
  }, {
    "name" : "public static int getPackageVersion(String packageName)",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the version of the given package installed on the device.\n     *\n     * @param packageName Name of the package to find.\n     * @return The package's version code if found, -1 otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getPackageVersion(Context unused, String packageName)",
    "returnType" : "int",
    "comment" : " TODO(agrieve): Delete downstream references.",
    "links" : [ ]
  }, {
    "name" : "public static boolean isPackageInstalled(String packageName)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the app has been installed on the system.\n     * @return true if the PackageManager reports that the app is installed, false otherwise.\n     * @param packageName Name of the package to check.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static PackageInfo getApplicationPackageInfo(int flags)",
    "returnType" : "PackageInfo",
    "comment" : " Returns the PackageInfo for the current app, as retrieve by PackageManager. ",
    "links" : [ ]
  }, {
    "name" : "public static List<String> getCertificateSHA256FingerprintForPackage(String packageName)",
    "returnType" : "List<String>",
    "comment" : "\n     * Computes the SHA256 certificates for the given package name. The app with the given package\n     * name has to be installed on device. The output will be a list of 30 long HEX strings with :\n     * between each value. There will be one string for each signature the app is signed with.\n     * @param packageName The package name to query the signature for.\n     * @return The SHA256 certificate for the package name.\n     ",
    "links" : [ ]
  }, {
    "name" : " static String byteArrayToHexString(byte[] byteArray)",
    "returnType" : "String",
    "comment" : "\n     * Converts a byte array to hex string with : inserted between each element.\n     * @param byteArray The array to be converted.\n     * @return A string with two letters representing each byte and : in between.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static PackageInfo getPackageInfo(String packageName, int flags)", "public static int getPackageVersion(String packageName)", "public static int getPackageVersion(Context unused, String packageName)", "public static boolean isPackageInstalled(String packageName)", "public static PackageInfo getApplicationPackageInfo(int flags)", "public static List<String> getCertificateSHA256FingerprintForPackage(String packageName)", " static String byteArrayToHexString(byte[] byteArray)" ],
  "variableNames" : [ "TAG", "HEX_CHAR_LOOKUP" ]
}