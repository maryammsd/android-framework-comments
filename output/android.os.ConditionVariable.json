{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/ConditionVariable.java",
  "packageName" : "android.os",
  "className" : "ConditionVariable",
  "comment" : "\n * Class that implements the condition variable locking paradigm.\n *\n * <p>\n * This differs from the built-in java.lang.Object wait() and notify()\n * in that this class contains the condition to wait on itself.  That means\n * open(), close() and block() are sticky.  If open() is called before block(),\n * block() will not block, and instead return immediately.\n *\n * <p>\n * This class uses itself as the object to wait on, so if you wait()\n * or notify() on a ConditionVariable, the results are undefined.\n ",
  "variables" : [ {
    "name" : "mCondition",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void open()",
    "returnType" : "void",
    "comment" : "\n     * Open the condition, and release all threads that are blocked.\n     *\n     * <p>\n     * Any threads that later approach block() will not block unless close()\n     * is called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Reset the condition to the closed state.\n     *\n     * <p>\n     * Any threads that call block() will block until someone calls open.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void block()",
    "returnType" : "void",
    "comment" : "\n     * Block the current thread until the condition is opened.\n     *\n     * <p>\n     * If the condition is already opened, return immediately.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean block(long timeoutMs)",
    "returnType" : "boolean",
    "comment" : "\n     * Block the current thread until the condition is opened or until\n     * timeoutMs milliseconds have passed.\n     *\n     * <p>\n     * If the condition is already opened, return immediately.\n     *\n     * @param timeoutMs the maximum time to wait in milliseconds.\n     *\n     * @return true if the condition was opened, false if the call returns\n     * because of the timeout.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mCondition" ],
  "methodNames" : [ "public void open()", "public void close()", "public void block()", "public boolean block(long timeoutMs)" ]
}