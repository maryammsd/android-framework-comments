{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/tuner/filter/MmtpRecordEvent.java",
  "packageName" : "android.media.tv.tuner.filter",
  "className" : "MmtpRecordEvent",
  "comment" : "\n * Filter event sent from {@link Filter} objects with MPEG media Transport Protocol(MMTP) type.\n *\n * @hide\n ",
  "links" : [ "android.media.tv.tuner.filter.Filter" ],
  "variables" : [ {
    "name" : "mScHevcIndexMask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDataLength",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMpuSequenceNumber",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPts",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFirstMbInSlice",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTsIndexMask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getScHevcIndexMask()",
    "returnType" : "int",
    "comment" : "\n     * Gets indexes which can be tagged by NAL unit group in HEVC according to ISO/IEC 23008-2.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getDataLength()",
    "returnType" : "long",
    "comment" : "\n     * Gets the record data offset from the beginning of the record buffer.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMpuSequenceNumber()",
    "returnType" : "int",
    "comment" : "\n     * Get the MPU sequence number of the filtered data.\n     *\n     * <p>This field is only supported in Tuner 1.1 or higher version. Unsupported version will\n     * return {@link android.media.tv.tuner.Tuner#INVALID_MMTP_RECORD_EVENT_MPT_SEQUENCE_NUM}. Use\n     * {@link android.media.tv.tuner.TunerVersionChecker#getTunerVersion()} to get the version\n     * information.\n     ",
    "links" : [ "android.media.tv.tuner.Tuner#INVALID_MMTP_RECORD_EVENT_MPT_SEQUENCE_NUM", "android.media.tv.tuner.TunerVersionChecker#getTunerVersion()" ]
  }, {
    "name" : "public long getPts()",
    "returnType" : "long",
    "comment" : "\n     * Get the Presentation Time Stamp(PTS) for the audio or video frame. It is based on 90KHz\n     * and has the same format as the PTS in ISO/IEC 13818-1.\n     *\n     * <p>This field is only supported in Tuner 1.1 or higher version. Unsupported version will\n     * return {@link android.media.tv.tuner.Tuner#INVALID_TIMESTAMP}. Use\n     * {@link android.media.tv.tuner.TunerVersionChecker#getTunerVersion()} to get the version\n     * information.\n     ",
    "links" : [ "android.media.tv.tuner.TunerVersionChecker#getTunerVersion()", "android.media.tv.tuner.Tuner#INVALID_TIMESTAMP" ]
  }, {
    "name" : "public int getFirstMacroblockInSlice()",
    "returnType" : "int",
    "comment" : "\n     * Get the address of the first macroblock in the slice defined in ITU-T Rec. H.264.\n     *\n     * <p>This field is only supported in Tuner 1.1 or higher version. Unsupported version will\n     * return {@link android.media.tv.tuner.Tuner#INVALID_FIRST_MACROBLOCK_IN_SLICE}. Use\n     * {@link android.media.tv.tuner.TunerVersionChecker#getTunerVersion()} to get the version\n     * information.\n     ",
    "links" : [ "android.media.tv.tuner.Tuner#INVALID_FIRST_MACROBLOCK_IN_SLICE", "android.media.tv.tuner.TunerVersionChecker#getTunerVersion()" ]
  }, {
    "name" : "public int getTsIndexMask()",
    "returnType" : "int",
    "comment" : "\n     * Get the offset of the recorded keyframe from MMT Packet Table.\n     *\n     * <p>This field is only supported in Tuner 1.1 or higher version. Unsupported version will\n     * return {@link RecordSettings#TS_INDEX_INVALID}. Use\n     * {@link android.media.tv.tuner.TunerVersionChecker#getTunerVersion()} to get the\n     * version information.\n     ",
    "links" : [ "android.media.tv.tuner.TunerVersionChecker#getTunerVersion()", "android.media.tv.tuner.filter.RecordSettings#TS_INDEX_INVALID" ]
  } ],
  "methodNames" : [ "public int getScHevcIndexMask()", "public long getDataLength()", "public int getMpuSequenceNumber()", "public long getPts()", "public int getFirstMacroblockInSlice()", "public int getTsIndexMask()" ],
  "variableNames" : [ "mScHevcIndexMask", "mDataLength", "mMpuSequenceNumber", "mPts", "mFirstMbInSlice", "mTsIndexMask" ]
}