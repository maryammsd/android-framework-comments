{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/renderscript/RenderScript.java",
  "packageName" : "android.renderscript",
  "className" : "RenderScript",
  "comment" : "\n * This class provides access to a RenderScript context, which controls RenderScript\n * initialization, resource management, and teardown. An instance of the RenderScript\n * class must be created before any other RS objects can be created.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For more information about creating an application that uses RenderScript, read the\n * <a href=\"{@docRoot}guide/topics/renderscript/index.html\">RenderScript</a> developer guide.</p>\n * </div>\n *",
  "variables" : [ {
    "name" : "TRACE_TAG",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOG_ENABLED",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProcessContextList",
    "type" : "ArrayList<RenderScript>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsProcessContext",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContextFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContextSdkVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mApplicationContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sInitialized",
    "type" : "boolean",
    "comment" : "\n     * We use a class initializer to allow the native code to cache some\n     * field offsets.\n     ",
    "links" : [ ]
  }, {
    "name" : "sRuntime",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "registerNativeAllocation",
    "type" : "Method",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "registerNativeFree",
    "type" : "Method",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATE_FLAG_NONE",
    "type" : "int",
    "comment" : "\n     * Context creation flag that specifies a normal context.\n    ",
    "links" : [ ]
  }, {
    "name" : "CREATE_FLAG_LOW_LATENCY",
    "type" : "int",
    "comment" : "\n     * Context creation flag which specifies a context optimized for low\n     * latency over peak performance. This is a hint and may have no effect\n     * on some implementations.\n    ",
    "links" : [ ]
  }, {
    "name" : "CREATE_FLAG_LOW_POWER",
    "type" : "int",
    "comment" : "\n     * Context creation flag which specifies a context optimized for long\n     * battery life over peak performance. This is a hint and may have no effect\n     * on some implementations.\n    ",
    "links" : [ ]
  }, {
    "name" : "CREATE_FLAG_WAIT_FOR_ATTACH",
    "type" : "int",
    "comment" : "\n     * @hide\n     * Context creation flag which instructs the implementation to wait for\n     * a debugger to be attached before continuing execution.\n    ",
    "links" : [ ]
  }, {
    "name" : "sPointerSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sMinorVersion",
    "type" : "long",
    "comment" : " used in conjunction with the API version of a device",
    "links" : [ ]
  }, {
    "name" : "mContextType",
    "type" : "ContextType",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRWLock",
    "type" : "ReentrantReadWriteLock",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDestroyed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageThread",
    "type" : "MessageThread",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_U8",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_I8",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_U16",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_I16",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_U32",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_I32",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_U64",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_I64",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_F16",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_F32",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_F64",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_BOOLEAN",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_ELEMENT",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_TYPE",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_ALLOCATION",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_SAMPLER",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_SCRIPT",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_MESH",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_PROGRAM_FRAGMENT",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_PROGRAM_VERTEX",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_PROGRAM_RASTER",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_PROGRAM_STORE",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_FONT",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_A_8",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_RGB_565",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_RGB_888",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_RGBA_5551",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_RGBA_4444",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_RGBA_8888",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_HALF_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_HALF_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_HALF_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_FLOAT_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_FLOAT_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_FLOAT_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_DOUBLE_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_DOUBLE_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_DOUBLE_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_UCHAR_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_UCHAR_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_UCHAR_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_CHAR_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_CHAR_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_CHAR_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_USHORT_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_USHORT_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_USHORT_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_SHORT_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_SHORT_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_SHORT_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_UINT_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_UINT_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_UINT_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_INT_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_INT_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_INT_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_ULONG_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_ULONG_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_ULONG_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_LONG_2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_LONG_3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_LONG_4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_YUV",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_MATRIX_4X4",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_MATRIX_3X3",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement_MATRIX_2X2",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_CLAMP_NEAREST",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_CLAMP_LINEAR",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_CLAMP_LINEAR_MIP_LINEAR",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_WRAP_NEAREST",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_WRAP_LINEAR",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_WRAP_LINEAR_MIP_LINEAR",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_MIRRORED_REPEAT_NEAREST",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_MIRRORED_REPEAT_LINEAR",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR",
    "type" : "Sampler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgramStore_BLEND_NONE_DEPTH_TEST",
    "type" : "ProgramStore",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgramStore_BLEND_NONE_DEPTH_NO_DEPTH",
    "type" : "ProgramStore",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgramStore_BLEND_ALPHA_DEPTH_TEST",
    "type" : "ProgramStore",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgramStore_BLEND_ALPHA_DEPTH_NO_DEPTH",
    "type" : "ProgramStore",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgramRaster_CULL_BACK",
    "type" : "ProgramRaster",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgramRaster_CULL_FRONT",
    "type" : "ProgramRaster",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgramRaster_CULL_NONE",
    "type" : "ProgramRaster",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageCallback",
    "type" : "RSMessageHandler",
    "comment" : "\n     * If an application is expecting messages, it should set this\n     * field to an instance of {@link RSMessageHandler}.  This\n     * instance will receive all the user messages sent from {@code\n     * sendToClient} by scripts from this context.\n     *\n     ",
    "links" : [ "RSMessageHandler" ]
  }, {
    "name" : "mErrorCallback",
    "type" : "RSErrorHandler",
    "comment" : "\n     * Application Error handler.  All runtime errors will be dispatched to the\n     * instance of RSAsyncError set here.  If this field is null a\n     * {@link RSRuntimeException} will instead be thrown with details about the error.\n     * This will cause program termaination.\n     *\n     ",
    "links" : [ "android.renderscript.RSRuntimeException" ]
  }, {
    "name" : "mCachePath",
    "type" : "String",
    "comment" : "\n     * Name of the file that holds the object cache.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static native void _nInit()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static native int rsnSystemGetPointerSize()",
    "returnType" : "int",
    "comment" : "\n     * Detect the bitness of the VM to allow FieldPacker to do the right thing.\n     ",
    "links" : [ ]
  }, {
    "name" : " native long nDeviceCreate()",
    "returnType" : "long",
    "comment" : " Non-threadsafe functions.",
    "links" : [ ]
  }, {
    "name" : " native void nDeviceDestroy(long dev)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void nDeviceSetConfig(long dev, int param, int value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native int nContextGetUserMessage(long con, int[] data)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native String nContextGetErrorMessage(long con)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native int nContextPeekMessage(long con, int[] subID)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void nContextInitToClient(long con)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void nContextDeinitToClient(long con)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static long getMinorID()",
    "returnType" : "long",
    "comment" : "\n     * @hide\n     *\n     * Only exist to be compatible with old version RenderScript Support lib.\n     * Will eventually be removed.\n     *\n     * @return Always return 1\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long getMinorVersion()",
    "returnType" : "long",
    "comment" : "\n     * Returns an identifier that can be used to identify a particular\n     * minor version of RS.\n     *\n     * @return The minor RenderScript version number\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : " native long rsnContextCreateGL(long dev, int ver, int sdkVer, int colorMin, int colorPref, int alphaMin, int alphaPref, int depthMin, int depthPref, int stencilMin, int stencilPref, int samplesMin, int samplesPref, float samplesQ, int dpi)",
    "returnType" : "long",
    "comment" : " lockless fifo.",
    "links" : [ ]
  }, {
    "name" : " synchronized long nContextCreateGL(long dev, int ver, int sdkVer, int colorMin, int colorPref, int alphaMin, int alphaPref, int depthMin, int depthPref, int stencilMin, int stencilPref, int samplesMin, int samplesPref, float samplesQ, int dpi)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnContextCreate(long dev, int ver, int sdkVer, int contextType)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nContextCreate(long dev, int ver, int sdkVer, int contextType)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextDestroy(long con)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextDestroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextSetSurface(long con, int w, int h, Surface sur)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextSetSurface(int w, int h, Surface sur)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextSetSurfaceTexture(long con, int w, int h, SurfaceTexture sur)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextSetSurfaceTexture(int w, int h, SurfaceTexture sur)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextSetPriority(long con, int p)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextSetPriority(int p)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextSetCacheDir(long con, String cacheDir)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextSetCacheDir(String cacheDir)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextDump(long con, int bits)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextDump(int bits)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextFinish(long con)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextFinish()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextSendMessage(long con, int id, int[] data)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextSendMessage(int id, int[] data)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextBindRootScript(long con, long script)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextBindRootScript(long script)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextBindSampler(long con, int sampler, int slot)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextBindSampler(int sampler, int slot)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextBindProgramStore(long con, long pfs)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextBindProgramStore(long pfs)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextBindProgramFragment(long con, long pf)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextBindProgramFragment(long pf)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextBindProgramVertex(long con, long pv)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextBindProgramVertex(long pv)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextBindProgramRaster(long con, long pr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextBindProgramRaster(long pr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextPause(long con)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextPause()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnContextResume(long con)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nContextResume()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnClosureCreate(long con, long kernelID, long returnValue, long[] fieldIDs, long[] values, int[] sizes, long[] depClosures, long[] depFieldIDs)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nClosureCreate(long kernelID, long returnValue, long[] fieldIDs, long[] values, int[] sizes, long[] depClosures, long[] depFieldIDs)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnInvokeClosureCreate(long con, long invokeID, byte[] params, long[] fieldIDs, long[] values, int[] sizes)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nInvokeClosureCreate(long invokeID, byte[] params, long[] fieldIDs, long[] values, int[] sizes)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnClosureSetArg(long con, long closureID, int index, long value, int size)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nClosureSetArg(long closureID, int index, long value, int size)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnClosureSetGlobal(long con, long closureID, long fieldID, long value, int size)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nClosureSetGlobal(long closureID, long fieldID, long value, int size)",
    "returnType" : "void",
    "comment" : " Does this have to be synchronized?",
    "links" : [ ]
  }, {
    "name" : " native long rsnScriptGroup2Create(long con, String name, String cachePath, long[] closures)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nScriptGroup2Create(String name, String cachePath, long[] closures)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptGroup2Execute(long con, long groupID)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptGroup2Execute(long groupID)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAssignName(long con, long obj, byte[] name)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAssignName(long obj, byte[] name)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native String rsnGetName(long con, long obj)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized String nGetName(long obj)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnObjDestroy(long con, long id)",
    "returnType" : "void",
    "comment" : " nObjDestroy is explicitly _not_ synchronous to prevent crashes in finalizers",
    "links" : [ ]
  }, {
    "name" : " void nObjDestroy(long id)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnElementCreate(long con, long type, int kind, boolean norm, int vecSize)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nElementCreate(long type, int kind, boolean norm, int vecSize)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnElementCreate2(long con, long[] elements, String[] names, int[] arraySizes)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nElementCreate2(long[] elements, String[] names, int[] arraySizes)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnElementGetNativeData(long con, long id, int[] elementData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nElementGetNativeData(long id, int[] elementData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnElementGetSubElements(long con, long id, long[] IDs, String[] names, int[] arraySizes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nElementGetSubElements(long id, long[] IDs, String[] names, int[] arraySizes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnTypeCreate(long con, long eid, int x, int y, int z, boolean mips, boolean faces, int yuv)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nTypeCreate(long eid, int x, int y, int z, boolean mips, boolean faces, int yuv)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnTypeGetNativeData(long con, long id, long[] typeData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nTypeGetNativeData(long id, long[] typeData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnAllocationCreateTyped(long con, long type, int mip, int usage, long pointer)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nAllocationCreateTyped(long type, int mip, int usage, long pointer)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnAllocationCreateFromBitmap(long con, long type, int mip, Bitmap bmp, int usage)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nAllocationCreateFromBitmap(long type, int mip, Bitmap bmp, int usage)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnAllocationCreateBitmapBackedAllocation(long con, long type, int mip, Bitmap bmp, int usage)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nAllocationCreateBitmapBackedAllocation(long type, int mip, Bitmap bmp, int usage)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnAllocationCubeCreateFromBitmap(long con, long type, int mip, Bitmap bmp, int usage)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nAllocationCubeCreateFromBitmap(long type, int mip, Bitmap bmp, int usage)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationCopyToBitmap(long con, long alloc, Bitmap bmp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationCopyToBitmap(long alloc, Bitmap bmp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationSyncAll(long con, long alloc, int src)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationSyncAll(long alloc, int src)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native ByteBuffer rsnAllocationGetByteBuffer(long con, long alloc, long[] stride, int xBytesSize, int dimY, int dimZ)",
    "returnType" : "ByteBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized ByteBuffer nAllocationGetByteBuffer(long alloc, long[] stride, int xBytesSize, int dimY, int dimZ)",
    "returnType" : "ByteBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationSetupBufferQueue(long con, long alloc, int numAlloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationSetupBufferQueue(long alloc, int numAlloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationShareBufferQueue(long con, long alloc1, long alloc2)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationShareBufferQueue(long alloc1, long alloc2)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native Surface rsnAllocationGetSurface(long con, long alloc)",
    "returnType" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized Surface nAllocationGetSurface(long alloc)",
    "returnType" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationSetSurface(long con, long alloc, Surface sur)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationSetSurface(long alloc, Surface sur)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationIoSend(long con, long alloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationIoSend(long alloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnAllocationIoReceive(long con, long alloc)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nAllocationIoReceive(long alloc)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationGenerateMipmaps(long con, long alloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationGenerateMipmaps(long alloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationCopyFromBitmap(long con, long alloc, Bitmap bmp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationCopyFromBitmap(long alloc, Bitmap bmp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationData1D(long con, long id, int off, int mip, int count, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationData1D(long id, int off, int mip, int count, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationElementData(long con, long id, int xoff, int yoff, int zoff, int mip, int compIdx, byte[] d, int sizeBytes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationElementData(long id, int xoff, int yoff, int zoff, int mip, int compIdx, byte[] d, int sizeBytes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationData2D(long con, long dstAlloc, int dstXoff, int dstYoff, int dstMip, int dstFace, int width, int height, long srcAlloc, int srcXoff, int srcYoff, int srcMip, int srcFace)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationData2D(long dstAlloc, int dstXoff, int dstYoff, int dstMip, int dstFace, int width, int height, long srcAlloc, int srcXoff, int srcYoff, int srcMip, int srcFace)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationData2D(long con, long id, int xoff, int yoff, int mip, int face, int w, int h, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationData2D(long id, int xoff, int yoff, int mip, int face, int w, int h, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationData2D(long con, long id, int xoff, int yoff, int mip, int face, Bitmap b)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationData2D(long id, int xoff, int yoff, int mip, int face, Bitmap b)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationData3D(long con, long dstAlloc, int dstXoff, int dstYoff, int dstZoff, int dstMip, int width, int height, int depth, long srcAlloc, int srcXoff, int srcYoff, int srcZoff, int srcMip)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationData3D(long dstAlloc, int dstXoff, int dstYoff, int dstZoff, int dstMip, int width, int height, int depth, long srcAlloc, int srcXoff, int srcYoff, int srcZoff, int srcMip)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationData3D(long con, long id, int xoff, int yoff, int zoff, int mip, int w, int h, int depth, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationData3D(long id, int xoff, int yoff, int zoff, int mip, int w, int h, int depth, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationRead(long con, long id, Object d, int dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationRead(long id, Object d, Element.DataType dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationRead1D(long con, long id, int off, int mip, int count, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationRead1D(long id, int off, int mip, int count, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationElementRead(long con, long id, int xoff, int yoff, int zoff, int mip, int compIdx, byte[] d, int sizeBytes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationElementRead(long id, int xoff, int yoff, int zoff, int mip, int compIdx, byte[] d, int sizeBytes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationRead2D(long con, long id, int xoff, int yoff, int mip, int face, int w, int h, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationRead2D(long id, int xoff, int yoff, int mip, int face, int w, int h, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationRead3D(long con, long id, int xoff, int yoff, int zoff, int mip, int w, int h, int depth, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationRead3D(long id, int xoff, int yoff, int zoff, int mip, int w, int h, int depth, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnAllocationGetType(long con, long id)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nAllocationGetType(long id)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationResize1D(long con, long id, int dimX)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationResize1D(long id, int dimX)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnAllocationAdapterCreate(long con, long allocId, long typeId)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nAllocationAdapterCreate(long allocId, long typeId)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnAllocationAdapterOffset(long con, long id, int x, int y, int z, int mip, int face, int a1, int a2, int a3, int a4)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nAllocationAdapterOffset(long id, int x, int y, int z, int mip, int face, int a1, int a2, int a3, int a4)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnFileA3DCreateFromAssetStream(long con, long assetStream)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nFileA3DCreateFromAssetStream(long assetStream)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnFileA3DCreateFromFile(long con, String path)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nFileA3DCreateFromFile(String path)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnFileA3DCreateFromAsset(long con, AssetManager mgr, String path)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nFileA3DCreateFromAsset(AssetManager mgr, String path)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native int rsnFileA3DGetNumIndexEntries(long con, long fileA3D)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized int nFileA3DGetNumIndexEntries(long fileA3D)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnFileA3DGetIndexEntries(long con, long fileA3D, int numEntries, int[] IDs, String[] names)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nFileA3DGetIndexEntries(long fileA3D, int numEntries, int[] IDs, String[] names)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnFileA3DGetEntryByIndex(long con, long fileA3D, int index)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nFileA3DGetEntryByIndex(long fileA3D, int index)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnFontCreateFromFile(long con, String fileName, float size, int dpi)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nFontCreateFromFile(String fileName, float size, int dpi)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnFontCreateFromAssetStream(long con, String name, float size, int dpi, long assetStream)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nFontCreateFromAssetStream(String name, float size, int dpi, long assetStream)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnFontCreateFromAsset(long con, AssetManager mgr, String path, float size, int dpi)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nFontCreateFromAsset(AssetManager mgr, String path, float size, int dpi)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptBindAllocation(long con, long script, long alloc, int slot)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptBindAllocation(long script, long alloc, int slot)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptSetTimeZone(long con, long script, byte[] timeZone)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptSetTimeZone(long script, byte[] timeZone)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptInvoke(long con, long id, int slot)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptInvoke(long id, int slot)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptForEach(long con, long id, int slot, long[] ains, long aout, byte[] params, int[] limits)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptForEach(long id, int slot, long[] ains, long aout, byte[] params, int[] limits)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptReduce(long con, long id, int slot, long[] ains, long aout, int[] limits)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptReduce(long id, int slot, long[] ains, long aout, int[] limits)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptInvokeV(long con, long id, int slot, byte[] params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptInvokeV(long id, int slot, byte[] params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptSetVarI(long con, long id, int slot, int val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptSetVarI(long id, int slot, int val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native int rsnScriptGetVarI(long con, long id, int slot)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized int nScriptGetVarI(long id, int slot)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptSetVarJ(long con, long id, int slot, long val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptSetVarJ(long id, int slot, long val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnScriptGetVarJ(long con, long id, int slot)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nScriptGetVarJ(long id, int slot)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptSetVarF(long con, long id, int slot, float val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptSetVarF(long id, int slot, float val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native float rsnScriptGetVarF(long con, long id, int slot)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized float nScriptGetVarF(long id, int slot)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptSetVarD(long con, long id, int slot, double val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptSetVarD(long id, int slot, double val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native double rsnScriptGetVarD(long con, long id, int slot)",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized double nScriptGetVarD(long id, int slot)",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptSetVarV(long con, long id, int slot, byte[] val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptSetVarV(long id, int slot, byte[] val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptGetVarV(long con, long id, int slot, byte[] val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptGetVarV(long id, int slot, byte[] val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptSetVarVE(long con, long id, int slot, byte[] val, long e, int[] dims)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptSetVarVE(long id, int slot, byte[] val, long e, int[] dims)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptSetVarObj(long con, long id, int slot, long val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptSetVarObj(long id, int slot, long val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnScriptCCreate(long con, String resName, String cacheDir, byte[] script, int length)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nScriptCCreate(String resName, String cacheDir, byte[] script, int length)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnScriptIntrinsicCreate(long con, int id, long eid)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nScriptIntrinsicCreate(int id, long eid)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnScriptKernelIDCreate(long con, long sid, int slot, int sig)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nScriptKernelIDCreate(long sid, int slot, int sig)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnScriptInvokeIDCreate(long con, long sid, int slot)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nScriptInvokeIDCreate(long sid, int slot)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnScriptFieldIDCreate(long con, long sid, int slot)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nScriptFieldIDCreate(long sid, int slot)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnScriptGroupCreate(long con, long[] kernels, long[] src, long[] dstk, long[] dstf, long[] types)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nScriptGroupCreate(long[] kernels, long[] src, long[] dstk, long[] dstf, long[] types)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptGroupSetInput(long con, long group, long kernel, long alloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptGroupSetInput(long group, long kernel, long alloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptGroupSetOutput(long con, long group, long kernel, long alloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptGroupSetOutput(long group, long kernel, long alloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptGroupExecute(long con, long group)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptGroupExecute(long group)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnSamplerCreate(long con, int magFilter, int minFilter, int wrapS, int wrapT, int wrapR, float aniso)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nSamplerCreate(int magFilter, int minFilter, int wrapS, int wrapT, int wrapR, float aniso)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnProgramStoreCreate(long con, boolean r, boolean g, boolean b, boolean a, boolean depthMask, boolean dither, int srcMode, int dstMode, int depthFunc)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nProgramStoreCreate(boolean r, boolean g, boolean b, boolean a, boolean depthMask, boolean dither, int srcMode, int dstMode, int depthFunc)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnProgramRasterCreate(long con, boolean pointSprite, int cullMode)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nProgramRasterCreate(boolean pointSprite, int cullMode)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnProgramBindConstants(long con, long pv, int slot, long mID)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nProgramBindConstants(long pv, int slot, long mID)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnProgramBindTexture(long con, long vpf, int slot, long a)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nProgramBindTexture(long vpf, int slot, long a)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnProgramBindSampler(long con, long vpf, int slot, long s)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nProgramBindSampler(long vpf, int slot, long s)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnProgramFragmentCreate(long con, String shader, String[] texNames, long[] params)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nProgramFragmentCreate(String shader, String[] texNames, long[] params)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnProgramVertexCreate(long con, String shader, String[] texNames, long[] params)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nProgramVertexCreate(String shader, String[] texNames, long[] params)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native long rsnMeshCreate(long con, long[] vtx, long[] idx, int[] prim)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized long nMeshCreate(long[] vtx, long[] idx, int[] prim)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native int rsnMeshGetVertexBufferCount(long con, long id)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized int nMeshGetVertexBufferCount(long id)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native int rsnMeshGetIndexCount(long con, long id)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized int nMeshGetIndexCount(long id)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnMeshGetVertices(long con, long id, long[] vtxIds, int vtxIdCount)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nMeshGetVertices(long id, long[] vtxIds, int vtxIdCount)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnMeshGetIndices(long con, long id, long[] idxIds, int[] primitives, int vtxIdCount)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nMeshGetIndices(long id, long[] idxIds, int[] primitives, int vtxIdCount)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptIntrinsicBLAS_Single(long con, long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, float alpha, long A, long B, float beta, long C, int incX, int incY, int KL, int KU)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptIntrinsicBLAS_Single(long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, float alpha, long A, long B, float beta, long C, int incX, int incY, int KL, int KU)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptIntrinsicBLAS_Double(long con, long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, double alpha, long A, long B, double beta, long C, int incX, int incY, int KL, int KU)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptIntrinsicBLAS_Double(long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, double alpha, long A, long B, double beta, long C, int incX, int incY, int KL, int KU)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptIntrinsicBLAS_Complex(long con, long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, float alphaX, float alphaY, long A, long B, float betaX, float betaY, long C, int incX, int incY, int KL, int KU)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptIntrinsicBLAS_Complex(long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, float alphaX, float alphaY, long A, long B, float betaX, float betaY, long C, int incX, int incY, int KL, int KU)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptIntrinsicBLAS_Z(long con, long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, double alphaX, double alphaY, long A, long B, double betaX, double betaY, long C, int incX, int incY, int KL, int KU)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptIntrinsicBLAS_Z(long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, double alphaX, double alphaY, long A, long B, double betaX, double betaY, long C, int incX, int incY, int KL, int KU)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " native void rsnScriptIntrinsicBLAS_BNNM(long con, long id, int M, int N, int K, long A, int a_offset, long B, int b_offset, long C, int c_offset, int c_mult_int)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void nScriptIntrinsicBLAS_BNNM(long id, int M, int N, int K, long A, int a_offset, long B, int b_offset, long C, int c_offset, int c_mult_int)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMessageHandler(RSMessageHandler msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RSMessageHandler getMessageHandler()",
    "returnType" : "RSMessageHandler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendMessage(int id, int[] data)",
    "returnType" : "void",
    "comment" : "\n     * Place a message into the message queue to be sent back to the message\n     * handler once all previous commands have been executed.\n     *\n     * @param id\n     * @param data\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setErrorHandler(RSErrorHandler msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RSErrorHandler getErrorHandler()",
    "returnType" : "RSErrorHandler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void validateObject(BaseObj o)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void validate()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPriority(Priority p)",
    "returnType" : "void",
    "comment" : "\n     * Change the priority of the worker threads for this context.\n     *\n     * @param p New priority to be set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final Context getApplicationContext()",
    "returnType" : "Context",
    "comment" : "\n     * Gets the application context associated with the RenderScript context.\n     *\n     * @return The application context.\n     ",
    "links" : [ ]
  }, {
    "name" : " static synchronized String getCachePath()",
    "returnType" : "String",
    "comment" : "\n     * Gets the path to the code cache.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static RenderScript internalCreate(Context ctx, int sdkVersion, ContextType ct, int flags)",
    "returnType" : "RenderScript",
    "comment" : "\n     * Create a RenderScript context.\n     *\n     * @param ctx The context.\n     * @return RenderScript\n     ",
    "links" : [ ]
  }, {
    "name" : "public static RenderScript create(Context ctx)",
    "returnType" : "RenderScript",
    "comment" : "\n     * calls create(ctx, ContextType.NORMAL, CREATE_FLAG_NONE)\n     *\n     * See documentation for @create for details\n     *\n     * @param ctx The context.\n     * @return RenderScript\n     ",
    "links" : [ ]
  }, {
    "name" : "public static RenderScript create(Context ctx, ContextType ct)",
    "returnType" : "RenderScript",
    "comment" : "\n     * calls create(ctx, ct, CREATE_FLAG_NONE)\n     *\n     * See documentation for @create for details\n     *\n     * @param ctx The context.\n     * @param ct The type of context to be created.\n     * @return RenderScript\n     ",
    "links" : [ ]
  }, {
    "name" : "public static RenderScript create(Context ctx, ContextType ct, int flags)",
    "returnType" : "RenderScript",
    "comment" : "\n     * Gets or creates a RenderScript context of the specified type.\n     *\n     * The returned context will be cached for future reuse within\n     * the process. When an application is finished using\n     * RenderScript it should call releaseAllContexts()\n     *\n     * A process context is a context designed for easy creation and\n     * lifecycle management.  Multiple calls to this function will\n     * return the same object provided they are called with the same\n     * options.  This allows it to be used any time a RenderScript\n     * context is needed.\n     *\n     * Prior to API 23 this always created a new context.\n     *\n     * @param ctx The context.\n     * @param ct The type of context to be created.\n     * @param flags The OR of the CREATE_FLAG_* options desired\n     * @return RenderScript\n     ",
    "links" : [ ]
  }, {
    "name" : "public static RenderScript create(Context ctx, int sdkVersion)",
    "returnType" : "RenderScript",
    "comment" : "\n     * calls create(ctx, sdkVersion, ContextType.NORMAL, CREATE_FLAG_NONE)\n     *\n     * Used by the RenderScriptThunker to maintain backward compatibility.\n     *\n     * @hide\n     * @param ctx The context.\n     * @param sdkVersion The target SDK Version.\n     * @return RenderScript\n     ",
    "links" : [ ]
  }, {
    "name" : "private static RenderScript create(Context ctx, int sdkVersion, ContextType ct, int flags)",
    "returnType" : "RenderScript",
    "comment" : "\n     * Gets or creates a RenderScript context of the specified type.\n     *\n     * @param ctx The context.\n     * @param ct The type of context to be created.\n     * @param sdkVersion The target SDK Version.\n     * @param flags The OR of the CREATE_FLAG_* options desired\n     * @return RenderScript\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void releaseAllContexts()",
    "returnType" : "void",
    "comment" : "\n     * Releases all the process contexts.  This is the same as\n     * calling .destroy() on each unique context retreived with\n     * create(...). If no contexts have been created this\n     * function does nothing.\n     *\n     * Typically you call this when your application is losing focus\n     * and will not be using a context for some time.\n     *\n     * This has no effect on a context created with\n     * createMultiContext()\n     ",
    "links" : [ ]
  }, {
    "name" : "public static RenderScript createMultiContext(Context ctx, ContextType ct, int flags, int API_number)",
    "returnType" : "RenderScript",
    "comment" : "\n     * Create a RenderScript context.\n     *\n     * This is an advanced function intended for applications which\n     * need to create more than one RenderScript context to be used\n     * at the same time.\n     *\n     * If you need a single context please use create()\n     *\n     * @param ctx The context.\n     * @return RenderScript\n     ",
    "links" : [ ]
  }, {
    "name" : "public void contextDump()",
    "returnType" : "void",
    "comment" : "\n     * Print the currently available debugging information about the state of\n     * the RS context to the log.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public void finish()",
    "returnType" : "void",
    "comment" : "\n     * Wait for any pending asynchronous opeations (such as copies to a RS\n     * allocation or RS script executions) to complete.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "private void helpDestroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "\n     * Destroys this RenderScript context.  Once this function is called,\n     * using this context or any objects belonging to this context is\n     * illegal.\n     *\n     * API 23+, this function is a NOP if the context was created\n     * with create().  Please use releaseAllContexts() to clean up\n     * contexts created with the create function.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean isAlive()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long safeID(BaseObj o)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TRACE_TAG", "LOG_TAG", "DEBUG", "LOG_ENABLED", "mProcessContextList", "mIsProcessContext", "mContextFlags", "mContextSdkVersion", "mApplicationContext", "sInitialized", "sRuntime", "registerNativeAllocation", "registerNativeFree", "CREATE_FLAG_NONE", "CREATE_FLAG_LOW_LATENCY", "CREATE_FLAG_LOW_POWER", "CREATE_FLAG_WAIT_FOR_ATTACH", "sPointerSize", "sMinorVersion", "mContextType", "mRWLock", "mContext", "mDestroyed", "mMessageThread", "mElement_U8", "mElement_I8", "mElement_U16", "mElement_I16", "mElement_U32", "mElement_I32", "mElement_U64", "mElement_I64", "mElement_F16", "mElement_F32", "mElement_F64", "mElement_BOOLEAN", "mElement_ELEMENT", "mElement_TYPE", "mElement_ALLOCATION", "mElement_SAMPLER", "mElement_SCRIPT", "mElement_MESH", "mElement_PROGRAM_FRAGMENT", "mElement_PROGRAM_VERTEX", "mElement_PROGRAM_RASTER", "mElement_PROGRAM_STORE", "mElement_FONT", "mElement_A_8", "mElement_RGB_565", "mElement_RGB_888", "mElement_RGBA_5551", "mElement_RGBA_4444", "mElement_RGBA_8888", "mElement_HALF_2", "mElement_HALF_3", "mElement_HALF_4", "mElement_FLOAT_2", "mElement_FLOAT_3", "mElement_FLOAT_4", "mElement_DOUBLE_2", "mElement_DOUBLE_3", "mElement_DOUBLE_4", "mElement_UCHAR_2", "mElement_UCHAR_3", "mElement_UCHAR_4", "mElement_CHAR_2", "mElement_CHAR_3", "mElement_CHAR_4", "mElement_USHORT_2", "mElement_USHORT_3", "mElement_USHORT_4", "mElement_SHORT_2", "mElement_SHORT_3", "mElement_SHORT_4", "mElement_UINT_2", "mElement_UINT_3", "mElement_UINT_4", "mElement_INT_2", "mElement_INT_3", "mElement_INT_4", "mElement_ULONG_2", "mElement_ULONG_3", "mElement_ULONG_4", "mElement_LONG_2", "mElement_LONG_3", "mElement_LONG_4", "mElement_YUV", "mElement_MATRIX_4X4", "mElement_MATRIX_3X3", "mElement_MATRIX_2X2", "mSampler_CLAMP_NEAREST", "mSampler_CLAMP_LINEAR", "mSampler_CLAMP_LINEAR_MIP_LINEAR", "mSampler_WRAP_NEAREST", "mSampler_WRAP_LINEAR", "mSampler_WRAP_LINEAR_MIP_LINEAR", "mSampler_MIRRORED_REPEAT_NEAREST", "mSampler_MIRRORED_REPEAT_LINEAR", "mSampler_MIRRORED_REPEAT_LINEAR_MIP_LINEAR", "mProgramStore_BLEND_NONE_DEPTH_TEST", "mProgramStore_BLEND_NONE_DEPTH_NO_DEPTH", "mProgramStore_BLEND_ALPHA_DEPTH_TEST", "mProgramStore_BLEND_ALPHA_DEPTH_NO_DEPTH", "mProgramRaster_CULL_BACK", "mProgramRaster_CULL_FRONT", "mProgramRaster_CULL_NONE", "mMessageCallback", "mErrorCallback", "mCachePath" ],
  "methodNames" : [ " static native void _nInit()", " static native int rsnSystemGetPointerSize()", " native long nDeviceCreate()", " native void nDeviceDestroy(long dev)", " native void nDeviceSetConfig(long dev, int param, int value)", " native int nContextGetUserMessage(long con, int[] data)", " native String nContextGetErrorMessage(long con)", " native int nContextPeekMessage(long con, int[] subID)", " native void nContextInitToClient(long con)", " native void nContextDeinitToClient(long con)", "public static long getMinorID()", "public static long getMinorVersion()", " native long rsnContextCreateGL(long dev, int ver, int sdkVer, int colorMin, int colorPref, int alphaMin, int alphaPref, int depthMin, int depthPref, int stencilMin, int stencilPref, int samplesMin, int samplesPref, float samplesQ, int dpi)", " synchronized long nContextCreateGL(long dev, int ver, int sdkVer, int colorMin, int colorPref, int alphaMin, int alphaPref, int depthMin, int depthPref, int stencilMin, int stencilPref, int samplesMin, int samplesPref, float samplesQ, int dpi)", " native long rsnContextCreate(long dev, int ver, int sdkVer, int contextType)", " synchronized long nContextCreate(long dev, int ver, int sdkVer, int contextType)", " native void rsnContextDestroy(long con)", " synchronized void nContextDestroy()", " native void rsnContextSetSurface(long con, int w, int h, Surface sur)", " synchronized void nContextSetSurface(int w, int h, Surface sur)", " native void rsnContextSetSurfaceTexture(long con, int w, int h, SurfaceTexture sur)", " synchronized void nContextSetSurfaceTexture(int w, int h, SurfaceTexture sur)", " native void rsnContextSetPriority(long con, int p)", " synchronized void nContextSetPriority(int p)", " native void rsnContextSetCacheDir(long con, String cacheDir)", " synchronized void nContextSetCacheDir(String cacheDir)", " native void rsnContextDump(long con, int bits)", " synchronized void nContextDump(int bits)", " native void rsnContextFinish(long con)", " synchronized void nContextFinish()", " native void rsnContextSendMessage(long con, int id, int[] data)", " synchronized void nContextSendMessage(int id, int[] data)", " native void rsnContextBindRootScript(long con, long script)", " synchronized void nContextBindRootScript(long script)", " native void rsnContextBindSampler(long con, int sampler, int slot)", " synchronized void nContextBindSampler(int sampler, int slot)", " native void rsnContextBindProgramStore(long con, long pfs)", " synchronized void nContextBindProgramStore(long pfs)", " native void rsnContextBindProgramFragment(long con, long pf)", " synchronized void nContextBindProgramFragment(long pf)", " native void rsnContextBindProgramVertex(long con, long pv)", " synchronized void nContextBindProgramVertex(long pv)", " native void rsnContextBindProgramRaster(long con, long pr)", " synchronized void nContextBindProgramRaster(long pr)", " native void rsnContextPause(long con)", " synchronized void nContextPause()", " native void rsnContextResume(long con)", " synchronized void nContextResume()", " native long rsnClosureCreate(long con, long kernelID, long returnValue, long[] fieldIDs, long[] values, int[] sizes, long[] depClosures, long[] depFieldIDs)", " synchronized long nClosureCreate(long kernelID, long returnValue, long[] fieldIDs, long[] values, int[] sizes, long[] depClosures, long[] depFieldIDs)", " native long rsnInvokeClosureCreate(long con, long invokeID, byte[] params, long[] fieldIDs, long[] values, int[] sizes)", " synchronized long nInvokeClosureCreate(long invokeID, byte[] params, long[] fieldIDs, long[] values, int[] sizes)", " native void rsnClosureSetArg(long con, long closureID, int index, long value, int size)", " synchronized void nClosureSetArg(long closureID, int index, long value, int size)", " native void rsnClosureSetGlobal(long con, long closureID, long fieldID, long value, int size)", " synchronized void nClosureSetGlobal(long closureID, long fieldID, long value, int size)", " native long rsnScriptGroup2Create(long con, String name, String cachePath, long[] closures)", " synchronized long nScriptGroup2Create(String name, String cachePath, long[] closures)", " native void rsnScriptGroup2Execute(long con, long groupID)", " synchronized void nScriptGroup2Execute(long groupID)", " native void rsnAssignName(long con, long obj, byte[] name)", " synchronized void nAssignName(long obj, byte[] name)", " native String rsnGetName(long con, long obj)", " synchronized String nGetName(long obj)", " native void rsnObjDestroy(long con, long id)", " void nObjDestroy(long id)", " native long rsnElementCreate(long con, long type, int kind, boolean norm, int vecSize)", " synchronized long nElementCreate(long type, int kind, boolean norm, int vecSize)", " native long rsnElementCreate2(long con, long[] elements, String[] names, int[] arraySizes)", " synchronized long nElementCreate2(long[] elements, String[] names, int[] arraySizes)", " native void rsnElementGetNativeData(long con, long id, int[] elementData)", " synchronized void nElementGetNativeData(long id, int[] elementData)", " native void rsnElementGetSubElements(long con, long id, long[] IDs, String[] names, int[] arraySizes)", " synchronized void nElementGetSubElements(long id, long[] IDs, String[] names, int[] arraySizes)", " native long rsnTypeCreate(long con, long eid, int x, int y, int z, boolean mips, boolean faces, int yuv)", " synchronized long nTypeCreate(long eid, int x, int y, int z, boolean mips, boolean faces, int yuv)", " native void rsnTypeGetNativeData(long con, long id, long[] typeData)", " synchronized void nTypeGetNativeData(long id, long[] typeData)", " native long rsnAllocationCreateTyped(long con, long type, int mip, int usage, long pointer)", " synchronized long nAllocationCreateTyped(long type, int mip, int usage, long pointer)", " native long rsnAllocationCreateFromBitmap(long con, long type, int mip, Bitmap bmp, int usage)", " synchronized long nAllocationCreateFromBitmap(long type, int mip, Bitmap bmp, int usage)", " native long rsnAllocationCreateBitmapBackedAllocation(long con, long type, int mip, Bitmap bmp, int usage)", " synchronized long nAllocationCreateBitmapBackedAllocation(long type, int mip, Bitmap bmp, int usage)", " native long rsnAllocationCubeCreateFromBitmap(long con, long type, int mip, Bitmap bmp, int usage)", " synchronized long nAllocationCubeCreateFromBitmap(long type, int mip, Bitmap bmp, int usage)", " native void rsnAllocationCopyToBitmap(long con, long alloc, Bitmap bmp)", " synchronized void nAllocationCopyToBitmap(long alloc, Bitmap bmp)", " native void rsnAllocationSyncAll(long con, long alloc, int src)", " synchronized void nAllocationSyncAll(long alloc, int src)", " native ByteBuffer rsnAllocationGetByteBuffer(long con, long alloc, long[] stride, int xBytesSize, int dimY, int dimZ)", " synchronized ByteBuffer nAllocationGetByteBuffer(long alloc, long[] stride, int xBytesSize, int dimY, int dimZ)", " native void rsnAllocationSetupBufferQueue(long con, long alloc, int numAlloc)", " synchronized void nAllocationSetupBufferQueue(long alloc, int numAlloc)", " native void rsnAllocationShareBufferQueue(long con, long alloc1, long alloc2)", " synchronized void nAllocationShareBufferQueue(long alloc1, long alloc2)", " native Surface rsnAllocationGetSurface(long con, long alloc)", " synchronized Surface nAllocationGetSurface(long alloc)", " native void rsnAllocationSetSurface(long con, long alloc, Surface sur)", " synchronized void nAllocationSetSurface(long alloc, Surface sur)", " native void rsnAllocationIoSend(long con, long alloc)", " synchronized void nAllocationIoSend(long alloc)", " native long rsnAllocationIoReceive(long con, long alloc)", " synchronized long nAllocationIoReceive(long alloc)", " native void rsnAllocationGenerateMipmaps(long con, long alloc)", " synchronized void nAllocationGenerateMipmaps(long alloc)", " native void rsnAllocationCopyFromBitmap(long con, long alloc, Bitmap bmp)", " synchronized void nAllocationCopyFromBitmap(long alloc, Bitmap bmp)", " native void rsnAllocationData1D(long con, long id, int off, int mip, int count, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)", " synchronized void nAllocationData1D(long id, int off, int mip, int count, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)", " native void rsnAllocationElementData(long con, long id, int xoff, int yoff, int zoff, int mip, int compIdx, byte[] d, int sizeBytes)", " synchronized void nAllocationElementData(long id, int xoff, int yoff, int zoff, int mip, int compIdx, byte[] d, int sizeBytes)", " native void rsnAllocationData2D(long con, long dstAlloc, int dstXoff, int dstYoff, int dstMip, int dstFace, int width, int height, long srcAlloc, int srcXoff, int srcYoff, int srcMip, int srcFace)", " synchronized void nAllocationData2D(long dstAlloc, int dstXoff, int dstYoff, int dstMip, int dstFace, int width, int height, long srcAlloc, int srcXoff, int srcYoff, int srcMip, int srcFace)", " native void rsnAllocationData2D(long con, long id, int xoff, int yoff, int mip, int face, int w, int h, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)", " synchronized void nAllocationData2D(long id, int xoff, int yoff, int mip, int face, int w, int h, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)", " native void rsnAllocationData2D(long con, long id, int xoff, int yoff, int mip, int face, Bitmap b)", " synchronized void nAllocationData2D(long id, int xoff, int yoff, int mip, int face, Bitmap b)", " native void rsnAllocationData3D(long con, long dstAlloc, int dstXoff, int dstYoff, int dstZoff, int dstMip, int width, int height, int depth, long srcAlloc, int srcXoff, int srcYoff, int srcZoff, int srcMip)", " synchronized void nAllocationData3D(long dstAlloc, int dstXoff, int dstYoff, int dstZoff, int dstMip, int width, int height, int depth, long srcAlloc, int srcXoff, int srcYoff, int srcZoff, int srcMip)", " native void rsnAllocationData3D(long con, long id, int xoff, int yoff, int zoff, int mip, int w, int h, int depth, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)", " synchronized void nAllocationData3D(long id, int xoff, int yoff, int zoff, int mip, int w, int h, int depth, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)", " native void rsnAllocationRead(long con, long id, Object d, int dt, int mSize, boolean usePadding)", " synchronized void nAllocationRead(long id, Object d, Element.DataType dt, int mSize, boolean usePadding)", " native void rsnAllocationRead1D(long con, long id, int off, int mip, int count, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)", " synchronized void nAllocationRead1D(long id, int off, int mip, int count, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)", " native void rsnAllocationElementRead(long con, long id, int xoff, int yoff, int zoff, int mip, int compIdx, byte[] d, int sizeBytes)", " synchronized void nAllocationElementRead(long id, int xoff, int yoff, int zoff, int mip, int compIdx, byte[] d, int sizeBytes)", " native void rsnAllocationRead2D(long con, long id, int xoff, int yoff, int mip, int face, int w, int h, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)", " synchronized void nAllocationRead2D(long id, int xoff, int yoff, int mip, int face, int w, int h, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)", " native void rsnAllocationRead3D(long con, long id, int xoff, int yoff, int zoff, int mip, int w, int h, int depth, Object d, int sizeBytes, int dt, int mSize, boolean usePadding)", " synchronized void nAllocationRead3D(long id, int xoff, int yoff, int zoff, int mip, int w, int h, int depth, Object d, int sizeBytes, Element.DataType dt, int mSize, boolean usePadding)", " native long rsnAllocationGetType(long con, long id)", " synchronized long nAllocationGetType(long id)", " native void rsnAllocationResize1D(long con, long id, int dimX)", " synchronized void nAllocationResize1D(long id, int dimX)", " native long rsnAllocationAdapterCreate(long con, long allocId, long typeId)", " synchronized long nAllocationAdapterCreate(long allocId, long typeId)", " native void rsnAllocationAdapterOffset(long con, long id, int x, int y, int z, int mip, int face, int a1, int a2, int a3, int a4)", " synchronized void nAllocationAdapterOffset(long id, int x, int y, int z, int mip, int face, int a1, int a2, int a3, int a4)", " native long rsnFileA3DCreateFromAssetStream(long con, long assetStream)", " synchronized long nFileA3DCreateFromAssetStream(long assetStream)", " native long rsnFileA3DCreateFromFile(long con, String path)", " synchronized long nFileA3DCreateFromFile(String path)", " native long rsnFileA3DCreateFromAsset(long con, AssetManager mgr, String path)", " synchronized long nFileA3DCreateFromAsset(AssetManager mgr, String path)", " native int rsnFileA3DGetNumIndexEntries(long con, long fileA3D)", " synchronized int nFileA3DGetNumIndexEntries(long fileA3D)", " native void rsnFileA3DGetIndexEntries(long con, long fileA3D, int numEntries, int[] IDs, String[] names)", " synchronized void nFileA3DGetIndexEntries(long fileA3D, int numEntries, int[] IDs, String[] names)", " native long rsnFileA3DGetEntryByIndex(long con, long fileA3D, int index)", " synchronized long nFileA3DGetEntryByIndex(long fileA3D, int index)", " native long rsnFontCreateFromFile(long con, String fileName, float size, int dpi)", " synchronized long nFontCreateFromFile(String fileName, float size, int dpi)", " native long rsnFontCreateFromAssetStream(long con, String name, float size, int dpi, long assetStream)", " synchronized long nFontCreateFromAssetStream(String name, float size, int dpi, long assetStream)", " native long rsnFontCreateFromAsset(long con, AssetManager mgr, String path, float size, int dpi)", " synchronized long nFontCreateFromAsset(AssetManager mgr, String path, float size, int dpi)", " native void rsnScriptBindAllocation(long con, long script, long alloc, int slot)", " synchronized void nScriptBindAllocation(long script, long alloc, int slot)", " native void rsnScriptSetTimeZone(long con, long script, byte[] timeZone)", " synchronized void nScriptSetTimeZone(long script, byte[] timeZone)", " native void rsnScriptInvoke(long con, long id, int slot)", " synchronized void nScriptInvoke(long id, int slot)", " native void rsnScriptForEach(long con, long id, int slot, long[] ains, long aout, byte[] params, int[] limits)", " synchronized void nScriptForEach(long id, int slot, long[] ains, long aout, byte[] params, int[] limits)", " native void rsnScriptReduce(long con, long id, int slot, long[] ains, long aout, int[] limits)", " synchronized void nScriptReduce(long id, int slot, long[] ains, long aout, int[] limits)", " native void rsnScriptInvokeV(long con, long id, int slot, byte[] params)", " synchronized void nScriptInvokeV(long id, int slot, byte[] params)", " native void rsnScriptSetVarI(long con, long id, int slot, int val)", " synchronized void nScriptSetVarI(long id, int slot, int val)", " native int rsnScriptGetVarI(long con, long id, int slot)", " synchronized int nScriptGetVarI(long id, int slot)", " native void rsnScriptSetVarJ(long con, long id, int slot, long val)", " synchronized void nScriptSetVarJ(long id, int slot, long val)", " native long rsnScriptGetVarJ(long con, long id, int slot)", " synchronized long nScriptGetVarJ(long id, int slot)", " native void rsnScriptSetVarF(long con, long id, int slot, float val)", " synchronized void nScriptSetVarF(long id, int slot, float val)", " native float rsnScriptGetVarF(long con, long id, int slot)", " synchronized float nScriptGetVarF(long id, int slot)", " native void rsnScriptSetVarD(long con, long id, int slot, double val)", " synchronized void nScriptSetVarD(long id, int slot, double val)", " native double rsnScriptGetVarD(long con, long id, int slot)", " synchronized double nScriptGetVarD(long id, int slot)", " native void rsnScriptSetVarV(long con, long id, int slot, byte[] val)", " synchronized void nScriptSetVarV(long id, int slot, byte[] val)", " native void rsnScriptGetVarV(long con, long id, int slot, byte[] val)", " synchronized void nScriptGetVarV(long id, int slot, byte[] val)", " native void rsnScriptSetVarVE(long con, long id, int slot, byte[] val, long e, int[] dims)", " synchronized void nScriptSetVarVE(long id, int slot, byte[] val, long e, int[] dims)", " native void rsnScriptSetVarObj(long con, long id, int slot, long val)", " synchronized void nScriptSetVarObj(long id, int slot, long val)", " native long rsnScriptCCreate(long con, String resName, String cacheDir, byte[] script, int length)", " synchronized long nScriptCCreate(String resName, String cacheDir, byte[] script, int length)", " native long rsnScriptIntrinsicCreate(long con, int id, long eid)", " synchronized long nScriptIntrinsicCreate(int id, long eid)", " native long rsnScriptKernelIDCreate(long con, long sid, int slot, int sig)", " synchronized long nScriptKernelIDCreate(long sid, int slot, int sig)", " native long rsnScriptInvokeIDCreate(long con, long sid, int slot)", " synchronized long nScriptInvokeIDCreate(long sid, int slot)", " native long rsnScriptFieldIDCreate(long con, long sid, int slot)", " synchronized long nScriptFieldIDCreate(long sid, int slot)", " native long rsnScriptGroupCreate(long con, long[] kernels, long[] src, long[] dstk, long[] dstf, long[] types)", " synchronized long nScriptGroupCreate(long[] kernels, long[] src, long[] dstk, long[] dstf, long[] types)", " native void rsnScriptGroupSetInput(long con, long group, long kernel, long alloc)", " synchronized void nScriptGroupSetInput(long group, long kernel, long alloc)", " native void rsnScriptGroupSetOutput(long con, long group, long kernel, long alloc)", " synchronized void nScriptGroupSetOutput(long group, long kernel, long alloc)", " native void rsnScriptGroupExecute(long con, long group)", " synchronized void nScriptGroupExecute(long group)", " native long rsnSamplerCreate(long con, int magFilter, int minFilter, int wrapS, int wrapT, int wrapR, float aniso)", " synchronized long nSamplerCreate(int magFilter, int minFilter, int wrapS, int wrapT, int wrapR, float aniso)", " native long rsnProgramStoreCreate(long con, boolean r, boolean g, boolean b, boolean a, boolean depthMask, boolean dither, int srcMode, int dstMode, int depthFunc)", " synchronized long nProgramStoreCreate(boolean r, boolean g, boolean b, boolean a, boolean depthMask, boolean dither, int srcMode, int dstMode, int depthFunc)", " native long rsnProgramRasterCreate(long con, boolean pointSprite, int cullMode)", " synchronized long nProgramRasterCreate(boolean pointSprite, int cullMode)", " native void rsnProgramBindConstants(long con, long pv, int slot, long mID)", " synchronized void nProgramBindConstants(long pv, int slot, long mID)", " native void rsnProgramBindTexture(long con, long vpf, int slot, long a)", " synchronized void nProgramBindTexture(long vpf, int slot, long a)", " native void rsnProgramBindSampler(long con, long vpf, int slot, long s)", " synchronized void nProgramBindSampler(long vpf, int slot, long s)", " native long rsnProgramFragmentCreate(long con, String shader, String[] texNames, long[] params)", " synchronized long nProgramFragmentCreate(String shader, String[] texNames, long[] params)", " native long rsnProgramVertexCreate(long con, String shader, String[] texNames, long[] params)", " synchronized long nProgramVertexCreate(String shader, String[] texNames, long[] params)", " native long rsnMeshCreate(long con, long[] vtx, long[] idx, int[] prim)", " synchronized long nMeshCreate(long[] vtx, long[] idx, int[] prim)", " native int rsnMeshGetVertexBufferCount(long con, long id)", " synchronized int nMeshGetVertexBufferCount(long id)", " native int rsnMeshGetIndexCount(long con, long id)", " synchronized int nMeshGetIndexCount(long id)", " native void rsnMeshGetVertices(long con, long id, long[] vtxIds, int vtxIdCount)", " synchronized void nMeshGetVertices(long id, long[] vtxIds, int vtxIdCount)", " native void rsnMeshGetIndices(long con, long id, long[] idxIds, int[] primitives, int vtxIdCount)", " synchronized void nMeshGetIndices(long id, long[] idxIds, int[] primitives, int vtxIdCount)", " native void rsnScriptIntrinsicBLAS_Single(long con, long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, float alpha, long A, long B, float beta, long C, int incX, int incY, int KL, int KU)", " synchronized void nScriptIntrinsicBLAS_Single(long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, float alpha, long A, long B, float beta, long C, int incX, int incY, int KL, int KU)", " native void rsnScriptIntrinsicBLAS_Double(long con, long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, double alpha, long A, long B, double beta, long C, int incX, int incY, int KL, int KU)", " synchronized void nScriptIntrinsicBLAS_Double(long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, double alpha, long A, long B, double beta, long C, int incX, int incY, int KL, int KU)", " native void rsnScriptIntrinsicBLAS_Complex(long con, long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, float alphaX, float alphaY, long A, long B, float betaX, float betaY, long C, int incX, int incY, int KL, int KU)", " synchronized void nScriptIntrinsicBLAS_Complex(long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, float alphaX, float alphaY, long A, long B, float betaX, float betaY, long C, int incX, int incY, int KL, int KU)", " native void rsnScriptIntrinsicBLAS_Z(long con, long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, double alphaX, double alphaY, long A, long B, double betaX, double betaY, long C, int incX, int incY, int KL, int KU)", " synchronized void nScriptIntrinsicBLAS_Z(long id, int func, int TransA, int TransB, int Side, int Uplo, int Diag, int M, int N, int K, double alphaX, double alphaY, long A, long B, double betaX, double betaY, long C, int incX, int incY, int KL, int KU)", " native void rsnScriptIntrinsicBLAS_BNNM(long con, long id, int M, int N, int K, long A, int a_offset, long B, int b_offset, long C, int c_offset, int c_mult_int)", " synchronized void nScriptIntrinsicBLAS_BNNM(long id, int M, int N, int K, long A, int a_offset, long B, int b_offset, long C, int c_offset, int c_mult_int)", "public void setMessageHandler(RSMessageHandler msg)", "public RSMessageHandler getMessageHandler()", "public void sendMessage(int id, int[] data)", "public void setErrorHandler(RSErrorHandler msg)", "public RSErrorHandler getErrorHandler()", " void validateObject(BaseObj o)", " void validate()", "public void setPriority(Priority p)", "public final Context getApplicationContext()", " static synchronized String getCachePath()", "private static RenderScript internalCreate(Context ctx, int sdkVersion, ContextType ct, int flags)", "public static RenderScript create(Context ctx)", "public static RenderScript create(Context ctx, ContextType ct)", "public static RenderScript create(Context ctx, ContextType ct, int flags)", "public static RenderScript create(Context ctx, int sdkVersion)", "private static RenderScript create(Context ctx, int sdkVersion, ContextType ct, int flags)", "public static void releaseAllContexts()", "public static RenderScript createMultiContext(Context ctx, ContextType ct, int flags, int API_number)", "public void contextDump()", "public void finish()", "private void helpDestroy()", "protected void finalize() throws Throwable", "public void destroy()", " boolean isAlive()", " long safeID(BaseObj o)" ]
}