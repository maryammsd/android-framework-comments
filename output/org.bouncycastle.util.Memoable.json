{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/bouncycastle/util/Memoable.java",
  "packageName" : "org.bouncycastle.util",
  "className" : "Memoable",
  "comment" : "\n * Interface for Memoable objects. Memoable objects allow the taking of a snapshot of their internal state\n * via the copy() method and then reseting the object back to that state later using the reset() method.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " Memoable copy()",
    "returnType" : "Memoable",
    "comment" : "\n     * Produce a copy of this object with its configuration and in its current state.\n     * <p>\n     * The returned object may be used simply to store the state, or may be used as a similar object\n     * starting from the copied state.\n     ",
    "links" : [ ]
  }, {
    "name" : " void reset(Memoable other)",
    "returnType" : "void",
    "comment" : "\n     * Restore a copied object state into this object.\n     * <p>\n     * Implementations of this method <em>should</em> try to avoid or minimise memory allocation to perform the reset.\n     *\n     * @param other an object originally {@link #copy() copied} from an object of the same type as this instance.\n     * @throws ClassCastException if the provided object is not of the correct type.\n     * @throws MemoableResetException if the <b>other</b> parameter is in some other way invalid.\n     ",
    "links" : [ "#copy()" ]
  } ],
  "methodNames" : [ " Memoable copy()", " void reset(Memoable other)" ],
  "variableNames" : [ ]
}