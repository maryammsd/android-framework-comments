{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/preference/PreferenceGroup.java",
  "packageName" : "android.preference",
  "className" : "PreferenceGroup",
  "comment" : "\n * A container for multiple\n * {@link Preference} objects. It is a base class for  Preference objects that are\n * parents, such as {@link PreferenceCategory} and {@link PreferenceScreen}.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For information about building a settings UI with Preferences,\n * read the <a href=\"{@docRoot}guide/topics/ui/settings.html\">Settings</a>\n * guide.</p>\n * </div>\n *\n * @attr ref android.R.styleable#PreferenceGroup_orderingFromXml\n *\n * @deprecated Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n *      <a href=\"{@docRoot}reference/androidx/preference/package-summary.html\">\n *      Preference Library</a> for consistent behavior across all devices. For more information on\n *      using the AndroidX Preference Library see\n *      <a href=\"{@docRoot}guide/topics/ui/settings.html\">Settings</a>.\n ",
  "links" : [ "android.preference.PreferenceCategory", "android.preference.Preference", "android.preference.PreferenceScreen" ],
  "variables" : [ {
    "name" : "mPreferenceList",
    "type" : "List<Preference>",
    "comment" : "\n     * The container for child {@link Preference}s. This is sorted based on the\n     * ordering, please use {@link #addPreference(Preference)} instead of adding\n     * to this directly.\n     ",
    "links" : [ "android.preference.Preference", "#addPreference(Preference)" ]
  }, {
    "name" : "mOrderingAsAdded",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentPreferenceOrder",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAttachedToActivity",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setOrderingAsAdded(boolean orderingAsAdded)",
    "returnType" : "void",
    "comment" : "\n     * Whether to order the {@link Preference} children of this group as they\n     * are added. If this is false, the ordering will follow each Preference\n     * order and default to alphabetic for those without an order.\n     * <p>\n     * If this is called after preferences are added, they will not be\n     * re-ordered in the order they were added, hence call this method early on.\n     *\n     * @param orderingAsAdded Whether to order according to the order added.\n     * @see Preference#setOrder(int)\n     ",
    "links" : [ "android.preference.Preference" ]
  }, {
    "name" : "public boolean isOrderingAsAdded()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether this group is ordering preferences in the order they are added.\n     *\n     * @return Whether this group orders based on the order the children are added.\n     * @see #setOrderingAsAdded(boolean)\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addItemFromInflater(Preference preference)",
    "returnType" : "void",
    "comment" : "\n     * Called by the inflater to add an item to this group.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPreferenceCount()",
    "returnType" : "int",
    "comment" : "\n     * Returns the number of children {@link Preference}s.\n     * @return The number of preference children in this group.\n     ",
    "links" : [ "android.preference.Preference" ]
  }, {
    "name" : "public Preference getPreference(int index)",
    "returnType" : "Preference",
    "comment" : "\n     * Returns the {@link Preference} at a particular index.\n     *\n     * @param index The index of the {@link Preference} to retrieve.\n     * @return The {@link Preference}.\n     ",
    "links" : [ "android.preference.Preference" ]
  }, {
    "name" : "public boolean addPreference(Preference preference)",
    "returnType" : "boolean",
    "comment" : "\n     * Adds a {@link Preference} at the correct position based on the\n     * preference's order.\n     *\n     * @param preference The preference to add.\n     * @return Whether the preference is now in this group.\n     ",
    "links" : [ "android.preference.Preference" ]
  }, {
    "name" : "public boolean removePreference(Preference preference)",
    "returnType" : "boolean",
    "comment" : "\n     * Removes a {@link Preference} from this group.\n     *\n     * @param preference The preference to remove.\n     * @return Whether the preference was found and removed.\n     ",
    "links" : [ "android.preference.Preference" ]
  }, {
    "name" : "private boolean removePreferenceInt(Preference preference)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeAll()",
    "returnType" : "void",
    "comment" : "\n     * Removes all {@link Preference Preferences} from this group.\n     ",
    "links" : [ "android.preference.Preference" ]
  }, {
    "name" : "protected boolean onPrepareAddPreference(Preference preference)",
    "returnType" : "boolean",
    "comment" : "\n     * Prepares a {@link Preference} to be added to the group.\n     *\n     * @param preference The preference to add.\n     * @return Whether to allow adding the preference (true), or not (false).\n     ",
    "links" : [ "android.preference.Preference" ]
  }, {
    "name" : "public Preference findPreference(CharSequence key)",
    "returnType" : "Preference",
    "comment" : "\n     * Finds a {@link Preference} based on its key. If two {@link Preference}\n     * share the same key (not recommended), the first to appear will be\n     * returned (to retrieve the other preference with the same key, call this\n     * method on the first preference). If this preference has the key, it will\n     * not be returned.\n     * <p>\n     * This will recursively search for the preference into children that are\n     * also {@link PreferenceGroup PreferenceGroups}.\n     *\n     * @param key The key of the preference to retrieve.\n     * @return The {@link Preference} with the key, or null.\n     ",
    "links" : [ "android.preference.PreferenceGroup", "android.preference.Preference" ]
  }, {
    "name" : "protected boolean isOnSameScreenAsChildren()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether this preference group should be shown on the same screen as its\n     * contained preferences.\n     *\n     * @return True if the contained preferences should be shown on the same\n     *         screen as this preference.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onAttachedToActivity()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onPrepareForRemoval()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyDependencyChange(boolean disableDependents)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void sortPreferences()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void dispatchSaveInstanceState(Bundle container)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void dispatchRestoreInstanceState(Bundle container)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setOrderingAsAdded(boolean orderingAsAdded)", "public boolean isOrderingAsAdded()", "public void addItemFromInflater(Preference preference)", "public int getPreferenceCount()", "public Preference getPreference(int index)", "public boolean addPreference(Preference preference)", "public boolean removePreference(Preference preference)", "private boolean removePreferenceInt(Preference preference)", "public void removeAll()", "protected boolean onPrepareAddPreference(Preference preference)", "public Preference findPreference(CharSequence key)", "protected boolean isOnSameScreenAsChildren()", "protected void onAttachedToActivity()", "protected void onPrepareForRemoval()", "public void notifyDependencyChange(boolean disableDependents)", " void sortPreferences()", "protected void dispatchSaveInstanceState(Bundle container)", "protected void dispatchRestoreInstanceState(Bundle container)" ],
  "variableNames" : [ "mPreferenceList", "mOrderingAsAdded", "mCurrentPreferenceOrder", "mAttachedToActivity" ]
}