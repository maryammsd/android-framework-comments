{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/LinkedBlockingQueue.java",
  "packageName" : "java.util.concurrent",
  "className" : "Itr",
  "comment" : "\n     * Weakly-consistent iterator.\n     *\n     * Lazily updated ancestor field provides expected O(1) remove(),\n     * but still O(n) in the worst case, whenever the saved ancestor\n     * is concurrently deleted.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "next",
    "type" : "Node<E>",
    "comment" : " Node holding nextItem",
    "links" : [ ]
  }, {
    "name" : "nextItem",
    "type" : "E",
    "comment" : " next item to hand out",
    "links" : [ ]
  }, {
    "name" : "lastRet",
    "type" : "Node<E>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ancestor",
    "type" : "Node<E>",
    "comment" : " Helps unlink lastRet on remove()",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean hasNext()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public E next()",
    "returnType" : "E",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forEachRemaining(Consumer<? super E> action)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void remove()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean hasNext()", "public E next()", "public void forEachRemaining(Consumer<? super E> action)", "public void remove()" ],
  "variableNames" : [ "next", "nextItem", "lastRet", "ancestor" ]
}