{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/Choreographer.java",
  "packageName" : "android.view",
  "className" : "FrameData",
  "comment" : "\n     * The payload for {@link VsyncCallback} which includes frame information such as when\n     * the frame started being rendered, and multiple possible frame timelines and their\n     * information including deadline and expected present time.\n     ",
  "links" : [ "VsyncCallback" ],
  "variables" : [ {
    "name" : "mFrameTimeNanos",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrameTimelines",
    "type" : "FrameTimeline[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreferredFrameTimelineIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInCallback",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getFrameTimeNanos()",
    "returnType" : "long",
    "comment" : " The time in nanoseconds when the frame started being rendered. ",
    "links" : [ ]
  }, {
    "name" : "public FrameTimeline[] getFrameTimelines()",
    "returnType" : "FrameTimeline[]",
    "comment" : " The possible frame timelines, sorted chronologically. ",
    "links" : [ ]
  }, {
    "name" : "public FrameTimeline getPreferredFrameTimeline()",
    "returnType" : "FrameTimeline",
    "comment" : " The platform-preferred frame timeline. ",
    "links" : [ ]
  }, {
    "name" : " void setInCallback(boolean inCallback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void checkInCallback()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void allocateFrameTimelines(int length)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " FrameTimeline update(long frameTimeNanos, DisplayEventReceiver.VsyncEventData vsyncEventData)",
    "returnType" : "FrameTimeline",
    "comment" : "\n         * Update the frame data with a {@code DisplayEventReceiver.VsyncEventData} received from\n         * native.\n         ",
    "links" : [ ]
  }, {
    "name" : " FrameTimeline update(long frameTimeNanos, DisplayEventReceiver displayEventReceiver, long jitterNanos)",
    "returnType" : "FrameTimeline",
    "comment" : "\n         * Update the frame data when the frame is late.\n         *\n         * @param jitterNanos currentTime - frameTime\n         ",
    "links" : [ ]
  }, {
    "name" : " void update(long frameTimeNanos, int newPreferredFrameTimelineIndex)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public long getFrameTimeNanos()", "public FrameTimeline[] getFrameTimelines()", "public FrameTimeline getPreferredFrameTimeline()", " void setInCallback(boolean inCallback)", "private void checkInCallback()", "private void allocateFrameTimelines(int length)", " FrameTimeline update(long frameTimeNanos, DisplayEventReceiver.VsyncEventData vsyncEventData)", " FrameTimeline update(long frameTimeNanos, DisplayEventReceiver displayEventReceiver, long jitterNanos)", " void update(long frameTimeNanos, int newPreferredFrameTimelineIndex)" ],
  "variableNames" : [ "mFrameTimeNanos", "mFrameTimelines", "mPreferredFrameTimelineIndex", "mInCallback" ]
}