{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/audiofx/DynamicsProcessing.java",
  "packageName" : "android.media.audiofx",
  "className" : "Config",
  "comment" : "\n     * Class for Config object, used by DynamicsProcessing to configure and update the audio effect.\n     * use Builder to instantiate objects of this type.\n     ",
  "variables" : [ {
    "name" : "mVariant",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreEqInUse",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreEqBandCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMbcInUse",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMbcBandCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPostEqInUse",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPostEqBandCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLimiterInUse",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreferredFrameDuration",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannel",
    "type" : "Channel[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void checkChannel(int channelIndex)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getVariant()",
    "returnType" : "int",
    "comment" : "\n         * Gets variant for effect engine See {@link #VARIANT_FAVOR_FREQUENCY_RESOLUTION} and\n         * {@link #VARIANT_FAVOR_TIME_RESOLUTION}.\n         * @return variant of effect engine\n         ",
    "links" : [ "#VARIANT_FAVOR_TIME_RESOLUTION", "#VARIANT_FAVOR_FREQUENCY_RESOLUTION" ]
  }, {
    "name" : "public float getPreferredFrameDuration()",
    "returnType" : "float",
    "comment" : "\n         * Gets preferred frame duration in milliseconds (ms).\n         * @return preferred frame duration in milliseconds (ms)\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isPreEqInUse()",
    "returnType" : "boolean",
    "comment" : "\n         * Gets if preEq stage is in use\n         * @return true if preEq stage is in use;\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getPreEqBandCount()",
    "returnType" : "int",
    "comment" : "\n         * Gets number of bands configured for the PreEq stage.\n         * @return number of bands configured for the PreEq stage.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMbcInUse()",
    "returnType" : "boolean",
    "comment" : "\n         * Gets if Mbc stage is in use\n         * @return true if Mbc stage is in use;\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMbcBandCount()",
    "returnType" : "int",
    "comment" : "\n         * Gets number of bands configured for the Mbc stage.\n         * @return number of bands configured for the Mbc stage.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isPostEqInUse()",
    "returnType" : "boolean",
    "comment" : "\n         * Gets if PostEq stage is in use\n         * @return true if PostEq stage is in use;\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getPostEqBandCount()",
    "returnType" : "int",
    "comment" : "\n         * Gets number of bands configured for the PostEq stage.\n         * @return number of bands configured for the PostEq stage.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isLimiterInUse()",
    "returnType" : "boolean",
    "comment" : "\n         * Gets if Limiter stage is in use\n         * @return true if Limiter stage is in use;\n         ",
    "links" : [ ]
  }, {
    "name" : "public Channel getChannelByChannelIndex(int channelIndex)",
    "returnType" : "Channel",
    "comment" : "\n         * Gets the Channel configuration object by using the channel index\n         * @param channelIndex of desired Channel object\n         * @return Channel configuration object\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setChannelTo(int channelIndex, Channel channel)",
    "returnType" : "void",
    "comment" : "\n         * Sets the chosen Channel object in the selected channelIndex\n         * Note that all the stages should have the same number of bands than the existing Channel\n         * object.\n         * @param channelIndex index of channel to be replaced\n         * @param channel Channel configuration object to be set\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setAllChannelsTo(Channel channel)",
    "returnType" : "void",
    "comment" : "\n         * Sets ALL channels to the chosen Channel object. Note that all the stages should have the\n         * same number of bands than the existing ones.\n         * @param channel Channel configuration object to be set.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getInputGainByChannelIndex(int channelIndex)",
    "returnType" : "float",
    "comment" : "\n         * Gets inputGain value in decibels (dB) for channel indicated by channelIndex\n         * @param channelIndex index of channel of interest\n         * @return inputGain value in decibels (dB). 0 dB means no change.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setInputGainByChannelIndex(int channelIndex, float inputGain)",
    "returnType" : "void",
    "comment" : "\n         * Sets the inputGain value in decibels (dB) for the channel indicated by channelIndex.\n         * @param channelIndex index of channel of interest\n         * @param inputGain desired value in decibels (dB).\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setInputGainAllChannelsTo(float inputGain)",
    "returnType" : "void",
    "comment" : "\n         * Sets the inputGain value in decibels (dB) for ALL channels\n         * @param inputGain desired value in decibels (dB)\n         ",
    "links" : [ ]
  }, {
    "name" : "public Eq getPreEqByChannelIndex(int channelIndex)",
    "returnType" : "Eq",
    "comment" : "\n         * Gets PreEq stage from channel indicated by channelIndex\n         * @param channelIndex index of channel of interest\n         * @return PreEq stage configuration object\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setPreEqByChannelIndex(int channelIndex, Eq preEq)",
    "returnType" : "void",
    "comment" : "\n         * Sets the PreEq stage configuration for the channel indicated by channelIndex. Note that\n         * new preEq stage must have the same number of bands than original preEq stage\n         * @param channelIndex index of channel to be set\n         * @param preEq desired PreEq configuration to be set\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setPreEqAllChannelsTo(Eq preEq)",
    "returnType" : "void",
    "comment" : "\n         * Sets the PreEq stage configuration for ALL channels. Note that new preEq stage must have\n         * the same number of bands than original preEq stages.\n         * @param preEq desired PreEq configuration to be set\n         ",
    "links" : [ ]
  }, {
    "name" : "public EqBand getPreEqBandByChannelIndex(int channelIndex, int band)",
    "returnType" : "EqBand",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPreEqBandByChannelIndex(int channelIndex, int band, EqBand preEqBand)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPreEqBandAllChannelsTo(int band, EqBand preEqBand)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Mbc getMbcByChannelIndex(int channelIndex)",
    "returnType" : "Mbc",
    "comment" : "=== MBC",
    "links" : [ ]
  }, {
    "name" : "public void setMbcByChannelIndex(int channelIndex, Mbc mbc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMbcAllChannelsTo(Mbc mbc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public MbcBand getMbcBandByChannelIndex(int channelIndex, int band)",
    "returnType" : "MbcBand",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMbcBandByChannelIndex(int channelIndex, int band, MbcBand mbcBand)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMbcBandAllChannelsTo(int band, MbcBand mbcBand)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Eq getPostEqByChannelIndex(int channelIndex)",
    "returnType" : "Eq",
    "comment" : "=== PostEQ",
    "links" : [ ]
  }, {
    "name" : "public void setPostEqByChannelIndex(int channelIndex, Eq postEq)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPostEqAllChannelsTo(Eq postEq)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public EqBand getPostEqBandByChannelIndex(int channelIndex, int band)",
    "returnType" : "EqBand",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPostEqBandByChannelIndex(int channelIndex, int band, EqBand postEqBand)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPostEqBandAllChannelsTo(int band, EqBand postEqBand)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Limiter getLimiterByChannelIndex(int channelIndex)",
    "returnType" : "Limiter",
    "comment" : "Limiter",
    "links" : [ ]
  }, {
    "name" : "public void setLimiterByChannelIndex(int channelIndex, Limiter limiter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setLimiterAllChannelsTo(Limiter limiter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mVariant", "mChannelCount", "mPreEqInUse", "mPreEqBandCount", "mMbcInUse", "mMbcBandCount", "mPostEqInUse", "mPostEqBandCount", "mLimiterInUse", "mPreferredFrameDuration", "mChannel" ],
  "methodNames" : [ "public String toString()", "private void checkChannel(int channelIndex)", "public int getVariant()", "public float getPreferredFrameDuration()", "public boolean isPreEqInUse()", "public int getPreEqBandCount()", "public boolean isMbcInUse()", "public int getMbcBandCount()", "public boolean isPostEqInUse()", "public int getPostEqBandCount()", "public boolean isLimiterInUse()", "public Channel getChannelByChannelIndex(int channelIndex)", "public void setChannelTo(int channelIndex, Channel channel)", "public void setAllChannelsTo(Channel channel)", "public float getInputGainByChannelIndex(int channelIndex)", "public void setInputGainByChannelIndex(int channelIndex, float inputGain)", "public void setInputGainAllChannelsTo(float inputGain)", "public Eq getPreEqByChannelIndex(int channelIndex)", "public void setPreEqByChannelIndex(int channelIndex, Eq preEq)", "public void setPreEqAllChannelsTo(Eq preEq)", "public EqBand getPreEqBandByChannelIndex(int channelIndex, int band)", "public void setPreEqBandByChannelIndex(int channelIndex, int band, EqBand preEqBand)", "public void setPreEqBandAllChannelsTo(int band, EqBand preEqBand)", "public Mbc getMbcByChannelIndex(int channelIndex)", "public void setMbcByChannelIndex(int channelIndex, Mbc mbc)", "public void setMbcAllChannelsTo(Mbc mbc)", "public MbcBand getMbcBandByChannelIndex(int channelIndex, int band)", "public void setMbcBandByChannelIndex(int channelIndex, int band, MbcBand mbcBand)", "public void setMbcBandAllChannelsTo(int band, MbcBand mbcBand)", "public Eq getPostEqByChannelIndex(int channelIndex)", "public void setPostEqByChannelIndex(int channelIndex, Eq postEq)", "public void setPostEqAllChannelsTo(Eq postEq)", "public EqBand getPostEqBandByChannelIndex(int channelIndex, int band)", "public void setPostEqBandByChannelIndex(int channelIndex, int band, EqBand postEqBand)", "public void setPostEqBandAllChannelsTo(int band, EqBand postEqBand)", "public Limiter getLimiterByChannelIndex(int channelIndex)", "public void setLimiterByChannelIndex(int channelIndex, Limiter limiter)", "public void setLimiterAllChannelsTo(Limiter limiter)" ]
}