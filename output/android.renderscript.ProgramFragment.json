{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/renderscript/ProgramFragment.java",
  "packageName" : "android.renderscript",
  "className" : "ProgramFragment",
  "comment" : "\n * @hide\n * @deprecated in API 16\n * <p>The RenderScript fragment program, also known as fragment shader is responsible\n * for manipulating pixel data in a user defined way. It's constructed from a GLSL\n * shader string containing the program body, textures inputs, and a Type object\n * that describes the constants used by the program. Similar to the vertex programs,\n * when an allocation with constant input values is bound to the shader, its values\n * are sent to the graphics program automatically.</p>\n * <p> The values inside the allocation are not explicitly tracked. If they change between two draw\n * calls using the same program object, the runtime needs to be notified of that\n * change by calling rsgAllocationSyncAll so it could send the new values to hardware.\n * Communication between the vertex and fragment programs is handled internally in the\n * GLSL code. For example, if the fragment program is expecting a varying input called\n * varTex0, the GLSL code inside the program vertex must provide it.\n * </p>\n *\n *",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ ]
}