{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/keystore2/KeyStoreCryptoOperationStreamer.java",
  "packageName" : "android.security.keystore2",
  "className" : "KeyStoreCryptoOperationStreamer",
  "comment" : "\n * Helper for streaming a crypto operation's input and output via KeyStore service's {@code update}\n * and {@code finish} operations.\n *\n * <p>The helper abstracts away to issues that need to be solved in most code that uses KeyStore's\n * update and finish operations. Firstly, KeyStore's update operation can consume only a limited\n * amount of data in one go because the operations are marshalled via Binder. Secondly, the update\n * operation may consume less data than provided, in which case the caller has to buffer the\n * remainder for next time. The helper exposes {@link #update(byte[], int, int) update} and\n * {@link #doFinal(byte[], int, int, byte[]) doFinal} operations which can be used to\n * conveniently implement various JCA crypto primitives.\n *\n * @hide\n ",
  "links" : [ "#doFinal(byte", "#update(byte" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " byte[] update(byte[] input, int inputOffset, int inputLength) throws KeyStoreException",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " byte[] doFinal(byte[] input, int inputOffset, int inputLength, byte[] signature) throws KeyStoreException",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long getConsumedInputSizeBytes()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long getProducedOutputSizeBytes()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " byte[] update(byte[] input, int inputOffset, int inputLength) throws KeyStoreException", " byte[] doFinal(byte[] input, int inputOffset, int inputLength, byte[] signature) throws KeyStoreException", " long getConsumedInputSizeBytes()", " long getProducedOutputSizeBytes()" ],
  "variableNames" : [ ]
}