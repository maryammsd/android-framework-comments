{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/RatingBar.java",
  "packageName" : "android.widget",
  "className" : "RatingBar",
  "comment" : "\n * A RatingBar is an extension of SeekBar and ProgressBar that shows a rating in\n * stars. The user can touch/drag or use arrow keys to set the rating when using\n * the default size RatingBar. The smaller RatingBar style (\n * {@link android.R.attr#ratingBarStyleSmall}) and the larger indicator-only\n * style ({@link android.R.attr#ratingBarStyleIndicator}) do not support user\n * interaction and should only be used as indicators.\n * <p>\n * When using a RatingBar that supports user interaction, placing widgets to the\n * left or right of the RatingBar is discouraged.\n * <p>\n * The number of stars set (via {@link #setNumStars(int)} or in an XML layout)\n * will be shown when the layout width is set to wrap content (if another layout\n * width is set, the results may be unpredictable).\n * <p>\n * The secondary progress should not be modified by the client as it is used\n * internally as the background for a fractionally filled star.\n *\n * @attr ref android.R.styleable#RatingBar_numStars\n * @attr ref android.R.styleable#RatingBar_rating\n * @attr ref android.R.styleable#RatingBar_stepSize\n * @attr ref android.R.styleable#RatingBar_isIndicator\n ",
  "links" : [ "#setNumStars(int)", "android.R.attr#ratingBarStyleSmall", "android.R.attr#ratingBarStyleIndicator" ],
  "variables" : [ {
    "name" : "PLURALS_RATING",
    "type" : "String",
    "comment" : "\n     * Key used for generating Text-to-Speech output regarding the current star rating.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "PLURALS_MAX",
    "type" : "String",
    "comment" : "\n     * Key used for generating Text-to-Speech output regarding the maximum star count.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mNumStars",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgressOnStartTracking",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnRatingBarChangeListener",
    "type" : "OnRatingBarChangeListener",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setOnRatingBarChangeListener(OnRatingBarChangeListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Sets the listener to be called when the rating changes.\n     *\n     * @param listener The listener.\n     ",
    "links" : [ ]
  }, {
    "name" : "public OnRatingBarChangeListener getOnRatingBarChangeListener()",
    "returnType" : "OnRatingBarChangeListener",
    "comment" : "\n     * @return The listener (may be null) that is listening for rating change\n     *         events.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIsIndicator(boolean isIndicator)",
    "returnType" : "void",
    "comment" : "\n     * Whether this rating bar should only be an indicator (thus non-changeable\n     * by the user).\n     *\n     * @param isIndicator Whether it should be an indicator.\n     *\n     * @attr ref android.R.styleable#RatingBar_isIndicator\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isIndicator()",
    "returnType" : "boolean",
    "comment" : "\n     * @return Whether this rating bar is only an indicator.\n     *\n     * @attr ref android.R.styleable#RatingBar_isIndicator\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNumStars(final int numStars)",
    "returnType" : "void",
    "comment" : "\n     * Sets the number of stars to show. In order for these to be shown\n     * properly, it is recommended the layout width of this widget be wrap\n     * content.\n     *\n     * @param numStars The number of stars.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNumStars()",
    "returnType" : "int",
    "comment" : "\n     * Returns the number of stars shown.\n     * @return The number of stars shown.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setRating(float rating)",
    "returnType" : "void",
    "comment" : "\n     * Sets the rating (the number of stars filled).\n     *\n     * @param rating The rating to set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getRating()",
    "returnType" : "float",
    "comment" : "\n     * Gets the current rating (number of stars filled).\n     *\n     * @return The current rating.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setStepSize(float stepSize)",
    "returnType" : "void",
    "comment" : "\n     * Sets the step size (granularity) of this rating bar.\n     *\n     * @param stepSize The step size of this rating bar. For example, if\n     *            half-star granularity is wanted, this would be 0.5.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getStepSize()",
    "returnType" : "float",
    "comment" : "\n     * Gets the step size of this rating bar.\n     *\n     * @return The step size.\n     ",
    "links" : [ ]
  }, {
    "name" : "private float getProgressPerStar()",
    "returnType" : "float",
    "comment" : "\n     * @return The amount of progress that fits into a star\n     ",
    "links" : [ ]
  }, {
    "name" : " Shape getDrawableShape()",
    "returnType" : "Shape",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onProgressRefresh(float scale, boolean fromUser, int progress)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateSecondaryProgress(int progress)",
    "returnType" : "void",
    "comment" : "\n     * The secondary progress is used to differentiate the background of a\n     * partially filled star. This method keeps the secondary progress in sync\n     * with the progress.\n     *\n     * @param progress The primary progress level.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected synchronized void onMeasure(int widthMeasureSpec, int heightMeasureSpec)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onStartTrackingTouch()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onStopTrackingTouch()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onKeyChange()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void dispatchRatingChange(boolean fromUser)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized void setMax(int max)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getAccessibilityClassName()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onInitializeAccessibilityNodeInfoInternal(AccessibilityNodeInfo info)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " boolean canUserSetProgress()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setOnRatingBarChangeListener(OnRatingBarChangeListener listener)", "public OnRatingBarChangeListener getOnRatingBarChangeListener()", "public void setIsIndicator(boolean isIndicator)", "public boolean isIndicator()", "public void setNumStars(final int numStars)", "public int getNumStars()", "public void setRating(float rating)", "public float getRating()", "public void setStepSize(float stepSize)", "public float getStepSize()", "private float getProgressPerStar()", " Shape getDrawableShape()", " void onProgressRefresh(float scale, boolean fromUser, int progress)", "private void updateSecondaryProgress(int progress)", "protected synchronized void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", " void onStartTrackingTouch()", " void onStopTrackingTouch()", " void onKeyChange()", " void dispatchRatingChange(boolean fromUser)", "public synchronized void setMax(int max)", "public CharSequence getAccessibilityClassName()", "public void onInitializeAccessibilityNodeInfoInternal(AccessibilityNodeInfo info)", " boolean canUserSetProgress()" ],
  "variableNames" : [ "PLURALS_RATING", "PLURALS_MAX", "mNumStars", "mProgressOnStartTracking", "mOnRatingBarChangeListener" ]
}