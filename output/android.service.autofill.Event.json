{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/autofill/FillEventHistory.java",
  "packageName" : "android.service.autofill",
  "className" : "Event",
  "comment" : "\n     * Description of an event that occured after the latest call to\n     * {@link FillCallback#onSuccess(FillResponse)}.\n     ",
  "variables" : [ {
    "name" : "TYPE_DATASET_SELECTED",
    "type" : "int",
    "comment" : "\n         * A dataset was selected. The dataset selected can be read from {@link #getDatasetId()}.\n         *\n         * <p><b>Note: </b>on Android {@link android.os.Build.VERSION_CODES#O}, this event was also\n         * incorrectly reported after a\n         * {@link Dataset.Builder#setAuthentication(IntentSender) dataset authentication} was\n         * selected and the service returned a dataset in the\n         * {@link AutofillManager#EXTRA_AUTHENTICATION_RESULT} of the activity launched from that\n         * {@link IntentSender}. This behavior was fixed on Android\n         * {@link android.os.Build.VERSION_CODES#O_MR1}.\n         ",
    "links" : [ "android.os.Build.VERSION_CODES#O", "android.content.IntentSender", "android.view.autofill.AutofillManager#EXTRA_AUTHENTICATION_RESULT", "android.os.Build.VERSION_CODES#O_MR1", "Dataset.Builder#setAuthentication(IntentSender)", "#getDatasetId()" ]
  }, {
    "name" : "TYPE_DATASET_AUTHENTICATION_SELECTED",
    "type" : "int",
    "comment" : "\n         * A {@link Dataset.Builder#setAuthentication(IntentSender) dataset authentication} was\n         * selected. The dataset authenticated can be read from {@link #getDatasetId()}.\n         ",
    "links" : [ "Dataset.Builder#setAuthentication(IntentSender)", "#getDatasetId()" ]
  }, {
    "name" : "TYPE_AUTHENTICATION_SELECTED",
    "type" : "int",
    "comment" : "\n         * A {@link FillResponse.Builder#setAuthentication(android.view.autofill.AutofillId[],\n         * IntentSender, android.widget.RemoteViews) fill response authentication} was selected.\n         ",
    "links" : [ "FillResponse.Builder#setAuthentication(android.view.autofill.AutofillId" ]
  }, {
    "name" : "TYPE_SAVE_SHOWN",
    "type" : "int",
    "comment" : " A save UI was shown. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_CONTEXT_COMMITTED",
    "type" : "int",
    "comment" : "\n         * A committed autofill context for which the autofill service provided datasets.\n         *\n         * <p>This event is useful to track:\n         * <ul>\n         *   <li>Which datasets (if any) were selected by the user\n         *       ({@link #getSelectedDatasetIds()}).\n         *   <li>Which datasets (if any) were NOT selected by the user\n         *       ({@link #getIgnoredDatasetIds()}).\n         *   <li>Which fields in the selected datasets were changed by the user after the dataset\n         *       was selected ({@link #getChangedFields()}.\n         *   <li>Which fields match the {@link UserData} set by the service.\n         * </ul>\n         *\n         * <p><b>Note: </b>This event is only generated when:\n         * <ul>\n         *   <li>The autofill context is committed.\n         *   <li>The service provides at least one dataset in the\n         *       {@link FillResponse fill responses} associated with the context.\n         *   <li>The last {@link FillResponse fill responses} associated with the context has the\n         *       {@link FillResponse#FLAG_TRACK_CONTEXT_COMMITED} flag.\n         * </ul>\n         *\n         * <p>See {@link android.view.autofill.AutofillManager} for more information about autofill\n         * contexts.\n         ",
    "links" : [ "android.service.autofill.FillResponse#FLAG_TRACK_CONTEXT_COMMITED", "#getChangedFields()", "android.service.autofill.FillResponse", "android.service.autofill.UserData", "#getIgnoredDatasetIds()", "#getSelectedDatasetIds()", "android.view.autofill.AutofillManager" ]
  }, {
    "name" : "TYPE_DATASETS_SHOWN",
    "type" : "int",
    "comment" : "\n         * A dataset selector was shown.\n         *\n         * <p>This event is fired whenever the autofill UI was presented to the user.</p>\n         ",
    "links" : [ ]
  }, {
    "name" : "mEventType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDatasetId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientState",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSelectedDatasetIds",
    "type" : "List<String>",
    "comment" : " stores it as List",
    "links" : [ ]
  }, {
    "name" : "mIgnoredDatasetIds",
    "type" : "ArraySet<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChangedFieldIds",
    "type" : "ArrayList<AutofillId>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChangedDatasetIds",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mManuallyFilledFieldIds",
    "type" : "ArrayList<AutofillId>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mManuallyFilledDatasetIds",
    "type" : "ArrayList<ArrayList<String>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDetectedFieldIds",
    "type" : "AutofillId[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDetectedFieldClassifications",
    "type" : "FieldClassification[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n         * Returns the type of the event.\n         *\n         * @return The type of the event\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getDatasetId()",
    "returnType" : "String",
    "comment" : "\n         * Returns the id of dataset the id was on.\n         *\n         * @return The id of dataset, or {@code null} the event is not associated with a dataset.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getClientState()",
    "returnType" : "Bundle",
    "comment" : "\n         * Returns the client state from the {@link FillResponse} used to generate this event.\n         *\n         * <p><b>Note: </b>the state is associated with the app that was autofilled in the previous\n         * {@link\n         * AutofillService#onFillRequest(FillRequest, android.os.CancellationSignal, FillCallback)},\n         * which is not necessary the same app being autofilled now.\n         ",
    "links" : [ "android.service.autofill.FillResponse", "android.service.autofill.AutofillService#onFillRequest(FillRequest" ]
  }, {
    "name" : "public Set<String> getSelectedDatasetIds()",
    "returnType" : "Set<String>",
    "comment" : "\n         * Returns which datasets were selected by the user.\n         *\n         * <p><b>Note: </b>Only set on events of type {@link #TYPE_CONTEXT_COMMITTED}.\n         ",
    "links" : [ "#TYPE_CONTEXT_COMMITTED" ]
  }, {
    "name" : "public Set<String> getIgnoredDatasetIds()",
    "returnType" : "Set<String>",
    "comment" : "\n         * Returns which datasets were NOT selected by the user.\n         *\n         * <p><b>Note: </b>Only set on events of type {@link #TYPE_CONTEXT_COMMITTED}.\n         ",
    "links" : [ "#TYPE_CONTEXT_COMMITTED" ]
  }, {
    "name" : "public Map<AutofillId, String> getChangedFields()",
    "returnType" : "Map<AutofillId, String>",
    "comment" : "\n         * Returns which fields in the selected datasets were changed by the user after the dataset\n         * was selected.\n         *\n         * <p>For example, server provides:\n         *\n         * <pre class=\"prettyprint\">\n         *  FillResponse response = new FillResponse.Builder()\n         *      .addDataset(new Dataset.Builder(presentation1)\n         *          .setId(\"4815\")\n         *          .setValue(usernameId, AutofillValue.forText(\"MrPlow\"))\n         *          .build())\n         *      .addDataset(new Dataset.Builder(presentation2)\n         *          .setId(\"162342\")\n         *          .setValue(passwordId, AutofillValue.forText(\"D'OH\"))\n         *          .build())\n         *      .build();\n         * </pre>\n         *\n         * <p>User select both datasets (for username and password) but after the fields are\n         * autofilled, user changes them to:\n         *\n         * <pre class=\"prettyprint\">\n         *   username = \"ElBarto\";\n         *   password = \"AyCaramba\";\n         * </pre>\n         *\n         * <p>Then the result is the following map:\n         *\n         * <pre class=\"prettyprint\">\n         *   usernameId => \"4815\"\n         *   passwordId => \"162342\"\n         * </pre>\n         *\n         * <p><b>Note: </b>Only set on events of type {@link #TYPE_CONTEXT_COMMITTED}.\n         *\n         * @return map map whose key is the id of the change fields, and value is the id of\n         * dataset that has that field and was selected by the user.\n         ",
    "links" : [ "#TYPE_CONTEXT_COMMITTED" ]
  }, {
    "name" : "public Map<AutofillId, FieldClassification> getFieldsClassification()",
    "returnType" : "Map<AutofillId, FieldClassification>",
    "comment" : "\n         * Gets the <a href=\"AutofillService.html#FieldClassification\">field classification</a>\n         * results.\n         *\n         * <p><b>Note: </b>Only set on events of type {@link #TYPE_CONTEXT_COMMITTED}, when the\n         * service requested {@link FillResponse.Builder#setFieldClassificationIds(AutofillId...)\n         * field classification}.\n         ",
    "links" : [ "FillResponse.Builder#setFieldClassificationIds(AutofillId...)", "#TYPE_CONTEXT_COMMITTED" ]
  }, {
    "name" : "public Map<AutofillId, Set<String>> getManuallyEnteredField()",
    "returnType" : "Map<AutofillId, Set<String>>",
    "comment" : "\n         * Returns which fields were available on datasets provided by the service but manually\n         * entered by the user.\n         *\n         * <p>For example, server provides:\n         *\n         * <pre class=\"prettyprint\">\n         *  FillResponse response = new FillResponse.Builder()\n         *      .addDataset(new Dataset.Builder(presentation1)\n         *          .setId(\"4815\")\n         *          .setValue(usernameId, AutofillValue.forText(\"MrPlow\"))\n         *          .setValue(passwordId, AutofillValue.forText(\"AyCaramba\"))\n         *          .build())\n         *      .addDataset(new Dataset.Builder(presentation2)\n         *          .setId(\"162342\")\n         *          .setValue(usernameId, AutofillValue.forText(\"ElBarto\"))\n         *          .setValue(passwordId, AutofillValue.forText(\"D'OH\"))\n         *          .build())\n         *      .addDataset(new Dataset.Builder(presentation3)\n         *          .setId(\"108\")\n         *          .setValue(usernameId, AutofillValue.forText(\"MrPlow\"))\n         *          .setValue(passwordId, AutofillValue.forText(\"D'OH\"))\n         *          .build())\n         *      .build();\n         * </pre>\n         *\n         * <p>User doesn't select a dataset but manually enters:\n         *\n         * <pre class=\"prettyprint\">\n         *   username = \"MrPlow\";\n         *   password = \"D'OH\";\n         * </pre>\n         *\n         * <p>Then the result is the following map:\n         *\n         * <pre class=\"prettyprint\">\n         *   usernameId => { \"4815\", \"108\"}\n         *   passwordId => { \"162342\", \"108\" }\n         * </pre>\n         *\n         * <p><b>Note: </b>Only set on events of type {@link #TYPE_CONTEXT_COMMITTED}.\n         *\n         * @return map map whose key is the id of the manually-entered field, and value is the\n         * ids of the datasets that have that value but were not selected by the user.\n         ",
    "links" : [ "#TYPE_CONTEXT_COMMITTED" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TYPE_DATASET_SELECTED", "TYPE_DATASET_AUTHENTICATION_SELECTED", "TYPE_AUTHENTICATION_SELECTED", "TYPE_SAVE_SHOWN", "TYPE_CONTEXT_COMMITTED", "TYPE_DATASETS_SHOWN", "mEventType", "mDatasetId", "mClientState", "mSelectedDatasetIds", "mIgnoredDatasetIds", "mChangedFieldIds", "mChangedDatasetIds", "mManuallyFilledFieldIds", "mManuallyFilledDatasetIds", "mDetectedFieldIds", "mDetectedFieldClassifications" ],
  "methodNames" : [ "public int getType()", "public String getDatasetId()", "public Bundle getClientState()", "public Set<String> getSelectedDatasetIds()", "public Set<String> getIgnoredDatasetIds()", "public Map<AutofillId, String> getChangedFields()", "public Map<AutofillId, FieldClassification> getFieldsClassification()", "public Map<AutofillId, Set<String>> getManuallyEnteredField()", "public String toString()" ]
}