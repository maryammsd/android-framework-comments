{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/io/ObjectOutputStream.java",
  "packageName" : "java.io",
  "className" : "HandleTable",
  "comment" : "\n     * Lightweight identity hash table which maps objects to integer handles,\n     * assigned in ascending order.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "size",
    "type" : "int",
    "comment" : " number of mappings in table/next available handle ",
    "links" : [ ]
  }, {
    "name" : "threshold",
    "type" : "int",
    "comment" : " size threshold determining when to expand hash spine ",
    "links" : [ ]
  }, {
    "name" : "loadFactor",
    "type" : "float",
    "comment" : " factor for computing size threshold ",
    "links" : [ ]
  }, {
    "name" : "spine",
    "type" : "int[]",
    "comment" : " maps hash value -> candidate handle value ",
    "links" : [ ]
  }, {
    "name" : "next",
    "type" : "int[]",
    "comment" : " maps handle value -> next candidate handle value ",
    "links" : [ ]
  }, {
    "name" : "objs",
    "type" : "Object[]",
    "comment" : " maps handle value -> associated object ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " int assign(Object obj)",
    "returnType" : "int",
    "comment" : "\n         * Assigns next available handle to given object, and returns handle\n         * value.  Handles are assigned in ascending order starting at 0.\n         ",
    "links" : [ ]
  }, {
    "name" : " int lookup(Object obj)",
    "returnType" : "int",
    "comment" : "\n         * Looks up and returns handle associated with given object, or -1 if\n         * no mapping found.\n         ",
    "links" : [ ]
  }, {
    "name" : " void clear()",
    "returnType" : "void",
    "comment" : "\n         * Resets table to its initial (empty) state.\n         ",
    "links" : [ ]
  }, {
    "name" : " int size()",
    "returnType" : "int",
    "comment" : "\n         * Returns the number of mappings currently in table.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void insert(Object obj, int handle)",
    "returnType" : "void",
    "comment" : "\n         * Inserts mapping object -> handle mapping into table.  Assumes table\n         * is large enough to accommodate new mapping.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void growSpine()",
    "returnType" : "void",
    "comment" : "\n         * Expands the hash \"spine\" -- equivalent to increasing the number of\n         * buckets in a conventional hash table.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void growEntries()",
    "returnType" : "void",
    "comment" : "\n         * Increases hash table capacity by lengthening entry arrays.\n         ",
    "links" : [ ]
  }, {
    "name" : "private int hash(Object obj)",
    "returnType" : "int",
    "comment" : "\n         * Returns hash value for given object.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " int assign(Object obj)", " int lookup(Object obj)", " void clear()", " int size()", "private void insert(Object obj, int handle)", "private void growSpine()", "private void growEntries()", "private int hash(Object obj)" ],
  "variableNames" : [ "size", "threshold", "loadFactor", "spine", "next", "objs" ]
}