{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/zip/ZipUtils.java",
  "packageName" : "java.util.zip",
  "className" : "ZipUtils",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "WINDOWS_EPOCH_IN_MICROSECONDS",
    "type" : "long",
    "comment" : " used to adjust values between Windows and java epoch",
    "links" : [ ]
  }, {
    "name" : "WINDOWS_TIME_NOT_AVAILABLE",
    "type" : "long",
    "comment" : " used to indicate the corresponding windows time is not available",
    "links" : [ ]
  }, {
    "name" : "defaultBuf",
    "type" : "ByteBuffer",
    "comment" : " static final ByteBuffer defaultBuf = ByteBuffer.allocateDirect(0);",
    "links" : [ ]
  }, {
    "name" : "UPPER_UNIXTIME_BOUND",
    "type" : "long",
    "comment" : "\n     * The upper bound of the 32-bit unix time, the \"year 2038 problem\".\n     ",
    "links" : [ ]
  }, {
    "name" : "FILE_ATTRIBUTES_UNIX",
    "type" : "int",
    "comment" : " Unix",
    "links" : [ ]
  }, {
    "name" : "VERSION_MADE_BY_BASE_UNIX",
    "type" : "int",
    "comment" : " Unix",
    "links" : [ ]
  }, {
    "name" : "END_MAXLEN",
    "type" : "long",
    "comment" : " The END header is followed by a variable length comment of size < 64k.",
    "links" : [ ]
  }, {
    "name" : "READBLOCKSZ",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "unsafe",
    "type" : "Unsafe",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "byteBufferArrayOffset",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "byteBufferOffsetOffset",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static final FileTime winTimeToFileTime(long wtime)",
    "returnType" : "FileTime",
    "comment" : "\n     * Converts Windows time (in microseconds, UTC/GMT) time to FileTime.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final long fileTimeToWinTime(FileTime ftime)",
    "returnType" : "long",
    "comment" : "\n     * Converts FileTime to Windows time.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final FileTime unixTimeToFileTime(long utime)",
    "returnType" : "FileTime",
    "comment" : "\n     * Converts \"standard Unix time\"(in seconds, UTC/GMT) to FileTime\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final long fileTimeToUnixTime(FileTime ftime)",
    "returnType" : "long",
    "comment" : "\n     * Converts FileTime to \"standard Unix time\".\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long dosToJavaTime(long dtime)",
    "returnType" : "long",
    "comment" : "\n     * Converts DOS time to Java time (number of milliseconds since epoch).\n     ",
    "links" : [ ]
  }, {
    "name" : "private static long overflowDosToJavaTime(int year, int month, int day, int hour, int minute, int second)",
    "returnType" : "long",
    "comment" : "\n     * Deal with corner cases where an arguably mal-formed DOS time is used\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long extendedDosToJavaTime(long xdostime)",
    "returnType" : "long",
    "comment" : "\n     * Converts extended DOS time to Java time, where up to 1999 milliseconds\n     * might be encoded into the upper half of the returned long.\n     *\n     * @param xdostime the extended DOS time value\n     * @return milliseconds since epoch\n     ",
    "links" : [ ]
  }, {
    "name" : "private static long javaToDosTime(LocalDateTime ldt)",
    "returnType" : "long",
    "comment" : "\n     * Converts Java time to DOS time.\n     ",
    "links" : [ ]
  }, {
    "name" : " static long javaToExtendedDosTime(long time)",
    "returnType" : "long",
    "comment" : "\n     * Converts Java time to DOS time, encoding any milliseconds lost\n     * in the conversion into the upper half of the returned long.\n     *\n     * @param time milliseconds since epoch\n     * @return DOS time with 2s remainder encoded into upper half\n     ",
    "links" : [ ]
  }, {
    "name" : " static LocalDateTime javaEpochToLocalDateTime(long time)",
    "returnType" : "LocalDateTime",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static final int get16(byte[] b, int off)",
    "returnType" : "int",
    "comment" : "\n     * Fetches unsigned 16-bit value from byte array at specified offset.\n     * The bytes are assumed to be in Intel (little-endian) byte order.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final long get32(byte[] b, int off)",
    "returnType" : "long",
    "comment" : "\n     * Fetches unsigned 32-bit value from byte array at specified offset.\n     * The bytes are assumed to be in Intel (little-endian) byte order.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final long get64(byte[] b, int off)",
    "returnType" : "long",
    "comment" : "\n     * Fetches signed 64-bit value from byte array at specified offset.\n     * The bytes are assumed to be in Intel (little-endian) byte order.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final int get32S(byte[] b, int off)",
    "returnType" : "int",
    "comment" : "\n     * Fetches signed 32-bit value from byte array at specified offset.\n     * The bytes are assumed to be in Intel (little-endian) byte order.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : " static final int CH(byte[] b, int n)",
    "returnType" : "int",
    "comment" : " fields access methods",
    "links" : [ ]
  }, {
    "name" : " static final int SH(byte[] b, int n)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long LG(byte[] b, int n)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long LL(byte[] b, int n)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long GETSIG(byte[] b)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long LOCSIG(byte[] b)",
    "returnType" : "long",
    "comment" : " signature",
    "links" : [ ]
  }, {
    "name" : " static final int LOCVER(byte[] b)",
    "returnType" : "int",
    "comment" : " version needed to extract",
    "links" : [ ]
  }, {
    "name" : " static final int LOCFLG(byte[] b)",
    "returnType" : "int",
    "comment" : " general purpose bit flags",
    "links" : [ ]
  }, {
    "name" : " static final int LOCHOW(byte[] b)",
    "returnType" : "int",
    "comment" : " compression method",
    "links" : [ ]
  }, {
    "name" : " static final long LOCTIM(byte[] b)",
    "returnType" : "long",
    "comment" : " modification time",
    "links" : [ ]
  }, {
    "name" : " static final long LOCCRC(byte[] b)",
    "returnType" : "long",
    "comment" : " crc of uncompressed data",
    "links" : [ ]
  }, {
    "name" : " static final long LOCSIZ(byte[] b)",
    "returnType" : "long",
    "comment" : " compressed data size",
    "links" : [ ]
  }, {
    "name" : " static final long LOCLEN(byte[] b)",
    "returnType" : "long",
    "comment" : " uncompressed data size",
    "links" : [ ]
  }, {
    "name" : " static final int LOCNAM(byte[] b)",
    "returnType" : "int",
    "comment" : " filename length",
    "links" : [ ]
  }, {
    "name" : " static final int LOCEXT(byte[] b)",
    "returnType" : "int",
    "comment" : " extra field length",
    "links" : [ ]
  }, {
    "name" : " static final long EXTCRC(byte[] b)",
    "returnType" : "long",
    "comment" : " crc of uncompressed data",
    "links" : [ ]
  }, {
    "name" : " static final long EXTSIZ(byte[] b)",
    "returnType" : "long",
    "comment" : " compressed size",
    "links" : [ ]
  }, {
    "name" : " static final long EXTLEN(byte[] b)",
    "returnType" : "long",
    "comment" : " uncompressed size",
    "links" : [ ]
  }, {
    "name" : " static final int ENDSUB(byte[] b)",
    "returnType" : "int",
    "comment" : " number of entries on this disk",
    "links" : [ ]
  }, {
    "name" : " static final int ENDTOT(byte[] b)",
    "returnType" : "int",
    "comment" : " total number of entries",
    "links" : [ ]
  }, {
    "name" : " static final long ENDSIZ(byte[] b)",
    "returnType" : "long",
    "comment" : " central directory size",
    "links" : [ ]
  }, {
    "name" : " static final long ENDOFF(byte[] b)",
    "returnType" : "long",
    "comment" : " central directory offset",
    "links" : [ ]
  }, {
    "name" : " static final int ENDCOM(byte[] b)",
    "returnType" : "int",
    "comment" : " size of zip file comment",
    "links" : [ ]
  }, {
    "name" : " static final int ENDCOM(byte[] b, int off)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long ZIP64_ENDTOD(byte[] b)",
    "returnType" : "long",
    "comment" : " total number of entries on disk",
    "links" : [ ]
  }, {
    "name" : " static final long ZIP64_ENDTOT(byte[] b)",
    "returnType" : "long",
    "comment" : " total number of entries",
    "links" : [ ]
  }, {
    "name" : " static final long ZIP64_ENDSIZ(byte[] b)",
    "returnType" : "long",
    "comment" : " central directory size",
    "links" : [ ]
  }, {
    "name" : " static final long ZIP64_ENDOFF(byte[] b)",
    "returnType" : "long",
    "comment" : " central directory offset",
    "links" : [ ]
  }, {
    "name" : " static final long ZIP64_LOCOFF(byte[] b)",
    "returnType" : "long",
    "comment" : " zip64 end offset",
    "links" : [ ]
  }, {
    "name" : " static final long CENSIG(byte[] b, int pos)",
    "returnType" : "long",
    "comment" : " central directory header (CEN) fields",
    "links" : [ ]
  }, {
    "name" : " static final int CENVEM(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENVEM_FA(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : " file attribute compatibility",
    "links" : [ ]
  }, {
    "name" : " static final int CENVER(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENFLG(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENHOW(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long CENTIM(byte[] b, int pos)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long CENCRC(byte[] b, int pos)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long CENSIZ(byte[] b, int pos)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long CENLEN(byte[] b, int pos)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENNAM(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENEXT(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENCOM(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENDSK(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENATT(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final long CENATX(byte[] b, int pos)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static final int CENATX_PERMS(byte[] b, int pos)",
    "returnType" : "int",
    "comment" : " posix permission data",
    "links" : [ ]
  }, {
    "name" : " static final long CENOFF(byte[] b, int pos)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static byte[] getBufferArray(ByteBuffer byteBuffer)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getBufferOffset(ByteBuffer byteBuffer)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static final FileTime winTimeToFileTime(long wtime)", "public static final long fileTimeToWinTime(FileTime ftime)", "public static final FileTime unixTimeToFileTime(long utime)", "public static final long fileTimeToUnixTime(FileTime ftime)", "public static long dosToJavaTime(long dtime)", "private static long overflowDosToJavaTime(int year, int month, int day, int hour, int minute, int second)", "public static long extendedDosToJavaTime(long xdostime)", "private static long javaToDosTime(LocalDateTime ldt)", " static long javaToExtendedDosTime(long time)", " static LocalDateTime javaEpochToLocalDateTime(long time)", "public static final int get16(byte[] b, int off)", "public static final long get32(byte[] b, int off)", "public static final long get64(byte[] b, int off)", "public static final int get32S(byte[] b, int off)", " static final int CH(byte[] b, int n)", " static final int SH(byte[] b, int n)", " static final long LG(byte[] b, int n)", " static final long LL(byte[] b, int n)", " static final long GETSIG(byte[] b)", " static final long LOCSIG(byte[] b)", " static final int LOCVER(byte[] b)", " static final int LOCFLG(byte[] b)", " static final int LOCHOW(byte[] b)", " static final long LOCTIM(byte[] b)", " static final long LOCCRC(byte[] b)", " static final long LOCSIZ(byte[] b)", " static final long LOCLEN(byte[] b)", " static final int LOCNAM(byte[] b)", " static final int LOCEXT(byte[] b)", " static final long EXTCRC(byte[] b)", " static final long EXTSIZ(byte[] b)", " static final long EXTLEN(byte[] b)", " static final int ENDSUB(byte[] b)", " static final int ENDTOT(byte[] b)", " static final long ENDSIZ(byte[] b)", " static final long ENDOFF(byte[] b)", " static final int ENDCOM(byte[] b)", " static final int ENDCOM(byte[] b, int off)", " static final long ZIP64_ENDTOD(byte[] b)", " static final long ZIP64_ENDTOT(byte[] b)", " static final long ZIP64_ENDSIZ(byte[] b)", " static final long ZIP64_ENDOFF(byte[] b)", " static final long ZIP64_LOCOFF(byte[] b)", " static final long CENSIG(byte[] b, int pos)", " static final int CENVEM(byte[] b, int pos)", " static final int CENVEM_FA(byte[] b, int pos)", " static final int CENVER(byte[] b, int pos)", " static final int CENFLG(byte[] b, int pos)", " static final int CENHOW(byte[] b, int pos)", " static final long CENTIM(byte[] b, int pos)", " static final long CENCRC(byte[] b, int pos)", " static final long CENSIZ(byte[] b, int pos)", " static final long CENLEN(byte[] b, int pos)", " static final int CENNAM(byte[] b, int pos)", " static final int CENEXT(byte[] b, int pos)", " static final int CENCOM(byte[] b, int pos)", " static final int CENDSK(byte[] b, int pos)", " static final int CENATT(byte[] b, int pos)", " static final long CENATX(byte[] b, int pos)", " static final int CENATX_PERMS(byte[] b, int pos)", " static final long CENOFF(byte[] b, int pos)", " static byte[] getBufferArray(ByteBuffer byteBuffer)", " static int getBufferOffset(ByteBuffer byteBuffer)" ],
  "variableNames" : [ "WINDOWS_EPOCH_IN_MICROSECONDS", "WINDOWS_TIME_NOT_AVAILABLE", "defaultBuf", "UPPER_UNIXTIME_BOUND", "FILE_ATTRIBUTES_UNIX", "VERSION_MADE_BY_BASE_UNIX", "END_MAXLEN", "READBLOCKSZ", "unsafe", "byteBufferArrayOffset", "byteBufferOffsetOffset" ]
}