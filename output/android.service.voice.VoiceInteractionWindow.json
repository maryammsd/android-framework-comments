{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/voice/VoiceInteractionWindow.java",
  "packageName" : "android.service.voice",
  "className" : "VoiceInteractionWindow",
  "comment" : "\n * A {@link VoiceInteractionWindow} is a {@link Dialog} that is intended to be used for a top-level\n * {@link VoiceInteractionSession}. It will be displayed along the edge of the screen, moving the\n * application user interface away from it so that the focused item is always visible.\n ",
  "links" : [ "android.service.voice.VoiceInteractionWindow", "android.app.Dialog", "android.service.voice.VoiceInteractionSession" ],
  "variables" : [ {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "Callback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeyEventCallback",
    "type" : "KeyEvent.Callback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDispatcherState",
    "type" : "KeyEvent.DispatcherState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGravity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTakesFocus",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBounds",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void setToken(IBinder token)",
    "returnType" : "void",
    "comment" : "\n     * Set {@link IBinder} window token to the window.\n     *\n     * <p>This method can be called only once.</p>\n     * @param token {@link IBinder} token to be associated with the window.\n     ",
    "links" : [ "android.os.IBinder" ]
  }, {
    "name" : "public void onWindowFocusChanged(boolean hasFocus)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean dispatchTouchEvent(MotionEvent ev)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateWidthHeight(WindowManager.LayoutParams lp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyDown(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyLongPress(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyUp(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyMultiple(int keyCode, int count, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onBackPressed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void initDockWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void show()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateWindowState(@WindowState int newState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String stateToString(@WindowState int state)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " void setToken(IBinder token)", "public void onWindowFocusChanged(boolean hasFocus)", "public boolean dispatchTouchEvent(MotionEvent ev)", "private void updateWidthHeight(WindowManager.LayoutParams lp)", "public boolean onKeyDown(int keyCode, KeyEvent event)", "public boolean onKeyLongPress(int keyCode, KeyEvent event)", "public boolean onKeyUp(int keyCode, KeyEvent event)", "public boolean onKeyMultiple(int keyCode, int count, KeyEvent event)", "public void onBackPressed()", "private void initDockWindow()", "public void show()", "private void updateWindowState(@WindowState int newState)", "private static String stateToString(@WindowState int state)" ],
  "variableNames" : [ "DEBUG", "TAG", "mName", "mCallback", "mKeyEventCallback", "mDispatcherState", "mWindowType", "mGravity", "mTakesFocus", "mBounds", "mWindowState" ]
}