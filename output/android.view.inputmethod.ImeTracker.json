{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inputmethod/ImeTracker.java",
  "packageName" : "android.view.inputmethod",
  "className" : "ImeTracker",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG_IME_VISIBILITY",
    "type" : "boolean",
    "comment" : " The debug flag for IME visibility event log. ",
    "links" : [ ]
  }, {
    "name" : "TOKEN_NONE",
    "type" : "String",
    "comment" : " The message to indicate if there is no valid {@link Token}. ",
    "links" : [ "Token" ]
  }, {
    "name" : "TYPE_SHOW",
    "type" : "int",
    "comment" : " IME show request type. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_HIDE",
    "type" : "int",
    "comment" : " IME hide request type. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_RUN",
    "type" : "int",
    "comment" : " IME request running. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_CANCEL",
    "type" : "int",
    "comment" : " IME request cancelled. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_FAIL",
    "type" : "int",
    "comment" : " IME request failed. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_SUCCESS",
    "type" : "int",
    "comment" : " IME request succeeded. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_TIMEOUT",
    "type" : "int",
    "comment" : " IME request timed out. ",
    "links" : [ ]
  }, {
    "name" : "ORIGIN_CLIENT",
    "type" : "int",
    "comment" : " The IME request originated in the client. ",
    "links" : [ ]
  }, {
    "name" : "ORIGIN_SERVER",
    "type" : "int",
    "comment" : " The IME request originated in the server. ",
    "links" : [ ]
  }, {
    "name" : "ORIGIN_IME",
    "type" : "int",
    "comment" : " The IME request originated in the IME. ",
    "links" : [ ]
  }, {
    "name" : "ORIGIN_WM_SHELL",
    "type" : "int",
    "comment" : " The IME request originated in the WindowManager Shell. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_NOT_SET",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_VIEW_SERVED",
    "type" : "int",
    "comment" : " The view that requested the IME has been served by the IMM. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_CLIENT_KNOWN",
    "type" : "int",
    "comment" : " The IME client that requested the IME has window manager focus. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_CLIENT_FOCUSED",
    "type" : "int",
    "comment" : " The IME client that requested the IME has IME focus. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_ACCESSIBILITY",
    "type" : "int",
    "comment" : " The IME request complies with the current accessibility settings. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_SYSTEM_READY",
    "type" : "int",
    "comment" : " The server is ready to run third party code. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_HIDE_IMPLICIT",
    "type" : "int",
    "comment" : " Checked the implicit hide request against any explicit show requests. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_HIDE_NOT_ALWAYS",
    "type" : "int",
    "comment" : " Checked the not-always hide request against any forced show requests. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_WAIT_IME",
    "type" : "int",
    "comment" : " The server is waiting for a connection to the IME. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_HAS_IME",
    "type" : "int",
    "comment" : " The server has a connection to the IME. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_SHOULD_HIDE",
    "type" : "int",
    "comment" : " The server decided the IME should be hidden. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_IME_WRAPPER",
    "type" : "int",
    "comment" : " Reached the IME wrapper. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_IME_WRAPPER_DISPATCH",
    "type" : "int",
    "comment" : " Dispatched from the IME wrapper to the IME. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_IME_SHOW_SOFT_INPUT",
    "type" : "int",
    "comment" : " Reached the IME's showSoftInput method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_IME_HIDE_SOFT_INPUT",
    "type" : "int",
    "comment" : " Reached the IME's hideSoftInput method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_IME_ON_SHOW_SOFT_INPUT_TRUE",
    "type" : "int",
    "comment" : " The server decided the IME should be shown. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_APPLY_IME_VISIBILITY",
    "type" : "int",
    "comment" : " Applied the IME visibility. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_SHOW_IME_RUNNER",
    "type" : "int",
    "comment" : " Started the show IME runner. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_SHOW_IME_READY",
    "type" : "int",
    "comment" : " Ready to show IME. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_HAS_IME_INSETS_CONTROL_TARGET",
    "type" : "int",
    "comment" : " The Window Manager has a connection to the IME insets control target. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_WINDOW_INSETS_CONTROL_TARGET_SHOW_INSETS",
    "type" : "int",
    "comment" : " Reached the window insets control target's show insets method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_WINDOW_INSETS_CONTROL_TARGET_HIDE_INSETS",
    "type" : "int",
    "comment" : " Reached the window insets control target's hide insets method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_REMOTE_INSETS_CONTROL_TARGET_SHOW_INSETS",
    "type" : "int",
    "comment" : " Reached the remote insets control target's show insets method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_REMOTE_INSETS_CONTROL_TARGET_HIDE_INSETS",
    "type" : "int",
    "comment" : " Reached the remote insets control target's hide insets method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_REMOTE_INSETS_CONTROLLER",
    "type" : "int",
    "comment" : " Reached the remote insets controller. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_ANIMATION_CREATE",
    "type" : "int",
    "comment" : " Created the IME window insets show animation. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_ANIMATION_RUNNING",
    "type" : "int",
    "comment" : " Started the IME window insets show animation. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_SHOW_INSETS",
    "type" : "int",
    "comment" : " Reached the client's show insets method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_HIDE_INSETS",
    "type" : "int",
    "comment" : " Reached the client's hide insets method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_HANDLE_SHOW_INSETS",
    "type" : "int",
    "comment" : " Handling the IME window insets show request. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_HANDLE_HIDE_INSETS",
    "type" : "int",
    "comment" : " Handling the IME window insets hide request. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_APPLY_ANIMATION",
    "type" : "int",
    "comment" : " Applied the IME window insets show animation. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_CONTROL_ANIMATION",
    "type" : "int",
    "comment" : " Started the IME window insets show animation. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_COLLECT_SOURCE_CONTROLS",
    "type" : "int",
    "comment" : " Collecting insets source controls. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_INSETS_CONSUMER_REQUEST_SHOW",
    "type" : "int",
    "comment" : " Reached the insets source consumer's show request method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_REQUEST_IME_SHOW",
    "type" : "int",
    "comment" : " Reached input method manager's request IME show method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_INSETS_CONSUMER_NOTIFY_HIDDEN",
    "type" : "int",
    "comment" : " Reached the insets source consumer's notify hidden method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_ANIMATION_RUNNING",
    "type" : "int",
    "comment" : " Queued the IME window insets show animation. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_ANIMATION_CANCEL",
    "type" : "int",
    "comment" : " Cancelled the IME window insets show animation. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_ANIMATION_FINISHED_SHOW",
    "type" : "int",
    "comment" : " Finished the IME window insets show animation. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_CLIENT_ANIMATION_FINISHED_HIDE",
    "type" : "int",
    "comment" : " Finished the IME window insets hide animation. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_WM_ABORT_SHOW_IME_POST_LAYOUT",
    "type" : "int",
    "comment" : " Aborted the request to show the IME post layout. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_IME_SHOW_WINDOW",
    "type" : "int",
    "comment" : " Reached the IME's showWindow method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_IME_HIDE_WINDOW",
    "type" : "int",
    "comment" : " Reached the IME's hideWindow method. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_IME_PRIVILEGED_OPERATIONS",
    "type" : "int",
    "comment" : " Reached the InputMethodPrivilegedOperations handler. ",
    "links" : [ ]
  }, {
    "name" : "PHASE_SERVER_CURRENT_ACTIVE_IME",
    "type" : "int",
    "comment" : " Checked that the calling IME is the currently active IME. ",
    "links" : [ ]
  }, {
    "name" : "LOGGER",
    "type" : "ImeTracker",
    "comment" : " The singleton IME tracker instance. ",
    "links" : [ ]
  }, {
    "name" : "JANK_TRACKER",
    "type" : "ImeJankTracker",
    "comment" : " The singleton IME tracker instance for instrumenting jank metrics. ",
    "links" : [ ]
  }, {
    "name" : "LATENCY_TRACKER",
    "type" : "ImeLatencyTracker",
    "comment" : " The singleton IME tracker instance for instrumenting latency metrics. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " Token onStart(@NonNull String component, int uid, @Type int type, @Origin int origin, @SoftInputShowHideReason int reason, boolean fromUser)",
    "returnType" : "Token",
    "comment" : "\n     * Called when an IME request is started.\n     *\n     * @param component the name of the component that started the request.\n     * @param uid the uid of the client that started the request.\n     * @param type the type of the request.\n     * @param origin the origin of the request.\n     * @param reason the reason for starting the request.\n     * @param fromUser whether this request was created directly from user interaction.\n     *\n     * @return An IME request tracking token.\n     ",
    "links" : [ ]
  }, {
    "name" : " Token onStart(@Type int type, @Origin int origin, @SoftInputShowHideReason int reason, boolean fromUser)",
    "returnType" : "Token",
    "comment" : "\n     * Called when an IME request is started for the current process.\n     *\n     * @param type the type of the request.\n     * @param origin the origin of the request.\n     * @param reason the reason for starting the request.\n     * @param fromUser whether this request was created directly from user interaction.\n     *\n     * @return An IME request tracking token.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onProgress(@Nullable Token token, @Phase int phase)",
    "returnType" : "void",
    "comment" : "\n     * Called when an IME request progresses to a further phase.\n     *\n     * @param token the token tracking the current IME request or {@code null} otherwise.\n     * @param phase the new phase the IME request reached.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onFailed(@Nullable Token token, @Phase int phase)",
    "returnType" : "void",
    "comment" : "\n     * Called when an IME request fails.\n     *\n     * @param token the token tracking the current IME request or {@code null} otherwise.\n     * @param phase the phase the IME request failed at.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onTodo(@Nullable Token token, @Phase int phase)",
    "returnType" : "void",
    "comment" : "\n     * Called when an IME request reached a flow that is not yet implemented.\n     *\n     * @param token the token tracking the current IME request or {@code null} otherwise.\n     * @param phase the phase the IME request was currently at.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onCancelled(@Nullable Token token, @Phase int phase)",
    "returnType" : "void",
    "comment" : "\n     * Called when an IME request is cancelled.\n     *\n     * @param token the token tracking the current IME request or {@code null} otherwise.\n     * @param phase the phase the IME request was cancelled at.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onShown(@Nullable Token token)",
    "returnType" : "void",
    "comment" : "\n     * Called when the IME show request is successful.\n     *\n     * @param token the token tracking the current IME request or {@code null} otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onHidden(@Nullable Token token)",
    "returnType" : "void",
    "comment" : "\n     * Called when the IME hide request is successful.\n     *\n     * @param token the token tracking the current IME request or {@code null} otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : " static boolean isFromUser(@Nullable View view)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the current IME request was created due to a user interaction. This can\n     * only be {@code true} when running on the view's UI thread.\n     *\n     * @param view the view for which the IME was requested.\n     * @return {@code true} if this request is coming from a user interaction,\n     * {@code false} otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : " static ImeTracker forLogging()",
    "returnType" : "ImeTracker",
    "comment" : "\n     * Get the singleton request tracker instance.\n     *\n     * @return the singleton request tracker instance\n     ",
    "links" : [ ]
  }, {
    "name" : " static ImeJankTracker forJank()",
    "returnType" : "ImeJankTracker",
    "comment" : "\n     * Get the singleton jank tracker instance.\n     *\n     * @return the singleton jank tracker instance\n     ",
    "links" : [ ]
  }, {
    "name" : " static ImeLatencyTracker forLatency()",
    "returnType" : "ImeLatencyTracker",
    "comment" : "\n     * Get the singleton latency tracker instance.\n     *\n     * @return the singleton latency tracker instance\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " Token onStart(@NonNull String component, int uid, @Type int type, @Origin int origin, @SoftInputShowHideReason int reason, boolean fromUser)", " Token onStart(@Type int type, @Origin int origin, @SoftInputShowHideReason int reason, boolean fromUser)", " void onProgress(@Nullable Token token, @Phase int phase)", " void onFailed(@Nullable Token token, @Phase int phase)", " void onTodo(@Nullable Token token, @Phase int phase)", " void onCancelled(@Nullable Token token, @Phase int phase)", " void onShown(@Nullable Token token)", " void onHidden(@Nullable Token token)", " static boolean isFromUser(@Nullable View view)", " static ImeTracker forLogging()", " static ImeJankTracker forJank()", " static ImeLatencyTracker forLatency()" ],
  "variableNames" : [ "TAG", "DEBUG_IME_VISIBILITY", "TOKEN_NONE", "TYPE_SHOW", "TYPE_HIDE", "STATUS_RUN", "STATUS_CANCEL", "STATUS_FAIL", "STATUS_SUCCESS", "STATUS_TIMEOUT", "ORIGIN_CLIENT", "ORIGIN_SERVER", "ORIGIN_IME", "ORIGIN_WM_SHELL", "PHASE_NOT_SET", "PHASE_CLIENT_VIEW_SERVED", "PHASE_SERVER_CLIENT_KNOWN", "PHASE_SERVER_CLIENT_FOCUSED", "PHASE_SERVER_ACCESSIBILITY", "PHASE_SERVER_SYSTEM_READY", "PHASE_SERVER_HIDE_IMPLICIT", "PHASE_SERVER_HIDE_NOT_ALWAYS", "PHASE_SERVER_WAIT_IME", "PHASE_SERVER_HAS_IME", "PHASE_SERVER_SHOULD_HIDE", "PHASE_IME_WRAPPER", "PHASE_IME_WRAPPER_DISPATCH", "PHASE_IME_SHOW_SOFT_INPUT", "PHASE_IME_HIDE_SOFT_INPUT", "PHASE_IME_ON_SHOW_SOFT_INPUT_TRUE", "PHASE_SERVER_APPLY_IME_VISIBILITY", "PHASE_WM_SHOW_IME_RUNNER", "PHASE_WM_SHOW_IME_READY", "PHASE_WM_HAS_IME_INSETS_CONTROL_TARGET", "PHASE_WM_WINDOW_INSETS_CONTROL_TARGET_SHOW_INSETS", "PHASE_WM_WINDOW_INSETS_CONTROL_TARGET_HIDE_INSETS", "PHASE_WM_REMOTE_INSETS_CONTROL_TARGET_SHOW_INSETS", "PHASE_WM_REMOTE_INSETS_CONTROL_TARGET_HIDE_INSETS", "PHASE_WM_REMOTE_INSETS_CONTROLLER", "PHASE_WM_ANIMATION_CREATE", "PHASE_WM_ANIMATION_RUNNING", "PHASE_CLIENT_SHOW_INSETS", "PHASE_CLIENT_HIDE_INSETS", "PHASE_CLIENT_HANDLE_SHOW_INSETS", "PHASE_CLIENT_HANDLE_HIDE_INSETS", "PHASE_CLIENT_APPLY_ANIMATION", "PHASE_CLIENT_CONTROL_ANIMATION", "PHASE_CLIENT_COLLECT_SOURCE_CONTROLS", "PHASE_CLIENT_INSETS_CONSUMER_REQUEST_SHOW", "PHASE_CLIENT_REQUEST_IME_SHOW", "PHASE_CLIENT_INSETS_CONSUMER_NOTIFY_HIDDEN", "PHASE_CLIENT_ANIMATION_RUNNING", "PHASE_CLIENT_ANIMATION_CANCEL", "PHASE_CLIENT_ANIMATION_FINISHED_SHOW", "PHASE_CLIENT_ANIMATION_FINISHED_HIDE", "PHASE_WM_ABORT_SHOW_IME_POST_LAYOUT", "PHASE_IME_SHOW_WINDOW", "PHASE_IME_HIDE_WINDOW", "PHASE_IME_PRIVILEGED_OPERATIONS", "PHASE_SERVER_CURRENT_ACTIVE_IME", "LOGGER", "JANK_TRACKER", "LATENCY_TRACKER" ]
}