{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/ip/RouterAdvertisementDaemon.java",
  "packageName" : "android.net.ip",
  "className" : "DeprecatedInfoTracker",
  "comment" : "",
  "variables" : [ {
    "name" : "mPrefixes",
    "type" : "HashMap<IpPrefix, Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDnses",
    "type" : "HashMap<Inet6Address, Integer>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " Set<IpPrefix> getPrefixes()",
    "returnType" : "Set<IpPrefix>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void putPrefixes(Set<IpPrefix> prefixes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removePrefixes(Set<IpPrefix> prefixes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Set<Inet6Address> getDnses()",
    "returnType" : "Set<Inet6Address>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void putDnses(Set<Inet6Address> dnses)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removeDnses(Set<Inet6Address> dnses)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean decrementCounters()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean decrementCounter(HashMap<T, Integer> map)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mPrefixes", "mDnses" ],
  "methodNames" : [ " Set<IpPrefix> getPrefixes()", " void putPrefixes(Set<IpPrefix> prefixes)", " void removePrefixes(Set<IpPrefix> prefixes)", " Set<Inet6Address> getDnses()", " void putDnses(Set<Inet6Address> dnses)", " void removeDnses(Set<Inet6Address> dnses)", " boolean isEmpty()", "private boolean decrementCounters()", "private boolean decrementCounter(HashMap<T, Integer> map)" ]
}