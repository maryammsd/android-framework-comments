{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssMeasurementCorrections.java",
  "packageName" : "android.location",
  "className" : "GnssMeasurementCorrections",
  "comment" : "\n * A class representing a GNSS measurement corrections for all used GNSS satellites at the location\n * and time specified\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mLatitudeDegrees",
    "type" : "double",
    "comment" : " Represents latitude in degrees at which the corrections are computed. ",
    "links" : [ ]
  }, {
    "name" : "mLongitudeDegrees",
    "type" : "double",
    "comment" : " Represents longitude in degrees at which the corrections are computed. ",
    "links" : [ ]
  }, {
    "name" : "mAltitudeMeters",
    "type" : "double",
    "comment" : "\n     * Represents altitude in meters above the WGS 84 reference ellipsoid at which the corrections\n     * are computed.\n     ",
    "links" : [ ]
  }, {
    "name" : "mHorizontalPositionUncertaintyMeters",
    "type" : "double",
    "comment" : "\n     * Represents the horizontal uncertainty (68% confidence) in meters on the device position at\n     * which the corrections are provided.\n     *\n     * <p> This value is useful for example to judge how accurate the provided corrections are.\n     ",
    "links" : [ ]
  }, {
    "name" : "mVerticalPositionUncertaintyMeters",
    "type" : "double",
    "comment" : "\n     * Represents the vertical uncertainty (68% confidence) in meters on the device position at\n     * which the corrections are provided.\n     *\n     * <p> This value is useful for example to judge how accurate the provided corrections are.\n     ",
    "links" : [ ]
  }, {
    "name" : "mToaGpsNanosecondsOfWeek",
    "type" : "long",
    "comment" : " Time Of Applicability, GPS time of week in nanoseconds. ",
    "links" : [ ]
  }, {
    "name" : "mSingleSatCorrectionList",
    "type" : "List<GnssSingleSatCorrection>",
    "comment" : "\n     * A set of {@link GnssSingleSatCorrection} each containing measurement corrections for a\n     * satellite in view.\n     ",
    "links" : [ "android.location.GnssSingleSatCorrection" ]
  }, {
    "name" : "mHasEnvironmentBearing",
    "type" : "boolean",
    "comment" : "\n     * Indicates whether the environment bearing is available.\n     ",
    "links" : [ ]
  }, {
    "name" : "mEnvironmentBearingDegrees",
    "type" : "float",
    "comment" : "\n     * Environment bearing in degrees clockwise from true north, in the direction of user motion.\n     * Environment bearing is provided when it is known with high probability that velocity is\n     * aligned with an environment feature (such as edge of a building, or road).\n     ",
    "links" : [ ]
  }, {
    "name" : "mEnvironmentBearingUncertaintyDegrees",
    "type" : "float",
    "comment" : "\n     * Environment bearing uncertainty in degrees.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<GnssMeasurementCorrections>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public double getLatitudeDegrees()",
    "returnType" : "double",
    "comment" : " Gets the latitude in degrees at which the corrections are computed. ",
    "links" : [ ]
  }, {
    "name" : "public double getLongitudeDegrees()",
    "returnType" : "double",
    "comment" : " Gets the longitude in degrees at which the corrections are computed. ",
    "links" : [ ]
  }, {
    "name" : "public double getAltitudeMeters()",
    "returnType" : "double",
    "comment" : "\n     * Gets the altitude in meters above the WGS 84 reference ellipsoid at which the corrections are\n     * computed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public double getHorizontalPositionUncertaintyMeters()",
    "returnType" : "double",
    "comment" : "\n     * Gets the horizontal uncertainty (68% confidence) in meters on the device position at\n     * which the corrections are provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "public double getVerticalPositionUncertaintyMeters()",
    "returnType" : "double",
    "comment" : "\n     * Gets the vertical uncertainty (68% confidence) in meters on the device position at\n     * which the corrections are provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getToaGpsNanosecondsOfWeek()",
    "returnType" : "long",
    "comment" : " Gets the time of applicability, GPS time of week in nanoseconds. ",
    "links" : [ ]
  }, {
    "name" : "public List<GnssSingleSatCorrection> getSingleSatelliteCorrectionList()",
    "returnType" : "List<GnssSingleSatCorrection>",
    "comment" : "\n     * Gets a set of {@link GnssSingleSatCorrection} each containing measurement corrections for a\n     * satellite in view\n     ",
    "links" : [ "android.location.GnssSingleSatCorrection" ]
  }, {
    "name" : "public boolean hasEnvironmentBearing()",
    "returnType" : "boolean",
    "comment" : "\n     * If true, environment bearing will be available.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getEnvironmentBearingDegrees()",
    "returnType" : "float",
    "comment" : "\n     * Gets the environment bearing in degrees clockwise from true north, in the direction of user\n     * motion. Environment bearing is provided when it is known with high probability that\n     * velocity is aligned with an environment feature (such as edge of a building, or road).\n     *\n     * {@link #hasEnvironmentBearing} should be called to check the environment bearing is available\n     * before calling this method. The value is undefined if {@link #hasEnvironmentBearing} returns\n     * false.\n     ",
    "links" : [ "#hasEnvironmentBearing" ]
  }, {
    "name" : "public float getEnvironmentBearingUncertaintyDegrees()",
    "returnType" : "float",
    "comment" : "\n     * Gets the environment bearing uncertainty in degrees. It represents the standard deviation of\n     * the physical structure in the circle of position uncertainty. The uncertainty can take values\n     * between 0 and 180 degrees. The {@link #hasEnvironmentBearing} becomes false as the\n     * uncertainty value passes a predefined threshold depending on the physical structure around\n     * the user.\n     *\n     * {@link #hasEnvironmentBearing} should be called to check the environment bearing is available\n     * before calling this method. The value is undefined if {@link #hasEnvironmentBearing} returns\n     * false.\n     ",
    "links" : [ "#hasEnvironmentBearing" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public double getLatitudeDegrees()", "public double getLongitudeDegrees()", "public double getAltitudeMeters()", "public double getHorizontalPositionUncertaintyMeters()", "public double getVerticalPositionUncertaintyMeters()", "public long getToaGpsNanosecondsOfWeek()", "public List<GnssSingleSatCorrection> getSingleSatelliteCorrectionList()", "public boolean hasEnvironmentBearing()", "public float getEnvironmentBearingDegrees()", "public float getEnvironmentBearingUncertaintyDegrees()", "public int describeContents()", "public String toString()", "public void writeToParcel(@NonNull Parcel parcel, int flags)" ],
  "variableNames" : [ "mLatitudeDegrees", "mLongitudeDegrees", "mAltitudeMeters", "mHorizontalPositionUncertaintyMeters", "mVerticalPositionUncertaintyMeters", "mToaGpsNanosecondsOfWeek", "mSingleSatCorrectionList", "mHasEnvironmentBearing", "mEnvironmentBearingDegrees", "mEnvironmentBearingUncertaintyDegrees", "CREATOR" ]
}