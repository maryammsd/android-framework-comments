{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/RoundedCorner.java",
  "packageName" : "android.view",
  "className" : "RoundedCorner",
  "comment" : "\n * Represents a rounded corner of the display.\n * <p>\n * <img src=\"{@docRoot}reference/android/images/rounded_corner/rounded-corner-info.png\" height=\"120\"\n * alt=\"A figure to describe what the rounded corner radius and the center point are. \"/>\n * </p>\n *\n * <p>Note: The rounded corner formed by the radius and the center is an approximation.</p>\n *\n * <p>{@link RoundedCorner} is immutable.</p>\n ",
  "links" : [ "android.view.RoundedCorner" ],
  "variables" : [ {
    "name" : "POSITION_TOP_LEFT",
    "type" : "int",
    "comment" : "\n     * The rounded corner is at the top-left of the screen.\n     ",
    "links" : [ ]
  }, {
    "name" : "POSITION_TOP_RIGHT",
    "type" : "int",
    "comment" : "\n     * The rounded corner is at the top-right of the screen.\n     ",
    "links" : [ ]
  }, {
    "name" : "POSITION_BOTTOM_RIGHT",
    "type" : "int",
    "comment" : "\n     * The rounded corner is at the bottom-right of the screen.\n     ",
    "links" : [ ]
  }, {
    "name" : "POSITION_BOTTOM_LEFT",
    "type" : "int",
    "comment" : "\n     * The rounded corner is at the bottom-left of the screen.\n     ",
    "links" : [ ]
  }, {
    "name" : "mPosition",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRadius",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCenter",
    "type" : "Point",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<RoundedCorner>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getPosition()",
    "returnType" : "int",
    "comment" : "\n     * Get the position of this {@link RoundedCorner}.\n     *\n     * @see #POSITION_TOP_LEFT\n     * @see #POSITION_TOP_RIGHT\n     * @see #POSITION_BOTTOM_RIGHT\n     * @see #POSITION_BOTTOM_LEFT\n     ",
    "links" : [ "android.view.RoundedCorner" ]
  }, {
    "name" : "public int getRadius()",
    "returnType" : "int",
    "comment" : "\n     * Returns the radius of a quarter circle approximation of this {@link RoundedCorner}.\n     *\n     * @return the rounded corner radius of this {@link RoundedCorner}. Returns 0 if there is no\n     * rounded corner.\n     ",
    "links" : [ "android.view.RoundedCorner" ]
  }, {
    "name" : "public Point getCenter()",
    "returnType" : "Point",
    "comment" : "\n     * Returns the circle center of a quarter circle approximation of this {@link RoundedCorner}.\n     *\n     * @return the center point of this {@link RoundedCorner} in the application's coordinate.\n     ",
    "links" : [ "android.view.RoundedCorner" ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether this {@link RoundedCorner} exists and is inside the application's bounds.\n     *\n     * @return {@code false} if there is a rounded corner and is contained in the application's\n     *                       bounds. Otherwise return {@code true}.\n     *\n     * @hide\n     ",
    "links" : [ "android.view.RoundedCorner" ]
  }, {
    "name" : "private String getPositionString(@Position int position)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getPosition()", "public int getRadius()", "public Point getCenter()", "public boolean isEmpty()", "private String getPositionString(@Position int position)", "public boolean equals(Object o)", "public int hashCode()", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)" ],
  "variableNames" : [ "POSITION_TOP_LEFT", "POSITION_TOP_RIGHT", "POSITION_BOTTOM_RIGHT", "POSITION_BOTTOM_LEFT", "mPosition", "mRadius", "mCenter", "CREATOR" ]
}