{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/aware/WifiAwareUtils.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "WifiAwareUtils",
  "comment" : "\n * Provides utilities for the Wifi Aware manager/service.\n *\n * @hide\n ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static void validateServiceName(byte[] serviceNameData) throws IllegalArgumentException",
    "returnType" : "void",
    "comment" : "\n     * Per spec: The Service Name is a UTF-8 encoded string from 1 to 255 bytes in length. The\n     * only acceptable single-byte UTF-8 symbols for a Service Name are alphanumeric values (A-Z,\n     * a-z, 0-9), the hyphen ('-'), and the period ('.'). All valid multi-byte UTF-8 characters\n     * are acceptable in a Service Name.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean validatePassphrase(String passphrase)",
    "returnType" : "boolean",
    "comment" : "\n     * Validates that the passphrase is a non-null string of the right size (per the HAL min/max\n     * length parameters).\n     *\n     * @param passphrase Passphrase to test\n     * @return true if passphrase is valid, false if not\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean validatePmk(byte[] pmk)",
    "returnType" : "boolean",
    "comment" : "\n     * Validates that the PMK is a non-null byte array of the right size (32 bytes per spec).\n     *\n     * @param pmk PMK to test\n     * @return true if PMK is valid, false if not\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isLegacyVersion(Context context, int minVersion)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the App version is older than minVersion.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public static void validateServiceName(byte[] serviceNameData) throws IllegalArgumentException", "public static boolean validatePassphrase(String passphrase)", "public static boolean validatePmk(byte[] pmk)", "public static boolean isLegacyVersion(Context context, int minVersion)" ]
}