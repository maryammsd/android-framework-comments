{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/companion/AssociationInfo.java",
  "packageName" : "android.companion",
  "className" : "AssociationInfo",
  "comment" : "\n * Details for a specific \"association\" that has been established between an app and companion\n * device.\n * <p>\n * An association gives an app the ability to interact with a companion device without needing to\n * acquire broader runtime permissions. An association only exists after the user has confirmed that\n * an app should have access to a companion device.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LAST_TIME_CONNECTED_NONE",
    "type" : "String",
    "comment" : "\n     * A String indicates the selfManaged device is not connected.\n     ",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "int",
    "comment" : "\n     * A unique ID of this Association record.\n     * Disclosed to the clients (i.e. companion applications) for referring to this record (e.g. in\n     * {@code disassociate()} API call).\n     ",
    "links" : [ ]
  }, {
    "name" : "mUserId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceMacAddress",
    "type" : "MacAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayName",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceProfile",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAssociatedDevice",
    "type" : "AssociatedDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSelfManaged",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNotifyOnDeviceNearby",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRevoked",
    "type" : "boolean",
    "comment" : "\n     * Indicates that the association has been revoked (removed), but we keep the association\n     * record for final clean up (e.g. removing the app from the list of the role holders).\n     *\n     * @see CompanionDeviceManager#disassociate(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "mPending",
    "type" : "boolean",
    "comment" : "\n     * Indicates that the association is waiting for its corresponding companion app to be installed\n     * before it can be added to CDM. This is likely because it was restored onto the device from a\n     * backup.\n     ",
    "links" : [ ]
  }, {
    "name" : "mTimeApprovedMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastTimeConnectedMs",
    "type" : "long",
    "comment" : "\n     * A long value indicates the last time connected reported by selfManaged devices\n     * Default value is Long.MAX_VALUE.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSystemDataSyncFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AssociationInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "\n     * @return the unique ID of this association record.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getUserId()",
    "returnType" : "int",
    "comment" : "\n     * @return the ID of the user who \"owns\" this association.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n     * @return the package name of the app which this association refers to.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTag()",
    "returnType" : "String",
    "comment" : "\n     * @return the tag of this association.\n     * @see CompanionDeviceManager#setAssociationTag(int, String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public MacAddress getDeviceMacAddress()",
    "returnType" : "MacAddress",
    "comment" : "\n     * @return the MAC address of the device.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDeviceMacAddressAsString()",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getDisplayName()",
    "returnType" : "CharSequence",
    "comment" : "\n     * @return the display name of the companion device (optionally) provided by the companion\n     * application.\n     *\n     * @see AssociationRequest.Builder#setDisplayName(CharSequence)\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDeviceProfile()",
    "returnType" : "String",
    "comment" : "\n     * @return the companion device profile used when establishing this\n     *         association, or {@code null} if no specific profile was used.\n     * @see AssociationRequest.Builder#setDeviceProfile(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public AssociatedDevice getAssociatedDevice()",
    "returnType" : "AssociatedDevice",
    "comment" : "\n     * Companion device that was associated. Note that this field is not persisted across sessions.\n     * Device can be one of the following types:\n     *\n     * <ul>\n     *     <li>for classic Bluetooth - {@link AssociatedDevice#getBluetoothDevice()}</li>\n     *     <li>for Bluetooth LE - {@link AssociatedDevice#getBleDevice()}</li>\n     *     <li>for WiFi - {@link AssociatedDevice#getWifiDevice()}</li>\n     * </ul>\n     *\n     * @return the companion device that was associated, or {@code null} if the device is\n     *         self-managed or this association info was retrieved from persistent storage.\n     ",
    "links" : [ "android.companion.AssociatedDevice#getBleDevice()", "android.companion.AssociatedDevice#getWifiDevice()", "android.companion.AssociatedDevice#getBluetoothDevice()" ]
  }, {
    "name" : "public boolean isSelfManaged()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether the association is managed by the companion application it belongs to.\n     * @see AssociationRequest.Builder#setSelfManaged(boolean)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isNotifyOnDeviceNearby()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getTimeApprovedMs()",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean belongsToPackage(@UserIdInt int userId, String packageName)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isRevoked()",
    "returnType" : "boolean",
    "comment" : "\n     * @return if the association has been revoked (removed).\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isPending()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if the association is waiting for its corresponding app to be installed\n     * before it can be added to CDM.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isActive()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if the association is not revoked nor pending\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getLastTimeConnectedMs()",
    "returnType" : "long",
    "comment" : "\n     * @return the last time self reported disconnected for selfManaged only.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSystemDataSyncFlags()",
    "returnType" : "int",
    "comment" : "\n     * @return Enabled system data sync flags set via\n     * {@link CompanionDeviceManager#enableSystemDataSyncForTypes(int, int)} (int, int)} and\n     * {@link CompanionDeviceManager#disableSystemDataSyncForTypes(int, int)} (int, int)}.\n     * Or by default all flags are 1 (enabled).\n     ",
    "links" : [ "android.companion.CompanionDeviceManager#disableSystemDataSyncForTypes(int", "android.companion.CompanionDeviceManager#enableSystemDataSyncForTypes(int" ]
  }, {
    "name" : "public boolean isLinkedTo(@Nullable String addr)",
    "returnType" : "boolean",
    "comment" : "\n     * Utility method for checking if the association represents a device with the given MAC\n     * address.\n     *\n     * @return {@code false} if the association is \"self-managed\".\n     *         {@code false} if the {@code addr} is {@code null} or is not a valid MAC address.\n     *         Otherwise - the result of {@link MacAddress#equals(Object)}\n     *\n     * @hide\n     ",
    "links" : [ "android.net.MacAddress#equals(Object)" ]
  }, {
    "name" : "public boolean shouldBindWhenPresent()",
    "returnType" : "boolean",
    "comment" : "\n     * Utility method to be used by CdmService only.\n     *\n     * @return whether CdmService should bind the companion application that \"owns\" this association\n     *         when the device is present.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toShortString()",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getId()", "public int getUserId()", "public String getPackageName()", "public String getTag()", "public MacAddress getDeviceMacAddress()", "public String getDeviceMacAddressAsString()", "public CharSequence getDisplayName()", "public String getDeviceProfile()", "public AssociatedDevice getAssociatedDevice()", "public boolean isSelfManaged()", "public boolean isNotifyOnDeviceNearby()", "public long getTimeApprovedMs()", "public boolean belongsToPackage(@UserIdInt int userId, String packageName)", "public boolean isRevoked()", "public boolean isPending()", "public boolean isActive()", "public long getLastTimeConnectedMs()", "public int getSystemDataSyncFlags()", "public boolean isLinkedTo(@Nullable String addr)", "public boolean shouldBindWhenPresent()", "public String toShortString()", "public String toString()", "public boolean equals(Object o)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "LAST_TIME_CONNECTED_NONE", "mId", "mUserId", "mPackageName", "mTag", "mDeviceMacAddress", "mDisplayName", "mDeviceProfile", "mAssociatedDevice", "mSelfManaged", "mNotifyOnDeviceNearby", "mRevoked", "mPending", "mTimeApprovedMs", "mLastTimeConnectedMs", "mSystemDataSyncFlags", "CREATOR" ]
}