{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/WindowInsetsAnimationControlListener.java",
  "packageName" : "android.view",
  "className" : "WindowInsetsAnimationControlListener",
  "comment" : "\n * Listener that encapsulates a request to\n * {@link WindowInsetsController#controlWindowInsetsAnimation}.\n *\n * <p>\n * Insets can be controlled with the supplied {@link WindowInsetsAnimationController} from\n * {@link #onReady} until either {@link #onFinished} or {@link #onCancelled}.\n *\n * <p>\n * Once the control over insets is finished or cancelled, it will not be regained until a new\n * request to {@link WindowInsetsController#controlWindowInsetsAnimation} is made.\n *\n * <p>\n * The request to control insets can fail immediately. In that case {@link #onCancelled} will be\n * invoked without a preceding {@link #onReady}.\n *\n * @see WindowInsetsController#controlWindowInsetsAnimation\n ",
  "links" : [ "#onFinished", "#onCancelled", "#onReady", "android.view.WindowInsetsAnimationController", "android.view.WindowInsetsController#controlWindowInsetsAnimation" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onReady(@NonNull WindowInsetsAnimationController controller, @InsetsType int types)",
    "returnType" : "void",
    "comment" : "\n     * Called when the animation is ready to be controlled. This may be delayed when the IME needs\n     * to redraw because of an {@link EditorInfo} change, or when the window is starting up.\n     *\n     * @param controller The controller to control the inset animation.\n     * @param types The {@link WindowInsets.Type}s it was able to gain control over. Note that this\n     *              may be different than the types passed into\n     *              {@link WindowInsetsController#controlWindowInsetsAnimation} in case the window\n     *              wasn't able to gain the controls because it wasn't the IME target or not\n     *              currently the window that's controlling the system bars.\n     * @see WindowInsetsAnimationController#isReady\n     ",
    "links" : [ "WindowInsets.Type", "android.view.inputmethod.EditorInfo", "android.view.WindowInsetsController#controlWindowInsetsAnimation" ]
  }, {
    "name" : " void onFinished(@NonNull WindowInsetsAnimationController controller)",
    "returnType" : "void",
    "comment" : "\n     * Called when the request for control over the insets has\n     * {@link WindowInsetsAnimationController#finish finished}.\n     *\n     * Once this callback is invoked, the supplied {@link WindowInsetsAnimationController}\n     * is no longer {@link WindowInsetsAnimationController#isReady() ready}.\n     *\n     * Control will not be regained until a new request\n     * to {@link WindowInsetsController#controlWindowInsetsAnimation} is made.\n     *\n     * @param controller the controller which has finished.\n     * @see WindowInsetsAnimationController#isFinished\n     ",
    "links" : [ "android.view.WindowInsetsAnimationController#finish", "android.view.WindowInsetsAnimationController", "android.view.WindowInsetsAnimationController#isReady()", "android.view.WindowInsetsController#controlWindowInsetsAnimation" ]
  }, {
    "name" : " void onCancelled(@Nullable WindowInsetsAnimationController controller)",
    "returnType" : "void",
    "comment" : "\n     * Called when the request for control over the insets has been cancelled, either\n     * because the {@link android.os.CancellationSignal} associated with the\n     * {@link WindowInsetsController#controlWindowInsetsAnimation request} has been invoked, or\n     * the window has lost control over the insets (e.g. because it lost focus).\n     *\n     * Once this callback is invoked, the supplied {@link WindowInsetsAnimationController}\n     * is no longer {@link WindowInsetsAnimationController#isReady() ready}.\n     *\n     * Control will not be regained until a new request\n     * to {@link WindowInsetsController#controlWindowInsetsAnimation} is made.\n     *\n     * @param controller the controller which has been cancelled, or null if the request\n     *                   was cancelled before {@link #onReady} was invoked.\n     * @see WindowInsetsAnimationController#isCancelled\n     ",
    "links" : [ "#onReady", "android.os.CancellationSignal", "android.view.WindowInsetsAnimationController", "android.view.WindowInsetsAnimationController#isReady()", "android.view.WindowInsetsController#controlWindowInsetsAnimation" ]
  } ],
  "methodNames" : [ " void onReady(@NonNull WindowInsetsAnimationController controller, @InsetsType int types)", " void onFinished(@NonNull WindowInsetsAnimationController controller)", " void onCancelled(@Nullable WindowInsetsAnimationController controller)" ],
  "variableNames" : [ ]
}