{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/WebVttRenderer.java",
  "packageName" : "android.media",
  "className" : "WebVttRenderingWidget",
  "comment" : "\n * Widget capable of rendering WebVTT captions.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_CAPTION_STYLE",
    "type" : "CaptionStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG_REGION_BACKGROUND",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG_CUE_BACKGROUND",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LINE_HEIGHT_RATIO",
    "type" : "float",
    "comment" : " WebVtt specifies line height as 5.3% of the viewport height. ",
    "links" : [ ]
  }, {
    "name" : "mRegionBoxes",
    "type" : "ArrayMap<TextTrackRegion, RegionLayout>",
    "comment" : " Map of active regions, used to determine enter/exit. ",
    "links" : [ ]
  }, {
    "name" : "mCueBoxes",
    "type" : "ArrayMap<TextTrackCue, CueLayout>",
    "comment" : " Map of active cues, used to determine enter/exit. ",
    "links" : [ ]
  }, {
    "name" : "mManager",
    "type" : "CaptioningManager",
    "comment" : " Captioning manager, used to obtain and track caption properties. ",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "OnChangedListener",
    "comment" : " Callback for rendering changes. ",
    "links" : [ ]
  }, {
    "name" : "mCaptionStyle",
    "type" : "CaptionStyle",
    "comment" : " Current caption style. ",
    "links" : [ ]
  }, {
    "name" : "mFontSize",
    "type" : "float",
    "comment" : " Current font size, computed from font scaling factor and height. ",
    "links" : [ ]
  }, {
    "name" : "mHasChangeListener",
    "type" : "boolean",
    "comment" : " Whether a caption style change listener is registered. ",
    "links" : [ ]
  }, {
    "name" : "mCaptioningListener",
    "type" : "CaptioningChangeListener",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setSize(int width, int height)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAttachedToWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDetachedFromWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOnChangedListener(OnChangedListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setVisible(boolean visible)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void manageChangeListener()",
    "returnType" : "void",
    "comment" : "\n     * Manages whether this renderer is listening for caption style changes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setActiveCues(Vector<SubtitleTrack.Cue> activeCues)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setCaptionStyle(CaptionStyle captionStyle, float fontSize)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void prune()",
    "returnType" : "void",
    "comment" : "\n     * Remove inactive cues and regions.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void prepForPrune()",
    "returnType" : "void",
    "comment" : "\n     * Reset active cues and regions.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onLayout(boolean changed, int l, int t, int r, int b)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void layoutRegion(int viewportWidth, int viewportHeight, RegionLayout regionBox)",
    "returnType" : "void",
    "comment" : "\n     * Lays out a region within the viewport. The region handles layout for\n     * contained cues.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void layoutCue(int viewportWidth, int viewportHeight, CueLayout cueBox)",
    "returnType" : "void",
    "comment" : "\n     * Lays out a cue within the viewport.\n     ",
    "links" : [ ]
  }, {
    "name" : "private int calculateLinePosition(CueLayout cueBox)",
    "returnType" : "int",
    "comment" : "\n     * Calculates the line position for a cue.\n     * <p>\n     * If the resulting position is negative, it represents a bottom-aligned\n     * position relative to the number of active cues. Otherwise, it represents\n     * a percentage [0-100] of the viewport height.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int resolveCueAlignment(int layoutDirection, int alignment)",
    "returnType" : "int",
    "comment" : "\n     * Resolves cue alignment according to the specified layout direction.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "DEBUG", "DEFAULT_CAPTION_STYLE", "DEBUG_REGION_BACKGROUND", "DEBUG_CUE_BACKGROUND", "LINE_HEIGHT_RATIO", "mRegionBoxes", "mCueBoxes", "mManager", "mListener", "mCaptionStyle", "mFontSize", "mHasChangeListener", "mCaptioningListener" ],
  "methodNames" : [ "public void setSize(int width, int height)", "public void onAttachedToWindow()", "public void onDetachedFromWindow()", "public void setOnChangedListener(OnChangedListener listener)", "public void setVisible(boolean visible)", "private void manageChangeListener()", "public void setActiveCues(Vector<SubtitleTrack.Cue> activeCues)", "private void setCaptionStyle(CaptionStyle captionStyle, float fontSize)", "private void prune()", "private void prepForPrune()", "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "protected void onLayout(boolean changed, int l, int t, int r, int b)", "private void layoutRegion(int viewportWidth, int viewportHeight, RegionLayout regionBox)", "private void layoutCue(int viewportWidth, int viewportHeight, CueLayout cueBox)", "private int calculateLinePosition(CueLayout cueBox)", "private static int resolveCueAlignment(int layoutDirection, int alignment)" ]
}