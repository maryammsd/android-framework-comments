{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/reflect/UndeclaredThrowableException.java",
  "packageName" : "java.lang.reflect",
  "className" : "UndeclaredThrowableException",
  "comment" : "\n * Thrown by a method invocation on a proxy instance if its invocation\n * handler's {@link InvocationHandler#invoke invoke} method throws a\n * checked exception (a {@code Throwable} that is not assignable\n * to {@code RuntimeException} or {@code Error}) that\n * is not assignable to any of the exception types declared in the\n * {@code throws} clause of the method that was invoked on the\n * proxy instance and dispatched to the invocation handler.\n *\n * <p>An {@code UndeclaredThrowableException} instance contains\n * the undeclared checked exception that was thrown by the invocation\n * handler, and it can be retrieved with the\n * {@code getUndeclaredThrowable()} method.\n * {@code UndeclaredThrowableException} extends\n * {@code RuntimeException}, so it is an unchecked exception\n * that wraps a checked exception.\n *\n * <p>As of release 1.4, this exception has been retrofitted to\n * conform to the general purpose exception-chaining mechanism.  The\n * \"undeclared checked exception that was thrown by the invocation\n * handler\" that may be provided at construction time and accessed via\n * the {@link #getUndeclaredThrowable()} method is now known as the\n * <i>cause</i>, and may be accessed via the {@link\n * Throwable#getCause()} method, as well as the aforementioned \"legacy\n * method.\"\n *\n * @author      Peter Jones\n * @see         InvocationHandler\n * @since       1.3\n ",
  "links" : [ "#getCause()", "java.lang.reflect.InvocationHandler#invoke", "#getUndeclaredThrowable()" ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "undeclaredThrowable",
    "type" : "Throwable",
    "comment" : "\n     * the undeclared checked exception that was thrown\n     * @serial\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Throwable getUndeclaredThrowable()",
    "returnType" : "Throwable",
    "comment" : "\n     * Returns the {@code Throwable} instance wrapped in this\n     * {@code UndeclaredThrowableException}, which may be {@code null}.\n     *\n     * <p>This method predates the general-purpose exception chaining facility.\n     * The {@link Throwable#getCause()} method is now the preferred means of\n     * obtaining this information.\n     *\n     * @return the undeclared checked exception that was thrown\n     ",
    "links" : [ "#getCause()" ]
  }, {
    "name" : "public Throwable getCause()",
    "returnType" : "Throwable",
    "comment" : "\n     * Returns the cause of this exception (the {@code Throwable}\n     * instance wrapped in this {@code UndeclaredThrowableException},\n     * which may be {@code null}).\n     *\n     * @return  the cause of this exception.\n     * @since   1.4\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Throwable getUndeclaredThrowable()", "public Throwable getCause()" ],
  "variableNames" : [ "serialVersionUID", "undeclaredThrowable" ]
}