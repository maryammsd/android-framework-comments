{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/speech/tts/TextToSpeech.java",
  "packageName" : "android.speech.tts",
  "className" : "Engine",
  "comment" : "\n     * Constants and parameter names for controlling text-to-speech. These include:\n     *\n     * <ul>\n     *     <li>\n     *         Intents to ask engine to install data or check its data and\n     *         extras for a TTS engine's check data activity.\n     *     </li>\n     *     <li>\n     *         Keys for the parameters passed with speak commands, e.g.\n     *         {@link Engine#KEY_PARAM_UTTERANCE_ID}, {@link Engine#KEY_PARAM_STREAM}.\n     *     </li>\n     *     <li>\n     *         A list of feature strings that engines might support, e.g\n     *         {@link Engine#KEY_FEATURE_NETWORK_SYNTHESIS}. These values may be passed in to\n     *         {@link TextToSpeech#speak} and {@link TextToSpeech#synthesizeToFile} to modify\n     *         engine behaviour. The engine can be queried for the set of features it supports\n     *         through {@link TextToSpeech#getFeatures(java.util.Locale)}.\n     *     </li>\n     * </ul>\n     *\n     * Apps targeting Android 11 that use text-to-speech should declare {@link\n     * #INTENT_ACTION_TTS_SERVICE} in the <code><queries></code> elements of their\n     * manifest:\n     *\n     * <code>\n     * <queries>\n     *   ...\n     *  <intent>\n     *      <action android:name=\"android.intent.action.TTS_SERVICE\" />\n     *  </intent>\n     * </queries>\n     * </code>\n\n     ",
  "variables" : [ {
    "name" : "DEFAULT_RATE",
    "type" : "int",
    "comment" : "\n         * Default speech rate.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_PITCH",
    "type" : "int",
    "comment" : "\n         * Default pitch.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_VOLUME",
    "type" : "float",
    "comment" : "\n         * Default volume.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_PAN",
    "type" : "float",
    "comment" : "\n         * Default pan (centered).\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "USE_DEFAULTS",
    "type" : "int",
    "comment" : " false",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_ENGINE",
    "type" : "String",
    "comment" : "\n         * Package name of the default TTS engine.\n         *\n         * @hide\n         * @deprecated No longer in use, the default engine is determined by\n         *         the sort order defined in {@link TtsEngines}. Note that\n         *         this doesn't \"break\" anything because there is no guarantee that\n         *         the engine specified below is installed on a given build, let\n         *         alone be the default.\n         ",
    "links" : [ "TtsEngines" ]
  }, {
    "name" : "DEFAULT_STREAM",
    "type" : "int",
    "comment" : "\n         * Default audio stream used when playing synthesized speech.\n         ",
    "links" : [ ]
  }, {
    "name" : "CHECK_VOICE_DATA_PASS",
    "type" : "int",
    "comment" : "\n         * Indicates success when checking the installation status of the resources used by the\n         * TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "CHECK_VOICE_DATA_FAIL",
    "type" : "int",
    "comment" : "\n         * Indicates failure when checking the installation status of the resources used by the\n         * TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "CHECK_VOICE_DATA_BAD_DATA",
    "type" : "int",
    "comment" : "\n         * Indicates erroneous data when checking the installation status of the resources used by\n         * the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.\n         *\n         * @deprecated Use CHECK_VOICE_DATA_FAIL instead.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "CHECK_VOICE_DATA_MISSING_DATA",
    "type" : "int",
    "comment" : "\n         * Indicates missing resources when checking the installation status of the resources used\n         * by the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.\n         *\n         * @deprecated Use CHECK_VOICE_DATA_FAIL instead.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "CHECK_VOICE_DATA_MISSING_VOLUME",
    "type" : "int",
    "comment" : "\n         * Indicates missing storage volume when checking the installation status of the resources\n         * used by the TextToSpeech engine with the {@link #ACTION_CHECK_TTS_DATA} intent.\n         *\n         * @deprecated Use CHECK_VOICE_DATA_FAIL instead.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "INTENT_ACTION_TTS_SERVICE",
    "type" : "String",
    "comment" : "\n         * Intent for starting a TTS service. Services that handle this intent must\n         * extend {@link TextToSpeechService}. Normal applications should not use this intent\n         * directly, instead they should talk to the TTS service using the the methods in this\n         * class.\n         ",
    "links" : [ "TextToSpeechService" ]
  }, {
    "name" : "SERVICE_META_DATA",
    "type" : "String",
    "comment" : "\n         * Name under which a text to speech engine publishes information about itself.\n         * This meta-data should reference an XML resource containing a\n         * <code>&lt;{@link android.R.styleable#TextToSpeechEngine tts-engine}&gt;</code>\n         * tag.\n         ",
    "links" : [ "android.R.styleable#TextToSpeechEngine" ]
  }, {
    "name" : "ACTION_INSTALL_TTS_DATA",
    "type" : "String",
    "comment" : "\n         * Activity Action: Triggers the platform TextToSpeech engine to\n         * start the activity that installs the resource files on the device\n         * that are required for TTS to be operational. Since the installation\n         * of the data can be interrupted or declined by the user, the application\n         * shouldn't expect successful installation upon return from that intent,\n         * and if need be, should check installation status with\n         * {@link #ACTION_CHECK_TTS_DATA}.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "ACTION_TTS_DATA_INSTALLED",
    "type" : "String",
    "comment" : "\n         * Broadcast Action: broadcast to signal the change in the list of available\n         * languages or/and their features.\n         ",
    "links" : [ ]
  }, {
    "name" : "ACTION_CHECK_TTS_DATA",
    "type" : "String",
    "comment" : "\n         * Activity Action: Starts the activity from the platform TextToSpeech\n         * engine to verify the proper installation and availability of the\n         * resource files on the system. Upon completion, the activity will\n         * return one of the following codes:\n         * {@link #CHECK_VOICE_DATA_PASS},\n         * {@link #CHECK_VOICE_DATA_FAIL},\n         * <p> Moreover, the data received in the activity result will contain the following\n         * fields:\n         * <ul>\n         *   <li>{@link #EXTRA_AVAILABLE_VOICES} which contains an ArrayList<String> of all the\n         *   available voices. The format of each voice is: lang-COUNTRY-variant where COUNTRY and\n         *   variant are optional (ie, \"eng\" or \"eng-USA\" or \"eng-USA-FEMALE\").</li>\n         *   <li>{@link #EXTRA_UNAVAILABLE_VOICES} which contains an ArrayList<String> of all the\n         *   unavailable voices (ones that user can install). The format of each voice is:\n         *   lang-COUNTRY-variant where COUNTRY and variant are optional (ie, \"eng\" or\n         *   \"eng-USA\" or \"eng-USA-FEMALE\").</li>\n         * </ul>\n         ",
    "links" : [ "#CHECK_VOICE_DATA_PASS", "#CHECK_VOICE_DATA_FAIL", "#EXTRA_AVAILABLE_VOICES", "#EXTRA_UNAVAILABLE_VOICES" ]
  }, {
    "name" : "ACTION_GET_SAMPLE_TEXT",
    "type" : "String",
    "comment" : "\n         * Activity intent for getting some sample text to use for demonstrating TTS. Specific\n         * locale have to be requested by passing following extra parameters:\n         * <ul>\n         *   <li>language</li>\n         *   <li>country</li>\n         *   <li>variant</li>\n         * </ul>\n         *\n         * Upon completion, the activity result may contain the following fields:\n         * <ul>\n         *   <li>{@link #EXTRA_SAMPLE_TEXT} which contains an String with sample text.</li>\n         * </ul>\n         ",
    "links" : [ "#EXTRA_SAMPLE_TEXT" ]
  }, {
    "name" : "EXTRA_SAMPLE_TEXT",
    "type" : "String",
    "comment" : "\n         * Extra information received with the {@link #ACTION_GET_SAMPLE_TEXT} intent result where\n         * the TextToSpeech engine returns an String with sample text for requested voice\n         ",
    "links" : [ "#ACTION_GET_SAMPLE_TEXT" ]
  }, {
    "name" : "EXTRA_AVAILABLE_VOICES",
    "type" : "String",
    "comment" : "\n         * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent result where\n         * the TextToSpeech engine returns an ArrayList<String> of all the available voices.\n         * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are\n         * optional (ie, \"eng\" or \"eng-USA\" or \"eng-USA-FEMALE\").\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "EXTRA_UNAVAILABLE_VOICES",
    "type" : "String",
    "comment" : "\n         * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent result where\n         * the TextToSpeech engine returns an ArrayList<String> of all the unavailable voices.\n         * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are\n         * optional (ie, \"eng\" or \"eng-USA\" or \"eng-USA-FEMALE\").\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "EXTRA_VOICE_DATA_ROOT_DIRECTORY",
    "type" : "String",
    "comment" : "\n         * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent result where\n         * the TextToSpeech engine specifies the path to its resources.\n         *\n         * It may be used by language packages to find out where to put their data.\n         *\n         * @deprecated TTS engine implementation detail, this information has no use for\n         * text-to-speech API client.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "EXTRA_VOICE_DATA_FILES",
    "type" : "String",
    "comment" : "\n         * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent result where\n         * the TextToSpeech engine specifies the file names of its resources under the\n         * resource path.\n         *\n         * @deprecated TTS engine implementation detail, this information has no use for\n         * text-to-speech API client.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "EXTRA_VOICE_DATA_FILES_INFO",
    "type" : "String",
    "comment" : "\n         * Extra information received with the {@link #ACTION_CHECK_TTS_DATA} intent result where\n         * the TextToSpeech engine specifies the locale associated with each resource file.\n         *\n         * @deprecated TTS engine implementation detail, this information has no use for\n         * text-to-speech API client.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "EXTRA_CHECK_VOICE_DATA_FOR",
    "type" : "String",
    "comment" : "\n         * Extra information sent with the {@link #ACTION_CHECK_TTS_DATA} intent where the\n         * caller indicates to the TextToSpeech engine which specific sets of voice data to\n         * check for by sending an ArrayList<String> of the voices that are of interest.\n         * The format of each voice is: lang-COUNTRY-variant where COUNTRY and variant are\n         * optional (ie, \"eng\" or \"eng-USA\" or \"eng-USA-FEMALE\").\n         *\n         * @deprecated Redundant functionality, checking for existence of specific sets of voice\n         * data can be done on client side.\n         ",
    "links" : [ "#ACTION_CHECK_TTS_DATA" ]
  }, {
    "name" : "EXTRA_TTS_DATA_INSTALLED",
    "type" : "String",
    "comment" : "\n         * Extra information received with the {@link #ACTION_TTS_DATA_INSTALLED} intent result.\n         * It indicates whether the data files for the synthesis engine were successfully\n         * installed. The installation was initiated with the  {@link #ACTION_INSTALL_TTS_DATA}\n         * intent. The possible values for this extra are\n         * {@link TextToSpeech#SUCCESS} and {@link TextToSpeech#ERROR}.\n         *\n         * @deprecated No longer in use. If client is interested in information about what\n         * changed, it should use the ACTION_CHECK_TTS_DATA\n         * intent to discover available voices.\n         ",
    "links" : [ "#ACTION_TTS_DATA_INSTALLED", "#ACTION_INSTALL_TTS_DATA", "TextToSpeech#SUCCESS", "TextToSpeech#ERROR" ]
  }, {
    "name" : "KEY_PARAM_RATE",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PARAM_VOICE_NAME",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PARAM_LANGUAGE",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PARAM_COUNTRY",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PARAM_VARIANT",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PARAM_ENGINE",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PARAM_PITCH",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PARAM_STREAM",
    "type" : "String",
    "comment" : "\n         * Parameter key to specify the audio stream type to be used when speaking text\n         * or playing back a file. The value should be one of the STREAM_ constants\n         * defined in {@link AudioManager}.\n         *\n         * @see TextToSpeech#speak(CharSequence, int, Bundle, String)\n         * @see TextToSpeech#playEarcon(String, int, HashMap)\n         ",
    "links" : [ "AudioManager" ]
  }, {
    "name" : "KEY_PARAM_AUDIO_ATTRIBUTES",
    "type" : "String",
    "comment" : "\n         * Parameter key to specify the audio attributes to be used when\n         * speaking text or playing back a file. The value should be set\n         * using {@link TextToSpeech#setAudioAttributes(AudioAttributes)}.\n         *\n         * @see TextToSpeech#speak(CharSequence, int, Bundle, String)\n         * @see TextToSpeech#playEarcon(String, int, HashMap)\n         * @hide\n         ",
    "links" : [ "TextToSpeech#setAudioAttributes" ]
  }, {
    "name" : "KEY_PARAM_UTTERANCE_ID",
    "type" : "String",
    "comment" : "\n         * Parameter key to identify an utterance in the\n         * {@link TextToSpeech.OnUtteranceCompletedListener} after text has been\n         * spoken, a file has been played back or a silence duration has elapsed.\n         *\n         * @see TextToSpeech#speak(CharSequence, int, Bundle, String)\n         * @see TextToSpeech#playEarcon(String, int, HashMap)\n         * @see TextToSpeech#synthesizeToFile(String, HashMap, String)\n         ",
    "links" : [ "TextToSpeech.OnUtteranceCompletedListener" ]
  }, {
    "name" : "KEY_PARAM_VOLUME",
    "type" : "String",
    "comment" : "\n         * Parameter key to specify the speech volume relative to the current stream type\n         * volume used when speaking text. Volume is specified as a float ranging from 0 to 1\n         * where 0 is silence, and 1 is the maximum volume (the default behavior).\n         *\n         * @see TextToSpeech#speak(CharSequence, int, Bundle, String)\n         * @see TextToSpeech#playEarcon(String, int, HashMap)\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PARAM_PAN",
    "type" : "String",
    "comment" : "\n         * Parameter key to specify how the speech is panned from left to right when speaking text.\n         * Pan is specified as a float ranging from -1 to +1 where -1 maps to a hard-left pan,\n         * 0 to center (the default behavior), and +1 to hard-right.\n         *\n         * @see TextToSpeech#speak(CharSequence, int, Bundle, String)\n         * @see TextToSpeech#playEarcon(String, int, HashMap)\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_FEATURE_NETWORK_SYNTHESIS",
    "type" : "String",
    "comment" : "\n         * Feature key for network synthesis. See {@link TextToSpeech#getFeatures(Locale)}\n         * for a description of how feature keys work. If set (and supported by the engine\n         * as per {@link TextToSpeech#getFeatures(Locale)}, the engine must\n         * use network based synthesis.\n         *\n         * @see TextToSpeech#speak(CharSequence, int, Bundle, String)\n         * @see TextToSpeech#synthesizeToFile(String, java.util.HashMap, String)\n         * @see TextToSpeech#getFeatures(java.util.Locale)\n         *\n         * @deprecated Starting from API level 21, to select network synthesis, call\n         * {@link TextToSpeech#getVoices()}, find a suitable network voice\n         * ({@link Voice#isNetworkConnectionRequired()}) and pass it\n         * to {@link TextToSpeech#setVoice(Voice)}.\n         ",
    "links" : [ "TextToSpeech#getFeatures", "TextToSpeech#getFeatures", "TextToSpeech#getVoices", "Voice#isNetworkConnectionRequired", "TextToSpeech#setVoice" ]
  }, {
    "name" : "KEY_FEATURE_EMBEDDED_SYNTHESIS",
    "type" : "String",
    "comment" : "\n         * Feature key for embedded synthesis. See {@link TextToSpeech#getFeatures(Locale)}\n         * for a description of how feature keys work. If set and supported by the engine\n         * as per {@link TextToSpeech#getFeatures(Locale)}, the engine must synthesize\n         * text on-device (without making network requests).\n         *\n         * @see TextToSpeech#speak(CharSequence, int, Bundle, String)\n         * @see TextToSpeech#synthesizeToFile(String, java.util.HashMap, String)\n         * @see TextToSpeech#getFeatures(java.util.Locale)\n\n         * @deprecated Starting from API level 21, to select embedded synthesis, call\n         * ({@link TextToSpeech#getVoices()}, find a suitable embedded voice\n         * ({@link Voice#isNetworkConnectionRequired()}) and pass it\n         * to {@link TextToSpeech#setVoice(Voice)}).\n         ",
    "links" : [ "TextToSpeech#getFeatures", "TextToSpeech#getFeatures", "TextToSpeech#getVoices", "Voice#isNetworkConnectionRequired", "TextToSpeech#setVoice" ]
  }, {
    "name" : "KEY_PARAM_SESSION_ID",
    "type" : "String",
    "comment" : "\n         * Parameter key to specify an audio session identifier (obtained from\n         * {@link AudioManager#generateAudioSessionId()}) that will be used by the request audio\n         * output. It can be used to associate one of the {@link android.media.audiofx.AudioEffect}\n         * objects with the synthesis (or earcon) output.\n         *\n         * @see TextToSpeech#speak(CharSequence, int, Bundle, String)\n         * @see TextToSpeech#playEarcon(String, int, HashMap)\n         ",
    "links" : [ "AudioManager#generateAudioSessionId", "android.media.audiofx.AudioEffect" ]
  }, {
    "name" : "KEY_FEATURE_NOT_INSTALLED",
    "type" : "String",
    "comment" : "\n         * Feature key that indicates that the voice may need to download additional data to be fully\n         * functional. The download will be triggered by calling\n         * {@link TextToSpeech#setVoice(Voice)} or {@link TextToSpeech#setLanguage(Locale)}.\n         * Until download is complete, each synthesis request will either report\n         * {@link TextToSpeech#ERROR_NOT_INSTALLED_YET} error, or use a different voice to synthesize\n         * the request. This feature should NOT be used as a key of a request parameter.\n         *\n         * @see TextToSpeech#getFeatures(java.util.Locale)\n         * @see Voice#getFeatures()\n         ",
    "links" : [ "TextToSpeech#setVoice", "TextToSpeech#setLanguage", "TextToSpeech#ERROR_NOT_INSTALLED_YET" ]
  }, {
    "name" : "KEY_FEATURE_NETWORK_TIMEOUT_MS",
    "type" : "String",
    "comment" : "\n         * Feature key that indicate that a network timeout can be set for the request. If set and\n         * supported as per {@link TextToSpeech#getFeatures(Locale)} or {@link Voice#getFeatures()},\n         * it can be used as request parameter to set the maximum allowed time for a single\n         * request attempt, in milliseconds, before synthesis fails. When used as a key of\n         * a request parameter, its value should be a string with an integer value.\n         *\n         * @see TextToSpeech#getFeatures(java.util.Locale)\n         * @see Voice#getFeatures()\n         ",
    "links" : [ "TextToSpeech#getFeatures", "Voice#getFeatures" ]
  }, {
    "name" : "KEY_FEATURE_NETWORK_RETRIES_COUNT",
    "type" : "String",
    "comment" : "\n         * Feature key that indicates that network request retries count can be set for the request.\n         * If set and supported as per {@link TextToSpeech#getFeatures(Locale)} or\n         * {@link Voice#getFeatures()}, it can be used as a request parameter to set the\n         * number of network request retries that are attempted in case of failure. When used as\n         * a key of a request parameter, its value should be a string with an integer value.\n         *\n         * @see TextToSpeech#getFeatures(java.util.Locale)\n         * @see Voice#getFeatures()\n         ",
    "links" : [ "TextToSpeech#getFeatures", "Voice#getFeatures" ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "DEFAULT_RATE", "DEFAULT_PITCH", "DEFAULT_VOLUME", "DEFAULT_PAN", "USE_DEFAULTS", "DEFAULT_ENGINE", "DEFAULT_STREAM", "CHECK_VOICE_DATA_PASS", "CHECK_VOICE_DATA_FAIL", "CHECK_VOICE_DATA_BAD_DATA", "CHECK_VOICE_DATA_MISSING_DATA", "CHECK_VOICE_DATA_MISSING_VOLUME", "INTENT_ACTION_TTS_SERVICE", "SERVICE_META_DATA", "ACTION_INSTALL_TTS_DATA", "ACTION_TTS_DATA_INSTALLED", "ACTION_CHECK_TTS_DATA", "ACTION_GET_SAMPLE_TEXT", "EXTRA_SAMPLE_TEXT", "EXTRA_AVAILABLE_VOICES", "EXTRA_UNAVAILABLE_VOICES", "EXTRA_VOICE_DATA_ROOT_DIRECTORY", "EXTRA_VOICE_DATA_FILES", "EXTRA_VOICE_DATA_FILES_INFO", "EXTRA_CHECK_VOICE_DATA_FOR", "EXTRA_TTS_DATA_INSTALLED", "KEY_PARAM_RATE", "KEY_PARAM_VOICE_NAME", "KEY_PARAM_LANGUAGE", "KEY_PARAM_COUNTRY", "KEY_PARAM_VARIANT", "KEY_PARAM_ENGINE", "KEY_PARAM_PITCH", "KEY_PARAM_STREAM", "KEY_PARAM_AUDIO_ATTRIBUTES", "KEY_PARAM_UTTERANCE_ID", "KEY_PARAM_VOLUME", "KEY_PARAM_PAN", "KEY_FEATURE_NETWORK_SYNTHESIS", "KEY_FEATURE_EMBEDDED_SYNTHESIS", "KEY_PARAM_SESSION_ID", "KEY_FEATURE_NOT_INSTALLED", "KEY_FEATURE_NETWORK_TIMEOUT_MS", "KEY_FEATURE_NETWORK_RETRIES_COUNT" ],
  "methodNames" : [ ]
}