{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ModemActivityInfo.java",
  "packageName" : "android.telephony",
  "className" : "ModemActivityInfo",
  "comment" : "\n * Contains information about the modem's activity. May be useful for power stats reporting.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TX_POWER_LEVELS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_LEVEL_0",
    "type" : "int",
    "comment" : "\n     * Corresponds to transmit power of less than 0dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_LEVEL_1",
    "type" : "int",
    "comment" : "\n     * Corresponds to transmit power between 0dBm and 5dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_LEVEL_2",
    "type" : "int",
    "comment" : "\n     * Corresponds to transmit power between 5dBm and 15dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_LEVEL_3",
    "type" : "int",
    "comment" : "\n     * Corresponds to transmit power between 15dBm and 20dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_LEVEL_4",
    "type" : "int",
    "comment" : "\n     * Corresponds to transmit power above 20dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_RANGES",
    "type" : "Range<Integer>[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimestamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSleepTimeMs",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIdleTimeMs",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalTxTimeMs",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalRxTimeMs",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSizeOfSpecificInfo",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActivityStatsTechSpecificInfo",
    "type" : "ActivityStatsTechSpecificInfo[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ModemActivityInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int getNumTxPowerLevels()",
    "returnType" : "int",
    "comment" : "\n     * The number of transmit power levels. Fixed by HAL definition.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * @param dest The Parcel in which the object should be written.\n     * @param flags Additional flags about how the object should be written.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTimestampMillis()",
    "returnType" : "long",
    "comment" : "\n     * Gets the timestamp at which this modem activity info was recorded.\n     *\n     * @return The timestamp, as returned by {@link SystemClock#elapsedRealtime()}, when this {@link\n     *     ModemActivityInfo} was recorded.\n     ",
    "links" : [ "android.telephony.ModemActivityInfo", "android.os.SystemClock#elapsedRealtime()" ]
  }, {
    "name" : "public void setTimestamp(long timestamp)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getTransmitDurationMillisAtPowerLevel(@TxPowerLevel int powerLevel)",
    "returnType" : "long",
    "comment" : "\n     * Gets the amount of time the modem spent transmitting at a certain power level.\n     *\n     * @param powerLevel The power level to query.\n     * @return The amount of time, in milliseconds, that the modem spent transmitting at the given\n     *     power level.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTransmitDurationMillisAtPowerLevel(@TxPowerLevel int powerLevel, int rat)",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getTransmitDurationMillisAtPowerLevel(@TxPowerLevel int powerLevel, int rat, @FrequencyRange int freq)",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public Range<Integer> getTransmitPowerRange(@TxPowerLevel int powerLevel)",
    "returnType" : "Range<Integer>",
    "comment" : "\n     * Gets the range of transmit powers corresponding to a certain power level.\n     *\n     * @param powerLevel The power level to query\n     * @return A {@link Range} object representing the range of intensities (in dBm) to which this\n     * power level corresponds.\n     ",
    "links" : [ "android.telephony.ServiceState.FrequencyRange" ]
  }, {
    "name" : "public int getSpecificInfoRat(int index)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getSpecificInfoFrequencyRange(int index)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setTransmitTimeMillis(int[] txTimeMs)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setTransmitTimeMillis(int rat, int[] txTimeMs)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setTransmitTimeMillis(int rat, int freq, int[] txTimeMs)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int[] getTransmitTimeMillis()",
    "returnType" : "int[]",
    "comment" : "\n     * @return The raw array of transmit power durations\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getTransmitTimeMillis(@AccessNetworkConstants.RadioAccessNetworkType int rat)",
    "returnType" : "int[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int[] getTransmitTimeMillis(@AccessNetworkConstants.RadioAccessNetworkType int rat, @FrequencyRange int freq)",
    "returnType" : "int[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getSleepTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Gets the amount of time (in milliseconds) when the modem is in a low power or sleep state.\n     *\n     * @return Time in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSleepTimeMillis(int sleepTimeMillis)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setSleepTimeMillis(long sleepTimeMillis)",
    "returnType" : "void",
    "comment" : "\n     * Provided for convenience, since the API surface needs to return longs but internal\n     * representations are ints.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public ModemActivityInfo getDelta(@NonNull ModemActivityInfo other)",
    "returnType" : "ModemActivityInfo",
    "comment" : "\n     * Computes the difference between this instance of {@link ModemActivityInfo} and another\n     * instance.\n     *\n     * This method should be used to compute the amount of activity that has happened between two\n     * samples of modem activity taken at separate times. The sample passed in as an argument to\n     * this method should be the one that's taken later in time (and therefore has more activity).\n     * @param other The other instance of {@link ModemActivityInfo} to diff against.\n     * @return An instance of {@link ModemActivityInfo} representing the difference in modem\n     * activity.\n     ",
    "links" : [ "android.telephony.ModemActivityInfo" ]
  }, {
    "name" : "public long getIdleTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Gets the amount of time (in milliseconds) when the modem is awake but neither transmitting\n     * nor receiving.\n     *\n     * @return Time in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIdleTimeMillis(int idleTimeMillis)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setIdleTimeMillis(long idleTimeMillis)",
    "returnType" : "void",
    "comment" : "\n     * Provided for convenience, since the API surface needs to return longs but internal\n     * representations are ints.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getReceiveTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Gets the amount of time (in milliseconds) when the modem is awake and receiving data.\n     *\n     * @return Time in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getReceiveTimeMillis(int rat)",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getReceiveTimeMillis(int rat, int freq)",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setReceiveTimeMillis(int rxTimeMillis)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setReceiveTimeMillis(long receiveTimeMillis)",
    "returnType" : "void",
    "comment" : "\n     * Provided for convenience, since the API surface needs to return longs but internal\n     * representations are ints.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setReceiveTimeMillis(int rat, long receiveTimeMillis)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setReceiveTimeMillis(int rat, int freq, long receiveTimeMillis)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getSpecificInfoLength()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isValid()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates if the modem has reported valid {@link ModemActivityInfo}.\n     *\n     * @return {@code true} if this {@link ModemActivityInfo} record is valid,\n     * {@code false} otherwise.\n     * @hide\n     ",
    "links" : [ "android.telephony.ModemActivityInfo" ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int getNumTxPowerLevels()", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public long getTimestampMillis()", "public void setTimestamp(long timestamp)", "public long getTransmitDurationMillisAtPowerLevel(@TxPowerLevel int powerLevel)", "public long getTransmitDurationMillisAtPowerLevel(@TxPowerLevel int powerLevel, int rat)", "public long getTransmitDurationMillisAtPowerLevel(@TxPowerLevel int powerLevel, int rat, @FrequencyRange int freq)", "public Range<Integer> getTransmitPowerRange(@TxPowerLevel int powerLevel)", "public int getSpecificInfoRat(int index)", "public int getSpecificInfoFrequencyRange(int index)", "public void setTransmitTimeMillis(int[] txTimeMs)", "public void setTransmitTimeMillis(int rat, int[] txTimeMs)", "public void setTransmitTimeMillis(int rat, int freq, int[] txTimeMs)", "public int[] getTransmitTimeMillis()", "public int[] getTransmitTimeMillis(@AccessNetworkConstants.RadioAccessNetworkType int rat)", "public int[] getTransmitTimeMillis(@AccessNetworkConstants.RadioAccessNetworkType int rat, @FrequencyRange int freq)", "public long getSleepTimeMillis()", "public void setSleepTimeMillis(int sleepTimeMillis)", "public void setSleepTimeMillis(long sleepTimeMillis)", "public ModemActivityInfo getDelta(@NonNull ModemActivityInfo other)", "public long getIdleTimeMillis()", "public void setIdleTimeMillis(int idleTimeMillis)", "public void setIdleTimeMillis(long idleTimeMillis)", "public long getReceiveTimeMillis()", "public long getReceiveTimeMillis(int rat)", "public long getReceiveTimeMillis(int rat, int freq)", "public void setReceiveTimeMillis(int rxTimeMillis)", "public void setReceiveTimeMillis(long receiveTimeMillis)", "public void setReceiveTimeMillis(int rat, long receiveTimeMillis)", "public void setReceiveTimeMillis(int rat, int freq, long receiveTimeMillis)", "public int getSpecificInfoLength()", "public boolean isValid()", "public boolean isEmpty()", "public boolean equals(Object o)", "public int hashCode()" ],
  "variableNames" : [ "TX_POWER_LEVELS", "TX_POWER_LEVEL_0", "TX_POWER_LEVEL_1", "TX_POWER_LEVEL_2", "TX_POWER_LEVEL_3", "TX_POWER_LEVEL_4", "TX_POWER_RANGES", "mTimestamp", "mSleepTimeMs", "mIdleTimeMs", "mTotalTxTimeMs", "mTotalRxTimeMs", "mSizeOfSpecificInfo", "mActivityStatsTechSpecificInfo", "CREATOR" ]
}