{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/io/FilterReader.java",
  "packageName" : "java.io",
  "className" : "FilterReader",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "in",
    "type" : "Reader",
    "comment" : "\n     * The underlying character-input stream.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int read() throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Reads a single character.\n     *\n     * @exception  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public int read(char[] cbuf, int off, int len) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Reads characters into a portion of an array.\n     *\n     * @exception  IOException  If an I/O error occurs\n     * @exception  IndexOutOfBoundsException {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public long skip(long n) throws IOException",
    "returnType" : "long",
    "comment" : "\n     * Skips characters.\n     *\n     * @exception  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean ready() throws IOException",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether this stream is ready to be read.\n     *\n     * @exception  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean markSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether this stream supports the mark() operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mark(int readAheadLimit) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Marks the present position in the stream.\n     *\n     * @exception  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reset() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Resets the stream.\n     *\n     * @exception  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int read() throws IOException", "public int read(char[] cbuf, int off, int len) throws IOException", "public long skip(long n) throws IOException", "public boolean ready() throws IOException", "public boolean markSupported()", "public void mark(int readAheadLimit) throws IOException", "public void reset() throws IOException", "public void close() throws IOException" ],
  "variableNames" : [ "in" ]
}