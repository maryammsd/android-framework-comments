{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/ActionBar.java",
  "packageName" : "android.app",
  "className" : "Tab",
  "comment" : "\n     * A tab in the action bar.\n     *\n     * <p>Tabs manage the hiding and showing of {@link Fragment}s.\n     *\n     * @deprecated Action bar navigation modes are deprecated and not supported by inline\n     * toolbar action bars. Consider using other\n     * <a href=\"http://developer.android.com/design/patterns/navigation.html\">common\n     * navigation patterns</a> instead.\n     ",
  "links" : [ "android.app.Fragment" ],
  "variables" : [ {
    "name" : "INVALID_POSITION",
    "type" : "int",
    "comment" : "\n         * An invalid position for a tab.\n         *\n         * @see #getPosition()\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract int getPosition()",
    "returnType" : "int",
    "comment" : "\n         * Return the current position of this tab in the action bar.\n         *\n         * @return Current position, or {@link #INVALID_POSITION} if this tab is not currently in\n         *         the action bar.\n         ",
    "links" : [ "#INVALID_POSITION" ]
  }, {
    "name" : "public abstract Drawable getIcon()",
    "returnType" : "Drawable",
    "comment" : "\n         * Return the icon associated with this tab.\n         *\n         * @return The tab's icon\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract CharSequence getText()",
    "returnType" : "CharSequence",
    "comment" : "\n         * Return the text of this tab.\n         *\n         * @return The tab's text\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Tab setIcon(Drawable icon)",
    "returnType" : "Tab",
    "comment" : "\n         * Set the icon displayed on this tab.\n         *\n         * @param icon The drawable to use as an icon\n         * @return The current instance for call chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Tab setIcon(@DrawableRes int resId)",
    "returnType" : "Tab",
    "comment" : "\n         * Set the icon displayed on this tab.\n         *\n         * @param resId Resource ID referring to the drawable to use as an icon\n         * @return The current instance for call chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Tab setText(CharSequence text)",
    "returnType" : "Tab",
    "comment" : "\n         * Set the text displayed on this tab. Text may be truncated if there is not\n         * room to display the entire string.\n         *\n         * @param text The text to display\n         * @return The current instance for call chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Tab setText(@StringRes int resId)",
    "returnType" : "Tab",
    "comment" : "\n         * Set the text displayed on this tab. Text may be truncated if there is not\n         * room to display the entire string.\n         *\n         * @param resId A resource ID referring to the text that should be displayed\n         * @return The current instance for call chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Tab setCustomView(View view)",
    "returnType" : "Tab",
    "comment" : "\n         * Set a custom view to be used for this tab. This overrides values set by\n         * {@link #setText(CharSequence)} and {@link #setIcon(Drawable)}.\n         *\n         * @param view Custom view to be used as a tab.\n         * @return The current instance for call chaining\n         ",
    "links" : [ "#setText(CharSequence)", "#setIcon(Drawable)" ]
  }, {
    "name" : "public abstract Tab setCustomView(@LayoutRes int layoutResId)",
    "returnType" : "Tab",
    "comment" : "\n         * Set a custom view to be used for this tab. This overrides values set by\n         * {@link #setText(CharSequence)} and {@link #setIcon(Drawable)}.\n         *\n         * @param layoutResId A layout resource to inflate and use as a custom tab view\n         * @return The current instance for call chaining\n         ",
    "links" : [ "#setText(CharSequence)", "#setIcon(Drawable)" ]
  }, {
    "name" : "public abstract View getCustomView()",
    "returnType" : "View",
    "comment" : "\n         * Retrieve a previously set custom view for this tab.\n         *\n         * @return The custom view set by {@link #setCustomView(View)}.\n         ",
    "links" : [ "#setCustomView(View)" ]
  }, {
    "name" : "public abstract Tab setTag(Object obj)",
    "returnType" : "Tab",
    "comment" : "\n         * Give this Tab an arbitrary object to hold for later use.\n         *\n         * @param obj Object to store\n         * @return The current instance for call chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Object getTag()",
    "returnType" : "Object",
    "comment" : "\n         * @return This Tab's tag object.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Tab setTabListener(TabListener listener)",
    "returnType" : "Tab",
    "comment" : "\n         * Set the {@link TabListener} that will handle switching to and from this tab.\n         * All tabs must have a TabListener set before being added to the ActionBar.\n         *\n         * @param listener Listener to handle tab selection events\n         * @return The current instance for call chaining\n         ",
    "links" : [ "TabListener" ]
  }, {
    "name" : "public abstract void select()",
    "returnType" : "void",
    "comment" : "\n         * Select this tab. Only valid if the tab has been added to the action bar.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Tab setContentDescription(@StringRes int resId)",
    "returnType" : "Tab",
    "comment" : "\n         * Set a description of this tab's content for use in accessibility support.\n         * If no content description is provided the title will be used.\n         *\n         * @param resId A resource ID referring to the description text\n         * @return The current instance for call chaining\n         * @see #setContentDescription(CharSequence)\n         * @see #getContentDescription()\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Tab setContentDescription(CharSequence contentDesc)",
    "returnType" : "Tab",
    "comment" : "\n         * Set a description of this tab's content for use in accessibility support.\n         * If no content description is provided the title will be used.\n         *\n         * @param contentDesc Description of this tab's content\n         * @return The current instance for call chaining\n         * @see #setContentDescription(int)\n         * @see #getContentDescription()\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract CharSequence getContentDescription()",
    "returnType" : "CharSequence",
    "comment" : "\n         * Gets a brief description of this tab's content for use in accessibility support.\n         *\n         * @return Description of this tab's content\n         * @see #setContentDescription(CharSequence)\n         * @see #setContentDescription(int)\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract int getPosition()", "public abstract Drawable getIcon()", "public abstract CharSequence getText()", "public abstract Tab setIcon(Drawable icon)", "public abstract Tab setIcon(@DrawableRes int resId)", "public abstract Tab setText(CharSequence text)", "public abstract Tab setText(@StringRes int resId)", "public abstract Tab setCustomView(View view)", "public abstract Tab setCustomView(@LayoutRes int layoutResId)", "public abstract View getCustomView()", "public abstract Tab setTag(Object obj)", "public abstract Object getTag()", "public abstract Tab setTabListener(TabListener listener)", "public abstract void select()", "public abstract Tab setContentDescription(@StringRes int resId)", "public abstract Tab setContentDescription(CharSequence contentDesc)", "public abstract CharSequence getContentDescription()" ],
  "variableNames" : [ "INVALID_POSITION" ]
}