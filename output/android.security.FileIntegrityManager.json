{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/security/FileIntegrityManager.java",
  "packageName" : "android.security",
  "className" : "FileIntegrityManager",
  "comment" : "\n * This class provides access to file integrity related operations.\n ",
  "variables" : [ {
    "name" : "mService",
    "type" : "IFileIntegrityService",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isApkVeritySupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if APK Verity is supported on the device. When supported, an APK can be\n     * installed with a fs-verity signature (if verified with trusted App Source Certificate) for\n     * continuous on-access verification.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAppSourceCertificateTrusted(@NonNull X509Certificate certificate) throws CertificateEncodingException",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the given certificate can be used to prove app's install source. Always\n     * return false if the feature is not supported.\n     *\n     * <p>A store can use this API to decide if a signature file needs to be downloaded. Also, if a\n     * store has shipped different certificates before (e.g. with stronger and weaker key), it can\n     * also use this API to download the best signature on the running device.\n     *\n     * @return whether the certificate is trusted in the system\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mService", "mContext" ],
  "methodNames" : [ "public boolean isApkVeritySupported()", "public boolean isAppSourceCertificateTrusted(@NonNull X509Certificate certificate) throws CertificateEncodingException" ]
}