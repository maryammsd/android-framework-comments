{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/metrics/ScopedSysTraceEvent.java",
  "packageName" : "org.chromium.base.metrics",
  "className" : "ScopedSysTraceEvent",
  "comment" : "\n * An alternative to @{TraceEvent} that allows us to trace events before native\n * initialization.\n *\n * Note that TraceEvent / EarlyTraceEvent cannot be used before native initialization since\n * it directly purges to the kernel debug message but that method does not allow tracing events\n * to be written *after* the event occurrence.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static ScopedSysTraceEvent scoped(String name)",
    "returnType" : "ScopedSysTraceEvent",
    "comment" : "\n     * Factory used to support the \"try with resource\" construct.\n     * Note that currently this is the only allowed pattern. However, this requires heap allocation\n     * so we may consider calling Trace.beginSection() / endSection() directly if it should be used\n     * repeatedly.\n     *\n     * @param name Trace event name.\n     * @return a {@ScopedSysTraceEvent}, or null if tracing is not enabled.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static ScopedSysTraceEvent scoped(String name)", "public void close()" ],
  "variableNames" : [ ]
}