{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaRoute2Info.java",
  "packageName" : "android.media",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link MediaRoute2Info media route info}.\n     ",
  "links" : [ "android.media.MediaRoute2Info" ],
  "variables" : [ {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFeatures",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSystem",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIconUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDescription",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectionState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolumeHandling",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolumeMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolume",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAddress",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeduplicationIds",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProviderId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsVisibilityRestricted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowedPackages",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuitabilityStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder addFeature(@NonNull String feature)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a feature for the route.\n         * @param feature a feature that the route has. May be one of predefined features\n         *                such as {@link #FEATURE_LIVE_AUDIO}, {@link #FEATURE_LIVE_VIDEO} or\n         *                {@link #FEATURE_REMOTE_PLAYBACK} or a custom feature defined by\n         *                a provider.\n         *\n         * @see #addFeatures(Collection)\n         ",
    "links" : [ "#FEATURE_LIVE_AUDIO", "#FEATURE_LIVE_VIDEO", "#FEATURE_REMOTE_PLAYBACK" ]
  }, {
    "name" : "public Builder addFeatures(@NonNull Collection<String> features)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds features for the route. A route must support at least one route type.\n         * @param features features that the route has. May include predefined features\n         *                such as {@link #FEATURE_LIVE_AUDIO}, {@link #FEATURE_LIVE_VIDEO} or\n         *                {@link #FEATURE_REMOTE_PLAYBACK} or custom features defined by\n         *                a provider.\n         *\n         * @see #addFeature(String)\n         ",
    "links" : [ "#FEATURE_LIVE_AUDIO", "#FEATURE_LIVE_VIDEO", "#FEATURE_REMOTE_PLAYBACK" ]
  }, {
    "name" : "public Builder clearFeatures()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears the features of the route. A route must support at least one route type.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setType(@Type int type)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the route's type.\n         *\n         * @see MediaRoute2Info#getType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSystemRoute(boolean isSystem)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the route is a system route or not.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setIconUri(@Nullable Uri iconUri)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the URI of the icon representing this route.\n         * <p>\n         * This icon will be used in picker UIs if available.\n         * </p><p>\n         * The URI must be one of the following formats:\n         * <ul>\n         * <li>content ({@link android.content.ContentResolver#SCHEME_CONTENT})</li>\n         * <li>android.resource ({@link android.content.ContentResolver#SCHEME_ANDROID_RESOURCE})\n         * </li>\n         * <li>file ({@link android.content.ContentResolver#SCHEME_FILE})</li>\n         * </ul>\n         * </p>\n         ",
    "links" : [ "android.content.ContentResolver#SCHEME_CONTENT", "android.content.ContentResolver#SCHEME_ANDROID_RESOURCE", "android.content.ContentResolver#SCHEME_FILE" ]
  }, {
    "name" : "public Builder setDescription(@Nullable CharSequence description)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the user-visible description of the route.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setConnectionState(@ConnectionState int connectionState)",
    "returnType" : "Builder",
    "comment" : "\n        * Sets the route's connection state.\n        *\n        * {@link #CONNECTION_STATE_DISCONNECTED},\n        * {@link #CONNECTION_STATE_CONNECTING}, or\n        * {@link #CONNECTION_STATE_CONNECTED}.\n        ",
    "links" : [ "#CONNECTION_STATE_CONNECTED", "#CONNECTION_STATE_DISCONNECTED", "#CONNECTION_STATE_CONNECTING" ]
  }, {
    "name" : "public Builder setClientPackageName(@Nullable String packageName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the package name of the app using the route.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPackageName(@NonNull String packageName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the package name of the route.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVolumeHandling(@PlaybackVolume int volumeHandling)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the route's volume handling.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVolumeMax(int volumeMax)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the route's maximum volume, or 0 if unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVolume(int volume)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the route's current volume, or 0 if unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAddress(String address)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the hardware address of the route.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDeduplicationIds(@NonNull Set<String> id)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the {@link MediaRoute2Info#getDeduplicationIds() deduplication IDs} of the route.\n         ",
    "links" : [ "android.media.MediaRoute2Info#getDeduplicationIds()" ]
  }, {
    "name" : "public Builder setExtras(@Nullable Bundle extras)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a bundle of extras for the route.\n         * <p>\n         * Note: The extras will not affect the result of {@link MediaRoute2Info#equals(Object)}.\n         ",
    "links" : [ "android.media.MediaRoute2Info#equals(Object)" ]
  }, {
    "name" : "public Builder setProviderId(@NonNull String providerId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the provider id of the route.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVisibilityPublic()",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the visibility of this route to public.\n         *\n         * <p>By default, unless you call {@link #setVisibilityRestricted}, the new route will be\n         * public.\n         *\n         * <p>Public routes are visible to any application with a matching {@link\n         * RouteDiscoveryPreference#getPreferredFeatures feature}.\n         *\n         * <p>Calls to this method override previous calls to {@link #setVisibilityPublic} and\n         * {@link #setVisibilityRestricted}.\n         ",
    "links" : [ "android.media.RouteDiscoveryPreference#getPreferredFeatures", "#setVisibilityPublic", "#setVisibilityRestricted" ]
  }, {
    "name" : "public Builder setVisibilityRestricted(@NonNull Set<String> allowedPackages)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the visibility of this route to restricted.\n         *\n         * <p>Routes with restricted visibility are only visible to its publisher application and\n         * applications whose package name is included in the provided {@code allowedPackages} set\n         * with a matching {@link RouteDiscoveryPreference#getPreferredFeatures feature}.\n         *\n         * <p>Calls to this method override previous calls to {@link #setVisibilityPublic} and\n         * {@link #setVisibilityRestricted}.\n         *\n         * @see #setVisibilityPublic\n         * @param allowedPackages set of package names which are allowed to see this route.\n         ",
    "links" : [ "android.media.RouteDiscoveryPreference#getPreferredFeatures", "#setVisibilityPublic", "#setVisibilityRestricted" ]
  }, {
    "name" : "public Builder setSuitabilityStatus(@SuitabilityStatus int suitabilityStatus)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets route suitability status.\n         *\n         * <p>The default value is {@link\n         * MediaRoute2Info#SUITABILITY_STATUS_SUITABLE_FOR_DEFAULT_TRANSFER}.\n         *\n         * <p> Apps are not supposed to set {@link\n         * MediaRoute2Info#SUITABILITY_STATUS_NOT_SUITABLE_FOR_TRANSFER}. Publishing a non-system\n         * route with such status throws {@link SecurityException}.\n         ",
    "links" : [ "android.media.MediaRoute2Info#SUITABILITY_STATUS_NOT_SUITABLE_FOR_TRANSFER", "android.media.MediaRoute2Info#SUITABILITY_STATUS_SUITABLE_FOR_DEFAULT_TRANSFER", "SecurityException" ]
  }, {
    "name" : "public MediaRoute2Info build()",
    "returnType" : "MediaRoute2Info",
    "comment" : "\n         * Builds the {@link MediaRoute2Info media route info}.\n         *\n         * @throws IllegalArgumentException if no features are added.\n         ",
    "links" : [ "android.media.MediaRoute2Info" ]
  } ],
  "methodNames" : [ "public Builder addFeature(@NonNull String feature)", "public Builder addFeatures(@NonNull Collection<String> features)", "public Builder clearFeatures()", "public Builder setType(@Type int type)", "public Builder setSystemRoute(boolean isSystem)", "public Builder setIconUri(@Nullable Uri iconUri)", "public Builder setDescription(@Nullable CharSequence description)", "public Builder setConnectionState(@ConnectionState int connectionState)", "public Builder setClientPackageName(@Nullable String packageName)", "public Builder setPackageName(@NonNull String packageName)", "public Builder setVolumeHandling(@PlaybackVolume int volumeHandling)", "public Builder setVolumeMax(int volumeMax)", "public Builder setVolume(int volume)", "public Builder setAddress(String address)", "public Builder setDeduplicationIds(@NonNull Set<String> id)", "public Builder setExtras(@Nullable Bundle extras)", "public Builder setProviderId(@NonNull String providerId)", "public Builder setVisibilityPublic()", "public Builder setVisibilityRestricted(@NonNull Set<String> allowedPackages)", "public Builder setSuitabilityStatus(@SuitabilityStatus int suitabilityStatus)", "public MediaRoute2Info build()" ],
  "variableNames" : [ "mId", "mName", "mFeatures", "mType", "mIsSystem", "mIconUri", "mDescription", "mConnectionState", "mClientPackageName", "mPackageName", "mVolumeHandling", "mVolumeMax", "mVolume", "mAddress", "mDeduplicationIds", "mExtras", "mProviderId", "mIsVisibilityRestricted", "mAllowedPackages", "mSuitabilityStatus" ]
}