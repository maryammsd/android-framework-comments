{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/KeyStoreParameter.java",
  "packageName" : "android.security",
  "className" : "KeyStoreParameter",
  "comment" : "\n * This provides the optional parameters that can be specified for\n * {@code KeyStore} entries that work with\n * <a href=\"{@docRoot}training/articles/keystore.html\">Android KeyStore\n * facility</a>. The Android KeyStore facility is accessed through a\n * {@link java.security.KeyStore} API using the {@code AndroidKeyStore}\n * provider. The {@code context} passed in may be used to pop up some UI to ask\n * the user to unlock or initialize the Android KeyStore facility.\n * <p>\n * Any entries placed in the {@code KeyStore} may be retrieved later. Note that\n * there is only one logical instance of the {@code KeyStore} per application\n * UID so apps using the {@code sharedUid} facility will also share a\n * {@code KeyStore}.\n * <p>\n * Keys may be generated using the {@link KeyPairGenerator} facility with a\n * {@link KeyPairGeneratorSpec} to specify the entry's {@code alias}. A\n * self-signed X.509 certificate will be attached to generated entries, but that\n * may be replaced at a later time by a certificate signed by a real Certificate\n * Authority.\n *\n * @deprecated Use {@link KeyProtection} instead.\n ",
  "links" : [ "java.security.KeyPairGenerator", "android.security.keystore.KeyProtection", "java.security.KeyStore", "android.security.KeyPairGeneratorSpec" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEncryptionRequired()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if the {@link java.security.KeyStore} entry must be encrypted at rest.\n     * This will protect the entry with the secure lock screen credential (e.g., password, PIN, or\n     * pattern).\n     *\n     * <p>Note that encrypting the key at rest requires that the secure lock screen (e.g., password,\n     * PIN, pattern) is set up, otherwise key generation will fail. Moreover, this key will be\n     * deleted when the secure lock screen is disabled or reset (e.g., by the user or a Device\n     * Administrator). Finally, this key cannot be used until the user unlocks the secure lock\n     * screen after boot.\n     *\n     * @see KeyguardManager#isDeviceSecure()\n     *\n     * @deprecated Data at rest encryption is enabled by default. If extra binding to the\n     *             lockscreen credential is desired, use\n     *             {@link android.security.keystore.KeyGenParameterSpec\n     *             .Builder#setUserAuthenticationRequired(boolean)}.\n     *             This flag will be ignored from Android S.\n     ",
    "links" : [ "java.security.KeyStore", "android.security.keystore.KeyGenParameterSpec.Builder#setUserAuthenticationRequired(boolean)" ]
  } ],
  "methodNames" : [ "public int getFlags()", "public boolean isEncryptionRequired()" ],
  "variableNames" : [ ]
}