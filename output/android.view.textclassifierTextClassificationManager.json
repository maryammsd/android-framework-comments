{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/textclassifier/TextClassificationManager.java",
  "packageName" : "android.view.textclassifier",
  "className" : "TextClassificationManager",
  "comment" : "\n * Interface to the text classification service.\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sDefaultSettings",
    "type" : "TextClassificationConstants",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultSessionFactory",
    "type" : "TextClassificationSessionFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomTextClassifier",
    "type" : "TextClassifier",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionFactory",
    "type" : "TextClassificationSessionFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSettings",
    "type" : "TextClassificationConstants",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public TextClassifier getTextClassifier()",
    "returnType" : "TextClassifier",
    "comment" : "\n     * Returns the text classifier that was set via {@link #setTextClassifier(TextClassifier)}.\n     * If this is null, this method returns a default text classifier (i.e. either the system text\n     * classifier if one exists, or a local text classifier running in this process.)\n     * <p>\n     * Note that requests to the TextClassifier may be handled in an OEM-provided process rather\n     * than in the calling app's process.\n     *\n     * @see #setTextClassifier(TextClassifier)\n     ",
    "links" : [ "#setTextClassifier" ]
  }, {
    "name" : "public void setTextClassifier(@Nullable TextClassifier textClassifier)",
    "returnType" : "void",
    "comment" : "\n     * Sets the text classifier.\n     * Set to null to use the system default text classifier.\n     * Set to {@link TextClassifier#NO_OP} to disable text classifier features.\n     ",
    "links" : [ "TextClassifier#NO_OP" ]
  }, {
    "name" : "public TextClassifier getTextClassifier(@TextClassifierType int type)",
    "returnType" : "TextClassifier",
    "comment" : "\n     * Returns a specific type of text classifier.\n     * If the specified text classifier cannot be found, this returns {@link TextClassifier#NO_OP}.\n     *\n     * @see TextClassifier#LOCAL\n     * @see TextClassifier#SYSTEM\n     * @see TextClassifier#DEFAULT_SYSTEM\n     * @hide\n     ",
    "links" : [ "TextClassifier#NO_OP" ]
  }, {
    "name" : "private TextClassificationConstants getSettings()",
    "returnType" : "TextClassificationConstants",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TextClassifier createTextClassificationSession(@NonNull TextClassificationContext classificationContext)",
    "returnType" : "TextClassifier",
    "comment" : "\n     * Call this method to start a text classification session with the given context.\n     * A session is created with a context helping the classifier better understand\n     * what the user needs and consists of queries and feedback events. The queries\n     * are directly related to providing useful functionality to the user and the events\n     * are a feedback loop back to the classifier helping it learn and better serve\n     * future queries.\n     *\n     * <p> All interactions with the returned classifier are considered part of a single\n     * session and are logically grouped. For example, when a text widget is focused\n     * all user interactions around text editing (selection, editing, etc) can be\n     * grouped together to allow the classifier get better.\n     *\n     * @param classificationContext The context in which classification would occur\n     *\n     * @return An instance to perform classification in the given context\n     ",
    "links" : [ ]
  }, {
    "name" : "public TextClassifier createTextClassificationSession(TextClassificationContext classificationContext, TextClassifier textClassifier)",
    "returnType" : "TextClassifier",
    "comment" : "\n     * @see #createTextClassificationSession(TextClassificationContext, TextClassifier)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setTextClassificationSessionFactory(@Nullable TextClassificationSessionFactory factory)",
    "returnType" : "void",
    "comment" : "\n     * Sets a TextClassificationSessionFactory to be used to create session-aware TextClassifiers.\n     *\n     * @param factory the textClassification session factory. If this is null, the default factory\n     *      will be used.\n     ",
    "links" : [ ]
  }, {
    "name" : "private TextClassifier getSystemTextClassifier(@TextClassifierType int type)",
    "returnType" : "TextClassifier",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private TextClassifier getLocalTextClassifier()",
    "returnType" : "TextClassifier",
    "comment" : "\n     * Returns a local textclassifier, which is running in this process.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void dump(IndentingPrintWriter pw)",
    "returnType" : "void",
    "comment" : " @hide *",
    "links" : [ ]
  }, {
    "name" : "public static TextClassificationConstants getSettings(Context context)",
    "returnType" : "TextClassificationConstants",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "sDefaultSettings", "mLock", "mDefaultSessionFactory", "mContext", "mCustomTextClassifier", "mSessionFactory", "mSettings" ],
  "methodNames" : [ "public TextClassifier getTextClassifier()", "public void setTextClassifier(@Nullable TextClassifier textClassifier)", "public TextClassifier getTextClassifier(@TextClassifierType int type)", "private TextClassificationConstants getSettings()", "public TextClassifier createTextClassificationSession(@NonNull TextClassificationContext classificationContext)", "public TextClassifier createTextClassificationSession(TextClassificationContext classificationContext, TextClassifier textClassifier)", "public void setTextClassificationSessionFactory(@Nullable TextClassificationSessionFactory factory)", "private TextClassifier getSystemTextClassifier(@TextClassifierType int type)", "private TextClassifier getLocalTextClassifier()", "public void dump(IndentingPrintWriter pw)", "public static TextClassificationConstants getSettings(Context context)" ]
}