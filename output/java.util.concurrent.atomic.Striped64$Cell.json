{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/atomic/Striped64.java",
  "packageName" : "java.util.concurrent.atomic",
  "className" : "Cell",
  "comment" : "\n     * Padded variant of AtomicLong supporting only raw accesses plus CAS.\n     *\n     * JVM intrinsics note: It would be possible to use a release-only\n     * form of CAS here, if it were provided.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "value",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VALUE",
    "type" : "VarHandle",
    "comment" : " VarHandle mechanics",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " final boolean cas(long cmp, long val)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final void reset()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final void reset(long identity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final long getAndSet(long val)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " final boolean cas(long cmp, long val)", " final void reset()", " final void reset(long identity)", " final long getAndSet(long val)" ],
  "variableNames" : [ "value", "VALUE" ]
}