{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/MmsManager.java",
  "packageName" : "android.telephony",
  "className" : "MmsManager",
  "comment" : "\n * Manages MMS operations such as sending multimedia messages.\n * Get this object by calling Context#getSystemService(Context#MMS_SERVICE).\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void sendMultimediaMessage(int subId, @NonNull Uri contentUri, @Nullable String locationUrl, @Nullable Bundle configOverrides, @Nullable PendingIntent sentIntent, long messageId)",
    "returnType" : "void",
    "comment" : "\n     * Send an MMS message\n     *\n     * @param subId the subscription id\n     * @param contentUri the content Uri from which the message pdu will be read\n     * @param locationUrl the optional location url where message should be sent to\n     * @param configOverrides the carrier-specific messaging configuration values to override for\n     *                        sending the message.\n     * @param sentIntent if not NULL this <code>PendingIntent</code> is broadcast when the message\n     *                   is successfully sent, or failed\n     * @param messageId an id that uniquely identifies the message requested to be sent.\n     *                  Used for logging and diagnostics purposes. The id may be 0. The messageId\n     *                  can be found in radio logs from logcat.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void downloadMultimediaMessage(int subId, @NonNull String locationUrl, @NonNull Uri contentUri, @Nullable Bundle configOverrides, @Nullable PendingIntent downloadedIntent, long messageId)",
    "returnType" : "void",
    "comment" : "\n     * Download an MMS message from carrier by a given location URL\n     *\n     * @param subId the subscription id\n     * @param locationUrl the location URL of the MMS message to be downloaded, usually obtained\n     *  from the MMS WAP push notification\n     * @param contentUri the content uri to which the downloaded pdu will be written\n     * @param configOverrides the carrier-specific messaging configuration values to override for\n     *  downloading the message.\n     * @param downloadedIntent if not NULL this <code>PendingIntent</code> is\n     *  broadcast when the message is downloaded, or the download is failed\n     * @param messageId an id that uniquely identifies the message requested to be downloaded.\n     *                  Used for logging and diagnostics purposes. The id may be 0. The messageId\n     *                  can be found in radio logs from logcat.\n     * @throws IllegalArgumentException if locationUrl or contentUri is empty\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void sendMultimediaMessage(int subId, @NonNull Uri contentUri, @Nullable String locationUrl, @Nullable Bundle configOverrides, @Nullable PendingIntent sentIntent, long messageId)", "public void downloadMultimediaMessage(int subId, @NonNull String locationUrl, @NonNull Uri contentUri, @Nullable Bundle configOverrides, @Nullable PendingIntent downloadedIntent, long messageId)" ],
  "variableNames" : [ "TAG", "mContext" ]
}