{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/ImsRegistrationAttributes.java",
  "packageName" : "android.telephony.ims",
  "className" : "ImsRegistrationAttributes",
  "comment" : "\n * Contains the attributes associated with the current IMS registration.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ATTR_EPDG_OVER_CELL_INTERNET",
    "type" : "int",
    "comment" : "\n     * Attribute to specify if an EPDG tunnel is setup over the cellular internet APN.\n     * <p>\n     * If IMS is registered through an EPDG tunnel is setup over the cellular internet APN then this\n     * bit will be set. If IMS is registered through the IMS APN, then this bit will not be set.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "ATTR_REGISTRATION_TYPE_EMERGENCY",
    "type" : "int",
    "comment" : "\n     * Attribute to specify if ims registration is of type normal or emergency.\n     * <p>\n     *     For emergency registration bit will be set.\n     *     For normal registration bit will not be set.\n     *     This flag is only applicable when listening to emergency IMS registration state updates\n     *     via the ImsMmTelManager#registerImsEmergencyRegistrationCallback API\n     * </p>\n     ",
    "links" : [ ]
  }, {
    "name" : "ATTR_VIRTUAL_FOR_ANONYMOUS_EMERGENCY_CALL",
    "type" : "int",
    "comment" : "\n     * Attribute to specify if virtual registration is required.\n     * <p>\n     *     If emergency registration is not required for making emergency call, in such cases\n     *     bit will be set and callback will represent virtual registration status update.\n     *     This flag is only applicable when listening to emergency IMS registration state updates\n     *     via the ImsMmTelManager#registerImsEmergencyRegistrationCallback API\n     * </p>\n     ",
    "links" : [ ]
  }, {
    "name" : "mRegistrationTech",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransportType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImsAttributeFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFeatureTags",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSipDetails",
    "type" : "SipDetails",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<ImsRegistrationAttributes>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getRegistrationTechnology()",
    "returnType" : "int",
    "comment" : "\n     * @return The Radio Access Technology that the IMS registration has been registered over.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTransportType()",
    "returnType" : "int",
    "comment" : "\n     * @return The access network transport type that IMS has been registered over.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAttributeFlags()",
    "returnType" : "int",
    "comment" : "\n     * @return A bit-mask containing attributes associated with the IMS registration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<String> getFeatureTags()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Gets the Set of feature tags associated with the current IMS registration, if the IMS\n     * service supports supplying this information.\n     * <p>\n     * The format of the set of feature tags will be one feature tag key and value per entry and\n     * will potentially contain MMTEL and RCS feature tags, depending the configuration of the IMS\n     * service associated with the registration indications. Each feature tag will contain the\n     * feature tag name and string value (if applicable), even if they have the same feature tag\n     * name. For example, {@code +g.3gpp.icsi-ref=\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg,\n     * urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.session\", +g.gsma.callcomposer} will be split\n     * into three feature tag  entries:\n     * {@code {+g.3gpp.icsi-ref=\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.msg\",\n     * +g.3gpp.icsi-ref=\"urn%3Aurn-7%3A3gpp-service.ims.icsi.oma.cpm.session\",\n     * +g.gsma.callcomposer}}.\n     * @return The Set of feature tags associated with the current IMS registration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SipDetails getSipDetails()",
    "returnType" : "SipDetails",
    "comment" : "\n     * @return The SIP information associated with the IMS registration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getRegistrationTechnology()", "public int getTransportType()", "public int getAttributeFlags()", "public Set<String> getFeatureTags()", "public SipDetails getSipDetails()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "ATTR_EPDG_OVER_CELL_INTERNET", "ATTR_REGISTRATION_TYPE_EMERGENCY", "ATTR_VIRTUAL_FOR_ANONYMOUS_EMERGENCY_CALL", "mRegistrationTech", "mTransportType", "mImsAttributeFlags", "mFeatureTags", "mSipDetails", "CREATOR" ]
}