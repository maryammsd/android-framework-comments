{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/transition/ArcMotion.java",
  "packageName" : "android.transition",
  "className" : "ArcMotion",
  "comment" : "\n * A PathMotion that generates a curved path along an arc on an imaginary circle containing\n * the two points. If the horizontal distance between the points is less than the vertical\n * distance, then the circle's center point will be horizontally aligned with the end point. If the\n * vertical distance is less than the horizontal distance then the circle's center point\n * will be vertically aligned with the end point.\n * <p>\n * When the two points are near horizontal or vertical, the curve of the motion will be\n * small as the center of the circle will be far from both points. To force curvature of\n * the path, {@link #setMinimumHorizontalAngle(float)} and\n * {@link #setMinimumVerticalAngle(float)} may be used to set the minimum angle of the\n * arc between two points.\n * </p>\n * <p>This may be used in XML as an element inside a transition.</p>\n * <pre>{@code\n * <changeBounds>\n *   <arcMotion android:minimumHorizontalAngle=\"15\"\n *              android:minimumVerticalAngle=\"0\"\n *              android:maximumAngle=\"90\"/>\n * </changeBounds>}\n * </pre>\n ",
  "variables" : [ {
    "name" : "DEFAULT_MIN_ANGLE_DEGREES",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MAX_ANGLE_DEGREES",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MAX_TANGENT",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinimumHorizontalAngle",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinimumVerticalAngle",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaximumAngle",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinimumHorizontalTangent",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinimumVerticalTangent",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaximumTangent",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setMinimumHorizontalAngle(float angleInDegrees)",
    "returnType" : "void",
    "comment" : "\n     * Sets the minimum arc along the circle between two points aligned near horizontally.\n     * When start and end points are close to horizontal, the calculated center point of the\n     * circle will be far from both points, giving a near straight path between the points.\n     * By setting a minimum angle, this forces the center point to be closer and give an\n     * exaggerated curve to the path.\n     * <p>The default value is 0.</p>\n     *\n     * @param angleInDegrees The minimum angle of the arc on a circle describing the Path\n     *                       between two nearly horizontally-separated points.\n     * @attr ref android.R.styleable#ArcMotion_minimumHorizontalAngle\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getMinimumHorizontalAngle()",
    "returnType" : "float",
    "comment" : "\n     * Returns the minimum arc along the circle between two points aligned near horizontally.\n     * When start and end points are close to horizontal, the calculated center point of the\n     * circle will be far from both points, giving a near straight path between the points.\n     * By setting a minimum angle, this forces the center point to be closer and give an\n     * exaggerated curve to the path.\n     * <p>The default value is 0.</p>\n     *\n     * @return  The minimum arc along the circle between two points aligned near horizontally.\n     * @attr ref android.R.styleable#ArcMotion_minimumHorizontalAngle\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMinimumVerticalAngle(float angleInDegrees)",
    "returnType" : "void",
    "comment" : "\n     * Sets the minimum arc along the circle between two points aligned near vertically.\n     * When start and end points are close to vertical, the calculated center point of the\n     * circle will be far from both points, giving a near straight path between the points.\n     * By setting a minimum angle, this forces the center point to be closer and give an\n     * exaggerated curve to the path.\n     * <p>The default value is 0.</p>\n     *\n     * @param angleInDegrees The minimum angle of the arc on a circle describing the Path\n     *                       between two nearly vertically-separated points.\n     * @attr ref android.R.styleable#ArcMotion_minimumVerticalAngle\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getMinimumVerticalAngle()",
    "returnType" : "float",
    "comment" : "\n     * Returns the minimum arc along the circle between two points aligned near vertically.\n     * When start and end points are close to vertical, the calculated center point of the\n     * circle will be far from both points, giving a near straight path between the points.\n     * By setting a minimum angle, this forces the center point to be closer and give an\n     * exaggerated curve to the path.\n     * <p>The default value is 0.</p>\n     *\n     * @return The minimum angle of the arc on a circle describing the Path\n     *         between two nearly vertically-separated points.\n     * @attr ref android.R.styleable#ArcMotion_minimumVerticalAngle\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMaximumAngle(float angleInDegrees)",
    "returnType" : "void",
    "comment" : "\n     * Sets the maximum arc along the circle between two points. When start and end points\n     * have close to equal x and y differences, the curve between them is large. This forces\n     * the curved path to have an arc of at most the given angle.\n     * <p>The default value is 70 degrees.</p>\n     *\n     * @param angleInDegrees The maximum angle of the arc on a circle describing the Path\n     *                       between the start and end points.\n     * @attr ref android.R.styleable#ArcMotion_maximumAngle\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getMaximumAngle()",
    "returnType" : "float",
    "comment" : "\n     * Returns the maximum arc along the circle between two points. When start and end points\n     * have close to equal x and y differences, the curve between them is large. This forces\n     * the curved path to have an arc of at most the given angle.\n     * <p>The default value is 70 degrees.</p>\n     *\n     * @return The maximum angle of the arc on a circle describing the Path\n     *         between the start and end points.\n     * @attr ref android.R.styleable#ArcMotion_maximumAngle\n     ",
    "links" : [ ]
  }, {
    "name" : "private static float toTangent(float arcInDegrees)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Path getPath(float startX, float startY, float endX, float endY)",
    "returnType" : "Path",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "DEFAULT_MIN_ANGLE_DEGREES", "DEFAULT_MAX_ANGLE_DEGREES", "DEFAULT_MAX_TANGENT", "mMinimumHorizontalAngle", "mMinimumVerticalAngle", "mMaximumAngle", "mMinimumHorizontalTangent", "mMinimumVerticalTangent", "mMaximumTangent" ],
  "methodNames" : [ "public void setMinimumHorizontalAngle(float angleInDegrees)", "public float getMinimumHorizontalAngle()", "public void setMinimumVerticalAngle(float angleInDegrees)", "public float getMinimumVerticalAngle()", "public void setMaximumAngle(float angleInDegrees)", "public float getMaximumAngle()", "private static float toTangent(float arcInDegrees)", "public Path getPath(float startX, float startY, float endX, float endY)" ]
}