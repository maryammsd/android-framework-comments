{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/SecureRandomSpi.java",
  "packageName" : "java.security",
  "className" : "SecureRandomSpi",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected abstract void engineSetSeed(byte[] seed)",
    "returnType" : "void",
    "comment" : "\n     * Reseeds this random object with the given seed. The seed supplements,\n     * rather than replaces, the existing seed. Thus, repeated calls\n     * are guaranteed never to reduce randomness.\n     *\n     * @param seed the seed.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract void engineNextBytes(byte[] bytes)",
    "returnType" : "void",
    "comment" : "\n     * Generates a user-specified number of random bytes.\n     * <p>\n     * Some random number generators can only generate a limited amount\n     * of random bytes per invocation. If the size of {@code bytes}\n     * is greater than this limit, the implementation should invoke\n     * its generation process multiple times to completely fill the\n     * buffer before returning from this method.\n     *\n     * @param bytes the array to be filled in with random bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void engineNextBytes(byte[] bytes, SecureRandomParameters params)",
    "returnType" : "void",
    "comment" : "\n     * Generates a user-specified number of random bytes with\n     * additional parameters.\n     * <p>\n     * Some random number generators can only generate a limited amount\n     * of random bytes per invocation. If the size of {@code bytes}\n     * is greater than this limit, the implementation should invoke\n     * its generation process multiple times to completely fill the\n     * buffer before returning from this method.\n     *\n     * @implSpec The default implementation throws\n     * an {@link UnsupportedOperationException}.\n     *\n     * @param bytes the array to be filled in with random bytes\n     * @param params additional parameters\n     * @throws UnsupportedOperationException if the implementation\n     *         has not overridden this method\n     * @throws IllegalArgumentException if {@code params} is {@code null},\n     *         illegal or unsupported by this {@code SecureRandom}\n     *\n     * @since 9\n     ",
    "links" : [ "UnsupportedOperationException" ]
  }, {
    "name" : "protected abstract byte[] engineGenerateSeed(int numBytes)",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the given number of seed bytes.  This call may be used to\n     * seed other random number generators.\n     *\n     * @param numBytes the number of seed bytes to generate.\n     *\n     * @return the seed bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void engineReseed(SecureRandomParameters params)",
    "returnType" : "void",
    "comment" : "\n     * Reseeds this random object with entropy input read from its\n     * entropy source with additional parameters.\n     * <p>\n     * If this method is called by {@link SecureRandom#reseed()},\n     * {@code params} will be {@code null}.\n     * <p>\n     * Do not override this method if the implementation does not\n     * support reseeding.\n     *\n     * @implSpec The default implementation throws\n     *           an {@link UnsupportedOperationException}.\n     *\n     * @param params extra parameters, can be {@code null}.\n     * @throws UnsupportedOperationException if the implementation\n     *         has not overridden this method\n     * @throws IllegalArgumentException if {@code params} is\n     *         illegal or unsupported by this {@code SecureRandom}\n     *\n     * @since 9\n     ",
    "links" : [ "java.security.SecureRandom#reseed()", "UnsupportedOperationException" ]
  }, {
    "name" : "protected SecureRandomParameters engineGetParameters()",
    "returnType" : "SecureRandomParameters",
    "comment" : "\n     * Returns the effective {@link SecureRandomParameters} for this\n     * {@code SecureRandom} instance.\n     *\n     * @implSpec The default implementation returns {@code null}.\n     *\n     * @return the effective {@link SecureRandomParameters} parameters,\n     * or {@code null} if no parameters were used.\n     *\n     * @since 9\n     ",
    "links" : [ "java.security.SecureRandomParameters" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a Human-readable string representation of this\n     * {@code SecureRandom}.\n     *\n     * @return the string representation\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected abstract void engineSetSeed(byte[] seed)", "protected abstract void engineNextBytes(byte[] bytes)", "protected void engineNextBytes(byte[] bytes, SecureRandomParameters params)", "protected abstract byte[] engineGenerateSeed(int numBytes)", "protected void engineReseed(SecureRandomParameters params)", "protected SecureRandomParameters engineGetParameters()", "public String toString()" ],
  "variableNames" : [ "serialVersionUID" ]
}