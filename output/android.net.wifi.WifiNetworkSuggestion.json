{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/WifiNetworkSuggestion.java",
  "packageName" : "android.net.wifi",
  "className" : "WifiNetworkSuggestion",
  "comment" : "\n * The Network Suggestion object is used to provide a Wi-Fi network for consideration when\n * auto-connecting to networks. Apps cannot directly create this object, they must use\n * {@link WifiNetworkSuggestion.Builder#build()} to obtain an instance of this object.\n *<p>\n * Apps can provide a list of such networks to the platform using\n * {@link WifiManager#addNetworkSuggestions(List)}.\n ",
  "links" : [ "android.net.wifi.WifiManager#addNetworkSuggestions(List)", "WifiNetworkSuggestion.Builder#build()" ],
  "variables" : [ {
    "name" : "RANDOMIZATION_PERSISTENT",
    "type" : "int",
    "comment" : "\n     * Generate a randomized MAC from a secret seed and information from the Wi-Fi configuration\n     * (SSID or Passpoint profile) and reuse it for all connections to this network. The\n     * randomized MAC address for this network will stay the same for each subsequent association\n     * until the device undergoes factory reset.\n     ",
    "links" : [ ]
  }, {
    "name" : "RANDOMIZATION_NON_PERSISTENT",
    "type" : "int",
    "comment" : "\n     * With this option, the randomized MAC address will periodically get re-randomized, and\n     * the randomized MAC address will change if the suggestion is removed and then added back.\n     ",
    "links" : [ ]
  }, {
    "name" : "wifiConfiguration",
    "type" : "WifiConfiguration",
    "comment" : "\n     * Network configuration for the provided network.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "passpointConfiguration",
    "type" : "PasspointConfiguration",
    "comment" : "\n     * Passpoint configuration for the provided network.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "isAppInteractionRequired",
    "type" : "boolean",
    "comment" : "\n     * Whether app needs to log in to captive portal to obtain Internet access.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "isUserInteractionRequired",
    "type" : "boolean",
    "comment" : "\n     * Whether user needs to log in to captive portal to obtain Internet access.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "isUserAllowedToManuallyConnect",
    "type" : "boolean",
    "comment" : "\n     * Whether app share credential with the user, allow user use provided credential to\n     * connect network manually.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "isInitialAutoJoinEnabled",
    "type" : "boolean",
    "comment" : "\n     * Whether the suggestion will be initialized as auto-joined or not.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "priorityGroup",
    "type" : "int",
    "comment" : "\n     * Priority group ID.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WifiNetworkSuggestion>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WifiConfiguration getWifiConfiguration()",
    "returnType" : "WifiConfiguration",
    "comment" : "\n     * Get the {@link WifiConfiguration} associated with this Suggestion.\n     * @hide\n     ",
    "links" : [ "android.net.wifi.WifiConfiguration" ]
  }, {
    "name" : "public MacAddress getBssid()",
    "returnType" : "MacAddress",
    "comment" : "\n     * Get the BSSID, or null if unset.\n     * @see Builder#setBssid(MacAddress)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCredentialSharedWithUser()",
    "returnType" : "boolean",
    "comment" : " @see Builder#setCredentialSharedWithUser(boolean) ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAppInteractionRequired()",
    "returnType" : "boolean",
    "comment" : " @see Builder#setIsAppInteractionRequired(boolean) ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnhancedOpen()",
    "returnType" : "boolean",
    "comment" : " @see Builder#setIsEnhancedOpen(boolean)  ",
    "links" : [ ]
  }, {
    "name" : "public boolean isHiddenSsid()",
    "returnType" : "boolean",
    "comment" : " @see Builder#setIsHiddenSsid(boolean)  ",
    "links" : [ ]
  }, {
    "name" : "public boolean isInitialAutojoinEnabled()",
    "returnType" : "boolean",
    "comment" : " @see Builder#setIsInitialAutojoinEnabled(boolean)  ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMetered()",
    "returnType" : "boolean",
    "comment" : " @see Builder#setIsMetered(boolean)  ",
    "links" : [ ]
  }, {
    "name" : "public boolean isUserInteractionRequired()",
    "returnType" : "boolean",
    "comment" : " @see Builder#setIsUserInteractionRequired(boolean)  ",
    "links" : [ ]
  }, {
    "name" : "public PasspointConfiguration getPasspointConfig()",
    "returnType" : "PasspointConfiguration",
    "comment" : "\n     * Get the {@link PasspointConfiguration} associated with this Suggestion, or null if this\n     * Suggestion is not for a Passpoint network.\n     ",
    "links" : [ "android.net.wifi.hotspot2.PasspointConfiguration" ]
  }, {
    "name" : "public int getPriority()",
    "returnType" : "int",
    "comment" : " @see Builder#setPriority(int)  ",
    "links" : [ ]
  }, {
    "name" : "public String getSsid()",
    "returnType" : "String",
    "comment" : "\n     * Return the unicode SSID of the network, or null if this is a Passpoint network or the SSID is\n     * non-unicode.\n     * <p>\n     * Note: use {@link #getWifiSsid()} which supports both unicode and non-unicode SSID.\n     * @see Builder#setSsid(String)\n     ",
    "links" : [ "#getWifiSsid()" ]
  }, {
    "name" : "public WifiSsid getWifiSsid()",
    "returnType" : "WifiSsid",
    "comment" : "\n     * Return the {@link WifiSsid} of the network, or null if this is a Passpoint network.\n     * @see Builder#setWifiSsid(WifiSsid)\n     * @return An object representing the SSID the network. {@code null} for passpoint network.\n     ",
    "links" : [ "android.net.wifi.WifiSsid" ]
  }, {
    "name" : "public boolean isUntrusted()",
    "returnType" : "boolean",
    "comment" : " @see Builder#setUntrusted(boolean)  ",
    "links" : [ ]
  }, {
    "name" : "public boolean isRestricted()",
    "returnType" : "boolean",
    "comment" : "\n     * Return if a suggestion is for a restricted network\n     * @see Builder#setRestricted(boolean)\n     * @return true if the suggestion is restricted, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isOemPaid()",
    "returnType" : "boolean",
    "comment" : "\n     * @see Builder#setOemPaid(boolean)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isOemPrivate()",
    "returnType" : "boolean",
    "comment" : "\n     * @see Builder#setOemPrivate(boolean)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCarrierMerged()",
    "returnType" : "boolean",
    "comment" : "\n     * @see Builder#setCarrierMerged(boolean)\n     ",
    "links" : [ ]
  }, {
    "name" : "public WifiEnterpriseConfig getEnterpriseConfig()",
    "returnType" : "WifiEnterpriseConfig",
    "comment" : "\n     * Get the WifiEnterpriseConfig, or null if unset.\n     * @see Builder#setWapiEnterpriseConfig(WifiEnterpriseConfig)\n     * @see Builder#setWpa2EnterpriseConfig(WifiEnterpriseConfig)\n     * @see Builder#setWpa3EnterpriseConfig(WifiEnterpriseConfig)\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPassphrase()",
    "returnType" : "String",
    "comment" : "\n     * Get the passphrase, or null if unset.\n     * @see Builder#setWapiPassphrase(String)\n     * @see Builder#setWpa2Passphrase(String)\n     * @see Builder#setWpa3Passphrase(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPriorityGroup()",
    "returnType" : "int",
    "comment" : "\n     * @see Builder#setPriorityGroup(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSubscriptionId()",
    "returnType" : "int",
    "comment" : "\n     * @see Builder#setSubscriptionId(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCarrierId()",
    "returnType" : "int",
    "comment" : "\n     * @see Builder#setCarrierId(int)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMacRandomizationSetting()",
    "returnType" : "int",
    "comment" : "\n     * Get the MAC randomization method.\n     * @return one of {@code RANDOMIZATION_*} values\n     * @see Builder#setMacRandomizationSetting(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public ParcelUuid getSubscriptionGroup()",
    "returnType" : "ParcelUuid",
    "comment" : "\n     * Get the subscription Group UUID of the suggestion\n     * @see Builder#setSubscriptionGroup(ParcelUuid)\n     * @return Uuid represent a Subscription Group\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isWifi7Enabled()",
    "returnType" : "boolean",
    "comment" : "\n     * See {@link Builder#setWifi7Enabled(boolean)}\n     ",
    "links" : [ "#setWifi7Enabled(boolean)" ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public int hashCode()", "public boolean equals(Object obj)", "public String toString()", "public WifiConfiguration getWifiConfiguration()", "public MacAddress getBssid()", "public boolean isCredentialSharedWithUser()", "public boolean isAppInteractionRequired()", "public boolean isEnhancedOpen()", "public boolean isHiddenSsid()", "public boolean isInitialAutojoinEnabled()", "public boolean isMetered()", "public boolean isUserInteractionRequired()", "public PasspointConfiguration getPasspointConfig()", "public int getPriority()", "public String getSsid()", "public WifiSsid getWifiSsid()", "public boolean isUntrusted()", "public boolean isRestricted()", "public boolean isOemPaid()", "public boolean isOemPrivate()", "public boolean isCarrierMerged()", "public WifiEnterpriseConfig getEnterpriseConfig()", "public String getPassphrase()", "public int getPriorityGroup()", "public int getSubscriptionId()", "public int getCarrierId()", "public int getMacRandomizationSetting()", "public ParcelUuid getSubscriptionGroup()", "public boolean isWifi7Enabled()" ],
  "variableNames" : [ "RANDOMIZATION_PERSISTENT", "RANDOMIZATION_NON_PERSISTENT", "wifiConfiguration", "passpointConfiguration", "isAppInteractionRequired", "isUserInteractionRequired", "isUserAllowedToManuallyConnect", "isInitialAutoJoinEnabled", "priorityGroup", "CREATOR" ]
}