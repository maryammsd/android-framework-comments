{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/ondevicepersonalization/IsolatedService.java",
  "packageName" : "android.adservices.ondevicepersonalization",
  "className" : "IsolatedService",
  "comment" : "\n * Base class for services that are started by ODP on a call to\n * {@code OnDevicePersonalizationManager#execute(ComponentName, PersistableBundle,\n * java.util.concurrent.Executor, OutcomeReceiver)}\n * and run in an <a\n * href=\"https://developer.android.com/guide/topics/manifest/service-element#isolated\">isolated\n * process</a>. The service can produce content to be displayed in a\n * {@link android.view.SurfaceView} in a calling app and write persistent results to on-device\n * storage, which can be consumed by Federated Analytics for cross-device statistical analysis or\n * by Federated Learning for model training.\n * Client apps use {@link OnDevicePersonalizationManager} to interact with an {@link\n * IsolatedService}.\n ",
  "links" : [ "android.view.SurfaceView", "android.adservices.ondevicepersonalization.aidl.IIsolatedService", "android.adservices.ondevicepersonalization.OnDevicePersonalizationManager" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sLogger",
    "type" : "LoggerFactory.Logger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onCreate()",
    "returnType" : "void",
    "comment" : " Creates a binder for an {@link IsolatedService}. ",
    "links" : [ "android.adservices.ondevicepersonalization.aidl.IIsolatedService" ]
  }, {
    "name" : "public IBinder onBind(@NonNull Intent intent)",
    "returnType" : "IBinder",
    "comment" : "\n     * Handles binding to the {@link IsolatedService}.\n     *\n     * @param intent The Intent that was used to bind to this service, as given to {@link\n     *     android.content.Context#bindService Context.bindService}. Note that any extras that were\n     *     included with the Intent at that point will <em>not</em> be seen here.\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.aidl.IIsolatedService", "android.content.Context#bindService" ]
  }, {
    "name" : "public abstract IsolatedWorker onRequest(@NonNull RequestToken requestToken)",
    "returnType" : "IsolatedWorker",
    "comment" : "\n     * Return an instance of an {@link IsolatedWorker} that handles client requests.\n     *\n     * @param requestToken an opaque token that identifies the current request to the service that\n     *     must be passed to service methods that depend on per-request state.\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.IsolatedWorker" ]
  }, {
    "name" : "public final KeyValueStore getRemoteData(@NonNull RequestToken requestToken)",
    "returnType" : "KeyValueStore",
    "comment" : "\n     * Returns a Data Access Object for the REMOTE_DATA table. The REMOTE_DATA table is a read-only\n     * key-value store that contains data that is periodically downloaded from an endpoint declared\n     * in the <download> tag in the ODP manifest of the service, as shown in the following example.\n     *\n     * <pre>{@code\n     * <!-- Contents of res/xml/OdpSettings.xml -->\n     * <on-device-personalization>\n     * <!-- Name of the service subclass -->\n     * <service \"com.example.odpsample.SampleService\">\n     *   <!-- If this tag is present, ODP will periodically poll this URL and\n     *    download content to populate REMOTE_DATA. Adopters that do not need to\n     *    download content from their servers can skip this tag. -->\n     *   <download-settings url=\"https://example.com/get\" />\n     * </service>\n     * </on-device-personalization>\n     * }</pre>\n     *\n     * @param requestToken an opaque token that identifies the current request to the service.\n     * @return A {@link KeyValueStore} object that provides access to the REMOTE_DATA table. The\n     *     methods in the returned {@link KeyValueStore} are blocking operations and should be\n     *     called from a worker thread and not the main thread or a binder thread.\n     * @see #onRequest(RequestToken)\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.KeyValueStore" ]
  }, {
    "name" : "public final MutableKeyValueStore getLocalData(@NonNull RequestToken requestToken)",
    "returnType" : "MutableKeyValueStore",
    "comment" : "\n     * Returns a Data Access Object for the LOCAL_DATA table. The LOCAL_DATA table is a persistent\n     * key-value store that the service can use to store any data. The contents of this table are\n     * visible only to the service running in an isolated process and cannot be sent outside the\n     * device.\n     *\n     * @param requestToken an opaque token that identifies the current request to the service.\n     * @return A {@link MutableKeyValueStore} object that provides access to the LOCAL_DATA table.\n     *     The methods in the returned {@link MutableKeyValueStore} are blocking operations and\n     *     should be called from a worker thread and not the main thread or a binder thread.\n     * @see #onRequest(RequestToken)\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.MutableKeyValueStore" ]
  }, {
    "name" : "public final LogReader getLogReader(@NonNull RequestToken requestToken)",
    "returnType" : "LogReader",
    "comment" : "\n     * Returns a DAO for the REQUESTS and EVENTS tables that provides\n     * access to the rows that are readable by the IsolatedService.\n     *\n     * @param requestToken an opaque token that identifies the current request to the service.\n     * @return A {@link LogReader} object that provides access to the REQUESTS and EVENTS table.\n     *     The methods in the returned {@link LogReader} are blocking operations and\n     *     should be called from a worker thread and not the main thread or a binder thread.\n     * @see #onRequest(RequestToken)\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.LogReader" ]
  }, {
    "name" : "public final EventUrlProvider getEventUrlProvider(@NonNull RequestToken requestToken)",
    "returnType" : "EventUrlProvider",
    "comment" : "\n     * Returns an {@link EventUrlProvider} for the current request. The {@link EventUrlProvider}\n     * provides URLs that can be embedded in HTML. When the HTML is rendered in an\n     * {@link android.webkit.WebView}, the platform intercepts requests to these URLs and invokes\n     * {@code IsolatedWorker#onEvent(EventInput, Consumer)}.\n     *\n     * @param requestToken an opaque token that identifies the current request to the service.\n     * @return An {@link EventUrlProvider} that returns event tracking URLs.\n     * @see #onRequest(RequestToken)\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.EventUrlProvider", "android.webkit.WebView" ]
  }, {
    "name" : "public final UserData getUserData(@NonNull RequestToken requestToken)",
    "returnType" : "UserData",
    "comment" : "\n     * Returns the platform-provided {@link UserData} for the current request.\n     *\n     * @param requestToken an opaque token that identifies the current request to the service.\n     * @return A {@link UserData} object.\n     * @see #onRequest(RequestToken)\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.UserData" ]
  }, {
    "name" : "public final FederatedComputeScheduler getFederatedComputeScheduler(@NonNull RequestToken requestToken)",
    "returnType" : "FederatedComputeScheduler",
    "comment" : "\n     * Returns an {@link FederatedComputeScheduler} for the current request. The {@link\n     * FederatedComputeScheduler} can be used to schedule and cancel federated computation jobs.\n     * The federated computation includes federated learning and federated analytic jobs.\n     *\n     * @param requestToken an opaque token that identifies the current request to the service.\n     * @return An {@link FederatedComputeScheduler} that returns a federated computation job\n     *     scheduler.\n     * @see #onRequest(RequestToken)\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.FederatedComputeScheduler" ]
  }, {
    "name" : "public final ModelManager getModelManager(@NonNull RequestToken requestToken)",
    "returnType" : "ModelManager",
    "comment" : "\n     * Returns an {@link ModelManager} for the current request. The {@link ModelManager} can be used\n     * to do model inference. It only supports Tensorflow Lite model inference now.\n     *\n     * @param requestToken an opaque token that identifies the current request to the service.\n     * @return An {@link ModelManager} that can be used for model inference.\n     ",
    "links" : [ "android.adservices.ondevicepersonalization.ModelManager" ]
  } ],
  "methodNames" : [ "public void onCreate()", "public IBinder onBind(@NonNull Intent intent)", "public abstract IsolatedWorker onRequest(@NonNull RequestToken requestToken)", "public final KeyValueStore getRemoteData(@NonNull RequestToken requestToken)", "public final MutableKeyValueStore getLocalData(@NonNull RequestToken requestToken)", "public final LogReader getLogReader(@NonNull RequestToken requestToken)", "public final EventUrlProvider getEventUrlProvider(@NonNull RequestToken requestToken)", "public final UserData getUserData(@NonNull RequestToken requestToken)", "public final FederatedComputeScheduler getFederatedComputeScheduler(@NonNull RequestToken requestToken)", "public final ModelManager getModelManager(@NonNull RequestToken requestToken)" ],
  "variableNames" : [ "TAG", "sLogger", "mBinder" ]
}