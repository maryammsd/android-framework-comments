{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/impl/CronetLibraryLoader.java",
  "packageName" : "org.chromium.net.impl",
  "className" : "CronetLibraryLoader",
  "comment" : " CronetLibraryLoader loads and initializes native library on init thread. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "sLoadLock",
    "type" : "Object",
    "comment" : " Synchronize initialization.",
    "links" : [ ]
  }, {
    "name" : "LIBRARY_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sInitThread",
    "type" : "HandlerThread",
    "comment" : " the global singleton NetworkChangeNotifier live on it and are never killed.",
    "links" : [ ]
  }, {
    "name" : "sLibraryLoaded",
    "type" : "boolean",
    "comment" : " Has library loading commenced?  Setting guarded by sLoadLock.",
    "links" : [ ]
  }, {
    "name" : "sInitThreadInitDone",
    "type" : "boolean",
    "comment" : " Has ensureInitThreadInitialized() completed?",
    "links" : [ ]
  }, {
    "name" : "sWaitForLibLoad",
    "type" : "ConditionVariable",
    "comment" : " is completed and native methods have been registered.",
    "links" : [ ]
  }, {
    "name" : "sHttpFlagsLoaded",
    "type" : "ConditionVariable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sHttpFlags",
    "type" : "ResolvedFlags",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOG_FLAG_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void ensureInitialized(Context applicationContext, final CronetEngineBuilderImpl builder)",
    "returnType" : "void",
    "comment" : "\n     * Ensure that native library is loaded and initialized. Can be called from\n     * any thread, the load and initialization is performed on init thread.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void setNativeLoggingLevel()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean onInitThread()",
    "returnType" : "boolean",
    "comment" : " Returns {@code true} if running on the initialization thread. ",
    "links" : [ ]
  }, {
    "name" : " static void ensureInitializedOnInitThread()",
    "returnType" : "void",
    "comment" : "\n     * Ensure that the init thread initialization has completed. Can only be called from\n     * the init thread. Ensures that HTTP flags are loaded, the NetworkChangeNotifier is initialzied\n     * and the init thread native MessageLoop is initialized.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void postToInitThread(Runnable r)",
    "returnType" : "void",
    "comment" : " Run {@code r} on the initialization thread. ",
    "links" : [ ]
  }, {
    "name" : "private static byte[] getBaseFeatureOverrides()",
    "returnType" : "byte[]",
    "comment" : "\n     * Called by native Cronet library early initialization code to obtain the values of\n     * native base::Feature overrides that will be applied for the entire lifetime of the Cronet\n     * native library.\n     *\n     * <p>Note that this call sits in the critical path of native library initialization, as\n     * practically no Chromium native code can run until base::Feature values have settled.\n     *\n     * @return The base::Feature overrides as a binary serialized {@link\n     * org.chromium.net.httpflags.BaseFeatureOverrides} proto.\n     ",
    "links" : [ "org.chromium.net.httpflags.BaseFeatureOverrides" ]
  }, {
    "name" : "private static String getDefaultUserAgent()",
    "returnType" : "String",
    "comment" : "\n     * Called from native library to get default user agent constructed\n     * using application context. May be called on any thread.\n     *\n     * Expects that ContextUtils.initApplicationContext() was called already\n     * either by some testing framework or an embedder constructing a Java\n     * CronetEngine via CronetEngine.Builder.build().\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void ensureInitializedFromNative()",
    "returnType" : "void",
    "comment" : "\n     * Called from native library to ensure that library is initialized.\n     * May be called on any thread, but initialization is performed on\n     * this.sInitThread.\n     *\n     * Expects that ContextUtils.initApplicationContext() was called already\n     * either by some testing framework or an embedder constructing a Java\n     * CronetEngine via CronetEngine.Builder.build().\n     *\n     * TODO(mef): In the long term this should be changed to some API with\n     * lower overhead like CronetEngine.Builder.loadNativeCronet().\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void setNetworkThreadPriorityOnNetworkThread(int priority)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void ensureInitialized(Context applicationContext, final CronetEngineBuilderImpl builder)", "private static void setNativeLoggingLevel()", "private static boolean onInitThread()", " static void ensureInitializedOnInitThread()", "public static void postToInitThread(Runnable r)", "private static byte[] getBaseFeatureOverrides()", "private static String getDefaultUserAgent()", "private static void ensureInitializedFromNative()", "private static void setNetworkThreadPriorityOnNetworkThread(int priority)" ],
  "variableNames" : [ "sLoadLock", "LIBRARY_NAME", "TAG", "sInitThread", "sLibraryLoaded", "sInitThreadInitDone", "sWaitForLibLoad", "sHttpFlagsLoaded", "sHttpFlags", "LOG_FLAG_NAME" ]
}