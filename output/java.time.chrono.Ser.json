{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/time/chrono/Ser.java",
  "packageName" : "java.time.chrono",
  "className" : "Ser",
  "comment" : "\n * The shared serialization delegate for this package.\n *\n * @implNote\n * This class wraps the object being serialized, and takes a byte representing the type of the class to\n * be serialized.  This byte can also be used for versioning the serialization format.  In this case another\n * byte flag would be used in order to specify an alternative version of the type format.\n * For example {@code CHRONO_TYPE_VERSION_2 = 21}\n * <p>\n * In order to serialize the object it writes its byte and then calls back to the appropriate class where\n * the serialization is performed.  In order to deserialize the object it read in the type byte, switching\n * in order to select which class to call back into.\n * <p>\n * The serialization format is determined on a per class basis.  In the case of field based classes each\n * of the fields is written out with an appropriate size format in descending order of the field's size.  For\n * example in the case of {@link LocalDate} year is written before month.  Composite classes, such as\n * {@link LocalDateTime} are serialized as one object.  Enum classes are serialized using the index of their\n * element.\n * <p>\n * This class is mutable and should be created once per serialization.\n *\n * @serial include\n * @since 1.8\n ",
  "links" : [ "java.time.LocalDate", "java.time.LocalDateTime" ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "\n     * Serialization version.\n     ",
    "links" : [ ]
  }, {
    "name" : "CHRONO_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHRONO_LOCAL_DATE_TIME_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHRONO_ZONE_DATE_TIME_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAPANESE_DATE_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAPANESE_ERA_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HIJRAH_DATE_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MINGUO_DATE_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "THAIBUDDHIST_DATE_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHRONO_PERIOD_TYPE",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "type",
    "type" : "byte",
    "comment" : " The type being serialized. ",
    "links" : [ ]
  }, {
    "name" : "object",
    "type" : "Serializable",
    "comment" : " The object being serialized. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeExternal(ObjectOutput out) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Implements the {@code Externalizable} interface to write the object.\n     * @serialData\n     * Each serializable class is mapped to a type that is the first byte\n     * in the stream.  Refer to each class {@code writeReplace}\n     * serialized form for the value of the type and sequence of values for the type.\n     * <ul>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.HijrahChronology\">HijrahChronology.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.IsoChronology\">IsoChronology.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.JapaneseChronology\">JapaneseChronology.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.MinguoChronology\">MinguoChronology.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.ThaiBuddhistChronology\">ThaiBuddhistChronology.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.ChronoLocalDateTimeImpl\">ChronoLocalDateTime.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.ChronoZonedDateTimeImpl\">ChronoZonedDateTime.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.JapaneseDate\">JapaneseDate.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.JapaneseEra\">JapaneseEra.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.HijrahDate\">HijrahDate.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.MinguoDate\">MinguoDate.writeReplace</a>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.ThaiBuddhistDate\">ThaiBuddhistDate.writeReplace</a>\n     * </ul>\n     *\n     * @param out  the data stream to write to, not null\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void writeInternal(byte type, Object object, ObjectOutput out) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException",
    "returnType" : "void",
    "comment" : "\n     * Implements the {@code Externalizable} interface to read the object.\n     * @serialData\n     * The streamed type and parameters defined by the type's {@code writeReplace}\n     * method are read and passed to the corresponding static factory for the type\n     * to create a new instance.  That instance is returned as the de-serialized\n     * {@code Ser} object.\n     *\n     * <ul>\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.HijrahChronology\">HijrahChronology</a> -\n     *          Chronology.of(id)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.IsoChronology\">IsoChronology</a> -\n     *          Chronology.of(id)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.JapaneseChronology\">JapaneseChronology</a> -\n     *          Chronology.of(id)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.MinguoChronology\">MinguoChronology</a> -\n     *          Chronology.of(id)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.ThaiBuddhistChronology\">ThaiBuddhistChronology</a> -\n     *          Chronology.of(id)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.ChronoLocalDateTimeImpl\">ChronoLocalDateTime</a> -\n     *          date.atTime(time)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.ChronoZonedDateTimeImpl\">ChronoZonedDateTime</a> -\n     *          dateTime.atZone(offset).withZoneSameLocal(zone)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.JapaneseDate\">JapaneseDate</a> -\n     *          JapaneseChronology.INSTANCE.date(year, month, dayOfMonth)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.JapaneseEra\">JapaneseEra</a> -\n     *          JapaneseEra.of(eraValue)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.HijrahDate\">HijrahDate</a> -\n     *          HijrahChronology chrono.date(year, month, dayOfMonth)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.MinguoDate\">MinguoDate</a> -\n     *          MinguoChronology.INSTANCE.date(year, month, dayOfMonth)\n     * <li><a href=\"{@docRoot}/serialized-form.html#java.time.chrono.ThaiBuddhistDate\">ThaiBuddhistDate</a> -\n     *          ThaiBuddhistChronology.INSTANCE.date(year, month, dayOfMonth)\n     * </ul>\n     *\n     * @param in  the data stream to read from, not null\n     ",
    "links" : [ ]
  }, {
    "name" : " static Serializable read(ObjectInput in) throws IOException, ClassNotFoundException",
    "returnType" : "Serializable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Serializable readInternal(byte type, ObjectInput in) throws IOException, ClassNotFoundException",
    "returnType" : "Serializable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Object readResolve()",
    "returnType" : "Object",
    "comment" : "\n     * Returns the object that will replace this one.\n     *\n     * @return the read object, should never be null\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void writeExternal(ObjectOutput out) throws IOException", "private static void writeInternal(byte type, Object object, ObjectOutput out) throws IOException", "public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException", " static Serializable read(ObjectInput in) throws IOException, ClassNotFoundException", "private static Serializable readInternal(byte type, ObjectInput in) throws IOException, ClassNotFoundException", "private Object readResolve()" ],
  "variableNames" : [ "serialVersionUID", "CHRONO_TYPE", "CHRONO_LOCAL_DATE_TIME_TYPE", "CHRONO_ZONE_DATE_TIME_TYPE", "JAPANESE_DATE_TYPE", "JAPANESE_ERA_TYPE", "HIJRAH_DATE_TYPE", "MINGUO_DATE_TYPE", "THAIBUDDHIST_DATE_TYPE", "CHRONO_PERIOD_TYPE", "type", "object" ]
}