{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/uwb/DistanceMeasurement.java",
  "packageName" : "android.uwb",
  "className" : "Builder",
  "comment" : "\n     * Builder to get a {@link DistanceMeasurement} object.\n     ",
  "links" : [ "android.uwb.DistanceMeasurement" ],
  "variables" : [ {
    "name" : "mMeters",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mErrorMeters",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfidenceLevel",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setMeters(double meters)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the distance measurement in meters\n         *\n         * @param meters distance in meters\n         * @throws IllegalArgumentException if meters is NaN\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setErrorMeters(@FloatRange(from = 0.0) double errorMeters)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the distance error in meters\n         *\n         * @param errorMeters distance error in meters\n         * @throws IllegalArgumentException if error is negative or NaN\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setConfidenceLevel(@FloatRange(from = 0.0, to = 1.0) double confidenceLevel)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the confidence level\n         *\n         * @param confidenceLevel the confidence level in the distance measurement\n         * @throws IllegalArgumentException if confidence level is not in the range of [0.0, 1.0]\n         ",
    "links" : [ ]
  }, {
    "name" : "public DistanceMeasurement build()",
    "returnType" : "DistanceMeasurement",
    "comment" : "\n         * Builds the {@link DistanceMeasurement} object\n         *\n         * @throws IllegalStateException if meters, error, or confidence are not set\n         ",
    "links" : [ "android.uwb.DistanceMeasurement" ]
  } ],
  "methodNames" : [ "public Builder setMeters(double meters)", "public Builder setErrorMeters(@FloatRange(from = 0.0) double errorMeters)", "public Builder setConfidenceLevel(@FloatRange(from = 0.0, to = 1.0) double confidenceLevel)", "public DistanceMeasurement build()" ],
  "variableNames" : [ "mMeters", "mErrorMeters", "mConfidenceLevel" ]
}