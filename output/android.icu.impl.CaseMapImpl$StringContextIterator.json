{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/CaseMapImpl.java",
  "packageName" : "android.icu.impl",
  "className" : "StringContextIterator",
  "comment" : "\n     * Implementation of UCaseProps.ContextIterator, iterates over a String.\n     * See ustrcase.c/utf16_caseContextIterator().\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "s",
    "type" : "CharSequence",
    "comment" : " variables",
    "links" : [ ]
  }, {
    "name" : "index",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "limit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cpStart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cpLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dir",
    "type" : "int",
    "comment" : " 0=initial state  >0=forward  <0=backward",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setLimit(int lim)",
    "returnType" : "void",
    "comment" : "\n         * Set the iteration limit for nextCaseMapCP() to an index within the string.\n         * If the limit parameter is negative or past the string, then the\n         * string length is restored as the iteration limit.\n         *\n         * <p>This limit does not affect the next() function which always\n         * iterates to the very end of the string.\n         *\n         * @param lim The iteration limit.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void moveToLimit()",
    "returnType" : "void",
    "comment" : "\n         * Move to the iteration limit without fetching code points up to there.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void moveTo(int i)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int nextCaseMapCP()",
    "returnType" : "int",
    "comment" : "\n         * Iterate forward through the string to fetch the next code point\n         * to be case-mapped, and set the context indexes for it.\n         *\n         * <p>When the iteration limit is reached (and -1 is returned),\n         * getCPStart() will be at the iteration limit.\n         *\n         * <p>Iteration with next() does not affect the position for nextCaseMapCP().\n         *\n         * @return The next code point to be case-mapped, or <0 when the iteration is done.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setCPStartAndLimit(int s, int l)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCPStart()",
    "returnType" : "int",
    "comment" : "\n         * Returns the start of the code point that was last returned\n         * by nextCaseMapCP().\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getCPLimit()",
    "returnType" : "int",
    "comment" : "\n         * Returns the limit of the code point that was last returned\n         * by nextCaseMapCP().\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getCPLength()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void reset(int direction)",
    "returnType" : "void",
    "comment" : " The following code is not used anywhere in this private class",
    "links" : [ ]
  }, {
    "name" : "public int next()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setLimit(int lim)", "public void moveToLimit()", "public void moveTo(int i)", "public int nextCaseMapCP()", "public void setCPStartAndLimit(int s, int l)", "public int getCPStart()", "public int getCPLimit()", "public int getCPLength()", "public void reset(int direction)", "public int next()" ],
  "variableNames" : [ "s", "index", "limit", "cpStart", "cpLimit", "dir" ]
}