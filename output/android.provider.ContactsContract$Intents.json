{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "Intents",
  "comment" : "\n     * Contains helper classes used to create or manage {@link android.content.Intent Intents}\n     * that involve contacts.\n     ",
  "links" : [ "android.content.Intent" ],
  "variables" : [ {
    "name" : "SEARCH_SUGGESTION_CLICKED",
    "type" : "String",
    "comment" : "\n         * This is the intent that is fired when a search suggestion is clicked on.\n         ",
    "links" : [ ]
  }, {
    "name" : "SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED",
    "type" : "String",
    "comment" : "\n         * This is the intent that is fired when a search suggestion for dialing a number\n         * is clicked on.\n         ",
    "links" : [ ]
  }, {
    "name" : "SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED",
    "type" : "String",
    "comment" : "\n         * This is the intent that is fired when a search suggestion for creating a contact\n         * is clicked on.\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTACTS_DATABASE_CREATED",
    "type" : "String",
    "comment" : "\n         * This is the intent that is fired when the contacts database is created. <p> The\n         * READ_CONTACT permission is required to receive these broadcasts.\n         *\n         * <p>Because this is an implicit broadcast, apps targeting Android O will no longer\n         * receive this broadcast via a manifest broadcast receiver.  (Broadcast receivers\n         * registered at runtime with\n         * {@link Context#registerReceiver(BroadcastReceiver, IntentFilter)} will still receive it.)\n         * Instead, an app can use {@link ProviderStatus#DATABASE_CREATION_TIMESTAMP} to see if the\n         * contacts database has been initialized when it starts.\n         ",
    "links" : [ "android.content.Context#registerReceiver(BroadcastReceiver", "#DATABASE_CREATION_TIMESTAMP" ]
  }, {
    "name" : "ATTACH_IMAGE",
    "type" : "String",
    "comment" : "\n         * Starts an Activity that lets the user pick a contact to attach an image to.\n         * After picking the contact it launches the image cropper in face detection mode.\n         ",
    "links" : [ ]
  }, {
    "name" : "INVITE_CONTACT",
    "type" : "String",
    "comment" : "\n         * This is the intent that is fired when the user clicks the \"invite to the network\" button\n         * on a contact.  Only sent to an activity which is explicitly registered by a contact\n         * provider which supports the \"invite to the network\" feature.\n         * <p>\n         * {@link Intent#getData()} contains the lookup URI for the contact.\n         ",
    "links" : [ "android.content.Intent#getData()" ]
  }, {
    "name" : "SHOW_OR_CREATE_CONTACT",
    "type" : "String",
    "comment" : "\n         * Takes as input a data URI with a mailto: or tel: scheme. If a single\n         * contact exists with the given data it will be shown. If no contact\n         * exists, a dialog will ask the user if they want to create a new\n         * contact with the provided details filled in. If multiple contacts\n         * share the data the user will be prompted to pick which contact they\n         * want to view.\n         * <p>\n         * For <code>mailto:</code> URIs, the scheme specific portion must be a\n         * raw email address, such as one built using\n         * {@link Uri#fromParts(String, String, String)}.\n         * <p>\n         * For <code>tel:</code> URIs, the scheme specific portion is compared\n         * to existing numbers using the standard caller ID lookup algorithm.\n         * The number must be properly encoded, for example using\n         * {@link Uri#fromParts(String, String, String)}.\n         * <p>\n         * Any extras from the {@link Insert} class will be passed along to the\n         * create activity if there are no contacts to show.\n         * <p>\n         * Passing true for the {@link #EXTRA_FORCE_CREATE} extra will skip\n         * prompting the user when the contact doesn't exist.\n         ",
    "links" : [ "android.net.Uri#fromParts(String", "#EXTRA_FORCE_CREATE", "Insert" ]
  }, {
    "name" : "ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS",
    "type" : "String",
    "comment" : "\n         * Activity Action: Initiate a message to someone by voice. The message could be text,\n         * audio, video or image(photo). This action supports messaging with a specific contact\n         * regardless of the underlying messaging protocol used.\n         * <p>\n         * The action could be originated from the Voice Assistant as a voice interaction. In such\n         * case, a receiving activity that supports {@link android.content.Intent#CATEGORY_VOICE}\n         * could check return value of {@link android.app.Activity#isVoiceInteractionRoot} before\n         * proceeding. By doing this check the activity verifies that the action indeed was\n         * initiated by Voice Assistant and could send a message right away, without any further\n         * input from the user. This allows for a smooth user experience when sending a message by\n         * voice. Note: this activity must also support the {@link\n         * android.content.Intent#CATEGORY_DEFAULT} so it can be found by {@link\n         * android.service.voice.VoiceInteractionSession#startVoiceActivity}.\n         * <p>\n         * When the action was not initiated by Voice Assistant or when the receiving activity does\n         * not support {@link android.content.Intent#CATEGORY_VOICE}, the activity must confirm\n         * with the user before sending the message (because in this case it is unknown which app\n         * sent the intent, it could be malicious).\n         * <p>\n         * To allow the Voice Assistant to help users with contacts disambiguation, the messaging\n         * app may choose to integrate with the Contacts Provider. You will need to specify a new\n         * MIME type in order to store your app’s unique contact IDs and optional human readable\n         * labels in the Data table. The Voice Assistant needs to know this MIME type and {@link\n         * RawContacts#ACCOUNT_TYPE} that you are using in order to provide the smooth contact\n         * disambiguation user experience. The following convention should be met when performing\n         * such integration:\n         * <ul>\n         * <li>This activity should have a string meta-data field associated with it, {@link\n         * #METADATA_ACCOUNT_TYPE}, which defines {@link RawContacts#ACCOUNT_TYPE} for your Contacts\n         * Provider implementation. The account type should be globally unique, for example you can\n         * use your app package name as the account type.</li>\n         * <li>This activity should have a string meta-data field associated with it, {@link\n         * #METADATA_MIMETYPE}, which defines {@link DataColumns#MIMETYPE} for your Contacts\n         * Provider implementation. For example, you can use\n         * \"vnd.android.cursor.item/vnd.{$app_package_name}.profile\" as MIME type.</li>\n         * <li>When filling Data table row for METADATA_MIMETYPE, column {@link DataColumns#DATA1}\n         * should store the unique contact ID as understood by the app. This value will be used in\n         * the {@link #EXTRA_RECIPIENT_CONTACT_CHAT_ID}.</li>\n         * <li>Optionally, when filling Data table row for METADATA_MIMETYPE, column {@link\n         * DataColumns#DATA3} could store a human readable label for the ID. For example it could be\n         * phone number or human readable username/user_id like \"a_super_cool_user_name\". This label\n         * may be shown below the Contact Name by the Voice Assistant as the user completes the\n         * voice action. If DATA3 is empty, the ID in DATA1 may be shown instead.</li>\n         * <li><em>Note: Do not use DATA3 to store the Contact Name. The Voice Assistant will\n         * already get the Contact Name from the RawContact’s display_name.</em></li>\n         * <li><em>Note: Some apps may choose to use phone number as the unique contact ID in DATA1.\n         * If this applies to you and you’d like phone number to be shown below the Contact Name by\n         * the Voice Assistant, then you may choose to leave DATA3 empty.</em></li>\n         * <li><em>Note: If your app also uses DATA3 to display contact details in the Contacts App,\n         * make sure it does not include prefix text such as \"Message +<phone>\" or \"Free Message\n         * +<phone>\", etc. If you must show the prefix text in the Contacts App, please use a\n         * different DATA# column, and update your contacts.xml to point to this new column. </em>\n         * </li>\n         * </ul>\n         * If the app chooses not to integrate with the Contacts Provider (in particular, when\n         * either METADATA_ACCOUNT_TYPE or METADATA_MIMETYPE field is missing), Voice Assistant\n         * will use existing phone number entries as contact ID's for such app.\n         * <p>\n         * Input: {@link android.content.Intent#getType} is the MIME type of the data being sent.\n         * The intent sender will always put the concrete mime type in the intent type, like\n         * \"text/plain\" or \"audio/wav\" for example. If the MIME type is \"text/plain\", message to\n         * sent will be provided via {@link android.content.Intent#EXTRA_TEXT} as a styled\n         * CharSequence. Otherwise, the message content will be supplied through {@link\n         * android.content.Intent#setClipData(ClipData)} as a content provider URI(s). In the latter\n         * case, EXTRA_TEXT could still be supplied optionally; for example, for audio messages\n         * ClipData will contain URI of a recording and EXTRA_TEXT could contain the text\n         * transcription of this recording.\n         * <p>\n         * The message can have n recipients. The n-th recipient of the message will be provided as\n         * n-th elements of {@link #EXTRA_RECIPIENT_CONTACT_URI}, {@link\n         * #EXTRA_RECIPIENT_CONTACT_CHAT_ID} and {@link #EXTRA_RECIPIENT_CONTACT_NAME} (as a\n         * consequence, EXTRA_RECIPIENT_CONTACT_URI, EXTRA_RECIPIENT_CONTACT_CHAT_ID and\n         * EXTRA_RECIPIENT_CONTACT_NAME should all be of length n). If neither of these 3 elements\n         * is provided (e.g. all 3 are null) for the recipient or if the information provided is\n         * ambiguous then the activity should prompt the user for the recipient to send the message\n         * to.\n         * <p>\n         * Output: nothing\n         *\n         * @see #EXTRA_RECIPIENT_CONTACT_URI\n         * @see #EXTRA_RECIPIENT_CONTACT_CHAT_ID\n         * @see #EXTRA_RECIPIENT_CONTACT_NAME\n         * @see #METADATA_ACCOUNT_TYPE\n         * @see #METADATA_MIMETYPE\n         ",
    "links" : [ "android.content.Intent#EXTRA_TEXT", "#MIMETYPE", "android.app.Activity#isVoiceInteractionRoot", "android.service.voice.VoiceInteractionSession#startVoiceActivity", "#EXTRA_RECIPIENT_CONTACT_CHAT_ID", "android.content.Intent#setClipData(ClipData)", "android.content.Intent#CATEGORY_DEFAULT", "#DATA3", "#DATA1", "android.content.Intent#getType", "android.content.Intent#CATEGORY_VOICE", "#ACCOUNT_TYPE", "#METADATA_MIMETYPE", "#METADATA_ACCOUNT_TYPE", "#EXTRA_RECIPIENT_CONTACT_NAME", "#EXTRA_RECIPIENT_CONTACT_URI" ]
  }, {
    "name" : "EXTRA_RECIPIENT_CONTACT_URI",
    "type" : "String",
    "comment" : "\n         * This extra specifies a content provider uri(s) for the contact(s) (if the contacts were\n         * located in the Contacts Provider), used with {@link\n         * #ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS} to supply the recipient(s). The value of this\n         * extra is a {@code String[]}. The number of elements in the array should be equal to\n         * number of recipients (and consistent with {@link #EXTRA_RECIPIENT_CONTACT_CHAT_ID} and\n         * {@link #EXTRA_RECIPIENT_CONTACT_NAME}). When the value of the element for the particular\n         * recipient is absent, it will be set to null.\n         * <p>\n         * <em>Note: one contact may have multiple accounts (e.g. Chat IDs) on a specific messaging\n         * platform, so this may be ambiguous. E.g., one contact “John Smith” could have two\n         * accounts on the same messaging app.</em>\n         * <p>\n         * <em>Example value: {\"content://com.android.contacts/contacts/16\"}</em>\n         ",
    "links" : [ "#EXTRA_RECIPIENT_CONTACT_NAME", "#ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS", "#EXTRA_RECIPIENT_CONTACT_CHAT_ID" ]
  }, {
    "name" : "EXTRA_RECIPIENT_CONTACT_CHAT_ID",
    "type" : "String",
    "comment" : "\n         * This extra specifies a messaging app’s unique ID(s) for the contact(s), used with {@link\n         * #ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS} to supply the recipient(s). The value of this\n         * extra is a {@code String[]}. The number of elements in the array should be equal to\n         * number of recipients (and consistent with {@link #EXTRA_RECIPIENT_CONTACT_URI} and {@link\n         * #EXTRA_RECIPIENT_CONTACT_NAME}). When the value of the element for the particular\n         * recipient is absent, it will be set to null.\n         * <p>\n         * The value of the elements comes from the {@link DataColumns#DATA1} column in Contacts\n         * Provider with {@link DataColumns#MIMETYPE} from {@link #METADATA_MIMETYPE} (if both\n         * {@link #METADATA_ACCOUNT_TYPE} and {@link #METADATA_MIMETYPE} are specified by the app;\n         * otherwise, the value will be a phone number), and should be the unambiguous contact\n         * endpoint. This value is app-specific, it could be some proprietary ID or a phone number.\n         ",
    "links" : [ "#DATA1", "#MIMETYPE", "#METADATA_MIMETYPE", "#EXTRA_RECIPIENT_CONTACT_NAME", "#METADATA_ACCOUNT_TYPE", "#ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS", "#EXTRA_RECIPIENT_CONTACT_URI" ]
  }, {
    "name" : "EXTRA_RECIPIENT_CONTACT_NAME",
    "type" : "String",
    "comment" : "\n         * This extra specifies the contact name (full name from the Contacts Provider), used with\n         * {@link #ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS} to supply the recipient. The value of this\n         * extra is a {@code String[]}. The number of elements in the array should be equal to\n         * number of recipients (and consistent with {@link #EXTRA_RECIPIENT_CONTACT_URI} and {@link\n         * #EXTRA_RECIPIENT_CONTACT_CHAT_ID}). When the value of the element for the particular\n         * recipient is absent, it will be set to null.\n         * <p>\n         * The value of the elements comes from RawContact's display_name column.\n         * <p>\n         * <em>Example value: {\"Jane Doe\"}</em>\n         ",
    "links" : [ "#ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS", "#EXTRA_RECIPIENT_CONTACT_URI", "#EXTRA_RECIPIENT_CONTACT_CHAT_ID" ]
  }, {
    "name" : "METADATA_ACCOUNT_TYPE",
    "type" : "String",
    "comment" : "\n         * A string associated with an {@link #ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS} activity\n         * describing {@link RawContacts#ACCOUNT_TYPE} for the corresponding Contacts Provider\n         * implementation.\n         ",
    "links" : [ "#ACCOUNT_TYPE", "#ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS" ]
  }, {
    "name" : "METADATA_MIMETYPE",
    "type" : "String",
    "comment" : "\n         * A string associated with an {@link #ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS} activity\n         * describing {@link DataColumns#MIMETYPE} for the corresponding Contacts Provider\n         * implementation.\n         ",
    "links" : [ "#MIMETYPE", "#ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS" ]
  }, {
    "name" : "ACTION_GET_MULTIPLE_PHONES",
    "type" : "String",
    "comment" : "\n         * Starts an Activity that lets the user select the multiple phones from a\n         * list of phone numbers which come from the contacts or\n         * {@link #EXTRA_PHONE_URIS}.\n         * <p>\n         * The phone numbers being passed in through {@link #EXTRA_PHONE_URIS}\n         * could belong to the contacts or not, and will be selected by default.\n         * <p>\n         * The user's selection will be returned from\n         * {@link android.app.Activity#onActivityResult(int, int, android.content.Intent)}\n         * if the resultCode is\n         * {@link android.app.Activity#RESULT_OK}, the array of picked phone\n         * numbers are in the Intent's\n         * {@link #EXTRA_PHONE_URIS}; otherwise, the\n         * {@link android.app.Activity#RESULT_CANCELED} is returned if the user\n         * left the Activity without changing the selection.\n         *\n         * @hide\n         ",
    "links" : [ "android.app.Activity#RESULT_CANCELED", "android.app.Activity#RESULT_OK", "android.app.Activity#onActivityResult(int", "#EXTRA_PHONE_URIS" ]
  }, {
    "name" : "ACTION_PROFILE_CHANGED",
    "type" : "String",
    "comment" : "\n         * A broadcast action which is sent when any change has been made to the profile, such\n         * as the profile name or the picture.  A receiver must have\n         * the android.permission.READ_PROFILE permission.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_FORCE_CREATE",
    "type" : "String",
    "comment" : "\n         * Used with {@link #SHOW_OR_CREATE_CONTACT} to force creating a new\n         * contact if no matching contact found. Otherwise, default behavior is\n         * to prompt user with dialog before creating.\n         * <p>\n         * Type: BOOLEAN\n         ",
    "links" : [ "#SHOW_OR_CREATE_CONTACT" ]
  }, {
    "name" : "EXTRA_CREATE_DESCRIPTION",
    "type" : "String",
    "comment" : "\n         * Used with {@link #SHOW_OR_CREATE_CONTACT} to specify an exact\n         * description to be shown when prompting user about creating a new\n         * contact.\n         * <p>\n         * Type: STRING\n         ",
    "links" : [ "#SHOW_OR_CREATE_CONTACT" ]
  }, {
    "name" : "EXTRA_PHONE_URIS",
    "type" : "String",
    "comment" : "\n         * Used with {@link #ACTION_GET_MULTIPLE_PHONES} as the input or output value.\n         * <p>\n         * The phone numbers want to be picked by default should be passed in as\n         * input value. These phone numbers could belong to the contacts or not.\n         * <p>\n         * The phone numbers which were picked by the user are returned as output\n         * value.\n         * <p>\n         * Type: array of URIs, the tel URI is used for the phone numbers which don't\n         * belong to any contact, the content URI is used for phone id in contacts.\n         *\n         * @hide\n         ",
    "links" : [ "#ACTION_GET_MULTIPLE_PHONES" ]
  }, {
    "name" : "EXTRA_TARGET_RECT",
    "type" : "String",
    "comment" : "\n         * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to specify a\n         * dialog location using screen coordinates. When not specified, the\n         * dialog will be centered.\n         *\n         * @hide\n         ",
    "links" : [ "#SHOW_OR_CREATE_CONTACT" ]
  }, {
    "name" : "EXTRA_MODE",
    "type" : "String",
    "comment" : "\n         * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to specify a\n         * desired dialog style, usually a variation on size. One of\n         * {@link #MODE_SMALL}, {@link #MODE_MEDIUM}, or {@link #MODE_LARGE}.\n         *\n         * @hide\n         ",
    "links" : [ "#SHOW_OR_CREATE_CONTACT", "#MODE_MEDIUM", "#MODE_LARGE", "#MODE_SMALL" ]
  }, {
    "name" : "MODE_SMALL",
    "type" : "int",
    "comment" : "\n         * Value for {@link #EXTRA_MODE} to show a small-sized dialog.\n         *\n         * @hide\n         ",
    "links" : [ "#EXTRA_MODE" ]
  }, {
    "name" : "MODE_MEDIUM",
    "type" : "int",
    "comment" : "\n         * Value for {@link #EXTRA_MODE} to show a medium-sized dialog.\n         *\n         * @hide\n         ",
    "links" : [ "#EXTRA_MODE" ]
  }, {
    "name" : "MODE_LARGE",
    "type" : "int",
    "comment" : "\n         * Value for {@link #EXTRA_MODE} to show a large-sized dialog.\n         *\n         * @hide\n         ",
    "links" : [ "#EXTRA_MODE" ]
  }, {
    "name" : "EXTRA_EXCLUDE_MIMES",
    "type" : "String",
    "comment" : "\n         * Optional extra used with {@link #SHOW_OR_CREATE_CONTACT} to indicate\n         * a list of specific MIME-types to exclude and not display. Stored as a\n         * {@link String} array.\n         *\n         * @hide\n         ",
    "links" : [ "#SHOW_OR_CREATE_CONTACT", "String" ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "SEARCH_SUGGESTION_CLICKED", "SEARCH_SUGGESTION_DIAL_NUMBER_CLICKED", "SEARCH_SUGGESTION_CREATE_CONTACT_CLICKED", "CONTACTS_DATABASE_CREATED", "ATTACH_IMAGE", "INVITE_CONTACT", "SHOW_OR_CREATE_CONTACT", "ACTION_VOICE_SEND_MESSAGE_TO_CONTACTS", "EXTRA_RECIPIENT_CONTACT_URI", "EXTRA_RECIPIENT_CONTACT_CHAT_ID", "EXTRA_RECIPIENT_CONTACT_NAME", "METADATA_ACCOUNT_TYPE", "METADATA_MIMETYPE", "ACTION_GET_MULTIPLE_PHONES", "ACTION_PROFILE_CHANGED", "EXTRA_FORCE_CREATE", "EXTRA_CREATE_DESCRIPTION", "EXTRA_PHONE_URIS", "EXTRA_TARGET_RECT", "EXTRA_MODE", "MODE_SMALL", "MODE_MEDIUM", "MODE_LARGE", "EXTRA_EXCLUDE_MIMES" ]
}