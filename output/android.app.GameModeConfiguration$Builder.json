{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/GameModeConfiguration.java",
  "packageName" : "android.app",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link GameModeConfiguration}.\n     *\n     * @hide\n     ",
  "links" : [ "android.app.GameModeConfiguration" ],
  "variables" : [ {
    "name" : "mScalingFactor",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFpsOverride",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public GameModeConfiguration.Builder setScalingFactor(@FloatRange(from = 0.1, to = 1.0) float scalingFactor)",
    "returnType" : "GameModeConfiguration.Builder",
    "comment" : "\n         * Sets the scaling factor used for game resolution downscaling.\n         * <br>\n         *\n         * @param scalingFactor the desired scaling factor ranged from 0.1 to 1.0 inclusively\n         * @throws IllegalArgumentException if the scaling factor is not in range of [0.1, 1.0]\n         ",
    "links" : [ ]
  }, {
    "name" : "public GameModeConfiguration.Builder setFpsOverride(@IntRange(from = 0) int fpsOverride)",
    "returnType" : "GameModeConfiguration.Builder",
    "comment" : "\n         * Sets the FPS override used for game frame rate throttling.\n         * <br>\n         * The list of valid throttled frame rates can be queried by\n         * <ol>\n         * <li>Obtain display modes by calling {@link Display#getSupportedModes}\n         * <li>For each mode, get valid FPS by getting the divisor of the\n         * {@link Display.Mode#getRefreshRate()} that is >= 30,\n         * e.g. when Display.Mode#getRefreshRate() is 120 Hz, the valid FPS\n         * of this mode is 120, 60, 40, 30\n         * <li>Aggregate the valid FPS of each mode to get the full list\n         * </ol>\n         * <br>\n         *\n         * @param fpsOverride the desired non-negative FPS override value, default to\n         *                    {@link #FPS_OVERRIDE_NONE}.\n         * @throws IllegalArgumentException if the provided value is negative\n         ",
    "links" : [ "android.view.Display#getSupportedModes", "Display.Mode#getRefreshRate()", "#FPS_OVERRIDE_NONE" ]
  }, {
    "name" : "public GameModeConfiguration build()",
    "returnType" : "GameModeConfiguration",
    "comment" : "\n         * Builds a GameModeConfiguration.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public GameModeConfiguration.Builder setScalingFactor(@FloatRange(from = 0.1, to = 1.0) float scalingFactor)", "public GameModeConfiguration.Builder setFpsOverride(@IntRange(from = 0) int fpsOverride)", "public GameModeConfiguration build()" ],
  "variableNames" : [ "mScalingFactor", "mFpsOverride" ]
}