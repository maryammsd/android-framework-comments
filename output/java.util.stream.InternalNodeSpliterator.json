{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/Nodes.java",
  "packageName" : "java.util.stream",
  "className" : "InternalNodeSpliterator",
  "comment" : " Abstract class for spliterator for all internal node classes ",
  "links" : [ ],
  "variables" : [ {
    "name" : "curNode",
    "type" : "N",
    "comment" : " null if full traversal has occurred",
    "links" : [ ]
  }, {
    "name" : "curChildIndex",
    "type" : "int",
    "comment" : " next child of curNode to consume",
    "links" : [ ]
  }, {
    "name" : "lastNodeSpliterator",
    "type" : "S",
    "comment" : " null if curNode has children",
    "links" : [ ]
  }, {
    "name" : "tryAdvanceSpliterator",
    "type" : "S",
    "comment" : " null if no partial traversal has occurred",
    "links" : [ ]
  }, {
    "name" : "tryAdvanceStack",
    "type" : "Deque<N>",
    "comment" : " null if no partial traversal has occurred",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected final Deque<N> initStack()",
    "returnType" : "Deque<N>",
    "comment" : "\n         * Initiate a stack containing, in left-to-right order, the child nodes\n         * covered by this spliterator\n         ",
    "links" : [ ]
  }, {
    "name" : "protected final N findNextLeafNode(Deque<N> stack)",
    "returnType" : "N",
    "comment" : "\n         * Depth first search, in left-to-right order, of the node tree, using\n         * an explicit stack, to find the next non-empty leaf node.\n         ",
    "links" : [ ]
  }, {
    "name" : "protected final boolean initTryAdvance()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final S trySplit()",
    "returnType" : "S",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long estimateSize()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int characteristics()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected final Deque<N> initStack()", "protected final N findNextLeafNode(Deque<N> stack)", "protected final boolean initTryAdvance()", "public final S trySplit()", "public final long estimateSize()", "public final int characteristics()" ],
  "variableNames" : [ "curNode", "curChildIndex", "lastNodeSpliterator", "tryAdvanceSpliterator", "tryAdvanceStack" ]
}