{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/http/params/HttpParams.java",
  "packageName" : "org.apache.http.params",
  "className" : "HttpParams",
  "comment" : "\n * Represents a collection of HTTP protocol and framework parameters.\n *   \n * @author <a href=\"mailto:oleg at ural.ru\">Oleg Kalnichevski</a>\n * \n * @version $Revision: 610763 $\n *\n * @since 4.0\n *\n * @deprecated Please use {@link java.net.URL#openConnection} instead.\n *     Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>\n *     for further details.\n ",
  "links" : [ "java.net.URL#openConnection" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " Object getParameter(String name)",
    "returnType" : "Object",
    "comment" : " \n     * Obtains the value of the given parameter.\n     * \n     * @param name the parent name.\n     * \n     * @return  an object that represents the value of the parameter,\n     *          <code>null</code> if the parameter is not set or if it\n     *          is explicitly set to <code>null</code>\n     * \n     * @see #setParameter(String, Object)\n     ",
    "links" : [ ]
  }, {
    "name" : " HttpParams setParameter(String name, Object value)",
    "returnType" : "HttpParams",
    "comment" : "\n     * Assigns the value to the parameter with the given name.\n     *\n     * @param name parameter name\n     * @param value parameter value\n     ",
    "links" : [ ]
  }, {
    "name" : " HttpParams copy()",
    "returnType" : "HttpParams",
    "comment" : "\n     * Creates a copy of these parameters.\n     *\n     * @return  a new set of parameters holding the same values as this one\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean removeParameter(String name)",
    "returnType" : "boolean",
    "comment" : "\n     * Removes the parameter with the specified name.\n     * \n     * @param name parameter name\n     * \n     * @return true if the parameter existed and has been removed, false else.\n     ",
    "links" : [ ]
  }, {
    "name" : " long getLongParameter(String name, long defaultValue)",
    "returnType" : "long",
    "comment" : " \n     * Returns a {@link Long} parameter value with the given name. \n     * If the parameter is not explicitly set, the default value is returned.  \n     * \n     * @param name the parent name.\n     * @param defaultValue the default value.\n     * \n     * @return a {@link Long} that represents the value of the parameter.\n     * \n     * @see #setLongParameter(String, long)\n     ",
    "links" : [ "Long" ]
  }, {
    "name" : " HttpParams setLongParameter(String name, long value)",
    "returnType" : "HttpParams",
    "comment" : "\n     * Assigns a {@link Long} to the parameter with the given name\n     * \n     * @param name parameter name\n     * @param value parameter value\n     ",
    "links" : [ "Long" ]
  }, {
    "name" : " int getIntParameter(String name, int defaultValue)",
    "returnType" : "int",
    "comment" : " \n     * Returns an {@link Integer} parameter value with the given name. \n     * If the parameter is not explicitly set, the default value is returned.  \n     * \n     * @param name the parent name.\n     * @param defaultValue the default value.\n     * \n     * @return a {@link Integer} that represents the value of the parameter.\n     * \n     * @see #setIntParameter(String, int)\n     ",
    "links" : [ "Integer" ]
  }, {
    "name" : " HttpParams setIntParameter(String name, int value)",
    "returnType" : "HttpParams",
    "comment" : "\n     * Assigns an {@link Integer} to the parameter with the given name\n     * \n     * @param name parameter name\n     * @param value parameter value\n     ",
    "links" : [ "Integer" ]
  }, {
    "name" : " double getDoubleParameter(String name, double defaultValue)",
    "returnType" : "double",
    "comment" : " \n     * Returns a {@link Double} parameter value with the given name. \n     * If the parameter is not explicitly set, the default value is returned.  \n     *\n     * @param name the parent name.\n     * @param defaultValue the default value.\n     * \n     * @return a {@link Double} that represents the value of the parameter.\n     * \n     * @see #setDoubleParameter(String, double)\n     ",
    "links" : [ "Double" ]
  }, {
    "name" : " HttpParams setDoubleParameter(String name, double value)",
    "returnType" : "HttpParams",
    "comment" : "\n     * Assigns a {@link Double} to the parameter with the given name\n     * \n     * @param name parameter name\n     * @param value parameter value\n     ",
    "links" : [ "Double" ]
  }, {
    "name" : " boolean getBooleanParameter(String name, boolean defaultValue)",
    "returnType" : "boolean",
    "comment" : " \n     * Returns a {@link Boolean} parameter value with the given name. \n     * If the parameter is not explicitly set, the default value is returned.  \n     * \n     * @param name the parent name.\n     * @param defaultValue the default value.\n     * \n     * @return a {@link Boolean} that represents the value of the parameter.\n     * \n     * @see #setBooleanParameter(String, boolean)\n     ",
    "links" : [ "Boolean" ]
  }, {
    "name" : " HttpParams setBooleanParameter(String name, boolean value)",
    "returnType" : "HttpParams",
    "comment" : "\n     * Assigns a {@link Boolean} to the parameter with the given name\n     * \n     * @param name parameter name\n     * @param value parameter value\n     ",
    "links" : [ "Boolean" ]
  }, {
    "name" : " boolean isParameterTrue(String name)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if a boolean parameter is set to <code>true</code>.\n     * \n     * @param name parameter name\n     * \n     * @return <tt>true</tt> if the parameter is set to value <tt>true</tt>,\n     *         <tt>false</tt> if it is not set or set to <code>false</code>\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean isParameterFalse(String name)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if a boolean parameter is not set or <code>false</code>.\n     * \n     * @param name parameter name\n     * \n     * @return <tt>true</tt> if the parameter is either not set or\n     *         set to value <tt>false</tt>,\n     *         <tt>false</tt> if it is set to <code>true</code>\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " Object getParameter(String name)", " HttpParams setParameter(String name, Object value)", " HttpParams copy()", " boolean removeParameter(String name)", " long getLongParameter(String name, long defaultValue)", " HttpParams setLongParameter(String name, long value)", " int getIntParameter(String name, int defaultValue)", " HttpParams setIntParameter(String name, int value)", " double getDoubleParameter(String name, double defaultValue)", " HttpParams setDoubleParameter(String name, double value)", " boolean getBooleanParameter(String name, boolean defaultValue)", " HttpParams setBooleanParameter(String name, boolean value)", " boolean isParameterTrue(String name)", " boolean isParameterFalse(String name)" ],
  "variableNames" : [ ]
}