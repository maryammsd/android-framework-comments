{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/SmsCbLocation.java",
  "packageName" : "android.telephony",
  "className" : "SmsCbLocation",
  "comment" : "\n * Represents the location and geographical scope of a cell broadcast message.\n * For GSM/UMTS, the Location Area and Cell ID are set when the broadcast\n * geographical scope is cell wide or Location Area wide. For CDMA, the\n * broadcast geographical scope is always PLMN wide.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mPlmn",
    "type" : "String",
    "comment" : " The PLMN. Note that this field may be an empty string. ",
    "links" : [ ]
  }, {
    "name" : "mLac",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SmsCbLocation>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getPlmn()",
    "returnType" : "String",
    "comment" : "\n     * Returns the MCC/MNC of the network as a String.\n     * @return the PLMN identifier (MCC+MNC) as a String\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLac()",
    "returnType" : "int",
    "comment" : "\n     * Returns the GSM location area code, or UMTS service area code.\n     * @return location area code, -1 if unknown, 0xffff max legal value\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCid()",
    "returnType" : "int",
    "comment" : "\n     * Returns the GSM or UMTS cell ID.\n     * @return gsm cell id, -1 if unknown, 0xffff max legal value\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isInLocationArea(@NonNull SmsCbLocation area)",
    "returnType" : "boolean",
    "comment" : "\n     * Test whether this location is within the location area of the specified object.\n     *\n     * @param area the location area to compare with this location\n     * @return true if this location is contained within the specified location area\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isInLocationArea(@Nullable String plmn, int lac, int cid)",
    "returnType" : "boolean",
    "comment" : "\n     * Test whether this location is within the location area of the CellLocation.\n     *\n     * @param plmn the PLMN to use for comparison\n     * @param lac the Location Area (GSM) or Service Area (UMTS) to compare with\n     * @param cid the Cell ID to compare with\n     * @return true if this location is contained within the specified PLMN, LAC, and Cell ID\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Flatten this object into a Parcel.\n     *\n     * @param dest  The Parcel in which the object should be written.\n     * @param flags Additional flags about how the object should be written (ignored).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * Describe the kinds of special objects contained in the marshalled representation.\n     * @return a bitmask indicating this Parcelable contains no special objects\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mPlmn", "mLac", "mCid", "CREATOR" ],
  "methodNames" : [ "public String getPlmn()", "public int getLac()", "public int getCid()", "public int hashCode()", "public boolean equals(Object o)", "public String toString()", "public boolean isInLocationArea(@NonNull SmsCbLocation area)", "public boolean isInLocationArea(@Nullable String plmn, int lac, int cid)", "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()" ]
}