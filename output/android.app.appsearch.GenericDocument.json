{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/GenericDocument.java",
  "packageName" : "android.app.appsearch",
  "className" : "GenericDocument",
  "comment" : "\n * Represents a document unit.\n *\n * <p>Documents contain structured data conforming to their {@link AppSearchSchema} type. Each\n * document is uniquely identified by a namespace and a String ID within that namespace.\n *\n * <p>Documents are constructed by using the {@link GenericDocument.Builder}.\n *\n * @see AppSearchSession#put\n * @see AppSearchSession#getByDocumentId\n * @see AppSearchSession#search\n ",
  "links" : [ "android.app.appsearch.AppSearchSchema", "GenericDocument.Builder" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_INDEXED_PROPERTIES",
    "type" : "int",
    "comment" : " The maximum number of indexed properties a document can have. ",
    "links" : [ ]
  }, {
    "name" : "PARENT_TYPES_SYNTHETIC_PROPERTY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "EMPTY",
    "type" : "GenericDocument",
    "comment" : "\n     * An immutable empty {@link GenericDocument}.\n     *\n     * @hide\n     ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "mDocumentParcel",
    "type" : "GenericDocumentParcel",
    "comment" : " The class to hold all meta data and properties for this {@link GenericDocument}. ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  } ],
  "methods" : [ {
    "name" : "public static int getMaxIndexedProperties()",
    "returnType" : "int",
    "comment" : "\n     * The maximum number of indexed properties a document can have.\n     *\n     * <p>Indexed properties are properties which are strings where the {@link\n     * AppSearchSchema.StringPropertyConfig#getIndexingType} value is anything other than {@link\n     * AppSearchSchema.StringPropertyConfig#INDEXING_TYPE_NONE}, as well as long properties where\n     * the {@link AppSearchSchema.LongPropertyConfig#getIndexingType} value is {@link\n     * AppSearchSchema.LongPropertyConfig#INDEXING_TYPE_RANGE}.\n     ",
    "links" : [ "AppSearchSchema.LongPropertyConfig#getIndexingType", "AppSearchSchema.StringPropertyConfig#INDEXING_TYPE_NONE", "AppSearchSchema.StringPropertyConfig#getIndexingType", "AppSearchSchema.LongPropertyConfig#INDEXING_TYPE_RANGE" ]
  }, {
    "name" : "public GenericDocumentParcel getDocumentParcel()",
    "returnType" : "GenericDocumentParcel",
    "comment" : "\n     * Returns the {@link GenericDocumentParcel} holding the values for this {@link\n     * GenericDocument}.\n     *\n     * @hide\n     ",
    "links" : [ "android.app.appsearch.safeparcel.GenericDocumentParcel", "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public String getId()",
    "returnType" : "String",
    "comment" : " Returns the unique identifier of the {@link GenericDocument}. ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public String getNamespace()",
    "returnType" : "String",
    "comment" : " Returns the namespace of the {@link GenericDocument}. ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public String getSchemaType()",
    "returnType" : "String",
    "comment" : " Returns the {@link AppSearchSchema} type of the {@link GenericDocument}. ",
    "links" : [ "android.app.appsearch.AppSearchSchema", "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public List<String> getParentTypes()",
    "returnType" : "List<String>",
    "comment" : "\n     * Returns the list of parent types of the {@link GenericDocument}'s type.\n     *\n     * <p>It is guaranteed that child types appear before parent types in the list.\n     *\n     * @hide\n     ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public long getCreationTimestampMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the creation timestamp of the {@link GenericDocument}, in milliseconds.\n     *\n     * <p>The value is in the {@link System#currentTimeMillis} time base.\n     ",
    "links" : [ "#currentTimeMillis", "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public long getTtlMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the TTL (time-to-live) of the {@link GenericDocument}, in milliseconds.\n     *\n     * <p>The TTL is measured against {@link #getCreationTimestampMillis}. At the timestamp of\n     * {@code creationTimestampMillis + ttlMillis}, measured in the {@link System#currentTimeMillis}\n     * time base, the document will be auto-deleted.\n     *\n     * <p>The default value is 0, which means the document is permanent and won't be auto-deleted\n     * until the app is uninstalled or {@link AppSearchSession#remove} is called.\n     ",
    "links" : [ "#currentTimeMillis", "#getCreationTimestampMillis", "android.app.appsearch.GenericDocument", "android.app.appsearch.AppSearchSession#remove" ]
  }, {
    "name" : "public int getScore()",
    "returnType" : "int",
    "comment" : "\n     * Returns the score of the {@link GenericDocument}.\n     *\n     * <p>The score is a query-independent measure of the document's quality, relative to other\n     * {@link GenericDocument} objects of the same {@link AppSearchSchema} type.\n     *\n     * <p>Results may be sorted by score using {@link SearchSpec.Builder#setRankingStrategy}.\n     * Documents with higher scores are considered better than documents with lower scores.\n     *\n     * <p>Any non-negative integer can be used a score.\n     ",
    "links" : [ "android.app.appsearch.AppSearchSchema", "SearchSpec.Builder#setRankingStrategy", "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public Set<String> getPropertyNames()",
    "returnType" : "Set<String>",
    "comment" : " Returns the names of all properties defined in this document. ",
    "links" : [ ]
  }, {
    "name" : "public Object getProperty(@NonNull String path)",
    "returnType" : "Object",
    "comment" : "\n     * Retrieves the property value with the given path as {@link Object}.\n     *\n     * <p>A path can be a simple property name, such as those returned by {@link #getPropertyNames}.\n     * It may also be a dot-delimited path through the nested document hierarchy, with nested {@link\n     * GenericDocument} properties accessed via {@code '.'} and repeated properties optionally\n     * indexed into via {@code [n]}.\n     *\n     * <p>For example, given the following {@link GenericDocument}:\n     *\n     * <pre>\n     *     (Message) {\n     *         from: \"sender@example.com\"\n     *         to: [{\n     *             name: \"Albert Einstein\"\n     *             email: \"einstein@example.com\"\n     *           }, {\n     *             name: \"Marie Curie\"\n     *             email: \"curie@example.com\"\n     *           }]\n     *         tags: [\"important\", \"inbox\"]\n     *         subject: \"Hello\"\n     *     }\n     * </pre>\n     *\n     * <p>Here are some example paths and their results:\n     *\n     * <ul>\n     *   <li>{@code \"from\"} returns {@code \"sender@example.com\"} as a {@link String} array with one\n     *       element\n     *   <li>{@code \"to\"} returns the two nested documents containing contact information as a\n     *       {@link GenericDocument} array with two elements\n     *   <li>{@code \"to[1]\"} returns the second nested document containing Marie Curie's contact\n     *       information as a {@link GenericDocument} array with one element\n     *   <li>{@code \"to[1].email\"} returns {@code \"curie@example.com\"}\n     *   <li>{@code \"to[100].email\"} returns {@code null} as this particular document does not have\n     *       that many elements in its {@code \"to\"} array.\n     *   <li>{@code \"to.email\"} aggregates emails across all nested documents that have them,\n     *       returning {@code [\"einstein@example.com\", \"curie@example.com\"]} as a {@link String}\n     *       array with two elements.\n     * </ul>\n     *\n     * <p>If you know the expected type of the property you are retrieving, it is recommended to use\n     * one of the typed versions of this method instead, such as {@link #getPropertyString} or\n     * {@link #getPropertyStringArray}.\n     *\n     * <p>If the property was assigned as an empty array using one of the {@code\n     * Builder#setProperty} functions, this method will return an empty array. If no such property\n     * exists at all, this method returns {@code null}.\n     *\n     * <p>Note: If the property is an empty {@link GenericDocument}[] or {@code byte[][]}, this\n     * method will return a {@code null} value in versions of Android prior to {@link\n     * android.os.Build.VERSION_CODES#TIRAMISU Android T}. Starting in Android T it will return an\n     * empty array if the property has been set as an empty array, matching the behavior of other\n     * property types.\n     *\n     * @param path The path to look for.\n     * @return The entry with the given path as an object or {@code null} if there is no such path.\n     *     The returned object will be one of the following types: {@code String[]}, {@code long[]},\n     *     {@code double[]}, {@code boolean[]}, {@code byte[][]}, {@code GenericDocument[]}.\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#TIRAMISU", "#getPropertyStringArray", "Object", "android.app.appsearch.GenericDocument", "String", "#getPropertyNames", "#getPropertyString" ]
  }, {
    "name" : "private static Object getRawPropertyFromRawDocument(@NonNull PropertyPath path, int pathIndex, @NonNull Map<String, PropertyParcel> propertyMap)",
    "returnType" : "Object",
    "comment" : "\n     * Looks up a property path within the given document bundle.\n     *\n     * <p>The return value may be any of GenericDocument's internal repeated storage types\n     * (String[], long[], double[], boolean[], ArrayList&lt;Bundle&gt;, Parcelable[]).\n     *\n     * <p>Usually, this method takes a path and loops over it to get a property from the bundle. But\n     * in the case where we collect documents across repeated nested documents, we need to recurse\n     * back into this method, and so we also keep track of the index into the path.\n     *\n     * @param path the PropertyPath object representing the path\n     * @param pathIndex the index into the path we start at\n     * @param propertyMap the map containing the path we are looking up\n     * @return the raw property\n     ",
    "links" : [ ]
  }, {
    "name" : "private static Object flattenAccumulator(@NonNull List<Object> accumulator)",
    "returnType" : "Object",
    "comment" : "\n     * Combines accumulated repeated properties from multiple documents into a single array.\n     *\n     * @param accumulator List containing objects of the following types: {@code String[]}, {@code\n     *     long[]}, {@code double[]}, {@code boolean[]}, {@code byte[][]}, or {@code\n     *     GenericDocumentParcelable[]}.\n     * @return The result of concatenating each individual list element into a larger array/list of\n     *     the same type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPropertyString(@NonNull String path)",
    "returnType" : "String",
    "comment" : "\n     * Retrieves a {@link String} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * @param path The path to look for.\n     * @return The first {@link String} associated with the given path or {@code null} if there is\n     *     no such value or the value is of a different type.\n     ",
    "links" : [ "#getProperty", "String" ]
  }, {
    "name" : "public long getPropertyLong(@NonNull String path)",
    "returnType" : "long",
    "comment" : "\n     * Retrieves a {@code long} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * @param path The path to look for.\n     * @return The first {@code long} associated with the given path or default value {@code 0} if\n     *     there is no such value or the value is of a different type.\n     ",
    "links" : [ "#getProperty" ]
  }, {
    "name" : "public double getPropertyDouble(@NonNull String path)",
    "returnType" : "double",
    "comment" : "\n     * Retrieves a {@code double} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * @param path The path to look for.\n     * @return The first {@code double} associated with the given path or default value {@code 0.0}\n     *     if there is no such value or the value is of a different type.\n     ",
    "links" : [ "#getProperty" ]
  }, {
    "name" : "public boolean getPropertyBoolean(@NonNull String path)",
    "returnType" : "boolean",
    "comment" : "\n     * Retrieves a {@code boolean} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * @param path The path to look for.\n     * @return The first {@code boolean} associated with the given path or default value {@code\n     *     false} if there is no such value or the value is of a different type.\n     ",
    "links" : [ "#getProperty" ]
  }, {
    "name" : "public byte[] getPropertyBytes(@NonNull String path)",
    "returnType" : "byte[]",
    "comment" : "\n     * Retrieves a {@code byte[]} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * @param path The path to look for.\n     * @return The first {@code byte[]} associated with the given path or {@code null} if there is\n     *     no such value or the value is of a different type.\n     ",
    "links" : [ "#getProperty" ]
  }, {
    "name" : "public GenericDocument getPropertyDocument(@NonNull String path)",
    "returnType" : "GenericDocument",
    "comment" : "\n     * Retrieves a {@link GenericDocument} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * @param path The path to look for.\n     * @return The first {@link GenericDocument} associated with the given path or {@code null} if\n     *     there is no such value or the value is of a different type.\n     ",
    "links" : [ "#getProperty", "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "private static void warnIfSinglePropertyTooLong(@NonNull String propertyType, @NonNull String path, int propertyLength)",
    "returnType" : "void",
    "comment" : " Prints a warning to logcat if the given propertyLength is greater than 1. ",
    "links" : [ ]
  }, {
    "name" : "public String[] getPropertyStringArray(@NonNull String path)",
    "returnType" : "String[]",
    "comment" : "\n     * Retrieves a repeated {@code String} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * <p>If the property has not been set via {@link Builder#setPropertyString}, this method\n     * returns {@code null}.\n     *\n     * <p>If it has been set via {@link Builder#setPropertyString} to an empty {@code String[]},\n     * this method returns an empty {@code String[]}.\n     *\n     * @param path The path to look for.\n     * @return The {@code String[]} associated with the given path, or {@code null} if no value is\n     *     set or the value is of a different type.\n     ",
    "links" : [ "android.app.appsearch.util.IndentingStringBuilder#setPropertyString", "#getProperty" ]
  }, {
    "name" : "public long[] getPropertyLongArray(@NonNull String path)",
    "returnType" : "long[]",
    "comment" : "\n     * Retrieves a repeated {@code long[]} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * <p>If the property has not been set via {@link Builder#setPropertyLong}, this method returns\n     * {@code null}.\n     *\n     * <p>If it has been set via {@link Builder#setPropertyLong} to an empty {@code long[]}, this\n     * method returns an empty {@code long[]}.\n     *\n     * @param path The path to look for.\n     * @return The {@code long[]} associated with the given path, or {@code null} if no value is set\n     *     or the value is of a different type.\n     ",
    "links" : [ "android.app.appsearch.util.IndentingStringBuilder#setPropertyLong", "#getProperty" ]
  }, {
    "name" : "public double[] getPropertyDoubleArray(@NonNull String path)",
    "returnType" : "double[]",
    "comment" : "\n     * Retrieves a repeated {@code double} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * <p>If the property has not been set via {@link Builder#setPropertyDouble}, this method\n     * returns {@code null}.\n     *\n     * <p>If it has been set via {@link Builder#setPropertyDouble} to an empty {@code double[]},\n     * this method returns an empty {@code double[]}.\n     *\n     * @param path The path to look for.\n     * @return The {@code double[]} associated with the given path, or {@code null} if no value is\n     *     set or the value is of a different type.\n     ",
    "links" : [ "android.app.appsearch.util.IndentingStringBuilder#setPropertyDouble", "#getProperty" ]
  }, {
    "name" : "public boolean[] getPropertyBooleanArray(@NonNull String path)",
    "returnType" : "boolean[]",
    "comment" : "\n     * Retrieves a repeated {@code boolean} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * <p>If the property has not been set via {@link Builder#setPropertyBoolean}, this method\n     * returns {@code null}.\n     *\n     * <p>If it has been set via {@link Builder#setPropertyBoolean} to an empty {@code boolean[]},\n     * this method returns an empty {@code boolean[]}.\n     *\n     * @param path The path to look for.\n     * @return The {@code boolean[]} associated with the given path, or {@code null} if no value is\n     *     set or the value is of a different type.\n     ",
    "links" : [ "#getProperty", "android.app.appsearch.util.IndentingStringBuilder#setPropertyBoolean" ]
  }, {
    "name" : "public byte[][] getPropertyBytesArray(@NonNull String path)",
    "returnType" : "byte[][]",
    "comment" : "\n     * Retrieves a {@code byte[][]} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * <p>If the property has not been set via {@link Builder#setPropertyBytes}, this method returns\n     * {@code null}.\n     *\n     * <p>If it has been set via {@link Builder#setPropertyBytes} to an empty {@code byte[][]}, this\n     * method returns an empty {@code byte[][]} starting in {@link\n     * android.os.Build.VERSION_CODES#TIRAMISU Android T} and {@code null} in earlier versions of\n     * Android.\n     *\n     * @param path The path to look for.\n     * @return The {@code byte[][]} associated with the given path, or {@code null} if no value is\n     *     set or the value is of a different type.\n     ",
    "links" : [ "android.app.appsearch.util.IndentingStringBuilder#setPropertyBytes", "android.os.Build.VERSION_CODES#TIRAMISU", "#getProperty" ]
  }, {
    "name" : "public GenericDocument[] getPropertyDocumentArray(@NonNull String path)",
    "returnType" : "GenericDocument[]",
    "comment" : "\n     * Retrieves a repeated {@link GenericDocument} property by path.\n     *\n     * <p>See {@link #getProperty} for a detailed description of the path syntax.\n     *\n     * <p>If the property has not been set via {@link Builder#setPropertyDocument}, this method\n     * returns {@code null}.\n     *\n     * <p>If it has been set via {@link Builder#setPropertyDocument} to an empty {@code\n     * GenericDocument[]}, this method returns an empty {@code GenericDocument[]} starting in {@link\n     * android.os.Build.VERSION_CODES#TIRAMISU Android T} and {@code null} in earlier versions of\n     * Android.\n     *\n     * @param path The path to look for.\n     * @return The {@link GenericDocument}[] associated with the given path, or {@code null} if no\n     *     value is set or the value is of a different type.\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#TIRAMISU", "android.app.appsearch.util.IndentingStringBuilder#setPropertyDocument", "#getProperty", "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "private static T safeCastProperty(@NonNull String path, @Nullable Object value, @NonNull Class<T> tClass)",
    "returnType" : "T",
    "comment" : "\n     * Casts a repeated property to the provided type, logging an error and returning {@code null}\n     * if the cast fails.\n     *\n     * @param path Path to the property within the document. Used for logging.\n     * @param value Value of the property\n     * @param tClass Class to cast the value into\n     ",
    "links" : [ ]
  }, {
    "name" : "public GenericDocument.Builder<GenericDocument.Builder<?>> toBuilder()",
    "returnType" : "GenericDocument.Builder<GenericDocument.Builder<?>>",
    "comment" : " TODO(b/171882200): Expose this API in Android T",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void appendGenericDocumentString(@NonNull IndentingStringBuilder builder)",
    "returnType" : "void",
    "comment" : "\n     * Appends a debug string for the {@link GenericDocument} instance to the given string builder.\n     *\n     * @param builder the builder to append to.\n     ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "private void appendPropertyString(@NonNull String propertyName, @NonNull Object property, @NonNull IndentingStringBuilder builder)",
    "returnType" : "void",
    "comment" : "\n     * Appends a debug string for the given document property to the given string builder.\n     *\n     * @param propertyName name of property to create string for.\n     * @param property property object to create string for.\n     * @param builder the builder to append to.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int getMaxIndexedProperties()", "public GenericDocumentParcel getDocumentParcel()", "public String getId()", "public String getNamespace()", "public String getSchemaType()", "public List<String> getParentTypes()", "public long getCreationTimestampMillis()", "public long getTtlMillis()", "public int getScore()", "public Set<String> getPropertyNames()", "public Object getProperty(@NonNull String path)", "private static Object getRawPropertyFromRawDocument(@NonNull PropertyPath path, int pathIndex, @NonNull Map<String, PropertyParcel> propertyMap)", "private static Object flattenAccumulator(@NonNull List<Object> accumulator)", "public String getPropertyString(@NonNull String path)", "public long getPropertyLong(@NonNull String path)", "public double getPropertyDouble(@NonNull String path)", "public boolean getPropertyBoolean(@NonNull String path)", "public byte[] getPropertyBytes(@NonNull String path)", "public GenericDocument getPropertyDocument(@NonNull String path)", "private static void warnIfSinglePropertyTooLong(@NonNull String propertyType, @NonNull String path, int propertyLength)", "public String[] getPropertyStringArray(@NonNull String path)", "public long[] getPropertyLongArray(@NonNull String path)", "public double[] getPropertyDoubleArray(@NonNull String path)", "public boolean[] getPropertyBooleanArray(@NonNull String path)", "public byte[][] getPropertyBytesArray(@NonNull String path)", "public GenericDocument[] getPropertyDocumentArray(@NonNull String path)", "private static T safeCastProperty(@NonNull String path, @Nullable Object value, @NonNull Class<T> tClass)", "public GenericDocument.Builder<GenericDocument.Builder<?>> toBuilder()", "public boolean equals(@Nullable Object other)", "public int hashCode()", "public String toString()", " void appendGenericDocumentString(@NonNull IndentingStringBuilder builder)", "private void appendPropertyString(@NonNull String propertyName, @NonNull Object property, @NonNull IndentingStringBuilder builder)" ],
  "variableNames" : [ "TAG", "MAX_INDEXED_PROPERTIES", "PARENT_TYPES_SYNTHETIC_PROPERTY", "EMPTY", "mDocumentParcel" ]
}