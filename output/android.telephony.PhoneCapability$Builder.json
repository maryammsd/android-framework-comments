{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/PhoneCapability.java",
  "packageName" : "android.telephony",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link PhoneCapability}.\n     *\n     * @hide\n     ",
  "links" : [ "android.telephony.PhoneCapability" ],
  "variables" : [ {
    "name" : "mMaxActiveVoiceSubscriptions",
    "type" : "int",
    "comment" : "\n         * mMaxActiveVoiceSubscriptions defines the maximum subscriptions that can support\n         * simultaneous voice calls. For a dual sim dual standby (DSDS) device it would be one, but\n         * for a dual sim dual active (DSDA) device, or a DSDS device that supports \"virtual DSDA\"\n         * (using the data line of 1 SIM to temporarily provide IMS voice connectivity to the other\n         * SIM) it would be 2.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "mMaxActiveDataSubscriptions",
    "type" : "int",
    "comment" : "\n         * mMaxActiveDataSubscriptions defines the maximum subscriptions that can support\n         * simultaneous data connections. For example, for L+L device it should be 2.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "mNetworkValidationBeforeSwitchSupported",
    "type" : "boolean",
    "comment" : "\n         * Whether modem supports both internet PDN up so that we can do ping test before tearing\n         * down the other one.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "mLogicalModemList",
    "type" : "List<ModemInfo>",
    "comment" : "\n         * List of logical modem information.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "mDeviceNrCapabilities",
    "type" : "int[]",
    "comment" : "\n         * Device NR capabilities.\n         *\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setMaxActiveVoiceSubscriptions(int maxActiveVoiceSubscriptions)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the max active voice subscriptions supported by the device.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxActiveDataSubscriptions(int maxActiveDataSubscriptions)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the max active voice subscriptions supported by the device.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNetworkValidationBeforeSwitchSupported(boolean networkValidationBeforeSwitchSupported)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the max active data subscriptions supported by the device. Can be fewer than the\n         * active voice subscriptions.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLogicalModemList(@NonNull List<ModemInfo> logicalModemList)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the logical modem list of the device.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDeviceNrCapabilities(@NonNull int[] deviceNrCapabilities)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the NR capabilities supported by the device.\n         ",
    "links" : [ ]
  }, {
    "name" : "public PhoneCapability build()",
    "returnType" : "PhoneCapability",
    "comment" : "\n         * Build the {@link PhoneCapability}.\n         *\n         * @return The {@link PhoneCapability} instance.\n         ",
    "links" : [ "android.telephony.PhoneCapability" ]
  } ],
  "methodNames" : [ "public Builder setMaxActiveVoiceSubscriptions(int maxActiveVoiceSubscriptions)", "public Builder setMaxActiveDataSubscriptions(int maxActiveDataSubscriptions)", "public Builder setNetworkValidationBeforeSwitchSupported(boolean networkValidationBeforeSwitchSupported)", "public Builder setLogicalModemList(@NonNull List<ModemInfo> logicalModemList)", "public Builder setDeviceNrCapabilities(@NonNull int[] deviceNrCapabilities)", "public PhoneCapability build()" ],
  "variableNames" : [ "mMaxActiveVoiceSubscriptions", "mMaxActiveDataSubscriptions", "mNetworkValidationBeforeSwitchSupported", "mLogicalModemList", "mDeviceNrCapabilities" ]
}