{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothInputStream.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothInputStream",
  "comment" : "\n * BluetoothInputStream.\n *\n * <p>Used to write to a Bluetooth socket.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mSocket",
    "type" : "BluetoothSocket",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int available() throws IOException",
    "returnType" : "int",
    "comment" : " Return number of bytes available before this stream will block. ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int read() throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Reads a single byte from this stream and returns it as an integer in the range from 0 to 255.\n     * Returns -1 if the end of the stream has been reached. Blocks until one byte has been read,\n     * the end of the source stream is detected or an exception is thrown.\n     *\n     * @return the byte read or -1 if the end of stream has been reached.\n     * @throws IOException if the stream is closed or another IOException occurs.\n     * @since Android 1.5\n     ",
    "links" : [ ]
  }, {
    "name" : "public int read(byte[] b, int offset, int length) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Reads at most {@code length} bytes from this stream and stores them in the byte array {@code\n     * b} starting at {@code offset}.\n     *\n     * @param b the byte array in which to store the bytes read.\n     * @param offset the initial position in {@code buffer} to store the bytes read from this\n     *     stream.\n     * @param length the maximum number of bytes to store in {@code b}.\n     * @return the number of bytes actually read or -1 if the end of the stream has been reached.\n     * @throws IndexOutOfBoundsException if {@code offset < 0} or {@code length < 0}, or if {@code\n     *     offset + length} is greater than the length of {@code b}.\n     * @throws IOException if the stream is closed or another IOException occurs.\n     * @since Android 1.5\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int available() throws IOException", "public void close() throws IOException", "public int read() throws IOException", "public int read(byte[] b, int offset, int length) throws IOException" ],
  "variableNames" : [ "mSocket" ]
}