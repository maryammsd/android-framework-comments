{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/http/SslError.java",
  "packageName" : "android.net.http",
  "className" : "SslError",
  "comment" : "\n * This class represents a set of one or more SSL errors and the associated SSL\n * certificate.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SSL_NOTYETVALID",
    "type" : "int",
    "comment" : "\n     * The certificate is not yet valid\n     ",
    "links" : [ ]
  }, {
    "name" : "SSL_EXPIRED",
    "type" : "int",
    "comment" : "\n     * The certificate has expired\n     ",
    "links" : [ ]
  }, {
    "name" : "SSL_IDMISMATCH",
    "type" : "int",
    "comment" : "\n     * Hostname mismatch\n     ",
    "links" : [ ]
  }, {
    "name" : "SSL_UNTRUSTED",
    "type" : "int",
    "comment" : "\n     * The certificate authority is not trusted\n     ",
    "links" : [ ]
  }, {
    "name" : "SSL_DATE_INVALID",
    "type" : "int",
    "comment" : "\n     * The date of the certificate is invalid\n     ",
    "links" : [ ]
  }, {
    "name" : "SSL_INVALID",
    "type" : "int",
    "comment" : "\n     * A generic error occurred\n     ",
    "links" : [ ]
  }, {
    "name" : "SSL_MAX_ERROR",
    "type" : "int",
    "comment" : " Update if you add a new SSL error!!!",
    "links" : [ ]
  }, {
    "name" : "mErrors",
    "type" : "int",
    "comment" : "\n     * The SSL error set bitfield (each individual error is a bit index;\n     * multiple individual errors can be OR-ed)\n     ",
    "links" : [ ]
  }, {
    "name" : "mCertificate",
    "type" : "SslCertificate",
    "comment" : "\n     * The SSL certificate associated with the error set\n     ",
    "links" : [ ]
  }, {
    "name" : "mUrl",
    "type" : "String",
    "comment" : "\n     * The URL associated with the error set.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static SslError SslErrorFromChromiumErrorCode(int error, SslCertificate cert, String url)",
    "returnType" : "SslError",
    "comment" : "\n     * Creates an SslError object from a chromium error code.\n     * @param error The chromium error code\n     * @param certificate The associated SSL certificate\n     * @param url The associated URL.\n     * @hide  chromium error codes only available inside the framework\n     ",
    "links" : [ ]
  }, {
    "name" : "public SslCertificate getCertificate()",
    "returnType" : "SslCertificate",
    "comment" : "\n     * Gets the SSL certificate associated with this object.\n     * @return The SSL certificate, non-null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getUrl()",
    "returnType" : "String",
    "comment" : "\n     * Gets the URL associated with this object.\n     * @return The URL, non-null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean addError(int error)",
    "returnType" : "boolean",
    "comment" : "\n     * Adds the supplied SSL error to the set.\n     * @param error The SSL error to add\n     * @return True if the error being added is a known SSL error, otherwise\n     *         false.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasError(int error)",
    "returnType" : "boolean",
    "comment" : "\n     * Determines whether this object includes the supplied error.\n     * @param error The SSL error to check for\n     * @return True if this object includes the error, otherwise false.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPrimaryError()",
    "returnType" : "int",
    "comment" : "\n     * Gets the most severe SSL error in this object's set of errors.\n     * Returns -1 if the set is empty.\n     * @return The most severe SSL error, or -1 if the set is empty.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a string representation of this object.\n     * @return A String representation of this object.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static SslError SslErrorFromChromiumErrorCode(int error, SslCertificate cert, String url)", "public SslCertificate getCertificate()", "public String getUrl()", "public boolean addError(int error)", "public boolean hasError(int error)", "public int getPrimaryError()", "public String toString()" ],
  "variableNames" : [ "SSL_NOTYETVALID", "SSL_EXPIRED", "SSL_IDMISMATCH", "SSL_UNTRUSTED", "SSL_DATE_INVALID", "SSL_INVALID", "SSL_MAX_ERROR", "mErrors", "mCertificate", "mUrl" ]
}