{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ipsec/ike/ChildSessionCallback.java",
  "packageName" : "android.net.ipsec.ike",
  "className" : "ChildSessionCallback",
  "comment" : " implementation.",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onOpened(@NonNull ChildSessionConfiguration sessionConfiguration)",
    "returnType" : "void",
    "comment" : "\n     * Called when the Child Session setup succeeds.\n     *\n     * <p>This method will be called immediately after {@link\n     * #onIpSecTransformCreated(IpSecTransform, int)} for the created IPsec SA pair is fired.\n     *\n     * @param sessionConfiguration the {@link ChildSessionConfiguration} of Child Session negotiated\n     *     during Child creation.\n     ",
    "links" : [ "#onIpSecTransformCreated(IpSecTransform", "android.net.ipsec.ike.ChildSessionConfiguration" ]
  }, {
    "name" : " void onClosed()",
    "returnType" : "void",
    "comment" : "\n     * Called when the Child Session is closed.\n     *\n     * <p>This method will be called immediately after {@link\n     * #onIpSecTransformDeleted(IpSecTransform, int)} for the deleted IPsec SA pair is fired.\n     *\n     * <p>When the closure is caused by a local, fatal error, {@link\n     * #onClosedWithException(IkeException)} will be fired instead of this method.\n     ",
    "links" : [ "#onClosedWithException(IkeException)", "#onIpSecTransformDeleted(IpSecTransform" ]
  }, {
    "name" : " void onClosedExceptionally(@NonNull IkeException exception)",
    "returnType" : "void",
    "comment" : "\n     * Called if the Child Session setup failed or Child Session is closed because of a fatal error.\n     *\n     * <p>This method will be called immediately after {@link\n     * #onIpSecTransformDeleted(IpSecTransform, int)} for the deleted IPsec SA pair is fired.\n     *\n     * @param exception the detailed error information.\n     * @deprecated Implementers should override {@link #onClosedWithException(IkeException)} to\n     *     handle fatal {@link IkeException}s instead of using this method.\n     * @hide\n     ",
    "links" : [ "#onClosedWithException(IkeException)", "#onIpSecTransformDeleted(IpSecTransform", "android.net.ipsec.ike.exceptions.IkeException" ]
  }, {
    "name" : " void onClosedWithException(@NonNull IkeException exception)",
    "returnType" : "void",
    "comment" : "\n     * Called if the Child Session setup failed or Child Session is closed because of a fatal error.\n     *\n     * <p>This method will be called immediately after {@link\n     * #onIpSecTransformDeleted(IpSecTransform, int)} for the deleted IPsec SA pair is fired.\n     *\n     * @param exception the detailed error information.\n     ",
    "links" : [ "#onIpSecTransformDeleted(IpSecTransform" ]
  }, {
    "name" : " void onIpSecTransformCreated(@NonNull IpSecTransform ipSecTransform, @PolicyDirection int direction)",
    "returnType" : "void",
    "comment" : "\n     * Called when an {@link IpSecTransform} is created by this Child Session.\n     *\n     * <p>This method is fired when a Child Session is created or rekeyed.\n     *\n     * <p>The {@link IpSecTransform} must be applied to relevant sockets or interfaces when this\n     * method is called; traffic may otherwise flow over the socket or interface unprotected.\n     *\n     * <p>As this method is fired on an executor, there is an inherent race condition during rekeys\n     * where traffic may be routed through the old transforms while the remote has switched to using\n     * the new set of transforms.\n     *\n     * <p>To avoid the initial startup race condition where the transforms have not yet been\n     * applied, the {@link #onOpened(ChildSessionConfiguration)} callback should be used as the\n     * authoritative signal that the socket or tunnel is ready, as it is fired after both transforms\n     * have had a chance to be applied.\n     *\n     * @param ipSecTransform the created {@link IpSecTransform}.\n     * @param direction the direction of this {@link IpSecTransform}.\n     ",
    "links" : [ "#onOpened(ChildSessionConfiguration)", "android.net.IpSecTransform" ]
  }, {
    "name" : " void onIpSecTransformsMigrated(@NonNull IpSecTransform inIpSecTransform, @NonNull IpSecTransform outIpSecTransform)",
    "returnType" : "void",
    "comment" : "\n     * Called when a pair of {@link IpSecTransform}s are migrated by this IKE Session.\n     *\n     * <p>This method is only called when a Child SA is migrated during a MOBIKE-enabled IKE\n     * Session.\n     *\n     * <p>When this method is invoked, the caller MUST re-apply the transforms to their {@link\n     * IpSecTunnelInterface} via {@link IpSecManager#applyTunnelModeTransform(IpSecTunnelInterface,\n     * int, IpSecTransform)}\n     *\n     * @param inIpSecTransform IpSecTransform to be used for traffic with {@link\n     *     IpSecManager#DIRECTION_IN}\n     * @param outIpSecTransform IpSecTransform to be used for traffic with {@link\n     *     IpSecManager#DIRECTION_OUT}\n     * @hide\n     ",
    "links" : [ "android.net.IpSecManager.IpSecTunnelInterface", "android.net.IpSecManager#DIRECTION_OUT", "android.net.IpSecManager#applyTunnelModeTransform(IpSecTunnelInterface", "android.net.IpSecManager#DIRECTION_IN", "android.net.IpSecTransform" ]
  }, {
    "name" : " void onIpSecTransformDeleted(@NonNull IpSecTransform ipSecTransform, @PolicyDirection int direction)",
    "returnType" : "void",
    "comment" : "\n     * Called when an {@link IpSecTransform} is deleted by this Child Session.\n     *\n     * <p>This method is fired when a Child Session is closed or a Child Session has deleted old\n     * IPsec SA during rekey. When this method is fired due to Child Session closure, it will be\n     * followed by {@link #onClosed()} or {@link #onClosedWithException(IkeException)}.\n     *\n     * <p>Users SHOULD remove the {@link IpSecTransform} from the socket or interface when this\n     * method is called. Otherwise the IPsec traffic protected by this {@link IpSecTransform} will\n     * be discarded.\n     *\n     * @param ipSecTransform the deleted {@link IpSecTransform}.\n     * @param direction the direction of this {@link IpSecTransform}.\n     ",
    "links" : [ "#onClosedWithException(IkeException)", "android.net.IpSecTransform", "#onClosed()" ]
  } ],
  "methodNames" : [ " void onOpened(@NonNull ChildSessionConfiguration sessionConfiguration)", " void onClosed()", " void onClosedExceptionally(@NonNull IkeException exception)", " void onClosedWithException(@NonNull IkeException exception)", " void onIpSecTransformCreated(@NonNull IpSecTransform ipSecTransform, @PolicyDirection int direction)", " void onIpSecTransformsMigrated(@NonNull IpSecTransform inIpSecTransform, @NonNull IpSecTransform outIpSecTransform)", " void onIpSecTransformDeleted(@NonNull IpSecTransform ipSecTransform, @PolicyDirection int direction)" ],
  "variableNames" : [ ]
}