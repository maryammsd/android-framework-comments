{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/EditorTouchState.java",
  "packageName" : "android.widget",
  "className" : "EditorTouchState",
  "comment" : "\n * Helper class used by {@link Editor} to track state for touch events. Ideally the logic here\n * should be replaced with {@link android.view.GestureDetector}.\n *\n * @hide\n ",
  "links" : [ "android.view.GestureDetector", "android.widget.Editor" ],
  "variables" : [ {
    "name" : "mLastDownX",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastDownY",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastDownMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastUpX",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastUpY",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastUpMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsOnHandle",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMultiTapStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMultiTapInSameArea",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMovedEnoughForDrag",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialDragDirectionXYRatio",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public float getLastDownX()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getLastDownY()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getLastUpX()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getLastUpY()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isDoubleTap()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isTripleClick()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isMultiTap()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isMultiTapInSameArea()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isMovedEnoughForDrag()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getInitialDragDirectionXYRatio()",
    "returnType" : "float",
    "comment" : "\n     * When {@link #isMovedEnoughForDrag()} is {@code true}, this function returns the x/y ratio for\n     * the initial drag direction. Smaller values indicate that the direction is closer to vertical,\n     * while larger values indicate that the direction is closer to horizontal. For example:\n     * <ul>\n     *     <li>if the drag direction is exactly vertical, this returns 0\n     *     <li>if the drag direction is exactly horizontal, this returns {@link Float#MAX_VALUE}\n     *     <li>if the drag direction is 45 deg from vertical, this returns 1\n     *     <li>if the drag direction is 30 deg from vertical, this returns 0.58 (x delta is smaller\n     *     than y delta)\n     *     <li>if the drag direction is 60 deg from vertical, this returns 1.73 (x delta is bigger\n     *     than y delta)\n     * </ul>\n     * This function never returns negative values, regardless of the direction of the drag.\n     ",
    "links" : [ "#isMovedEnoughForDrag()", "#MAX_VALUE" ]
  }, {
    "name" : "public void setIsOnHandle(boolean onHandle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isOnHandle()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void update(MotionEvent event, ViewConfiguration config)",
    "returnType" : "void",
    "comment" : "\n     * Updates the state based on the new event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isDistanceWithin(float x1, float y1, float x2, float y2, int maxDistance)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the distance between the given coordinates is <= to the specified max.\n     * This is useful to be able to determine e.g. when the user's touch has moved enough in\n     * order to be considered a drag (no longer within touch slop).\n     ",
    "links" : [ ]
  }, {
    "name" : "public static float getXYRatio(int angleFromVerticalInDegrees)",
    "returnType" : "float",
    "comment" : "\n     * Returns the x/y ratio corresponding to the given angle relative to vertical. Smaller angle\n     * values (ie, closer to vertical) will result in a smaller x/y ratio. For example:\n     * <ul>\n     *     <li>if the angle is 45 deg, the ratio is 1\n     *     <li>if the angle is 30 deg, the ratio is 0.58 (x delta is smaller than y delta)\n     *     <li>if the angle is 60 deg, the ratio is 1.73 (x delta is bigger than y delta)\n     * </ul>\n     * If the passed-in value is <= 0, this function returns 0. If the passed-in value is >= 90,\n     * this function returns {@link Float#MAX_VALUE}.\n     *\n     * @see #getInitialDragDirectionXYRatio()\n     ",
    "links" : [ "#MAX_VALUE" ]
  } ],
  "methodNames" : [ "public float getLastDownX()", "public float getLastDownY()", "public float getLastUpX()", "public float getLastUpY()", "public boolean isDoubleTap()", "public boolean isTripleClick()", "public boolean isMultiTap()", "public boolean isMultiTapInSameArea()", "public boolean isMovedEnoughForDrag()", "public float getInitialDragDirectionXYRatio()", "public void setIsOnHandle(boolean onHandle)", "public boolean isOnHandle()", "public void update(MotionEvent event, ViewConfiguration config)", "public static boolean isDistanceWithin(float x1, float y1, float x2, float y2, int maxDistance)", "public static float getXYRatio(int angleFromVerticalInDegrees)" ],
  "variableNames" : [ "mLastDownX", "mLastDownY", "mLastDownMillis", "mLastUpX", "mLastUpY", "mLastUpMillis", "mIsOnHandle", "mMultiTapStatus", "mMultiTapInSameArea", "mMovedEnoughForDrag", "mInitialDragDirectionXYRatio" ]
}