{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/ParcelableColorSpace.java",
  "packageName" : "android.graphics",
  "className" : "ParcelableColorSpace",
  "comment" : "\n * A {@link Parcelable} {@link ColorSpace}. In order to enable parceling, the ColorSpace\n * must be either a {@link ColorSpace.Named Named} ColorSpace or a {@link ColorSpace.Rgb} instance\n * that has an ICC parametric transfer function as returned by {@link Rgb#getTransferParameters()}.\n * TODO: Make public\n * @hide\n ",
  "variables" : [ {
    "name" : "mColorSpace",
    "type" : "ColorSpace",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ParcelableColorSpace>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean isParcelable(@NonNull ColorSpace colorSpace)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the given ColorSpace is able to be parceled. A ColorSpace can only be\n     * parceled if it is a {@link ColorSpace.Named Named} ColorSpace or a {@link ColorSpace.Rgb}\n     * instance that has an ICC parametric transfer function as returned by\n     * {@link Rgb#getTransferParameters()}\n     ",
    "links" : [ "ColorSpace.Named", "ColorSpace.Rgb", "Rgb#getTransferParameters" ]
  }, {
    "name" : "public ColorSpace getColorSpace()",
    "returnType" : "ColorSpace",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isWideGamut()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getMinValue(int component)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getMaxValue(int component)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float[] toXyz(@NonNull float[] v)",
    "returnType" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float[] fromXyz(@NonNull float[] v)",
    "returnType" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long getNativeInstance()",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mColorSpace", "CREATOR" ],
  "methodNames" : [ "public static boolean isParcelable(@NonNull ColorSpace colorSpace)", "public ColorSpace getColorSpace()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean isWideGamut()", "public float getMinValue(int component)", "public float getMaxValue(int component)", "public float[] toXyz(@NonNull float[] v)", "public float[] fromXyz(@NonNull float[] v)", "public boolean equals(@Nullable Object o)", "public int hashCode()", " long getNativeInstance()" ]
}