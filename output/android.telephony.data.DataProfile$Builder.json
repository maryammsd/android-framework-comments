{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/data/DataProfile.java",
  "packageName" : "android.telephony.data",
  "className" : "Builder",
  "comment" : "\n     * Provides a convenient way to set the fields of a {@link DataProfile} when creating a new\n     * instance.\n     *\n     * <p>The example below shows how you might create a new {@code DataProfile}:\n     *\n     * <pre><code>\n     *\n     * DataProfile dp = new DataProfile.Builder()\n     *     .setApn(\"apn.xyz.com\")\n     *     .setProtocol(ApnSetting.PROTOCOL_IPV4V6)\n     *     .build();\n     * </code></pre>\n     ",
  "links" : [ "android.telephony.data.DataProfile" ],
  "variables" : [ {
    "name" : "mProfileId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mApn",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProtocolType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAuthType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPassword",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedApnTypesBitmask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRoamingProtocolType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBearerBitmask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMtuV4",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMtuV6",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPersistent",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreferred",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mApnSetting",
    "type" : "ApnSetting",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTrafficDescriptor",
    "type" : "TrafficDescriptor",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setProfileId(int profileId)",
    "returnType" : "Builder",
    "comment" : "\n         * Set profile id. Note that this is not a global unique id of the data profile. This id\n         * is only used by certain CDMA carriers to identify the type of data profile.\n         *\n         * @param profileId Network domain.\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setProfileId(int)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setProfileId(int)" ]
  }, {
    "name" : "public Builder setApn(@NonNull String apn)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the APN (Access Point Name) to establish data connection. This is a string\n         * specifically defined by the carrier.\n         *\n         * @param apn Access point name\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setApnName(String)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setApnName(String)" ]
  }, {
    "name" : "public Builder setProtocolType(@ProtocolType int protocolType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the connection protocol type.\n         *\n         * @param protocolType The connection protocol defined in 3GPP TS 27.007 section 10.1.1.\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setProtocol(int)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setProtocol(int)" ]
  }, {
    "name" : "public Builder setAuthType(@AuthType int authType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the authentication type.\n         *\n         * @param authType The authentication type\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setAuthType(int)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setAuthType(int)" ]
  }, {
    "name" : "public Builder setUserName(@NonNull String userName)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the user name\n         *\n         * @param userName The user name\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setUser(String)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setUser(String)" ]
  }, {
    "name" : "public Builder setPassword(@NonNull String password)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the password\n         *\n         * @param password The password\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setPassword(String)} (int)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setPassword(String)" ]
  }, {
    "name" : "public Builder setType(@Type int type)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the type\n         *\n         * @param type The profile type\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder enable(boolean isEnabled)",
    "returnType" : "Builder",
    "comment" : "\n         * Enable the data profile\n         *\n         * @param isEnabled {@code true} to enable the data profile, otherwise disable.\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSupportedApnTypesBitmask(@ApnType int supportedApnTypesBitmask)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the supported APN types bitmask.\n         *\n         * @param supportedApnTypesBitmask The supported APN types bitmask.\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setApnTypeBitmask(int)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setApnTypeBitmask(int)" ]
  }, {
    "name" : "public Builder setRoamingProtocolType(@ProtocolType int protocolType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the connection protocol type for roaming.\n         *\n         * @param protocolType The connection protocol defined in 3GPP TS 27.007 section 10.1.1.\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setRoamingProtocol(int)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setRoamingProtocol(int)" ]
  }, {
    "name" : "public Builder setBearerBitmask(@NetworkTypeBitMask int bearerBitmask)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the bearer bitmask indicating the applicable networks for this data profile.\n         *\n         * @param bearerBitmask The bearer bitmask indicating the applicable networks for this data\n         * profile.\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setNetworkTypeBitmask(int)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setNetworkTypeBitmask(int)" ]
  }, {
    "name" : "public Builder setMtu(int mtu)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the maximum transmission unit (MTU) size in bytes.\n         *\n         * @param mtu The maximum transmission unit (MTU) size in bytes.\n         * @return The same instance of the builder.\n         * @deprecated use {@link #setApnSetting(ApnSetting)} and\n         * {@link ApnSetting.Builder#setMtuV4(int)}/{@link ApnSetting.Builder#setMtuV6(int)}\n         * instead.\n         ",
    "links" : [ "ApnSetting.Builder#setMtuV6(int)", "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setMtuV4(int)" ]
  }, {
    "name" : "public Builder setMtuV4(int mtu)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the maximum transmission unit (MTU) size in bytes, for IPv4.\n         *\n         * @param mtu The maximum transmission unit (MTU) size in bytes.\n         * @return The same instance of the builder.\n         * @deprecated Use {{@link #setApnSetting(ApnSetting)}} and\n         * {@link ApnSetting.Builder#setMtuV4(int)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setMtuV4(int)" ]
  }, {
    "name" : "public Builder setMtuV6(int mtu)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the maximum transmission unit (MTU) size in bytes, for IPv6.\n         *\n         * @param mtu The maximum transmission unit (MTU) size in bytes.\n         * @return The same instance of the builder.\n         * @deprecated Use {{@link #setApnSetting(ApnSetting)}} and\n         * {@link ApnSetting.Builder#setMtuV6(int)} instead.\n         ",
    "links" : [ "ApnSetting.Builder#setMtuV6(int)", "#setApnSetting(ApnSetting)" ]
  }, {
    "name" : "public Builder setPreferred(boolean isPreferred)",
    "returnType" : "Builder",
    "comment" : "\n         * Set data profile as preferred/non-preferred.\n         *\n         * @param isPreferred {@code true} if this data profile was used to bring up the last\n         * default (i.e internet) data connection successfully, or the one chosen by the user in\n         * Settings' APN editor. For one carrier there can be only one profiled preferred.\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPersistent(boolean isPersistent)",
    "returnType" : "Builder",
    "comment" : "\n         * Set data profile as persistent/non-persistent.\n         *\n         * @param isPersistent {@code true} if this data profile was used to bring up the last\n         * default (i.e internet) data connection successfully.\n         * @return The same instance of the builder.\n         * @deprecated Use {{@link #setApnSetting(ApnSetting)}} and\n         * {@link ApnSetting.Builder#setPersistent(boolean)} instead.\n         ",
    "links" : [ "#setApnSetting(ApnSetting)", "ApnSetting.Builder#setPersistent(boolean)" ]
  }, {
    "name" : "public Builder setApnSetting(@NonNull ApnSetting apnSetting)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the APN setting. Note that if an APN setting is not set here, then either\n         * {@link #setApn(String)} or {@link #setTrafficDescriptor(TrafficDescriptor)} must be\n         * called. Otherwise {@link IllegalArgumentException} will be thrown when {@link #build()}\n         * the data profile.\n         *\n         * @param apnSetting The APN setting.\n         * @return The same instance of the builder.\n         ",
    "links" : [ "#build()", "#setApn(String)", "#setTrafficDescriptor(TrafficDescriptor)", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setTrafficDescriptor(@NonNull TrafficDescriptor trafficDescriptor)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the traffic descriptor. Note that if a traffic descriptor is not set here, then\n         * either {@link #setApnSetting(ApnSetting)} or {@link #setApn(String)} must be called.\n         * Otherwise {@link IllegalArgumentException} will be thrown when {@link #build()} the data\n         * profile.\n         *\n         * @param trafficDescriptor The traffic descriptor.\n         * @return The same instance of the builder.\n         ",
    "links" : [ "#build()", "#setApnSetting(ApnSetting)", "#setApn(String)", "IllegalArgumentException" ]
  }, {
    "name" : "public DataProfile build()",
    "returnType" : "DataProfile",
    "comment" : "\n         * Build the DataProfile object.\n         *\n         * @return The data profile object.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setProfileId(int profileId)", "public Builder setApn(@NonNull String apn)", "public Builder setProtocolType(@ProtocolType int protocolType)", "public Builder setAuthType(@AuthType int authType)", "public Builder setUserName(@NonNull String userName)", "public Builder setPassword(@NonNull String password)", "public Builder setType(@Type int type)", "public Builder enable(boolean isEnabled)", "public Builder setSupportedApnTypesBitmask(@ApnType int supportedApnTypesBitmask)", "public Builder setRoamingProtocolType(@ProtocolType int protocolType)", "public Builder setBearerBitmask(@NetworkTypeBitMask int bearerBitmask)", "public Builder setMtu(int mtu)", "public Builder setMtuV4(int mtu)", "public Builder setMtuV6(int mtu)", "public Builder setPreferred(boolean isPreferred)", "public Builder setPersistent(boolean isPersistent)", "public Builder setApnSetting(@NonNull ApnSetting apnSetting)", "public Builder setTrafficDescriptor(@NonNull TrafficDescriptor trafficDescriptor)", "public DataProfile build()" ],
  "variableNames" : [ "mProfileId", "mApn", "mProtocolType", "mAuthType", "mUserName", "mPassword", "mType", "mEnabled", "mSupportedApnTypesBitmask", "mRoamingProtocolType", "mBearerBitmask", "mMtuV4", "mMtuV6", "mPersistent", "mPreferred", "mApnSetting", "mTrafficDescriptor" ]
}