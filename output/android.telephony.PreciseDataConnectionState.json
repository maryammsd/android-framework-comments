{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/PreciseDataConnectionState.java",
  "packageName" : "android.telephony",
  "className" : "PreciseDataConnectionState",
  "comment" : "\n * Contains precise data connection state.\n *\n * The following data connection information is included in returned PreciseDataConnectionState:\n *\n * <ul>\n *   <li>Data connection state.\n *   <li>Network type of the connection.\n *   <li>APN types.\n *   <li>APN.\n *   <li>The properties of the network link.\n *   <li>Data connection fail cause.\n * </ul>\n *\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mTransportType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFailCause",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLinkProperties",
    "type" : "LinkProperties",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mApnSetting",
    "type" : "ApnSetting",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultQos",
    "type" : "Qos",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkValidationStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NETWORK_VALIDATION_UNSUPPORTED",
    "type" : "int",
    "comment" : "\n     * Unsupported. The unsupported state is used when the data network cannot support the network\n     * validation function for the current data connection state.\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_VALIDATION_NOT_REQUESTED",
    "type" : "int",
    "comment" : "\n     * Not Requested. The not requested status is used when the data network supports the network\n     * validation function, but no network validation is being performed yet.\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_VALIDATION_IN_PROGRESS",
    "type" : "int",
    "comment" : "\n     * In progress. The in progress state is used when the network validation process for the data\n     * network is in progress. This state is followed by either success or failure.\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_VALIDATION_SUCCESS",
    "type" : "int",
    "comment" : "\n     * Success. The Success status is used when network validation has been completed for the data\n     * network and the result is successful.\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_VALIDATION_FAILURE",
    "type" : "int",
    "comment" : "\n     * Failure. The Failure status is used when network validation has been completed for the data\n     * network and the result is failure.\n     ",
    "links" : [ ]
  }, {
    "name" : "GET_DATA_CONNECTION_STATE_R_VERSION",
    "type" : "long",
    "comment" : "\n     * Used for checking if the SDK version for\n     * {@code PreciseDataConnectionState#getDataConnectionState} is above Q.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<PreciseDataConnectionState>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getDataConnectionState()",
    "returnType" : "int",
    "comment" : "\n     * Returns the state of data connection that supported the apn types returned by\n     * {@link #getDataConnectionApnTypeBitMask()}\n     *\n     * @deprecated use {@link #getState()}\n     * @hide\n     ",
    "links" : [ "#getDataConnectionApnTypeBitMask()", "#getState()" ]
  }, {
    "name" : "public int getTransportType()",
    "returnType" : "int",
    "comment" : "\n     * @return The transport type of this data connection.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "\n     * @return The unique id of the data connection\n     *\n     * Note this is the id assigned by the data service.\n     * The id remains the same for data connection handover between\n     * {@link AccessNetworkConstants#TRANSPORT_TYPE_WLAN} and\n     * {@link AccessNetworkConstants#TRANSPORT_TYPE_WWAN}\n     *\n     ",
    "links" : [ "android.telephony.AccessNetworkConstants#TRANSPORT_TYPE_WLAN", "android.telephony.AccessNetworkConstants#TRANSPORT_TYPE_WWAN" ]
  }, {
    "name" : "public int getNetId()",
    "returnType" : "int",
    "comment" : "\n     * @return the current TelephonyNetworkAgent ID. {@code -1} if no network agent.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getState()",
    "returnType" : "int",
    "comment" : "\n     * @return The high-level state of this data connection.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNetworkType()",
    "returnType" : "int",
    "comment" : "\n     * Get the network type associated with this data connection.\n     *\n     * @return The current/latest (radio) bearer technology that carries this data connection.\n     * For a variety of reasons, the network type can change during the life of the data\n     * connection, and this information is not reliable unless the physical link is currently\n     * active; (there is currently no mechanism to know whether the physical link is active at\n     * any given moment). Thus, this value is generally correct but may not be relied-upon to\n     * represent the status of the radio bearer at any given moment.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDataConnectionApnTypeBitMask()",
    "returnType" : "int",
    "comment" : "\n     * Returns the APN types mapped to this data connection.\n     *\n     * @deprecated use {@link #getApnSetting()}\n     * @hide\n     ",
    "links" : [ "#getApnSetting()" ]
  }, {
    "name" : "public String getDataConnectionApn()",
    "returnType" : "String",
    "comment" : "\n     * Returns APN of this data connection.\n     *\n     * @deprecated use {@link #getApnSetting()}\n     * @hide\n     ",
    "links" : [ "#getApnSetting()" ]
  }, {
    "name" : "public LinkProperties getLinkProperties()",
    "returnType" : "LinkProperties",
    "comment" : "\n     * Get the properties of the network link {@link LinkProperties}.\n     ",
    "links" : [ "android.net.LinkProperties" ]
  }, {
    "name" : "public int getDataConnectionFailCause()",
    "returnType" : "int",
    "comment" : "\n     * Returns the cause code generated by the most recent state change.\n     *\n     * @deprecated use {@link #getLastCauseCode()}\n     * @hide\n     ",
    "links" : [ "#getLastCauseCode()" ]
  }, {
    "name" : "public int getLastCauseCode()",
    "returnType" : "int",
    "comment" : "\n     * Returns the cause code generated by the most recent state change.\n     *\n     * Return the cause code for the most recent change in {@link #getState}. In the event of an\n     * error, this cause code will be non-zero.\n     ",
    "links" : [ "#getState" ]
  }, {
    "name" : "public ApnSetting getApnSetting()",
    "returnType" : "ApnSetting",
    "comment" : "\n     * Return the APN Settings for this data connection.\n     *\n     * @return the ApnSetting that was used to configure this data connection. Note that a data\n     * connection cannot be established without a valid {@link ApnSetting}. The return value would\n     * never be {@code null} even though it has {@link Nullable} annotation.\n     ",
    "links" : [ "android.telephony.data.ApnSetting", "android.annotation.Nullable" ]
  }, {
    "name" : "public Qos getDefaultQos()",
    "returnType" : "Qos",
    "comment" : "\n     * Return the QoS for the default bearer of this data connection.\n     *\n     * @return the default QoS if known or {@code null} if it is unknown. If the value is reported\n     * for LTE, then it will be an {@link android.telephony.data.EpsQos EpsQos}. If the value is\n     * reported for 5G, then it will be an {@link android.telehpony.data.NrQos NrQos}. Otherwise it\n     * shall always be {@code null}.\n     *\n     * @hide\n     ",
    "links" : [ "android.telehpony.data.NrQos", "android.telephony.data.EpsQos" ]
  }, {
    "name" : "public int getNetworkValidationStatus()",
    "returnType" : "int",
    "comment" : "\n     * Returns the network validation state.\n     *\n     * @return the network validation status of the data call\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String networkValidationStatusToString(@NetworkValidationStatus int networkValidationStatus)",
    "returnType" : "String",
    "comment" : "\n     * Convert a network validation status to string.\n     *\n     * @param networkValidationStatus network validation status.\n     * @return string of validation status.\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getDataConnectionState()", "public int getTransportType()", "public int getId()", "public int getNetId()", "public int getState()", "public int getNetworkType()", "public int getDataConnectionApnTypeBitMask()", "public String getDataConnectionApn()", "public LinkProperties getLinkProperties()", "public int getDataConnectionFailCause()", "public int getLastCauseCode()", "public ApnSetting getApnSetting()", "public Qos getDefaultQos()", "public int getNetworkValidationStatus()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)", "public int hashCode()", "public boolean equals(Object o)", "public String toString()", "public static String networkValidationStatusToString(@NetworkValidationStatus int networkValidationStatus)" ],
  "variableNames" : [ "mTransportType", "mId", "mNetId", "mState", "mNetworkType", "mFailCause", "mLinkProperties", "mApnSetting", "mDefaultQos", "mNetworkValidationStatus", "NETWORK_VALIDATION_UNSUPPORTED", "NETWORK_VALIDATION_NOT_REQUESTED", "NETWORK_VALIDATION_IN_PROGRESS", "NETWORK_VALIDATION_SUCCESS", "NETWORK_VALIDATION_FAILURE", "GET_DATA_CONNECTION_STATE_R_VERSION", "CREATOR" ]
}