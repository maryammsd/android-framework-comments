{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/camera2/legacy/RequestHolder.java",
  "packageName" : "android.hardware.camera2.legacy",
  "className" : "Builder",
  "comment" : "\n     * A builder class for {@link RequestHolder} objects.\n     *\n     * <p>\n     * This allows per-request queries to be cached for repeating {@link CaptureRequest} objects.\n     * </p>\n     ",
  "variables" : [ {
    "name" : "mRequestId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubsequenceId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequest",
    "type" : "CaptureRequest",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRepeating",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumJpegTargets",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumPreviewTargets",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mJpegSurfaceIds",
    "type" : "Collection<Long>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private boolean jpegType(Surface s) throws LegacyExceptionUtils.BufferQueueAbandonedException",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if the given surface requires jpeg buffers.\n         *\n         * @param s a {@link android.view.Surface} to check.\n         * @return true if the surface requires a jpeg buffer.\n         ",
    "links" : [ "android.view.Surface" ]
  }, {
    "name" : "private boolean previewType(Surface s) throws LegacyExceptionUtils.BufferQueueAbandonedException",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if the given surface requires non-jpeg buffer types.\n         *\n         * <p>\n         * \"Jpeg buffer\" refers to the buffers returned in the jpeg\n         * {@link android.hardware.Camera.PictureCallback}.  Non-jpeg buffers are created using a tee\n         * of the preview stream drawn to the surface\n         * set via {@link android.hardware.Camera#setPreviewDisplay(android.view.SurfaceHolder)} or\n         * equivalent methods.\n         * </p>\n         * @param s a {@link android.view.Surface} to check.\n         * @return true if the surface requires a non-jpeg buffer type.\n         ",
    "links" : [ "android.hardware.Camera.PictureCallback", "android.hardware.Camera#setPreviewDisplay", "android.view.Surface" ]
  }, {
    "name" : "private int numJpegTargets(CaptureRequest request)",
    "returnType" : "int",
    "comment" : "\n         * Returns the number of surfaces targeted by the request that require jpeg buffers.\n         ",
    "links" : [ ]
  }, {
    "name" : "private int numPreviewTargets(CaptureRequest request)",
    "returnType" : "int",
    "comment" : "\n         * Returns the number of surfaces targeted by the request that require non-jpeg buffers.\n         ",
    "links" : [ ]
  }, {
    "name" : "public RequestHolder build(long frameNumber)",
    "returnType" : "RequestHolder",
    "comment" : "\n         * Build a new {@link RequestHolder} using with parameters generated from this\n         *      {@link Builder}.\n         *\n         * @param frameNumber the {@code framenumber} to generate in the {@link RequestHolder}.\n         * @return a {@link RequestHolder} constructed with the {@link Builder}'s parameters.\n         ",
    "links" : [ "RequestHolder", "Builder", "RequestHolder", "RequestHolder", "Builder" ]
  } ],
  "variableNames" : [ "mRequestId", "mSubsequenceId", "mRequest", "mRepeating", "mNumJpegTargets", "mNumPreviewTargets", "mJpegSurfaceIds" ],
  "methodNames" : [ "private boolean jpegType(Surface s) throws LegacyExceptionUtils.BufferQueueAbandonedException", "private boolean previewType(Surface s) throws LegacyExceptionUtils.BufferQueueAbandonedException", "private int numJpegTargets(CaptureRequest request)", "private int numPreviewTargets(CaptureRequest request)", "public RequestHolder build(long frameNumber)" ]
}