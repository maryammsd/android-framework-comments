{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/net/config/RootTrustManager.java",
  "packageName" : "android.security.net.config",
  "className" : "RootTrustManager",
  "comment" : "\n * {@link X509ExtendedTrustManager} based on an {@link ApplicationConfig}.\n *\n * <p>This trust manager delegates to the specific trust manager for the hostname being used for\n * the connection (See {@link ApplicationConfig#getConfigForHostname(String)} and\n * {@link NetworkSecurityTrustManager}).</p>\n *\n * Note that if the {@code ApplicationConfig} has per-domain configurations the hostname aware\n * {@link #checkServerTrusted(X509Certificate[], String String)} must be used instead of the normal\n * non-aware call.\n * @hide ",
  "links" : [ "android.security.net.config.ApplicationConfig", "javax.net.ssl.X509ExtendedTrustManager", "android.security.net.config.ApplicationConfig#getConfigForHostname(String)", "android.security.net.config.NetworkSecurityTrustManager", "#checkServerTrusted(X509Certificate" ],
  "variables" : [ {
    "name" : "mConfig",
    "type" : "ApplicationConfig",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkClientTrusted(X509Certificate[] certs, String authType, Socket socket) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkClientTrusted(X509Certificate[] certs, String authType, SSLEngine engine) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkServerTrusted(X509Certificate[] certs, String authType, Socket socket) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkServerTrusted(X509Certificate[] certs, String authType, SSLEngine engine) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkServerTrusted(X509Certificate[] certs, String authType) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<X509Certificate> checkServerTrusted(X509Certificate[] certs, String authType, String hostname) throws CertificateException",
    "returnType" : "List<X509Certificate>",
    "comment" : "\n     * Hostname aware version of {@link #checkServerTrusted(X509Certificate[], String)}.\n     * This interface is used by conscrypt and android.net.http.X509TrustManagerExtensions do not\n     * modify without modifying those callers.\n     ",
    "links" : [ "#checkServerTrusted(X509Certificate" ]
  }, {
    "name" : "public X509Certificate[] getAcceptedIssuers()",
    "returnType" : "X509Certificate[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isSameTrustConfiguration(String hostname1, String hostname2)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if this trust manager uses the same trust configuration for the provided\n     * hostnames.\n     *\n     * <p>This is required by android.net.http.X509TrustManagerExtensions.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException", "public void checkClientTrusted(X509Certificate[] certs, String authType, Socket socket) throws CertificateException", "public void checkClientTrusted(X509Certificate[] certs, String authType, SSLEngine engine) throws CertificateException", "public void checkServerTrusted(X509Certificate[] certs, String authType, Socket socket) throws CertificateException", "public void checkServerTrusted(X509Certificate[] certs, String authType, SSLEngine engine) throws CertificateException", "public void checkServerTrusted(X509Certificate[] certs, String authType) throws CertificateException", "public List<X509Certificate> checkServerTrusted(X509Certificate[] certs, String authType, String hostname) throws CertificateException", "public X509Certificate[] getAcceptedIssuers()", "public boolean isSameTrustConfiguration(String hostname1, String hostname2)" ],
  "variableNames" : [ "mConfig" ]
}