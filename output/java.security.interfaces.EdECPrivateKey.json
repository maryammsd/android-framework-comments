{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/interfaces/EdECPrivateKey.java",
  "packageName" : "java.security.interfaces",
  "className" : "EdECPrivateKey",
  "comment" : "\n * An interface for an elliptic curve private key as defined by\n * <a href=\"https://tools.ietf.org/html/rfc8032\">RFC 8032: Edwards-Curve\n * Digital Signature Algorithm (EdDSA)</a>. These keys are distinct from the\n * keys represented by {@code ECPrivateKey}, and they are intended for use\n * with algorithms based on RFC 8032 such as the EdDSA {@code Signature}\n * algorithm.\n * <p>\n * An Edwards-Curve private key is a bit string. This interface only supports bit\n * string lengths that are a multiple of 8, and the key is represented using\n * a byte array.\n *\n * @since 15\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " Optional<byte[]> getBytes()",
    "returnType" : "Optional<byte[]>",
    "comment" : "\n     * Get a copy of the byte array representing the private key. This method\n     * may return an empty {@code Optional} if the implementation is not\n     * willing to produce the private key value.\n     *\n     * @return an {@code Optional} containing the private key byte array.\n     * If the key is not available, then an empty {@code Optional}.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " Optional<byte[]> getBytes()" ],
  "variableNames" : [ ]
}