{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/autofill/CharSequenceTransformation.java",
  "packageName" : "android.service.autofill",
  "className" : "CharSequenceTransformation",
  "comment" : "\n * Replaces a {@link TextView} child of a {@link CustomDescription} with the contents of one or\n * more regular expressions (regexs).\n *\n * <p>When it contains more than one field, the fields that match their regex are added to the\n * overall transformation result.\n *\n * <p>For example, a transformation to mask a credit card number contained in just one field would\n * be:\n *\n * <pre class=\"prettyprint\">\n * new CharSequenceTransformation\n *     .Builder(ccNumberId, Pattern.compile(\"^.*(\\\\d\\\\d\\\\d\\\\d)$\"), \"...$1\")\n *     .build();\n * </pre>\n *\n * <p>But a transformation that generates a {@code Exp: MM / YYYY} credit expiration date from two\n * fields (month and year) would be:\n *\n * <pre class=\"prettyprint\">\n * new CharSequenceTransformation\n *   .Builder(ccExpMonthId, Pattern.compile(\"^(\\\\d\\\\d)$\"), \"Exp: $1\")\n *   .addField(ccExpYearId, Pattern.compile(\"^(\\\\d\\\\d\\\\d\\\\d)$\"), \" / $1\");\n * </pre>\n ",
  "links" : [ "android.widget.TextView", "android.service.autofill.CustomDescription" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFields",
    "type" : "LinkedHashMap<AutofillId, Pair<Pattern, String>>",
    "comment" : " Must use LinkedHashMap to preserve insertion order.",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<CharSequenceTransformation>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void apply(@NonNull ValueFinder finder, @NonNull RemoteViews parentTemplate, int childViewId) throws Exception",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "///////////////////////////////////",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "///////////////////////////////////",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void apply(@NonNull ValueFinder finder, @NonNull RemoteViews parentTemplate, int childViewId) throws Exception", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ],
  "variableNames" : [ "TAG", "mFields", "CREATOR" ]
}