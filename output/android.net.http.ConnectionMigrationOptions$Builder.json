{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/http/ConnectionMigrationOptions.java",
  "packageName" : "android.net.http",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link ConnectionMigrationOptions}.\n     ",
  "links" : [ "android.net.http.ConnectionMigrationOptions" ],
  "variables" : [ {
    "name" : "mEnableDefaultNetworkMigration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnablePathDegradationMigration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowServerMigration",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMigrateIdleConnections",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIdleConnectionMigrationPeriod",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowNonDefaultNetworkUsage",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxTimeOnNonDefaultNetwork",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxWriteErrorNonDefaultNetworkMigrationsCount",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxPathDegradingNonDefaultMigrationsCount",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setDefaultNetworkMigration(@MigrationOptionState int state)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether to enable the possibility of migrating connections on default network\n         * change. If enabled, active QUIC connections will be migrated onto the new network when\n         * the platform indicates that the default network is changing.\n         *\n         * @see <a href=\"https://developer.android.com/training/basics/network-ops/reading-network-state#listening-events\">Android\n         *     Network State</a>\n         *\n         * @param state one of the MIGRATION_OPTION_* values\n         * @return this builder for chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPathDegradationMigration(@MigrationOptionState int state)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether to enable the possibility of migrating connections if the current path is\n         * performing poorly.\n         *\n         * <p>Depending on other configuration, this can result to migrating the connections within\n         * the same default network, or to a non-default network.\n         *\n         * @param state one of the MIGRATION_OPTION_* values\n         * @return this builder for chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAllowNonDefaultNetworkUsage(@MigrationOptionState int state)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether connections can be migrated to an alternate network when Cronet detects\n         * a degradation of the path currently in use. Requires setting\n         * {@link #setPathDegradationMigration(int)} to {@link #MIGRATION_OPTION_ENABLED} to\n         * have any effect.\n         *\n         * <p>Note: This setting can result in requests being sent on non-default metered networks,\n         * eating into the users' data budgets and incurring extra costs. Make sure you're using\n         * metered networks sparingly.\n         *\n         * @param state one of the MIGRATION_OPTION_* values\n         * @return this builder for chaining\n         ",
    "links" : [ "#setPathDegradationMigration(int)", "#MIGRATION_OPTION_ENABLED" ]
  }, {
    "name" : "public ConnectionMigrationOptions build()",
    "returnType" : "ConnectionMigrationOptions",
    "comment" : "\n         * Creates and returns the final {@link ConnectionMigrationOptions} instance, based on the\n         * values in this builder.\n         ",
    "links" : [ "android.net.http.ConnectionMigrationOptions" ]
  } ],
  "methodNames" : [ "public Builder setDefaultNetworkMigration(@MigrationOptionState int state)", "public Builder setPathDegradationMigration(@MigrationOptionState int state)", "public Builder setAllowNonDefaultNetworkUsage(@MigrationOptionState int state)", "public ConnectionMigrationOptions build()" ],
  "variableNames" : [ "mEnableDefaultNetworkMigration", "mEnablePathDegradationMigration", "mAllowServerMigration", "mMigrateIdleConnections", "mIdleConnectionMigrationPeriod", "mAllowNonDefaultNetworkUsage", "mMaxTimeOnNonDefaultNetwork", "mMaxWriteErrorNonDefaultNetworkMigrationsCount", "mMaxPathDegradingNonDefaultMigrationsCount" ]
}