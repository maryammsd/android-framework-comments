{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothHeadsetClient.java",
  "packageName" : "android.bluetooth",
  "className" : "NetworkServiceState",
  "comment" : "\n     * A class that contains the network service info provided by the HFP Client profile\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mDevice",
    "type" : "BluetoothDevice",
    "comment" : " The device associated with this service state ",
    "links" : [ ]
  }, {
    "name" : "mIsServiceAvailable",
    "type" : "boolean",
    "comment" : " True if there is service available, False otherwise ",
    "links" : [ ]
  }, {
    "name" : "mOperatorName",
    "type" : "String",
    "comment" : " The name of the operator associated with the remote device's current network ",
    "links" : [ ]
  }, {
    "name" : "mSignalStrength",
    "type" : "int",
    "comment" : " The general signal strength, from 0 to 5 ",
    "links" : [ ]
  }, {
    "name" : "mIsRoaming",
    "type" : "boolean",
    "comment" : " True if we are network roaming, False otherwise ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<NetworkServiceState>",
    "comment" : " {@link Parcelable.Creator} interface implementation. ",
    "links" : [ "Parcelable.Creator" ]
  } ],
  "methods" : [ {
    "name" : "public BluetoothDevice getDevice()",
    "returnType" : "BluetoothDevice",
    "comment" : "\n         * Get the device associated with this network service state\n         *\n         * @return a BluetoothDevice associated with this state\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isServiceAvailable()",
    "returnType" : "boolean",
    "comment" : "\n         * Get the network service availability state\n         *\n         * @return True if there is service available, False otherwise\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getNetworkOperatorName()",
    "returnType" : "String",
    "comment" : "\n         * Get the network operator name\n         *\n         * @return A string representing the name of the operator the remote device is on, or null\n         *     if unknown.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSignalStrength()",
    "returnType" : "int",
    "comment" : "\n         * The HFP Client defined signal strength, from 0 to 5.\n         *\n         * <p>Bluetooth HFP v1.8 specifies that the signal strength of a device can be [0, 5]. It\n         * does not place any requirements on how a device derives those values. While they're\n         * typically derived from signal quality/RSSI buckets, there's no way to be certain on the\n         * exact meaning. Derivation methods can even change between wireless cellular technologies.\n         *\n         * <p>That said, you can \"generally\" interpret the values relative to each other as follows:\n         * - Level 0: None/Unknown - Level 1: Very Poor - Level 2: Poor - Level 3: Fair - Level 4:\n         * Good - Level 5: Great\n         *\n         * @return the HFP Client defined signal strength, range [0, 5]\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isRoaming()",
    "returnType" : "boolean",
    "comment" : "\n         * Get the network service roaming status\n         *\n         * <p>* @return True if we are network roaming, False otherwise\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public BluetoothDevice getDevice()", "public boolean isServiceAvailable()", "public String getNetworkOperatorName()", "public int getSignalStrength()", "public boolean isRoaming()", "public void writeToParcel(@NonNull Parcel out, int flags)", "public int describeContents()" ],
  "variableNames" : [ "mDevice", "mIsServiceAvailable", "mOperatorName", "mSignalStrength", "mIsRoaming", "CREATOR" ]
}