{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/PersonNameFormatter.java",
  "packageName" : "android.icu.text",
  "className" : "PersonNameFormatter",
  "comment" : "\n * A class for formatting names of people.  Takes raw name data for a person and renders it into a string according to\n * the caller's specifications, taking into account how people's names are rendered in the caller's locale.\n *\n * The Length, Usage, and Formality options can be used to get a wide variety of results.  In English, they would\n * produce results along these lines:\n * <table border=\"1\">\n *     <tr>\n *         <th rowspan=\"2\">\n *         </th>\n *         <th colspan=\"2\">\n *             REFERRING\n *         </th>\n *         <th colspan=\"2\">\n *             ADDRESSING\n *         </th>\n *         <th colspan=\"2\">\n *             MONOGRAM\n *         </th>\n *     </tr>\n *     <tr>\n *         <th>FORMAL</th>\n *         <th>INFORMAL</th>\n *         <th>FORMAL</th>\n *         <th>INFORMAL</th>\n *         <th>FORMAL</th>\n *         <th>INFORMAL</th>\n *     </tr>\n *     <tr>\n *         <th>LONG</th>\n *         <td>James Earl Carter Jr.</td>\n *         <td>Jimmy Carter</td>\n *         <td>Mr. Carter</td>\n *         <td>Jimmy</td>\n *         <td>JEC</td>\n *         <td>JC</td>\n *     </tr>\n *     <tr>\n *         <th>MEDIUM</th>\n *         <td>James E. Carter Jr.</td>\n *         <td>Jimmy Carter</td>\n *         <td>Mr. Carter</td>\n *         <td>Jimmy</td>\n *         <td>C</td>\n *         <td>J</td>\n *     </tr>\n *     <tr>\n *         <th>SHORT</th>\n *         <td>J. E. Carter</td>\n *         <td>Jimmy Carter</td>\n *         <td>Mr. Carter</td>\n *         <td>Jimmy</td>\n *         <td>C</td>\n *         <td>J</td>\n *     </tr>\n * </table>\n *\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "impl",
    "type" : "PersonNameFormatterImpl",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Builder builder()",
    "returnType" : "Builder",
    "comment" : "\n     * Returns a Builder object that can be used to construct a new PersonNameFormatter.\n     * @return A new Builder.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Builder toBuilder()",
    "returnType" : "Builder",
    "comment" : "\n     * Returns a Builder object whose fields match those used to construct this formatter,\n     * allowing a new formatter to be created based on this one.\n     * @return A new Builder that can be used to create a new formatter based on this formatter.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String formatToString(PersonName name)",
    "returnType" : "String",
    "comment" : "\n     * Formats a name.\n     * @param name A PersonName object that supplies individual field values (optionally, with modifiers applied)\n     *             to the formatter for formatting.\n     * @return The name, formatted according to the locale and other parameters passed to the formatter's constructor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * @deprecated This API is for debugging only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Builder builder()", "public Builder toBuilder()", "public String formatToString(PersonName name)", "public String toString()" ],
  "variableNames" : [ "impl" ]
}