{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/radio/TunerAdapter.java",
  "packageName" : "android.hardware.radio",
  "className" : "TunerAdapter",
  "comment" : "\n * Implements the RadioTuner interface by forwarding calls to radio service.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTuner",
    "type" : "ITuner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "TunerCallbackAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsClosed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBand",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLegacyListProxy",
    "type" : "ProgramList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLegacyListFilter",
    "type" : "Map<String, String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int setConfiguration(RadioManager.BandConfig config)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getConfiguration(RadioManager.BandConfig[] config)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int setMute(boolean mute)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean getMute()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int step(int direction, boolean skipSubChannel)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int scan(int direction, boolean skipSubChannel)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int tune(int channel, int subChannel)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void tune(@NonNull ProgramSelector selector)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int cancel()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancelAnnouncement()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getProgramInformation(RadioManager.ProgramInfo[] info)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Bitmap getMetadataImage(int id)",
    "returnType" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean startBackgroundScan()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<RadioManager.ProgramInfo> getProgramList(@Nullable Map<String, String> vendorFilter)",
    "returnType" : "List<RadioManager.ProgramInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ProgramList getDynamicProgramList(@Nullable ProgramList.Filter filter)",
    "returnType" : "ProgramList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAnalogForced()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAnalogForced(boolean isForced)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isConfigFlagSupported(@RadioManager.ConfigFlag int flag)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isConfigFlagSet(@RadioManager.ConfigFlag int flag)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setConfigFlag(@RadioManager.ConfigFlag int flag, boolean value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Map<String, String> setParameters(@NonNull Map<String, String> parameters)",
    "returnType" : "Map<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Map<String, String> getParameters(@NonNull List<String> keys)",
    "returnType" : "Map<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAntennaConnected()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasControl()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mTuner", "mCallback", "mIsClosed", "mBand", "mLegacyListProxy", "mLegacyListFilter" ],
  "methodNames" : [ "public void close()", "public int setConfiguration(RadioManager.BandConfig config)", "public int getConfiguration(RadioManager.BandConfig[] config)", "public int setMute(boolean mute)", "public boolean getMute()", "public int step(int direction, boolean skipSubChannel)", "public int scan(int direction, boolean skipSubChannel)", "public int tune(int channel, int subChannel)", "public void tune(@NonNull ProgramSelector selector)", "public int cancel()", "public void cancelAnnouncement()", "public int getProgramInformation(RadioManager.ProgramInfo[] info)", "public Bitmap getMetadataImage(int id)", "public boolean startBackgroundScan()", "public List<RadioManager.ProgramInfo> getProgramList(@Nullable Map<String, String> vendorFilter)", "public ProgramList getDynamicProgramList(@Nullable ProgramList.Filter filter)", "public boolean isAnalogForced()", "public void setAnalogForced(boolean isForced)", "public boolean isConfigFlagSupported(@RadioManager.ConfigFlag int flag)", "public boolean isConfigFlagSet(@RadioManager.ConfigFlag int flag)", "public void setConfigFlag(@RadioManager.ConfigFlag int flag, boolean value)", "public Map<String, String> setParameters(@NonNull Map<String, String> parameters)", "public Map<String, String> getParameters(@NonNull List<String> keys)", "public boolean isAntennaConnected()", "public boolean hasControl()" ]
}