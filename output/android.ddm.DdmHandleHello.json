{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/ddm/DdmHandleHello.java",
  "packageName" : "android.ddm",
  "className" : "DdmHandleHello",
  "comment" : "\n * Handle \"hello\" messages and feature discovery.\n ",
  "variables" : [ {
    "name" : "CHUNK_HELO",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_WAIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_FEAT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CLIENT_PROTOCOL_VERSION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInstance",
    "type" : "DdmHandleHello",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FRAMEWORK_FEATURES",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void register()",
    "returnType" : "void",
    "comment" : "\n     * Register for the messages we're interested in.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void connected()",
    "returnType" : "void",
    "comment" : "\n     * Called when the DDM server connects.  The handler is allowed to\n     * send messages to the server.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void disconnected()",
    "returnType" : "void",
    "comment" : "\n     * Called when the DDM server disconnects.  Can be used to disable\n     * periodic transmissions or clean up saved state.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Chunk handleChunk(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a chunk of data.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleHELO(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle introductory packet. This is called during JNI_CreateJavaVM\n     * before frameworks native methods are registered, so be careful not\n     * to call any APIs that depend on frameworks native code.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleFEAT(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle request for list of supported features.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void sendWAIT(int reason)",
    "returnType" : "void",
    "comment" : "\n     * Send up a WAIT chunk.  The only currently defined value for \"reason\"\n     * is zero, which means \"waiting for a debugger\".\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "CHUNK_HELO", "CHUNK_WAIT", "CHUNK_FEAT", "CLIENT_PROTOCOL_VERSION", "mInstance", "FRAMEWORK_FEATURES" ],
  "methodNames" : [ "public static void register()", "public void connected()", "public void disconnected()", "public Chunk handleChunk(Chunk request)", "private Chunk handleHELO(Chunk request)", "private Chunk handleFEAT(Chunk request)", "public static void sendWAIT(int reason)" ]
}