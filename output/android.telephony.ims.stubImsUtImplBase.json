{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/ims/stub/ImsUtImplBase.java",
  "packageName" : "android.telephony.ims.stub",
  "className" : "ImsUtImplBase",
  "comment" : " will break other implementations of ImsUt maintained by other ImsServices.",
  "variables" : [ {
    "name" : "CALL_BARRING_ALL_INCOMING",
    "type" : "int",
    "comment" : "\n     * Bar all incoming calls. (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BARRING_ALL_OUTGOING",
    "type" : "int",
    "comment" : "\n     * Bar all outgoing calls. (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BARRING_OUTGOING_INTL",
    "type" : "int",
    "comment" : "\n     * Bar all outgoing international calls. (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BARRING_OUTGOING_INTL_EXCL_HOME",
    "type" : "int",
    "comment" : "\n     * Bar all outgoing international calls, excluding those to the home PLMN country\n     * (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BLOCKING_INCOMING_WHEN_ROAMING",
    "type" : "int",
    "comment" : "\n     * Bar all incoming calls when roaming (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BARRING_ANONYMOUS_INCOMING",
    "type" : "int",
    "comment" : "\n     * Enable Anonymous Communication Rejection (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BARRING_ALL",
    "type" : "int",
    "comment" : "\n     * Bar all incoming and outgoing calls. (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BARRING_OUTGOING_ALL_SERVICES",
    "type" : "int",
    "comment" : "\n     * Bar all outgoing service requests, including calls. (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BARRING_INCOMING_ALL_SERVICES",
    "type" : "int",
    "comment" : "\n     * Bar all incoming service requests, including calls. (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_BARRING_SPECIFIC_INCOMING_CALLS",
    "type" : "int",
    "comment" : "\n     * Bar specific incoming calls. (See 3GPP TS 24.611)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "INVALID_RESULT",
    "type" : "int",
    "comment" : "\n     * Constant used to denote an invalid return value.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mServiceImpl",
    "type" : "IImsUt.Stub",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Called when the framework no longer needs to interact with the IMS UT implementation any\n     * longer.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryCallBarring(int cbType)",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the call barring configuration.\n     * @param cbType\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryCallBarringForServiceClass(int cbType, int serviceClass)",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the configuration of the call barring for specified service class.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryCallForward(int condition, String number)",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the configuration of the call forward.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryCallWaiting()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the configuration of the call waiting.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryCLIR()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the default CLIR setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryCLIP()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the CLIP call setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryCOLR()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the COLR call setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryCOLP()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the COLP call setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryClir()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the default CLIR setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryClip()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the CLIP call setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryColr()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the COLR call setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int queryColp()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the COLP call setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int transact(Bundle ssInfo)",
    "returnType" : "int",
    "comment" : "\n     * Updates or retrieves the supplementary service configuration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCallBarring(@CallBarringMode int cbType, int action, String[] barrList)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the call barring.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCallBarringForServiceClass(@CallBarringMode int cbType, int action, String[] barrList, int serviceClass)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the call barring for specified service class.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCallBarringWithPassword(int cbType, int action, @Nullable String[] barrList, int serviceClass, @NonNull String password)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the call barring for specified service class with password.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCallForward(int action, int condition, String number, int serviceClass, int timeSeconds)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the call forward.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCallWaiting(boolean enable, int serviceClass)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the call waiting.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCLIR(int clirMode)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the CLIR supplementary service.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCLIP(boolean enable)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the CLIP supplementary service.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCOLR(int presentation)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the COLR supplementary service.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateCOLP(boolean enable)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the COLP supplementary service.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateClir(int clirMode)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the CLIR supplementary service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateClip(boolean enable)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the CLIP supplementary service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateColr(int presentation)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the COLR supplementary service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int updateColp(boolean enable)",
    "returnType" : "int",
    "comment" : "\n     * Updates the configuration of the COLP supplementary service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setListener(ImsUtListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Sets the listener.\n     ",
    "links" : [ ]
  }, {
    "name" : "public IImsUt getInterface()",
    "returnType" : "IImsUt",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "CALL_BARRING_ALL_INCOMING", "CALL_BARRING_ALL_OUTGOING", "CALL_BARRING_OUTGOING_INTL", "CALL_BARRING_OUTGOING_INTL_EXCL_HOME", "CALL_BLOCKING_INCOMING_WHEN_ROAMING", "CALL_BARRING_ANONYMOUS_INCOMING", "CALL_BARRING_ALL", "CALL_BARRING_OUTGOING_ALL_SERVICES", "CALL_BARRING_INCOMING_ALL_SERVICES", "CALL_BARRING_SPECIFIC_INCOMING_CALLS", "INVALID_RESULT", "mServiceImpl" ],
  "methodNames" : [ "public void close()", "public int queryCallBarring(int cbType)", "public int queryCallBarringForServiceClass(int cbType, int serviceClass)", "public int queryCallForward(int condition, String number)", "public int queryCallWaiting()", "public int queryCLIR()", "public int queryCLIP()", "public int queryCOLR()", "public int queryCOLP()", "public int queryClir()", "public int queryClip()", "public int queryColr()", "public int queryColp()", "public int transact(Bundle ssInfo)", "public int updateCallBarring(@CallBarringMode int cbType, int action, String[] barrList)", "public int updateCallBarringForServiceClass(@CallBarringMode int cbType, int action, String[] barrList, int serviceClass)", "public int updateCallBarringWithPassword(int cbType, int action, @Nullable String[] barrList, int serviceClass, @NonNull String password)", "public int updateCallForward(int action, int condition, String number, int serviceClass, int timeSeconds)", "public int updateCallWaiting(boolean enable, int serviceClass)", "public int updateCLIR(int clirMode)", "public int updateCLIP(boolean enable)", "public int updateCOLR(int presentation)", "public int updateCOLP(boolean enable)", "public int updateClir(int clirMode)", "public int updateClip(boolean enable)", "public int updateColr(int presentation)", "public int updateColp(boolean enable)", "public void setListener(ImsUtListener listener)", "public IImsUt getInterface()" ]
}