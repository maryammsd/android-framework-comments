{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/CompactByteArray.java",
  "packageName" : "android.icu.util",
  "className" : "CompactByteArray",
  "comment" : "\n * class CompactATypeArray : use only on primitive data types\n * Provides a compact way to store information that is indexed by Unicode\n * values, such as character properties, types, keyboard values, etc.This\n * is very useful when you have a block of Unicode data that contains\n * significant values while the rest of the Unicode data is unused in the\n * application or when you have a lot of redundance, such as where all 21,000\n * Han ideographs have the same value.  However, lookup is much faster than a\n * hash table.\n * A compact array of any primitive data type serves two purposes:\n * <UL type = round>\n *     <LI>Fast access of the indexed values.\n *     <LI>Smaller memory footprint.\n * </UL>\n * A compact array is composed of a index array and value array.  The index\n * array contains the indices of Unicode characters to the value array.\n *\n * @see                CompactCharArray\n * @author             Helena Shih\n * @deprecated This API is ICU internal only.\n * @hide Only a subset of ICU is exposed in Android\n * @hide draft / provisional / internal are hidden on Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "UNICODECOUNT",
    "type" : "int",
    "comment" : "\n     * The total number of Unicode characters.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "BLOCKSHIFT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BLOCKCOUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INDEXSHIFT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INDEXCOUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BLOCKMASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "values",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "indices",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "hashes",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "isCompact",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "defaultValue",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public byte elementAt(char index)",
    "returnType" : "byte",
    "comment" : "\n     * Get the mapped value of a Unicode character.\n     * @param index the character to get the mapped value with\n     * @return the mapped value of the given character\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setElementAt(char index, byte value)",
    "returnType" : "void",
    "comment" : "\n     * Set a new value for a Unicode character.\n     * Set automatically expands the array if it is compacted.\n     * @param index the character to set the mapped value with\n     * @param value the new mapped value\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setElementAt(char start, char end, byte value)",
    "returnType" : "void",
    "comment" : "\n     * Set new values for a range of Unicode character.\n     *\n     * @param start the starting offset of the range\n     * @param end the ending offset of the range\n     * @param value the new mapped value\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void compact()",
    "returnType" : "void",
    "comment" : "\n     * Compact the array.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void compact(boolean exhaustive)",
    "returnType" : "void",
    "comment" : "\n     * Compact the array.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : " static final boolean arrayRegionMatches(byte[] source, int sourceStart, byte[] target, int targetStart, int len)",
    "returnType" : "boolean",
    "comment" : "\n     * Convenience utility to compare two arrays of doubles.\n     * @param len the length to compare.\n     * The start indices and start+len must be valid.\n     ",
    "links" : [ ]
  }, {
    "name" : "private final void touchBlock(int i, int value)",
    "returnType" : "void",
    "comment" : "\n     * Remember that a specified block was \"touched\", i.e. had a value set.\n     * Untouched blocks can be skipped when compacting the array\n     ",
    "links" : [ ]
  }, {
    "name" : "private final boolean blockTouched(int i)",
    "returnType" : "boolean",
    "comment" : "\n     * Query whether a specified block was \"touched\", i.e. had a value set.\n     * Untouched blocks can be skipped when compacting the array\n     ",
    "links" : [ ]
  }, {
    "name" : "public char[] getIndexArray()",
    "returnType" : "char[]",
    "comment" : "\n     * For internal use only.  Do not modify the result, the behavior of\n     * modified results are undefined.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getValueArray()",
    "returnType" : "byte[]",
    "comment" : "\n     * For internal use only.  Do not modify the result, the behavior of\n     * modified results are undefined.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "\n     * Overrides Cloneable\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * Compares the equality of two compact array objects.\n     * @param obj the compact array object to be compared with this.\n     * @return true if the current compact array object is the same\n     * as the compact array object obj; false otherwise.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * Generates the hash code for the compact array object\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private void expand()",
    "returnType" : "void",
    "comment" : "\n     * Expanding takes the array back to a 65536 element array.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public byte elementAt(char index)", "public void setElementAt(char index, byte value)", "public void setElementAt(char start, char end, byte value)", "public void compact()", "public void compact(boolean exhaustive)", " static final boolean arrayRegionMatches(byte[] source, int sourceStart, byte[] target, int targetStart, int len)", "private final void touchBlock(int i, int value)", "private final boolean blockTouched(int i)", "public char[] getIndexArray()", "public byte[] getValueArray()", "public Object clone()", "public boolean equals(Object obj)", "public int hashCode()", "private void expand()" ],
  "variableNames" : [ "UNICODECOUNT", "BLOCKSHIFT", "BLOCKCOUNT", "INDEXSHIFT", "INDEXCOUNT", "BLOCKMASK", "values", "indices", "hashes", "isCompact", "defaultValue" ]
}