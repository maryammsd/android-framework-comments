{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/axes/ChildTestIterator.java",
  "packageName" : "org.apache.xpath.axes",
  "className" : "ChildTestIterator",
  "comment" : "\n * This class implements an optimized iterator for\n * children patterns that have a node test, and possibly a predicate.\n * @see org.apache.xpath.axes.BasicTestIterator\n * @xsl.usage advanced\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_traverser",
    "type" : "DTMAxisTraverser",
    "comment" : " The traverser to use to navigate over the descendants. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected int getNextNode()",
    "returnType" : "int",
    "comment" : "\n   * Get the next node via getNextXXX.  Bottlenecked for derived class override.\n   * @return The next node on the axis, or DTM.NULL.\n   ",
    "links" : [ ]
  }, {
    "name" : "public DTMIterator cloneWithReset() throws CloneNotSupportedException",
    "returnType" : "DTMIterator",
    "comment" : "\n   *  Get a cloned Iterator that is reset to the beginning\n   *  of the query.\n   * \n   *  @return A cloned NodeIterator set of the start of the query.\n   * \n   *  @throws CloneNotSupportedException\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setRoot(int context, Object environment)",
    "returnType" : "void",
    "comment" : "\n   * Initialize the context values for this expression\n   * after it is cloned.\n   *\n   * @param context The XPath runtime context for this\n   * transformation.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getAxis()",
    "returnType" : "int",
    "comment" : "\n   * Returns the axis being iterated, if it is known.\n   * \n   * @return Axis.CHILD, etc., or -1 if the axis is not known or is of multiple \n   * types.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void detach()",
    "returnType" : "void",
    "comment" : "\n   *  Detaches the iterator from the set which it iterated over, releasing\n   * any computational resources and placing the iterator in the INVALID\n   * state. After<code>detach</code> has been invoked, calls to\n   * <code>nextNode</code> or<code>previousNode</code> will raise the\n   * exception INVALID_STATE_ERR.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected int getNextNode()", "public DTMIterator cloneWithReset() throws CloneNotSupportedException", "public void setRoot(int context, Object environment)", "public int getAxis()", "public void detach()" ],
  "variableNames" : [ "serialVersionUID", "m_traverser" ]
}