{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/SortedOps.java",
  "packageName" : "java.util.stream",
  "className" : "AbstractRefSortingSink",
  "comment" : "\n     * Abstract {@link Sink} for implementing sort on reference streams.\n     *\n     * <p>\n     * Note: documentation below applies to reference and all primitive sinks.\n     * <p>\n     * Sorting sinks first accept all elements, buffering then into an array\n     * or a re-sizable data structure, if the size of the pipeline is known or\n     * unknown respectively.  At the end of the sink protocol those elements are\n     * sorted and then pushed downstream.\n     * This class records if {@link #cancellationRequested} is called.  If so it\n     * can be inferred that the source pushing source elements into the pipeline\n     * knows that the pipeline is short-circuiting.  In such cases sub-classes\n     * pushing elements downstream will preserve the short-circuiting protocol\n     * by calling {@code downstream.cancellationRequested()} and checking the\n     * result is {@code false} before an element is pushed.\n     * <p>\n     * Note that the above behaviour is an optimization for sorting with\n     * sequential streams.  It is not an error that more elements, than strictly\n     * required to produce a result, may flow through the pipeline.  This can\n     * occur, in general (not restricted to just sorting), for short-circuiting\n     * parallel pipelines.\n     ",
  "links" : [ "#cancellationRequested", "java.util.stream.Sink" ],
  "variables" : [ {
    "name" : "comparator",
    "type" : "Comparator<? super T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cancellationRequestedCalled",
    "type" : "boolean",
    "comment" : " true if cancellationRequested() has been called",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final boolean cancellationRequested()",
    "returnType" : "boolean",
    "comment" : "\n         * Records is cancellation is requested so short-circuiting behaviour\n         * can be preserved when the sorted elements are pushed downstream.\n         *\n         * @return false, as this sink never short-circuits.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final boolean cancellationRequested()" ],
  "variableNames" : [ "comparator", "cancellationRequestedCalled" ]
}