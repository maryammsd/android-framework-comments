{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/UriRelativeFilter.java",
  "packageName" : "android.content",
  "className" : "UriRelativeFilter",
  "comment" : "\n * A filter for matching Intent URI Data as part of a\n * {@link UriRelativeFilterGroup}. A single filter can only be\n * matched against either a URI path, query or fragment\n ",
  "links" : [ "android.content.UriRelativeFilterGroup" ],
  "variables" : [ {
    "name" : "FILTER_STR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PART_STR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PATTERN_STR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "URI_RELATIVE_FILTER_STR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PATH",
    "type" : "int",
    "comment" : "\n     * Value to indicate that the filter is to be applied to a URI path.\n     ",
    "links" : [ ]
  }, {
    "name" : "QUERY",
    "type" : "int",
    "comment" : "\n     * Value to indicate that the filter is to be applied to a URI query.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRAGMENT",
    "type" : "int",
    "comment" : "\n     * Value to indicate that the filter is to be applied to a URI fragment.\n     ",
    "links" : [ ]
  }, {
    "name" : "mUriPart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPatternType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFilter",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getUriPart()",
    "returnType" : "int",
    "comment" : "\n     * The URI part this filter operates on.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPatternType()",
    "returnType" : "int",
    "comment" : "\n     * The pattern type of the filter.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFilter()",
    "returnType" : "String",
    "comment" : "\n     * The string used to filter the URI.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean matchData(@NonNull Uri data)",
    "returnType" : "boolean",
    "comment" : "\n     * Match this URI filter against an Intent's data. QUERY filters can\n     * match against any key value pair in the query string. PATH and\n     * FRAGMENT filters must match the entire string.\n     *\n     * @param data The full data string to match against, as supplied in\n     *             Intent.data.\n     *\n     * @return true if there is a match.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean matchQuery(PatternMatcher pe, String query)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dumpDebug(ProtoOutputStream proto, long fieldId)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void writeToXml(XmlSerializer serializer) throws IOException",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private String uriPartToString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String patternTypeToString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public UriRelativeFilterParcel toParcel()",
    "returnType" : "UriRelativeFilterParcel",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getUriPart()", "public int getPatternType()", "public String getFilter()", "public boolean matchData(@NonNull Uri data)", "private boolean matchQuery(PatternMatcher pe, String query)", "public void dumpDebug(ProtoOutputStream proto, long fieldId)", "public void writeToXml(XmlSerializer serializer) throws IOException", "private String uriPartToString()", "private String patternTypeToString()", "public String toString()", "public UriRelativeFilterParcel toParcel()", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "FILTER_STR", "PART_STR", "PATTERN_STR", "URI_RELATIVE_FILTER_STR", "PATH", "QUERY", "FRAGMENT", "mUriPart", "mPatternType", "mFilter" ]
}