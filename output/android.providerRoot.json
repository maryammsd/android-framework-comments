{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/DocumentsContract.java",
  "packageName" : "android.provider",
  "className" : "Root",
  "comment" : "\n     * Constants related to a root of documents, including {@link Cursor} column\n     * names and flags. A root is the start of a tree of documents, such as a\n     * physical storage device, or an account. Each root starts at the directory\n     * referenced by {@link Root#COLUMN_DOCUMENT_ID}, which can recursively\n     * contain both documents and directories.\n     * <p>\n     * All columns are <em>read-only</em> to client applications.\n     ",
  "variables" : [ {
    "name" : "COLUMN_ROOT_ID",
    "type" : "String",
    "comment" : "\n         * Unique ID of a root. This ID is both provided by and interpreted by a\n         * {@link DocumentsProvider}, and should be treated as an opaque value\n         * by client applications. This column is required.\n         * <p>\n         * Type: STRING\n         ",
    "links" : [ "DocumentsProvider" ]
  }, {
    "name" : "COLUMN_FLAGS",
    "type" : "String",
    "comment" : "\n         * Flags that apply to a root. This column is required.\n         * <p>\n         * Type: INTEGER (int)\n         *\n         * @see #FLAG_LOCAL_ONLY\n         * @see #FLAG_SUPPORTS_CREATE\n         * @see #FLAG_SUPPORTS_RECENTS\n         * @see #FLAG_SUPPORTS_SEARCH\n         ",
    "links" : [ ]
  }, {
    "name" : "COLUMN_ICON",
    "type" : "String",
    "comment" : "\n         * Icon resource ID for a root. This column is required.\n         * <p>\n         * Type: INTEGER (int)\n         ",
    "links" : [ ]
  }, {
    "name" : "COLUMN_TITLE",
    "type" : "String",
    "comment" : "\n         * Title for a root, which will be shown to a user. This column is\n         * required. For a single storage service surfacing multiple accounts as\n         * different roots, this title should be the name of the service.\n         * <p>\n         * Type: STRING\n         ",
    "links" : [ ]
  }, {
    "name" : "COLUMN_SUMMARY",
    "type" : "String",
    "comment" : "\n         * Summary for this root, which may be shown to a user. This column is\n         * optional, and may be {@code null}. For a single storage service\n         * surfacing multiple accounts as different roots, this summary should\n         * be the name of the account.\n         * <p>\n         * Type: STRING\n         ",
    "links" : [ ]
  }, {
    "name" : "COLUMN_DOCUMENT_ID",
    "type" : "String",
    "comment" : "\n         * Document which is a directory that represents the top directory of\n         * this root. This column is required.\n         * <p>\n         * Type: STRING\n         *\n         * @see Document#COLUMN_DOCUMENT_ID\n         ",
    "links" : [ ]
  }, {
    "name" : "COLUMN_AVAILABLE_BYTES",
    "type" : "String",
    "comment" : "\n         * Number of bytes available in this root. This column is optional, and\n         * may be {@code null} if unknown or unbounded.\n         * <p>\n         * Type: INTEGER (long)\n         ",
    "links" : [ ]
  }, {
    "name" : "COLUMN_CAPACITY_BYTES",
    "type" : "String",
    "comment" : "\n         * Capacity of a root in bytes. This column is optional, and may be\n         * {@code null} if unknown or unbounded.\n         * <p>\n         * Type: INTEGER (long)\n         ",
    "links" : [ ]
  }, {
    "name" : "COLUMN_MIME_TYPES",
    "type" : "String",
    "comment" : "\n         * MIME types supported by this root. This column is optional, and if\n         * {@code null} the root is assumed to support all MIME types. Multiple\n         * MIME types can be separated by a newline. For example, a root\n         * supporting audio might return \"audio/*\\napplication/x-flac\".\n         * <p>\n         * Type: STRING\n         ",
    "links" : [ ]
  }, {
    "name" : "COLUMN_QUERY_ARGS",
    "type" : "String",
    "comment" : "\n         * Query arguments supported by this root. This column is optional\n         * and related to {@link #COLUMN_FLAGS} and {@link #FLAG_SUPPORTS_SEARCH}.\n         * If the flags include {@link #FLAG_SUPPORTS_SEARCH}, and the column is\n         * {@code null}, the root is assumed to support {@link #QUERY_ARG_DISPLAY_NAME}\n         * search of {@link Document#COLUMN_DISPLAY_NAME}. Multiple query arguments\n         * can be separated by a newline. For example, a root supporting\n         * {@link #QUERY_ARG_MIME_TYPES} and {@link #QUERY_ARG_DISPLAY_NAME} might\n         * return \"android:query-arg-mime-types\\nandroid:query-arg-display-name\".\n         * <p>\n         * Type: STRING\n         * @see #COLUMN_FLAGS\n         * @see #FLAG_SUPPORTS_SEARCH\n         * @see #QUERY_ARG_DISPLAY_NAME\n         * @see #QUERY_ARG_FILE_SIZE_OVER\n         * @see #QUERY_ARG_LAST_MODIFIED_AFTER\n         * @see #QUERY_ARG_MIME_TYPES\n         * @see DocumentsProvider#querySearchDocuments(String, String[],\n         *      Bundle)\n         ",
    "links" : [ "#COLUMN_FLAGS", "#FLAG_SUPPORTS_SEARCH", "#FLAG_SUPPORTS_SEARCH", "#QUERY_ARG_DISPLAY_NAME", "Document#COLUMN_DISPLAY_NAME", "#QUERY_ARG_MIME_TYPES", "#QUERY_ARG_DISPLAY_NAME" ]
  }, {
    "name" : "MIME_TYPE_ITEM",
    "type" : "String",
    "comment" : "\n         * MIME type for a root.\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_SUPPORTS_CREATE",
    "type" : "int",
    "comment" : "\n         * Flag indicating that at least one directory under this root supports\n         * creating content. Roots with this flag will be shown when an\n         * application interacts with {@link Intent#ACTION_CREATE_DOCUMENT}.\n         *\n         * @see #COLUMN_FLAGS\n         ",
    "links" : [ "Intent#ACTION_CREATE_DOCUMENT" ]
  }, {
    "name" : "FLAG_LOCAL_ONLY",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root offers content that is strictly local\n         * on the device. That is, no network requests are made for the content.\n         *\n         * @see #COLUMN_FLAGS\n         * @see Intent#EXTRA_LOCAL_ONLY\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_SUPPORTS_RECENTS",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root can be queried to provide recently\n         * modified documents.\n         *\n         * @see #COLUMN_FLAGS\n         * @see DocumentsContract#buildRecentDocumentsUri(String, String)\n         * @see DocumentsProvider#queryRecentDocuments(String, String[])\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_SUPPORTS_SEARCH",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root supports search.\n         *\n         * @see #COLUMN_FLAGS\n         * @see DocumentsContract#buildSearchDocumentsUri(String, String,\n         *      String)\n         * @see DocumentsProvider#querySearchDocuments(String, String,\n         *      String[])\n         * @see DocumentsProvider#querySearchDocuments(String, String[],\n         *      Bundle)\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_SUPPORTS_IS_CHILD",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root supports testing parent child\n         * relationships.\n         *\n         * @see #COLUMN_FLAGS\n         * @see DocumentsProvider#isChildDocument(String, String)\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_SUPPORTS_EJECT",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root can be ejected.\n         *\n         * @see #COLUMN_FLAGS\n         * @see DocumentsContract#ejectRoot(ContentResolver, Uri)\n         * @see DocumentsProvider#ejectRoot(String)\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_EMPTY",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root is currently empty. This may be used\n         * to hide the root when opening documents, but the root will still be\n         * shown when creating documents and {@link #FLAG_SUPPORTS_CREATE} is\n         * also set. If the value of this flag changes, such as when a root\n         * becomes non-empty, you must send a content changed notification for\n         * {@link DocumentsContract#buildRootsUri(String)}.\n         *\n         * @see #COLUMN_FLAGS\n         * @see ContentResolver#notifyChange(Uri,\n         *      android.database.ContentObserver, boolean)\n         ",
    "links" : [ "#FLAG_SUPPORTS_CREATE", "DocumentsContract#buildRootsUri" ]
  }, {
    "name" : "FLAG_ADVANCED",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root should only be visible to advanced\n         * users.\n         *\n         * @see #COLUMN_FLAGS\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_HAS_SETTINGS",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root has settings.\n         *\n         * @see #COLUMN_FLAGS\n         * @see DocumentsContract#ACTION_DOCUMENT_ROOT_SETTINGS\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_REMOVABLE_SD",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root is on removable SD card storage.\n         *\n         * @see #COLUMN_FLAGS\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_REMOVABLE_USB",
    "type" : "int",
    "comment" : "\n         * Flag indicating that this root is on removable USB storage.\n         *\n         * @see #COLUMN_FLAGS\n         * {@hide}\n         ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "COLUMN_ROOT_ID", "COLUMN_FLAGS", "COLUMN_ICON", "COLUMN_TITLE", "COLUMN_SUMMARY", "COLUMN_DOCUMENT_ID", "COLUMN_AVAILABLE_BYTES", "COLUMN_CAPACITY_BYTES", "COLUMN_MIME_TYPES", "COLUMN_QUERY_ARGS", "MIME_TYPE_ITEM", "FLAG_SUPPORTS_CREATE", "FLAG_LOCAL_ONLY", "FLAG_SUPPORTS_RECENTS", "FLAG_SUPPORTS_SEARCH", "FLAG_SUPPORTS_IS_CHILD", "FLAG_SUPPORTS_EJECT", "FLAG_EMPTY", "FLAG_ADVANCED", "FLAG_HAS_SETTINGS", "FLAG_REMOVABLE_SD", "FLAG_REMOVABLE_USB" ],
  "methodNames" : [ ]
}