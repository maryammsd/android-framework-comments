{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/preference/PreferenceFragment.java",
  "packageName" : "android.preference",
  "className" : "PreferenceFragment",
  "comment" : "\n * Shows a hierarchy of {@link Preference} objects as\n * lists. These preferences will\n * automatically save to {@link SharedPreferences} as the user interacts with\n * them. To retrieve an instance of {@link SharedPreferences} that the\n * preference hierarchy in this fragment will use, call\n * {@link PreferenceManager#getDefaultSharedPreferences(android.content.Context)}\n * with a context in the same package as this fragment.\n * <p>\n * Furthermore, the preferences shown will follow the visual style of system\n * preferences. It is easy to create a hierarchy of preferences (that can be\n * shown on multiple screens) via XML. For these reasons, it is recommended to\n * use this fragment (as a superclass) to deal with preferences in applications.\n * <p>\n * A {@link PreferenceScreen} object should be at the top of the preference\n * hierarchy. Furthermore, subsequent {@link PreferenceScreen} in the hierarchy\n * denote a screen break--that is the preferences contained within subsequent\n * {@link PreferenceScreen} should be shown on another screen. The preference\n * framework handles showing these other screens from the preference hierarchy.\n * <p>\n * The preference hierarchy can be formed in multiple ways:\n * <li> From an XML file specifying the hierarchy\n * <li> From different {@link Activity Activities} that each specify its own\n * preferences in an XML file via {@link Activity} meta-data\n * <li> From an object hierarchy rooted with {@link PreferenceScreen}\n * <p>\n * To inflate from XML, use the {@link #addPreferencesFromResource(int)}. The\n * root element should be a {@link PreferenceScreen}. Subsequent elements can point\n * to actual {@link Preference} subclasses. As mentioned above, subsequent\n * {@link PreferenceScreen} in the hierarchy will result in the screen break.\n * <p>\n * To specify an {@link Intent} to query {@link Activity Activities} that each\n * have preferences, use {@link #addPreferencesFromIntent}. Each\n * {@link Activity} can specify meta-data in the manifest (via the key\n * {@link PreferenceManager#METADATA_KEY_PREFERENCES}) that points to an XML\n * resource. These XML resources will be inflated into a single preference\n * hierarchy and shown by this fragment.\n * <p>\n * To specify an object hierarchy rooted with {@link PreferenceScreen}, use\n * {@link #setPreferenceScreen(PreferenceScreen)}.\n * <p>\n * As a convenience, this fragment implements a click listener for any\n * preference in the current hierarchy, see\n * {@link #onPreferenceTreeClick(PreferenceScreen, Preference)}.\n * \n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For information about using {@code PreferenceFragment},\n * read the <a href=\"{@docRoot}guide/topics/ui/settings.html\">Settings</a>\n * guide.</p>\n * </div>\n *\n * @see Preference\n * @see PreferenceScreen\n *\n * @deprecated Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n *      <a href=\"{@docRoot}reference/androidx/preference/package-summary.html\">\n *      Preference Library</a> for consistent behavior across all devices. For more information on\n *      using the AndroidX Preference Library see\n *      <a href=\"{@docRoot}guide/topics/ui/settings.html\">Settings</a>.\n ",
  "links" : [ "#setPreferenceScreen(PreferenceScreen)", "#onPreferenceTreeClick(PreferenceScreen", "android.content.SharedPreferences", "#addPreferencesFromResource(int)", "android.preference.Preference", "android.preference.PreferenceManager#METADATA_KEY_PREFERENCES", "#addPreferencesFromIntent", "android.preference.PreferenceManager#getDefaultSharedPreferences(android.content.Context)", "android.content.Intent", "android.preference.PreferenceScreen", "android.app.Activity" ],
  "variables" : [ {
    "name" : "PREFERENCES_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreferenceManager",
    "type" : "PreferenceManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mList",
    "type" : "ListView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHavePrefs",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitDone",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLayoutResId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FIRST_REQUEST_CODE",
    "type" : "int",
    "comment" : "\n     * The starting request code given out to preference framework.\n     ",
    "links" : [ ]
  }, {
    "name" : "MSG_BIND_PREFERENCES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestFocus",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListOnKeyListener",
    "type" : "OnKeyListener",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onCreate(@Nullable Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onViewCreated(View view, @Nullable Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onActivityCreated(@Nullable Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onStart()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onStop()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDestroyView()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDestroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSaveInstanceState(Bundle outState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onActivityResult(int requestCode, int resultCode, Intent data)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PreferenceManager getPreferenceManager()",
    "returnType" : "PreferenceManager",
    "comment" : "\n     * Returns the {@link PreferenceManager} used by this fragment.\n     * @return The {@link PreferenceManager}.\n     ",
    "links" : [ "android.preference.PreferenceManager" ]
  }, {
    "name" : "public void setPreferenceScreen(PreferenceScreen preferenceScreen)",
    "returnType" : "void",
    "comment" : "\n     * Sets the root of the preference hierarchy that this fragment is showing.\n     *\n     * @param preferenceScreen The root {@link PreferenceScreen} of the preference hierarchy.\n     ",
    "links" : [ "android.preference.PreferenceScreen" ]
  }, {
    "name" : "public PreferenceScreen getPreferenceScreen()",
    "returnType" : "PreferenceScreen",
    "comment" : "\n     * Gets the root of the preference hierarchy that this fragment is showing.\n     *\n     * @return The {@link PreferenceScreen} that is the root of the preference\n     *         hierarchy.\n     ",
    "links" : [ "android.preference.PreferenceScreen" ]
  }, {
    "name" : "public void addPreferencesFromIntent(Intent intent)",
    "returnType" : "void",
    "comment" : "\n     * Adds preferences from activities that match the given {@link Intent}.\n     *\n     * @param intent The {@link Intent} to query activities.\n     ",
    "links" : [ "android.content.Intent" ]
  }, {
    "name" : "public void addPreferencesFromResource(@XmlRes int preferencesResId)",
    "returnType" : "void",
    "comment" : "\n     * Inflates the given XML resource and adds the preference hierarchy to the current\n     * preference hierarchy.\n     *\n     * @param preferencesResId The XML resource ID to inflate.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Preference findPreference(CharSequence key)",
    "returnType" : "Preference",
    "comment" : "\n     * Finds a {@link Preference} based on its key.\n     *\n     * @param key The key of the preference to retrieve.\n     * @return The {@link Preference} with the key, or null.\n     * @see PreferenceGroup#findPreference(CharSequence)\n     ",
    "links" : [ "android.preference.Preference" ]
  }, {
    "name" : "private void requirePreferenceManager()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void postBindPreferences()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void bindPreferences()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onBindPreferences()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "protected void onUnbindPreferences()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public ListView getListView()",
    "returnType" : "ListView",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasListView()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void ensureList()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onCreate(@Nullable Bundle savedInstanceState)", "public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState)", "public void onViewCreated(View view, @Nullable Bundle savedInstanceState)", "public void onActivityCreated(@Nullable Bundle savedInstanceState)", "public void onStart()", "public void onStop()", "public void onDestroyView()", "public void onDestroy()", "public void onSaveInstanceState(Bundle outState)", "public void onActivityResult(int requestCode, int resultCode, Intent data)", "public PreferenceManager getPreferenceManager()", "public void setPreferenceScreen(PreferenceScreen preferenceScreen)", "public PreferenceScreen getPreferenceScreen()", "public void addPreferencesFromIntent(Intent intent)", "public void addPreferencesFromResource(@XmlRes int preferencesResId)", "public boolean onPreferenceTreeClick(PreferenceScreen preferenceScreen, Preference preference)", "public Preference findPreference(CharSequence key)", "private void requirePreferenceManager()", "private void postBindPreferences()", "private void bindPreferences()", "protected void onBindPreferences()", "protected void onUnbindPreferences()", "public ListView getListView()", "public boolean hasListView()", "private void ensureList()" ],
  "variableNames" : [ "PREFERENCES_TAG", "mPreferenceManager", "mList", "mHavePrefs", "mInitDone", "mLayoutResId", "FIRST_REQUEST_CODE", "MSG_BIND_PREFERENCES", "mHandler", "mRequestFocus", "mListOnKeyListener" ]
}