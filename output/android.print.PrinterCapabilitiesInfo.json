{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/print/PrinterCapabilitiesInfo.java",
  "packageName" : "android.print",
  "className" : "PrinterCapabilitiesInfo",
  "comment" : "\n * This class represents the capabilities of a printer. Instances\n * of this class are created by a print service to report the\n * capabilities of a printer it manages. The capabilities of a\n * printer specify how it can print content. For example, what\n * are the media sizes supported by the printer, what are the\n * minimal margins of the printer based on its technical design,\n * etc.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEFAULT_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Undefined default value.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_MEDIA_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_RESOLUTION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_COLOR_MODE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_DUPLEX_MODE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_COUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MARGINS",
    "type" : "Margins",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinMargins",
    "type" : "Margins",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMediaSizes",
    "type" : "List<MediaSize>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResolutions",
    "type" : "List<Resolution>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColorModes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDuplexModes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaults",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<PrinterCapabilitiesInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void copyFrom(PrinterCapabilitiesInfo other)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<MediaSize> getMediaSizes()",
    "returnType" : "List<MediaSize>",
    "comment" : "\n     * Gets the supported media sizes.\n     *\n     * @return The media sizes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<Resolution> getResolutions()",
    "returnType" : "List<Resolution>",
    "comment" : "\n     * Gets the supported resolutions.\n     *\n     * @return The resolutions.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Margins getMinMargins()",
    "returnType" : "Margins",
    "comment" : "\n     * Gets the minimal margins. These are the minimal margins\n     * the printer physically supports.\n     *\n     * @return The minimal margins.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getColorModes()",
    "returnType" : "int",
    "comment" : "\n     * Gets the bit mask of supported color modes.\n     *\n     * @return The bit mask of supported color modes.\n     *\n     * @see PrintAttributes#COLOR_MODE_COLOR\n     * @see PrintAttributes#COLOR_MODE_MONOCHROME\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDuplexModes()",
    "returnType" : "int",
    "comment" : "\n     * Gets the bit mask of supported duplex modes.\n     *\n     * @return The bit mask of supported duplex modes.\n     *\n     * @see PrintAttributes#DUPLEX_MODE_NONE\n     * @see PrintAttributes#DUPLEX_MODE_LONG_EDGE\n     * @see PrintAttributes#DUPLEX_MODE_SHORT_EDGE\n     ",
    "links" : [ ]
  }, {
    "name" : "public PrintAttributes getDefaults()",
    "returnType" : "PrintAttributes",
    "comment" : "\n     * Gets the default print attributes.\n     *\n     * @return The default attributes.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void enforceValidMask(int mask, IntConsumer enforceSingle)",
    "returnType" : "void",
    "comment" : "\n     * Call enforceSingle for each bit in the mask.\n     *\n     * @param mask The mask\n     * @param enforceSingle The function to call\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String colorModesToString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String duplexModesToString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void writeMediaSizes(Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void readMediaSizes(Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void writeResolutions(Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void readResolutions(Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void writeMargins(Margins margins, Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Margins readMargins(Parcel parcel)",
    "returnType" : "Margins",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void readDefaults(Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void writeDefaults(Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void copyFrom(PrinterCapabilitiesInfo other)", "public List<MediaSize> getMediaSizes()", "public List<Resolution> getResolutions()", "public Margins getMinMargins()", "public int getColorModes()", "public int getDuplexModes()", "public PrintAttributes getDefaults()", "private static void enforceValidMask(int mask, IntConsumer enforceSingle)", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)", "public int hashCode()", "public boolean equals(@Nullable Object obj)", "public String toString()", "private String colorModesToString()", "private String duplexModesToString()", "private void writeMediaSizes(Parcel parcel)", "private void readMediaSizes(Parcel parcel)", "private void writeResolutions(Parcel parcel)", "private void readResolutions(Parcel parcel)", "private void writeMargins(Margins margins, Parcel parcel)", "private Margins readMargins(Parcel parcel)", "private void readDefaults(Parcel parcel)", "private void writeDefaults(Parcel parcel)" ],
  "variableNames" : [ "DEFAULT_UNDEFINED", "PROPERTY_MEDIA_SIZE", "PROPERTY_RESOLUTION", "PROPERTY_COLOR_MODE", "PROPERTY_DUPLEX_MODE", "PROPERTY_COUNT", "DEFAULT_MARGINS", "mMinMargins", "mMediaSizes", "mResolutions", "mColorModes", "mDuplexModes", "mDefaults", "CREATOR" ]
}