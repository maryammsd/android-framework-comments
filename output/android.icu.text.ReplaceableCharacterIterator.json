{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/BreakTransliterator.java",
  "packageName" : "android.icu.text",
  "className" : "ReplaceableCharacterIterator",
  "comment" : " Hack, just to get a real character iterator.",
  "links" : [ ],
  "variables" : [ {
    "name" : "text",
    "type" : "Replaceable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "begin",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "end",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "pos",
    "type" : "int",
    "comment" : " invariant: begin <= pos <= end",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setText(Replaceable text)",
    "returnType" : "void",
    "comment" : "\n        * Reset this iterator to point to a new string.  This package-visible\n        * method is used by other java.text classes that want to avoid allocating\n        * new ReplaceableCharacterIterator objects every time their setText method\n        * is called.\n        *\n        * @param  text   The String to be iterated over\n        ",
    "links" : [ ]
  }, {
    "name" : "public char first()",
    "returnType" : "char",
    "comment" : "\n        * Implements CharacterIterator.first() for String.\n        * @see CharacterIterator#first\n        ",
    "links" : [ ]
  }, {
    "name" : "public char last()",
    "returnType" : "char",
    "comment" : "\n        * Implements CharacterIterator.last() for String.\n        * @see CharacterIterator#last\n        ",
    "links" : [ ]
  }, {
    "name" : "public char setIndex(int p)",
    "returnType" : "char",
    "comment" : "\n        * Implements CharacterIterator.setIndex() for String.\n        * @see CharacterIterator#setIndex\n        ",
    "links" : [ ]
  }, {
    "name" : "public char current()",
    "returnType" : "char",
    "comment" : "\n        * Implements CharacterIterator.current() for String.\n        * @see CharacterIterator#current\n        ",
    "links" : [ ]
  }, {
    "name" : "public char next()",
    "returnType" : "char",
    "comment" : "\n        * Implements CharacterIterator.next() for String.\n        * @see CharacterIterator#next\n        ",
    "links" : [ ]
  }, {
    "name" : "public char previous()",
    "returnType" : "char",
    "comment" : "\n        * Implements CharacterIterator.previous() for String.\n        * @see CharacterIterator#previous\n        ",
    "links" : [ ]
  }, {
    "name" : "public int getBeginIndex()",
    "returnType" : "int",
    "comment" : "\n        * Implements CharacterIterator.getBeginIndex() for String.\n        * @see CharacterIterator#getBeginIndex\n        ",
    "links" : [ ]
  }, {
    "name" : "public int getEndIndex()",
    "returnType" : "int",
    "comment" : "\n        * Implements CharacterIterator.getEndIndex() for String.\n        * @see CharacterIterator#getEndIndex\n        ",
    "links" : [ ]
  }, {
    "name" : "public int getIndex()",
    "returnType" : "int",
    "comment" : "\n        * Implements CharacterIterator.getIndex() for String.\n        * @see CharacterIterator#getIndex\n        ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n        * Compares the equality of two ReplaceableCharacterIterator objects.\n        * @param obj the ReplaceableCharacterIterator object to be compared with.\n        * @return true if the given obj is the same as this\n        * ReplaceableCharacterIterator object; false otherwise.\n        ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n        * Computes a hashcode for this iterator.\n        * @return A hash code\n        ",
    "links" : [ ]
  }, {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "\n        * Creates a copy of this iterator.\n        * @return A copy of this\n        ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setText(Replaceable text)", "public char first()", "public char last()", "public char setIndex(int p)", "public char current()", "public char next()", "public char previous()", "public int getBeginIndex()", "public int getEndIndex()", "public int getIndex()", "public boolean equals(Object obj)", "public int hashCode()", "public Object clone()" ],
  "variableNames" : [ "text", "begin", "end", "pos" ]
}