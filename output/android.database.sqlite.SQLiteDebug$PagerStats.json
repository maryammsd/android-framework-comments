{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/database/sqlite/SQLiteDebug.java",
  "packageName" : "android.database.sqlite",
  "className" : "PagerStats",
  "comment" : "\n     * Contains statistics about the active pagers in the current process.\n     *\n     * @see #nativeGetPagerStats(PagerStats)\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "memoryUsed",
    "type" : "int",
    "comment" : " the current amount of memory checked out by sqlite using sqlite3_malloc().\n         * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html\n         ",
    "links" : [ ]
  }, {
    "name" : "pageCacheOverflow",
    "type" : "int",
    "comment" : " the number of bytes of page cache allocation which could not be sattisfied by the\n         * SQLITE_CONFIG_PAGECACHE buffer and where forced to overflow to sqlite3_malloc().\n         * The returned value includes allocations that overflowed because they where too large\n         * (they were larger than the \"sz\" parameter to SQLITE_CONFIG_PAGECACHE) and allocations\n         * that overflowed because no space was left in the page cache.\n         * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html\n         ",
    "links" : [ ]
  }, {
    "name" : "largestMemAlloc",
    "type" : "int",
    "comment" : " records the largest memory allocation request handed to sqlite3.\n         * documented at http://www.sqlite.org/c3ref/c_status_malloc_size.html\n         ",
    "links" : [ ]
  }, {
    "name" : "dbStats",
    "type" : "ArrayList<DbStats>",
    "comment" : " a list of {@link DbStats} - one for each main database opened by the applications\n         * running on the android device\n         ",
    "links" : [ "DbStats" ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "memoryUsed", "pageCacheOverflow", "largestMemAlloc", "dbStats" ]
}