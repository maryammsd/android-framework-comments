{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/RadialTimePickerView.java",
  "packageName" : "android.widget",
  "className" : "RadialPickerTouchHelper",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mTempRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_HOUR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_MINUTE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SHIFT_TYPE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MASK_TYPE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SHIFT_VALUE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MASK_VALUE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MINUTE_INCREMENT",
    "type" : "int",
    "comment" : " Increment in which virtual views are exposed for minutes. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfo info)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performAccessibilityAction(View host, int action, Bundle arguments)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void adjustPicker(int step)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int getVirtualViewAt(float x, float y)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getCircularDiff(int first, int second, int max)",
    "returnType" : "int",
    "comment" : "\n         * Returns the difference in degrees between two values along a circle.\n         *\n         * @param first value in the range [0,max]\n         * @param second value in the range [0,max]\n         * @param max the maximum value along the circle\n         * @return the difference in between the two values\n         ",
    "links" : [ ]
  }, {
    "name" : "protected void getVisibleVirtualViews(IntArray virtualViewIds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onPopulateEventForVirtualView(int virtualViewId, AccessibilityEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onPopulateNodeForVirtualView(int virtualViewId, AccessibilityNodeInfo node)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getVirtualViewIdAfter(int type, int value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean onPerformActionForVirtualView(int virtualViewId, int action, Bundle arguments)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int hour12To24(int hour12, int amOrPm)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int hour24To12(int hour24)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void getBoundsForVirtualView(int virtualViewId, Rect bounds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private CharSequence getVirtualViewDescription(int type, int value)",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isVirtualViewSelected(int type, int value)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int makeId(int type, int value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getTypeFromId(int id)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getValueFromId(int id)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfo info)", "public boolean performAccessibilityAction(View host, int action, Bundle arguments)", "private void adjustPicker(int step)", "protected int getVirtualViewAt(float x, float y)", "private int getCircularDiff(int first, int second, int max)", "protected void getVisibleVirtualViews(IntArray virtualViewIds)", "protected void onPopulateEventForVirtualView(int virtualViewId, AccessibilityEvent event)", "protected void onPopulateNodeForVirtualView(int virtualViewId, AccessibilityNodeInfo node)", "private int getVirtualViewIdAfter(int type, int value)", "protected boolean onPerformActionForVirtualView(int virtualViewId, int action, Bundle arguments)", "private int hour12To24(int hour12, int amOrPm)", "private int hour24To12(int hour24)", "private void getBoundsForVirtualView(int virtualViewId, Rect bounds)", "private CharSequence getVirtualViewDescription(int type, int value)", "private boolean isVirtualViewSelected(int type, int value)", "private int makeId(int type, int value)", "private int getTypeFromId(int id)", "private int getValueFromId(int id)" ],
  "variableNames" : [ "mTempRect", "TYPE_HOUR", "TYPE_MINUTE", "SHIFT_TYPE", "MASK_TYPE", "SHIFT_VALUE", "MASK_VALUE", "MINUTE_INCREMENT" ]
}