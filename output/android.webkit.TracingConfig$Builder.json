{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/TracingConfig.java",
  "packageName" : "android.webkit",
  "className" : "Builder",
  "comment" : "\n     * Builder used to create {@link TracingConfig} objects.\n     * <p>\n     * Examples:\n     * <pre class=\"prettyprint\">\n     *   // Create a configuration with default options: {@link #CATEGORIES_NONE},\n     *   // {@link #RECORD_CONTINUOUSLY}.\n     *   <code>new TracingConfig.Builder().build()</code>\n     *\n     *   // Record trace events from the \"web developer\" predefined category sets.\n     *   // Uses a ring buffer (the default {@link #RECORD_CONTINUOUSLY} mode) for\n     *   // internal storage during tracing.\n     *   <code>new TracingConfig.Builder().addCategories(CATEGORIES_WEB_DEVELOPER).build()</code>\n     *\n     *   // Record trace events from the \"rendering\" and \"input latency\" predefined\n     *   // category sets.\n     *   <code>new TracingConfig.Builder().addCategories(CATEGORIES_RENDERING,\n     *                                     CATEGORIES_INPUT_LATENCY).build()</code>\n     *\n     *   // Record only the trace events from the \"browser\" category.\n     *   <code>new TracingConfig.Builder().addCategories(\"browser\").build()</code>\n     *\n     *   // Record only the trace events matching the \"blink*\" and \"renderer*\" patterns\n     *   // (e.g. \"blink.animations\", \"renderer_host\" and \"renderer.scheduler\" categories).\n     *   <code>new TracingConfig.Builder().addCategories(\"blink*\",\"renderer*\").build()</code>\n     *\n     *   // Record events from the \"web developer\" predefined category set and events from\n     *   // the \"disabled-by-default-v8.gc\" category to understand where garbage collection\n     *   // is being triggered. Uses a limited size buffer for internal storage during tracing.\n     *   <code>new TracingConfig.Builder().addCategories(CATEGORIES_WEB_DEVELOPER)\n     *                              .addCategories(\"disabled-by-default-v8.gc\")\n     *                              .setTracingMode(RECORD_UNTIL_FULL).build()</code>\n     * </pre>\n     ",
  "links" : [ "android.webkit.TracingConfig", "#RECORD_CONTINUOUSLY", "#CATEGORIES_NONE" ],
  "variables" : [ {
    "name" : "mPredefinedCategories",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomIncludedCategories",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTracingMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public TracingConfig build()",
    "returnType" : "TracingConfig",
    "comment" : "\n         * Build {@link TracingConfig} using the current settings.\n         *\n         * @return The {@link TracingConfig} with the current settings.\n         ",
    "links" : [ "android.webkit.TracingConfig" ]
  }, {
    "name" : "public Builder addCategories(@PredefinedCategories int... predefinedCategories)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds predefined sets of categories to be included in the trace output.\n         *\n         * A predefined category set can be one of {@link #CATEGORIES_NONE},\n         * {@link #CATEGORIES_ALL}, {@link #CATEGORIES_ANDROID_WEBVIEW},\n         * {@link #CATEGORIES_WEB_DEVELOPER}, {@link #CATEGORIES_INPUT_LATENCY},\n         * {@link #CATEGORIES_RENDERING}, {@link #CATEGORIES_JAVASCRIPT_AND_RENDERING} or\n         * {@link #CATEGORIES_FRAME_VIEWER}.\n         *\n         * @param predefinedCategories A list or bitmask of predefined category sets.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "#CATEGORIES_JAVASCRIPT_AND_RENDERING", "#CATEGORIES_INPUT_LATENCY", "#CATEGORIES_ANDROID_WEBVIEW", "#CATEGORIES_FRAME_VIEWER", "#CATEGORIES_RENDERING", "#CATEGORIES_WEB_DEVELOPER", "#CATEGORIES_NONE", "#CATEGORIES_ALL" ]
  }, {
    "name" : "public Builder addCategories(String... categories)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds custom categories to be included in trace output.\n         *\n         * Note that the categories are defined by the currently-in-use version of WebView. They\n         * live in chromium code and are not part of the Android API.\n         * See <a href=\"https://www.chromium.org/developers/how-tos/trace-event-profiling-tool\">\n         * chromium documentation on tracing</a> for more details.\n         *\n         * @param categories A list of category patterns. A category pattern can contain wildcards,\n         *        e.g. \"blink*\" or full category name e.g. \"renderer.scheduler\".\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addCategories(Collection<String> categories)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds custom categories to be included in trace output.\n         *\n         * Same as {@link #addCategories(String...)} but allows to pass a Collection as a parameter.\n         *\n         * @param categories A list of category patterns.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "#addCategories(String...)" ]
  }, {
    "name" : "public Builder setTracingMode(@TracingMode int tracingMode)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the tracing mode for this configuration.\n         * When tracingMode is not set explicitly, the default is {@link #RECORD_CONTINUOUSLY}.\n         *\n         * @param tracingMode The tracing mode to use, one of {@link #RECORD_UNTIL_FULL} or\n         *                    {@link #RECORD_CONTINUOUSLY}.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "#RECORD_CONTINUOUSLY", "#RECORD_UNTIL_FULL" ]
  } ],
  "methodNames" : [ "public TracingConfig build()", "public Builder addCategories(@PredefinedCategories int... predefinedCategories)", "public Builder addCategories(String... categories)", "public Builder addCategories(Collection<String> categories)", "public Builder setTracingMode(@TracingMode int tracingMode)" ],
  "variableNames" : [ "mPredefinedCategories", "mCustomIncludedCategories", "mTracingMode" ]
}