{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/WindowContentFrameStats.java",
  "packageName" : "android.view",
  "className" : "WindowContentFrameStats",
  "comment" : "\n * This class contains window content frame statistics. For example, a window content\n * is rendred in frames when a view is scrolled. The frame statistics are a snapshot\n * for the time interval from {@link #getStartTimeNano()} to {@link #getEndTimeNano()}.\n * <p>\n * The key idea is that in order to provide a smooth user experience an application\n * has to draw a frame at a specific time interval obtained by calling {@link\n * #getRefreshPeriodNano()}. If the application does not render a frame every refresh\n * period the user will see irregular UI transitions.\n * </p>\n * <p>\n * An application posts a frame for presentation by synchronously rendering its contents\n * in a buffer which is then posted or posting a buffer to which the application is\n * asychronously rendering the content via GL. After the frame is posted and rendered\n * (potentially asynchronosly) it is presented to the user. The time a frame was posted\n * can be obtained via {@link #getFramePostedTimeNano(int)}, the time a frame content\n * was rendered and ready for dsiplay (GL case) via {@link #getFrameReadyTimeNano(int)},\n * and the time a frame was presented on the screen via {@link #getFramePresentedTimeNano(int)}.\n * </p>\n ",
  "variables" : [ {
    "name" : "mFramesPostedTimeNano",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFramesReadyTimeNano",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<WindowContentFrameStats>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void init(long refreshPeriodNano, long[] framesPostedTimeNano, long[] framesPresentedTimeNano, long[] framesReadyTimeNano)",
    "returnType" : "void",
    "comment" : "\n     * Initializes this isntance.\n     *\n     * @param refreshPeriodNano The display refresh period.\n     * @param framesPostedTimeNano The times in milliseconds for when the frame contents were posted.\n     * @param framesPresentedTimeNano The times in milliseconds for when the frame contents were presented.\n     * @param framesReadyTimeNano The times in milliseconds for when the frame contents were ready to be presented.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getFramePostedTimeNano(int index)",
    "returnType" : "long",
    "comment" : "\n     * Get the time a frame at a given index was posted by the producer (e.g. the application).\n     * It is either explicitly set or defaulted to the time when the render buffer was posted.\n     * <p>\n     * <strong>Note:</strong> A frame can be posted and still it contents being rendered\n     * asynchronously in GL. To get the time the frame content was completely rendered and\n     * ready to display call {@link #getFrameReadyTimeNano(int)}.\n     * </p>\n     *\n     * @param index The frame index.\n     * @return The posted time in nanoseconds.\n     ",
    "links" : [ "#getFrameReadyTimeNano" ]
  }, {
    "name" : "public long getFrameReadyTimeNano(int index)",
    "returnType" : "long",
    "comment" : "\n     * Get the time a frame at a given index was ready for presentation.\n     * <p>\n     * <strong>Note:</strong> A frame can be posted and still it contents being rendered\n     * asynchronously in GL. In such a case this is the time when the frame contents were\n     * completely rendered.\n     * </p>\n     *\n     * @param index The frame index.\n     * @return The ready time in nanoseconds or {@link #UNDEFINED_TIME_NANO}\n     *         if the frame is not ready yet.\n     ",
    "links" : [ "#UNDEFINED_TIME_NANO" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mFramesPostedTimeNano", "mFramesReadyTimeNano", "CREATOR" ],
  "methodNames" : [ "public void init(long refreshPeriodNano, long[] framesPostedTimeNano, long[] framesPresentedTimeNano, long[] framesReadyTimeNano)", "public long getFramePostedTimeNano(int index)", "public long getFrameReadyTimeNano(int index)", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)", "public String toString()" ]
}