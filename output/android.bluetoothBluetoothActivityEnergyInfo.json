{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/bluetooth/BluetoothActivityEnergyInfo.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothActivityEnergyInfo",
  "comment" : "\n * Record of energy and activity information from controller and\n * underlying bt stack state.Timestamp the record with system\n * time\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mTimestamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBluetoothStackState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControllerTxTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControllerRxTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControllerIdleTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControllerEnergyUsed",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUidTraffic",
    "type" : "UidTraffic[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BT_STACK_STATE_INVALID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BT_STACK_STATE_STATE_ACTIVE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BT_STACK_STATE_STATE_SCANNING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BT_STACK_STATE_STATE_IDLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<BluetoothActivityEnergyInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getBluetoothStackState()",
    "returnType" : "int",
    "comment" : "\n     * @return bt stack reported state\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getControllerTxTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * @return tx time in ms\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getControllerRxTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * @return rx time in ms\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getControllerIdleTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * @return idle time in ms\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getControllerEnergyUsed()",
    "returnType" : "long",
    "comment" : "\n     * product of current(mA), voltage(V) and time(ms)\n     *\n     * @return energy used\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTimeStamp()",
    "returnType" : "long",
    "comment" : "\n     * @return timestamp(real time elapsed in milliseconds since boot) of record creation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public UidTraffic[] getUidTraffic()",
    "returnType" : "UidTraffic[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setUidTraffic(UidTraffic[] traffic)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isValid()",
    "returnType" : "boolean",
    "comment" : "\n     * @return if the record is valid\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mTimestamp", "mBluetoothStackState", "mControllerTxTimeMs", "mControllerRxTimeMs", "mControllerIdleTimeMs", "mControllerEnergyUsed", "mUidTraffic", "BT_STACK_STATE_INVALID", "BT_STACK_STATE_STATE_ACTIVE", "BT_STACK_STATE_STATE_SCANNING", "BT_STACK_STATE_STATE_IDLE", "CREATOR" ],
  "methodNames" : [ "public String toString()", "public void writeToParcel(Parcel out, int flags)", "public int describeContents()", "public int getBluetoothStackState()", "public long getControllerTxTimeMillis()", "public long getControllerRxTimeMillis()", "public long getControllerIdleTimeMillis()", "public long getControllerEnergyUsed()", "public long getTimeStamp()", "public UidTraffic[] getUidTraffic()", "public void setUidTraffic(UidTraffic[] traffic)", "public boolean isValid()" ]
}