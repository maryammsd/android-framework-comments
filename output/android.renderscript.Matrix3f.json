{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/renderscript/Matrix3f.java",
  "packageName" : "android.renderscript",
  "className" : "Matrix3f",
  "comment" : "\n * Class for exposing the native RenderScript rs_matrix3x3 type back to the Android system.\n *\n * @deprecated Renderscript has been deprecated in API level 31. Please refer to the <a\n * href=\"https://developer.android.com/guide/topics/renderscript/migration-guide\">migration\n * guide</a> for the proposed alternatives.\n *",
  "links" : [ ],
  "variables" : [ {
    "name" : "mMat",
    "type" : "float[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public float[] getArray()",
    "returnType" : "float[]",
    "comment" : "\n    * Return a reference to the internal array representing matrix\n    * values. Modifying this array will also change the matrix\n    *\n    * @return internal array representing the matrix\n    ",
    "links" : [ ]
  }, {
    "name" : "public float get(int x, int y)",
    "returnType" : "float",
    "comment" : "\n    * Returns the value for a given row and column\n    *\n    * @param x column of the value to return\n    * @param y row of the value to return\n    *\n    * @return value in the yth row and xth column\n    ",
    "links" : [ ]
  }, {
    "name" : "public void set(int x, int y, float v)",
    "returnType" : "void",
    "comment" : "\n    * Sets the value for a given row and column\n    *\n    * @param x column of the value to set\n    * @param y row of the value to set\n    ",
    "links" : [ ]
  }, {
    "name" : "public void loadIdentity()",
    "returnType" : "void",
    "comment" : "\n    * Sets the matrix values to identity\n    ",
    "links" : [ ]
  }, {
    "name" : "public void load(Matrix3f src)",
    "returnType" : "void",
    "comment" : "\n    * Sets the values of the matrix to those of the parameter\n    *\n    * @param src matrix to load the values from\n    ",
    "links" : [ ]
  }, {
    "name" : "public void loadRotate(float rot, float x, float y, float z)",
    "returnType" : "void",
    "comment" : "\n    * Sets current values to be a rotation matrix of certain angle\n    * about a given axis\n    *\n    * @param rot angle of rotation\n    * @param x rotation axis x\n    * @param y rotation axis y\n    * @param z rotation axis z\n    ",
    "links" : [ ]
  }, {
    "name" : "public void loadRotate(float rot)",
    "returnType" : "void",
    "comment" : "\n    * Makes the upper 2x2 a rotation matrix of the given angle\n    *\n    * @param rot rotation angle\n    ",
    "links" : [ ]
  }, {
    "name" : "public void loadScale(float x, float y)",
    "returnType" : "void",
    "comment" : "\n    * Makes the upper 2x2 a scale matrix of given dimensions\n    *\n    * @param x scale component x\n    * @param y scale component y\n    ",
    "links" : [ ]
  }, {
    "name" : "public void loadScale(float x, float y, float z)",
    "returnType" : "void",
    "comment" : "\n    * Sets current values to be a scale matrix of given dimensions\n    *\n    * @param x scale component x\n    * @param y scale component y\n    * @param z scale component z\n    ",
    "links" : [ ]
  }, {
    "name" : "public void loadTranslate(float x, float y)",
    "returnType" : "void",
    "comment" : "\n    * Sets current values to be a translation matrix of given\n    * dimensions\n    *\n    * @param x translation component x\n    * @param y translation component y\n    ",
    "links" : [ ]
  }, {
    "name" : "public void loadMultiply(Matrix3f lhs, Matrix3f rhs)",
    "returnType" : "void",
    "comment" : "\n    * Sets current values to be the result of multiplying two given\n    * matrices\n    *\n    * @param lhs left hand side matrix\n    * @param rhs right hand side matrix\n    ",
    "links" : [ ]
  }, {
    "name" : "public void multiply(Matrix3f rhs)",
    "returnType" : "void",
    "comment" : "\n    * Post-multiplies the current matrix by a given parameter\n    *\n    * @param rhs right hand side to multiply by\n    ",
    "links" : [ ]
  }, {
    "name" : "public void rotate(float rot, float x, float y, float z)",
    "returnType" : "void",
    "comment" : "\n    * Modifies the current matrix by post-multiplying it with a\n    * rotation matrix of certain angle about a given axis\n    *\n    * @param rot angle of rotation\n    * @param x rotation axis x\n    * @param y rotation axis y\n    * @param z rotation axis z\n    ",
    "links" : [ ]
  }, {
    "name" : "public void rotate(float rot)",
    "returnType" : "void",
    "comment" : "\n    * Modifies the upper 2x2 of the current matrix by\n    * post-multiplying it with a rotation matrix of given angle\n    *\n    * @param rot angle of rotation\n    ",
    "links" : [ ]
  }, {
    "name" : "public void scale(float x, float y)",
    "returnType" : "void",
    "comment" : "\n    * Modifies the upper 2x2 of the current matrix by\n    * post-multiplying it with a scale matrix of given dimensions\n    *\n    * @param x scale component x\n    * @param y scale component y\n    ",
    "links" : [ ]
  }, {
    "name" : "public void scale(float x, float y, float z)",
    "returnType" : "void",
    "comment" : "\n    * Modifies the current matrix by post-multiplying it with a\n    * scale matrix of given dimensions\n    *\n    * @param x scale component x\n    * @param y scale component y\n    * @param z scale component z\n    ",
    "links" : [ ]
  }, {
    "name" : "public void translate(float x, float y)",
    "returnType" : "void",
    "comment" : "\n    * Modifies the current matrix by post-multiplying it with a\n    * translation matrix of given dimensions\n    *\n    * @param x translation component x\n    * @param y translation component y\n    ",
    "links" : [ ]
  }, {
    "name" : "public void transpose()",
    "returnType" : "void",
    "comment" : "\n    * Sets the current matrix to its transpose\n    ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public float[] getArray()", "public float get(int x, int y)", "public void set(int x, int y, float v)", "public void loadIdentity()", "public void load(Matrix3f src)", "public void loadRotate(float rot, float x, float y, float z)", "public void loadRotate(float rot)", "public void loadScale(float x, float y)", "public void loadScale(float x, float y, float z)", "public void loadTranslate(float x, float y)", "public void loadMultiply(Matrix3f lhs, Matrix3f rhs)", "public void multiply(Matrix3f rhs)", "public void rotate(float rot, float x, float y, float z)", "public void rotate(float rot)", "public void scale(float x, float y)", "public void scale(float x, float y, float z)", "public void translate(float x, float y)", "public void transpose()" ],
  "variableNames" : [ "mMat" ]
}