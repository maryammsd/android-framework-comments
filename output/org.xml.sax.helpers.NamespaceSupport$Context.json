{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/xml/sax/helpers/NamespaceSupport.java",
  "packageName" : "org.xml.sax.helpers",
  "className" : "Context",
  "comment" : "\n     * Internal class for a single Namespace context.\n     *\n     * <p>This module caches and reuses Namespace contexts,\n     * so the number allocated\n     * will be equal to the element depth of the document, not to the total\n     * number of elements (i.e. 5-10 rather than tens of thousands).\n     * Also, data structures used to represent contexts are shared when\n     * possible (child contexts without declarations) to further reduce\n     * the amount of memory that's consumed.\n     * </p>\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "prefixTable",
    "type" : "Hashtable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "uriTable",
    "type" : "Hashtable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "elementNameTable",
    "type" : "Hashtable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "attributeNameTable",
    "type" : "Hashtable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "defaultNS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "declsOK",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "declarations",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "declSeen",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "parent",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void setParent(Context parent)",
    "returnType" : "void",
    "comment" : "\n     * (Re)set the parent of this Namespace context.\n     * The context must either have been freshly constructed,\n     * or must have been cleared.\n     *\n     * @param context The parent Namespace context object.\n     ",
    "links" : [ ]
  }, {
    "name" : " void clear()",
    "returnType" : "void",
    "comment" : "\n     * Makes associated state become collectible,\n     * invalidating this context.\n     * {@link #setParent} must be called before\n     * this context may be used again.\n     ",
    "links" : [ "#setParent" ]
  }, {
    "name" : " void declarePrefix(String prefix, String uri)",
    "returnType" : "void",
    "comment" : "\n     * Declare a Namespace prefix for this context.\n     *\n     * @param prefix The prefix to declare.\n     * @param uri The associated Namespace URI.\n     * @see org.xml.sax.helpers.NamespaceSupport#declarePrefix\n     ",
    "links" : [ ]
  }, {
    "name" : " String[] processName(String qName, boolean isAttribute)",
    "returnType" : "String[]",
    "comment" : "\n     * Process an XML qualified name in this context.\n     *\n     * @param qName The XML qualified name.\n     * @param isAttribute true if this is an attribute name.\n     * @return An array of three strings containing the\n     *         URI part (or empty string), the local part,\n     *         and the raw name, all internalized, or null\n     *         if there is an undeclared prefix.\n     * @see org.xml.sax.helpers.NamespaceSupport#processName\n     ",
    "links" : [ ]
  }, {
    "name" : " String getURI(String prefix)",
    "returnType" : "String",
    "comment" : "\n     * Look up the URI associated with a prefix in this context.\n     *\n     * @param prefix The prefix to look up.\n     * @return The associated Namespace URI, or null if none is\n     *         declared.\n     * @see org.xml.sax.helpers.NamespaceSupport#getURI\n     ",
    "links" : [ ]
  }, {
    "name" : " String getPrefix(String uri)",
    "returnType" : "String",
    "comment" : "\n     * Look up one of the prefixes associated with a URI in this context.\n     *\n     * <p>Since many prefixes may be mapped to the same URI,\n     * the return value may be unreliable.</p>\n     *\n     * @param uri The URI to look up.\n     * @return The associated prefix, or null if none is declared.\n     * @see org.xml.sax.helpers.NamespaceSupport#getPrefix\n     ",
    "links" : [ ]
  }, {
    "name" : " Enumeration getDeclaredPrefixes()",
    "returnType" : "Enumeration",
    "comment" : "\n     * Return an enumeration of prefixes declared in this context.\n     *\n     * @return An enumeration of prefixes (possibly empty).\n     * @see org.xml.sax.helpers.NamespaceSupport#getDeclaredPrefixes\n     ",
    "links" : [ ]
  }, {
    "name" : " Enumeration getPrefixes()",
    "returnType" : "Enumeration",
    "comment" : "\n     * Return an enumeration of all prefixes currently in force.\n     *\n     * <p>The default prefix, if in force, is <em>not</em>\n     * returned, and will have to be checked for separately.</p>\n     *\n     * @return An enumeration of prefixes (never empty).\n     * @see org.xml.sax.helpers.NamespaceSupport#getPrefixes\n     ",
    "links" : [ ]
  }, {
    "name" : "private void copyTables()",
    "returnType" : "void",
    "comment" : "\n     * Copy on write for the internal tables in this context.\n     *\n     * <p>This class is optimized for the normal case where most\n     * elements do not contain Namespace declarations.</p>\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void setParent(Context parent)", " void clear()", " void declarePrefix(String prefix, String uri)", " String[] processName(String qName, boolean isAttribute)", " String getURI(String prefix)", " String getPrefix(String uri)", " Enumeration getDeclaredPrefixes()", " Enumeration getPrefixes()", "private void copyTables()" ],
  "variableNames" : [ "prefixTable", "uriTable", "elementNameTable", "attributeNameTable", "defaultNS", "declsOK", "declarations", "declSeen", "parent" ]
}