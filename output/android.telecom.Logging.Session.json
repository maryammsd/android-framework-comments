{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/Logging/Session.java",
  "packageName" : "android.telecom.Logging",
  "className" : "Session",
  "comment" : "\n * Stores information about a thread's point of entry into that should persist until that thread\n * exits.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "START_SESSION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "START_EXTERNAL_SESSION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATE_SUBSESSION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONTINUE_SUBSESSION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "END_SUBSESSION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "END_SESSION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SUBSESSION_SEPARATION_CHAR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SESSION_SEPARATION_CHAR_CHILD",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTERNAL_INDICATOR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRUNCATE_STRING",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SESSION_RECURSION_LIMIT",
    "type" : "int",
    "comment" : " Prevent infinite recursion by setting a reasonable limit.",
    "links" : [ ]
  }, {
    "name" : "UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Initial value of mExecutionEndTimeMs and the final value of {@link #getLocalExecutionTime()}\n     * if the Session is canceled.\n     ",
    "links" : [ "#getLocalExecutionTime()" ]
  }, {
    "name" : "mSessionId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShortMethodName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutionStartTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutionEndTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParentSession",
    "type" : "Session",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChildSessions",
    "type" : "ArrayList<Session>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsCompleted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsExternal",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChildCounter",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsStartedFromActiveSession",
    "type" : "boolean",
    "comment" : " that the Log.endSession() calls match up.",
    "links" : [ ]
  }, {
    "name" : "mOwnerInfo",
    "type" : "String",
    "comment" : " to make Logging easier. This info will be provided in parentheses along with the session.",
    "links" : [ ]
  }, {
    "name" : "mFullMethodPathCache",
    "type" : "String",
    "comment" : " be calculated once.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setSessionId(@NonNull String sessionId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getShortMethodName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setShortMethodName(String shortMethodName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setIsExternal(boolean isExternal)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isExternal()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setParentSession(Session parentSession)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addChild(Session childSession)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeChild(Session child)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getExecutionStartTimeMilliseconds()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setExecutionStartTimeMs(long startTimeMs)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Session getParentSession()",
    "returnType" : "Session",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ArrayList<Session> getChildSessions()",
    "returnType" : "ArrayList<Session>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isSessionCompleted()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isStartedFromActiveSession()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Info getInfo()",
    "returnType" : "Info",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Info getExternalInfo(@Nullable String ownerInfo)",
    "returnType" : "Info",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getOwnerInfo()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getSessionId()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void markSessionCompleted(long executionEndTimeMs)",
    "returnType" : "void",
    "comment" : " as well.",
    "links" : [ ]
  }, {
    "name" : "public long getLocalExecutionTime()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized String getNextChildId()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String getFullSessionId()",
    "returnType" : "String",
    "comment" : " Builds full session id recursively",
    "links" : [ ]
  }, {
    "name" : "private String getFullSessionId(int parentCount)",
    "returnType" : "String",
    "comment" : " keep track of calls and bail if we hit the recursion limit",
    "links" : [ ]
  }, {
    "name" : "private Session getRootSession(String callingMethod)",
    "returnType" : "Session",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String printFullSessionTree()",
    "returnType" : "String",
    "comment" : " Print out the full Session tree from any subsession node",
    "links" : [ ]
  }, {
    "name" : "private String printSessionTree()",
    "returnType" : "String",
    "comment" : " Recursively move down session tree using DFS, but print out each node when it is reached.",
    "links" : [ ]
  }, {
    "name" : "private void printSessionTree(int tabI, StringBuilder sb, int currChildCount)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getFullMethodPath(boolean truncatePath)",
    "returnType" : "String",
    "comment" : " recent) will be truncated to \"...\"",
    "links" : [ ]
  }, {
    "name" : "private synchronized void getFullMethodPath(StringBuilder sb, boolean truncatePath, int parentCount)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isSessionExternal()",
    "returnType" : "boolean",
    "comment" : " Recursively move to the top of the tree to see if the parent session is external.",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setSessionId(@NonNull String sessionId)", "public String getShortMethodName()", "public void setShortMethodName(String shortMethodName)", "public void setIsExternal(boolean isExternal)", "public boolean isExternal()", "public void setParentSession(Session parentSession)", "public void addChild(Session childSession)", "public void removeChild(Session child)", "public long getExecutionStartTimeMilliseconds()", "public void setExecutionStartTimeMs(long startTimeMs)", "public Session getParentSession()", "public ArrayList<Session> getChildSessions()", "public boolean isSessionCompleted()", "public boolean isStartedFromActiveSession()", "public Info getInfo()", "public Info getExternalInfo(@Nullable String ownerInfo)", "public String getOwnerInfo()", "public String getSessionId()", "public void markSessionCompleted(long executionEndTimeMs)", "public long getLocalExecutionTime()", "public synchronized String getNextChildId()", "private String getFullSessionId()", "private String getFullSessionId(int parentCount)", "private Session getRootSession(String callingMethod)", "public String printFullSessionTree()", "private String printSessionTree()", "private void printSessionTree(int tabI, StringBuilder sb, int currChildCount)", "public String getFullMethodPath(boolean truncatePath)", "private synchronized void getFullMethodPath(StringBuilder sb, boolean truncatePath, int parentCount)", "private boolean isSessionExternal()", "public int hashCode()", "public boolean equals(Object o)", "public String toString()" ],
  "variableNames" : [ "LOG_TAG", "START_SESSION", "START_EXTERNAL_SESSION", "CREATE_SUBSESSION", "CONTINUE_SUBSESSION", "END_SUBSESSION", "END_SESSION", "SUBSESSION_SEPARATION_CHAR", "SESSION_SEPARATION_CHAR_CHILD", "EXTERNAL_INDICATOR", "TRUNCATE_STRING", "SESSION_RECURSION_LIMIT", "UNDEFINED", "mSessionId", "mShortMethodName", "mExecutionStartTimeMs", "mExecutionEndTimeMs", "mParentSession", "mChildSessions", "mIsCompleted", "mIsExternal", "mChildCounter", "mIsStartedFromActiveSession", "mOwnerInfo", "mFullMethodPathCache" ]
}