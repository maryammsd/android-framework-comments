{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/ProfilerInfo.java",
  "packageName" : "android.app",
  "className" : "ProfilerInfo",
  "comment" : "\n * System private API for passing profiler settings.\n *\n * {@hide}\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "OUTPUT_VERSION_DEFAULT",
    "type" : "int",
    "comment" : " Version of the profiler output",
    "links" : [ ]
  }, {
    "name" : "CLOCK_TYPE_DEFAULT",
    "type" : "int",
    "comment" : " kDefaultTraceClockSource in art/runtime/runtime_globals.h).",
    "links" : [ ]
  }, {
    "name" : "CLOCK_TYPE_WALL",
    "type" : "int",
    "comment" : " The flag values are defined in ART (see TraceFlag in art/runtime/trace.h).",
    "links" : [ ]
  }, {
    "name" : "CLOCK_TYPE_THREAD_CPU",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CLOCK_TYPE_DUAL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRACE_FORMAT_VERSION_SHIFT",
    "type" : "int",
    "comment" : " match with kTraceFormatVersionShift defined in art/runtime/trace.h.",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "profileFile",
    "type" : "String",
    "comment" : " Name of profile output file. ",
    "links" : [ ]
  }, {
    "name" : "profileFd",
    "type" : "ParcelFileDescriptor",
    "comment" : " File descriptor for profile output file, can be null. ",
    "links" : [ ]
  }, {
    "name" : "samplingInterval",
    "type" : "int",
    "comment" : " Indicates sample profiling when nonzero, interval in microseconds. ",
    "links" : [ ]
  }, {
    "name" : "autoStopProfiler",
    "type" : "boolean",
    "comment" : " Automatically stop the profiler when the app goes idle. ",
    "links" : [ ]
  }, {
    "name" : "streamingOutput",
    "type" : "boolean",
    "comment" : "\n     * Indicates whether to stream the profiling info to the out file continuously.\n     ",
    "links" : [ ]
  }, {
    "name" : "agent",
    "type" : "String",
    "comment" : "\n     * Denotes an agent (and its parameters) to attach for profiling.\n     ",
    "links" : [ ]
  }, {
    "name" : "attachAgentDuringBind",
    "type" : "boolean",
    "comment" : "\n     * Whether the {@link agent} should be attached early (before bind-application) or during\n     * bind-application. Agents attached prior to binding cannot be loaded from the app's APK\n     * directly and must be given as an absolute path (or available in the default LD_LIBRARY_PATH).\n     * Agents attached during bind-application will miss early setup (e.g., resource initialization\n     * and classloader generation), but are searched in the app's library search path.\n     ",
    "links" : [ "agent" ]
  }, {
    "name" : "clockType",
    "type" : "int",
    "comment" : "\n     * Indicates the clock source to be used for profiling. The source could be wallclock, thread\n     * cpu or both\n     ",
    "links" : [ ]
  }, {
    "name" : "profilerOutputVersion",
    "type" : "int",
    "comment" : "\n     * Indicates the version of profiler output.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ProfilerInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int getClockTypeFromString(String type)",
    "returnType" : "int",
    "comment" : "\n     * Get the value for the clock type corresponding to the option string passed to the activity\n     * manager. am profile start / am start-activity start-profiler commands accept clock-type\n     * option to choose the source of timestamps when profiling. This function maps the option\n     * string to the value of flags that is used when calling VMDebug.startMethodTracing\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getFlagsForOutputVersion(int version)",
    "returnType" : "int",
    "comment" : "\n     * Get the flags that need to be passed to VMDebug.startMethodTracing to specify the desired\n     * output format.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ProfilerInfo setAgent(String agent, boolean attachAgentDuringBind)",
    "returnType" : "ProfilerInfo",
    "comment" : "\n     * Return a new ProfilerInfo instance, with fields populated from this object,\n     * and {@link agent} and {@link attachAgentDuringBind} as given.\n     ",
    "links" : [ "attachAgentDuringBind", "agent" ]
  }, {
    "name" : "public void closeFd()",
    "returnType" : "void",
    "comment" : "\n     * Close profileFd, if it is open. The field will be null after a call to this function.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dumpDebug(ProtoOutputStream proto, long fieldId)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int getClockTypeFromString(String type)", "public static int getFlagsForOutputVersion(int version)", "public ProfilerInfo setAgent(String agent, boolean attachAgentDuringBind)", "public void closeFd()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "public void dumpDebug(ProtoOutputStream proto, long fieldId)", "public boolean equals(@Nullable Object o)", "public int hashCode()" ],
  "variableNames" : [ "OUTPUT_VERSION_DEFAULT", "CLOCK_TYPE_DEFAULT", "CLOCK_TYPE_WALL", "CLOCK_TYPE_THREAD_CPU", "CLOCK_TYPE_DUAL", "TRACE_FORMAT_VERSION_SHIFT", "TAG", "profileFile", "profileFd", "samplingInterval", "autoStopProfiler", "streamingOutput", "agent", "attachAgentDuringBind", "clockType", "profilerOutputVersion", "CREATOR" ]
}