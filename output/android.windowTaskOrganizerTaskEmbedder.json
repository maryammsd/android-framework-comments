{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/window/TaskOrganizerTaskEmbedder.java",
  "packageName" : "android.window",
  "className" : "TaskOrganizerTaskEmbedder",
  "comment" : "\n * A component which handles embedded display of tasks within another window. The embedded task can\n * be presented using the SurfaceControl provided from {@link #getSurfaceControl()}.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTaskOrganizer",
    "type" : "TaskOrganizer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTaskInfo",
    "type" : "ActivityManager.RunningTaskInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTaskToken",
    "type" : "WindowContainerToken",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTaskLeash",
    "type" : "SurfaceControl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingNotifyBoundsChanged",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isInitialized()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether this container has been initialized.\n     *\n     * @return true if initialized\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean onInitialize()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean onRelease()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void start()",
    "returnType" : "void",
    "comment" : "\n     * Starts presentation of tasks in this container.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void stop()",
    "returnType" : "void",
    "comment" : "\n     * Stops presentation of tasks in this container.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void notifyBoundsChanged()",
    "returnType" : "void",
    "comment" : "\n     * This should be called whenever the position or size of the surface changes\n     * or if touchable areas above the surface are added or removed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void performBackPress()",
    "returnType" : "void",
    "comment" : "\n     * Injects a pair of down/up key events with keycode {@link KeyEvent#KEYCODE_BACK} to the\n     * virtual display.\n     ",
    "links" : [ "KeyEvent#KEYCODE_BACK" ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : " An opaque unique identifier for this task surface among others being managed by the app. ",
    "links" : [ ]
  }, {
    "name" : "protected ActivityOptions prepareActivityOptions(ActivityOptions options)",
    "returnType" : "ActivityOptions",
    "comment" : "\n     * Check if container is ready to launch and create {@link ActivityOptions} to target the\n     * virtual display.\n     * @param options The existing options to amend, or null if the caller wants new options to be\n     *                created\n     ",
    "links" : [ "ActivityOptions" ]
  }, {
    "name" : "private int getTaskId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void resetTaskInfo()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void log(String msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DEBUG", "mTaskOrganizer", "mTaskInfo", "mTaskToken", "mTaskLeash", "mPendingNotifyBoundsChanged" ],
  "methodNames" : [ "public boolean isInitialized()", "public boolean onInitialize()", "protected boolean onRelease()", "public void start()", "public void stop()", "public void notifyBoundsChanged()", "public void performBackPress()", "public int getId()", "protected ActivityOptions prepareActivityOptions(ActivityOptions options)", "private int getTaskId()", "private void resetTaskInfo()", "private void log(String msg)" ]
}