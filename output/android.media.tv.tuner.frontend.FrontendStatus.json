{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/tv/tuner/frontend/FrontendStatus.java",
  "packageName" : "android.media.tv.tuner.frontend",
  "className" : "FrontendStatus",
  "comment" : "\n * Frontend status.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "FRONTEND_STATUS_TYPE_DEMOD_LOCK",
    "type" : "int",
    "comment" : "\n     * Lock status for Demod.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_SNR",
    "type" : "int",
    "comment" : "\n     * Signal to Noise Ratio.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_BER",
    "type" : "int",
    "comment" : "\n     * Bit Error Ratio.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_PER",
    "type" : "int",
    "comment" : "\n     * Packages Error Ratio.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_PRE_BER",
    "type" : "int",
    "comment" : "\n     * Bit Error Ratio before FEC.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_SIGNAL_QUALITY",
    "type" : "int",
    "comment" : "\n     * Signal Quality (0..100). Good data over total data in percent can be\n     * used as a way to present Signal Quality.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_SIGNAL_STRENGTH",
    "type" : "int",
    "comment" : "\n     * Signal Strength.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_SYMBOL_RATE",
    "type" : "int",
    "comment" : "\n     * Symbol Rate in symbols per second.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_FEC",
    "type" : "int",
    "comment" : "\n     * Forward Error Correction Type.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_MODULATION",
    "type" : "int",
    "comment" : "\n     * Modulation Type.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_SPECTRAL",
    "type" : "int",
    "comment" : "\n     * Spectral Inversion Type.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_LNB_VOLTAGE",
    "type" : "int",
    "comment" : "\n     * LNB Voltage.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_PLP_ID",
    "type" : "int",
    "comment" : "\n     * Physical Layer Pipe ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_EWBS",
    "type" : "int",
    "comment" : "\n     * Status for Emergency Warning Broadcasting System.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_AGC",
    "type" : "int",
    "comment" : "\n     * Automatic Gain Control.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_LNA",
    "type" : "int",
    "comment" : "\n     * Low Noise Amplifier.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_LAYER_ERROR",
    "type" : "int",
    "comment" : "\n     * Error status by layer.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_MER",
    "type" : "int",
    "comment" : "\n     * Modulation Error Ratio.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_FREQ_OFFSET",
    "type" : "int",
    "comment" : "\n     * Difference between tuning frequency and actual locked frequency.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_HIERARCHY",
    "type" : "int",
    "comment" : "\n     * Hierarchy for DVBT.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_RF_LOCK",
    "type" : "int",
    "comment" : "\n     * Lock status for RF.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_STATUS_TYPE_ATSC3_PLP_INFO",
    "type" : "int",
    "comment" : "\n     * PLP information in a frequency band for ATSC-3.0 frontend.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsDemodLocked",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSnr",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBer",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPer",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPerBer",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSignalQuality",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSignalStrength",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSymbolRate",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInnerFec",
    "type" : "Long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mModulation",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInversion",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLnbVoltage",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlpId",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsEwbs",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAgc",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsLnaOn",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsLayerErrors",
    "type" : "boolean[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMer",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFreqOffset",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHierarchy",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsRfLocked",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlpInfo",
    "type" : "Atsc3PlpTuningInfo[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isDemodLocked()",
    "returnType" : "boolean",
    "comment" : "\n     * Lock status for Demod.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSnr()",
    "returnType" : "int",
    "comment" : "\n     * Gets Signal to Noise Ratio in thousandths of a deciBel (0.001dB).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBer()",
    "returnType" : "int",
    "comment" : "\n     * Gets Bit Error Ratio.\n     *\n     * <p>The number of error bit per 1 billion bits.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPer()",
    "returnType" : "int",
    "comment" : "\n     * Gets Packages Error Ratio.\n     *\n     * <p>The number of error package per 1 billion packages.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPerBer()",
    "returnType" : "int",
    "comment" : "\n     * Gets Bit Error Ratio before Forward Error Correction (FEC).\n     *\n     * <p>The number of error bit per 1 billion bits before FEC.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSignalQuality()",
    "returnType" : "int",
    "comment" : "\n     * Gets Signal Quality in percent.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSignalStrength()",
    "returnType" : "int",
    "comment" : "\n     * Gets Signal Strength in thousandths of a dBm (0.001dBm).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSymbolRate()",
    "returnType" : "int",
    "comment" : "\n     * Gets symbol rate in symbols per second.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getInnerFec()",
    "returnType" : "long",
    "comment" : "\n     *  Gets Inner Forward Error Correction type as specified in ETSI EN 300 468 V1.15.1\n     *  and ETSI EN 302 307-2 V1.1.1.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getModulation()",
    "returnType" : "int",
    "comment" : "\n     * Gets modulation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSpectralInversion()",
    "returnType" : "int",
    "comment" : "\n     * Gets Spectral Inversion for DVBC.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLnbVoltage()",
    "returnType" : "int",
    "comment" : "\n     * Gets Power Voltage Type for LNB.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPlpId()",
    "returnType" : "int",
    "comment" : "\n     * Gets Physical Layer Pipe ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEwbs()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether it's Emergency Warning Broadcasting System\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAgc()",
    "returnType" : "int",
    "comment" : "\n     * Gets Automatic Gain Control value which is normalized from 0 to 255.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isLnaOn()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks LNA (Low Noise Amplifier) is on or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean[] getLayerErrors()",
    "returnType" : "boolean[]",
    "comment" : "\n     * Gets Error status by layer.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMer()",
    "returnType" : "int",
    "comment" : "\n     * Gets Modulation Error Ratio in thousandths of a deciBel (0.001dB).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFreqOffset()",
    "returnType" : "int",
    "comment" : "\n     * Gets frequency difference in Hz.\n     *\n     * <p>Difference between tuning frequency and actual locked frequency.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getHierarchy()",
    "returnType" : "int",
    "comment" : "\n     * Gets hierarchy Type for DVBT.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isRfLocked()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets lock status for RF.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Atsc3PlpTuningInfo[] getAtsc3PlpTuningInfo()",
    "returnType" : "Atsc3PlpTuningInfo[]",
    "comment" : "\n     * Gets an array of PLP status for tuned PLPs for ATSC3 frontend.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "FRONTEND_STATUS_TYPE_DEMOD_LOCK", "FRONTEND_STATUS_TYPE_SNR", "FRONTEND_STATUS_TYPE_BER", "FRONTEND_STATUS_TYPE_PER", "FRONTEND_STATUS_TYPE_PRE_BER", "FRONTEND_STATUS_TYPE_SIGNAL_QUALITY", "FRONTEND_STATUS_TYPE_SIGNAL_STRENGTH", "FRONTEND_STATUS_TYPE_SYMBOL_RATE", "FRONTEND_STATUS_TYPE_FEC", "FRONTEND_STATUS_TYPE_MODULATION", "FRONTEND_STATUS_TYPE_SPECTRAL", "FRONTEND_STATUS_TYPE_LNB_VOLTAGE", "FRONTEND_STATUS_TYPE_PLP_ID", "FRONTEND_STATUS_TYPE_EWBS", "FRONTEND_STATUS_TYPE_AGC", "FRONTEND_STATUS_TYPE_LNA", "FRONTEND_STATUS_TYPE_LAYER_ERROR", "FRONTEND_STATUS_TYPE_MER", "FRONTEND_STATUS_TYPE_FREQ_OFFSET", "FRONTEND_STATUS_TYPE_HIERARCHY", "FRONTEND_STATUS_TYPE_RF_LOCK", "FRONTEND_STATUS_TYPE_ATSC3_PLP_INFO", "mIsDemodLocked", "mSnr", "mBer", "mPer", "mPerBer", "mSignalQuality", "mSignalStrength", "mSymbolRate", "mInnerFec", "mModulation", "mInversion", "mLnbVoltage", "mPlpId", "mIsEwbs", "mAgc", "mIsLnaOn", "mIsLayerErrors", "mMer", "mFreqOffset", "mHierarchy", "mIsRfLocked", "mPlpInfo" ],
  "methodNames" : [ "public boolean isDemodLocked()", "public int getSnr()", "public int getBer()", "public int getPer()", "public int getPerBer()", "public int getSignalQuality()", "public int getSignalStrength()", "public int getSymbolRate()", "public long getInnerFec()", "public int getModulation()", "public int getSpectralInversion()", "public int getLnbVoltage()", "public int getPlpId()", "public boolean isEwbs()", "public int getAgc()", "public boolean isLnaOn()", "public boolean[] getLayerErrors()", "public int getMer()", "public int getFreqOffset()", "public int getHierarchy()", "public boolean isRfLocked()", "public Atsc3PlpTuningInfo[] getAtsc3PlpTuningInfo()" ]
}