{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/jank_tracker/FrameMetricsStore.java",
  "packageName" : "org.chromium.base.jank_tracker",
  "className" : "FrameMetricsStore",
  "comment" : "\n * This class stores relevant metrics from FrameMetrics between the calls to UMA reporting methods.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mThreadChecker",
    "type" : "ThreadChecker",
    "comment" : " separate thread so the ThreadChecker is instead constructed later.",
    "links" : [ ]
  }, {
    "name" : "TRACE_EVENT_TRACK_ID",
    "type" : "long",
    "comment" : " the tracing UI. No other issue will occur.",
    "links" : [ ]
  }, {
    "name" : "mMaxTimestamp",
    "type" : "long",
    "comment" : " Android FrameMetrics promises in order frame metrics so this is just the latest timestamp.",
    "links" : [ ]
  }, {
    "name" : "mTimestampsNs",
    "type" : "ArrayList<Long>",
    "comment" : " began (VSYNC_TIMESTAMP), must always be the same size as mTotalDurationsNs.",
    "links" : [ ]
  }, {
    "name" : "mTotalDurationsNs",
    "type" : "ArrayList<Long>",
    "comment" : " draw.",
    "links" : [ ]
  }, {
    "name" : "mNumMissedVsyncs",
    "type" : "ArrayList<Integer>",
    "comment" : " mTotalDurationsNs.",
    "links" : [ ]
  }, {
    "name" : "mScenarioPreviousFrameTimestampNs",
    "type" : "HashMap<Integer, Long>",
    "comment" : " Zero if no FrameMetrics have been received.",
    "links" : [ ]
  }, {
    "name" : "mPendingStartTimestampNs",
    "type" : "HashMap<Integer, Long>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static String scenarioToString(@JankScenario int scenario)",
    "returnType" : "String",
    "comment" : " reflected in android/histograms.xml and base/android/jank_",
    "links" : [ ]
  }, {
    "name" : " void initialize()",
    "returnType" : "void",
    "comment" : "\n     * initialize is the first entry point that is on the HandlerThread, so set up our thread\n     * checking.\n     ",
    "links" : [ ]
  }, {
    "name" : " void addFrameMeasurement(long totalDurationNs, int numMissedVsyncs, long frameStartVsyncTs)",
    "returnType" : "void",
    "comment" : " Records the total draw duration and jankiness for a single frame. ",
    "links" : [ ]
  }, {
    "name" : " void startTrackingScenario(@JankScenario int scenario)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean hasReceivedMetricsPast(long endScenarioTimeNs)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " JankMetrics stopTrackingScenario(@JankScenario int scenario)",
    "returnType" : "JankMetrics",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " JankMetrics stopTrackingScenario(@JankScenario int scenario, long endScenarioTimeNs)",
    "returnType" : "JankMetrics",
    "comment" : " The string added is a static string.",
    "links" : [ ]
  }, {
    "name" : "private void removeUnusedFrames()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private long findFirstUsedTimestamp()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private JankMetrics convertArraysToJankMetrics(List<Long> longTimestampsNs, List<Long> longDurations, List<Integer> intNumMissedVsyncs)",
    "returnType" : "JankMetrics",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static String scenarioToString(@JankScenario int scenario)", " void initialize()", " void addFrameMeasurement(long totalDurationNs, int numMissedVsyncs, long frameStartVsyncTs)", " void startTrackingScenario(@JankScenario int scenario)", " boolean hasReceivedMetricsPast(long endScenarioTimeNs)", " JankMetrics stopTrackingScenario(@JankScenario int scenario)", " JankMetrics stopTrackingScenario(@JankScenario int scenario, long endScenarioTimeNs)", "private void removeUnusedFrames()", "private long findFirstUsedTimestamp()", "private JankMetrics convertArraysToJankMetrics(List<Long> longTimestampsNs, List<Long> longDurations, List<Integer> intNumMissedVsyncs)" ],
  "variableNames" : [ "mThreadChecker", "TRACE_EVENT_TRACK_ID", "mMaxTimestamp", "mTimestampsNs", "mTotalDurationsNs", "mNumMissedVsyncs", "mScenarioPreviousFrameTimestampNs", "mPendingStartTimestampNs" ]
}