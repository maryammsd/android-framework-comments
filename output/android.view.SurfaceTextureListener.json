{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/TextureView.java",
  "packageName" : "android.view",
  "className" : "SurfaceTextureListener",
  "comment" : "\n     * This listener can be used to be notified when the surface texture\n     * associated with this texture view is available.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onSurfaceTextureAvailable(@NonNull SurfaceTexture surface, int width, int height)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a {@link TextureView}'s SurfaceTexture is ready for use.\n         *\n         * @param surface The surface returned by\n         *                {@link android.view.TextureView#getSurfaceTexture()}\n         * @param width The width of the surface\n         * @param height The height of the surface\n         ",
    "links" : [ "android.view.TextureView#getSurfaceTexture()", "android.view.TextureView" ]
  }, {
    "name" : " void onSurfaceTextureSizeChanged(@NonNull SurfaceTexture surface, int width, int height)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when the {@link SurfaceTexture}'s buffers size changed.\n         *\n         * @param surface The surface returned by\n         *                {@link android.view.TextureView#getSurfaceTexture()}\n         * @param width The new width of the surface\n         * @param height The new height of the surface\n         ",
    "links" : [ "android.graphics.SurfaceTexture", "android.view.TextureView#getSurfaceTexture()" ]
  }, {
    "name" : " boolean onSurfaceTextureDestroyed(@NonNull SurfaceTexture surface)",
    "returnType" : "boolean",
    "comment" : "\n         * Invoked when the specified {@link SurfaceTexture} is about to be destroyed.\n         * If returns true, no rendering should happen inside the surface texture after this method\n         * is invoked. If returns false, the client needs to call {@link SurfaceTexture#release()}.\n         * Most applications should return true.\n         *\n         * @param surface The surface about to be destroyed\n         ",
    "links" : [ "android.graphics.SurfaceTexture#release()", "android.graphics.SurfaceTexture" ]
  }, {
    "name" : " void onSurfaceTextureUpdated(@NonNull SurfaceTexture surface)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when the specified {@link SurfaceTexture} is updated through\n         * {@link SurfaceTexture#updateTexImage()}.\n         *\n         * @param surface The surface just updated\n         ",
    "links" : [ "android.graphics.SurfaceTexture", "android.graphics.SurfaceTexture#updateTexImage()" ]
  } ],
  "methodNames" : [ " void onSurfaceTextureAvailable(@NonNull SurfaceTexture surface, int width, int height)", " void onSurfaceTextureSizeChanged(@NonNull SurfaceTexture surface, int width, int height)", " boolean onSurfaceTextureDestroyed(@NonNull SurfaceTexture surface)", " void onSurfaceTextureUpdated(@NonNull SurfaceTexture surface)" ],
  "variableNames" : [ ]
}