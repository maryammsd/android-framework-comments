{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/SimpleDateRule.java",
  "packageName" : "android.icu.util",
  "className" : "SimpleDateRule",
  "comment" : "\n * <b>Note:</b> The Holiday framework is a technology preview.\n * Despite its age, is still draft API, and clients should treat it as such.\n *\n * Simple implementation of DateRule.\n * @hide Only a subset of ICU is exposed in Android\n * @hide draft / provisional / internal are hidden on Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "calendar",
    "type" : "Calendar",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "month",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dayOfMonth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dayOfWeek",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Date firstAfter(Date start)",
    "returnType" : "Date",
    "comment" : "\n     * Return the first occurrance of the event represented by this rule\n     * that is on or after the given start date.\n     *\n     * @param start Only occurrances on or after this date are returned.\n     *\n     * @return      The date on which this event occurs, or null if it\n     *              does not occur on or after the start date.\n     *\n     * @see #firstBetween\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date firstBetween(Date start, Date end)",
    "returnType" : "Date",
    "comment" : "\n     * Return the first occurrance of the event represented by this rule\n     * that is on or after the given start date and before the given\n     * end date.\n     *\n     * @param start Only occurrances on or after this date are returned.\n     * @param end   Only occurrances before this date are returned.\n     *\n     * @return      The date on which this event occurs, or null if it\n     *              does not occur between the start and end dates.\n     *\n     * @see #firstAfter\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isOn(Date date)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether this event occurs on the given date.  This does\n     * <em>not</em> take time of day into account; instead it checks\n     * whether this event and the given date are on the same day.\n     * This is useful for applications such as determining whether a given\n     * day is a holiday.\n     *\n     * @param date  The date to check.\n     * @return      true if this event occurs on the given date.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBetween(Date start, Date end)",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether this event occurs at least once between the two\n     * dates given.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private Date doFirstBetween(Date start, Date end)",
    "returnType" : "Date",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Date computeInYear(int year, Calendar c)",
    "returnType" : "Date",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Date firstAfter(Date start)", "public Date firstBetween(Date start, Date end)", "public boolean isOn(Date date)", "public boolean isBetween(Date start, Date end)", "private Date doFirstBetween(Date start, Date end)", "private Date computeInYear(int year, Calendar c)" ],
  "variableNames" : [ "calendar", "month", "dayOfMonth", "dayOfWeek" ]
}