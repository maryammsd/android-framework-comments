{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/animation/TimeInterpolator.java",
  "packageName" : "android.animation",
  "className" : "TimeInterpolator",
  "comment" : "\n * A time interpolator defines the rate of change of an animation. This allows animations\n * to have non-linear motion, such as acceleration and deceleration.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " float getInterpolation(float input)",
    "returnType" : "float",
    "comment" : "\n     * Maps a value representing the elapsed fraction of an animation to a value that represents\n     * the interpolated fraction. This interpolated value is then multiplied by the change in\n     * value of an animation to derive the animated value at the current elapsed animation time.\n     *\n     * @param input A value between 0 and 1.0 indicating our current point\n     *        in the animation where 0 represents the start and 1.0 represents\n     *        the end\n     * @return The interpolation value. This value can be more than 1.0 for\n     *         interpolators which overshoot their targets, or less than 0 for\n     *         interpolators that undershoot their targets.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " float getInterpolation(float input)" ],
  "variableNames" : [ ]
}