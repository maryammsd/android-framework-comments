{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/location/NanoApp.java",
  "packageName" : "android.hardware.location",
  "className" : "NanoApp",
  "comment" : " A class describing nano apps.\n * A nano app is a piece of executable code that can be\n * downloaded onto a specific architecture. These are targtted\n * for low power compute domains on a device.\n *\n * Nano apps are expected to be used only by bundled apps only\n * at this time.\n *\n * @deprecated Use {@link android.hardware.location.NanoAppBinary} instead to load a nanoapp with\n *             {@link android.hardware.location.ContextHubManager#loadNanoApp(\n *             ContextHubInfo, NanoAppBinary)}.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UNKNOWN",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPublisher",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppIdSet",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNeededReadMemBytes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNeededWriteMemBytes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNeededExecMemBytes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNeededSensors",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOutputEvents",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppBinary",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<NanoApp>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setPublisher(String publisher)",
    "returnType" : "void",
    "comment" : "\n     * Set the publisher name\n     *\n     * @param publisher name of the publisher of this nano app\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setName(String name)",
    "returnType" : "void",
    "comment" : "\n     * set the name of the app\n     *\n     * @param name   name of the app\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAppId(long appId)",
    "returnType" : "void",
    "comment" : "\n     * set the app identifier\n     *\n     * @param appId  app identifier\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAppVersion(int appVersion)",
    "returnType" : "void",
    "comment" : "\n     * Set the app version\n     *\n     * @param appVersion app version\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNeededReadMemBytes(int neededReadMemBytes)",
    "returnType" : "void",
    "comment" : "\n     * set memory needed as read only\n     *\n     * @param neededReadMemBytes\n     *               read only memory needed in bytes\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNeededWriteMemBytes(int neededWriteMemBytes)",
    "returnType" : "void",
    "comment" : "\n     * set writable memory needed in bytes\n     *\n     * @param neededWriteMemBytes\n     *               writable memory needed in bytes\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNeededExecMemBytes(int neededExecMemBytes)",
    "returnType" : "void",
    "comment" : "\n     * set executable memory needed\n     *\n     * @param neededExecMemBytes\n     *               executable memory needed in bytes\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNeededSensors(int[] neededSensors)",
    "returnType" : "void",
    "comment" : "\n     * set the sensors needed for this app\n     *\n     * @param neededSensors\n     *               needed Sensors\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setOutputEvents(int[] outputEvents)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAppBinary(byte[] appBinary)",
    "returnType" : "void",
    "comment" : "\n     * set output events returned by the nano app\n     *\n     * @param appBinary generated events\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPublisher()",
    "returnType" : "String",
    "comment" : "\n     * get the publisher name\n     *\n     * @return publisher name\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * get the name of the app\n     *\n     * @return app name\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getAppId()",
    "returnType" : "long",
    "comment" : "\n     * get the identifier of the app\n     *\n     * @return identifier for this app\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAppVersion()",
    "returnType" : "int",
    "comment" : "\n     * get the app version\n     *\n     * @return app version\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNeededReadMemBytes()",
    "returnType" : "int",
    "comment" : "\n     * get the ammount of readable memory needed by this app\n     *\n     * @return readable memory needed in bytes\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNeededWriteMemBytes()",
    "returnType" : "int",
    "comment" : "\n     * get the ammount og writable memory needed in bytes\n     *\n     * @return writable memory needed in bytes\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNeededExecMemBytes()",
    "returnType" : "int",
    "comment" : "\n     * executable memory needed in bytes\n     *\n     * @return executable memory needed in bytes\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getNeededSensors()",
    "returnType" : "int[]",
    "comment" : "\n     * get the sensors needed by this app\n     *\n     * @return sensors needed\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getOutputEvents()",
    "returnType" : "int[]",
    "comment" : "\n     * get the events generated by this app\n     *\n     * @return generated events\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getAppBinary()",
    "returnType" : "byte[]",
    "comment" : "\n     * get the binary for this app\n     *\n     * @return app binary\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "UNKNOWN", "mPublisher", "mName", "mAppId", "mAppIdSet", "mAppVersion", "mNeededReadMemBytes", "mNeededWriteMemBytes", "mNeededExecMemBytes", "mNeededSensors", "mOutputEvents", "mAppBinary", "CREATOR" ],
  "methodNames" : [ "public void setPublisher(String publisher)", "public void setName(String name)", "public void setAppId(long appId)", "public void setAppVersion(int appVersion)", "public void setNeededReadMemBytes(int neededReadMemBytes)", "public void setNeededWriteMemBytes(int neededWriteMemBytes)", "public void setNeededExecMemBytes(int neededExecMemBytes)", "public void setNeededSensors(int[] neededSensors)", "public void setOutputEvents(int[] outputEvents)", "public void setAppBinary(byte[] appBinary)", "public String getPublisher()", "public String getName()", "public long getAppId()", "public int getAppVersion()", "public int getNeededReadMemBytes()", "public int getNeededWriteMemBytes()", "public int getNeededExecMemBytes()", "public int[] getNeededSensors()", "public int[] getOutputEvents()", "public byte[] getAppBinary()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "public String toString()" ]
}