{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/assist/AssistContent.java",
  "packageName" : "android.app.assist",
  "className" : "AssistContent",
  "comment" : "\n * Holds information about the content an application is viewing, to hand to an\n * assistant at the user's request.  This is filled in by\n * {@link android.app.Activity#onProvideAssistContent Activity.onProvideAssistContent}.\n ",
  "variables" : [ {
    "name" : "mIsAppProvidedIntent",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsAppProvidedWebUri",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIntent",
    "type" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStructuredData",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClipData",
    "type" : "ClipData",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AssistContent>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setDefaultIntent(Intent intent)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     * Called by {@link android.app.ActivityThread} to set the default Intent based on\n     * {@link android.app.Activity#getIntent Activity.getIntent}.\n     *\n     * <p>Automatically populates {@link #mUri} if that Intent is an {@link Intent#ACTION_VIEW}\n     * of a web (http or https scheme) URI.</p>\n     ",
    "links" : [ "#mUri", "android.app.Activity#getIntent", "android.app.ActivityThread", "android.content.Intent#ACTION_VIEW" ]
  }, {
    "name" : "public void setIntent(Intent intent)",
    "returnType" : "void",
    "comment" : "\n     * Sets the Intent associated with the content, describing the current top-level context of\n     * the activity.  If this contains a reference to a piece of data related to the activity,\n     * be sure to set {@link Intent#FLAG_GRANT_READ_URI_PERMISSION} so the accessibility\n     * service can access it.\n     ",
    "links" : [ "android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION" ]
  }, {
    "name" : "public Intent getIntent()",
    "returnType" : "Intent",
    "comment" : "\n     * Returns the current {@link #setIntent} if one is set, else the default Intent obtained from\n     * {@link android.app.Activity#getIntent Activity.getIntent}. Can be modified in-place.\n     ",
    "links" : [ "#setIntent", "android.app.Activity#getIntent" ]
  }, {
    "name" : "public boolean isAppProvidedIntent()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether or not the current Intent was explicitly provided in\n     * {@link android.app.Activity#onProvideAssistContent Activity.onProvideAssistContent}. If not,\n     * the Intent was automatically set based on\n     * {@link android.app.Activity#getIntent Activity.getIntent}.\n     ",
    "links" : [ "android.app.Activity#onProvideAssistContent", "android.app.Activity#getIntent" ]
  }, {
    "name" : "public void setClipData(ClipData clip)",
    "returnType" : "void",
    "comment" : "\n     * Optional additional content items that are involved with\n     * the current UI.  Access to this content will be granted to the assistant as if you\n     * are sending it through an Intent with {@link Intent#FLAG_GRANT_READ_URI_PERMISSION}.\n     ",
    "links" : [ "android.content.Intent#FLAG_GRANT_READ_URI_PERMISSION" ]
  }, {
    "name" : "public ClipData getClipData()",
    "returnType" : "ClipData",
    "comment" : "\n     * Return the current {@link #setClipData}, which you can modify in-place.\n     ",
    "links" : [ "#setClipData" ]
  }, {
    "name" : "public void setStructuredData(String structuredData)",
    "returnType" : "void",
    "comment" : "\n     * Sets optional structured data regarding the content being viewed. The provided data\n     * must be a string represented with <a href=\"http://json-ld.org/\">JSON-LD</a> using the\n     * <a href=\"http://schema.org/\">schema.org</a> vocabulary.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getStructuredData()",
    "returnType" : "String",
    "comment" : "\n     * Returns the current {@link #setStructuredData}.\n     ",
    "links" : [ "#setStructuredData" ]
  }, {
    "name" : "public void setWebUri(Uri uri)",
    "returnType" : "void",
    "comment" : "\n     * Set a web URI associated with the current data being shown to the user.\n     * This URI could be opened in a web browser, or in the app as an\n     * {@link Intent#ACTION_VIEW} Intent, to show the same data that is currently\n     * being displayed by it.  The URI here should be something that is transportable\n     * off the device into other environments to acesss the same data as is currently\n     * being shown in the app; if the app does not have such a representation, it should\n     * leave the null and only report the local intent and clip data.\n     ",
    "links" : [ "android.content.Intent#ACTION_VIEW" ]
  }, {
    "name" : "public Uri getWebUri()",
    "returnType" : "Uri",
    "comment" : "\n     * Return the content's web URI as per {@link #setWebUri(android.net.Uri)}, or null if\n     * there is none.\n     ",
    "links" : [ "#setWebUri(android.net.Uri)" ]
  }, {
    "name" : "public boolean isAppProvidedWebUri()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether or not the current {@link #getWebUri} was explicitly provided in\n     * {@link android.app.Activity#onProvideAssistContent Activity.onProvideAssistContent}. If not,\n     * the Intent was automatically set based on\n     * {@link android.app.Activity#getIntent Activity.getIntent}.\n     ",
    "links" : [ "android.app.Activity#onProvideAssistContent", "android.app.Activity#getIntent", "#getWebUri" ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n     * Return Bundle for extra vendor-specific data that can be modified and examined.\n     ",
    "links" : [ ]
  }, {
    "name" : " void writeToParcelInternal(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mIsAppProvidedIntent", "mIsAppProvidedWebUri", "mIntent", "mStructuredData", "mClipData", "mUri", "mExtras", "CREATOR" ],
  "methodNames" : [ "public void setDefaultIntent(Intent intent)", "public void setIntent(Intent intent)", "public Intent getIntent()", "public boolean isAppProvidedIntent()", "public void setClipData(ClipData clip)", "public ClipData getClipData()", "public void setStructuredData(String structuredData)", "public String getStructuredData()", "public void setWebUri(Uri uri)", "public Uri getWebUri()", "public boolean isAppProvidedWebUri()", "public Bundle getExtras()", " void writeToParcelInternal(Parcel dest, int flags)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ]
}