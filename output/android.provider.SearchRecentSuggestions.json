{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/SearchRecentSuggestions.java",
  "packageName" : "android.provider",
  "className" : "SearchRecentSuggestions",
  "comment" : "\n * This is a utility class providing access to\n * {@link android.content.SearchRecentSuggestionsProvider}.\n *\n * <p>Unlike some utility classes, this one must be instantiated and properly initialized, so that\n * it can be configured to operate with the search suggestions provider that you have created.\n *\n * <p>Typically, you will do this in your searchable activity, each time you receive an incoming\n * {@link android.content.Intent#ACTION_SEARCH ACTION_SEARCH} Intent.  The code to record each\n * incoming query is as follows:\n * <pre class=\"prettyprint\">\n *      SearchSuggestions suggestions = new SearchSuggestions(this,\n *              MySuggestionsProvider.AUTHORITY, MySuggestionsProvider.MODE);\n *      suggestions.saveRecentQuery(queryString, null);\n * </pre>\n *\n * <p>For a working example, see SearchSuggestionSampleProvider and SearchQueryResults in\n * samples/ApiDemos/app.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For information about using search suggestions in your application, read the\n * <a href=\"{@docRoot}guide/topics/search/adding-recent-query-suggestions.html\">Adding Recent Query\n * Suggestions</a> developer guide.</p>\n * </div>\n ",
  "links" : [ "android.content.SearchRecentSuggestionsProvider", "android.content.Intent#ACTION_SEARCH" ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : " debugging support",
    "links" : [ ]
  }, {
    "name" : "QUERIES_PROJECTION_1LINE",
    "type" : "String[]",
    "comment" : "\n     * This is the database projection that can be used to view saved queries, when\n     * configured for one-line operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "QUERIES_PROJECTION_2LINE",
    "type" : "String[]",
    "comment" : "\n     * This is the database projection that can be used to view saved queries, when\n     * configured for two-line operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "QUERIES_PROJECTION_DATE_INDEX",
    "type" : "int",
    "comment" : " Index into the provided query projections.  For use with Cursor.update methods. ",
    "links" : [ ]
  }, {
    "name" : "QUERIES_PROJECTION_QUERY_INDEX",
    "type" : "int",
    "comment" : " Index into the provided query projections.  For use with Cursor.update methods. ",
    "links" : [ ]
  }, {
    "name" : "QUERIES_PROJECTION_DISPLAY1_INDEX",
    "type" : "int",
    "comment" : " Index into the provided query projections.  For use with Cursor.update methods. ",
    "links" : [ ]
  }, {
    "name" : "QUERIES_PROJECTION_DISPLAY2_INDEX",
    "type" : "int",
    "comment" : " only when 2line active",
    "links" : [ ]
  }, {
    "name" : "MAX_HISTORY_COUNT",
    "type" : "int",
    "comment" : "\n     * Set a cap on the count of items in the suggestions table, to\n     * prevent db and layout operations from dragging to a crawl. Revisit this\n     * cap when/if db/layout performance improvements are made.\n     ",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : " client-provided configuration values",
    "links" : [ ]
  }, {
    "name" : "mAuthority",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTwoLineDisplay",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuggestionsUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sWritesInProgress",
    "type" : "Semaphore",
    "comment" : " Released once per completion of async write.  Used for tests. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void saveRecentQuery(final String queryString, final String line2)",
    "returnType" : "void",
    "comment" : "\n     * Add a query to the recent queries list.  Returns immediately, performing the save\n     * in the background.\n     *\n     * @param queryString The string as typed by the user.  This string will be displayed as\n     * the suggestion, and if the user clicks on the suggestion, this string will be sent to your\n     * searchable activity (as a new search query).\n     * @param line2 If you have configured your recent suggestions provider with\n     * {@link android.content.SearchRecentSuggestionsProvider#DATABASE_MODE_2LINES}, you can\n     * pass a second line of text here.  It will be shown in a smaller font, below the primary\n     * suggestion.  When typing, matches in either line of text will be displayed in the list.\n     * If you did not configure two-line mode, or if a given suggestion does not have any\n     * additional text to display, you can pass null here.\n     ",
    "links" : [ "android.content.SearchRecentSuggestionsProvider#DATABASE_MODE_2LINES" ]
  }, {
    "name" : " void waitForSave()",
    "returnType" : "void",
    "comment" : " Visible for testing.",
    "links" : [ ]
  }, {
    "name" : "private void saveRecentQueryBlocking(String queryString, String line2)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearHistory()",
    "returnType" : "void",
    "comment" : "\n     * Completely delete the history.  Use this call to implement a \"clear history\" UI.\n     *\n     * Any application that implements search suggestions based on previous actions (such as\n     * recent queries, page/items viewed, etc.) should provide a way for the user to clear the\n     * history.  This gives the user a measure of privacy, if they do not wish for their recent\n     * searches to be replayed by other users of the device (via suggestions).\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void truncateHistory(ContentResolver cr, int maxEntries)",
    "returnType" : "void",
    "comment" : "\n     * Reduces the length of the history table, to prevent it from growing too large.\n     *\n     * @param cr Convenience copy of the content resolver.\n     * @param maxEntries Max entries to leave in the table. 0 means remove all entries.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void saveRecentQuery(final String queryString, final String line2)", " void waitForSave()", "private void saveRecentQueryBlocking(String queryString, String line2)", "public void clearHistory()", "protected void truncateHistory(ContentResolver cr, int maxEntries)" ],
  "variableNames" : [ "LOG_TAG", "QUERIES_PROJECTION_1LINE", "QUERIES_PROJECTION_2LINE", "QUERIES_PROJECTION_DATE_INDEX", "QUERIES_PROJECTION_QUERY_INDEX", "QUERIES_PROJECTION_DISPLAY1_INDEX", "QUERIES_PROJECTION_DISPLAY2_INDEX", "MAX_HISTORY_COUNT", "mContext", "mAuthority", "mTwoLineDisplay", "mSuggestionsUri", "sWritesInProgress" ]
}