{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/bluetooth/le/AdvertisingSetParameters.java",
  "packageName" : "android.bluetooth.le",
  "className" : "AdvertisingSetParameters",
  "comment" : "\n * The {@link AdvertisingSetParameters} provide a way to adjust advertising\n * preferences for each\n * Bluetooth LE advertising set. Use {@link AdvertisingSetParameters.Builder} to\n * create an\n * instance of this class.\n ",
  "variables" : [ {
    "name" : "INTERVAL_HIGH",
    "type" : "int",
    "comment" : "\n     * Advertise on low frequency, around every 1000ms. This is the default and\n     * preferred advertising mode as it consumes the least power.\n     ",
    "links" : [ ]
  }, {
    "name" : "INTERVAL_MEDIUM",
    "type" : "int",
    "comment" : "\n     * Advertise on medium frequency, around every 250ms. This is balanced\n     * between advertising frequency and power consumption.\n     ",
    "links" : [ ]
  }, {
    "name" : "INTERVAL_LOW",
    "type" : "int",
    "comment" : "\n     * Perform high frequency, low latency advertising, around every 100ms. This\n     * has the highest power consumption and should not be used for continuous\n     * background advertising.\n     ",
    "links" : [ ]
  }, {
    "name" : "INTERVAL_MIN",
    "type" : "int",
    "comment" : "\n     * Minimum value for advertising interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "INTERVAL_MAX",
    "type" : "int",
    "comment" : "\n     * Maximum value for advertising interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_ULTRA_LOW",
    "type" : "int",
    "comment" : "\n     * Advertise using the lowest transmission (TX) power level. Low transmission\n     * power can be used to restrict the visibility range of advertising packets.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_LOW",
    "type" : "int",
    "comment" : "\n     * Advertise using low TX power level.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_MEDIUM",
    "type" : "int",
    "comment" : "\n     * Advertise using medium TX power level.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_HIGH",
    "type" : "int",
    "comment" : "\n     * Advertise using high TX power level. This corresponds to largest visibility\n     * range of the advertising packet.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_MIN",
    "type" : "int",
    "comment" : "\n     * Minimum value for TX power.\n     ",
    "links" : [ ]
  }, {
    "name" : "TX_POWER_MAX",
    "type" : "int",
    "comment" : "\n     * Maximum value for TX power.\n     ",
    "links" : [ ]
  }, {
    "name" : "LIMITED_ADVERTISING_MAX_MILLIS",
    "type" : "int",
    "comment" : "\n     * The maximum limited advertisement duration as specified by the Bluetooth\n     * SIG\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsLegacy",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsAnonymous",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIncludeTxPower",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPrimaryPhy",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSecondaryPhy",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScannable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterval",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxPowerLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AdvertisingSetParameters>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isConnectable()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the advertisement will be connectable.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isScannable()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the advertisement will be scannable.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isLegacy()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the legacy advertisement will be used.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAnonymous()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the advertisement will be anonymous.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean includeTxPower()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the TX Power will be included.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPrimaryPhy()",
    "returnType" : "int",
    "comment" : "\n     * Returns the primary advertising phy.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSecondaryPhy()",
    "returnType" : "int",
    "comment" : "\n     * Returns the secondary advertising phy.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInterval()",
    "returnType" : "int",
    "comment" : "\n     * Returns the advertising interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTxPowerLevel()",
    "returnType" : "int",
    "comment" : "\n     * Returns the TX power level for advertising.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "INTERVAL_HIGH", "INTERVAL_MEDIUM", "INTERVAL_LOW", "INTERVAL_MIN", "INTERVAL_MAX", "TX_POWER_ULTRA_LOW", "TX_POWER_LOW", "TX_POWER_MEDIUM", "TX_POWER_HIGH", "TX_POWER_MIN", "TX_POWER_MAX", "LIMITED_ADVERTISING_MAX_MILLIS", "mIsLegacy", "mIsAnonymous", "mIncludeTxPower", "mPrimaryPhy", "mSecondaryPhy", "mConnectable", "mScannable", "mInterval", "mTxPowerLevel", "CREATOR" ],
  "methodNames" : [ "public boolean isConnectable()", "public boolean isScannable()", "public boolean isLegacy()", "public boolean isAnonymous()", "public boolean includeTxPower()", "public int getPrimaryPhy()", "public int getSecondaryPhy()", "public int getInterval()", "public int getTxPowerLevel()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ]
}