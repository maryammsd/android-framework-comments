{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/DnsOptions.java",
  "packageName" : "org.chromium.net",
  "className" : "Builder",
  "comment" : " Builder for {@link StaleDnsOptions}. ",
  "links" : [ "StaleDnsOptions" ],
  "variables" : [ {
    "name" : "mFreshLookupTimeoutMillis",
    "type" : "Long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxExpiredDelayMillis",
    "type" : "Long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowCrossNetworkUsage",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUseStaleOnNameNotResolved",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setFreshLookupTimeoutMillis(long freshLookupTimeoutMillis)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets how long (in milliseconds) to wait for a DNS request to return before using a\n             * stale result instead. If set to zero, returns stale results instantly but continues\n             * the DNS request in the background to update the cache.\n             *\n             * @return the builder for chaining\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setFreshLookupTimeout(Duration freshLookupTimeout)",
    "returnType" : "Builder",
    "comment" : "\n             * Same as {@link #setFreshLookupTimeoutMillis(long)} but using {@link\n             * java.time.Duration}.\n             *\n             * @return the builder for chaining\n             ",
    "links" : [ "java.time.Duration", "#setFreshLookupTimeoutMillis(long)" ]
  }, {
    "name" : "public Builder setMaxExpiredDelayMillis(long maxExpiredDelayMillis)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets how long (in milliseconds) past expiration to consider using expired results.\n             * Setting the value to zero means expired records can be used indefinitely.\n             *\n             * @return the builder for chaining\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxExpiredDelayMillis(Duration maxExpiredDelay)",
    "returnType" : "Builder",
    "comment" : "\n             * Same as {@link #setMaxExpiredDelayMillis(long)} but using {@link java.time.Duration}.\n             *\n             * @return the builder for chaining\n             ",
    "links" : [ "#setMaxExpiredDelayMillis(long)", "java.time.Duration" ]
  }, {
    "name" : "public Builder allowCrossNetworkUsage(boolean allowCrossNetworkUsage)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether to return results originating from other networks or not. Normally,\n             * Cronet clears the DNS cache entirely when switching connections, e.g. between two\n             * Wi-Fi networks or from Wi-Fi to 4G.\n             *\n             * @return the builder for chaining\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder useStaleOnNameNotResolved(boolean useStaleOnNameNotResolved)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether to allow use of stale DNS results when network resolver fails to resolve\n             * the hostname.\n             *\n             * <p>Depending on the use case, if Cronet quickly sees a fresh failure, it may be\n             * desirable to use the failure as it is technically the fresher result, and we had such\n             * a fresh result quickly; or, prefer having any result (even if stale) to use over\n             * having a failure.\n             *\n             * @return the builder for chaining\n             ",
    "links" : [ ]
  }, {
    "name" : "public StaleDnsOptions build()",
    "returnType" : "StaleDnsOptions",
    "comment" : "\n             * Creates and returns the final {@link StaleDnsOptions} instance, based on the values\n             * in this builder.\n             ",
    "links" : [ "StaleDnsOptions" ]
  } ],
  "methodNames" : [ "public Builder setFreshLookupTimeoutMillis(long freshLookupTimeoutMillis)", "public Builder setFreshLookupTimeout(Duration freshLookupTimeout)", "public Builder setMaxExpiredDelayMillis(long maxExpiredDelayMillis)", "public Builder setMaxExpiredDelayMillis(Duration maxExpiredDelay)", "public Builder allowCrossNetworkUsage(boolean allowCrossNetworkUsage)", "public Builder useStaleOnNameNotResolved(boolean useStaleOnNameNotResolved)", "public StaleDnsOptions build()" ],
  "variableNames" : [ "mFreshLookupTimeoutMillis", "mMaxExpiredDelayMillis", "mAllowCrossNetworkUsage", "mUseStaleOnNameNotResolved" ]
}