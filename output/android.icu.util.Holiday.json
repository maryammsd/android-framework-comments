{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/Holiday.java",
  "packageName" : "android.icu.util",
  "className" : "Holiday",
  "comment" : "\n * <b>Note:</b> The Holiday framework is a technology preview.\n * Despite its age, is still draft API, and clients should treat it as such.\n *\n * An abstract class representing a holiday.\n * @hide Only a subset of ICU is exposed in Android\n * @hide draft / provisional / internal are hidden on Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "name",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "rule",
    "type" : "DateRule",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "noHolidays",
    "type" : "Holiday[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Holiday[] getHolidays()",
    "returnType" : "Holiday[]",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Holiday[] getHolidays(Locale locale)",
    "returnType" : "Holiday[]",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Holiday[] getHolidays(ULocale locale)",
    "returnType" : "Holiday[]",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date firstAfter(Date start)",
    "returnType" : "Date",
    "comment" : "\n     * Return the first occurrence of this holiday on or after the given date\n     *\n     * @param start Only holidays on or after this date are returned.\n     *\n     * @return      The date on which this holiday occurs, or null if it\n     *              does not occur on or after the start date.\n     *\n     * @see #firstBetween\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date firstBetween(Date start, Date end)",
    "returnType" : "Date",
    "comment" : "\n     * Return the first occurrence of this holiday that is on or after\n     * the given start date and before the given end date.\n     *\n     * @param start Only occurrences on or after this date are returned.\n     * @param end   Only occurrences before this date are returned.\n     *\n     * @return      The date on which this event occurs, or null if it\n     *              does not occur between the start and end dates.\n     *\n     * @see #firstAfter\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isOn(Date date)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether this holiday falls on the given date.  This does\n     * <em>not</em> take time of day into account; instead it checks\n     * whether the holiday and the given date are on the same day.\n     *\n     * @param date  The date to check.\n     * @return      true if this holiday occurs on the given date.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBetween(Date start, Date end)",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether this holiday occurs at least once between the two\n     * dates given.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDisplayName()",
    "returnType" : "String",
    "comment" : "\n     * Return the name of this holiday in the language of the default <code>DISPLAY</code> locale.\n     * @see Category#DISPLAY\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDisplayName(Locale locale)",
    "returnType" : "String",
    "comment" : "\n     * Return the name of this holiday in the language of the specified locale.\n     * The <code>name</code> parameter passed to this object's constructor is used\n     * as a key to look up the holiday's localized name in a ResourceBundle object\n     * named HolidayBundle.\n     *\n     * @param locale   A locale specifying the language in which the name is desired.\n     *\n     * @see ResourceBundle\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDisplayName(ULocale locale)",
    "returnType" : "String",
    "comment" : "\n     * Return the name of this holiday in the language of the specified locale\n     * The <code>name</code> parameter passed to this object's constructor is used\n     * as a key to look up the holiday's localized name in a ResourceBundle object\n     * named HolidayBundle.\n     *\n     * @param locale   A locale specifying the language in which the name is desired.\n     *\n     * @see ResourceBundle\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public DateRule getRule()",
    "returnType" : "DateRule",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setRule(DateRule rule)",
    "returnType" : "void",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Holiday[] getHolidays()", "public static Holiday[] getHolidays(Locale locale)", "public static Holiday[] getHolidays(ULocale locale)", "public Date firstAfter(Date start)", "public Date firstBetween(Date start, Date end)", "public boolean isOn(Date date)", "public boolean isBetween(Date start, Date end)", "public String getDisplayName()", "public String getDisplayName(Locale locale)", "public String getDisplayName(ULocale locale)", "public DateRule getRule()", "public void setRule(DateRule rule)" ],
  "variableNames" : [ "name", "rule", "noHolidays" ]
}