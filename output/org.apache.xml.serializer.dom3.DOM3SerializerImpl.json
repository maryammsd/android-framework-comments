{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/serializer/dom3/DOM3SerializerImpl.java",
  "packageName" : "org.apache.xml.serializer.dom3",
  "className" : "DOM3SerializerImpl",
  "comment" : "\r\n * This class implements the DOM3Serializer interface.\r\n * \r\n * @xsl.usage internal\r\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "fErrorHandler",
    "type" : "DOMErrorHandler",
    "comment" : " The DOMErrorHandler",
    "links" : [ ]
  }, {
    "name" : "fSerializerFilter",
    "type" : "LSSerializerFilter",
    "comment" : " A LSSerializerFilter",
    "links" : [ ]
  }, {
    "name" : "fNewLine",
    "type" : "String",
    "comment" : " A LSSerializerFilter",
    "links" : [ ]
  }, {
    "name" : "fSerializationHandler",
    "type" : "SerializationHandler",
    "comment" : " A SerializationHandler ex. an instance of ToXMLStream",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public DOMErrorHandler getErrorHandler()",
    "returnType" : "DOMErrorHandler",
    "comment" : "\r\n     * Returns a DOMErrorHandler set on the DOM Level 3 Serializer.\r\n     * \r\n     * This interface is a public API.\r\n     *\r\n     * @return A Level 3 DOMErrorHandler\r\n     ",
    "links" : [ ]
  }, {
    "name" : "public LSSerializerFilter getNodeFilter()",
    "returnType" : "LSSerializerFilter",
    "comment" : "\r\n     * Returns a LSSerializerFilter set on the DOM Level 3 Serializer to filter nodes\r\n     * during serialization.\r\n     * \r\n     * This interface is a public API.\r\n     *\r\n     * @return The Level 3 LSSerializerFilter\r\n     ",
    "links" : [ ]
  }, {
    "name" : "public char[] getNewLine()",
    "returnType" : "char[]",
    "comment" : "\r\n     * Gets the end-of-line sequence of characters to be used during serialization.\r\n     ",
    "links" : [ ]
  }, {
    "name" : "public void serializeDOM3(Node node) throws IOException",
    "returnType" : "void",
    "comment" : "\r\n     * Serializes the Level 3 DOM node by creating an instance of DOM3TreeWalker\r\n     * which traverses the DOM tree and invokes handler events to serialize\r\n     * the DOM NOde. Throws an exception only if an I/O exception occured\r\n     * while serializing.\r\n     * This interface is a public API.\r\n     *\r\n     * @param node the Level 3 DOM node to serialize\r\n     * @throws IOException if an I/O exception occured while serializing\r\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setErrorHandler(DOMErrorHandler handler)",
    "returnType" : "void",
    "comment" : "\r\n     * Sets a DOMErrorHandler on the DOM Level 3 Serializer.\r\n     * \r\n     * This interface is a public API.\r\n     *\r\n     * @param handler the Level 3 DOMErrorHandler\r\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNodeFilter(LSSerializerFilter filter)",
    "returnType" : "void",
    "comment" : "\r\n     * Sets a LSSerializerFilter on the DOM Level 3 Serializer to filter nodes\r\n     * during serialization.\r\n     * \r\n     * This interface is a public API.\r\n     *\r\n     * @param filter the Level 3 LSSerializerFilter\r\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSerializationHandler(SerializationHandler handler)",
    "returnType" : "void",
    "comment" : "\r\n     * Sets a SerializationHandler on the DOM Serializer.\r\n     * \r\n     * This interface is a public API.\r\n     *\r\n     * @param handler An instance of SerializationHandler\r\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNewLine(char[] newLine)",
    "returnType" : "void",
    "comment" : "\r\n     * Sets the end-of-line sequence of characters to be used during serialization.\r\n     * @param newLine The end-of-line sequence of characters to be used during serialization.\r\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public DOMErrorHandler getErrorHandler()", "public LSSerializerFilter getNodeFilter()", "public char[] getNewLine()", "public void serializeDOM3(Node node) throws IOException", "public void setErrorHandler(DOMErrorHandler handler)", "public void setNodeFilter(LSSerializerFilter filter)", "public void setSerializationHandler(SerializationHandler handler)", "public void setNewLine(char[] newLine)" ],
  "variableNames" : [ "fErrorHandler", "fSerializerFilter", "fNewLine", "fSerializationHandler" ]
}