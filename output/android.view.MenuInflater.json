{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/MenuInflater.java",
  "packageName" : "android.view",
  "className" : "MenuInflater",
  "comment" : "\n * This class is used to instantiate menu XML files into Menu objects.\n * <p>\n * For performance reasons, menu inflation relies heavily on pre-processing of\n * XML files that is done at build time. Therefore, it is not currently possible\n * to use MenuInflater with an XmlPullParser over a plain XML file at runtime;\n * it only works with an XmlPullParser returned from a compiled resource (R.\n * <em>something</em> file.)\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "XML_MENU",
    "type" : "String",
    "comment" : " Menu tag name in XML. ",
    "links" : [ ]
  }, {
    "name" : "XML_GROUP",
    "type" : "String",
    "comment" : " Group tag name in XML. ",
    "links" : [ ]
  }, {
    "name" : "XML_ITEM",
    "type" : "String",
    "comment" : " Item tag name in XML. ",
    "links" : [ ]
  }, {
    "name" : "NO_ID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ACTION_VIEW_CONSTRUCTOR_SIGNATURE",
    "type" : "Class<?>[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE",
    "type" : "Class<?>[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActionViewConstructorArguments",
    "type" : "Object[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActionProviderConstructorArguments",
    "type" : "Object[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRealOwner",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void inflate(@MenuRes int menuRes, Menu menu)",
    "returnType" : "void",
    "comment" : "\n     * Inflate a menu hierarchy from the specified XML resource. Throws\n     * {@link InflateException} if there is an error.\n     *\n     * @param menuRes Resource ID for an XML layout resource to load (e.g.,\n     *            <code>R.menu.main_activity</code>)\n     * @param menu The Menu to inflate into. The items and submenus will be\n     *            added to this Menu.\n     ",
    "links" : [ "android.view.InflateException" ]
  }, {
    "name" : "private void parseMenu(XmlPullParser parser, AttributeSet attrs, Menu menu) throws XmlPullParserException, IOException",
    "returnType" : "void",
    "comment" : "\n     * Called internally to fill the given menu. If a sub menu is seen, it will\n     * call this recursively.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void registerMenu(@SuppressWarnings(\"unused\") MenuItem item, @SuppressWarnings(\"unused\") AttributeSet set)",
    "returnType" : "void",
    "comment" : "\n     * The method is a hook for layoutlib to do its magic.\n     * Nothing is needed outside of LayoutLib. However, it should not be deleted because it\n     * appears to do nothing.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void registerMenu(@SuppressWarnings(\"unused\") SubMenu subMenu, @SuppressWarnings(\"unused\") AttributeSet set)",
    "returnType" : "void",
    "comment" : "\n     * The method is a hook for layoutlib to do its magic.\n     * Nothing is needed outside of LayoutLib. However, it should not be deleted because it\n     * appears to do nothing.\n     ",
    "links" : [ ]
  }, {
    "name" : " Context getContext()",
    "returnType" : "Context",
    "comment" : "package",
    "links" : [ ]
  }, {
    "name" : "private Object getRealOwner()",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Object findRealOwner(Object owner)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void inflate(@MenuRes int menuRes, Menu menu)", "private void parseMenu(XmlPullParser parser, AttributeSet attrs, Menu menu) throws XmlPullParserException, IOException", "private void registerMenu(@SuppressWarnings(\"unused\") MenuItem item, @SuppressWarnings(\"unused\") AttributeSet set)", "private void registerMenu(@SuppressWarnings(\"unused\") SubMenu subMenu, @SuppressWarnings(\"unused\") AttributeSet set)", " Context getContext()", "private Object getRealOwner()", "private Object findRealOwner(Object owner)" ],
  "variableNames" : [ "LOG_TAG", "XML_MENU", "XML_GROUP", "XML_ITEM", "NO_ID", "ACTION_VIEW_CONSTRUCTOR_SIGNATURE", "ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE", "mActionViewConstructorArguments", "mActionProviderConstructorArguments", "mContext", "mRealOwner" ]
}