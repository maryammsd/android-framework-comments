{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/method/MovementMethod.java",
  "packageName" : "android.text.method",
  "className" : "MovementMethod",
  "comment" : "\n * Provides cursor positioning, scrolling and text selection functionality in a {@link TextView}.\n * <p>\n * The {@link TextView} delegates handling of key events, trackball motions and touches to\n * the movement method for purposes of content navigation.  The framework automatically\n * selects an appropriate movement method based on the content of the {@link TextView}.\n * </p><p>\n * This interface is intended for use by the framework; it should not be implemented\n * directly by applications.\n * </p>\n ",
  "links" : [ "android.widget.TextView" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void initialize(TextView widget, Spannable text)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyDown(TextView widget, Spannable text, int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyUp(TextView widget, Spannable text, int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyOther(TextView view, Spannable text, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "\n     * If the key listener wants to other kinds of key events, return true,\n     * otherwise return false and the caller (i.e. the widget host)\n     * will handle the key.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onTakeFocus(TextView widget, Spannable text, int direction)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTrackballEvent(TextView widget, Spannable text, MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTouchEvent(TextView widget, Spannable text, MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onGenericMotionEvent(TextView widget, Spannable text, MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canSelectArbitrarily()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if this movement method allows arbitrary selection\n     * of any text; false if it has no selection (like a movement method\n     * that only scrolls) or a constrained selection (for example\n     * limited to links.  The \"Select All\" menu item is disabled\n     * if arbitrary selection is not allowed.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void initialize(TextView widget, Spannable text)", "public boolean onKeyDown(TextView widget, Spannable text, int keyCode, KeyEvent event)", "public boolean onKeyUp(TextView widget, Spannable text, int keyCode, KeyEvent event)", "public boolean onKeyOther(TextView view, Spannable text, KeyEvent event)", "public void onTakeFocus(TextView widget, Spannable text, int direction)", "public boolean onTrackballEvent(TextView widget, Spannable text, MotionEvent event)", "public boolean onTouchEvent(TextView widget, Spannable text, MotionEvent event)", "public boolean onGenericMotionEvent(TextView widget, Spannable text, MotionEvent event)", "public boolean canSelectArbitrarily()" ],
  "variableNames" : [ ]
}