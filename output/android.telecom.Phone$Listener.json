{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/Phone.java",
  "packageName" : "android.telecom",
  "className" : "Listener",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onAudioStateChanged(Phone phone, AudioState audioState)",
    "returnType" : "void",
    "comment" : "\n         * Called when the audio state changes.\n         *\n         * @param phone The {@code Phone} calling this method.\n         * @param audioState The new {@link AudioState}.\n         *\n         * @deprecated Use {@link #onCallAudioStateChanged(Phone, CallAudioState)} instead.\n         ",
    "links" : [ "#onCallAudioStateChanged(Phone", "android.telecom.AudioState" ]
  }, {
    "name" : "public void onCallAudioStateChanged(Phone phone, CallAudioState callAudioState)",
    "returnType" : "void",
    "comment" : "\n         * Called when the audio state changes.\n         *\n         * @param phone The {@code Phone} calling this method.\n         * @param callAudioState The new {@link CallAudioState}.\n         ",
    "links" : [ "android.telecom.CallAudioState" ]
  }, {
    "name" : "public void onBringToForeground(Phone phone, boolean showDialpad)",
    "returnType" : "void",
    "comment" : "\n         * Called to bring the in-call screen to the foreground. The in-call experience should\n         * respond immediately by coming to the foreground to inform the user of the state of\n         * ongoing {@code Call}s.\n         *\n         * @param phone The {@code Phone} calling this method.\n         * @param showDialpad If true, put up the dialpad when the screen is shown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onCallAdded(Phone phone, Call call)",
    "returnType" : "void",
    "comment" : "\n         * Called when a {@code Call} has been added to this in-call session. The in-call user\n         * experience should add necessary state listeners to the specified {@code Call} and\n         * immediately start to show the user information about the existence\n         * and nature of this {@code Call}. Subsequent invocations of {@link #getCalls()} will\n         * include this {@code Call}.\n         *\n         * @param phone The {@code Phone} calling this method.\n         * @param call A newly added {@code Call}.\n         ",
    "links" : [ "#getCalls()" ]
  }, {
    "name" : "public void onCallRemoved(Phone phone, Call call)",
    "returnType" : "void",
    "comment" : "\n         * Called when a {@code Call} has been removed from this in-call session. The in-call user\n         * experience should remove any state listeners from the specified {@code Call} and\n         * immediately stop displaying any information about this {@code Call}.\n         * Subsequent invocations of {@link #getCalls()} will no longer include this {@code Call}.\n         *\n         * @param phone The {@code Phone} calling this method.\n         * @param call A newly removed {@code Call}.\n         ",
    "links" : [ "#getCalls()" ]
  }, {
    "name" : "public void onCanAddCallChanged(Phone phone, boolean canAddCall)",
    "returnType" : "void",
    "comment" : "\n         * Called when the {@code Phone} ability to add more calls changes.  If the phone cannot\n         * support more calls then {@code canAddCall} is set to {@code false}.  If it can, then it\n         * is set to {@code true}.\n         *\n         * @param phone The {@code Phone} calling this method.\n         * @param canAddCall Indicates whether an additional call can be added.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onSilenceRinger(Phone phone)",
    "returnType" : "void",
    "comment" : "\n         * Called to silence the ringer if a ringing call exists.\n         *\n         * @param phone The {@code Phone} calling this method.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onAudioStateChanged(Phone phone, AudioState audioState)", "public void onCallAudioStateChanged(Phone phone, CallAudioState callAudioState)", "public void onBringToForeground(Phone phone, boolean showDialpad)", "public void onCallAdded(Phone phone, Call call)", "public void onCallRemoved(Phone phone, Call call)", "public void onCanAddCallChanged(Phone phone, boolean canAddCall)", "public void onSilenceRinger(Phone phone)" ],
  "variableNames" : [ ]
}