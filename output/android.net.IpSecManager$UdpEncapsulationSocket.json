{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/IpSecManager.java",
  "packageName" : "android.net",
  "className" : "UdpEncapsulationSocket",
  "comment" : "\n     * This class provides access to a UDP encapsulation Socket.\n     *\n     * <p>{@code UdpEncapsulationSocket} wraps a system-provided datagram socket intended for IKEv2\n     * signalling and UDP encapsulated IPsec traffic. Instances can be obtained by calling {@link\n     * IpSecManager#openUdpEncapsulationSocket}. The provided socket cannot be re-bound by the\n     * caller. The caller should not close the {@code FileDescriptor} returned by {@link\n     * #getFileDescriptor}, but should use {@link #close} instead.\n     *\n     * <p>Allowing the user to close or unbind a UDP encapsulation socket could impact the traffic\n     * of the next user who binds to that port. To prevent this scenario, these sockets are held\n     * open by the system so that they may only be closed by calling {@link #close} or when the user\n     * process exits.\n     ",
  "links" : [ "#getFileDescriptor", "#close", "android.net.IpSecManager#openUdpEncapsulationSocket" ],
  "variables" : [ {
    "name" : "mPfd",
    "type" : "ParcelFileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IIpSecService",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResourceId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPort",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCloseGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public FileDescriptor getFileDescriptor()",
    "returnType" : "FileDescriptor",
    "comment" : " Get the encapsulation socket's file descriptor. ",
    "links" : [ ]
  }, {
    "name" : "public int getPort()",
    "returnType" : "int",
    "comment" : " Get the bound port of the wrapped socket. ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "\n         * Close this socket.\n         *\n         * <p>This closes the wrapped socket. Open encapsulation sockets count against a user's\n         * resource limits, and forgetting to close them eventually will result in {@link\n         * ResourceUnavailableException} being thrown.\n         ",
    "links" : [ "ResourceUnavailableException" ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : " Check that the socket was closed properly. ",
    "links" : [ ]
  }, {
    "name" : "public int getResourceId()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public FileDescriptor getFileDescriptor()", "public int getPort()", "public void close() throws IOException", "protected void finalize() throws Throwable", "public int getResourceId()", "public String toString()" ],
  "variableNames" : [ "mPfd", "mService", "mResourceId", "mPort", "mCloseGuard" ]
}