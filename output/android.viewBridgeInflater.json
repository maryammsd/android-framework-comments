{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/BridgeInflater.java",
  "packageName" : "android.view",
  "className" : "BridgeInflater",
  "comment" : "\n * Custom implementation of {@link LayoutInflater} to handle custom views.\n ",
  "variables" : [ {
    "name" : "INFLATER_CLASS_ATTR_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RES_AUTO_INFLATER_CLASS_ATTR",
    "type" : "ResourceReference",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LEGACY_APPCOMPAT_INFLATER_CLASS_ATTR",
    "type" : "ResourceReference",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANDROIDX_APPCOMPAT_INFLATER_CLASS_ATTR",
    "type" : "ResourceReference",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LEGACY_DEFAULT_APPCOMPAT_INFLATER_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANDROIDX_DEFAULT_APPCOMPAT_INFLATER_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLayoutlibCallback",
    "type" : "LayoutlibCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsInMerge",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResourceReference",
    "type" : "ResourceReference",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOpenDrawerLayouts",
    "type" : "Map<View, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTRS_THEME",
    "type" : "int[]",
    "comment" : " Keep in sync with the same value in LayoutInflater.",
    "links" : [ ]
  }, {
    "name" : "sClassPrefixList",
    "type" : "String[]",
    "comment" : "\n     * List of class prefixes which are tried first by default.\n     * <p/>\n     * This should match the list in com.android.internal.policy.impl.PhoneLayoutInflater.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCustomInflater",
    "type" : "BiFunction<String, AttributeSet, View>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static String[] getClassPrefixList()",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View onCreateView(String name, AttributeSet attrs) throws ClassNotFoundException",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Method getCreateViewMethod(Class<?> customInflaterClass) throws NoSuchMethodException",
    "returnType" : "Method",
    "comment" : "\n     * Finds the createView method in the given customInflaterClass. Since createView is\n     * currently package protected, it will show in the declared class so we iterate up the\n     * hierarchy and return the first instance we find.\n     * The returned method will be accessible.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static Class<?> findCustomInflater(@NotNull BridgeContext bc, @NotNull LayoutlibCallback layoutlibCallback)",
    "returnType" : "Class<?>",
    "comment" : "\n     * Finds the custom inflater class. If it's defined in the theme, we'll use that one (if the\n     * class does not exist, null is returned).\n     * If {@code viewInflaterClass} is not defined in the theme, we'll try to instantiate\n     * {@code android.support.v7.app.AppCompatViewInflater}\n     ",
    "links" : [ ]
  }, {
    "name" : "private View createViewFromCustomInflater(@NotNull String name, @NotNull AttributeSet attrs)",
    "returnType" : "View",
    "comment" : "\n     * Checks if there is a custom inflater and, when present, tries to instantiate the view\n     * using it.\n     ",
    "links" : [ ]
  }, {
    "name" : "public View createViewFromTag(View parent, String name, Context context, AttributeSet attrs, boolean ignoreThemeAttr)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View inflate(int resource, ViewGroup root)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private View loadCustomView(String name, AttributeSet attrs, boolean silent) throws Exception",
    "returnType" : "View",
    "comment" : "\n     * Instantiates the given view name and returns the instance. If the view doesn't exist, a\n     * MockView or null might be returned.\n     * @param name the custom view name\n     * @param attrs the {@link AttributeSet} to be passed to the view constructor\n     * @param silent if true, errors while loading the view won't be reported and, if the view\n     * doesn't exist, null will be returned.\n     ",
    "links" : [ "AttributeSet" ]
  }, {
    "name" : "private View loadCustomView(String name, AttributeSet attrs) throws Exception",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setupViewInContext(View view, AttributeSet attrs)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setIsInMerge(boolean isInMerge)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setResourceReference(ResourceReference reference)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public LayoutInflater cloneInContext(Context newContext)",
    "returnType" : "LayoutInflater",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static Object getViewKeyFromParser(AttributeSet attrs, BridgeContext bc, ResourceReference resourceReference, boolean isInMerge)",
    "returnType" : "Object",
    "comment" : "package",
    "links" : [ ]
  }, {
    "name" : "public void postInflateProcess(View view)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Map<View, String> getDrawerLayoutMap()",
    "returnType" : "Map<View, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDoneInflation()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "INFLATER_CLASS_ATTR_NAME", "RES_AUTO_INFLATER_CLASS_ATTR", "LEGACY_APPCOMPAT_INFLATER_CLASS_ATTR", "ANDROIDX_APPCOMPAT_INFLATER_CLASS_ATTR", "LEGACY_DEFAULT_APPCOMPAT_INFLATER_NAME", "ANDROIDX_DEFAULT_APPCOMPAT_INFLATER_NAME", "mLayoutlibCallback", "mIsInMerge", "mResourceReference", "mOpenDrawerLayouts", "ATTRS_THEME", "sClassPrefixList", "mCustomInflater" ],
  "methodNames" : [ "public static String[] getClassPrefixList()", "public View onCreateView(String name, AttributeSet attrs) throws ClassNotFoundException", "private static Method getCreateViewMethod(Class<?> customInflaterClass) throws NoSuchMethodException", "private static Class<?> findCustomInflater(@NotNull BridgeContext bc, @NotNull LayoutlibCallback layoutlibCallback)", "private View createViewFromCustomInflater(@NotNull String name, @NotNull AttributeSet attrs)", "public View createViewFromTag(View parent, String name, Context context, AttributeSet attrs, boolean ignoreThemeAttr)", "public View inflate(int resource, ViewGroup root)", "private View loadCustomView(String name, AttributeSet attrs, boolean silent) throws Exception", "private View loadCustomView(String name, AttributeSet attrs) throws Exception", "private void setupViewInContext(View view, AttributeSet attrs)", "public void setIsInMerge(boolean isInMerge)", "public void setResourceReference(ResourceReference reference)", "public LayoutInflater cloneInContext(Context newContext)", " static Object getViewKeyFromParser(AttributeSet attrs, BridgeContext bc, ResourceReference resourceReference, boolean isInMerge)", "public void postInflateProcess(View view)", "private Map<View, String> getDrawerLayoutMap()", "public void onDoneInflation()" ]
}