{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/LauncherApps.java",
  "packageName" : "android.content.pm",
  "className" : "Callback",
  "comment" : "\n     * Callbacks for package changes to this and related managed profiles.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void onPackageRemoved(String packageName, UserHandle user)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that a package was removed from the specified profile.\n         *\n         * If a package is removed while being updated onPackageChanged will be\n         * called instead.\n         *\n         * @param packageName The name of the package that was removed.\n         * @param user The UserHandle of the profile that generated the change.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onPackageAdded(String packageName, UserHandle user)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that a package was added to the specified profile.\n         *\n         * If a package is added while being updated then onPackageChanged will be\n         * called instead.\n         *\n         * @param packageName The name of the package that was added.\n         * @param user The UserHandle of the profile that generated the change.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onPackageChanged(String packageName, UserHandle user)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that a package was modified in the specified profile.\n         * This can happen, for example, when the package is updated or when\n         * one or more components are enabled or disabled.\n         *\n         * @param packageName The name of the package that has changed.\n         * @param user The UserHandle of the profile that generated the change.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onPackagesAvailable(String[] packageNames, UserHandle user, boolean replacing)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that one or more packages have become available. For\n         * example, this can happen when a removable storage card has\n         * reappeared.\n         *\n         * @param packageNames The names of the packages that have become\n         *            available.\n         * @param user The UserHandle of the profile that generated the change.\n         * @param replacing Indicates whether these packages are replacing\n         *            existing ones.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onPackagesUnavailable(String[] packageNames, UserHandle user, boolean replacing)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that one or more packages have become unavailable. For\n         * example, this can happen when a removable storage card has been\n         * removed.\n         *\n         * @param packageNames The names of the packages that have become\n         *            unavailable.\n         * @param user The UserHandle of the profile that generated the change.\n         * @param replacing Indicates whether the packages are about to be\n         *            replaced with new versions.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onPackagesSuspended(String[] packageNames, UserHandle user)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that one or more packages have been suspended. For\n         * example, this can happen when a Device Administrator suspends\n         * an applicaton.\n         *\n         * <p>Note: On devices running {@link android.os.Build.VERSION_CODES#P Android P} or higher,\n         * any apps that override {@link #onPackagesSuspended(String[], UserHandle, Bundle)} will\n         * not receive this callback.\n         *\n         * @param packageNames The names of the packages that have just been\n         *            suspended.\n         * @param user The UserHandle of the profile that generated the change.\n         ",
    "links" : [ "android.os.Build.VERSION_CODES#P", "#onPackagesSuspended(String" ]
  }, {
    "name" : "public void onPackagesSuspended(String[] packageNames, UserHandle user, @Nullable Bundle launcherExtras)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that one or more packages have been suspended. A device administrator or an app\n         * with {@code android.permission.SUSPEND_APPS} can do this.\n         *\n         * <p>A suspending app with the permission {@code android.permission.SUSPEND_APPS} can\n         * optionally provide a {@link Bundle} of extra information that it deems helpful for the\n         * launcher to handle the suspended state of these packages. The contents of this\n         * {@link Bundle} are supposed to be a contract between the suspending app and the launcher.\n         *\n         * @param packageNames The names of the packages that have just been suspended.\n         * @param user the user for which the given packages were suspended.\n         * @param launcherExtras A {@link Bundle} of extras for the launcher, if provided to the\n         *                      system, {@code null} otherwise.\n         * @see PackageManager#isPackageSuspended()\n         * @see #getSuspendedPackageLauncherExtras(String, UserHandle)\n         * @deprecated {@code launcherExtras} should be obtained by using\n         * {@link #getSuspendedPackageLauncherExtras(String, UserHandle)}. For all other cases,\n         * {@link #onPackagesSuspended(String[], UserHandle)} should be used.\n         ",
    "links" : [ "#getSuspendedPackageLauncherExtras(String", "android.os.Bundle", "#onPackagesSuspended(String" ]
  }, {
    "name" : "public void onPackagesUnsuspended(String[] packageNames, UserHandle user)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that one or more packages have been unsuspended. For\n         * example, this can happen when a Device Administrator unsuspends\n         * an applicaton.\n         *\n         * @param packageNames The names of the packages that have just been\n         *            unsuspended.\n         * @param user The UserHandle of the profile that generated the change.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onShortcutsChanged(@NonNull String packageName, @NonNull List<ShortcutInfo> shortcuts, @NonNull UserHandle user)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that one or more shortcuts of any kind (dynamic, pinned, or manifest)\n         * have been added, updated or removed.\n         *\n         * <p>Only the applications that are allowed to access the shortcut information,\n         * as defined in {@link #hasShortcutHostPermission()}, will receive it.\n         *\n         * @param packageName The name of the package that has the shortcuts.\n         * @param shortcuts All shortcuts from the package (dynamic, manifest and/or pinned).\n         *    Only \"key\" information will be provided, as defined in\n         *    {@link ShortcutInfo#hasKeyFieldsOnly()}.\n         * @param user The UserHandle of the profile that generated the change.\n         *\n         * @see ShortcutManager\n         ",
    "links" : [ "#hasShortcutHostPermission()", "android.content.pm.ShortcutInfo#hasKeyFieldsOnly()" ]
  }, {
    "name" : "public void onPackageLoadingProgressChanged(@NonNull String packageName, @NonNull UserHandle user, float progress)",
    "returnType" : "void",
    "comment" : "\n         * Indicates that the loading progress of an installed package has changed.\n         *\n         * @param packageName The name of the package that has changed.\n         * @param user The UserHandle of the profile that generated the change.\n         * @param progress The new progress value, between [0, 1].\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onPackageRemoved(String packageName, UserHandle user)", "public abstract void onPackageAdded(String packageName, UserHandle user)", "public abstract void onPackageChanged(String packageName, UserHandle user)", "public abstract void onPackagesAvailable(String[] packageNames, UserHandle user, boolean replacing)", "public abstract void onPackagesUnavailable(String[] packageNames, UserHandle user, boolean replacing)", "public void onPackagesSuspended(String[] packageNames, UserHandle user)", "public void onPackagesSuspended(String[] packageNames, UserHandle user, @Nullable Bundle launcherExtras)", "public void onPackagesUnsuspended(String[] packageNames, UserHandle user)", "public void onShortcutsChanged(@NonNull String packageName, @NonNull List<ShortcutInfo> shortcuts, @NonNull UserHandle user)", "public void onPackageLoadingProgressChanged(@NonNull String packageName, @NonNull UserHandle user, float progress)" ],
  "variableNames" : [ ]
}