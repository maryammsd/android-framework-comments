{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/util/jar/StrictJarFile.java",
  "packageName" : "android.util.jar",
  "className" : "FDStream",
  "comment" : "\n     * Wrap a stream around a FileDescriptor.  The file descriptor is shared\n     * among all streams returned by getInputStream(), so we have to synchronize\n     * access to it.  (We can optimize this by adding buffering here to reduce\n     * collisions.)\n     *\n     * <p>We could support mark/reset, but we don't currently need them.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "fd",
    "type" : "FileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "endOffset",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "offset",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int available() throws IOException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int read() throws IOException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int read(byte[] buffer, int byteOffset, int byteCount) throws IOException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long skip(long byteCount) throws IOException",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int available() throws IOException", "public int read() throws IOException", "public int read(byte[] buffer, int byteOffset, int byteCount) throws IOException", "public long skip(long byteCount) throws IOException" ],
  "variableNames" : [ "fd", "endOffset", "offset" ]
}