{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/util/PathParser.java",
  "packageName" : "android.util",
  "className" : "PathParser",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOGTAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Path createPathFromPathData(String pathString)",
    "returnType" : "Path",
    "comment" : "\n     * @param pathString The string representing a path, the same as \"d\" string in svg file.\n     * @return the generated Path object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void createPathFromPathData(Path outPath, PathData data)",
    "returnType" : "void",
    "comment" : "\n     * Interpret PathData as path commands and insert the commands to the given path.\n     *\n     * @param data The source PathData to be converted.\n     * @param outPath The Path object where path commands will be inserted.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean canMorph(PathData pathDataFrom, PathData pathDataTo)",
    "returnType" : "boolean",
    "comment" : "\n     * @param pathDataFrom The source path represented in PathData\n     * @param pathDataTo The target path represented in PathData\n     * @return whether the <code>nodesFrom</code> can morph into <code>nodesTo</code>\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean interpolatePathData(PathData outData, PathData fromData, PathData toData, float fraction)",
    "returnType" : "boolean",
    "comment" : "\n     * Interpolate between the <code>fromData</code> and <code>toData</code> according to the\n     * <code>fraction</code>, and put the resulting path data into <code>outData</code>.\n     *\n     * @param outData The resulting PathData of the interpolation\n     * @param fromData The start value as a PathData.\n     * @param toData The end value as a PathData\n     * @param fraction The fraction to interpolate.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static native void nParseStringForPath(long pathPtr, String pathString, int stringLength)",
    "returnType" : "void",
    "comment" : " Native functions are defined below.",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreatePathDataFromString(String pathString, int stringLength)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nCreatePathFromPathData(long outPathPtr, long pathData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateEmptyPathData()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreatePathData(long nativePtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native boolean nInterpolatePathData(long outDataPtr, long fromDataPtr, long toDataPtr, float fraction)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nFinalize(long nativePtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native boolean nCanMorph(long fromDataPtr, long toDataPtr)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetPathData(long outDataPtr, long fromDataPtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Path createPathFromPathData(String pathString)", "public static void createPathFromPathData(Path outPath, PathData data)", "public static boolean canMorph(PathData pathDataFrom, PathData pathDataTo)", "public static boolean interpolatePathData(PathData outData, PathData fromData, PathData toData, float fraction)", "private static native void nParseStringForPath(long pathPtr, String pathString, int stringLength)", "private static native long nCreatePathDataFromString(String pathString, int stringLength)", "private static native void nCreatePathFromPathData(long outPathPtr, long pathData)", "private static native long nCreateEmptyPathData()", "private static native long nCreatePathData(long nativePtr)", "private static native boolean nInterpolatePathData(long outDataPtr, long fromDataPtr, long toDataPtr, float fraction)", "private static native void nFinalize(long nativePtr)", "private static native boolean nCanMorph(long fromDataPtr, long toDataPtr)", "private static native void nSetPathData(long outDataPtr, long fromDataPtr)" ],
  "variableNames" : [ "LOGTAG" ]
}