{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/SurfaceHolder.java",
  "packageName" : "android.view",
  "className" : "Callback2",
  "comment" : "\n     * Additional callbacks that can be received for {@link Callback}.\n     ",
  "links" : [ "Callback" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void surfaceRedrawNeeded(@NonNull SurfaceHolder holder)",
    "returnType" : "void",
    "comment" : "\n         * Called when the application needs to redraw the content of its\n         * surface, after it is resized or for some other reason.  By not\n         * returning from here until the redraw is complete, you can ensure that\n         * the user will not see your surface in a bad state (at its new\n         * size before it has been correctly drawn that way).  This will\n         * typically be preceeded by a call to {@link #surfaceChanged}.\n         *\n         * As of O, {@link #surfaceRedrawNeededAsync} may be implemented\n         * to provide a non-blocking implementation. If {@link #surfaceRedrawNeededAsync}\n         * is not implemented, then this will be called instead.\n         *\n         * @param holder The SurfaceHolder whose surface has changed.\n         ",
    "links" : [ "#surfaceRedrawNeededAsync", "#surfaceChanged" ]
  }, {
    "name" : " void surfaceRedrawNeededAsync(@NonNull SurfaceHolder holder, @NonNull Runnable drawingFinished)",
    "returnType" : "void",
    "comment" : "\n         * An alternative to surfaceRedrawNeeded where it is not required to block\n         * until the redraw is complete. You should initiate the redraw, and return,\n         * later invoking drawingFinished when your redraw is complete.\n         *\n         * This can be useful to avoid blocking your main application thread on rendering.\n         *\n         * As of O, if this is implemented {@link #surfaceRedrawNeeded} will not be called.\n         * However it is still recommended to implement {@link #surfaceRedrawNeeded} for\n         * compatibility with older versions of the platform.\n         *\n         * @param holder The SurfaceHolder which needs redrawing.\n         * @param drawingFinished A runnable to signal completion. This may be invoked\n         * from any thread.\n         *\n         ",
    "links" : [ "#surfaceRedrawNeeded" ]
  } ],
  "methodNames" : [ " void surfaceRedrawNeeded(@NonNull SurfaceHolder holder)", " void surfaceRedrawNeededAsync(@NonNull SurfaceHolder holder, @NonNull Runnable drawingFinished)" ],
  "variableNames" : [ ]
}