{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/Debug.java",
  "packageName" : "android.os",
  "className" : "InstructionCount",
  "comment" : "\n     * API for gathering and querying instruction counts.\n     *\n     * Example usage:\n     * <pre>\n     *   Debug.InstructionCount icount = new Debug.InstructionCount();\n     *   icount.resetAndStart();\n     *    [... do lots of stuff ...]\n     *   if (icount.collect()) {\n     *       System.out.println(\"Total instructions executed: \"\n     *           + icount.globalTotal());\n     *       System.out.println(\"Method invocations: \"\n     *           + icount.globalMethodInvocations());\n     *   }\n     * </pre>\n     *\n     * @deprecated Instruction counting is no longer supported.\n     ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public boolean resetAndStart()",
    "returnType" : "boolean",
    "comment" : "\n         * Reset counters and ensure counts are running.  Counts may\n         * have already been running.\n         *\n         * @return true if counting was started\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean collect()",
    "returnType" : "boolean",
    "comment" : "\n         * Collect instruction counts.  May or may not stop the\n         * counting process.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int globalTotal()",
    "returnType" : "int",
    "comment" : "\n         * Return the total number of instructions executed globally (i.e. in\n         * all threads).\n         ",
    "links" : [ ]
  }, {
    "name" : "public int globalMethodInvocations()",
    "returnType" : "int",
    "comment" : "\n         * Return the total number of method-invocation instructions\n         * executed globally.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public boolean resetAndStart()", "public boolean collect()", "public int globalTotal()", "public int globalMethodInvocations()" ]
}