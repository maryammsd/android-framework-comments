{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/safetycenter/config/SafetySource.java",
  "packageName" : "android.safetycenter.config",
  "className" : "Builder",
  "comment" : " Builder class for {@link SafetySource}. ",
  "links" : [ "android.safetycenter.config.SafetySource" ],
  "variables" : [ {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitleResId",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitleForWorkResId",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSummaryResId",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIntentAction",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProfile",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialDisplayState",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxSeverityLevel",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSearchTermsResId",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLoggingAllowed",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRefreshOnPageOpenAllowed",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNotificationsAllowed",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeduplicationGroup",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageCertificateHashes",
    "type" : "ArraySet<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitleForPrivateProfileResId",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setId(@Nullable String id)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the id of this safety source.\n         *\n         * <p>The id must be unique among safety sources in a Safety Center configuration.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPackageName(@Nullable String packageName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the package name of this safety source.\n         *\n         * <p>This is the package that owns the source. The package will receive refresh requests\n         * and it can send set requests for the source.\n         *\n         * <p>The package name is required for sources of type dynamic and issue-only. The package\n         * name is prohibited for sources of type static.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setTitleResId(@StringRes int titleResId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the resource id of the title of this safety source.\n         *\n         * <p>The id must refer to a string resource that is either accessible from any resource\n         * context or that is accessible from the same resource context that was used to load the\n         * Safety Center config. The id defaults to {@link Resources#ID_NULL} when a title is not\n         * provided.\n         *\n         * <p>The title is required for sources of type static and for sources of type dynamic that\n         * are not hidden and that do not provide search terms. The title is prohibited for sources\n         * of type issue-only.\n         ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : "public Builder setTitleForWorkResId(@StringRes int titleForWorkResId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the resource id of the title for work of this safety source.\n         *\n         * <p>The id must refer to a string resource that is either accessible from any resource\n         * context or that is accessible from the same resource context that was used to load the\n         * Safety Center configuration. The id defaults to {@link Resources#ID_NULL} when a title\n         * for work is not provided.\n         *\n         * <p>The title for work is required if the profile property of the source is set to {@link\n         * SafetySource#PROFILE_ALL} and either the source is of type static or the source is a\n         * source of type dynamic that is not hidden and that does not provide search terms. The\n         * title for work is prohibited for sources of type issue-only and if the profile property\n         * of the source is not set to {@link SafetySource#PROFILE_ALL}.\n         ",
    "links" : [ "android.safetycenter.config.SafetySource#PROFILE_ALL", "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : "public Builder setTitleForPrivateProfileResId(@StringRes int titleForPrivateProfileResId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the resource id of the title for private profile of this safety source.\n         *\n         * <p>The id must refer to a string resource that is either accessible from any resource\n         * context or that is accessible from the same resource context that was used to load the\n         * Safety Center configuration. The id defaults to {@link Resources#ID_NULL} when a title\n         * for private profile is not provided.\n         *\n         * <p>The title for private profile is required if the profile property of the source is set\n         * to {@link SafetySource#PROFILE_ALL} and either the source is of type static or the source\n         * is a source of type dynamic that is not hidden and that does not provide search terms.\n         * The title for private profile is prohibited for sources of type issue-only and if the\n         * profile property of the source is not set to {@link SafetySource#PROFILE_ALL}.\n         ",
    "links" : [ "android.safetycenter.config.SafetySource#PROFILE_ALL", "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : "public Builder setSummaryResId(@StringRes int summaryResId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the resource id of the summary of this safety source.\n         *\n         * <p>The id must refer to a string resource that is either accessible from any resource\n         * context or that is accessible from the same resource context that was used to load the\n         * Safety Center configuration. The id defaults to {@link Resources#ID_NULL} when a summary\n         * is not provided.\n         *\n         * <p>The summary is required for sources of type dynamic that are not hidden. The summary\n         * is prohibited for sources of type issue-only.\n         ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : "public Builder setIntentAction(@Nullable String intentAction)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the intent action of this safety source.\n         *\n         * <p>An intent created from the intent action should resolve to a public activity. If the\n         * source is displayed as an entry in the Safety Center page, and if the action is set to\n         * {@code null} or if it does not resolve to an activity the source will be marked as\n         * disabled.\n         *\n         * <p>The intent action is required for sources of type static and for sources of type\n         * dynamic that are enabled. The intent action is prohibited for sources of type issue-only.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setProfile(@Profile int profile)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the profile property of this safety source.\n         *\n         * <p>The profile property is explicitly required for all source types.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setInitialDisplayState(@InitialDisplayState int initialDisplayState)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the initial display state of this safety source.\n         *\n         * <p>The initial display state is prohibited for sources of type static and issue-only.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxSeverityLevel(int maxSeverityLevel)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the maximum severity level of this safety source.\n         *\n         * <p>The maximum severity level dictates the maximum severity level values that can be used\n         * in the source status or the source issues when setting the source data at runtime. A\n         * source can always send a status severity level of at least {@link\n         * android.safetycenter.SafetySourceData#SEVERITY_LEVEL_INFORMATION} even if the maximum\n         * severity level is set to a lower value.\n         *\n         * <p>The maximum severity level is prohibited for sources of type static.\n         ",
    "links" : [ "android.safetycenter.SafetySourceData#SEVERITY_LEVEL_INFORMATION" ]
  }, {
    "name" : "public Builder setSearchTermsResId(@StringRes int searchTermsResId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the resource id of the search terms of this safety source.\n         *\n         * <p>The id must refer to a string resource that is either accessible from any resource\n         * context or that is accessible from the same resource context that was used to load the\n         * Safety Center configuration. The id defaults to {@link Resources#ID_NULL} when search\n         * terms are not provided.\n         *\n         * <p>The search terms are prohibited for sources of type issue-only.\n         ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : "public Builder setLoggingAllowed(boolean loggingAllowed)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the logging allowed property of this safety source.\n         *\n         * <p>The logging allowed property defaults to {@code true}.\n         *\n         * <p>The logging allowed property is prohibited for sources of type static.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setRefreshOnPageOpenAllowed(boolean refreshOnPageOpenAllowed)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the refresh on page open allowed property of this safety source.\n         *\n         * <p>If set to {@code true}, a refresh request will be sent to the source when the Safety\n         * Center page is opened. The refresh on page open allowed property defaults to {@code\n         * false}.\n         *\n         * <p>The refresh on page open allowed property is prohibited for sources of type static.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNotificationsAllowed(boolean notificationsAllowed)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the {@link #areNotificationsAllowed()} property of this {@link SafetySource}.\n         *\n         * <p>If set to {@code true} Safety Center may post Notifications about issues reported by\n         * this source.\n         *\n         * <p>The default value is {@code false}.\n         *\n         * @see #areNotificationsAllowed()\n         ",
    "links" : [ "#areNotificationsAllowed()", "android.safetycenter.config.SafetySource" ]
  }, {
    "name" : "public Builder setDeduplicationGroup(@Nullable String deduplicationGroup)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the deduplication group for this source.\n         *\n         * <p>Sources which are part of the same deduplication group can coordinate to deduplicate\n         * issues that they're sending to SafetyCenter by providing the same deduplication\n         * identifier with those issues.\n         *\n         * <p>The deduplication group property is prohibited for sources of type static.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addPackageCertificateHash(@NonNull String packageCertificateHash)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a package certificate hash to the {@link #getPackageCertificateHashes()} property of\n         * this {@link SafetySource}.\n         *\n         * @see #getPackageCertificateHashes()\n         ",
    "links" : [ "#getPackageCertificateHashes()", "android.safetycenter.config.SafetySource" ]
  }, {
    "name" : "public SafetySource build()",
    "returnType" : "SafetySource",
    "comment" : "\n         * Creates the {@link SafetySource} defined by this {@link Builder}.\n         *\n         * <p>Throws an {@link IllegalStateException} if any constraint on the safety source is\n         * violated.\n         ",
    "links" : [ "IllegalStateException", "android.safetycenter.config.SafetySource", "Builder" ]
  } ],
  "methodNames" : [ "public Builder setId(@Nullable String id)", "public Builder setPackageName(@Nullable String packageName)", "public Builder setTitleResId(@StringRes int titleResId)", "public Builder setTitleForWorkResId(@StringRes int titleForWorkResId)", "public Builder setTitleForPrivateProfileResId(@StringRes int titleForPrivateProfileResId)", "public Builder setSummaryResId(@StringRes int summaryResId)", "public Builder setIntentAction(@Nullable String intentAction)", "public Builder setProfile(@Profile int profile)", "public Builder setInitialDisplayState(@InitialDisplayState int initialDisplayState)", "public Builder setMaxSeverityLevel(int maxSeverityLevel)", "public Builder setSearchTermsResId(@StringRes int searchTermsResId)", "public Builder setLoggingAllowed(boolean loggingAllowed)", "public Builder setRefreshOnPageOpenAllowed(boolean refreshOnPageOpenAllowed)", "public Builder setNotificationsAllowed(boolean notificationsAllowed)", "public Builder setDeduplicationGroup(@Nullable String deduplicationGroup)", "public Builder addPackageCertificateHash(@NonNull String packageCertificateHash)", "public SafetySource build()" ],
  "variableNames" : [ "mType", "mId", "mPackageName", "mTitleResId", "mTitleForWorkResId", "mSummaryResId", "mIntentAction", "mProfile", "mInitialDisplayState", "mMaxSeverityLevel", "mSearchTermsResId", "mLoggingAllowed", "mRefreshOnPageOpenAllowed", "mNotificationsAllowed", "mDeduplicationGroup", "mPackageCertificateHashes", "mTitleForPrivateProfileResId" ]
}