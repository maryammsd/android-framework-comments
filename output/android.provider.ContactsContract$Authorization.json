{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "Authorization",
  "comment" : "\n     * <p>\n     * API for obtaining a pre-authorized version of a URI that normally requires special\n     * permission (beyond READ_CONTACTS) to read.  The caller obtaining the pre-authorized URI\n     * must already have the necessary permissions to access the URI; otherwise a\n     * {@link SecurityException} will be thrown. Unlike {@link Context#grantUriPermission},\n     * this can be used to grant permissions that aren't explicitly required for the URI inside\n     * AndroidManifest.xml. For example, permissions that are only required when reading URIs\n     * that refer to the user's profile.\n     * </p>\n     * <p>\n     * The authorized URI returned in the bundle contains an expiring token that allows the\n     * caller to execute the query without having the special permissions that would normally\n     * be required. The token expires in five minutes.\n     * </p>\n     * <p>\n     * This API does not access disk, and should be safe to invoke from the UI thread.\n     * </p>\n     * <p>\n     * Example usage:\n     * <pre>\n     * Uri profileUri = ContactsContract.Profile.CONTENT_VCARD_URI;\n     * Bundle uriBundle = new Bundle();\n     * uriBundle.putParcelable(ContactsContract.Authorization.KEY_URI_TO_AUTHORIZE, uri);\n     * Bundle authResponse = getContext().getContentResolver().call(\n     *         ContactsContract.AUTHORITY_URI,\n     *         ContactsContract.Authorization.AUTHORIZATION_METHOD,\n     *         null, // String arg, not used.\n     *         uriBundle);\n     * if (authResponse != null) {\n     *     Uri preauthorizedProfileUri = (Uri) authResponse.getParcelable(\n     *             ContactsContract.Authorization.KEY_AUTHORIZED_URI);\n     *     // This pre-authorized URI can be queried by a caller without READ_PROFILE\n     *     // permission.\n     * }\n     * </pre>\n     * </p>\n     *\n     * @hide\n     ",
  "links" : [ "android.content.Context#grantUriPermission", "SecurityException" ],
  "variables" : [ {
    "name" : "AUTHORIZATION_METHOD",
    "type" : "String",
    "comment" : "\n         * The method to invoke to create a pre-authorized URI out of the input argument.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_URI_TO_AUTHORIZE",
    "type" : "String",
    "comment" : "\n         * The key to set in the outbound Bundle with the URI that should be authorized.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_AUTHORIZED_URI",
    "type" : "String",
    "comment" : "\n         * The key to retrieve from the returned Bundle to obtain the pre-authorized URI.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "AUTHORIZATION_METHOD", "KEY_URI_TO_AUTHORIZE", "KEY_AUTHORIZED_URI" ]
}