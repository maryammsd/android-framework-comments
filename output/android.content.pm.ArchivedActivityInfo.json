{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/ArchivedActivityInfo.java",
  "packageName" : "android.content.pm",
  "className" : "ArchivedActivityInfo",
  "comment" : "\n * Contains fields required to show archived package in Launcher.\n * @see ArchivedPackageInfo\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLabel",
    "type" : "CharSequence",
    "comment" : " The label for the activity. ",
    "links" : [ ]
  }, {
    "name" : "mComponentName",
    "type" : "ComponentName",
    "comment" : " The component name of this activity. ",
    "links" : [ ]
  }, {
    "name" : "mIcon",
    "type" : "Drawable",
    "comment" : "\n     * Icon of the activity in the app's locale. if null then the default icon would be shown in the\n     * launcher.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMonochromeIcon",
    "type" : "Drawable",
    "comment" : " Monochrome icon, if defined, of the activity. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " ArchivedActivityParcel getParcel()",
    "returnType" : "ArchivedActivityParcel",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static Bitmap drawableToBitmap(Drawable drawable)",
    "returnType" : "Bitmap",
    "comment" : "\n     * Convert a generic drawable into a bitmap.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Bitmap drawableToBitmap(Drawable drawable, int iconSize)",
    "returnType" : "Bitmap",
    "comment" : "\n     * Same as above, but scale the resulting image to fit iconSize.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static byte[] bytesFromBitmap(Bitmap bitmap)",
    "returnType" : "byte[]",
    "comment" : "\n     * Compress bitmap to PNG format.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static Drawable drawableFromCompressedBitmap(byte[] bytes)",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getLabel()",
    "returnType" : "CharSequence",
    "comment" : "\n     * The label for the activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ComponentName getComponentName()",
    "returnType" : "ComponentName",
    "comment" : "\n     * The component name of this activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Drawable getIcon()",
    "returnType" : "Drawable",
    "comment" : "\n     * Icon of the activity in the app's locale. if null then the default icon would be shown in the\n     * launcher.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Drawable getMonochromeIcon()",
    "returnType" : "Drawable",
    "comment" : "\n     * Monochrome icon, if defined, of the activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ArchivedActivityInfo setLabel(@NonNull CharSequence value)",
    "returnType" : "ArchivedActivityInfo",
    "comment" : "\n     * The label for the activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ArchivedActivityInfo setComponentName(@NonNull ComponentName value)",
    "returnType" : "ArchivedActivityInfo",
    "comment" : "\n     * The component name of this activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ArchivedActivityInfo setIcon(@NonNull Drawable value)",
    "returnType" : "ArchivedActivityInfo",
    "comment" : "\n     * Icon of the activity in the app's locale. if null then the default icon would be shown in the\n     * launcher.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ArchivedActivityInfo setMonochromeIcon(@NonNull Drawable value)",
    "returnType" : "ArchivedActivityInfo",
    "comment" : "\n     * Monochrome icon, if defined, of the activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void __metadata()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " ArchivedActivityParcel getParcel()", "public static Bitmap drawableToBitmap(Drawable drawable)", "public static Bitmap drawableToBitmap(Drawable drawable, int iconSize)", "public static byte[] bytesFromBitmap(Bitmap bitmap)", "private static Drawable drawableFromCompressedBitmap(byte[] bytes)", "public CharSequence getLabel()", "public ComponentName getComponentName()", "public Drawable getIcon()", "public Drawable getMonochromeIcon()", "public ArchivedActivityInfo setLabel(@NonNull CharSequence value)", "public ArchivedActivityInfo setComponentName(@NonNull ComponentName value)", "public ArchivedActivityInfo setIcon(@NonNull Drawable value)", "public ArchivedActivityInfo setMonochromeIcon(@NonNull Drawable value)", "private void __metadata()" ],
  "variableNames" : [ "TAG", "mLabel", "mComponentName", "mIcon", "mMonochromeIcon" ]
}