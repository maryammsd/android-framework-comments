{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/parsers/DocumentBuilder.java",
  "packageName" : "javax.xml.parsers",
  "className" : "DocumentBuilder",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "\n      * <p>Reset this <code>DocumentBuilder</code>.</p>\n      *\n      * This method removes both the <code>EntityResolver</code> and <code>ErrorHandler</code>\n      * instances associated with this <code>DocumentBuilder</code> and sets all internal\n      * properties to false including those set by the <code>DocumentBuilderFactory</code> when\n      * this <code>DocumentBuilder</code> was created.\n      *\n      * @see #setEntityResolver(EntityResolver)\n      * @see #setErrorHandler(ErrorHandler)\n      * @see DocumentBuilderFactory\n      *\n      * @since 1.5\n      ",
    "links" : [ ]
  }, {
    "name" : "public Document parse(InputStream is) throws SAXException, IOException",
    "returnType" : "Document",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Document parse(InputStream is, String systemId) throws SAXException, IOException",
    "returnType" : "Document",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Document parse(String uri) throws SAXException, IOException",
    "returnType" : "Document",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Document parse(File f) throws SAXException, IOException",
    "returnType" : "Document",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract Document parse(InputSource is) throws SAXException, IOException",
    "returnType" : "Document",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean isNamespaceAware()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean isValidating()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void setEntityResolver(EntityResolver er)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void setErrorHandler(ErrorHandler eh)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract Document newDocument()",
    "returnType" : "Document",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract DOMImplementation getDOMImplementation()",
    "returnType" : "DOMImplementation",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Schema getSchema()",
    "returnType" : "Schema",
    "comment" : " <p>Get a reference to the the {@link Schema} being used by\n     * the XML processor.</p>\n     *\n     * <p>If no schema is being used, <code>null</code> is returned.</p>\n     *\n     * @return {@link Schema} being used or <code>null</code>\n     *  if none in use\n     *\n     * @throws UnsupportedOperationException\n     *      For backward compatibility, when implementations for\n     *      earlier versions of JAXP is used, this exception will be\n     *      thrown.\n     *\n     * @since 1.5\n     ",
    "links" : [ "javax.xml.validation.Schema" ]
  }, {
    "name" : "public boolean isXIncludeAware()",
    "returnType" : "boolean",
    "comment" : "\n     * <p>Get the XInclude processing mode for this parser.</p>\n     *\n     * @return\n     *      the return value of\n     *      the {@link DocumentBuilderFactory#isXIncludeAware()}\n     *      when this parser was created from factory.\n     *\n     * @throws UnsupportedOperationException\n     *      For backward compatibility, when implementations for\n     *      earlier versions of JAXP is used, this exception will be\n     *      thrown.\n     *\n     * @since 1.5\n     *\n     * @see DocumentBuilderFactory#setXIncludeAware(boolean)\n     ",
    "links" : [ "javax.xml.parsers.DocumentBuilderFactory#isXIncludeAware()" ]
  } ],
  "methodNames" : [ "public void reset()", "public Document parse(InputStream is) throws SAXException, IOException", "public Document parse(InputStream is, String systemId) throws SAXException, IOException", "public Document parse(String uri) throws SAXException, IOException", "public Document parse(File f) throws SAXException, IOException", "public abstract Document parse(InputSource is) throws SAXException, IOException", "public abstract boolean isNamespaceAware()", "public abstract boolean isValidating()", "public abstract void setEntityResolver(EntityResolver er)", "public abstract void setErrorHandler(ErrorHandler eh)", "public abstract Document newDocument()", "public abstract DOMImplementation getDOMImplementation()", "public Schema getSchema()", "public boolean isXIncludeAware()" ],
  "variableNames" : [ "DEBUG" ]
}