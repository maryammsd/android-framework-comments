{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/SchemaVisibilityConfig.java",
  "packageName" : "android.app.appsearch",
  "className" : "Builder",
  "comment" : " The builder class of {@link SchemaVisibilityConfig}. ",
  "links" : [ "android.app.appsearch.SchemaVisibilityConfig" ],
  "variables" : [ {
    "name" : "mAllowedPackages",
    "type" : "List<PackageIdentifierParcel>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequiredPermissions",
    "type" : "List<VisibilityPermissionConfig>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPubliclyVisibleTargetPackage",
    "type" : "PackageIdentifierParcel",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBuilt",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder addAllowedPackage(@NonNull PackageIdentifier packageIdentifier)",
    "returnType" : "Builder",
    "comment" : " Add {@link PackageIdentifier} of packages which has access to this schema. ",
    "links" : [ "android.app.appsearch.PackageIdentifier" ]
  }, {
    "name" : "public Builder clearAllowedPackages()",
    "returnType" : "Builder",
    "comment" : " Clears the list of packages which have access to this schema. ",
    "links" : [ ]
  }, {
    "name" : "public Builder addRequiredPermissions(@NonNull Set<Integer> visibleToPermissions)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a set of required Android {@link android.Manifest.permission} combination a package\n         * needs to hold to access the schema this {@link SchemaVisibilityConfig} represents.\n         *\n         * <p>If the querier holds ALL of the required permissions in this combination, they will\n         * have access to read {@link GenericDocument} objects of the given schema type.\n         *\n         * <p>You can call this method repeatedly to add multiple permission combinations, and the\n         * querier will have access if they holds ANY of the combinations.\n         *\n         * <p>Merged Set available from {@link #getRequiredPermissions()}.\n         *\n         * @see SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility for supported\n         *     Permissions.\n         ",
    "links" : [ "#getRequiredPermissions()", "android.Manifest.permission", "android.app.appsearch.GenericDocument", "android.app.appsearch.SchemaVisibilityConfig" ]
  }, {
    "name" : "public Builder clearRequiredPermissions()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears all required permissions combinations set to this {@link SchemaVisibilityConfig}.\n         ",
    "links" : [ "android.app.appsearch.SchemaVisibilityConfig" ]
  }, {
    "name" : "public Builder setPubliclyVisibleTargetPackage(@Nullable PackageIdentifier packageIdentifier)",
    "returnType" : "Builder",
    "comment" : "\n         * Specify that this schema should be publicly available, to the same packages that have\n         * visibility to the package passed as a parameter. This visibility is determined by the\n         * result of {@link android.content.pm.PackageManager#canPackageQuery}.\n         *\n         * <p>It is possible for the packageIdentifier parameter to be different from the package\n         * performing the indexing. This might happen in the case of an on-device indexer processing\n         * information about various packages. The visibility will be the same regardless of which\n         * package indexes the document, as the visibility is based on the packageIdentifier\n         * parameter.\n         *\n         * <p>Calling this with packageIdentifier set to null is valid, and will remove public\n         * visibility for the schema.\n         *\n         * @param packageIdentifier the {@link PackageIdentifier} of the package that will be used\n         *     as the target package in a call to {@link\n         *     android.content.pm.PackageManager#canPackageQuery} to determine which packages can\n         *     access this publicly visible schema.\n         ",
    "links" : [ "android.content.pm.PackageManager#canPackageQuery", "android.app.appsearch.PackageIdentifier" ]
  }, {
    "name" : "private void resetIfBuilt()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SchemaVisibilityConfig build()",
    "returnType" : "SchemaVisibilityConfig",
    "comment" : " Build a {@link SchemaVisibilityConfig} ",
    "links" : [ "android.app.appsearch.SchemaVisibilityConfig" ]
  } ],
  "methodNames" : [ "public Builder addAllowedPackage(@NonNull PackageIdentifier packageIdentifier)", "public Builder clearAllowedPackages()", "public Builder addRequiredPermissions(@NonNull Set<Integer> visibleToPermissions)", "public Builder clearRequiredPermissions()", "public Builder setPubliclyVisibleTargetPackage(@Nullable PackageIdentifier packageIdentifier)", "private void resetIfBuilt()", "public SchemaVisibilityConfig build()" ],
  "variableNames" : [ "mAllowedPackages", "mRequiredPermissions", "mPubliclyVisibleTargetPackage", "mBuilt" ]
}