{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/utils/ThreadControllerWrapper.java",
  "packageName" : "org.apache.xml.utils",
  "className" : "ThreadController",
  "comment" : "\n   * Thread controller utility class for incremental SAX source. Must \n   * be overriden with a derived class to support thread pooling.\n   *\n   * All thread-related stuff is in this class.\n   ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public Thread run(Runnable task, int priority)",
    "returnType" : "Thread",
    "comment" : "\n     * Will get a thread from the pool, execute the task\n     *  and return the thread to the pool.\n     *\n     *  The return value is used only to wait for completion\n     *\n     *\n     * NEEDSDOC @param task\n     * @param priority if >0 the task will run with the given priority\n     *  ( doesn't seem to be used in xalan, since it's allways the default )\n     * @return  The thread that is running the task, can be used\n     *          to wait for completion\n     ",
    "links" : [ ]
  }, {
    "name" : "public void waitThread(Thread worker, Runnable task) throws InterruptedException",
    "returnType" : "void",
    "comment" : "\n     *  Wait until the task is completed on the worker\n     *  thread.\n     *\n     * NEEDSDOC @param worker\n     * NEEDSDOC @param task\n     *\n     * @throws InterruptedException\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Thread run(Runnable task, int priority)", "public void waitThread(Thread worker, Runnable task) throws InterruptedException" ],
  "variableNames" : [ ]
}