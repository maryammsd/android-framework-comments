{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/drawable/VectorDrawable.java",
  "packageName" : "android.graphics.drawable",
  "className" : "VectorDrawableState",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mThemeAttrs",
    "type" : "int[]",
    "comment" : " Variables below need to be copied (deep copy if applicable) for mutation.",
    "links" : [ ]
  }, {
    "name" : "mChangingConfigurations",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTint",
    "type" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBlendMode",
    "type" : "BlendMode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoMirrored",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBaseWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBaseHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mViewportWidth",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mViewportHeight",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOpticalInsets",
    "type" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRootName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRootGroup",
    "type" : "VGroup",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNativeTree",
    "type" : "VirtualRefBasePtr",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDensity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVGTargetsMap",
    "type" : "ArrayMap<String, Object>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCachedThemeAttrs",
    "type" : "int[]",
    "comment" : " Fields for cache",
    "links" : [ ]
  }, {
    "name" : "mCachedTint",
    "type" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCachedBlendMode",
    "type" : "BlendMode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCachedAutoMirrored",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCacheDirty",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastSWCachePixelCount",
    "type" : "int",
    "comment" : " these bitmaps separately.",
    "links" : [ ]
  }, {
    "name" : "mLastHWCachePixelCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ALPHA",
    "type" : "Property<VectorDrawableState, Float>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllocationOfAllNodes",
    "type" : "int",
    "comment" : " This tracks the total native allocation for all the nodes.",
    "links" : [ ]
  }, {
    "name" : "NATIVE_ALLOCATION_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " Property getProperty(String propertyName)",
    "returnType" : "Property",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void createNativeTree(VGroup rootGroup)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void createNativeTreeFromCopy(VectorDrawableState copy, VGroup rootGroup)",
    "returnType" : "void",
    "comment" : " given VectorDrawableState's native tree.",
    "links" : [ ]
  }, {
    "name" : " void onTreeConstructionFinished()",
    "returnType" : "void",
    "comment" : " (i.e. in constructors of VectorDrawableState and in inflate).",
    "links" : [ ]
  }, {
    "name" : " long getNativeRenderer()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canReuseCache()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateCacheStates()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void applyTheme(Theme t)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canApplyTheme()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Drawable newDrawable()",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Drawable newDrawable(Resources res)",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getChangingConfigurations()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isStateful()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasFocusStateSpecified()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setViewportSize(float viewportWidth, float viewportHeight)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean setDensity(int targetDensity)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void applyDensityScaling(int sourceDensity, int targetDensity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onStateChange(int[] stateSet)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setAlpha(float alpha)",
    "returnType" : "boolean",
    "comment" : "\n         * setAlpha() and getAlpha() are used mostly for animation purpose. Return true if alpha\n         * has changed.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getAlpha()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " Property getProperty(String propertyName)", "private void createNativeTree(VGroup rootGroup)", "private void createNativeTreeFromCopy(VectorDrawableState copy, VGroup rootGroup)", " void onTreeConstructionFinished()", " long getNativeRenderer()", "public boolean canReuseCache()", "public void updateCacheStates()", "public void applyTheme(Theme t)", "public boolean canApplyTheme()", "public Drawable newDrawable()", "public Drawable newDrawable(Resources res)", "public int getChangingConfigurations()", "public boolean isStateful()", "public boolean hasFocusStateSpecified()", " void setViewportSize(float viewportWidth, float viewportHeight)", "public final boolean setDensity(int targetDensity)", "private void applyDensityScaling(int sourceDensity, int targetDensity)", "public boolean onStateChange(int[] stateSet)", "public void finalize() throws Throwable", "public boolean setAlpha(float alpha)", "public float getAlpha()" ],
  "variableNames" : [ "mThemeAttrs", "mChangingConfigurations", "mTint", "mBlendMode", "mAutoMirrored", "mBaseWidth", "mBaseHeight", "mViewportWidth", "mViewportHeight", "mOpticalInsets", "mRootName", "mRootGroup", "mNativeTree", "mDensity", "mVGTargetsMap", "mCachedThemeAttrs", "mCachedTint", "mCachedBlendMode", "mCachedAutoMirrored", "mCacheDirty", "mLastSWCachePixelCount", "mLastHWCachePixelCount", "ALPHA", "mAllocationOfAllNodes", "NATIVE_ALLOCATION_SIZE" ]
}