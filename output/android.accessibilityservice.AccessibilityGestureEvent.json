{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/accessibilityservice/AccessibilityGestureEvent.java",
  "packageName" : "android.accessibilityservice",
  "className" : "AccessibilityGestureEvent",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mGestureId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMotionEvents",
    "type" : "List<MotionEvent>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AccessibilityGestureEvent>",
    "comment" : "\n     * @see Parcelable.Creator\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getDisplayId()",
    "returnType" : "int",
    "comment" : "\n     * Returns the display id of the received-gesture display, for use with\n     * {@link android.hardware.display.DisplayManager#getDisplay(int)}.\n     *\n     * @return the display id.\n     ",
    "links" : [ "android.hardware.display.DisplayManager#getDisplay(int)" ]
  }, {
    "name" : "public int getGestureId()",
    "returnType" : "int",
    "comment" : "\n     * Returns performed gesture id.\n     *\n     * @return the performed gesture id.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<MotionEvent> getMotionEvents()",
    "returnType" : "List<MotionEvent>",
    "comment" : "\n     * Returns the motion events that lead to this gesture.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public AccessibilityGestureEvent copyForAsync()",
    "returnType" : "AccessibilityGestureEvent",
    "comment" : "\n     * When we asynchronously use {@link AccessibilityGestureEvent}, we should make a copy,\n     * because motionEvent may be recycled before we use async.\n     *\n     * @hide\n     ",
    "links" : [ "android.accessibilityservice.AccessibilityGestureEvent" ]
  }, {
    "name" : "public void recycle()",
    "returnType" : "void",
    "comment" : "\n     * After we use {@link AccessibilityGestureEvent} asynchronously, we should recycle the\n     * MotionEvent, avoid memory leaks.\n     *\n     * @hide\n     ",
    "links" : [ "android.accessibilityservice.AccessibilityGestureEvent" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String gestureIdToString(int id)",
    "returnType" : "String",
    "comment" : "\n     * Returns a string representation of the specified gesture id.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getDisplayId()", "public int getGestureId()", "public List<MotionEvent> getMotionEvents()", "public AccessibilityGestureEvent copyForAsync()", "public void recycle()", "public String toString()", "public static String gestureIdToString(int id)", "public int describeContents()", "public void writeToParcel(@NonNull Parcel parcel, int flags)" ],
  "variableNames" : [ "mGestureId", "mDisplayId", "mMotionEvents", "CREATOR" ]
}