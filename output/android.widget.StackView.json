{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/StackView.java",
  "packageName" : "android.widget",
  "className" : "StackView",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_ANIMATION_DURATION",
    "type" : "int",
    "comment" : "\n     * Default animation parameters\n     ",
    "links" : [ ]
  }, {
    "name" : "MINIMUM_ANIMATION_DURATION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STACK_RELAYOUT_DURATION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PERSPECTIVE_SHIFT_FACTOR_Y",
    "type" : "float",
    "comment" : "\n     * Parameters effecting the perspective visuals\n     ",
    "links" : [ ]
  }, {
    "name" : "PERSPECTIVE_SHIFT_FACTOR_X",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPerspectiveShiftX",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPerspectiveShiftY",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNewPerspectiveShiftX",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNewPerspectiveShiftY",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PERSPECTIVE_SCALE_FACTOR",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ITEMS_SLIDE_UP",
    "type" : "int",
    "comment" : "\n     * Represent the two possible stack modes, one where items slide up, and the other\n     * where items slide down. The perspective is also inverted between these two modes.\n     ",
    "links" : [ ]
  }, {
    "name" : "ITEMS_SLIDE_DOWN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GESTURE_NONE",
    "type" : "int",
    "comment" : "\n     * These specify the different gesture states\n     ",
    "links" : [ ]
  }, {
    "name" : "GESTURE_SLIDE_UP",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GESTURE_SLIDE_DOWN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SWIPE_THRESHOLD_RATIO",
    "type" : "float",
    "comment" : "\n     * Specifies how far you need to swipe (up or down) before it\n     * will be consider a completed gesture when you lift your finger\n     ",
    "links" : [ ]
  }, {
    "name" : "SLIDE_UP_RATIO",
    "type" : "float",
    "comment" : "\n     * Specifies the total distance, relative to the size of the stack,\n     * that views will be slid, either up or down\n     ",
    "links" : [ ]
  }, {
    "name" : "INVALID_POINTER",
    "type" : "int",
    "comment" : "\n     * Sentinel value for no current active pointer.\n     * Used by {@link #mActivePointerId}.\n     ",
    "links" : [ "#mActivePointerId" ]
  }, {
    "name" : "NUM_ACTIVE_VIEWS",
    "type" : "int",
    "comment" : "\n     * Number of active views in the stack. One fewer view is actually visible, as one is hidden.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRAME_PADDING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTouchRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_TIME_BETWEEN_INTERACTION_AND_AUTOADVANCE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_TIME_BETWEEN_SCROLLS",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialY",
    "type" : "float",
    "comment" : "\n     * These variables are all related to the current state of touch interaction\n     * with the stack\n     ",
    "links" : [ ]
  }, {
    "name" : "mInitialX",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActivePointerId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mYVelocity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSwipeGestureType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSlideAmount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSwipeThreshold",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTouchSlop",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaximumVelocity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVelocityTracker",
    "type" : "VelocityTracker",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransitionIsSetup",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResOutColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClickColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sHolographicHelper",
    "type" : "HolographicHelper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHighlight",
    "type" : "ImageView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClickFeedback",
    "type" : "ImageView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClickFeedbackIsValid",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStackSlider",
    "type" : "StackSlider",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFirstLayoutHappened",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastInteractionTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastScrollTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStackMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFramePadding",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "stackInvalidateRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void initStackView()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void transformViewForTransition(int fromIndex, int toIndex, final View view, boolean animate)",
    "returnType" : "void",
    "comment" : "\n     * Animate the views between different relative indexes within the {@link AdapterViewAnimator}\n     ",
    "links" : [ "android.widget.AdapterViewAnimator" ]
  }, {
    "name" : "private void transformViewAtIndex(int index, final View view, boolean animate)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setupStackSlider(View v, int mode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void showNext()",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public void showPrevious()",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : " void showOnly(int childIndex, boolean animate)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void updateClickFeedback()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void showTapFeedback(View v)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void hideTapFeedback(View v)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateChildTransforms()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " FrameLayout getFrameForChild()",
    "returnType" : "FrameLayout",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void applyTransformForChildAtIndex(View child, int relativeIndex)",
    "returnType" : "void",
    "comment" : "\n     * Apply any necessary tranforms for the child that is being added.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void dispatchDraw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void onLayout()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onGenericMotionEvent(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void pacedScroll(boolean up)",
    "returnType" : "void",
    "comment" : " This ensures that the frequency of stack flips caused by scrolls is capped",
    "links" : [ ]
  }, {
    "name" : "public boolean onInterceptTouchEvent(MotionEvent ev)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "private void beginGestureIfNeeded(float deltaY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTouchEvent(MotionEvent ev)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "private void onSecondaryPointerUp(MotionEvent ev)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handlePointerUp(MotionEvent ev)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " LayoutParams createOrReuseLayoutParams(View v)",
    "returnType" : "LayoutParams",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onLayout(boolean changed, int left, int top, int right, int bottom)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void advance()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void measureChildren()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getAccessibilityClassName()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onInitializeAccessibilityNodeInfoInternal(AccessibilityNodeInfo info)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private boolean goForward()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean goBackward()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performAccessibilityActionInternal(int action, Bundle arguments)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void initStackView()", " void transformViewForTransition(int fromIndex, int toIndex, final View view, boolean animate)", "private void transformViewAtIndex(int index, final View view, boolean animate)", "private void setupStackSlider(View v, int mode)", "public void showNext()", "public void showPrevious()", " void showOnly(int childIndex, boolean animate)", " void updateClickFeedback()", " void showTapFeedback(View v)", " void hideTapFeedback(View v)", "private void updateChildTransforms()", " FrameLayout getFrameForChild()", " void applyTransformForChildAtIndex(View child, int relativeIndex)", "protected void dispatchDraw(Canvas canvas)", "private void onLayout()", "public boolean onGenericMotionEvent(MotionEvent event)", "private void pacedScroll(boolean up)", "public boolean onInterceptTouchEvent(MotionEvent ev)", "private void beginGestureIfNeeded(float deltaY)", "public boolean onTouchEvent(MotionEvent ev)", "private void onSecondaryPointerUp(MotionEvent ev)", "private void handlePointerUp(MotionEvent ev)", " LayoutParams createOrReuseLayoutParams(View v)", "protected void onLayout(boolean changed, int left, int top, int right, int bottom)", "public void advance()", "private void measureChildren()", "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "public CharSequence getAccessibilityClassName()", "public void onInitializeAccessibilityNodeInfoInternal(AccessibilityNodeInfo info)", "private boolean goForward()", "private boolean goBackward()", "public boolean performAccessibilityActionInternal(int action, Bundle arguments)" ],
  "variableNames" : [ "TAG", "DEFAULT_ANIMATION_DURATION", "MINIMUM_ANIMATION_DURATION", "STACK_RELAYOUT_DURATION", "PERSPECTIVE_SHIFT_FACTOR_Y", "PERSPECTIVE_SHIFT_FACTOR_X", "mPerspectiveShiftX", "mPerspectiveShiftY", "mNewPerspectiveShiftX", "mNewPerspectiveShiftY", "PERSPECTIVE_SCALE_FACTOR", "ITEMS_SLIDE_UP", "ITEMS_SLIDE_DOWN", "GESTURE_NONE", "GESTURE_SLIDE_UP", "GESTURE_SLIDE_DOWN", "SWIPE_THRESHOLD_RATIO", "SLIDE_UP_RATIO", "INVALID_POINTER", "NUM_ACTIVE_VIEWS", "FRAME_PADDING", "mTouchRect", "MIN_TIME_BETWEEN_INTERACTION_AND_AUTOADVANCE", "MIN_TIME_BETWEEN_SCROLLS", "mInitialY", "mInitialX", "mActivePointerId", "mYVelocity", "mSwipeGestureType", "mSlideAmount", "mSwipeThreshold", "mTouchSlop", "mMaximumVelocity", "mVelocityTracker", "mTransitionIsSetup", "mResOutColor", "mClickColor", "sHolographicHelper", "mHighlight", "mClickFeedback", "mClickFeedbackIsValid", "mStackSlider", "mFirstLayoutHappened", "mLastInteractionTime", "mLastScrollTime", "mStackMode", "mFramePadding", "stackInvalidateRect" ]
}