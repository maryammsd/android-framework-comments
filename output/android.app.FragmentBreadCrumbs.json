{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/FragmentBreadCrumbs.java",
  "packageName" : "android.app",
  "className" : "FragmentBreadCrumbs",
  "comment" : "\n * Helper class for showing \"bread crumbs\" representing the fragment\n * stack in an activity.  This is intended to be used with\n * {@link ActionBar#setCustomView(View)\n * ActionBar.setCustomView(View)} to place the bread crumbs in\n * the action bar.\n *\n * <p>The default style for this view is\n * {@link android.R.style#Widget_FragmentBreadCrumbs}.\n *\n * @deprecated This widget is no longer supported.\n ",
  "variables" : [ {
    "name" : "mActivity",
    "type" : "Activity",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInflater",
    "type" : "LayoutInflater",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContainer",
    "type" : "LinearLayout",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxVisible",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTopEntry",
    "type" : "BackStackRecord",
    "comment" : " Hahah",
    "links" : [ ]
  }, {
    "name" : "mParentEntry",
    "type" : "BackStackRecord",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParentClickListener",
    "type" : "OnClickListener",
    "comment" : " Listener to inform when a parent entry is clicked ",
    "links" : [ ]
  }, {
    "name" : "mOnBreadCrumbClickListener",
    "type" : "OnBreadCrumbClickListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGravity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLayoutResId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_GRAVITY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnClickListener",
    "type" : "OnClickListener",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setActivity(Activity a)",
    "returnType" : "void",
    "comment" : "\n     * Attach the bread crumbs to their activity.  This must be called once\n     * when creating the bread crumbs.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMaxVisible(int visibleCrumbs)",
    "returnType" : "void",
    "comment" : "\n     * The maximum number of breadcrumbs to show. Older fragment headers will be hidden from view.\n     * @param visibleCrumbs the number of visible breadcrumbs. This should be greater than zero.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setParentTitle(CharSequence title, CharSequence shortTitle, OnClickListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Inserts an optional parent entry at the first position in the breadcrumbs. Selecting this\n     * entry will result in a call to the specified listener's \n     * {@link android.view.View.OnClickListener#onClick(View)}\n     * method.\n     *\n     * @param title the title for the parent entry\n     * @param shortTitle the short title for the parent entry\n     * @param listener the {@link android.view.View.OnClickListener} to be called when clicked.\n     * A null will result in no action being taken when the parent entry is clicked.\n     ",
    "links" : [ "android.view.View.OnClickListener#onClick(View)", "android.view.View.OnClickListener" ]
  }, {
    "name" : "public void setOnBreadCrumbClickListener(OnBreadCrumbClickListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Sets a listener for clicks on the bread crumbs.  This will be called before\n     * the default click action is performed.\n     * \n     * @param listener The new listener to set.  Replaces any existing listener.\n     ",
    "links" : [ ]
  }, {
    "name" : "private BackStackRecord createBackStackEntry(CharSequence title, CharSequence shortTitle)",
    "returnType" : "BackStackRecord",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTitle(CharSequence title, CharSequence shortTitle)",
    "returnType" : "void",
    "comment" : "\n     * Set a custom title for the bread crumbs.  This will be the first entry\n     * shown at the left, representing the root of the bread crumbs.  If the\n     * title is null, it will not be shown.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onLayout(boolean changed, int l, int t, int r, int b)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onBackStackChanged()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getPreEntryCount()",
    "returnType" : "int",
    "comment" : "\n     * Returns the number of entries before the backstack, including the title of the current\n     * fragment and any custom parent title that was set.\n     ",
    "links" : [ ]
  }, {
    "name" : "private BackStackEntry getPreEntry(int index)",
    "returnType" : "BackStackEntry",
    "comment" : "\n     * Returns the pre-entry corresponding to the index. If there is a parent and a top entry\n     * set, parent has an index of zero and top entry has an index of 1. Returns null if the\n     * specified index doesn't exist or is null.\n     * @param index should not be more than {@link #getPreEntryCount()} - 1\n     ",
    "links" : [ "#getPreEntryCount()" ]
  }, {
    "name" : " void updateCrumbs()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mActivity", "mInflater", "mContainer", "mMaxVisible", "mTopEntry", "mParentEntry", "mParentClickListener", "mOnBreadCrumbClickListener", "mGravity", "mLayoutResId", "mTextColor", "DEFAULT_GRAVITY", "mOnClickListener" ],
  "methodNames" : [ "public void setActivity(Activity a)", "public void setMaxVisible(int visibleCrumbs)", "public void setParentTitle(CharSequence title, CharSequence shortTitle, OnClickListener listener)", "public void setOnBreadCrumbClickListener(OnBreadCrumbClickListener listener)", "private BackStackRecord createBackStackEntry(CharSequence title, CharSequence shortTitle)", "public void setTitle(CharSequence title, CharSequence shortTitle)", "protected void onLayout(boolean changed, int l, int t, int r, int b)", "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "public void onBackStackChanged()", "private int getPreEntryCount()", "private BackStackEntry getPreEntry(int index)", " void updateCrumbs()" ]
}