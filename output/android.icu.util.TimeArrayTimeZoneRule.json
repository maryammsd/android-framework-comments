{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/TimeArrayTimeZoneRule.java",
  "packageName" : "android.icu.util",
  "className" : "TimeArrayTimeZoneRule",
  "comment" : "\n * <code>TimeArrayTimeZoneRule</code> represents a time zone rule whose start times are\n * defined by an array of milliseconds since the standard base time.\n *\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "startTimes",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "timeType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long[] getStartTimes()",
    "returnType" : "long[]",
    "comment" : "\n     * Gets the array of start times used by this rule.\n     *\n     * @return  An array of the start times in milliseconds since the base time\n     *          (January 1, 1970, 00:00:00 GMT).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTimeType()",
    "returnType" : "int",
    "comment" : "\n     * Gets the time type of the start times used by this rule.  The return value\n     * is either <code>DateTimeRule.WALL_TIME</code> or <code>DateTimeRule.STANDARD_TIME</code>\n     * or <code>DateTimeRule.UTC_TIME</code>.\n     *\n     * @return The time type used of the start times used by this rule.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getFirstStart(int prevRawOffset, int prevDSTSavings)",
    "returnType" : "Date",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getFinalStart(int prevRawOffset, int prevDSTSavings)",
    "returnType" : "Date",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getNextStart(long base, int prevOffset, int prevDSTSavings, boolean inclusive)",
    "returnType" : "Date",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getPreviousStart(long base, int prevOffset, int prevDSTSavings, boolean inclusive)",
    "returnType" : "Date",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEquivalentTo(TimeZoneRule other)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isTransitionRule()",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}<br><br>\n     * Note: This method in <code>TimeArrayTimeZoneRule</code> always returns true.\n     ",
    "links" : [ ]
  }, {
    "name" : "private long getUTC(long time, int raw, int dst)",
    "returnType" : "long",
    "comment" : " Get UTC of the time with the raw/dst offset ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a <code>String</code> representation of this <code>TimeArrayTimeZoneRule</code> object.\n     * This method is used for debugging purpose only.  The string representation can be changed\n     * in future version of ICU without any notice.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public long[] getStartTimes()", "public int getTimeType()", "public Date getFirstStart(int prevRawOffset, int prevDSTSavings)", "public Date getFinalStart(int prevRawOffset, int prevDSTSavings)", "public Date getNextStart(long base, int prevOffset, int prevDSTSavings, boolean inclusive)", "public Date getPreviousStart(long base, int prevOffset, int prevDSTSavings, boolean inclusive)", "public boolean isEquivalentTo(TimeZoneRule other)", "public boolean isTransitionRule()", "private long getUTC(long time, int raw, int dst)", "public String toString()" ],
  "variableNames" : [ "serialVersionUID", "startTimes", "timeType" ]
}