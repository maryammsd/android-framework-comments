{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/filterfw/io/TextGraphReader.java",
  "packageName" : "android.filterfw.io",
  "className" : "TextGraphReader",
  "comment" : "\n * @hide\n ",
  "variables" : [ {
    "name" : "mCommands",
    "type" : "ArrayList<Command>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentFilter",
    "type" : "Filter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentGraph",
    "type" : "FilterGraph",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBoundReferences",
    "type" : "KeyValueMap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSettings",
    "type" : "KeyValueMap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFactory",
    "type" : "FilterFactory",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public FilterGraph readGraphString(String graphString) throws GraphIOException",
    "returnType" : "FilterGraph",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void reset()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void parseString(String graphString) throws GraphIOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public KeyValueMap readKeyValueAssignments(String assignments) throws GraphIOException",
    "returnType" : "KeyValueMap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private KeyValueMap readKeyValueAssignments(PatternScanner scanner, Pattern endPattern) throws GraphIOException",
    "returnType" : "KeyValueMap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void bindExternal(String name) throws GraphIOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void checkReferences() throws GraphIOException",
    "returnType" : "void",
    "comment" : "\n     * Unused for now: Often you may want to declare references that are NOT in a certain graph,\n     * e.g. when reading multiple graphs with the same reader. We could print a warning, but even\n     * that may be too much.\n     *",
    "links" : [ ]
  }, {
    "name" : "private void applySettings() throws GraphIOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void expectSettingClass(String setting, Object value, Class expectedClass) throws GraphIOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void executeCommands() throws GraphIOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mCommands", "mCurrentFilter", "mCurrentGraph", "mBoundReferences", "mSettings", "mFactory" ],
  "methodNames" : [ "public FilterGraph readGraphString(String graphString) throws GraphIOException", "private void reset()", "private void parseString(String graphString) throws GraphIOException", "public KeyValueMap readKeyValueAssignments(String assignments) throws GraphIOException", "private KeyValueMap readKeyValueAssignments(PatternScanner scanner, Pattern endPattern) throws GraphIOException", "private void bindExternal(String name) throws GraphIOException", "private void checkReferences() throws GraphIOException", "private void applySettings() throws GraphIOException", "private void expectSettingClass(String setting, Object value, Class expectedClass) throws GraphIOException", "private void executeCommands() throws GraphIOException" ]
}