{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/crypto/spec/DESedeKeySpec.java",
  "packageName" : "javax.crypto.spec",
  "className" : "DESedeKeySpec",
  "comment" : "\n * This class specifies a DES-EDE (\"triple-DES\") key.\n *\n * @author Jan Luehe\n *\n * @since 1.4\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DES_EDE_KEY_LEN",
    "type" : "int",
    "comment" : "\n     * The constant which defines the length of a DESede key in bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "key",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public byte[] getKey()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the DES-EDE key.\n     *\n     * @return the DES-EDE key. Returns a new array\n     * each time this method is called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isParityAdjusted(byte[] key, int offset) throws InvalidKeyException",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the given DES-EDE key, starting at <code>offset</code>\n     * inclusive, is parity-adjusted.\n     *\n     * @param key    a byte array which holds the key value\n     * @param offset the offset into the byte array\n     * @return true if the given DES-EDE key is parity-adjusted, false\n     * otherwise\n     *\n     * @exception NullPointerException if <code>key</code> is null.\n     * @exception InvalidKeyException if the given key material, starting at\n     * <code>offset</code> inclusive, is shorter than 24 bytes\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public byte[] getKey()", "public static boolean isParityAdjusted(byte[] key, int offset) throws InvalidKeyException" ],
  "variableNames" : [ "DES_EDE_KEY_LEN", "key" ]
}