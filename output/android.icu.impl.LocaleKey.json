{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/ICULocaleService.java",
  "packageName" : "android.icu.impl",
  "className" : "LocaleKey",
  "comment" : "\n     * A subclass of Key that implements a locale fallback mechanism.\n     * The first locale to search for is the locale provided by the\n     * client, and the fallback locale to search for is the current\n     * default locale.  If a prefix is present, the currentDescriptor\n     * includes it before the locale proper, separated by \"/\".  This\n     * is the default key instantiated by ICULocaleService.</p>\n     *\n     * <p>Canonicalization adjusts the locale string so that the\n     * section before the first understore is in lower case, and the rest\n     * is in upper case, with no trailing underscores.</p>\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "kind",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "varstart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "primaryID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fallbackID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "currentID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KIND_ANY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static LocaleKey createWithCanonicalFallback(String primaryID, String canonicalFallbackID)",
    "returnType" : "LocaleKey",
    "comment" : "\n         * Create a LocaleKey with canonical primary and fallback IDs.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static LocaleKey createWithCanonicalFallback(String primaryID, String canonicalFallbackID, int kind)",
    "returnType" : "LocaleKey",
    "comment" : "\n         * Create a LocaleKey with canonical primary and fallback IDs.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static LocaleKey createWithCanonical(ULocale locale, String canonicalFallbackID, int kind)",
    "returnType" : "LocaleKey",
    "comment" : "\n         * Create a LocaleKey with canonical primary and fallback IDs.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String prefix()",
    "returnType" : "String",
    "comment" : "\n         * Return the prefix associated with the kind, or null if the kind is KIND_ANY.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int kind()",
    "returnType" : "int",
    "comment" : "\n         * Return the kind code associated with this key.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String canonicalID()",
    "returnType" : "String",
    "comment" : "\n         * Return the (canonical) original ID.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String currentID()",
    "returnType" : "String",
    "comment" : "\n         * Return the (canonical) current ID, or null if no current id.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String currentDescriptor()",
    "returnType" : "String",
    "comment" : "\n         * Return the (canonical) current descriptor, or null if no current id.\n         * Includes the keywords, whereas the ID does not include keywords.\n         ",
    "links" : [ ]
  }, {
    "name" : "public ULocale canonicalLocale()",
    "returnType" : "ULocale",
    "comment" : "\n         * Convenience method to return the locale corresponding to the (canonical) original ID.\n         ",
    "links" : [ ]
  }, {
    "name" : "public ULocale currentLocale()",
    "returnType" : "ULocale",
    "comment" : "\n         * Convenience method to return the ulocale corresponding to the (canonical) currentID.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean fallback()",
    "returnType" : "boolean",
    "comment" : "\n         * If the key has a fallback, modify the key and return true,\n         * otherwise return false.</p>\n         *\n         * <p>First falls back through the primary ID, then through\n         * the fallbackID.  The final fallback is \"\" (root)\n         * unless the primary id was \"\" (root), in which case\n         * there is no fallback.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFallbackOf(String id)",
    "returnType" : "boolean",
    "comment" : "\n         * If a key created from id would eventually fallback to match the\n         * canonical ID of this key, return true.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static LocaleKey createWithCanonicalFallback(String primaryID, String canonicalFallbackID)", "public static LocaleKey createWithCanonicalFallback(String primaryID, String canonicalFallbackID, int kind)", "public static LocaleKey createWithCanonical(ULocale locale, String canonicalFallbackID, int kind)", "public String prefix()", "public int kind()", "public String canonicalID()", "public String currentID()", "public String currentDescriptor()", "public ULocale canonicalLocale()", "public ULocale currentLocale()", "public boolean fallback()", "public boolean isFallbackOf(String id)" ],
  "variableNames" : [ "kind", "varstart", "primaryID", "fallbackID", "currentID", "KIND_ANY" ]
}