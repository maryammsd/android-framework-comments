{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/widget/ViewFlipper.java",
  "packageName" : "android.widget",
  "className" : "ViewFlipper",
  "comment" : "\n * Simple {@link ViewAnimator} that will animate between two or more views\n * that have been added to it.  Only one child is shown at a time.  If\n * requested, can automatically flip between each child at a regular interval.\n *\n * @attr ref android.R.styleable#ViewFlipper_flipInterval\n * @attr ref android.R.styleable#ViewFlipper_autoStart\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOGD",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_INTERVAL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlipInterval",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoStart",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRunning",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStarted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVisible",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserPresent",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReceiver",
    "type" : "BroadcastReceiver",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlipRunnable",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void onAttachedToWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onDetachedFromWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onWindowVisibilityChanged(int visibility)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFlipInterval(@IntRange(from = 0) int milliseconds)",
    "returnType" : "void",
    "comment" : "\n     * How long to wait before flipping to the next view\n     *\n     * @param milliseconds\n     *            time in milliseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFlipInterval()",
    "returnType" : "int",
    "comment" : "\n     * Get the delay before flipping to the next view.\n     *\n     * @return delay time in milliseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public void startFlipping()",
    "returnType" : "void",
    "comment" : "\n     * Start a timer to cycle through child views\n     ",
    "links" : [ ]
  }, {
    "name" : "public void stopFlipping()",
    "returnType" : "void",
    "comment" : "\n     * No more flips\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getAccessibilityClassName()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateRunning()",
    "returnType" : "void",
    "comment" : "\n     * Internal method to start or stop dispatching flip {@link Message} based\n     * on {@link #mRunning} and {@link #mVisible} state.\n     ",
    "links" : [ "android.os.Message", "#mRunning", "#mVisible" ]
  }, {
    "name" : "private void updateRunning(boolean flipNow)",
    "returnType" : "void",
    "comment" : "\n     * Internal method to start or stop dispatching flip {@link Message} based\n     * on {@link #mRunning} and {@link #mVisible} state.\n     *\n     * @param flipNow Determines whether or not to execute the animation now, in\n     *            addition to queuing future flips. If omitted, defaults to\n     *            true.\n     ",
    "links" : [ "android.os.Message", "#mRunning", "#mVisible" ]
  }, {
    "name" : "public boolean isFlipping()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the child views are flipping.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAutoStart(boolean autoStart)",
    "returnType" : "void",
    "comment" : "\n     * Set if this view automatically calls {@link #startFlipping()} when it\n     * becomes attached to a window.\n     ",
    "links" : [ "#startFlipping()" ]
  }, {
    "name" : "public boolean isAutoStart()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if this view automatically calls {@link #startFlipping()}\n     * when it becomes attached to a window.\n     ",
    "links" : [ "#startFlipping()" ]
  } ],
  "variableNames" : [ "TAG", "LOGD", "DEFAULT_INTERVAL", "mFlipInterval", "mAutoStart", "mRunning", "mStarted", "mVisible", "mUserPresent", "mReceiver", "mFlipRunnable" ],
  "methodNames" : [ "protected void onAttachedToWindow()", "protected void onDetachedFromWindow()", "protected void onWindowVisibilityChanged(int visibility)", "public void setFlipInterval(@IntRange(from = 0) int milliseconds)", "public int getFlipInterval()", "public void startFlipping()", "public void stopFlipping()", "public CharSequence getAccessibilityClassName()", "private void updateRunning()", "private void updateRunning(boolean flipNow)", "public boolean isFlipping()", "public void setAutoStart(boolean autoStart)", "public boolean isAutoStart()" ]
}