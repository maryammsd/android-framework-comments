{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/w3c/dom/NameList.java",
  "packageName" : "org.w3c.dom",
  "className" : "NameList",
  "comment" : "\n *  The <code>NameList</code> interface provides the abstraction of an ordered\n * collection of parallel pairs of name and namespace values (which could be\n * null values), without defining or constraining how this collection is\n * implemented. The items in the <code>NameList</code> are accessible via an\n * integral index, starting from 0.\n * <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.\n * @since DOM Level 3\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public String getName(int index)",
    "returnType" : "String",
    "comment" : "\n     *  Returns the <code>index</code>th name item in the collection.\n     * @param index Index into the collection.\n     * @return  The name at the <code>index</code>th position in the\n     *   <code>NameList</code>, or <code>null</code> if there is no name for\n     *   the specified index or if the index is out of range.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getNamespaceURI(int index)",
    "returnType" : "String",
    "comment" : "\n     *  Returns the <code>index</code>th namespaceURI item in the collection.\n     * @param index Index into the collection.\n     * @return  The namespace URI at the <code>index</code>th position in the\n     *   <code>NameList</code>, or <code>null</code> if there is no name for\n     *   the specified index or if the index is out of range.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLength()",
    "returnType" : "int",
    "comment" : "\n     *  The number of pairs (name and namespaceURI) in the list. The range of\n     * valid child node indices is 0 to <code>length-1</code> inclusive.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean contains(String str)",
    "returnType" : "boolean",
    "comment" : "\n     *  Test if a name is part of this <code>NameList</code>.\n     * @param str  The name to look for.\n     * @return  <code>true</code> if the name has been found,\n     *   <code>false</code> otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean containsNS(String namespaceURI, String name)",
    "returnType" : "boolean",
    "comment" : "\n     *  Test if the pair namespaceURI/name is part of this\n     * <code>NameList</code>.\n     * @param namespaceURI  The namespace URI to look for.\n     * @param name  The name to look for.\n     * @return  <code>true</code> if the pair namespaceURI/name has been\n     *   found, <code>false</code> otherwise.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getName(int index)", "public String getNamespaceURI(int index)", "public int getLength()", "public boolean contains(String str)", "public boolean containsNS(String namespaceURI, String name)" ],
  "variableNames" : [ ]
}