{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/number/Scale.java",
  "packageName" : "android.icu.number",
  "className" : "Scale",
  "comment" : "\n * A class that defines a quantity by which a number should be multiplied when formatting.\n *\n * <p>\n * To create a Multiplier, use one of the factory methods.\n *\n * @see NumberFormatter\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEFAULT",
    "type" : "Scale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HUNDRED",
    "type" : "Scale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "THOUSAND",
    "type" : "Scale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BIG_DECIMAL_100",
    "type" : "BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BIG_DECIMAL_1000",
    "type" : "BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "magnitude",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "arbitrary",
    "type" : "BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "reciprocal",
    "type" : "BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mc",
    "type" : "MathContext",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Scale none()",
    "returnType" : "Scale",
    "comment" : "\n     * Do not change the value of numbers when formatting or parsing.\n     *\n     * @return A Multiplier to prevent any multiplication.\n     * @see NumberFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Scale powerOfTen(int power)",
    "returnType" : "Scale",
    "comment" : "\n     * Multiply numbers by 100 before formatting. Useful for combining with a percent unit:\n     *\n     * <pre>\n     * NumberFormatter.with().unit(NoUnit.PERCENT).multiplier(Multiplier.powerOfTen(2))\n     * </pre>\n     *\n     * @return A Multiplier for passing to the setter in NumberFormatter.\n     * @see NumberFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Scale byBigDecimal(BigDecimal multiplicand)",
    "returnType" : "Scale",
    "comment" : "\n     * Multiply numbers by an arbitrary value before formatting. Useful for unit conversions.\n     * <p>\n     * This method takes a BigDecimal; also see the version that takes a double.\n     *\n     * @return A Multiplier for passing to the setter in NumberFormatter.\n     * @see NumberFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Scale byDouble(double multiplicand)",
    "returnType" : "Scale",
    "comment" : "\n     * Multiply numbers by an arbitrary value before formatting. Useful for unit conversions.\n     * <p>\n     * This method takes a double; also see the version that takes a BigDecimal.\n     *\n     * @return A Multiplier for passing to the setter in NumberFormatter.\n     * @see NumberFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Scale byDoubleAndPowerOfTen(double multiplicand, int power)",
    "returnType" : "Scale",
    "comment" : "\n     * Multiply a number by both a power of ten and by an arbitrary double value before formatting.\n     *\n     * @return A Multiplier for passing to the setter in NumberFormatter.\n     * @see NumberFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean isValid()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the multiplier will change the number.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Scale withMathContext(MathContext mc)",
    "returnType" : "Scale",
    "comment" : "\n     * @deprecated ICU 62 This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void applyTo(DecimalQuantity quantity)",
    "returnType" : "void",
    "comment" : "\n     * @deprecated ICU 62 This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void applyReciprocalTo(DecimalQuantity quantity)",
    "returnType" : "void",
    "comment" : "\n     * @deprecated ICU 62 This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Scale none()", "public static Scale powerOfTen(int power)", "public static Scale byBigDecimal(BigDecimal multiplicand)", "public static Scale byDouble(double multiplicand)", "public static Scale byDoubleAndPowerOfTen(double multiplicand, int power)", " boolean isValid()", "public Scale withMathContext(MathContext mc)", "public void applyTo(DecimalQuantity quantity)", "public void applyReciprocalTo(DecimalQuantity quantity)" ],
  "variableNames" : [ "DEFAULT", "HUNDRED", "THOUSAND", "BIG_DECIMAL_100", "BIG_DECIMAL_1000", "magnitude", "arbitrary", "reciprocal", "mc" ]
}