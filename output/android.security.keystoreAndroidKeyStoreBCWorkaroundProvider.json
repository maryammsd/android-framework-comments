{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/security/keystore/AndroidKeyStoreBCWorkaroundProvider.java",
  "packageName" : "android.security.keystore",
  "className" : "AndroidKeyStoreBCWorkaroundProvider",
  "comment" : "\n * {@link Provider} of JCA crypto operations operating on Android KeyStore keys.\n *\n * <p>This provider was separated out of {@link AndroidKeyStoreProvider} to work around the issue\n * that Bouncy Castle provider incorrectly declares that it accepts arbitrary keys (incl. Android\n * KeyStore ones). This causes JCA to select the Bouncy Castle's implementation of JCA crypto\n * operations for Android KeyStore keys unless Android KeyStore's own implementations are installed\n * as higher-priority than Bouncy Castle ones. The purpose of this provider is to do just that: to\n * offer crypto operations operating on Android KeyStore keys and to be installed at higher priority\n * than the Bouncy Castle provider.\n *\n * <p>Once Bouncy Castle provider is fixed, this provider can be merged into the\n * {@code AndroidKeyStoreProvider}.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "PACKAGE_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KEYSTORE_SECRET_KEY_CLASS_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KEYSTORE_PRIVATE_KEY_CLASS_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KEYSTORE_PUBLIC_KEY_CLASS_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESEDE_SYSTEM_PROPERTY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void putMacImpl(String algorithm, String implClass)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void putSymmetricCipherImpl(String transformation, String implClass)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void putAsymmetricCipherImpl(String transformation, String implClass)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void putSignatureImpl(String algorithm, String implClass)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String[] getSupportedEcdsaSignatureDigests()",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String[] getSupportedRsaSignatureWithPkcs1PaddingDigests()",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "PACKAGE_NAME", "KEYSTORE_SECRET_KEY_CLASS_NAME", "KEYSTORE_PRIVATE_KEY_CLASS_NAME", "KEYSTORE_PUBLIC_KEY_CLASS_NAME", "DESEDE_SYSTEM_PROPERTY" ],
  "methodNames" : [ "private void putMacImpl(String algorithm, String implClass)", "private void putSymmetricCipherImpl(String transformation, String implClass)", "private void putAsymmetricCipherImpl(String transformation, String implClass)", "private void putSignatureImpl(String algorithm, String implClass)", "public static String[] getSupportedEcdsaSignatureDigests()", "public static String[] getSupportedRsaSignatureWithPkcs1PaddingDigests()" ]
}