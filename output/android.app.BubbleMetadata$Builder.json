{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/Notification.java",
  "packageName" : "android.app",
  "className" : "Builder",
  "comment" : "\n         * Builder to construct a {@link BubbleMetadata} object.\n         ",
  "links" : [ "BubbleMetadata" ],
  "variables" : [ {
    "name" : "mPendingIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDesiredHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDesiredHeightResId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeleteIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShortcutId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public BubbleMetadata.Builder setIntent(@NonNull PendingIntent intent)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * Sets the intent for the bubble.\n             *\n             * <p>The intent that will be used when the bubble is expanded. This will display the\n             * app content in a floating window over the existing foreground activity. The intent\n             * should point to a resizable activity. </p>\n             *\n             * @throws NullPointerException  if intent is null.\n             * @throws IllegalStateException if this builder was created via\n             *                               {@link Builder#Builder(String)}.\n             ",
    "links" : [ "android.text.SpannableStringBuilder#Builder(String)" ]
  }, {
    "name" : "public BubbleMetadata.Builder setIcon(@NonNull Icon icon)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * Sets the icon for the bubble. Can only be used if the bubble was created\n             * via {@link Builder#Builder(PendingIntent, Icon)}.\n             *\n             * <p>The icon will be used to represent the bubble when it is collapsed. An icon\n             * should be representative of the content within the bubble. If your app produces\n             * multiple bubbles, the icon should be unique for each of them.</p>\n             *\n             * <p>It is recommended to use an {@link Icon} of type {@link Icon#TYPE_URI}\n             * or {@link Icon#TYPE_URI_ADAPTIVE_BITMAP}</p>\n             *\n             * @throws NullPointerException  if icon is null.\n             * @throws IllegalStateException if this builder was created via\n             *                               {@link Builder#Builder(String)}.\n             ",
    "links" : [ "android.graphics.drawable.Icon#TYPE_URI", "android.text.SpannableStringBuilder#Builder(PendingIntent", "android.text.SpannableStringBuilder#Builder(String)", "android.graphics.drawable.Icon#TYPE_URI_ADAPTIVE_BITMAP", "android.graphics.drawable.Icon" ]
  }, {
    "name" : "public BubbleMetadata.Builder setDesiredHeight(@Dimension(unit = DP) int height)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * Sets the desired height in DPs for the expanded content of the bubble.\n             *\n             * <p>This height may not be respected if there is not enough space on the screen or if\n             * the provided height is too small to be useful.</p>\n             *\n             * <p>If {@link #setDesiredHeightResId(int)} was previously called on this builder, the\n             * previous value set will be cleared after calling this method, and this value will\n             * be used instead.</p>\n             *\n             * <p>A desired height (in DPs or via resID) is optional.</p>\n             *\n             * @see #setDesiredHeightResId(int)\n             ",
    "links" : [ "#setDesiredHeightResId(int)" ]
  }, {
    "name" : "public BubbleMetadata.Builder setDesiredHeightResId(@DimenRes int heightResId)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * Sets the desired height via resId for the expanded content of the bubble.\n             *\n             * <p>This height may not be respected if there is not enough space on the screen or if\n             * the provided height is too small to be useful.</p>\n             *\n             * <p>If {@link #setDesiredHeight(int)} was previously called on this builder, the\n             * previous value set will be cleared after calling this method, and this value will\n             * be used instead.</p>\n             *\n             * <p>A desired height (in DPs or via resID) is optional.</p>\n             *\n             * @see #setDesiredHeight(int)\n             ",
    "links" : [ "#setDesiredHeight(int)" ]
  }, {
    "name" : "public BubbleMetadata.Builder setAutoExpandBubble(boolean shouldExpand)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * Sets whether the bubble will be posted in its expanded state.\n             *\n             * <p>This flag has no effect if the app posting the bubble is not in the foreground.\n             * The app is considered foreground if it is visible and on the screen, note that\n             * a foreground service does not qualify.\n             * </p>\n             *\n             * <p>Generally, this flag should only be set if the user has performed an action to\n             * request or create a bubble.</p>\n             *\n             * <p>Setting this flag is optional; it defaults to false.</p>\n             ",
    "links" : [ ]
  }, {
    "name" : "public BubbleMetadata.Builder setSuppressNotification(boolean shouldSuppressNotif)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * Sets whether the bubble will be posted <b>without</b> the associated notification in\n             * the notification shade.\n             *\n             * <p>Generally, this flag should only be set if the user has performed an action to\n             * request or create a bubble, or if the user has seen the content in the notification\n             * and the notification is no longer relevant.</p>\n             *\n             * <p>Setting this flag is optional; it defaults to false.</p>\n             ",
    "links" : [ ]
  }, {
    "name" : "public BubbleMetadata.Builder setSuppressableBubble(boolean suppressBubble)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * Indicates whether the bubble should be visually suppressed from the bubble stack if\n             * the user is viewing the same content outside of the bubble. For example, the user has\n             * a bubble with Alice and then opens up the main app and navigates to Alice's page.\n             *\n             * To match the activity and the bubble notification, the bubble notification should\n             * have a locus id set that matches a locus id set on the activity.\n             *\n             * {@link Notification.Builder#setLocusId(LocusId)}\n             * {@link Activity#setLocusContext(LocusId, Bundle)}\n             ",
    "links" : [ "android.app.Activity#setLocusContext(LocusId", "Notification.Builder#setLocusId(LocusId)" ]
  }, {
    "name" : "public BubbleMetadata.Builder setDeleteIntent(@Nullable PendingIntent deleteIntent)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * Sets an intent to send when this bubble is explicitly removed by the user.\n             *\n             * <p>Setting a delete intent is optional.</p>\n             ",
    "links" : [ ]
  }, {
    "name" : "public BubbleMetadata build()",
    "returnType" : "BubbleMetadata",
    "comment" : "\n             * Creates the {@link BubbleMetadata} defined by this builder.\n             *\n             * @throws NullPointerException if required elements have not been set.\n             ",
    "links" : [ "BubbleMetadata" ]
  }, {
    "name" : "public BubbleMetadata.Builder setFlag(int mask, boolean value)",
    "returnType" : "BubbleMetadata.Builder",
    "comment" : "\n             * @hide\n             ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public BubbleMetadata.Builder setIntent(@NonNull PendingIntent intent)", "public BubbleMetadata.Builder setIcon(@NonNull Icon icon)", "public BubbleMetadata.Builder setDesiredHeight(@Dimension(unit = DP) int height)", "public BubbleMetadata.Builder setDesiredHeightResId(@DimenRes int heightResId)", "public BubbleMetadata.Builder setAutoExpandBubble(boolean shouldExpand)", "public BubbleMetadata.Builder setSuppressNotification(boolean shouldSuppressNotif)", "public BubbleMetadata.Builder setSuppressableBubble(boolean suppressBubble)", "public BubbleMetadata.Builder setDeleteIntent(@Nullable PendingIntent deleteIntent)", "public BubbleMetadata build()", "public BubbleMetadata.Builder setFlag(int mask, boolean value)" ],
  "variableNames" : [ "mPendingIntent", "mIcon", "mDesiredHeight", "mDesiredHeightResId", "mFlags", "mDeleteIntent", "mShortcutId" ]
}