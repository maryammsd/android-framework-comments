{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/SearchableInfo.java",
  "packageName" : "android.app",
  "className" : "SearchableInfo",
  "comment" : "\n * Searchability meta-data for an activity. Only applications that search other applications\n * should need to use this class.\n * See <a href=\"{@docRoot}guide/topics/search/searchable-config.html\">Searchable Configuration</a>\n * for more information about declaring searchability meta-data for your application.\n *\n * @see SearchManager#getSearchableInfo(ComponentName)\n * @see SearchManager#getSearchablesInGlobalSearch()\n ",
  "variables" : [ {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : " general debugging support",
    "links" : [ ]
  }, {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MD_LABEL_SEARCHABLE",
    "type" : "String",
    "comment" : " the current long wordy javadoc in SearchManager.java ?",
    "links" : [ ]
  }, {
    "name" : "MD_XML_ELEMENT_SEARCHABLE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MD_XML_ELEMENT_SEARCHABLE_ACTION_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SEARCH_MODE_BADGE_LABEL",
    "type" : "int",
    "comment" : " flags in the searchMode attribute",
    "links" : [ ]
  }, {
    "name" : "SEARCH_MODE_BADGE_ICON",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SEARCH_MODE_QUERY_REWRITE_FROM_DATA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SEARCH_MODE_QUERY_REWRITE_FROM_TEXT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLabelId",
    "type" : "int",
    "comment" : " true member variables - what we know about the searchability",
    "links" : [ ]
  }, {
    "name" : "mSearchActivity",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHintId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSearchMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIconId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSearchButtonText",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSearchInputType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSearchImeOptions",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIncludeInGlobalSearch",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQueryAfterZeroResults",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoUrlDetect",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSettingsDescriptionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuggestAuthority",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuggestPath",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuggestSelection",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuggestIntentAction",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuggestIntentData",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuggestThreshold",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActionKeys",
    "type" : "HashMap<Integer, ActionKeyInfo>",
    "comment" : " This is not final, to allow lazy initialization.",
    "links" : [ ]
  }, {
    "name" : "mSuggestProviderPackage",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VOICE_SEARCH_SHOW_BUTTON",
    "type" : "int",
    "comment" : " Flag values for Searchable_voiceSearchMode",
    "links" : [ ]
  }, {
    "name" : "VOICE_SEARCH_LAUNCH_WEB_SEARCH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VOICE_SEARCH_LAUNCH_RECOGNIZER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVoiceSearchMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVoiceLanguageModeId",
    "type" : "int",
    "comment" : " voiceLanguageModel",
    "links" : [ ]
  }, {
    "name" : "mVoicePromptTextId",
    "type" : "int",
    "comment" : " voicePromptText",
    "links" : [ ]
  }, {
    "name" : "mVoiceLanguageId",
    "type" : "int",
    "comment" : " voiceLanguage",
    "links" : [ ]
  }, {
    "name" : "mVoiceMaxResults",
    "type" : "int",
    "comment" : " voiceMaxResults",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SearchableInfo>",
    "comment" : "\n     * Support for parcelable and aidl operations.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getSuggestAuthority()",
    "returnType" : "String",
    "comment" : "\n     * Gets the search suggestion content provider authority.\n     *\n     * @return The search suggestions authority, or {@code null} if not set.\n     * @see android.R.styleable#Searchable_searchSuggestAuthority\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSuggestPackage()",
    "returnType" : "String",
    "comment" : "\n     * Gets the name of the package where the suggestion provider lives,\n     * or {@code null}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ComponentName getSearchActivity()",
    "returnType" : "ComponentName",
    "comment" : "\n     * Gets the component name of the searchable activity.\n     *\n     * @return A component name, never {@code null}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean useBadgeLabel()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether the badge should be a text label.\n     *\n     * @see android.R.styleable#Searchable_searchMode\n     *\n     * @hide This feature is deprecated, no need to add it to the API.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean useBadgeIcon()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether the badge should be an icon.\n     *\n     * @see android.R.styleable#Searchable_searchMode\n     *\n     * @hide This feature is deprecated, no need to add it to the API.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean shouldRewriteQueryFromData()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether the text in the query field should come from the suggestion intent data.\n     *\n     * @see android.R.styleable#Searchable_searchMode\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean shouldRewriteQueryFromText()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether the text in the query field should come from the suggestion title.\n     *\n     * @see android.R.styleable#Searchable_searchMode\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSettingsDescriptionId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the resource id of the description string to use for this source in system search\n     * settings, or {@code 0} if none has been specified.\n     *\n     * @see android.R.styleable#Searchable_searchSettingsDescription\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSuggestPath()",
    "returnType" : "String",
    "comment" : "\n     * Gets the content provider path for obtaining search suggestions.\n     * \n     * @return The suggestion path, or {@code null} if not set.\n     * @see android.R.styleable#Searchable_searchSuggestPath\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSuggestSelection()",
    "returnType" : "String",
    "comment" : "\n     * Gets the selection for obtaining search suggestions.\n     *\n     * @see android.R.styleable#Searchable_searchSuggestSelection\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSuggestIntentAction()",
    "returnType" : "String",
    "comment" : "\n     * Gets the optional intent action for use with these suggestions. This is\n     * useful if all intents will have the same action\n     * (e.g. {@link android.content.Intent#ACTION_VIEW})\n     *\n     * This can be overriden in any given suggestion using the column\n     * {@link SearchManager#SUGGEST_COLUMN_INTENT_ACTION}.\n     *\n     * @return The default intent action, or {@code null} if not set.\n     * @see android.R.styleable#Searchable_searchSuggestIntentAction\n     ",
    "links" : [ "android.content.Intent#ACTION_VIEW", "android.app.SearchManager#SUGGEST_COLUMN_INTENT_ACTION" ]
  }, {
    "name" : "public String getSuggestIntentData()",
    "returnType" : "String",
    "comment" : "\n     * Gets the optional intent data for use with these suggestions.  This is\n     * useful if all intents will have similar data URIs,\n     * but you'll likely need to provide a specific ID as well via the column\n     * {@link SearchManager#SUGGEST_COLUMN_INTENT_DATA_ID}, which will be appended to the\n     * intent data URI.\n     * \n     * This can be overriden in any given suggestion using the column\n     * {@link SearchManager#SUGGEST_COLUMN_INTENT_DATA}.\n     * \n     * @return The default intent data, or {@code null} if not set.\n     * @see android.R.styleable#Searchable_searchSuggestIntentData\n     ",
    "links" : [ "android.app.SearchManager#SUGGEST_COLUMN_INTENT_DATA", "android.app.SearchManager#SUGGEST_COLUMN_INTENT_DATA_ID" ]
  }, {
    "name" : "public int getSuggestThreshold()",
    "returnType" : "int",
    "comment" : "\n     * Gets the suggestion threshold.\n     * \n     * @return The suggestion threshold, or {@code 0} if not set.\n     * @see android.R.styleable#Searchable_searchSuggestThreshold\n     ",
    "links" : [ ]
  }, {
    "name" : "public Context getActivityContext(Context context)",
    "returnType" : "Context",
    "comment" : "\n     * Get the context for the searchable activity.\n     *\n     * @param context You need to supply a context to start with\n     * @return Returns a context related to the searchable activity\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static Context createActivityContext(Context context, ComponentName activity)",
    "returnType" : "Context",
    "comment" : "\n     * Creates a context for another activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Context getProviderContext(Context context, Context activityContext)",
    "returnType" : "Context",
    "comment" : "\n     * Get the context for the suggestions provider.\n     *\n     * @param context You need to supply a context to start with\n     * @param activityContext If we can determine that the provider and the activity are the\n     *        same, we'll just return this one.\n     * @return Returns a context related to the suggestion provider\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public ActionKeyInfo findActionKey(int keyCode)",
    "returnType" : "ActionKeyInfo",
    "comment" : "\n     * If any action keys were defined for this searchable activity, look up and return.\n     * \n     * @param keyCode The key that was pressed\n     * @return Returns the action key info, or {@code null} if none defined.\n     *\n     * @hide ActionKeyInfo is hidden\n     ",
    "links" : [ ]
  }, {
    "name" : "private void addActionKey(ActionKeyInfo keyInfo)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static SearchableInfo getActivityMetaData(Context context, ActivityInfo activityInfo, int userId)",
    "returnType" : "SearchableInfo",
    "comment" : "\n     * Gets search information for the given activity.\n     *\n     * @param context Context to use for reading activity resources.\n     * @param activityInfo Activity to get search information from.\n     * @return Search information about the given activity, or {@code null} if\n     *         the activity has no or invalid searchability meta-data.\n     *\n     * @hide For use by SearchManagerService.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static SearchableInfo getActivityMetaData(Context context, XmlPullParser xml, final ComponentName cName)",
    "returnType" : "SearchableInfo",
    "comment" : "\n     * Get the metadata for a given activity\n     * \n     * @param context runtime context\n     * @param xml XML parser for reading attributes\n     * @param cName The component name of the searchable activity\n     * \n     * @result A completely constructed SearchableInfo, or null if insufficient XML data for it\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLabelId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the \"label\" (user-visible name) of this searchable context. This must be\n     * read using the searchable Activity's resources.\n     * \n     * @return A resource id, or {@code 0} if no label was specified.\n     * @see android.R.styleable#Searchable_label\n     *\n     * @hide deprecated functionality\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getHintId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the resource id of the hint text. This must be\n     * read using the searchable Activity's resources.\n     * \n     * @return A resource id, or {@code 0} if no hint was specified.\n     * @see android.R.styleable#Searchable_hint\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getIconId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the icon id specified by the Searchable_icon meta-data entry. This must be\n     * read using the searchable Activity's resources.\n     * \n     * @return A resource id, or {@code 0} if no icon was specified.\n     * @see android.R.styleable#Searchable_icon\n     *\n     * @hide deprecated functionality\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getVoiceSearchEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the searchable activity wants the voice search button to be shown.\n     *\n     * @see android.R.styleable#Searchable_voiceSearchMode\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getVoiceSearchLaunchWebSearch()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if voice search should start web search.\n     *\n     * @see android.R.styleable#Searchable_voiceSearchMode\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getVoiceSearchLaunchRecognizer()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if voice search should start in-app search.\n     *\n     * @see android.R.styleable#Searchable_voiceSearchMode\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getVoiceLanguageModeId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the resource id of the voice search language model string.\n     *\n     * @return A resource id, or {@code 0} if no language model was specified.\n     * @see android.R.styleable#Searchable_voiceLanguageModel\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getVoicePromptTextId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the resource id of the voice prompt text string.\n     *\n     * @return A resource id, or {@code 0} if no voice prompt text was specified.\n     * @see android.R.styleable#Searchable_voicePromptText\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getVoiceLanguageId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the resource id of the spoken language to recognize in voice search.\n     *\n     * @return A resource id, or {@code 0} if no language was specified.\n     * @see android.R.styleable#Searchable_voiceLanguage\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getVoiceMaxResults()",
    "returnType" : "int",
    "comment" : "\n     * The maximum number of voice recognition results to return.\n     *\n     * @return the max results count, if specified in the searchable\n     *         activity's metadata, or {@code 0} if not specified.\n     * @see android.R.styleable#Searchable_voiceMaxResults\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSearchButtonText()",
    "returnType" : "int",
    "comment" : "\n     * Gets the resource id of replacement text for the \"Search\" button.\n     *\n     * @return A resource id, or {@code 0} if no replacement text was specified.\n     * @see android.R.styleable#Searchable_searchButtonText\n     * @hide This feature is deprecated, no need to add it to the API.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInputType()",
    "returnType" : "int",
    "comment" : "\n     * Gets the input type as specified in the searchable attributes. This will default to\n     * {@link InputType#TYPE_CLASS_TEXT} if not specified (which is appropriate\n     * for free text input).\n     * \n     * @return the input type\n     * @see android.R.styleable#Searchable_inputType\n     ",
    "links" : [ "android.text.InputType#TYPE_CLASS_TEXT" ]
  }, {
    "name" : "public int getImeOptions()",
    "returnType" : "int",
    "comment" : "\n     * Gets the input method options specified in the searchable attributes.\n     * This will default to {@link EditorInfo#IME_ACTION_GO} if not specified (which is\n     * appropriate for a search box).\n     * \n     * @return the input type\n     * @see android.R.styleable#Searchable_imeOptions\n     ",
    "links" : [ "android.view.inputmethod.EditorInfo#IME_ACTION_GO" ]
  }, {
    "name" : "public boolean shouldIncludeInGlobalSearch()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether the searchable should be included in global search.\n     *\n     * @return The value of the {@link android.R.styleable#Searchable_includeInGlobalSearch}\n     *         attribute, or {@code false} if the attribute is not set.\n     * @see android.R.styleable#Searchable_includeInGlobalSearch\n     ",
    "links" : [ "android.R.styleable#Searchable_includeInGlobalSearch" ]
  }, {
    "name" : "public boolean queryAfterZeroResults()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether this searchable activity should be queried for suggestions if a prefix\n     * of the query has returned no results.\n     *\n     * @see android.R.styleable#Searchable_queryAfterZeroResults\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean autoUrlDetect()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether this searchable activity has auto URL detection turned on.\n     *\n     * @see android.R.styleable#Searchable_autoUrlDetect\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "DBG", "LOG_TAG", "MD_LABEL_SEARCHABLE", "MD_XML_ELEMENT_SEARCHABLE", "MD_XML_ELEMENT_SEARCHABLE_ACTION_KEY", "SEARCH_MODE_BADGE_LABEL", "SEARCH_MODE_BADGE_ICON", "SEARCH_MODE_QUERY_REWRITE_FROM_DATA", "SEARCH_MODE_QUERY_REWRITE_FROM_TEXT", "mLabelId", "mSearchActivity", "mHintId", "mSearchMode", "mIconId", "mSearchButtonText", "mSearchInputType", "mSearchImeOptions", "mIncludeInGlobalSearch", "mQueryAfterZeroResults", "mAutoUrlDetect", "mSettingsDescriptionId", "mSuggestAuthority", "mSuggestPath", "mSuggestSelection", "mSuggestIntentAction", "mSuggestIntentData", "mSuggestThreshold", "mActionKeys", "mSuggestProviderPackage", "VOICE_SEARCH_SHOW_BUTTON", "VOICE_SEARCH_LAUNCH_WEB_SEARCH", "VOICE_SEARCH_LAUNCH_RECOGNIZER", "mVoiceSearchMode", "mVoiceLanguageModeId", "mVoicePromptTextId", "mVoiceLanguageId", "mVoiceMaxResults", "CREATOR" ],
  "methodNames" : [ "public String getSuggestAuthority()", "public String getSuggestPackage()", "public ComponentName getSearchActivity()", "public boolean useBadgeLabel()", "public boolean useBadgeIcon()", "public boolean shouldRewriteQueryFromData()", "public boolean shouldRewriteQueryFromText()", "public int getSettingsDescriptionId()", "public String getSuggestPath()", "public String getSuggestSelection()", "public String getSuggestIntentAction()", "public String getSuggestIntentData()", "public int getSuggestThreshold()", "public Context getActivityContext(Context context)", "private static Context createActivityContext(Context context, ComponentName activity)", "public Context getProviderContext(Context context, Context activityContext)", "public ActionKeyInfo findActionKey(int keyCode)", "private void addActionKey(ActionKeyInfo keyInfo)", "public static SearchableInfo getActivityMetaData(Context context, ActivityInfo activityInfo, int userId)", "private static SearchableInfo getActivityMetaData(Context context, XmlPullParser xml, final ComponentName cName)", "public int getLabelId()", "public int getHintId()", "public int getIconId()", "public boolean getVoiceSearchEnabled()", "public boolean getVoiceSearchLaunchWebSearch()", "public boolean getVoiceSearchLaunchRecognizer()", "public int getVoiceLanguageModeId()", "public int getVoicePromptTextId()", "public int getVoiceLanguageId()", "public int getVoiceMaxResults()", "public int getSearchButtonText()", "public int getInputType()", "public int getImeOptions()", "public boolean shouldIncludeInGlobalSearch()", "public boolean queryAfterZeroResults()", "public boolean autoUrlDetect()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ]
}