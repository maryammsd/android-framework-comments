{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/Normalizer2Impl.java",
  "packageName" : "android.icu.impl",
  "className" : "Hangul",
  "comment" : "\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "JAMO_L_BASE",
    "type" : "int",
    "comment" : " Korean Hangul and Jamo constants ",
    "links" : [ ]
  }, {
    "name" : "JAMO_L_END",
    "type" : "int",
    "comment" : " \"lead\" jamo ",
    "links" : [ ]
  }, {
    "name" : "JAMO_V_BASE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAMO_V_END",
    "type" : "int",
    "comment" : " \"vowel\" jamo ",
    "links" : [ ]
  }, {
    "name" : "JAMO_T_BASE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAMO_T_END",
    "type" : "int",
    "comment" : " \"trail\" jamo ",
    "links" : [ ]
  }, {
    "name" : "HANGUL_BASE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HANGUL_END",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAMO_L_COUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAMO_V_COUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAMO_T_COUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAMO_L_LIMIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAMO_V_LIMIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "JAMO_VT_COUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HANGUL_COUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HANGUL_LIMIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean isHangul(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean isHangulLV(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean isJamoL(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean isJamoV(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean isJamoT(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean isJamo(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int decompose(int c, Appendable buffer)",
    "returnType" : "int",
    "comment" : "\n         * Decomposes c, which must be a Hangul syllable, into buffer\n         * and returns the length of the decomposition (2 or 3).\n         ",
    "links" : [ ]
  }, {
    "name" : "public static void getRawDecomposition(int c, Appendable buffer)",
    "returnType" : "void",
    "comment" : "\n         * Decomposes c, which must be a Hangul syllable, into buffer.\n         * This is the raw, not recursive, decomposition. Its length is always 2.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static boolean isHangul(int c)", "public static boolean isHangulLV(int c)", "public static boolean isJamoL(int c)", "public static boolean isJamoV(int c)", "public static boolean isJamoT(int c)", "public static boolean isJamo(int c)", "public static int decompose(int c, Appendable buffer)", "public static void getRawDecomposition(int c, Appendable buffer)" ],
  "variableNames" : [ "JAMO_L_BASE", "JAMO_L_END", "JAMO_V_BASE", "JAMO_V_END", "JAMO_T_BASE", "JAMO_T_END", "HANGUL_BASE", "HANGUL_END", "JAMO_L_COUNT", "JAMO_V_COUNT", "JAMO_T_COUNT", "JAMO_L_LIMIT", "JAMO_V_LIMIT", "JAMO_VT_COUNT", "HANGUL_COUNT", "HANGUL_LIMIT" ]
}