{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/CameraOfflineSession.java",
  "packageName" : "android.hardware.camera2",
  "className" : "CameraOfflineSessionCallback",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "STATUS_INTERNAL_ERROR",
    "type" : "int",
    "comment" : "\n         * This status code indicates unexpected and fatal internal camera error.\n         *\n         * <p>Pending offline requests will be discarded and the respective registered\n         * capture callbacks may not get triggered.</p>\n         *\n         * @see #onError\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onReady(@NonNull CameraOfflineSession session)",
    "returnType" : "void",
    "comment" : "\n         * This method indicates that the offline switch call\n         * {@link CameraCaptureSession#switchToOffline} was successful.\n         *\n         * <p>This callback will be invoked once the offline session moves to the ready state.</p>\n         *\n         * <p>Calls to {@link CameraDevice#close} will not have impact on the processing of offline\n         * requests once the offline session moves in ready state.</p>\n         *\n         * @param session the currently ready offline session\n         *\n         ",
    "links" : [ "android.hardware.camera2.CameraCaptureSession#switchToOffline", "android.hardware.camera2.CameraDevice#close" ]
  }, {
    "name" : "public abstract void onSwitchFailed(@NonNull CameraOfflineSession session)",
    "returnType" : "void",
    "comment" : "\n         * This method indicates that the offline switch call\n         * {@link CameraCaptureSession#switchToOffline} was not able to complete successfully.\n         *\n         * <p>The offline switch can fail either due to internal camera error during the switch\n         * sequence or because the camera implementation was not able to find any pending capture\n         * requests that can be migrated to offline mode.</p>\n         *\n         * <p>Calling {@link CameraOfflineSession#close} is not necessary and clients will not\n         * receive any further offline session notifications.</p>\n         *\n         * @param session the offline session that failed to switch to ready state\n         ",
    "links" : [ "android.hardware.camera2.CameraCaptureSession#switchToOffline", "android.hardware.camera2.CameraOfflineSession#close" ]
  }, {
    "name" : "public abstract void onIdle(@NonNull CameraOfflineSession session)",
    "returnType" : "void",
    "comment" : "\n         * This method indicates that all pending offline requests were processed.\n         *\n         * <p>This callback will be invoked once the offline session finishes processing\n         * all of its pending offline capture requests.</p>\n         *\n         * @param session the currently ready offline session\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onError(@NonNull CameraOfflineSession session, @StatusCode int status)",
    "returnType" : "void",
    "comment" : "\n         * This method is called when the offline session encounters an unexpected error.\n         *\n         * <p>This notification will only be invoked for sessions that reached the ready state.\n         * Clients will need to call {@link CameraOfflineSession#close} to close and release all\n         * resources. {@link #onClosed} will not be triggered automatically in error scenarios.</p>\n         *\n         * @param session the current offline session\n         * @param status error status\n         *\n         ",
    "links" : [ "#onClosed", "android.hardware.camera2.CameraOfflineSession#close" ]
  }, {
    "name" : "public abstract void onClosed(@NonNull CameraOfflineSession session)",
    "returnType" : "void",
    "comment" : "\n         * This method is called when the offline session is closed.\n         *\n         * <p>An offline session will be closed after a call to\n         * {@link CameraOfflineSession#close}.</p>\n         *\n         * <p>In case of failure to switch to offline mode, only {@link #onSwitchFailed} will be\n         * called and {@link #onClosed} will not be.</p>\n         *\n         * <p>In case there was no previous {@link #onIdle} notification any in-progress\n         * offline capture requests within the offline session will be discarded\n         * and further result callbacks will not be triggered.</p>\n         *\n         * @param session the session returned by {@link CameraCaptureSession#switchToOffline}\n         *\n         ",
    "links" : [ "#onIdle", "#onSwitchFailed", "#onClosed", "android.hardware.camera2.CameraOfflineSession#close", "android.hardware.camera2.CameraCaptureSession#switchToOffline" ]
  } ],
  "methodNames" : [ "public abstract void onReady(@NonNull CameraOfflineSession session)", "public abstract void onSwitchFailed(@NonNull CameraOfflineSession session)", "public abstract void onIdle(@NonNull CameraOfflineSession session)", "public abstract void onError(@NonNull CameraOfflineSession session, @StatusCode int status)", "public abstract void onClosed(@NonNull CameraOfflineSession session)" ],
  "variableNames" : [ "STATUS_INTERNAL_ERROR" ]
}