{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/ProxyChangeListener.java",
  "packageName" : "org.chromium.net",
  "className" : "ProxyChangeListener",
  "comment" : "\n * This class partners with native ProxyConfigServiceAndroid to listen for\n * proxy change notifications from Android.\n *\n * Unfortunately this is called directly via reflection in a number of WebView applications\n * to provide a hacky way to set per-application proxy settings, so it must not be mangled by\n * Proguard.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLooper",
    "type" : "Looper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNativePtr",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProxyReceiver",
    "type" : "ProxyReceiver",
    "comment" : " filter on M and above.",
    "links" : [ ]
  }, {
    "name" : "mRealProxyReceiver",
    "type" : "BroadcastReceiver",
    "comment" : " a trigger for fetching proxy information via ConnectionManager.",
    "links" : [ ]
  }, {
    "name" : "mDelegate",
    "type" : "Delegate",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void setEnabled(boolean enabled)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDelegateForTesting(Delegate delegate)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static ProxyChangeListener create()",
    "returnType" : "ProxyChangeListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String getProperty(String property)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void start(long nativePtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stop()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ProxyConfig extractNewProxy(Intent intent)",
    "returnType" : "ProxyConfig",
    "comment" : " use system properties).",
    "links" : [ ]
  }, {
    "name" : "private void proxySettingsChanged(ProxyConfig cfg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ProxyConfig getProxyConfig(Intent intent)",
    "returnType" : "ProxyConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void updateProxyConfigFromConnectivityManager(Intent intent)",
    "returnType" : "void",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : "private void registerBroadcastReceiver()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void unregisterBroadcastReceiver()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean onThread()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void assertOnThread()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void runOnThread(Runnable r)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void setEnabled(boolean enabled)", "public void setDelegateForTesting(Delegate delegate)", "public static ProxyChangeListener create()", "public static String getProperty(String property)", "public void start(long nativePtr)", "public void stop()", "private static ProxyConfig extractNewProxy(Intent intent)", "private void proxySettingsChanged(ProxyConfig cfg)", "private ProxyConfig getProxyConfig(Intent intent)", " void updateProxyConfigFromConnectivityManager(Intent intent)", "private void registerBroadcastReceiver()", "private void unregisterBroadcastReceiver()", "private boolean onThread()", "private void assertOnThread()", "private void runOnThread(Runnable r)" ],
  "variableNames" : [ "TAG", "sEnabled", "mLooper", "mHandler", "mNativePtr", "mProxyReceiver", "mRealProxyReceiver", "mDelegate" ]
}