{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/accessibilityservice/BrailleDisplayController.java",
  "packageName" : "android.accessibilityservice",
  "className" : "BrailleDisplayCallback",
  "comment" : "\n     * Interface provided to {@link BrailleDisplayController} connection methods to\n     * receive callbacks from the system.\n     ",
  "links" : [ "android.accessibilityservice.BrailleDisplayController" ],
  "variables" : [ {
    "name" : "FLAG_ERROR_CANNOT_ACCESS",
    "type" : "int",
    "comment" : "\n         * The system cannot access connected HID devices.\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_ERROR_BRAILLE_DISPLAY_NOT_FOUND",
    "type" : "int",
    "comment" : "\n         * A unique Braille display matching the requested properties could not be identified.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void onConnected(@NonNull byte[] hidDescriptor)",
    "returnType" : "void",
    "comment" : "\n         * Callback to observe a successful Braille display connection.\n         *\n         * <p>The provided HID report descriptor should be used to understand the input bytes\n         * received from the Braille display via {@link #onInput} and to prepare\n         * the output sent to the Braille display via {@link #write}.\n         *\n         * @param hidDescriptor The HID report descriptor for this Braille display.\n         * @see #connect(BluetoothDevice, BrailleDisplayCallback)\n         * @see #connect(UsbDevice, BrailleDisplayCallback)\n         ",
    "links" : [ "#onInput", "#write" ]
  }, {
    "name" : " void onConnectionFailed(@ErrorCode int errorFlags)",
    "returnType" : "void",
    "comment" : "\n         * Callback to observe a failed Braille display connection.\n         *\n         * @param errorFlags A bitmask of error codes for the connection failure.\n         * @see #connect(BluetoothDevice, BrailleDisplayCallback)\n         * @see #connect(UsbDevice, BrailleDisplayCallback)\n         ",
    "links" : [ ]
  }, {
    "name" : " void onInput(@NonNull byte[] input)",
    "returnType" : "void",
    "comment" : "\n         * Callback to observe input bytes from the currently connected Braille display.\n         *\n         * @param input The input bytes from the Braille display, formatted according to the HID\n         *              report descriptor and the HIDRAW kernel driver.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDisconnected()",
    "returnType" : "void",
    "comment" : "\n         * Callback to observe when the currently connected Braille display is disconnected by the\n         * system.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onConnected(@NonNull byte[] hidDescriptor)", " void onConnectionFailed(@ErrorCode int errorFlags)", " void onInput(@NonNull byte[] input)", " void onDisconnected()" ],
  "variableNames" : [ "FLAG_ERROR_CANNOT_ACCESS", "FLAG_ERROR_BRAILLE_DISPLAY_NOT_FOUND" ]
}