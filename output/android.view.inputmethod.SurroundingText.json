{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inputmethod/SurroundingText.java",
  "packageName" : "android.view.inputmethod",
  "className" : "SurroundingText",
  "comment" : "\n * Information about the surrounding text around the cursor for use by an input method.\n *\n * <p>This contains information about the text and the selection relative to the text. </p>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mText",
    "type" : "CharSequence",
    "comment" : "\n     * The surrounding text around the cursor.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSelectionStart",
    "type" : "int",
    "comment" : "\n     * The text offset of the start of the selection in the surrounding text.\n     *\n     * <p>This needs to be the position relative to the {@link #mText} instead of the real position\n     * in the editor.</p>\n     ",
    "links" : [ "#mText" ]
  }, {
    "name" : "mSelectionEnd",
    "type" : "int",
    "comment" : "\n     * The text offset of the end of the selection in the surrounding text.\n     *\n     * <p>This needs to be the position relative to the {@link #mText} instead of the real position\n     * in the editor.</p>\n     ",
    "links" : [ "#mText" ]
  }, {
    "name" : "mOffset",
    "type" : "int",
    "comment" : "\n     * The text offset between the start of the editor's text and the start of the surrounding text.\n     *\n     * <p>-1 indicates the offset information is unknown.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SurroundingText>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public CharSequence getText()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Returns the surrounding text around the cursor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSelectionStart()",
    "returnType" : "int",
    "comment" : "\n     * Returns the text offset of the start of the selection in the surrounding text.\n     *\n     * <p>A selection is the current range of the text that is selected by the user, or the current\n     * position of the cursor. A cursor is a selection where the start and end are at the same\n     * offset.<p>\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSelectionEnd()",
    "returnType" : "int",
    "comment" : "\n     * Returns the text offset of the end of the selection in the surrounding text.\n     *\n     * <p>A selection is the current range of the text that is selected by the user, or the current\n     * position of the cursor. A cursor is a selection where the start and end are at the same\n     * offset.<p>\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getOffset()",
    "returnType" : "int",
    "comment" : "\n     * Returns text offset between the start of the editor's text and the start of the surrounding\n     * text.\n     *\n     * <p>-1 indicates the offset information is unknown.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static CharSequence copyWithParcelableSpans(@Nullable CharSequence source)",
    "returnType" : "CharSequence",
    "comment" : "\n     * Create a copy of the given {@link CharSequence} object, with completely copy\n     * {@link ParcelableSpan} instances.\n     *\n     * @param source the original {@link CharSequence} to be copied.\n     * @return the copied {@link CharSequence}. {@code null} if {@code source} is {@code null}.\n     ",
    "links" : [ "CharSequence", "ParcelableSpan" ]
  }, {
    "name" : "public boolean isEqualTo(@Nullable SurroundingText that)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public CharSequence getText()", "public int getSelectionStart()", "public int getSelectionEnd()", "public int getOffset()", "public void writeToParcel(@NonNull Parcel out, int flags)", "public int describeContents()", "private static CharSequence copyWithParcelableSpans(@Nullable CharSequence source)", "public boolean isEqualTo(@Nullable SurroundingText that)" ],
  "variableNames" : [ "mText", "mSelectionStart", "mSelectionEnd", "mOffset", "CREATOR" ]
}