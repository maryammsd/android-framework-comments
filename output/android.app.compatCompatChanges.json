{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/compat/CompatChanges.java",
  "packageName" : "android.app.compat",
  "className" : "CompatChanges",
  "comment" : "\n * CompatChanges APIs - to be used by platform code only (including mainline\n * modules).\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "QUERY_CACHE",
    "type" : "ChangeIdStateCache",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean isChangeEnabled(long changeId)",
    "returnType" : "boolean",
    "comment" : "\n     * Query if a given compatibility change is enabled for the current process. This method is\n     * intended to be called by code running inside a process of the affected app only.\n     *\n     * <p>If this method returns {@code true}, the calling code should implement the compatibility\n     * change, resulting in differing behaviour compared to earlier releases. If this method returns\n     * {@code false}, the calling code should behave as it did in earlier releases.\n     *\n     * @param changeId The ID of the compatibility change in question.\n     * @return {@code true} if the change is enabled for the current app.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isChangeEnabled(long changeId, @NonNull String packageName, @NonNull UserHandle user)",
    "returnType" : "boolean",
    "comment" : "\n     * Same as {@code #isChangeEnabled(long)}, except this version should be called on behalf of an\n     * app from a different process that's performing work for the app.\n     *\n     * <p> Note that this involves a binder call to the system server (unless running in the system\n     * server). If the binder call fails, a {@code RuntimeException} will be thrown.\n     *\n     * @param changeId    The ID of the compatibility change in question.\n     * @param packageName The package name of the app in question.\n     * @param user        The user that the operation is done for.\n     * @return {@code true} if the change is enabled for the current app.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isChangeEnabled(long changeId, int uid)",
    "returnType" : "boolean",
    "comment" : "\n     * Same as {@code #isChangeEnabled(long)}, except this version should be called on behalf of an\n     * app from a different process that's performing work for the app.\n     *\n     * <p> Note that this involves a binder call to the system server (unless running in the system\n     * server). If the binder call fails, {@code RuntimeException}  will be thrown.\n     *\n     * <p> Returns {@code true} if there are no installed packages for the required UID, or if the\n     * change is enabled for ALL of the installed packages associated with the provided UID. Please\n     * use a more specific API if you want a different behaviour for multi-package UIDs.\n     *\n     * @param changeId The ID of the compatibility change in question.\n     * @param uid      The UID of the app in question.\n     * @return {@code true} if the change is enabled for the current app.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "QUERY_CACHE" ],
  "methodNames" : [ "public static boolean isChangeEnabled(long changeId)", "public static boolean isChangeEnabled(long changeId, @NonNull String packageName, @NonNull UserHandle user)", "public static boolean isChangeEnabled(long changeId, int uid)" ]
}