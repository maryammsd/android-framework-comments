{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/credentials/PrepareGetCredentialResponse.java",
  "packageName" : "android.credentials",
  "className" : "PrepareGetCredentialResponse",
  "comment" : "\n * A response object that prefetches user app credentials and provides metadata about them. It can\n * then be used to issue the full credential retrieval flow via the\n * {@link CredentialManager#getCredential(Context, PendingGetCredentialHandle, CancellationSignal,\n * Executor, OutcomeReceiver)} method to perform the remaining flows such as consent collection\n * and credential selection, to officially retrieve a credential.\n ",
  "links" : [ "android.credentials.CredentialManager#getCredential(Context" ],
  "variables" : [ {
    "name" : "OPTIONS_SENDER_BAL_OPTIN",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResponseInternal",
    "type" : "PrepareGetCredentialResponseInternal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingGetCredentialHandle",
    "type" : "PendingGetCredentialHandle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean hasCredentialResults(@NonNull String credentialType)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the user has any candidate credentials for the given {@code credentialType},\n     * and false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasAuthenticationResults()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the user has any candidate authentication actions (locked credential\n     * supplier), and false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasRemoteResults()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the user has any candidate remote credential results, and false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PendingGetCredentialHandle getPendingGetCredentialHandle()",
    "returnType" : "PendingGetCredentialHandle",
    "comment" : "\n     * Returns a handle that represents this pending get-credential operation. Pass this handle to\n     * {@link CredentialManager#getCredential(Context, PendingGetCredentialHandle,\n     * CancellationSignal, Executor, OutcomeReceiver)} to perform the remaining flows to officially\n     * retrieve a credential.\n     ",
    "links" : [ "android.credentials.CredentialManager#getCredential(Context" ]
  } ],
  "methodNames" : [ "public boolean hasCredentialResults(@NonNull String credentialType)", "public boolean hasAuthenticationResults()", "public boolean hasRemoteResults()", "public PendingGetCredentialHandle getPendingGetCredentialHandle()" ],
  "variableNames" : [ "OPTIONS_SENDER_BAL_OPTIN", "TAG", "mResponseInternal", "mPendingGetCredentialHandle" ]
}