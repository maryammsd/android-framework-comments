{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/timezonedetector/TelephonyTimeZoneSuggestion.java",
  "packageName" : "android.app.timezonedetector",
  "className" : "TelephonyTimeZoneSuggestion",
  "comment" : "\n * A time zone suggestion from an identified telephony source, e.g. from MCC and NITZ information\n * associated with a specific radio.\n *\n * <p>{@code slotIndex} identifies the suggestion source. This enables detection logic to identify\n * suggestions from the same source when there are several in use.\n *\n * <p>{@code zoneId}. When not {@code null}, {@code zoneId} contains the suggested time zone ID,\n * e.g. \"America/Los_Angeles\". Suggestion metadata like {@code matchType} and {@code quality} can be\n * used to judge quality / certainty of the suggestion. {@code zoneId} can be {@code null} to\n * indicate that the telephony source has entered an \"un-opinionated\" state and any previous\n * suggestion from the same source is being withdrawn.\n *\n * <p>{@code matchType} must be set to {@link #MATCH_TYPE_NA} when {@code zoneId} is {@code null},\n * and one of the other {@code MATCH_TYPE_} values when it is not {@code null}.\n *\n * <p>{@code quality} must be set to {@link #QUALITY_NA} when {@code zoneId} is {@code null},\n * and one of the other {@code QUALITY_} values when it is not {@code null}.\n *\n * <p>{@code debugInfo} contains debugging metadata associated with the suggestion. This is used to\n * record why the suggestion exists, e.g. what triggered it to be made and what heuristic was used\n * to determine the time zone or its absence. This information exists only to aid in debugging and\n * therefore is used by {@link #toString()}, but it is not for use in detection logic and is not\n * considered in {@link #hashCode()} or {@link #equals(Object)}.\n *\n * @hide\n ",
  "links" : [ "#MATCH_TYPE_NA", "#equals(Object)", "#hashCode()", "#QUALITY_NA", "#toString()" ],
  "variables" : [ {
    "name" : "CREATOR",
    "type" : "Creator<TelephonyTimeZoneSuggestion>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MATCH_TYPE_NA",
    "type" : "int",
    "comment" : " Used when match type is not applicable. ",
    "links" : [ ]
  }, {
    "name" : "MATCH_TYPE_NETWORK_COUNTRY_ONLY",
    "type" : "int",
    "comment" : "\n     * Only the network country is known.\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_TYPE_NETWORK_COUNTRY_AND_OFFSET",
    "type" : "int",
    "comment" : "\n     * Both the network county and offset were known.\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_TYPE_EMULATOR_ZONE_ID",
    "type" : "int",
    "comment" : "\n     * The device is running in an emulator and an NITZ signal was simulated containing an\n     * Android extension with an explicit Olson ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_TYPE_TEST_NETWORK_OFFSET_ONLY",
    "type" : "int",
    "comment" : "\n     * The phone is most likely running in a test network not associated with a country (this is\n     * distinct from the country just not being known yet).\n     * Historically, Android has just picked an arbitrary time zone with the correct offset when\n     * on a test network.\n     ",
    "links" : [ ]
  }, {
    "name" : "QUALITY_NA",
    "type" : "int",
    "comment" : " Used when quality is not applicable. ",
    "links" : [ ]
  }, {
    "name" : "QUALITY_SINGLE_ZONE",
    "type" : "int",
    "comment" : " There is only one answer ",
    "links" : [ ]
  }, {
    "name" : "QUALITY_MULTIPLE_ZONES_WITH_SAME_OFFSET",
    "type" : "int",
    "comment" : "\n     * There are multiple answers, but they all shared the same offset / DST state at the time\n     * the suggestion was created. i.e. it might be the wrong zone but the user won't notice\n     * immediately if it is wrong.\n     ",
    "links" : [ ]
  }, {
    "name" : "QUALITY_MULTIPLE_ZONES_WITH_DIFFERENT_OFFSETS",
    "type" : "int",
    "comment" : "\n     * There are multiple answers with different offsets. The one given is just one possible.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSlotIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mZoneId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMatchType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQuality",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDebugInfo",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static TelephonyTimeZoneSuggestion createEmptySuggestion(int slotIndex, @NonNull String debugInfo)",
    "returnType" : "TelephonyTimeZoneSuggestion",
    "comment" : "\n     * Creates an empty time zone suggestion, i.e. one that will cancel previous suggestions with\n     * the same {@code slotIndex}.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static TelephonyTimeZoneSuggestion createFromParcel(Parcel in)",
    "returnType" : "TelephonyTimeZoneSuggestion",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSlotIndex()",
    "returnType" : "int",
    "comment" : "\n     * Returns an identifier for the source of this suggestion.\n     *\n     * <p>See {@link TelephonyTimeZoneSuggestion} for more information about {@code slotIndex}.\n     ",
    "links" : [ "android.app.timezonedetector.TelephonyTimeZoneSuggestion" ]
  }, {
    "name" : "public String getZoneId()",
    "returnType" : "String",
    "comment" : "\n     * Returns the suggested time zone Olson ID, e.g. \"America/Los_Angeles\". {@code null} means that\n     * the caller is no longer sure what the current time zone is.\n     *\n     * <p>See {@link TelephonyTimeZoneSuggestion} for more information about {@code zoneId}.\n     ",
    "links" : [ "android.app.timezonedetector.TelephonyTimeZoneSuggestion" ]
  }, {
    "name" : "public int getMatchType()",
    "returnType" : "int",
    "comment" : "\n     * Returns information about how the suggestion was determined which could be used to rank\n     * suggestions when several are available from different sources.\n     *\n     * <p>See {@link TelephonyTimeZoneSuggestion} for more information about {@code matchType}.\n     ",
    "links" : [ "android.app.timezonedetector.TelephonyTimeZoneSuggestion" ]
  }, {
    "name" : "public int getQuality()",
    "returnType" : "int",
    "comment" : "\n     * Returns information about the likelihood of the suggested zone being correct.\n     *\n     * <p>See {@link TelephonyTimeZoneSuggestion} for more information about {@code quality}.\n     ",
    "links" : [ "android.app.timezonedetector.TelephonyTimeZoneSuggestion" ]
  }, {
    "name" : "public List<String> getDebugInfo()",
    "returnType" : "List<String>",
    "comment" : "\n     * Returns debug metadata for the suggestion.\n     *\n     * <p>See {@link TelephonyTimeZoneSuggestion} for more information about {@code debugInfo}.\n     ",
    "links" : [ "android.app.timezonedetector.TelephonyTimeZoneSuggestion" ]
  }, {
    "name" : "public void addDebugInfo(@NonNull String debugInfo)",
    "returnType" : "void",
    "comment" : "\n     * Associates information with the instance that can be useful for debugging / logging.\n     *\n     * <p>See {@link TelephonyTimeZoneSuggestion} for more information about {@code debugInfo}.\n     ",
    "links" : [ "android.app.timezonedetector.TelephonyTimeZoneSuggestion" ]
  }, {
    "name" : "public void addDebugInfo(@NonNull List<String> debugInfo)",
    "returnType" : "void",
    "comment" : "\n     * Associates information with the instance that can be useful for debugging / logging.\n     *\n     * <p>See {@link TelephonyTimeZoneSuggestion} for more information about {@code debugInfo}.\n     ",
    "links" : [ "android.app.timezonedetector.TelephonyTimeZoneSuggestion" ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static TelephonyTimeZoneSuggestion parseCommandLineArg(@NonNull ShellCommand cmd) throws IllegalArgumentException",
    "returnType" : "TelephonyTimeZoneSuggestion",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static int parseQualityCommandLineArg(@NonNull String arg)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int parseMatchTypeCommandLineArg(@NonNull String arg)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void printCommandLineOpts(@NonNull PrintWriter pw)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static TelephonyTimeZoneSuggestion createEmptySuggestion(int slotIndex, @NonNull String debugInfo)", "private static TelephonyTimeZoneSuggestion createFromParcel(Parcel in)", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public int getSlotIndex()", "public String getZoneId()", "public int getMatchType()", "public int getQuality()", "public List<String> getDebugInfo()", "public void addDebugInfo(@NonNull String debugInfo)", "public void addDebugInfo(@NonNull List<String> debugInfo)", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public String toString()", "public static TelephonyTimeZoneSuggestion parseCommandLineArg(@NonNull ShellCommand cmd) throws IllegalArgumentException", "private static int parseQualityCommandLineArg(@NonNull String arg)", "private static int parseMatchTypeCommandLineArg(@NonNull String arg)", "public static void printCommandLineOpts(@NonNull PrintWriter pw)" ],
  "variableNames" : [ "CREATOR", "MATCH_TYPE_NA", "MATCH_TYPE_NETWORK_COUNTRY_ONLY", "MATCH_TYPE_NETWORK_COUNTRY_AND_OFFSET", "MATCH_TYPE_EMULATOR_ZONE_ID", "MATCH_TYPE_TEST_NETWORK_OFFSET_ONLY", "QUALITY_NA", "QUALITY_SINGLE_ZONE", "QUALITY_MULTIPLE_ZONES_WITH_SAME_OFFSET", "QUALITY_MULTIPLE_ZONES_WITH_DIFFERENT_OFFSETS", "mSlotIndex", "mZoneId", "mMatchType", "mQuality", "mDebugInfo" ]
}