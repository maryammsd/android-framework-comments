{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/face/FaceManager.java",
  "packageName" : "android.hardware.face",
  "className" : "AuthenticationCallback",
  "comment" : "\n     * Callback structure provided to {@link FaceManager#authenticate(CryptoObject,\n     * CancellationSignal, int, AuthenticationCallback, Handler)}. Users of {@link\n     * FaceManager#authenticate(CryptoObject, CancellationSignal,\n     * int, AuthenticationCallback, Handler) } must provide an implementation of this for listening\n     * to face events.\n     * @hide\n     ",
  "links" : [ "android.hardware.face.FaceManager#authenticate(CryptoObject" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onAuthenticationError(int errorCode, CharSequence errString)",
    "returnType" : "void",
    "comment" : "\n         * Called when an unrecoverable error has been encountered and the operation is complete.\n         * No further callbacks will be made on this object.\n         *\n         * @param errorCode An integer identifying the error message\n         * @param errString A human-readable error string that can be shown in UI\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onAuthenticationHelp(int helpCode, CharSequence helpString)",
    "returnType" : "void",
    "comment" : "\n         * Called when a recoverable error has been encountered during authentication. The help\n         * string is provided to give the user guidance for what went wrong, such as\n         * \"Sensor dirty, please clean it.\"\n         *\n         * @param helpCode   An integer identifying the error message\n         * @param helpString A human-readable string that can be shown in UI\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onAuthenticationSucceeded(AuthenticationResult result)",
    "returnType" : "void",
    "comment" : "\n         * Called when a face is recognized.\n         *\n         * @param result An object containing authentication-related data\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onAuthenticationFailed()",
    "returnType" : "void",
    "comment" : "\n         * Called when a face is detected but not recognized.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onAuthenticationAcquired(int acquireInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when a face image has been acquired, but wasn't processed yet.\n         *\n         * @param acquireInfo one of FACE_ACQUIRED_* constants\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onAuthenticationError(int errorCode, CharSequence errString)", "public void onAuthenticationHelp(int helpCode, CharSequence helpString)", "public void onAuthenticationSucceeded(AuthenticationResult result)", "public void onAuthenticationFailed()", "public void onAuthenticationAcquired(int acquireInfo)" ],
  "variableNames" : [ ]
}