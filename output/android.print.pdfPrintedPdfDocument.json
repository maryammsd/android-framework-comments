{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/print/pdf/PrintedPdfDocument.java",
  "packageName" : "android.print.pdf",
  "className" : "PrintedPdfDocument",
  "comment" : "\n * This class is a helper for creating a PDF file for given print attributes. It is useful for\n * implementing printing via the native Android graphics APIs.\n * <p>\n * This class computes the page width, page height, and content rectangle from the provided print\n * attributes and these precomputed values can be accessed via {@link #getPageWidth()},\n * {@link #getPageHeight()}, and {@link #getPageContentRect()}, respectively. The\n * {@link #startPage(int)} methods creates pages whose\n * {@link android.graphics.pdf.PdfDocument.PageInfo PageInfo} is initialized with the precomputed\n * values for width, height, and content rectangle.\n * <p>\n * A typical use of the APIs looks like this:\n * </p>\n * <pre>\n * // open a new document\n * PrintedPdfDocument document = new PrintedPdfDocument(context,\n *         printAttributes);\n *\n * // start a page\n * Page page = document.startPage(0);\n *\n * // draw something on the page\n * View content = getContentView();\n * content.draw(page.getCanvas());\n *\n * // finish the page\n * document.finishPage(page);\n * . . .\n * // add more pages\n * . . .\n * // write the document content\n * document.writeTo(getOutputStream());\n *\n * //close the document\n * document.close();\n * </pre>\n ",
  "variables" : [ {
    "name" : "MILS_PER_INCH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "POINTS_IN_INCH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPageWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPageHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Page startPage(@IntRange(from = 0) int pageNumber)",
    "returnType" : "Page",
    "comment" : "\n     * Starts a new page. The page is created using width, height and content rectangle computed\n     * from the print attributes passed in the constructor and the given page number to create an\n     * appropriate {@link android.graphics.pdf.PdfDocument.PageInfo PageInfo}.\n     * <p>\n     * After the page is created you can draw arbitrary content on the page's canvas which you can\n     * get by calling {@link android.graphics.pdf.PdfDocument.Page#getCanvas() Page.getCanvas()}.\n     * After you are done drawing the content you should finish the page by calling\n     * {@link #finishPage(Page)}. After the page is finished you should no longer access the page or\n     * its canvas.\n     * </p>\n     * <p>\n     * <strong>Note:</strong> Do not call this method after {@link #close()}. Also do not call this\n     * method if the last page returned by this method is not finished by calling\n     * {@link #finishPage(Page)}.\n     * </p>\n     *\n     * @param pageNumber The page number. Must be a non negative.\n     * @return A blank page.\n     *\n     * @see #finishPage(Page)\n     ",
    "links" : [ "android.graphics.pdf.PdfDocument.PageInfo", "android.graphics.pdf.PdfDocument.Page#getCanvas", "#finishPage", "#close", "#finishPage" ]
  }, {
    "name" : "public int getPageWidth()",
    "returnType" : "int",
    "comment" : "\n     * Gets the page width.\n     *\n     * @return The page width in PostScript points (1/72th of an inch).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPageHeight()",
    "returnType" : "int",
    "comment" : "\n     * Gets the page height.\n     *\n     * @return The page height in PostScript points (1/72th of an inch).\n     ",
    "links" : [ ]
  }, {
    "name" : "public Rect getPageContentRect()",
    "returnType" : "Rect",
    "comment" : "\n     * Gets the content rectangle. This is the area of the page that\n     * contains printed data and is relative to the page top left.\n     *\n     * @return The content rectangle.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "MILS_PER_INCH", "POINTS_IN_INCH", "mPageWidth", "mPageHeight", "mContentRect" ],
  "methodNames" : [ "public Page startPage(@IntRange(from = 0) int pageNumber)", "public int getPageWidth()", "public int getPageHeight()", "public Rect getPageContentRect()" ]
}