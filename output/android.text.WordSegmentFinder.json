{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/WordSegmentFinder.java",
  "packageName" : "android.text",
  "className" : "WordSegmentFinder",
  "comment" : "\n * Implementation of {@link SegmentFinder} using words as the text segment. Word boundaries are\n * found using {@code WordIterator}. Whitespace characters are excluded, so they are not included in\n * any text segments.\n *\n * <p>For example, the text \"Hello, World!\" would be subdivided into four text segments: \"Hello\",\n * \",\", \"World\", \"!\". The space character does not belong to any text segments.\n *\n * @see <a href=\"https://unicode.org/reports/tr29/#Word_Boundaries\">Unicode Text Segmentation - Word\n *     Boundaries</a>\n ",
  "links" : [ "android.text.SegmentFinder" ],
  "variables" : [ {
    "name" : "mText",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWordIterator",
    "type" : "WordIterator",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int previousStartBoundary(@IntRange(from = 0) int offset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int previousEndBoundary(@IntRange(from = 0) int offset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int nextStartBoundary(@IntRange(from = 0) int offset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int nextEndBoundary(@IntRange(from = 0) int offset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int previousStartBoundary(@IntRange(from = 0) int offset)", "public int previousEndBoundary(@IntRange(from = 0) int offset)", "public int nextStartBoundary(@IntRange(from = 0) int offset)", "public int nextEndBoundary(@IntRange(from = 0) int offset)" ],
  "variableNames" : [ "mText", "mWordIterator" ]
}