{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/emergency/EmergencyNumber.java",
  "packageName" : "android.telephony.emergency",
  "className" : "EmergencyNumber",
  "comment" : "\n * A parcelable class that wraps and retrieves the information of number, service category(s) and\n * country code for a specific emergency number.\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED",
    "type" : "int",
    "comment" : "\n     * Emergency Service Category UNSPECIFIED (General emergency call, all categories) bit-field\n     * indicates that no specific services are associated with this emergency number; if the\n     * emergency number is specified, it has one or more defined emergency service categories.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_POLICE",
    "type" : "int",
    "comment" : "\n     * Bit-field that indicates Emergency Service Category for Police.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_AMBULANCE",
    "type" : "int",
    "comment" : "\n     * Bit-field that indicates Emergency Service Category for Ambulance.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_FIRE_BRIGADE",
    "type" : "int",
    "comment" : "\n     * Bit-field that indicates Emergency Service Category for Fire Brigade.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_MARINE_GUARD",
    "type" : "int",
    "comment" : "\n     * Bit-field that indicates Emergency Service Category for Marine Guard.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_MOUNTAIN_RESCUE",
    "type" : "int",
    "comment" : "\n     * Bit-field that indicates Emergency Service Category for Mountain Rescue.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_MIEC",
    "type" : "int",
    "comment" : "\n     * Bit-field that indicates Emergency Service Category for Manually Initiated eCall (MIeC)\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_AIEC",
    "type" : "int",
    "comment" : "\n     * Bit-field that indicates Emergency Service Category for Automatically Initiated eCall (AIeC)\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_SERVICE_CATEGORY_SET",
    "type" : "Set<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_NUMBER_SOURCE_NETWORK_SIGNALING",
    "type" : "int",
    "comment" : "\n     * Bit-field which indicates the number is from the network signaling.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_NUMBER_SOURCE_SIM",
    "type" : "int",
    "comment" : "\n     * Bit-field which indicates the number is from the sim.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_NUMBER_SOURCE_DATABASE",
    "type" : "int",
    "comment" : "\n     * Bit-field which indicates the number is from the platform-maintained database.\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_NUMBER_SOURCE_TEST",
    "type" : "int",
    "comment" : "\n     * Bit-field which indicates the number is from test mode.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_NUMBER_SOURCE_MODEM_CONFIG",
    "type" : "int",
    "comment" : " Bit-field which indicates the number is from the modem config. ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_NUMBER_SOURCE_DEFAULT",
    "type" : "int",
    "comment" : "\n     * Bit-field which indicates the number is available as default.\n     *\n     * 112, 911 must always be available; additionally, 000, 08, 110, 999, 118 and 119 must be\n     * available when sim is not present.\n     *\n     * Reference: 3gpp 22.101, Section 10 - Emergency Calls\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_NUMBER_SOURCE_SET",
    "type" : "Set<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_CALL_ROUTING_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Indicated the framework does not know whether an emergency call should be placed using\n     * emergency or normal call routing. This means the underlying radio or IMS implementation is\n     * free to determine for itself how to route the call.\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_CALL_ROUTING_EMERGENCY",
    "type" : "int",
    "comment" : "\n     * Indicates the radio or IMS implementation must handle the call through emergency routing.\n     ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_CALL_ROUTING_NORMAL",
    "type" : "int",
    "comment" : "\n     * Indicates the radio or IMS implementation must handle the call through normal call routing.\n     ",
    "links" : [ ]
  }, {
    "name" : "mNumber",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCountryIso",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMnc",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEmergencyServiceCategoryBitmask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEmergencyUrns",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEmergencyNumberSourceBitmask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEmergencyCallRouting",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<EmergencyNumber>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getNumber()",
    "returnType" : "String",
    "comment" : "\n     * Get the dialing number of the emergency number.\n     *\n     * The character in the number string is only the dial pad\n     * character('0'-'9', '*', '+', or '#'). For example: 911.\n     *\n     * If the number starts with carrier prefix, the carrier prefix is configured in\n     * {@link CarrierConfigManager#KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAY}.\n     *\n     * @return the dialing number.\n     ",
    "links" : [ "CarrierConfigManager#KEY_EMERGENCY_NUMBER_PREFIX_STRING_ARRAY" ]
  }, {
    "name" : "public String getCountryIso()",
    "returnType" : "String",
    "comment" : "\n     * Get the country code string (lowercase character) in ISO 3166 format of the emergency number.\n     *\n     * @return the country code string (lowercase character) in ISO 3166 format.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getMnc()",
    "returnType" : "String",
    "comment" : "\n     * Get the Mobile Network Code of the emergency number.\n     *\n     * @return the Mobile Network Code of the emergency number.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEmergencyServiceCategoryBitmask()",
    "returnType" : "int",
    "comment" : "\n     * Returns the bitmask of emergency service categories of the emergency number.\n     *\n     * @return bitmask of the emergency service categories\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEmergencyServiceCategoryBitmaskInternalDial()",
    "returnType" : "int",
    "comment" : "\n     * Returns the bitmask of emergency service categories of the emergency number for\n     * internal dialing.\n     *\n     * @return bitmask of the emergency service categories\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<Integer> getEmergencyServiceCategories()",
    "returnType" : "List<Integer>",
    "comment" : "\n     * Returns the emergency service categories of the emergency number.\n     *\n     * Note: if the emergency number is in {@link #EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED}, only\n     * {@link #EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED} is returned and it means the number is in\n     * all categories.\n     *\n     * @return a list of the emergency service categories\n     ",
    "links" : [ "#EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED", "#EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED" ]
  }, {
    "name" : "public List<String> getEmergencyUrns()",
    "returnType" : "List<String>",
    "comment" : "\n     * Returns the list of emergency Uniform Resources Names (URN) of the emergency number.\n     *\n     * For example, {@code urn:service:sos} is the generic URN for contacting emergency services\n     * of all type.\n     *\n     * Reference: 3gpp 24.503, Section 5.1.6.8.1 - General;\n     *            RFC 5031\n     *\n     * @return list of emergency Uniform Resources Names (URN) or an empty list if the emergency\n     *         number does not have a specified emergency Uniform Resource Name.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean serviceUnspecified()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the emergency service category is unspecified for the emergency number\n     * {@link #EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED}.\n     *\n     * @return {@code true} if the emergency service category is unspecified for the emergency\n     * number {@link #EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED}; {@code false} otherwise.\n     ",
    "links" : [ "#EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED", "#EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED" ]
  }, {
    "name" : "public boolean isInEmergencyServiceCategories(@EmergencyServiceCategories int categories)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the emergency number is in the supplied emergency service category(s).\n     *\n     * @param categories - the supplied emergency service categories\n     *\n     * @return {@code true} if the emergency number is in the specified emergency service\n     * category(s) or if its emergency service category is\n     * {@link #EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED}; {@code false} otherwise.\n     ",
    "links" : [ "#EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED" ]
  }, {
    "name" : "public int getEmergencyNumberSourceBitmask()",
    "returnType" : "int",
    "comment" : "\n     * Returns the bitmask of the sources of the emergency number.\n     *\n     * @return bitmask of the emergency number sources\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<Integer> getEmergencyNumberSources()",
    "returnType" : "List<Integer>",
    "comment" : "\n     * Returns a list of sources of the emergency number.\n     *\n     * @return a list of emergency number sources\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFromSources(@EmergencyNumberSources int sources)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the emergency number is from the specified emergency number source(s).\n     *\n     * @return {@code true} if the emergency number is from the specified emergency number\n     * source(s); {@code false} otherwise.\n     *\n     * @param sources - the supplied emergency number sources\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEmergencyCallRouting()",
    "returnType" : "int",
    "comment" : "\n     * Returns the emergency call routing information.\n     *\n     * <p>Some regions require some emergency numbers which are not routed using typical emergency\n     * call processing, but are instead placed as regular phone calls. The emergency call routing\n     * field provides information about how an emergency call will be routed when it is placed.\n     *\n     * @return the emergency call routing requirement\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getDisplayPriorityScore()",
    "returnType" : "int",
    "comment" : "\n     * Calculate the score for display priority.\n     *\n     * A higher display priority score means the emergency number has a higher display priority.\n     * The score is higher if the source is defined for a higher display priority.\n     *\n     * The priority of sources are defined as follows:\n     *     EMERGENCY_NUMBER_SOURCE_NETWORK_SIGNALING >\n     *     EMERGENCY_NUMBER_SOURCE_SIM >\n     *     EMERGENCY_NUMBER_SOURCE_DATABASE >\n     *     EMERGENCY_NUMBER_SOURCE_DEFAULT >\n     *     EMERGENCY_NUMBER_SOURCE_MODEM_CONFIG\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public int compareTo(@NonNull EmergencyNumber emergencyNumber)",
    "returnType" : "int",
    "comment" : "\n     * Compare the display priority for this emergency number and the supplied emergency number.\n     *\n     * @param emergencyNumber the supplied emergency number\n     * @return a negative value if the supplied emergency number has a lower display priority;\n     *         a positive value if the supplied emergency number has a higher display priority;\n     *         0 if both have equal display priority.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void mergeSameNumbersInEmergencyNumberList(List<EmergencyNumber> emergencyNumberList)",
    "returnType" : "void",
    "comment" : "\n     * In-place merge same emergency numbers in the emergency number list.\n     *\n     * A unique EmergencyNumber has a unique combination of ‘number’, ‘mcc’, 'mnc' and\n     * 'categories' fields. Multiple Emergency Number Sources should be merged into one bitfield\n     * for the same EmergencyNumber.\n     *\n     * @param emergencyNumberList the emergency number list to process\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean areSameEmergencyNumbers(@NonNull EmergencyNumber first, @NonNull EmergencyNumber second)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if two emergency numbers are the same.\n     *\n     * A unique EmergencyNumber has a unique combination of ‘number’, ‘mcc’, 'mnc' and\n     * 'categories', and 'routing' fields. Multiple Emergency Number Sources should be\n     * merged into one bitfield for the same EmergencyNumber.\n     *\n     * @param first first EmergencyNumber to compare\n     * @param second second EmergencyNumber to compare\n     * @return true if they are the same EmergencyNumbers; false otherwise.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static EmergencyNumber mergeSameEmergencyNumbers(@NonNull EmergencyNumber first, @NonNull EmergencyNumber second)",
    "returnType" : "EmergencyNumber",
    "comment" : "\n     * Get a merged EmergencyNumber from two same emergency numbers. Two emergency numbers are\n     * the same if {@link #areSameEmergencyNumbers} returns {@code true}.\n     *\n     * @param first first EmergencyNumber to compare\n     * @param second second EmergencyNumber to compare\n     * @return a merged EmergencyNumber or null if they are not the same EmergencyNumber\n     *\n     * @hide\n     ",
    "links" : [ "#areSameEmergencyNumbers" ]
  }, {
    "name" : "public static boolean validateEmergencyNumberAddress(String address)",
    "returnType" : "boolean",
    "comment" : "\n     * Validate Emergency Number address that only contains the dialable character\n     * {@link PhoneNumberUtils#isDialable(char)}\n     *\n     * @hide\n     ",
    "links" : [ "PhoneNumberUtils#isDialable" ]
  } ],
  "variableNames" : [ "LOG_TAG", "EMERGENCY_SERVICE_CATEGORY_UNSPECIFIED", "EMERGENCY_SERVICE_CATEGORY_POLICE", "EMERGENCY_SERVICE_CATEGORY_AMBULANCE", "EMERGENCY_SERVICE_CATEGORY_FIRE_BRIGADE", "EMERGENCY_SERVICE_CATEGORY_MARINE_GUARD", "EMERGENCY_SERVICE_CATEGORY_MOUNTAIN_RESCUE", "EMERGENCY_SERVICE_CATEGORY_MIEC", "EMERGENCY_SERVICE_CATEGORY_AIEC", "EMERGENCY_SERVICE_CATEGORY_SET", "EMERGENCY_NUMBER_SOURCE_NETWORK_SIGNALING", "EMERGENCY_NUMBER_SOURCE_SIM", "EMERGENCY_NUMBER_SOURCE_DATABASE", "EMERGENCY_NUMBER_SOURCE_TEST", "EMERGENCY_NUMBER_SOURCE_MODEM_CONFIG", "EMERGENCY_NUMBER_SOURCE_DEFAULT", "EMERGENCY_NUMBER_SOURCE_SET", "EMERGENCY_CALL_ROUTING_UNKNOWN", "EMERGENCY_CALL_ROUTING_EMERGENCY", "EMERGENCY_CALL_ROUTING_NORMAL", "mNumber", "mCountryIso", "mMnc", "mEmergencyServiceCategoryBitmask", "mEmergencyUrns", "mEmergencyNumberSourceBitmask", "mEmergencyCallRouting", "CREATOR" ],
  "methodNames" : [ "public void writeToParcel(Parcel dest, int flags)", "public String getNumber()", "public String getCountryIso()", "public String getMnc()", "public int getEmergencyServiceCategoryBitmask()", "public int getEmergencyServiceCategoryBitmaskInternalDial()", "public List<Integer> getEmergencyServiceCategories()", "public List<String> getEmergencyUrns()", "private boolean serviceUnspecified()", "public boolean isInEmergencyServiceCategories(@EmergencyServiceCategories int categories)", "public int getEmergencyNumberSourceBitmask()", "public List<Integer> getEmergencyNumberSources()", "public boolean isFromSources(@EmergencyNumberSources int sources)", "public int getEmergencyCallRouting()", "public int describeContents()", "public String toString()", "public boolean equals(Object o)", "public int hashCode()", "private int getDisplayPriorityScore()", "public int compareTo(@NonNull EmergencyNumber emergencyNumber)", "public static void mergeSameNumbersInEmergencyNumberList(List<EmergencyNumber> emergencyNumberList)", "public static boolean areSameEmergencyNumbers(@NonNull EmergencyNumber first, @NonNull EmergencyNumber second)", "public static EmergencyNumber mergeSameEmergencyNumbers(@NonNull EmergencyNumber first, @NonNull EmergencyNumber second)", "public static boolean validateEmergencyNumberAddress(String address)" ]
}