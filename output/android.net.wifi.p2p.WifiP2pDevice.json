{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/p2p/WifiP2pDevice.java",
  "packageName" : "android.net.wifi.p2p",
  "className" : "WifiP2pDevice",
  "comment" : "\n * A class representing a Wi-Fi p2p device\n *\n * Note that the operations are not thread safe\n * {@see WifiP2pManager}\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "deviceName",
    "type" : "String",
    "comment" : "\n     * The device name is a user friendly string to identify a Wi-Fi p2p device\n     ",
    "links" : [ ]
  }, {
    "name" : "deviceAddress",
    "type" : "String",
    "comment" : "\n     * The device MAC address uniquely identifies a Wi-Fi p2p device\n     ",
    "links" : [ ]
  }, {
    "name" : "primaryDeviceType",
    "type" : "String",
    "comment" : "\n     * Primary device type identifies the type of device. For example, an application\n     * could filter the devices discovered to only display printers if the purpose is to\n     * enable a printing action from the user. See the Wi-Fi Direct technical specification\n     * for the full list of standard device types supported.\n     ",
    "links" : [ ]
  }, {
    "name" : "secondaryDeviceType",
    "type" : "String",
    "comment" : "\n     * Secondary device type is an optional attribute that can be provided by a device in\n     * addition to the primary device type.\n     ",
    "links" : [ ]
  }, {
    "name" : "WPS_CONFIG_DISPLAY",
    "type" : "int",
    "comment" : " WPS config methods supported ",
    "links" : [ ]
  }, {
    "name" : "WPS_CONFIG_PUSHBUTTON",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WPS_CONFIG_KEYPAD",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CAPAB_SERVICE_DISCOVERY",
    "type" : "int",
    "comment" : " Device Capability bitmap ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CAPAB_CLIENT_DISCOVERABILITY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CAPAB_CONCURRENT_OPER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CAPAB_INFRA_MANAGED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CAPAB_DEVICE_LIMIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CAPAB_INVITATION_PROCEDURE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GROUP_CAPAB_GROUP_OWNER",
    "type" : "int",
    "comment" : " Group Capability bitmap ",
    "links" : [ ]
  }, {
    "name" : "GROUP_CAPAB_PERSISTENT_GROUP",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GROUP_CAPAB_GROUP_LIMIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GROUP_CAPAB_INTRA_BSS_DIST",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GROUP_CAPAB_CROSS_CONN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GROUP_CAPAB_PERSISTENT_RECONN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GROUP_CAPAB_GROUP_FORMATION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "wpsConfigMethodsSupported",
    "type" : "int",
    "comment" : "\n     * WPS config methods supported\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "deviceCapability",
    "type" : "int",
    "comment" : "\n     * Device capability\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "groupCapability",
    "type" : "int",
    "comment" : "\n     * Group capability\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CONNECTED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INVITED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FAILED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AVAILABLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UNAVAILABLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "status",
    "type" : "int",
    "comment" : " Device connection status ",
    "links" : [ ]
  }, {
    "name" : "wfdInfo",
    "type" : "WifiP2pWfdInfo",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "detailedDevicePattern",
    "type" : "Pattern",
    "comment" : " Detailed device string pattern with WFD info\n     * Example:\n     *  P2P-DEVICE-FOUND 00:18:6b:de:a3:6e p2p_dev_addr=00:18:6b:de:a3:6e\n     *  pri_dev_type=1-0050F204-1 name='DWD-300-DEA36E' config_methods=0x188\n     *  dev_capab=0x21 group_capab=0x9\n     ",
    "links" : [ ]
  }, {
    "name" : "twoTokenPattern",
    "type" : "Pattern",
    "comment" : " 2 token device address pattern\n     * Example:\n     *  P2P-DEVICE-LOST p2p_dev_addr=fa:7b:7a:42:02:13\n     *  AP-STA-DISCONNECTED 42:fc:89:a8:96:09\n     ",
    "links" : [ ]
  }, {
    "name" : "threeTokenPattern",
    "type" : "Pattern",
    "comment" : " 3 token device address pattern\n     * Example:\n     *  AP-STA-CONNECTED 42:fc:89:a8:96:09 p2p_dev_addr=fa:7b:7a:42:02:13\n     *  AP-STA-DISCONNECTED 42:fc:89:a8:96:09 p2p_dev_addr=fa:7b:7a:42:02:13\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WifiP2pDevice>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public WifiP2pWfdInfo getWfdInfo()",
    "returnType" : "WifiP2pWfdInfo",
    "comment" : " The Wifi Display information for this device, or null if unavailable. ",
    "links" : [ ]
  }, {
    "name" : "public boolean wpsPbcSupported()",
    "returnType" : "boolean",
    "comment" : " Returns true if WPS push button configuration is supported ",
    "links" : [ ]
  }, {
    "name" : "public boolean wpsKeypadSupported()",
    "returnType" : "boolean",
    "comment" : " Returns true if WPS keypad configuration is supported ",
    "links" : [ ]
  }, {
    "name" : "public boolean wpsDisplaySupported()",
    "returnType" : "boolean",
    "comment" : " Returns true if WPS display configuration is supported ",
    "links" : [ ]
  }, {
    "name" : "public boolean isServiceDiscoveryCapable()",
    "returnType" : "boolean",
    "comment" : " Returns true if the device is capable of service discovery ",
    "links" : [ ]
  }, {
    "name" : "public boolean isInvitationCapable()",
    "returnType" : "boolean",
    "comment" : " Returns true if the device is capable of invitation {@hide}",
    "links" : [ ]
  }, {
    "name" : "public boolean isDeviceLimit()",
    "returnType" : "boolean",
    "comment" : " Returns true if the device reaches the limit. {@hide}",
    "links" : [ ]
  }, {
    "name" : "public boolean isGroupOwner()",
    "returnType" : "boolean",
    "comment" : " Returns true if the device is a group owner ",
    "links" : [ ]
  }, {
    "name" : "public boolean isGroupLimit()",
    "returnType" : "boolean",
    "comment" : " Returns true if the group reaches the limit. {@hide}",
    "links" : [ ]
  }, {
    "name" : "public void update(@NonNull WifiP2pDevice device)",
    "returnType" : "void",
    "comment" : "\n     * Update this device's details using another {@link WifiP2pDevice} instance.\n     * This will throw an exception if the device address does not match.\n     *\n     * @param device another instance of {@link WifiP2pDevice} used to update this instance.\n     * @throws IllegalArgumentException if the device is null or the device address does not match\n     ",
    "links" : [ "android.net.wifi.p2p.WifiP2pDevice" ]
  }, {
    "name" : "public void updateSupplicantDetails(WifiP2pDevice device)",
    "returnType" : "void",
    "comment" : " Updates details obtained from supplicant @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "private int parseHex(String hexString)",
    "returnType" : "int",
    "comment" : "supported formats: 0x1abc, 0X1abc, 1abc",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "deviceName", "deviceAddress", "primaryDeviceType", "secondaryDeviceType", "WPS_CONFIG_DISPLAY", "WPS_CONFIG_PUSHBUTTON", "WPS_CONFIG_KEYPAD", "DEVICE_CAPAB_SERVICE_DISCOVERY", "DEVICE_CAPAB_CLIENT_DISCOVERABILITY", "DEVICE_CAPAB_CONCURRENT_OPER", "DEVICE_CAPAB_INFRA_MANAGED", "DEVICE_CAPAB_DEVICE_LIMIT", "DEVICE_CAPAB_INVITATION_PROCEDURE", "GROUP_CAPAB_GROUP_OWNER", "GROUP_CAPAB_PERSISTENT_GROUP", "GROUP_CAPAB_GROUP_LIMIT", "GROUP_CAPAB_INTRA_BSS_DIST", "GROUP_CAPAB_CROSS_CONN", "GROUP_CAPAB_PERSISTENT_RECONN", "GROUP_CAPAB_GROUP_FORMATION", "wpsConfigMethodsSupported", "deviceCapability", "groupCapability", "CONNECTED", "INVITED", "FAILED", "AVAILABLE", "UNAVAILABLE", "status", "wfdInfo", "detailedDevicePattern", "twoTokenPattern", "threeTokenPattern", "CREATOR" ],
  "methodNames" : [ "public WifiP2pWfdInfo getWfdInfo()", "public boolean wpsPbcSupported()", "public boolean wpsKeypadSupported()", "public boolean wpsDisplaySupported()", "public boolean isServiceDiscoveryCapable()", "public boolean isInvitationCapable()", "public boolean isDeviceLimit()", "public boolean isGroupOwner()", "public boolean isGroupLimit()", "public void update(@NonNull WifiP2pDevice device)", "public void updateSupplicantDetails(WifiP2pDevice device)", "public boolean equals(Object obj)", "public int hashCode()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "private int parseHex(String hexString)" ]
}