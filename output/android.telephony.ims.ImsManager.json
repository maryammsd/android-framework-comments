{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/ImsManager.java",
  "packageName" : "android.telephony.ims",
  "className" : "ImsManager",
  "comment" : "\n * Provides access to information about Telephony IMS services on the device.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ACTION_FORBIDDEN_NO_SERVICE_AUTHORIZATION",
    "type" : "String",
    "comment" : " this value hard-coded in BroadcastReceiver.",
    "links" : [ ]
  }, {
    "name" : "ACTION_WFC_IMS_REGISTRATION_ERROR",
    "type" : "String",
    "comment" : "\n     * An intent action indicating that IMS registration for WiFi calling has resulted in an error.\n     * Contains error information that should be displayed to the user.\n     * <p>\n     * This intent will contain the following extra key/value pairs:\n     * {@link #EXTRA_WFC_REGISTRATION_FAILURE_TITLE}\n     * and {@link #EXTRA_WFC_REGISTRATION_FAILURE_MESSAGE}, which contain carrier specific\n     * error information that should be displayed to the user.\n     * <p>\n     * Usage: This intent is sent as an ordered broadcast. If the settings application is going\n     * to show the error information specified to the user, it should respond to\n     * {@link android.content.BroadcastReceiver#setResultCode(int)} with\n     * {@link android.app.Activity#RESULT_CANCELED}, which will signal to the framework that the\n     * event was handled. If the framework does not receive a response to the ordered broadcast,\n     * it will then show a notification to the user indicating that there was a registration\n     * failure.\n     ",
    "links" : [ "android.app.Activity#RESULT_CANCELED", "#EXTRA_WFC_REGISTRATION_FAILURE_MESSAGE", "android.content.BroadcastReceiver#setResultCode(int)", "#EXTRA_WFC_REGISTRATION_FAILURE_TITLE" ]
  }, {
    "name" : "EXTRA_WFC_REGISTRATION_FAILURE_TITLE",
    "type" : "String",
    "comment" : "\n     * An extra key corresponding to a {@link CharSequence} value which contains the carrier\n     * specific title to be displayed as part of the message shown to the user when there is an\n     * error registering for WiFi calling.\n     ",
    "links" : [ "CharSequence" ]
  }, {
    "name" : "EXTRA_WFC_REGISTRATION_FAILURE_MESSAGE",
    "type" : "String",
    "comment" : "\n     * An extra key corresponding to a {@link CharSequence} value which contains the carrier\n     * specific message to  be displayed as part of the message shown to the user when there is an\n     * error registering for WiFi calling.\n     ",
    "links" : [ "CharSequence" ]
  }, {
    "name" : "sTelephonyCache",
    "type" : "BinderCacheManager<ITelephony>",
    "comment" : " Cache Telephony Binder interfaces, one cache per process.",
    "links" : [ ]
  }, {
    "name" : "sRcsCache",
    "type" : "BinderCacheManager<IImsRcsController>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ImsRcsManager getImsRcsManager(int subscriptionId)",
    "returnType" : "ImsRcsManager",
    "comment" : "\n     * Create an instance of ImsRcsManager for the subscription id specified.\n     *\n     * @param subscriptionId The ID of the subscription that this ImsRcsManager will use.\n     * @throws IllegalArgumentException if the subscription is invalid.\n     * @return a ImsRcsManager instance with the specific subscription ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ImsMmTelManager getImsMmTelManager(int subscriptionId)",
    "returnType" : "ImsMmTelManager",
    "comment" : "\n     * Create an instance of ImsMmTelManager for the subscription id specified.\n     *\n     * @param subscriptionId The ID of the subscription that this ImsMmTelManager will use.\n     * @throws IllegalArgumentException if the subscription is invalid.\n     * @return a ImsMmTelManager instance with the specific subscription ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SipDelegateManager getSipDelegateManager(int subscriptionId)",
    "returnType" : "SipDelegateManager",
    "comment" : "\n     * Create an instance of {@link SipDelegateManager} for the subscription id specified.\n     * <p>\n     * Allows an IMS application to forward SIP traffic through the device's IMS service,\n     * which is used for cellular carriers that require the device to share a single IMS\n     * registration for both MMTEL and RCS features.\n     * @param subscriptionId The ID of the subscription that this {@link SipDelegateManager} will\n     *                       be bound to.\n     * @throws IllegalArgumentException if the subscription is invalid.\n     * @return a {@link SipDelegateManager} instance for the specified subscription ID.\n     * @hide\n     ",
    "links" : [ "android.telephony.ims.SipDelegateManager" ]
  }, {
    "name" : "public ProvisioningManager getProvisioningManager(int subscriptionId)",
    "returnType" : "ProvisioningManager",
    "comment" : "\n     * Create an instance of {@link ProvisioningManager} for the subscription id specified.\n     * <p>\n     * Provides a ProvisioningManager instance to carrier apps to update carrier provisioning\n     * information, as well as provides a callback so that apps can listen for changes\n     * in MMTEL/RCS provisioning\n     * @param subscriptionId The ID of the subscription that this ProvisioningManager will use.\n     * @throws IllegalArgumentException if the subscription is invalid.\n     * @return a ProvisioningManager instance with the specific subscription ID.\n     ",
    "links" : [ "android.telephony.ims.ProvisioningManager" ]
  }, {
    "name" : "private static IImsRcsController getIImsRcsControllerInterface()",
    "returnType" : "IImsRcsController",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ITelephony getITelephonyInterface()",
    "returnType" : "ITelephony",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ImsRcsManager getImsRcsManager(int subscriptionId)", "public ImsMmTelManager getImsMmTelManager(int subscriptionId)", "public SipDelegateManager getSipDelegateManager(int subscriptionId)", "public ProvisioningManager getProvisioningManager(int subscriptionId)", "private static IImsRcsController getIImsRcsControllerInterface()", "private static ITelephony getITelephonyInterface()" ],
  "variableNames" : [ "ACTION_FORBIDDEN_NO_SERVICE_AUTHORIZATION", "ACTION_WFC_IMS_REGISTRATION_ERROR", "EXTRA_WFC_REGISTRATION_FAILURE_TITLE", "EXTRA_WFC_REGISTRATION_FAILURE_MESSAGE", "sTelephonyCache", "sRcsCache", "mContext" ]
}