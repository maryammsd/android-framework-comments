{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/autofill/AutofillManager.java",
  "packageName" : "android.view.autofill",
  "className" : "AutofillCallback",
  "comment" : "\n     * Callback for autofill related events.\n     *\n     * <p>Typically used for applications that display their own \"auto-complete\" views, so they can\n     * enable / disable such views when the autofill UI is shown / hidden.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "EVENT_INPUT_SHOWN",
    "type" : "int",
    "comment" : "\n         * The autofill input UI associated with the view was shown.\n         *\n         * <p>If the view provides its own auto-complete UI and its currently shown, it\n         * should be hidden upon receiving this event.\n         ",
    "links" : [ ]
  }, {
    "name" : "EVENT_INPUT_HIDDEN",
    "type" : "int",
    "comment" : "\n         * The autofill input UI associated with the view was hidden.\n         *\n         * <p>If the view provides its own auto-complete UI that was hidden upon a\n         * {@link #EVENT_INPUT_SHOWN} event, it could be shown again now.\n         ",
    "links" : [ "#EVENT_INPUT_SHOWN" ]
  }, {
    "name" : "EVENT_INPUT_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n         * The autofill input UI associated with the view isn't shown because\n         * autofill is not available.\n         *\n         * <p>If the view provides its own auto-complete UI but was not displaying it\n         * to avoid flickering, it could shown it upon receiving this event.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onAutofillEvent(@NonNull View view, @AutofillEventType int event)",
    "returnType" : "void",
    "comment" : "\n         * Called after a change in the autofill state associated with a view.\n         *\n         * @param view view associated with the change.\n         *\n         * @param event currently either {@link #EVENT_INPUT_SHOWN} or {@link #EVENT_INPUT_HIDDEN}.\n         ",
    "links" : [ "#EVENT_INPUT_SHOWN", "#EVENT_INPUT_HIDDEN" ]
  }, {
    "name" : "public void onAutofillEvent(@NonNull View view, int virtualId, @AutofillEventType int event)",
    "returnType" : "void",
    "comment" : "\n         * Called after a change in the autofill state associated with a virtual view.\n         *\n         * @param view parent view associated with the change.\n         * @param virtualId id identifying the virtual child inside the parent view.\n         *\n         * @param event currently either {@link #EVENT_INPUT_SHOWN} or {@link #EVENT_INPUT_HIDDEN}.\n         ",
    "links" : [ "#EVENT_INPUT_SHOWN", "#EVENT_INPUT_HIDDEN" ]
  } ],
  "methodNames" : [ "public void onAutofillEvent(@NonNull View view, @AutofillEventType int event)", "public void onAutofillEvent(@NonNull View view, int virtualId, @AutofillEventType int event)" ],
  "variableNames" : [ "EVENT_INPUT_SHOWN", "EVENT_INPUT_HIDDEN", "EVENT_INPUT_UNAVAILABLE" ]
}