{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/WebIconDatabase.java",
  "packageName" : "android.webkit",
  "className" : "WebIconDatabase",
  "comment" : "\n * Functions for manipulating the icon database used by WebView.\n * These functions require that a WebView be constructed before being invoked\n * and WebView.getIconDatabase() will return a WebIconDatabase object. This\n * WebIconDatabase object is a single instance and all methods operate on that\n * single object.\n * The main use-case for this class is calling {@link #open}\n * to enable favicon functionality on all WebView instances in this process.\n *\n * @deprecated This class is only required when running on devices\n *             up to {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR2}\n ",
  "links" : [ "android.os.Build.VERSION_CODES#JELLY_BEAN_MR2", "#open" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void open(String path)",
    "returnType" : "void",
    "comment" : "\n     * Open a the icon database and store the icons in the given path.\n     * @param path The directory path where the icon database will be stored.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void close()",
    "returnType" : "void",
    "comment" : "\n     * Close the shared instance of the icon database.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void removeAllIcons()",
    "returnType" : "void",
    "comment" : "\n     * Removes all the icons in the database.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void requestIconForPageUrl(String url, IconListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Request the Bitmap representing the icon for the given page\n     * url. If the icon exists, the listener will be called with the result.\n     * @param url The page's url.\n     * @param listener An implementation on IconListener to receive the result.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void bulkRequestIconForPageUrl(ContentResolver cr, String where, IconListener listener)",
    "returnType" : "void",
    "comment" : " {@hide}\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void retainIconForPageUrl(String url)",
    "returnType" : "void",
    "comment" : "\n     * Retain the icon for the given page url.\n     * @param url The page's url.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void releaseIconForPageUrl(String url)",
    "returnType" : "void",
    "comment" : "\n     * Release the icon for the given page url.\n     * @param url The page's url.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static WebIconDatabase getInstance()",
    "returnType" : "WebIconDatabase",
    "comment" : "\n     * Get the global instance of WebIconDatabase.\n     * @return A single instance of WebIconDatabase. It will be the same\n     *         instance for the current process each time this method is\n     *         called.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void open(String path)", "public abstract void close()", "public abstract void removeAllIcons()", "public abstract void requestIconForPageUrl(String url, IconListener listener)", "public abstract void bulkRequestIconForPageUrl(ContentResolver cr, String where, IconListener listener)", "public abstract void retainIconForPageUrl(String url)", "public abstract void releaseIconForPageUrl(String url)", "public static WebIconDatabase getInstance()" ],
  "variableNames" : [ ]
}