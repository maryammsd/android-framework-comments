{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/number/MixedUnitLongNameHandler.java",
  "packageName" : "android.icu.impl.number",
  "className" : "MixedUnitLongNameHandler",
  "comment" : " Similar to LongNameHandler, but only for MIXED units. \n * @hide Only a subset of ICU is exposed in Android",
  "links" : [ ],
  "variables" : [ {
    "name" : "rules",
    "type" : "PluralRules",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "parent",
    "type" : "MicroPropsGenerator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fMixedUnitData",
    "type" : "List<String[]>",
    "comment" : "\n     * Stores unit data for each of the individual units. For each unit, it\n     * stores ARRAY_LENGTH strings, as returned by getMeasureData.\n     ",
    "links" : [ ]
  }, {
    "name" : "fIntegerFormatter",
    "type" : "LocalizedNumberFormatter",
    "comment" : "\n     * A localized NumberFormatter used to format the integer-valued bigger\n     * units of Mixed Unit measurements.\n     ",
    "links" : [ ]
  }, {
    "name" : "fListFormatter",
    "type" : "ListFormatter",
    "comment" : " A localised list formatter for joining mixed units together. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static MixedUnitLongNameHandler forMeasureUnit(ULocale locale, MeasureUnit mixedUnit, NumberFormatter.UnitWidth width, String unitDisplayCase, PluralRules rules, MicroPropsGenerator parent)",
    "returnType" : "MixedUnitLongNameHandler",
    "comment" : "\n     * Construct a localized MixedUnitLongNameHandler for the specified\n     * MeasureUnit. It must be a MIXED unit.\n     * <p>\n     *\n     * @param locale    The desired locale.\n     * @param mixedUnit The mixed measure unit to construct a\n     *                  MixedUnitLongNameHandler for.\n     * @param width     Specifies the desired unit rendering.\n     * @param unitDisplayCase Specifies the desired grammatical case. If the\n     *     specified case is not found, we fall back to nominative or no-case.\n     * @param rules     PluralRules instance.\n     * @param parent    MicroPropsGenerator instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public MicroProps processQuantity(DecimalQuantity quantity)",
    "returnType" : "MicroProps",
    "comment" : "\n     * Produces a plural-appropriate Modifier for a mixed unit: {@code quantity} is\n     * taken as the final smallest unit, while the larger unit values must be\n     * provided by {@code micros.mixedMeasures}, micros being the MicroProps instance\n     * returned by the parent.\n     *\n     * This function must not be called if this instance has no parent: call\n     * processQuantityWithMicros() instead.\n     ",
    "links" : [ ]
  }, {
    "name" : "public MicroProps processQuantityWithMicros(DecimalQuantity quantity, MicroProps micros)",
    "returnType" : "MicroProps",
    "comment" : "\n     * Produces a plural-appropriate Modifier for a mixed unit: {@code quantity} is\n     * taken as the final smallest unit, while the larger unit values must be\n     * provided via {@code micros.mixedMeasures}.\n     *\n     * Does not call parent.processQuantity, so cannot get a MicroProps instance\n     * that way. Instead, the instance is passed in as a parameter.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Modifier getModifier(Modifier.Signum signum, StandardPlural plural)",
    "returnType" : "Modifier",
    "comment" : "\n     * Required for ModifierStore. And ModifierStore is required by\n     * SimpleModifier constructor's last parameter. We assert his will never get\n     * called though.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Modifier getMixedUnitModifier(DecimalQuantity quantity, MicroProps micros)",
    "returnType" : "Modifier",
    "comment" : "\n     * For a mixed unit, returns a Modifier that takes only one parameter: the\n     * smallest and final unit of the set. The bigger units' values and labels\n     * get baked into this Modifier, together with the unit label of the final\n     * unit.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static MixedUnitLongNameHandler forMeasureUnit(ULocale locale, MeasureUnit mixedUnit, NumberFormatter.UnitWidth width, String unitDisplayCase, PluralRules rules, MicroPropsGenerator parent)", "public MicroProps processQuantity(DecimalQuantity quantity)", "public MicroProps processQuantityWithMicros(DecimalQuantity quantity, MicroProps micros)", "public Modifier getModifier(Modifier.Signum signum, StandardPlural plural)", "private Modifier getMixedUnitModifier(DecimalQuantity quantity, MicroProps micros)" ],
  "variableNames" : [ "rules", "parent", "fMixedUnitData", "fIntegerFormatter", "fListFormatter" ]
}