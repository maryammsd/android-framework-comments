{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/io/WriteAbortedException.java",
  "packageName" : "java.io",
  "className" : "WriteAbortedException",
  "comment" : "\n * Signals that one of the ObjectStreamExceptions was thrown during a\n * write operation.  Thrown during a read operation when one of the\n * ObjectStreamExceptions was thrown during a write operation.  The\n * exception that terminated the write can be found in the detail\n * field. The stream is reset to it's initial state and all references\n * to objects already deserialized are discarded.\n *\n * @since   1.1\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "detail",
    "type" : "Exception",
    "comment" : "\n     * Exception that was caught while writing the ObjectStream.\n     *\n     * @deprecated This field predates the general-purpose exception\n     * chaining facility.  The {@link Throwable#getCause()} method is\n     * now the preferred means of obtaining this information.\n     *\n     * @serial\n     ",
    "links" : [ "#getCause()" ]
  } ],
  "methods" : [ {
    "name" : "public String getMessage()",
    "returnType" : "String",
    "comment" : "\n     * Produce the message and include the message from the nested\n     * exception, if there is one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Throwable getCause()",
    "returnType" : "Throwable",
    "comment" : "\n     * Returns the exception that terminated the operation (the <i>cause</i>).\n     *\n     * @return  the exception that terminated the operation (the <i>cause</i>),\n     *          which may be null.\n     * @since   1.4\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getMessage()", "public Throwable getCause()" ],
  "variableNames" : [ "serialVersionUID", "detail" ]
}