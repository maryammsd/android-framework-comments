{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/MotionEvent.java",
  "packageName" : "android.view",
  "className" : "PointerCoords",
  "comment" : "\n     * Transfer object for pointer coordinates.\n     *\n     * Objects of this type can be used to specify the pointer coordinates when\n     * creating new {@link MotionEvent} objects and to query pointer coordinates\n     * in bulk.\n     *\n     * Refer to {@link InputDevice} for information about how different kinds of\n     * input devices and sources represent pointer coordinates.\n     ",
  "links" : [ "android.view.InputDevice", "android.view.MotionEvent" ],
  "variables" : [ {
    "name" : "INITIAL_PACKED_AXIS_VALUES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackedAxisBits",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackedAxisValues",
    "type" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "x",
    "type" : "float",
    "comment" : "\n         * The X component of the pointer movement.\n         *\n         * @see MotionEvent#AXIS_X\n         ",
    "links" : [ ]
  }, {
    "name" : "y",
    "type" : "float",
    "comment" : "\n         * The Y component of the pointer movement.\n         *\n         * @see MotionEvent#AXIS_Y\n         ",
    "links" : [ ]
  }, {
    "name" : "pressure",
    "type" : "float",
    "comment" : "\n         * A normalized value that describes the pressure applied to the device\n         * by a finger or other tool.\n         * The pressure generally ranges from 0 (no pressure at all) to 1 (normal pressure),\n         * although values higher than 1 may be generated depending on the calibration of\n         * the input device.\n         *\n         * @see MotionEvent#AXIS_PRESSURE\n         ",
    "links" : [ ]
  }, {
    "name" : "size",
    "type" : "float",
    "comment" : "\n         * A normalized value that describes the approximate size of the pointer touch area\n         * in relation to the maximum detectable size of the device.\n         * It represents some approximation of the area of the screen being\n         * pressed; the actual value in pixels corresponding to the\n         * touch is normalized with the device specific range of values\n         * and scaled to a value between 0 and 1. The value of size can be used to\n         * determine fat touch events.\n         *\n         * @see MotionEvent#AXIS_SIZE\n         ",
    "links" : [ ]
  }, {
    "name" : "touchMajor",
    "type" : "float",
    "comment" : "\n         * The length of the major axis of an ellipse that describes the touch area at\n         * the point of contact.\n         * If the device is a touch screen, the length is reported in pixels, otherwise it is\n         * reported in device-specific units.\n         *\n         * @see MotionEvent#AXIS_TOUCH_MAJOR\n         ",
    "links" : [ ]
  }, {
    "name" : "touchMinor",
    "type" : "float",
    "comment" : "\n         * The length of the minor axis of an ellipse that describes the touch area at\n         * the point of contact.\n         * If the device is a touch screen, the length is reported in pixels, otherwise it is\n         * reported in device-specific units.\n         *\n         * @see MotionEvent#AXIS_TOUCH_MINOR\n         ",
    "links" : [ ]
  }, {
    "name" : "toolMajor",
    "type" : "float",
    "comment" : "\n         * The length of the major axis of an ellipse that describes the size of\n         * the approaching tool.\n         * The tool area represents the estimated size of the finger or pen that is\n         * touching the device independent of its actual touch area at the point of contact.\n         * If the device is a touch screen, the length is reported in pixels, otherwise it is\n         * reported in device-specific units.\n         *\n         * @see MotionEvent#AXIS_TOOL_MAJOR\n         ",
    "links" : [ ]
  }, {
    "name" : "toolMinor",
    "type" : "float",
    "comment" : "\n         * The length of the minor axis of an ellipse that describes the size of\n         * the approaching tool.\n         * The tool area represents the estimated size of the finger or pen that is\n         * touching the device independent of its actual touch area at the point of contact.\n         * If the device is a touch screen, the length is reported in pixels, otherwise it is\n         * reported in device-specific units.\n         *\n         * @see MotionEvent#AXIS_TOOL_MINOR\n         ",
    "links" : [ ]
  }, {
    "name" : "orientation",
    "type" : "float",
    "comment" : "\n         * The orientation of the touch area and tool area in radians clockwise from vertical.\n         * An angle of 0 radians indicates that the major axis of contact is oriented\n         * upwards, is perfectly circular or is of unknown orientation.  A positive angle\n         * indicates that the major axis of contact is oriented to the right.  A negative angle\n         * indicates that the major axis of contact is oriented to the left.\n         * The full range is from -PI/2 radians (finger pointing fully left) to PI/2 radians\n         * (finger pointing fully right).\n         *\n         * @see MotionEvent#AXIS_ORIENTATION\n         ",
    "links" : [ ]
  }, {
    "name" : "relativeX",
    "type" : "float",
    "comment" : "\n         * The movement of x position of a motion event.\n         *\n         * @see MotionEvent#AXIS_RELATIVE_X\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "relativeY",
    "type" : "float",
    "comment" : "\n         * The movement of y position of a motion event.\n         *\n         * @see MotionEvent#AXIS_RELATIVE_Y\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "isResampled",
    "type" : "boolean",
    "comment" : "\n         * Whether these coordinate data were generated by resampling.\n         *\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static PointerCoords[] createArray(int size)",
    "returnType" : "PointerCoords[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isResampled()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if these pointer coordinates were generated by resampling, rather than from\n         * an actual input event from the device at this time.\n         * <p>\n         * Resampling extrapolates or interpolates touch coordinates reported by the input device to\n         * better align them with the refresh rate of the display, resulting in smoother movements,\n         * in particular for scrolling. Resampled coordinates are always added to batches, so a\n         * motion event will always contain at least one sample that is an original event from the\n         * input device (i.e. for which this method will return {@code false}).\n         * </p><p>\n         * Resampling does not occur if unbuffered dispatch has been requested, or if it has been\n         * disabled by the manufacturer (for example, on hardware that already synchronizes its\n         * touch events and display frames).\n         * </p>\n         * @see android.view.View#requestUnbufferedDispatch(int)\n         * @see android.view.View#requestUnbufferedDispatch(MotionEvent)\n         ",
    "links" : [ ]
  }, {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "\n         * Clears the contents of this object.\n         * Resets all axes to zero.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void copyFrom(PointerCoords other)",
    "returnType" : "void",
    "comment" : "\n         * Copies the contents of another pointer coords object.\n         *\n         * @param other The pointer coords object to copy.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getAxisValue(int axis)",
    "returnType" : "float",
    "comment" : "\n         * Gets the value associated with the specified axis.\n         *\n         * @param axis The axis identifier for the axis value to retrieve.\n         * @return The value associated with the axis, or 0 if none.\n         *\n         * @see MotionEvent#AXIS_X\n         * @see MotionEvent#AXIS_Y\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setAxisValue(int axis, float value)",
    "returnType" : "void",
    "comment" : "\n         * Sets the value associated with the specified axis.\n         *\n         * @param axis The axis identifier for the axis value to assign.\n         * @param value The value to set.\n         *\n         * @see MotionEvent#AXIS_X\n         * @see MotionEvent#AXIS_Y\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static PointerCoords[] createArray(int size)", "public boolean isResampled()", "public void clear()", "public void copyFrom(PointerCoords other)", "public float getAxisValue(int axis)", "public void setAxisValue(int axis, float value)" ],
  "variableNames" : [ "INITIAL_PACKED_AXIS_VALUES", "mPackedAxisBits", "mPackedAxisValues", "x", "y", "pressure", "size", "touchMajor", "touchMinor", "toolMajor", "toolMinor", "orientation", "relativeX", "relativeY", "isResampled" ]
}