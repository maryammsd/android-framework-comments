{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/ConsumerIrManager.java",
  "packageName" : "android.hardware",
  "className" : "ConsumerIrManager",
  "comment" : "\n * Class that operates consumer infrared on the device.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IConsumerIrService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean hasIrEmitter()",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether the device has an infrared emitter.\n     *\n     * @return true if the device has an infrared emitter, else false.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void transmit(int carrierFrequency, int[] pattern)",
    "returnType" : "void",
    "comment" : "\n     * Transmit an infrared pattern\n     * <p>\n     * This method is synchronous; when it returns the pattern has\n     * been transmitted. Only patterns shorter than 2 seconds will\n     * be transmitted.\n     * </p>\n     *\n     * @param carrierFrequency The IR carrier frequency in Hertz.\n     * @param pattern The alternating on/off pattern in microseconds to transmit.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CarrierFrequencyRange[] getCarrierFrequencies()",
    "returnType" : "CarrierFrequencyRange[]",
    "comment" : "\n     * Query the infrared transmitter's supported carrier frequencies\n     *\n     * @return an array of\n     * {@link android.hardware.ConsumerIrManager.CarrierFrequencyRange}\n     * objects representing the ranges that the transmitter can support, or\n     * null if there was an error communicating with the Consumer IR Service.\n     ",
    "links" : [ "android.hardware.ConsumerIrManager.CarrierFrequencyRange" ]
  } ],
  "methodNames" : [ "public boolean hasIrEmitter()", "public void transmit(int carrierFrequency, int[] pattern)", "public CarrierFrequencyRange[] getCarrierFrequencies()" ],
  "variableNames" : [ "TAG", "mPackageName", "mService" ]
}