{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telecom/CallerInfoAsyncQuery.java",
  "packageName" : "android.telecom",
  "className" : "CallerInfoAsyncQueryHandler",
  "comment" : "\n     * Our own implementation of the AsyncQueryHandler.\n     ",
  "variables" : [ {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "\n         * Context passed by the caller.\n         *\n         * NOTE: The actual context we use for query may *not* be this context; since we query\n         * against the \"current\" contacts provider.  In the constructor we pass the \"current\"\n         * context resolver (obtained via {@link #getCurrentProfileContentResolver) and pass it\n         * to the super class.\n         ",
    "links" : [ "#getCurrentProfileContentResolver)" ]
  }, {
    "name" : "mQueryUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallerInfo",
    "type" : "CallerInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingListenerCallbacks",
    "type" : "List<Runnable>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected Handler createHandler(Looper looper)",
    "returnType" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onQueryComplete(int token, Object cookie, Cursor cursor)",
    "returnType" : "void",
    "comment" : "\n         * Overrides onQueryComplete from AsyncQueryHandler.\n         *\n         * This method takes into account the state of this class; we construct the CallerInfo\n         * object only once for each set of listeners. When the query thread has done its work\n         * and calls this method, we inform the remaining listeners in the queue, until we're\n         * out of listeners.  Once we get the message indicating that we should expect no new\n         * listeners for this CallerInfo object, we release the AsyncCursorInfo back into the\n         * pool.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mContext", "mQueryUri", "mCallerInfo", "mPendingListenerCallbacks" ],
  "methodNames" : [ "protected Handler createHandler(Looper looper)", "protected void onQueryComplete(int token, Object cookie, Cursor cursor)" ]
}