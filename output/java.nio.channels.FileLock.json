{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/channels/FileLock.java",
  "packageName" : "java.nio.channels",
  "className" : "FileLock",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "channel",
    "type" : "Channel",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "position",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "size",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "shared",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final FileChannel channel()",
    "returnType" : "FileChannel",
    "comment" : "\n     * Returns the file channel upon whose file this lock was acquired.\n     *\n     * <p> This method has been superseded by the {@link #acquiredBy acquiredBy}\n     * method.\n     *\n     * @return  The file channel, or {@code null} if the file lock was not\n     *          acquired by a file channel.\n     ",
    "links" : [ "#acquiredBy" ]
  }, {
    "name" : "public Channel acquiredBy()",
    "returnType" : "Channel",
    "comment" : "\n     * Returns the channel upon whose file this lock was acquired.\n     *\n     * @return  The channel upon whose file this lock was acquired.\n     *\n     * @since 1.7\n     ",
    "links" : [ ]
  }, {
    "name" : "public final long position()",
    "returnType" : "long",
    "comment" : "\n     * Returns the position within the file of the first byte of the locked\n     * region.\n     *\n     * <p> A locked region need not be contained within, or even overlap, the\n     * actual underlying file, so the value returned by this method may exceed\n     * the file's current size.  </p>\n     *\n     * @return  The position\n     ",
    "links" : [ ]
  }, {
    "name" : "public final long size()",
    "returnType" : "long",
    "comment" : "\n     * Returns the size of the locked region in bytes.\n     *\n     * <p> A locked region need not be contained within, or even overlap, the\n     * actual underlying file, so the value returned by this method may exceed\n     * the file's current size.  </p>\n     *\n     * @return  The size of the locked region\n     ",
    "links" : [ ]
  }, {
    "name" : "public final boolean isShared()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether this lock is shared.\n     *\n     * @return {@code true} if lock is shared,\n     *         {@code false} if it is exclusive\n     ",
    "links" : [ ]
  }, {
    "name" : "public final boolean overlaps(long position, long size)",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether or not this lock overlaps the given lock range.\n     *\n     * @param   position\n     *          The starting position of the lock range\n     * @param   size\n     *          The size of the lock range\n     *\n     * @return  {@code true} if, and only if, this lock and the given lock\n     *          range overlap by at least one byte\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean isValid()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether or not this lock is valid.\n     *\n     * <p> A lock object remains valid until it is released or the associated\n     * file channel is closed, whichever comes first.  </p>\n     *\n     * @return  {@code true} if, and only if, this lock is valid\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void release() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Releases this lock.\n     *\n     * <p> If this lock object is valid then invoking this method releases the\n     * lock and renders the object invalid.  If this lock object is invalid\n     * then invoking this method has no effect.  </p>\n     *\n     * @throws  ClosedChannelException\n     *          If the channel that was used to acquire this lock\n     *          is no longer open\n     *\n     * @throws  IOException\n     *          If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void close() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * This method invokes the {@link #release} method. It was added\n     * to the class so that it could be used in conjunction with the\n     * automatic resource management block construct.\n     *\n     * @since 1.7\n     ",
    "links" : [ "#release" ]
  }, {
    "name" : "public final String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a string describing the range, type, and validity of this lock.\n     *\n     * @return  A descriptive string\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final FileChannel channel()", "public Channel acquiredBy()", "public final long position()", "public final long size()", "public final boolean isShared()", "public final boolean overlaps(long position, long size)", "public abstract boolean isValid()", "public abstract void release() throws IOException", "public final void close() throws IOException", "public final String toString()" ],
  "variableNames" : [ "channel", "position", "size", "shared" ]
}