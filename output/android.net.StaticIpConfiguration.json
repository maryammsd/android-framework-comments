{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/StaticIpConfiguration.java",
  "packageName" : "android.net",
  "className" : "StaticIpConfiguration",
  "comment" : "\n * Class that describes static IP configuration.\n *\n * <p>This class is different from {@link LinkProperties} because it represents\n * configuration intent. The general contract is that if we can represent\n * a configuration here, then we should be able to configure it on a network.\n * The intent is that it closely match the UI we have for configuring networks.\n *\n * <p>In contrast, {@link LinkProperties} represents current state. It is much more\n * expressive. For example, it supports multiple IP addresses, multiple routes,\n * stacked interfaces, and so on. Because LinkProperties is so expressive,\n * using it to represent configuration intent as well as current state causes\n * problems. For example, we could unknowingly save a configuration that we are\n * not in fact capable of applying, or we could save a configuration that the\n * UI cannot display, which has the potential for malicious code to hide\n * hostile or unexpected configuration from the user.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "ipAddress",
    "type" : "LinkAddress",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "gateway",
    "type" : "InetAddress",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "dnsServers",
    "type" : "ArrayList<InetAddress>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "domains",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<StaticIpConfiguration>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public LinkAddress getIpAddress()",
    "returnType" : "LinkAddress",
    "comment" : "\n     * Get the static IP address included in the configuration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public InetAddress getGateway()",
    "returnType" : "InetAddress",
    "comment" : "\n     * Get the gateway included in the configuration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<InetAddress> getDnsServers()",
    "returnType" : "List<InetAddress>",
    "comment" : "\n     * Get the DNS servers included in the configuration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDomains()",
    "returnType" : "String",
    "comment" : "\n     * Get a {@link String} containing the comma separated domains to search when resolving host\n     * names on this link, in priority order.\n     ",
    "links" : [ "String" ]
  }, {
    "name" : "public void addDnsServer(@NonNull InetAddress server)",
    "returnType" : "void",
    "comment" : "\n     * Add a DNS server to this configuration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<RouteInfo> getRoutes(@Nullable String iface)",
    "returnType" : "List<RouteInfo>",
    "comment" : "\n     * Returns the network routes specified by this object. Will typically include a\n     * directly-connected route for the IP address's local subnet and a default route.\n     * @param iface Interface to include in the routes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public LinkProperties toLinkProperties(String iface)",
    "returnType" : "LinkProperties",
    "comment" : "\n     * Returns a LinkProperties object expressing the data in this object. Note that the information\n     * contained in the LinkProperties will not be a complete picture of the link's configuration,\n     * because any configuration information that is obtained dynamically by the network (e.g.,\n     * IPv6 configuration) will not be included.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "public static StaticIpConfiguration readFromParcel(Parcel in)",
    "returnType" : "StaticIpConfiguration",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "ipAddress", "gateway", "dnsServers", "domains", "CREATOR" ],
  "methodNames" : [ "public void clear()", "public LinkAddress getIpAddress()", "public InetAddress getGateway()", "public List<InetAddress> getDnsServers()", "public String getDomains()", "public void addDnsServer(@NonNull InetAddress server)", "public List<RouteInfo> getRoutes(@Nullable String iface)", "public LinkProperties toLinkProperties(String iface)", "public String toString()", "public int hashCode()", "public boolean equals(@Nullable Object obj)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public static StaticIpConfiguration readFromParcel(Parcel in)" ]
}