{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/database/AbstractWindowedCursor.java",
  "packageName" : "android.database",
  "className" : "AbstractWindowedCursor",
  "comment" : "\n * A base class for Cursors that store their data in {@link CursorWindow}s.\n * <p>\n * The cursor owns the cursor window it uses.  When the cursor is closed,\n * its window is also closed.  Likewise, when the window used by the cursor is\n * changed, its old window is closed.  This policy of strict ownership ensures\n * that cursor windows are not leaked.\n * </p><p>\n * Subclasses are responsible for filling the cursor window with data during\n * {@link #onMove(int, int)}, allocating a new cursor window if necessary.\n * During {@link #requery()}, the existing cursor window should be cleared and\n * filled with new data.\n * </p><p>\n * If the contents of the cursor change or become invalid, the old window must be closed\n * (because it is owned by the cursor) and set to null.\n * </p>\n ",
  "links" : [ "android.database.CursorWindow", "#requery()", "#onMove(int" ],
  "variables" : [ {
    "name" : "mWindow",
    "type" : "CursorWindow",
    "comment" : "\n     * The cursor window owned by this cursor.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public byte[] getBlob(int columnIndex)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getString(int columnIndex)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void copyStringToBuffer(int columnIndex, CharArrayBuffer buffer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public short getShort(int columnIndex)",
    "returnType" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInt(int columnIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getLong(int columnIndex)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getFloat(int columnIndex)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public double getDouble(int columnIndex)",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isNull(int columnIndex)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isBlob(int columnIndex)",
    "returnType" : "boolean",
    "comment" : "\n     * @deprecated Use {@link #getType}\n     ",
    "links" : [ "#getType" ]
  }, {
    "name" : "public boolean isString(int columnIndex)",
    "returnType" : "boolean",
    "comment" : "\n     * @deprecated Use {@link #getType}\n     ",
    "links" : [ "#getType" ]
  }, {
    "name" : "public boolean isLong(int columnIndex)",
    "returnType" : "boolean",
    "comment" : "\n     * @deprecated Use {@link #getType}\n     ",
    "links" : [ "#getType" ]
  }, {
    "name" : "public boolean isFloat(int columnIndex)",
    "returnType" : "boolean",
    "comment" : "\n     * @deprecated Use {@link #getType}\n     ",
    "links" : [ "#getType" ]
  }, {
    "name" : "public int getType(int columnIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void checkPosition()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CursorWindow getWindow()",
    "returnType" : "CursorWindow",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setWindow(CursorWindow window)",
    "returnType" : "void",
    "comment" : "\n     * Sets a new cursor window for the cursor to use.\n     * <p>\n     * The cursor takes ownership of the provided cursor window; the cursor window\n     * will be closed when the cursor is closed or when the cursor adopts a new\n     * cursor window.\n     * </p><p>\n     * If the cursor previously had a cursor window, then it is closed when the\n     * new cursor window is assigned.\n     * </p>\n     *\n     * @param window The new cursor window, typically a remote cursor window.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasWindow()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the cursor has an associated cursor window.\n     *\n     * @return True if the cursor has an associated cursor window.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void closeWindow()",
    "returnType" : "void",
    "comment" : "\n     * Closes the cursor window and sets {@link #mWindow} to null.\n     * @hide\n     ",
    "links" : [ "#mWindow" ]
  }, {
    "name" : "protected void clearOrCreateWindow(String name)",
    "returnType" : "void",
    "comment" : "\n     * If there is a window, clear it.\n     * Otherwise, creates a new window.\n     *\n     * @param name The window name.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onDeactivateOrClose()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public byte[] getBlob(int columnIndex)", "public String getString(int columnIndex)", "public void copyStringToBuffer(int columnIndex, CharArrayBuffer buffer)", "public short getShort(int columnIndex)", "public int getInt(int columnIndex)", "public long getLong(int columnIndex)", "public float getFloat(int columnIndex)", "public double getDouble(int columnIndex)", "public boolean isNull(int columnIndex)", "public boolean isBlob(int columnIndex)", "public boolean isString(int columnIndex)", "public boolean isLong(int columnIndex)", "public boolean isFloat(int columnIndex)", "public int getType(int columnIndex)", "protected void checkPosition()", "public CursorWindow getWindow()", "public void setWindow(CursorWindow window)", "public boolean hasWindow()", "protected void closeWindow()", "protected void clearOrCreateWindow(String name)", "protected void onDeactivateOrClose()" ],
  "variableNames" : [ "mWindow" ]
}