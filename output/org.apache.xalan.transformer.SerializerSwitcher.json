{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/transformer/SerializerSwitcher.java",
  "packageName" : "org.apache.xalan.transformer",
  "className" : "SerializerSwitcher",
  "comment" : "\n * This is a helper class that decides if Xalan needs to switch\n * serializers, based on the first output element.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static void switchSerializerIfHTML(TransformerImpl transformer, String ns, String localName) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Switch to HTML serializer if element is HTML\n   *\n   *\n   * @param transformer Non-null transformer instance\n   * @param ns Namespace URI of the element\n   * @param localName Local part of name of element\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "private static String getOutputPropertyNoDefault(String qnameString, Properties props) throws IllegalArgumentException",
    "returnType" : "String",
    "comment" : "\n   * Get the value of a property, without using the default properties.  This \n   * can be used to test if a property has been explicitly set by the stylesheet \n   * or user.\n   *\n   * @param name The property name, which is a fully-qualified URI.\n   *\n   * @return The value of the property, or null if not found.\n   *\n   * @throws IllegalArgumentException If the property is not supported, \n   * and is not namespaced.\n   ",
    "links" : [ ]
  }, {
    "name" : "public static Serializer switchSerializerIfHTML(String ns, String localName, Properties props, Serializer oldSerializer) throws TransformerException",
    "returnType" : "Serializer",
    "comment" : "\n   * Switch to HTML serializer if element is HTML\n   *\n   *\n   * @param ns Namespace URI of the element\n   * @param localName Local part of name of element\n   *\n   * @throws TransformerException\n   * @return new contentHandler.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void switchSerializerIfHTML(TransformerImpl transformer, String ns, String localName) throws TransformerException", "private static String getOutputPropertyNoDefault(String qnameString, Properties props) throws IllegalArgumentException", "public static Serializer switchSerializerIfHTML(String ns, String localName, Properties props, Serializer oldSerializer) throws TransformerException" ],
  "variableNames" : [ ]
}