{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/FeatureInfo.java",
  "packageName" : "android.content.pm",
  "className" : "FeatureInfo",
  "comment" : "\n * Definition of a single optional hardware or software feature of an Android\n * device.\n * <p>\n * This object is used to represent both features supported by a device and\n * features requested by an app. Apps can request that certain features be\n * available as a prerequisite to being installed through the\n * {@code uses-feature} tag in their manifests.\n * <p>\n * Starting in {@link android.os.Build.VERSION_CODES#N}, features can have a\n * version, which must always be backwards compatible. That is, a device\n * claiming to support version 3 of a specific feature must support apps\n * requesting version 1 of that feature.\n ",
  "links" : [ "android.os.Build.VERSION_CODES#N" ],
  "variables" : [ {
    "name" : "name",
    "type" : "String",
    "comment" : "\n     * The name of this feature, for example \"android.hardware.camera\".  If\n     * this is null, then this is an OpenGL ES version feature as described\n     * in {@link #reqGlEsVersion}.\n     ",
    "links" : [ "#reqGlEsVersion" ]
  }, {
    "name" : "version",
    "type" : "int",
    "comment" : "\n     * If this object represents a feature supported by a device, this is the\n     * maximum version of this feature supported by the device. The device\n     * implicitly supports all older versions of this feature.\n     * <p>\n     * If this object represents a feature requested by an app, this is the\n     * minimum version of the feature required by the app.\n     * <p>\n     * When a feature version is undefined by a device, it's assumed to be\n     * version 0.\n     ",
    "links" : [ ]
  }, {
    "name" : "GL_ES_VERSION_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Default value for {@link #reqGlEsVersion};\n     ",
    "links" : [ "#reqGlEsVersion" ]
  }, {
    "name" : "reqGlEsVersion",
    "type" : "int",
    "comment" : "\n     * The GLES version used by an application. The upper order 16 bits represent the\n     * major version and the lower order 16 bits the minor version.  Only valid\n     * if {@link #name} is null.\n     ",
    "links" : [ "#name" ]
  }, {
    "name" : "FLAG_REQUIRED",
    "type" : "int",
    "comment" : "\n     * Set on {@link #flags} if this feature has been required by the application.\n     ",
    "links" : [ "#flags" ]
  }, {
    "name" : "flags",
    "type" : "int",
    "comment" : "\n     * Additional flags.  May be zero or more of {@link #FLAG_REQUIRED}.\n     ",
    "links" : [ "#FLAG_REQUIRED" ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<FeatureInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int parcelableFlags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dumpDebug(ProtoOutputStream proto, long fieldId)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String getGlEsVersion()",
    "returnType" : "String",
    "comment" : "\n     * This method extracts the major and minor version of reqGLEsVersion attribute\n     * and returns it as a string. Say reqGlEsVersion value of 0x00010002 is returned\n     * as 1.2\n     * @return String representation of the reqGlEsVersion attribute\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int parcelableFlags)", "public void dumpDebug(ProtoOutputStream proto, long fieldId)", "public String getGlEsVersion()" ],
  "variableNames" : [ "name", "version", "GL_ES_VERSION_UNDEFINED", "reqGlEsVersion", "FLAG_REQUIRED", "flags", "CREATOR" ]
}