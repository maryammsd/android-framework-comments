{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/CharsTrieBuilder.java",
  "packageName" : "android.icu.util",
  "className" : "CharsTrieBuilder",
  "comment" : "\n * Builder class for CharsTrie.\n *\n * <p>This class is not intended for public subclassing.\n *\n * @author Markus W. Scherer\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "intUnits",
    "type" : "char[]",
    "comment" : " For writeValueAndFinal(), writeValueAndType() and writeDeltaTo().",
    "links" : [ ]
  }, {
    "name" : "chars",
    "type" : "char[]",
    "comment" : " Grows from the back: charsLength measures from the end of the buffer!",
    "links" : [ ]
  }, {
    "name" : "charsLength",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public CharsTrieBuilder add(CharSequence s, int value)",
    "returnType" : "CharsTrieBuilder",
    "comment" : "\n     * Adds a (string, value) pair.\n     * The string must be unique.\n     * The string contents will be copied; the builder does not keep\n     * a reference to the input CharSequence.\n     * @param s The input string.\n     * @param value The value associated with this char sequence.\n     * @return this\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharsTrie build(StringTrieBuilder.Option buildOption)",
    "returnType" : "CharsTrie",
    "comment" : "\n     * Builds a CharsTrie for the add()ed data.\n     * Once built, no further data can be add()ed until clear() is called.\n     *\n     * <p>A CharsTrie cannot be empty. At least one (string, value) pair\n     * must have been add()ed.\n     *\n     * <p>Multiple calls to build() or buildCharSequence() return tries or sequences\n     * which share the builder's char array, without rebuilding.\n     * After clear() has been called, a new array will be used.\n     * @param buildOption Build option, see StringTrieBuilder.Option.\n     * @return A new CharsTrie for the add()ed data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence buildCharSequence(StringTrieBuilder.Option buildOption)",
    "returnType" : "CharSequence",
    "comment" : "\n     * Builds a CharsTrie for the add()ed data and char-serializes it.\n     * Once built, no further data can be add()ed until clear() is called.\n     *\n     * <p>A CharsTrie cannot be empty. At least one (string, value) pair\n     * must have been add()ed.\n     *\n     * <p>Multiple calls to build() or buildCharSequence() return tries or sequences\n     * which share the builder's char array, without rebuilding.\n     * After clear() has been called, a new array will be used.\n     * @param buildOption Build option, see StringTrieBuilder.Option.\n     * @return A CharSequence with the char-serialized CharsTrie for the add()ed data.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void buildChars(StringTrieBuilder.Option buildOption)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharsTrieBuilder clear()",
    "returnType" : "CharsTrieBuilder",
    "comment" : "\n     * Removes all (string, value) pairs.\n     * New data can then be add()ed and a new trie can be built.\n     * @return this\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean matchNodesCanHaveValues()",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int getMaxBranchLinearSubNodeLength()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int getMinLinearMatch()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int getMaxLinearMatchLength()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private void ensureCapacity(int length)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int write(int unit)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int write(int offset, int length)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private int write(char[] s, int length)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int writeValueAndFinal(int i, boolean isFinal)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int writeValueAndType(boolean hasValue, int value, int node)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int writeDeltaTo(int jumpTarget)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public CharsTrieBuilder add(CharSequence s, int value)", "public CharsTrie build(StringTrieBuilder.Option buildOption)", "public CharSequence buildCharSequence(StringTrieBuilder.Option buildOption)", "private void buildChars(StringTrieBuilder.Option buildOption)", "public CharsTrieBuilder clear()", "protected boolean matchNodesCanHaveValues()", "protected int getMaxBranchLinearSubNodeLength()", "protected int getMinLinearMatch()", "protected int getMaxLinearMatchLength()", "private void ensureCapacity(int length)", "protected int write(int unit)", "protected int write(int offset, int length)", "private int write(char[] s, int length)", "protected int writeValueAndFinal(int i, boolean isFinal)", "protected int writeValueAndType(boolean hasValue, int value, int node)", "protected int writeDeltaTo(int jumpTarget)" ],
  "variableNames" : [ "intUnits", "chars", "charsLength" ]
}