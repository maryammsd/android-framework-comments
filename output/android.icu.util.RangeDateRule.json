{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/RangeDateRule.java",
  "packageName" : "android.icu.util",
  "className" : "RangeDateRule",
  "comment" : "\n * <b>Note:</b> The Holiday framework is a technology preview.\n * Despite its age, is still draft API, and clients should treat it as such.\n *\n * Implementation of DateRule that takes a range.\n * @hide Only a subset of ICU is exposed in Android\n * @hide draft / provisional / internal are hidden on Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ranges",
    "type" : "List<Range>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void add(DateRule rule)",
    "returnType" : "void",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void add(Date start, DateRule rule)",
    "returnType" : "void",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date firstAfter(Date start)",
    "returnType" : "Date",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date firstBetween(Date start, Date end)",
    "returnType" : "Date",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isOn(Date date)",
    "returnType" : "boolean",
    "comment" : "\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBetween(Date start, Date end)",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether this event occurs at least once between the two\n     * dates given.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private int startIndex(Date start)",
    "returnType" : "int",
    "comment" : "\n     * find the index of the last range whose start date is before \"start\"\n     * returns an index >= ranges.size() if there is none\n     ",
    "links" : [ ]
  }, {
    "name" : "private Range rangeAt(int index)",
    "returnType" : "Range",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void add(DateRule rule)", "public void add(Date start, DateRule rule)", "public Date firstAfter(Date start)", "public Date firstBetween(Date start, Date end)", "public boolean isOn(Date date)", "public boolean isBetween(Date start, Date end)", "private int startIndex(Date start)", "private Range rangeAt(int index)" ],
  "variableNames" : [ "ranges" ]
}