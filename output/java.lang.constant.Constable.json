{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/constant/Constable.java",
  "packageName" : "java.lang.constant",
  "className" : "Constable",
  "comment" : "\n * Represents a type which is <em>constable</em>.  A constable type is one whose\n * values are constants that can be represented in the constant pool of a Java\n * classfile as described in JVMS 4.4, and whose instances can describe themselves\n * nominally as a {@link ConstantDesc}.\n *\n * <p>Some constable types have a native representation in the constant pool:\n * {@link String}, {@link Integer}, {@link Long}, {@link Float},\n * {@link Double}, {@link Class}, {@link MethodType}, and {@link MethodHandle}.\n * The types {@link String}, {@link Integer}, {@link Long}, {@link Float},\n * and {@link Double} serve as their own nominal descriptors; {@link Class},\n * {@link MethodType}, and {@link MethodHandle} have corresponding nominal\n * descriptors {@link ClassDesc}, {@link MethodTypeDesc}, and {@link MethodHandleDesc}.\n *\n * <p>Other reference types can be constable if their instances can describe\n * themselves in nominal form as a {@link ConstantDesc}. Examples in the Java SE\n * Platform API are types that support Java language features such as {@link Enum},\n * and runtime support classes such as {@link VarHandle}.  These are typically\n * described with a {@link DynamicConstantDesc}, which describes dynamically\n * generated constants (JVMS 4.4.10).\n *\n * <p>The nominal form of an instance of a constable type is obtained via\n * {@link #describeConstable()}. A {@linkplain Constable} need\n * not be able to (or may choose not to) describe all its instances in the form of\n * a {@link ConstantDesc}; this method returns an {@link Optional} that can be\n * empty to indicate that a nominal descriptor could not be created for an instance.\n * (For example, {@link MethodHandle} will produce nominal descriptors for direct\n * method handles, but not necessarily those produced by method handle\n * combinators.)\n * @jvms 4.4 The Constant Pool\n * @jvms 4.4.10 The {@code CONSTANT_Dynamic_info} and {@code CONSTANT_InvokeDynamic_info} Structures\n *\n * @since 12\n ",
  "links" : [ "Enum", "java.lang.invoke.VarHandle", "java.lang.invoke.MethodHandle", "#describeConstable()", "String", "java.lang.constant.MethodTypeDesc", "Double", "Integer", "java.lang.constant.DynamicConstantDesc", "Float", "java.lang.invoke.MethodType", "java.lang.constant.ConstantDesc", "java.lang.constant.ClassDesc", "Long", "java.util.Optional", "Class", "java.lang.constant.MethodHandleDesc" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " Optional<? extends ConstantDesc> describeConstable()",
    "returnType" : "Optional<? extends ConstantDesc>",
    "comment" : "\n     * Returns an {@link Optional} containing the nominal descriptor for this\n     * instance, if one can be constructed, or an empty {@link Optional}\n     * if one cannot be constructed.\n     *\n     * @return An {@link Optional} containing the resulting nominal descriptor,\n     * or an empty {@link Optional} if one cannot be constructed.\n     ",
    "links" : [ "java.util.Optional" ]
  } ],
  "methodNames" : [ " Optional<? extends ConstantDesc> describeConstable()" ],
  "variableNames" : [ ]
}