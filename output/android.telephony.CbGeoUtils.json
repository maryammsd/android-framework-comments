{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/CbGeoUtils.java",
  "packageName" : "android.telephony",
  "className" : "CbGeoUtils",
  "comment" : "\n * This utils class is used for geo-fencing of CellBroadcast messages and is used by the cell\n * broadcast module.\n *\n * The coordinates used by this utils class are latitude and longitude, but some algorithms in this\n * class only use them as coordinates on plane, so the calculation will be inaccurate. So don't use\n * this class for anything other then geo-targeting of cellbroadcast messages.\n *\n * More information regarding cell broadcast geo-fencing logic is laid out in 3GPP TS 23.041 and\n * ATIS-0700041.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "EPS",
    "type" : "double",
    "comment" : "\n     * Tolerance for determining if the value is 0. If the absolute value of a value is less than\n     * this tolerance, it will be treated as 0.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "EARTH_RADIUS_METER",
    "type" : "int",
    "comment" : "\n     * The radius of earth.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GEO_FENCING_MAXIMUM_WAIT_TIME",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "GEOMETRY_TYPE_POLYGON",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "GEOMETRY_TYPE_CIRCLE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CIRCLE_SYMBOL",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "POLYGON_SYMBOL",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static List<Geometry> parseGeometriesFromString(@NonNull String str)",
    "returnType" : "List<Geometry>",
    "comment" : "\n     * Parse the geometries from the encoded string {@code str}. The string must follow the\n     * geometry encoding specified by {@link android.provider.Telephony.CellBroadcasts#GEOMETRIES}.\n     * @hide\n     ",
    "links" : [ "android.provider.Telephony.CellBroadcasts#GEOMETRIES" ]
  }, {
    "name" : "public static String encodeGeometriesToString(List<Geometry> geometries)",
    "returnType" : "String",
    "comment" : "\n     * Encode a list of geometry objects to string. The encoding format is specified by\n     * {@link android.provider.Telephony.CellBroadcasts#GEOMETRIES}.\n     *\n     * @param geometries the list of geometry objects need to be encoded.\n     * @return the encoded string.\n     * @hide\n     ",
    "links" : [ "android.provider.Telephony.CellBroadcasts#GEOMETRIES" ]
  }, {
    "name" : "private static String encodeGeometryToString(@NonNull Geometry geometry)",
    "returnType" : "String",
    "comment" : "\n     * Encode the geometry object to string. The encoding format is specified by\n     * {@link android.provider.Telephony.CellBroadcasts#GEOMETRIES}.\n     * @param geometry the geometry object need to be encoded.\n     * @return the encoded string.\n     * @hide\n     ",
    "links" : [ "android.provider.Telephony.CellBroadcasts#GEOMETRIES" ]
  }, {
    "name" : "public static LatLng parseLatLngFromString(@NonNull String str)",
    "returnType" : "LatLng",
    "comment" : "\n     * Parse {@link LatLng} from {@link String}. Latitude and longitude are separated by \",\".\n     * Example: \"13.56,-55.447\".\n     *\n     * @param str encoded lat/lng string.\n     * @Return {@link LatLng} object.\n     * @hide\n     ",
    "links" : [ "LatLng", "String" ]
  }, {
    "name" : "public static int sign(double value)",
    "returnType" : "int",
    "comment" : "\n     * @Return the sign of the given value {@code value} with the specified tolerance. Return 1\n     * means the sign is positive, -1 means negative, 0 means the value will be treated as 0.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static List<Geometry> parseGeometriesFromString(@NonNull String str)", "public static String encodeGeometriesToString(List<Geometry> geometries)", "private static String encodeGeometryToString(@NonNull Geometry geometry)", "public static LatLng parseLatLngFromString(@NonNull String str)", "public static int sign(double value)" ],
  "variableNames" : [ "EPS", "EARTH_RADIUS_METER", "TAG", "GEO_FENCING_MAXIMUM_WAIT_TIME", "GEOMETRY_TYPE_POLYGON", "GEOMETRY_TYPE_CIRCLE", "CIRCLE_SYMBOL", "POLYGON_SYMBOL" ]
}