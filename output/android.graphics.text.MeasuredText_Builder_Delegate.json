{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/text/MeasuredText_Builder_Delegate.java",
  "packageName" : "android.graphics.text",
  "className" : "MeasuredText_Builder_Delegate",
  "comment" : "\n * Delegate that provides implementation for native methods in\n * {@link android.graphics.text.MeasuredText}\n * <p/>\n * Through the layoutlib_create tool, selected methods of StaticLayout have been replaced\n * by calls to methods of the same name in this delegate class.\n *\n ",
  "variables" : [ {
    "name" : "sBuilderManager",
    "type" : "DelegateManager<MeasuredText_Builder_Delegate>",
    "comment" : " ---- Builder delegate manager ----",
    "links" : [ ]
  }, {
    "name" : "mRuns",
    "type" : "ArrayList<Run>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static long nInitBuilder()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nAddStyleRun(long nativeBuilderPtr, long paintPtr, int start, int end, boolean isRtl)",
    "returnType" : "void",
    "comment" : "\n     * Apply style to make native measured text.\n     *\n     * @param nativeBuilderPtr The native NativeMeasuredParagraph builder pointer.\n     * @param paintPtr The native paint pointer to be applied.\n     * @param start The start offset in the copied buffer.\n     * @param end The end offset in the copied buffer.\n     * @param isRtl True if the text is RTL.\n     ",
    "links" : [ ]
  }, {
    "name" : " static void nAddReplacementRun(long nativeBuilderPtr, long paintPtr, int start, int end, float width)",
    "returnType" : "void",
    "comment" : "\n     * Apply ReplacementRun to make native measured text.\n     *\n     * @param nativeBuilderPtr The native NativeMeasuredParagraph builder pointer.\n     * @param paintPtr The native paint pointer to be applied.\n     * @param start The start offset in the copied buffer.\n     * @param end The end offset in the copied buffer.\n     * @param width The width of the replacement.\n     ",
    "links" : [ ]
  }, {
    "name" : " static long nBuildMeasuredText(long nativeBuilderPtr, long hintMtPtr, @NonNull char[] text, boolean computeHyphenation, boolean computeLayout)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nFreeBuilder(long nativeBuilderPtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static float measureText(long nativePaint, char[] text, int index, int count, float[] widths, int bidiFlags)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "sBuilderManager", "mRuns" ],
  "methodNames" : [ " static long nInitBuilder()", " static void nAddStyleRun(long nativeBuilderPtr, long paintPtr, int start, int end, boolean isRtl)", " static void nAddReplacementRun(long nativeBuilderPtr, long paintPtr, int start, int end, float width)", " static long nBuildMeasuredText(long nativeBuilderPtr, long hintMtPtr, @NonNull char[] text, boolean computeHyphenation, boolean computeLayout)", " static void nFreeBuilder(long nativeBuilderPtr)", "private static float measureText(long nativePaint, char[] text, int index, int count, float[] widths, int bidiFlags)" ]
}