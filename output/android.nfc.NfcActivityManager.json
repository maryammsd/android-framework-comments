{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/nfc/NfcActivityManager.java",
  "packageName" : "android.nfc",
  "className" : "NfcActivityManager",
  "comment" : "\n * Manages NFC API's that are coupled to the life-cycle of an Activity.\n *\n * <p>Uses {@link Application#registerActivityLifecycleCallbacks} to hook\n * into activity life-cycle events such as onPause() and onResume().\n *\n * @hide\n ",
  "links" : [ "android.app.Application#registerActivityLifecycleCallbacks" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DBG",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAdapter",
    "type" : "NfcAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mApps",
    "type" : "List<NfcApplicationState>",
    "comment" : " Application(s) that have NFC state. Usually one",
    "links" : [ ]
  }, {
    "name" : "mActivities",
    "type" : "List<NfcActivityState>",
    "comment" : " Activities that have NFC state",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " NfcApplicationState findAppState(Application app)",
    "returnType" : "NfcApplicationState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void registerApplication(Application app)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void unregisterApplication(Application app)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized NfcActivityState findActivityState(Activity activity)",
    "returnType" : "NfcActivityState",
    "comment" : " find activity state from mActivities ",
    "links" : [ ]
  }, {
    "name" : " synchronized NfcActivityState getActivityState(Activity activity)",
    "returnType" : "NfcActivityState",
    "comment" : " find or create activity state from mActivities ",
    "links" : [ ]
  }, {
    "name" : " synchronized NfcActivityState findResumedActivityState()",
    "returnType" : "NfcActivityState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized void destroyActivityState(Activity activity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void enableReaderMode(Activity activity, ReaderCallback callback, int flags, Bundle extras)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void disableReaderMode(Activity activity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setReaderMode(Binder token, int flags, Bundle extras)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void requestNfcServiceCallback()",
    "returnType" : "void",
    "comment" : "\n     * Request or unrequest NFC service callbacks.\n     * Makes IPC call - do not hold lock.\n     ",
    "links" : [ ]
  }, {
    "name" : " void verifyNfcPermission()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onTagDiscovered(Tag tag) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onActivityCreated(Activity activity, Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : " Callback from Activity life-cycle, on main thread ",
    "links" : [ ]
  }, {
    "name" : "public void onActivityStarted(Activity activity)",
    "returnType" : "void",
    "comment" : " Callback from Activity life-cycle, on main thread ",
    "links" : [ ]
  }, {
    "name" : "public void onActivityResumed(Activity activity)",
    "returnType" : "void",
    "comment" : " Callback from Activity life-cycle, on main thread ",
    "links" : [ ]
  }, {
    "name" : "public void onActivityPaused(Activity activity)",
    "returnType" : "void",
    "comment" : " Callback from Activity life-cycle, on main thread ",
    "links" : [ ]
  }, {
    "name" : "public void onActivityStopped(Activity activity)",
    "returnType" : "void",
    "comment" : " Callback from Activity life-cycle, on main thread ",
    "links" : [ ]
  }, {
    "name" : "public void onActivitySaveInstanceState(Activity activity, Bundle outState)",
    "returnType" : "void",
    "comment" : " Callback from Activity life-cycle, on main thread ",
    "links" : [ ]
  }, {
    "name" : "public void onActivityDestroyed(Activity activity)",
    "returnType" : "void",
    "comment" : " Callback from Activity life-cycle, on main thread ",
    "links" : [ ]
  }, {
    "name" : "public void setDiscoveryTech(Activity activity, int pollTech, int listenTech)",
    "returnType" : "void",
    "comment" : " setDiscoveryTechnology() implementation ",
    "links" : [ ]
  }, {
    "name" : "public void resetDiscoveryTech(Activity activity)",
    "returnType" : "void",
    "comment" : " resetDiscoveryTechnology() implementation ",
    "links" : [ ]
  }, {
    "name" : "private void changeDiscoveryTech(Binder token, int pollTech, int listenTech)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " NfcApplicationState findAppState(Application app)", " void registerApplication(Application app)", " void unregisterApplication(Application app)", " synchronized NfcActivityState findActivityState(Activity activity)", " synchronized NfcActivityState getActivityState(Activity activity)", " synchronized NfcActivityState findResumedActivityState()", " synchronized void destroyActivityState(Activity activity)", "public void enableReaderMode(Activity activity, ReaderCallback callback, int flags, Bundle extras)", "public void disableReaderMode(Activity activity)", "public void setReaderMode(Binder token, int flags, Bundle extras)", " void requestNfcServiceCallback()", " void verifyNfcPermission()", "public void onTagDiscovered(Tag tag) throws RemoteException", "public void onActivityCreated(Activity activity, Bundle savedInstanceState)", "public void onActivityStarted(Activity activity)", "public void onActivityResumed(Activity activity)", "public void onActivityPaused(Activity activity)", "public void onActivityStopped(Activity activity)", "public void onActivitySaveInstanceState(Activity activity, Bundle outState)", "public void onActivityDestroyed(Activity activity)", "public void setDiscoveryTech(Activity activity, int pollTech, int listenTech)", "public void resetDiscoveryTech(Activity activity)", "private void changeDiscoveryTech(Binder token, int pollTech, int listenTech)" ],
  "variableNames" : [ "TAG", "DBG", "mAdapter", "mApps", "mActivities" ]
}