{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/MatchOps.java",
  "packageName" : "java.util.stream",
  "className" : "MatchOp",
  "comment" : "\n     * A short-circuiting {@code TerminalOp} that evaluates a predicate on the\n     * elements of a stream and determines whether all, any or none of those\n     * elements match the predicate.\n     *\n     * @param <T> the output type of the stream pipeline\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "inputShape",
    "type" : "StreamShape",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "matchKind",
    "type" : "MatchKind",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sinkSupplier",
    "type" : "Supplier<BooleanTerminalSink<T>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getOpFlags()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StreamShape inputShape()",
    "returnType" : "StreamShape",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Boolean evaluateSequential(PipelineHelper<T> helper, Spliterator<S> spliterator)",
    "returnType" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Boolean evaluateParallel(PipelineHelper<T> helper, Spliterator<S> spliterator)",
    "returnType" : "Boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getOpFlags()", "public StreamShape inputShape()", "public Boolean evaluateSequential(PipelineHelper<T> helper, Spliterator<S> spliterator)", "public Boolean evaluateParallel(PipelineHelper<T> helper, Spliterator<S> spliterator)" ],
  "variableNames" : [ "inputShape", "matchKind", "sinkSupplier" ]
}