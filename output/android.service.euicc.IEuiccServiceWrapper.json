{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/euicc/EuiccService.java",
  "packageName" : "android.service.euicc",
  "className" : "IEuiccServiceWrapper",
  "comment" : "\n     * Wrapper around IEuiccService that forwards calls to implementations of {@link EuiccService}.\n     ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void downloadSubscription(int slotId, DownloadableSubscription subscription, boolean switchAfterDownload, boolean forceDeactivateSim, Bundle resolvedBundle, IDownloadSubscriptionCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getEid(int slotId, IGetEidCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startOtaIfNecessary(int slotId, IOtaStatusChangedCallback statusChangedCallback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getOtaStatus(int slotId, IGetOtaStatusCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getDownloadableSubscriptionMetadata(int slotId, DownloadableSubscription subscription, boolean forceDeactivateSim, IGetDownloadableSubscriptionMetadataCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getDefaultDownloadableSubscriptionList(int slotId, boolean forceDeactivateSim, IGetDefaultDownloadableSubscriptionListCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getEuiccProfileInfoList(int slotId, IGetEuiccProfileInfoListCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getEuiccInfo(int slotId, IGetEuiccInfoCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void deleteSubscription(int slotId, String iccid, IDeleteSubscriptionCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void switchToSubscription(int slotId, String iccid, boolean forceDeactivateSim, ISwitchToSubscriptionCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateSubscriptionNickname(int slotId, String iccid, String nickname, IUpdateSubscriptionNicknameCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void eraseSubscriptions(int slotId, IEraseSubscriptionsCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void eraseSubscriptionsWithOptions(int slotIndex, @ResetOption int options, IEraseSubscriptionsCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void retainSubscriptionsForFactoryReset(int slotId, IRetainSubscriptionsForFactoryResetCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(IEuiccServiceDumpResultCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public void downloadSubscription(int slotId, DownloadableSubscription subscription, boolean switchAfterDownload, boolean forceDeactivateSim, Bundle resolvedBundle, IDownloadSubscriptionCallback callback)", "public void getEid(int slotId, IGetEidCallback callback)", "public void startOtaIfNecessary(int slotId, IOtaStatusChangedCallback statusChangedCallback)", "public void getOtaStatus(int slotId, IGetOtaStatusCallback callback)", "public void getDownloadableSubscriptionMetadata(int slotId, DownloadableSubscription subscription, boolean forceDeactivateSim, IGetDownloadableSubscriptionMetadataCallback callback)", "public void getDefaultDownloadableSubscriptionList(int slotId, boolean forceDeactivateSim, IGetDefaultDownloadableSubscriptionListCallback callback)", "public void getEuiccProfileInfoList(int slotId, IGetEuiccProfileInfoListCallback callback)", "public void getEuiccInfo(int slotId, IGetEuiccInfoCallback callback)", "public void deleteSubscription(int slotId, String iccid, IDeleteSubscriptionCallback callback)", "public void switchToSubscription(int slotId, String iccid, boolean forceDeactivateSim, ISwitchToSubscriptionCallback callback)", "public void updateSubscriptionNickname(int slotId, String iccid, String nickname, IUpdateSubscriptionNicknameCallback callback)", "public void eraseSubscriptions(int slotId, IEraseSubscriptionsCallback callback)", "public void eraseSubscriptionsWithOptions(int slotIndex, @ResetOption int options, IEraseSubscriptionsCallback callback)", "public void retainSubscriptionsForFactoryReset(int slotId, IRetainSubscriptionsForFactoryResetCallback callback)", "public void dump(IEuiccServiceDumpResultCallback callback) throws RemoteException" ]
}