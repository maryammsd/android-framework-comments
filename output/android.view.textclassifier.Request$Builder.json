{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/textclassifier/TextSelection.java",
  "packageName" : "android.view.textclassifier",
  "className" : "Builder",
  "comment" : "\n         * A builder for building TextSelection requests.\n         ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mText",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEndIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultLocales",
    "type" : "LocaleList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDarkLaunchAllowed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIncludeTextClassification",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setDefaultLocales(@Nullable LocaleList defaultLocales)",
    "returnType" : "Builder",
    "comment" : "\n             * @param defaultLocales ordered list of locale preferences that may be used to\n             *      disambiguate the provided text. If no locale preferences exist, set this to null\n             *      or an empty locale list.\n             *\n             * @return this builder.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDarkLaunchAllowed(boolean allowed)",
    "returnType" : "Builder",
    "comment" : "\n             * @param allowed whether or not the TextClassifier should return selection suggestions\n             *      when \"dark launched\". When a TextClassifier is dark launched, it can suggest\n             *      selection changes that should not be used to actually change the user's\n             *      selection. Instead, the suggested selection is logged, compared with the user's\n             *      selection interaction, and used to generate quality metrics for the\n             *      TextClassifier. Not parceled.\n             *\n             * @return this builder.\n             * @hide\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setIncludeTextClassification(boolean includeTextClassification)",
    "returnType" : "Builder",
    "comment" : "\n             * @param includeTextClassification If true, suggests the TextClassifier to classify the\n             *     text in the suggested selection span and include a TextClassification object in\n             *     the result. The TextClassifier may not support this and in which case,\n             *     {@link TextSelection#getTextClassification()} returns {@code null}.\n             *\n             * @return this builder.\n             * @see TextSelection#getTextClassification()\n             ",
    "links" : [ "android.view.textclassifier.TextSelection#getTextClassification()" ]
  }, {
    "name" : "public Builder setExtras(@Nullable Bundle extras)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets the extended data.\n             *\n             * @return this builder\n             ",
    "links" : [ ]
  }, {
    "name" : "public Request build()",
    "returnType" : "Request",
    "comment" : "\n             * Builds and returns the request object.\n             ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setDefaultLocales(@Nullable LocaleList defaultLocales)", "public Builder setDarkLaunchAllowed(boolean allowed)", "public Builder setIncludeTextClassification(boolean includeTextClassification)", "public Builder setExtras(@Nullable Bundle extras)", "public Request build()" ],
  "variableNames" : [ "mText", "mStartIndex", "mEndIndex", "mDefaultLocales", "mDarkLaunchAllowed", "mIncludeTextClassification", "mExtras" ]
}