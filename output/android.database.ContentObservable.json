{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/database/ContentObservable.java",
  "packageName" : "android.database",
  "className" : "ContentObservable",
  "comment" : "\n * A specialization of {@link Observable} for {@link ContentObserver}\n * that provides methods for sending notifications to a list of\n * {@link ContentObserver} objects.\n ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void registerObserver(ContentObserver observer)",
    "returnType" : "void",
    "comment" : " potentially break binary compatibility with existing applications.",
    "links" : [ ]
  }, {
    "name" : "public void dispatchChange(boolean selfChange)",
    "returnType" : "void",
    "comment" : "\n     * Invokes {@link ContentObserver#dispatchChange(boolean)} on each observer.\n     * <p>\n     * If <code>selfChange</code> is true, only delivers the notification\n     * to the observer if it has indicated that it wants to receive self-change\n     * notifications by implementing {@link ContentObserver#deliverSelfNotifications}\n     * to return true.\n     * </p>\n     *\n     * @param selfChange True if this is a self-change notification.\n     *\n     * @deprecated Use {@link #dispatchChange(boolean, Uri)} instead.\n     ",
    "links" : [ "#dispatchChange(boolean", "android.database.ContentObserver#dispatchChange(boolean)", "android.database.ContentObserver#deliverSelfNotifications" ]
  }, {
    "name" : "public void dispatchChange(boolean selfChange, Uri uri)",
    "returnType" : "void",
    "comment" : "\n     * Invokes {@link ContentObserver#dispatchChange(boolean, Uri)} on each observer.\n     * Includes the changed content Uri when available.\n     * <p>\n     * If <code>selfChange</code> is true, only delivers the notification\n     * to the observer if it has indicated that it wants to receive self-change\n     * notifications by implementing {@link ContentObserver#deliverSelfNotifications}\n     * to return true.\n     * </p>\n     *\n     * @param selfChange True if this is a self-change notification.\n     * @param uri The Uri of the changed content, or null if unknown.\n     ",
    "links" : [ "android.database.ContentObserver#dispatchChange(boolean", "android.database.ContentObserver#deliverSelfNotifications" ]
  }, {
    "name" : "public void notifyChange(boolean selfChange)",
    "returnType" : "void",
    "comment" : "\n     * Invokes {@link ContentObserver#onChange} on each observer.\n     *\n     * @param selfChange True if this is a self-change notification.\n     *\n     * @deprecated Use {@link #dispatchChange} instead.\n     ",
    "links" : [ "#dispatchChange", "android.database.ContentObserver#onChange" ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public void registerObserver(ContentObserver observer)", "public void dispatchChange(boolean selfChange)", "public void dispatchChange(boolean selfChange, Uri uri)", "public void notifyChange(boolean selfChange)" ]
}