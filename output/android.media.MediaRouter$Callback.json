{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaRouter.java",
  "packageName" : "android.media",
  "className" : "Callback",
  "comment" : "\n     * Interface for receiving events about media routing changes.\n     * All methods of this interface will be called from the application's main thread.\n     * <p>\n     * A Callback will only receive events relevant to routes that the callback\n     * was registered for unless the {@link MediaRouter#CALLBACK_FLAG_UNFILTERED_EVENTS}\n     * flag was specified in {@link MediaRouter#addCallback(int, Callback, int)}.\n     * </p>\n     *\n     * @see MediaRouter#addCallback(int, Callback, int)\n     * @see MediaRouter#removeCallback(Callback)\n     ",
  "links" : [ "android.media.MediaRouter#CALLBACK_FLAG_UNFILTERED_EVENTS", "android.media.MediaRouter#addCallback(int" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void onRouteSelected(MediaRouter router, int type, RouteInfo info)",
    "returnType" : "void",
    "comment" : "\n         * Called when the supplied route becomes selected as the active route\n         * for the given route type.\n         *\n         * @param router the MediaRouter reporting the event\n         * @param type Type flag set indicating the routes that have been selected\n         * @param info Route that has been selected for the given route types\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onRouteUnselected(MediaRouter router, int type, RouteInfo info)",
    "returnType" : "void",
    "comment" : "\n         * Called when the supplied route becomes unselected as the active route\n         * for the given route type.\n         *\n         * @param router the MediaRouter reporting the event\n         * @param type Type flag set indicating the routes that have been unselected\n         * @param info Route that has been unselected for the given route types\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onRouteAdded(MediaRouter router, RouteInfo info)",
    "returnType" : "void",
    "comment" : "\n         * Called when a route for the specified type was added.\n         *\n         * @param router the MediaRouter reporting the event\n         * @param info Route that has become available for use\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onRouteRemoved(MediaRouter router, RouteInfo info)",
    "returnType" : "void",
    "comment" : "\n         * Called when a route for the specified type was removed.\n         *\n         * @param router the MediaRouter reporting the event\n         * @param info Route that has been removed from availability\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onRouteChanged(MediaRouter router, RouteInfo info)",
    "returnType" : "void",
    "comment" : "\n         * Called when an aspect of the indicated route has changed.\n         *\n         * <p>This will not indicate that the types supported by this route have\n         * changed, only that cosmetic info such as name or status have been updated.</p>\n         *\n         * @param router the MediaRouter reporting the event\n         * @param info The route that was changed\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onRouteGrouped(MediaRouter router, RouteInfo info, RouteGroup group, int index)",
    "returnType" : "void",
    "comment" : "\n         * Called when a route is added to a group.\n         *\n         * @param router the MediaRouter reporting the event\n         * @param info The route that was added\n         * @param group The group the route was added to\n         * @param index The route index within group that info was added at\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onRouteUngrouped(MediaRouter router, RouteInfo info, RouteGroup group)",
    "returnType" : "void",
    "comment" : "\n         * Called when a route is removed from a group.\n         *\n         * @param router the MediaRouter reporting the event\n         * @param info The route that was removed\n         * @param group The group the route was removed from\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onRouteVolumeChanged(MediaRouter router, RouteInfo info)",
    "returnType" : "void",
    "comment" : "\n         * Called when a route's volume changes.\n         *\n         * @param router the MediaRouter reporting the event\n         * @param info The route with altered volume\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onRoutePresentationDisplayChanged(MediaRouter router, RouteInfo info)",
    "returnType" : "void",
    "comment" : "\n         * Called when a route's presentation display changes.\n         * <p>\n         * This method is called whenever the route's presentation display becomes\n         * available, is removes or has changes to some of its properties (such as its size).\n         * </p>\n         *\n         * @param router the MediaRouter reporting the event\n         * @param info The route whose presentation display changed\n         *\n         * @see RouteInfo#getPresentationDisplay()\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onRouteSelected(MediaRouter router, int type, RouteInfo info)", "public abstract void onRouteUnselected(MediaRouter router, int type, RouteInfo info)", "public abstract void onRouteAdded(MediaRouter router, RouteInfo info)", "public abstract void onRouteRemoved(MediaRouter router, RouteInfo info)", "public abstract void onRouteChanged(MediaRouter router, RouteInfo info)", "public abstract void onRouteGrouped(MediaRouter router, RouteInfo info, RouteGroup group, int index)", "public abstract void onRouteUngrouped(MediaRouter router, RouteInfo info, RouteGroup group)", "public abstract void onRouteVolumeChanged(MediaRouter router, RouteInfo info)", "public void onRoutePresentationDisplayChanged(MediaRouter router, RouteInfo info)" ],
  "variableNames" : [ ]
}