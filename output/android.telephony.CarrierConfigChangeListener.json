{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/CarrierConfigManager.java",
  "packageName" : "android.telephony",
  "className" : "CarrierConfigChangeListener",
  "comment" : "\n     * Listener interface to get a notification when the carrier configurations have changed.\n     *\n     * Use this listener to receive timely updates when the carrier configuration changes. System\n     * components should prefer this listener over {@link #ACTION_CARRIER_CONFIG_CHANGED}\n     * whenever possible.\n     *\n     * To register the listener, call\n     * {@link #registerCarrierConfigChangeListener(Executor, CarrierConfigChangeListener)}.\n     * To unregister, call\n     * {@link #unregisterCarrierConfigChangeListener(CarrierConfigChangeListener)}.\n     *\n     * Note that on registration, registrants will NOT receive a notification on last carrier config\n     * change. Only carrier configs change AFTER the registration will be sent to registrants. And\n     * unlike {@link #ACTION_CARRIER_CONFIG_CHANGED}, notification wouldn't send when the device is\n     * unlocked. Registrants only receive the notification when there has been real carrier config\n     * changes.\n     *\n     * @see #registerCarrierConfigChangeListener(Executor, CarrierConfigChangeListener)\n     * @see #unregisterCarrierConfigChangeListener(CarrierConfigChangeListener)\n     * @see #ACTION_CARRIER_CONFIG_CHANGED\n     * @see #getConfig(String...)\n     * @see #getConfigForSubId(int, String...)\n     ",
  "links" : [ "#unregisterCarrierConfigChangeListener(CarrierConfigChangeListener)", "#registerCarrierConfigChangeListener(Executor", "#ACTION_CARRIER_CONFIG_CHANGED" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onCarrierConfigChanged(int logicalSlotIndex, int subscriptionId, int carrierId, int specificCarrierId)",
    "returnType" : "void",
    "comment" : "\n         * Called when carrier configurations have changed.\n         *\n         * @param logicalSlotIndex  The logical SIM slot index on which to monitor and get\n         *                          notification. It is guaranteed to be valid.\n         * @param subscriptionId    The subscription on the SIM slot. May be\n         *                          {@link SubscriptionManager#INVALID_SUBSCRIPTION_ID}.\n         * @param carrierId         The optional carrier Id, may be\n         *                          {@link TelephonyManager#UNKNOWN_CARRIER_ID}.\n         *                          See {@link TelephonyManager#getSimCarrierId()}.\n         * @param specificCarrierId The optional fine-grained carrierId, may be {@link\n         *                          TelephonyManager#UNKNOWN_CARRIER_ID}. A specific carrierId may\n         *                          be different from the carrierId above in a MVNO scenario. See\n         *                          detail in {@link TelephonyManager#getSimSpecificCarrierId()}.\n         ",
    "links" : [ "android.telephony.TelephonyManager#UNKNOWN_CARRIER_ID", "android.telephony.TelephonyManager#getSimCarrierId()", "android.telephony.SubscriptionManager#INVALID_SUBSCRIPTION_ID", "android.telephony.TelephonyManager#getSimSpecificCarrierId()" ]
  } ],
  "methodNames" : [ " void onCarrierConfigChanged(int logicalSlotIndex, int subscriptionId, int carrierId, int specificCarrierId)" ],
  "variableNames" : [ ]
}