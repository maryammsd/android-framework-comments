{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/Session2Command.java",
  "packageName" : "android.media",
  "className" : "Session2Command",
  "comment" : "\n * This API is not generally intended for third party application developers.\n * Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n * <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n * Library</a> for consistent behavior across all devices.\n * <p>\n * Define a command that a {@link MediaController2} can send to a {@link MediaSession2}.\n * <p>\n * If {@link #getCommandCode()} isn't {@link #COMMAND_CODE_CUSTOM}), it's predefined command.\n * If {@link #getCommandCode()} is {@link #COMMAND_CODE_CUSTOM}), it's custom command and\n * {@link #getCustomAction()} shouldn't be {@code null}.\n * <p>\n * Refer to the <a href=\"{@docRoot}reference/androidx/media2/session/SessionCommand.html\">\n * AndroidX SessionCommand</a> class for the list of valid commands.\n ",
  "links" : [ "android.media.MediaController2", "#getCustomAction()", "#getCommandCode()", "#COMMAND_CODE_CUSTOM", "android.media.MediaSession2" ],
  "variables" : [ {
    "name" : "COMMAND_CODE_CUSTOM",
    "type" : "int",
    "comment" : "\n     * Command code for the custom command which can be defined by string action in the\n     * {@link Session2Command}.\n     ",
    "links" : [ "android.media.Session2Command" ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<Session2Command>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCommandCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomAction",
    "type" : "String",
    "comment" : " Nonnull if it's custom command",
    "links" : [ ]
  }, {
    "name" : "mCustomExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getCommandCode()",
    "returnType" : "int",
    "comment" : "\n     * Gets the command code of a predefined command.\n     * This will return {@link #COMMAND_CODE_CUSTOM} for a custom command.\n     ",
    "links" : [ "#COMMAND_CODE_CUSTOM" ]
  }, {
    "name" : "public String getCustomAction()",
    "returnType" : "String",
    "comment" : "\n     * Gets the action of a custom command.\n     * This will return {@code null} for a predefined command.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getCustomExtras()",
    "returnType" : "Bundle",
    "comment" : "\n     * Gets the extra bundle of a custom command.\n     * This will return {@code null} for a predefined command.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getCommandCode()", "public String getCustomAction()", "public Bundle getCustomExtras()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(@Nullable Object obj)", "public int hashCode()" ],
  "variableNames" : [ "COMMAND_CODE_CUSTOM", "CREATOR", "mCommandCode", "mCustomAction", "mCustomExtras" ]
}