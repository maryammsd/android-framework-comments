{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothVolumeControl.java",
  "packageName" : "android.bluetooth",
  "className" : "Callback",
  "comment" : "\n     * This class provides a callback that is invoked when volume offset value changes on the remote\n     * device.\n     *\n     * <p>In order to balance volume on the group of Le Audio devices, Volume Offset Control Service\n     * (VOCS) shall be used. User can verify if the remote device supports VOCS by calling {@link\n     * #isVolumeOffsetAvailable(device)}.\n     *\n     * @hide\n     ",
  "links" : [ "#isVolumeOffsetAvailable(device)" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onVolumeOffsetChanged(@NonNull BluetoothDevice device, @IntRange(from = -255, to = 255) int volumeOffset)",
    "returnType" : "void",
    "comment" : "\n         * Callback invoked when callback is registered and when volume offset changes on the remote\n         * device. Change can be triggered autonomously by the remote device or after volume offset\n         * change on the user request done by calling {@link #setVolumeOffset(device, volumeOffset)}\n         *\n         * @param device remote device whose volume offset changed\n         * @param volumeOffset latest volume offset for this device\n         * @deprecated Use new callback which give information about a VOCS instance ID\n         * @hide\n         ",
    "links" : [ "#setVolumeOffset(device" ]
  }, {
    "name" : " void onVolumeOffsetChanged(@NonNull BluetoothDevice device, @IntRange(from = 1, to = 255) int instanceId, @IntRange(from = -255, to = 255) int volumeOffset)",
    "returnType" : "void",
    "comment" : "\n         * Callback invoked when callback is registered and when volume offset changes on the remote\n         * device. Change can be triggered autonomously by the remote device or after volume offset\n         * change on the user request done by calling {@link #setVolumeOffset(device, instanceId,\n         * volumeOffset)}\n         *\n         * @param device remote device whose volume offset changed\n         * @param instanceId identifier of VOCS instance on the remote device\n         * @param volumeOffset latest volume offset for this VOCS instance\n         * @hide\n         ",
    "links" : [ "#setVolumeOffset(device" ]
  }, {
    "name" : " void onVolumeOffsetAudioLocationChanged(@NonNull BluetoothDevice device, @IntRange(from = 1, to = 255) int instanceId, @IntRange(from = -255, to = 255) int audioLocation)",
    "returnType" : "void",
    "comment" : "\n         * Callback invoked when callback is registered and when audio location changes on the\n         * remote device. Change can be triggered autonomously by the remote device.\n         *\n         * @param device remote device whose audio location changed\n         * @param instanceId identifier of VOCS instance on the remote device\n         * @param audioLocation latest audio location for this VOCS instance\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : " void onVolumeOffsetAudioDescriptionChanged(@NonNull BluetoothDevice device, @IntRange(from = 1, to = 255) int instanceId, @NonNull String audioDescription)",
    "returnType" : "void",
    "comment" : "\n         * Callback invoked when callback is registered and when audio description changes on the\n         * remote device. Change can be triggered autonomously by the remote device.\n         *\n         * @param device remote device whose audio description changed\n         * @param instanceId identifier of VOCS instance on the remote device\n         * @param audioDescription latest audio description for this VOCS instance\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDeviceVolumeChanged(@NonNull BluetoothDevice device, @IntRange(from = 0, to = 255) int volume)",
    "returnType" : "void",
    "comment" : "\n         * Callback for le audio connected device volume level change\n         *\n         * <p>The valid volume range is [0, 255], as defined in 2.3.1.1 Volume_Setting field of\n         * Volume Control Service, Version 1.0.\n         *\n         * @param device remote device whose volume changed\n         * @param volume level\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onVolumeOffsetChanged(@NonNull BluetoothDevice device, @IntRange(from = -255, to = 255) int volumeOffset)", " void onVolumeOffsetChanged(@NonNull BluetoothDevice device, @IntRange(from = 1, to = 255) int instanceId, @IntRange(from = -255, to = 255) int volumeOffset)", " void onVolumeOffsetAudioLocationChanged(@NonNull BluetoothDevice device, @IntRange(from = 1, to = 255) int instanceId, @IntRange(from = -255, to = 255) int audioLocation)", " void onVolumeOffsetAudioDescriptionChanged(@NonNull BluetoothDevice device, @IntRange(from = 1, to = 255) int instanceId, @NonNull String audioDescription)", " void onDeviceVolumeChanged(@NonNull BluetoothDevice device, @IntRange(from = 0, to = 255) int volume)" ],
  "variableNames" : [ ]
}