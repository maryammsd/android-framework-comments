{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/vibrator/IVibrator.java",
  "packageName" : "android.hardware.vibrator",
  "className" : "Stub",
  "comment" : " Local-side IPC implementation stub class. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TRANSACTION_getCapabilities",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_off",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_on",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_perform",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getSupportedEffects",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_setAmplitude",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_setExternalControl",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getCompositionDelayMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getCompositionSizeMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getSupportedPrimitives",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getPrimitiveDuration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_compose",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getSupportedAlwaysOnEffects",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_alwaysOnEnable",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_alwaysOnDisable",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getResonantFrequency",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getQFactor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getFrequencyResolution",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getFrequencyMinimum",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getBandwidthAmplitudeMap",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getPwlePrimitiveDurationMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getPwleCompositionSizeMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getSupportedBraking",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_composePwle",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getInterfaceVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_getInterfaceHash",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static android.hardware.vibrator.IVibrator asInterface(android.os.IBinder obj)",
    "returnType" : "android.hardware.vibrator.IVibrator",
    "comment" : "\n     * Cast an IBinder object into an android.hardware.vibrator.IVibrator interface,\n     * generating a proxy if needed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public android.os.IBinder asBinder()",
    "returnType" : "android.os.IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTransact(int code, android.os.Parcel data, android.os.Parcel reply, int flags) throws android.os.RemoteException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static android.hardware.vibrator.IVibrator asInterface(android.os.IBinder obj)", "public android.os.IBinder asBinder()", "public boolean onTransact(int code, android.os.Parcel data, android.os.Parcel reply, int flags) throws android.os.RemoteException" ],
  "variableNames" : [ "TRANSACTION_getCapabilities", "TRANSACTION_off", "TRANSACTION_on", "TRANSACTION_perform", "TRANSACTION_getSupportedEffects", "TRANSACTION_setAmplitude", "TRANSACTION_setExternalControl", "TRANSACTION_getCompositionDelayMax", "TRANSACTION_getCompositionSizeMax", "TRANSACTION_getSupportedPrimitives", "TRANSACTION_getPrimitiveDuration", "TRANSACTION_compose", "TRANSACTION_getSupportedAlwaysOnEffects", "TRANSACTION_alwaysOnEnable", "TRANSACTION_alwaysOnDisable", "TRANSACTION_getResonantFrequency", "TRANSACTION_getQFactor", "TRANSACTION_getFrequencyResolution", "TRANSACTION_getFrequencyMinimum", "TRANSACTION_getBandwidthAmplitudeMap", "TRANSACTION_getPwlePrimitiveDurationMax", "TRANSACTION_getPwleCompositionSizeMax", "TRANSACTION_getSupportedBraking", "TRANSACTION_composePwle", "TRANSACTION_getInterfaceVersion", "TRANSACTION_getInterfaceHash" ]
}