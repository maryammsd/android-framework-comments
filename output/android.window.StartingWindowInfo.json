{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/StartingWindowInfo.java",
  "packageName" : "android.window",
  "className" : "StartingWindowInfo",
  "comment" : "\n * Information you can retrieve about a starting window of a particular task that is currently\n * start in the system.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STARTING_WINDOW_TYPE_NONE",
    "type" : "int",
    "comment" : "\n     * Prefer nothing or not care the type of starting window.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STARTING_WINDOW_TYPE_SPLASH_SCREEN",
    "type" : "int",
    "comment" : "\n     * Prefer splash screen starting window.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STARTING_WINDOW_TYPE_SNAPSHOT",
    "type" : "int",
    "comment" : "\n     * Prefer snapshot starting window.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STARTING_WINDOW_TYPE_SOLID_COLOR_SPLASH_SCREEN",
    "type" : "int",
    "comment" : "\n     * Prefer solid color splash screen starting window.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STARTING_WINDOW_TYPE_LEGACY_SPLASH_SCREEN",
    "type" : "int",
    "comment" : " @hide *",
    "links" : [ ]
  }, {
    "name" : "STARTING_WINDOW_TYPE_WINDOWLESS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "taskInfo",
    "type" : "ActivityManager.RunningTaskInfo",
    "comment" : "\n     * The {@link TaskInfo} from this task.\n     * <p>Note that the configuration of this taskInfo could be from the top activity of its task.\n     * Because only activity contains persisted configuration (e.g. night mode, language). Besides,\n     * it can also be used for activity level snapshot.\n     ",
    "links" : [ "android.app.TaskInfo" ]
  }, {
    "name" : "taskBounds",
    "type" : "Rect",
    "comment" : " The bounds of the target task. ",
    "links" : [ ]
  }, {
    "name" : "targetActivityInfo",
    "type" : "ActivityInfo",
    "comment" : "\n     * The {@link ActivityInfo} of the target activity which to create the starting window.\n     * It can be null if the info is the same as the top in task info.\n     * @hide\n     ",
    "links" : [ "android.content.pm.ActivityInfo" ]
  }, {
    "name" : "topOpaqueWindowInsetsState",
    "type" : "InsetsState",
    "comment" : "\n     * InsetsState of TopFullscreenOpaqueWindow\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "topOpaqueWindowLayoutParams",
    "type" : "WindowManager.LayoutParams",
    "comment" : "\n     * LayoutParams of TopFullscreenOpaqueWindow\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mainWindowLayoutParams",
    "type" : "WindowManager.LayoutParams",
    "comment" : "\n     * LayoutParams of MainWindow\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_NEW_TASK",
    "type" : "int",
    "comment" : "\n     * The parameters of the starting window...\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_TASK_SWITCH",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_PROCESS_RUNNING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_ALLOW_TASK_SNAPSHOT",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_ACTIVITY_CREATED",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_USE_SOLID_COLOR_SPLASH_SCREEN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_ACTIVITY_DRAWN",
    "type" : "int",
    "comment" : "\n     * The parameter which indicates if the activity has finished drawing.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_ALLOW_HANDLE_SOLID_COLOR_SCREEN",
    "type" : "int",
    "comment" : "\n     * Application will receive the\n     * {@link\n     * android.window.SplashScreen.OnExitAnimationListener#onSplashScreenExit(SplashScreenView)}\n     * callback, even when the splash screen only shows a solid color.\n     *\n     * @hide\n     ",
    "links" : [ "android.window.SplashScreen.OnExitAnimationListener#onSplashScreenExit(SplashScreenView)" ]
  }, {
    "name" : "TYPE_PARAMETER_WINDOWLESS",
    "type" : "int",
    "comment" : "\n     * Windowless surface\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_APP_PREFERS_ICON",
    "type" : "int",
    "comment" : "\n     * Application has set Window_windowSplashScreenBehavior to\n     * SPLASH_SCREEN_BEHAVIOR_ICON_PREFERRED.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PARAMETER_LEGACY_SPLASH_SCREEN",
    "type" : "int",
    "comment" : "\n     * Application is allowed to use the legacy splash screen\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "startingWindowTypeParameter",
    "type" : "int",
    "comment" : "\n     * The parameters which effect the starting window type.\n     * @see android.window.StartingWindowInfo.StartingTypeParams\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "splashScreenThemeResId",
    "type" : "int",
    "comment" : "\n     * Specifies a theme for the splash screen.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "isKeyguardOccluded",
    "type" : "boolean",
    "comment" : "\n     * Is keyguard occluded on default display.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "taskSnapshot",
    "type" : "TaskSnapshot",
    "comment" : "\n     * TaskSnapshot.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "requestedVisibleTypes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "appToken",
    "type" : "IBinder",
    "comment" : "\n     * App token where the starting window should add to.\n     ",
    "links" : [ ]
  }, {
    "name" : "windowlessStartingSurfaceCallback",
    "type" : "IWindowlessStartingSurfaceCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "rootSurface",
    "type" : "SurfaceControl",
    "comment" : "\n     * The root surface where windowless surface should attach on.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<StartingWindowInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void notifyAddComplete(SurfaceControl addedSurface)",
    "returnType" : "void",
    "comment" : "\n     * Notify windowless surface is created.\n     * @param addedSurface Created surface.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean allowHandleSolidColorSplashScreen()",
    "returnType" : "boolean",
    "comment" : "\n     * Return whether the application allow to handle the solid color style splash screen.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void readFromParcel(@NonNull Parcel source)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void notifyAddComplete(SurfaceControl addedSurface)", "public boolean allowHandleSolidColorSplashScreen()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", " void readFromParcel(@NonNull Parcel source)", "public String toString()" ],
  "variableNames" : [ "STARTING_WINDOW_TYPE_NONE", "STARTING_WINDOW_TYPE_SPLASH_SCREEN", "STARTING_WINDOW_TYPE_SNAPSHOT", "STARTING_WINDOW_TYPE_SOLID_COLOR_SPLASH_SCREEN", "STARTING_WINDOW_TYPE_LEGACY_SPLASH_SCREEN", "STARTING_WINDOW_TYPE_WINDOWLESS", "taskInfo", "taskBounds", "targetActivityInfo", "topOpaqueWindowInsetsState", "topOpaqueWindowLayoutParams", "mainWindowLayoutParams", "TYPE_PARAMETER_NEW_TASK", "TYPE_PARAMETER_TASK_SWITCH", "TYPE_PARAMETER_PROCESS_RUNNING", "TYPE_PARAMETER_ALLOW_TASK_SNAPSHOT", "TYPE_PARAMETER_ACTIVITY_CREATED", "TYPE_PARAMETER_USE_SOLID_COLOR_SPLASH_SCREEN", "TYPE_PARAMETER_ACTIVITY_DRAWN", "TYPE_PARAMETER_ALLOW_HANDLE_SOLID_COLOR_SCREEN", "TYPE_PARAMETER_WINDOWLESS", "TYPE_PARAMETER_APP_PREFERS_ICON", "TYPE_PARAMETER_LEGACY_SPLASH_SCREEN", "startingWindowTypeParameter", "splashScreenThemeResId", "isKeyguardOccluded", "taskSnapshot", "requestedVisibleTypes", "appToken", "windowlessStartingSurfaceCallback", "rootSurface", "CREATOR" ]
}