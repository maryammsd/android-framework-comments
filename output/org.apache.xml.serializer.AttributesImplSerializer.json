{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/serializer/AttributesImplSerializer.java",
  "packageName" : "org.apache.xml.serializer",
  "className" : "AttributesImplSerializer",
  "comment" : "\n * This class extends org.xml.sax.helpers.AttributesImpl which implements org.\n * xml.sax.Attributes. But for optimization this class adds a Hashtable for\n * faster lookup of an index by qName, which is commonly done in the stream\n * serializer.\n * \n * @see org.xml.sax.Attributes\n * \n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_indexFromQName",
    "type" : "Hashtable",
    "comment" : "\n     * Hash table of qName/index values to quickly lookup the index\n     * of an attributes qName.  qNames are in uppercase in the hash table\n     * to make the search case insensitive.\n     * \n     * The keys to the hashtable to find the index are either\n     * \"prefix:localName\"  or \"{uri}localName\".\n     ",
    "links" : [ ]
  }, {
    "name" : "m_buff",
    "type" : "StringBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX",
    "type" : "int",
    "comment" : "\n     * This is the number of attributes before switching to the hash table,\n     * and can be tuned, but 12 seems good for now - Brian M.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAXMinus1",
    "type" : "int",
    "comment" : "\n     * One less than the number of attributes before switching to\n     * the Hashtable.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final int getIndex(String qname)",
    "returnType" : "int",
    "comment" : "\n     * This method gets the index of an attribute given its qName.\n     * @param qname the qualified name of the attribute, e.g. \"prefix1:locName1\"\n     * @return the integer index of the attribute.\n     * @see org.xml.sax.Attributes#getIndex(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void addAttribute(String uri, String local, String qname, String type, String val)",
    "returnType" : "void",
    "comment" : "\n     * This method adds the attribute, but also records its qName/index pair in\n     * the hashtable for fast lookup by getIndex(qName).\n     * @param uri the URI of the attribute\n     * @param local the local name of the attribute\n     * @param qname the qualified name of the attribute\n     * @param type the type of the attribute\n     * @param val the value of the attribute\n     *\n     * @see org.xml.sax.helpers.AttributesImpl#addAttribute(String, String, String, String, String)\n     * @see #getIndex(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "private void switchOverToHash(int numAtts)",
    "returnType" : "void",
    "comment" : "\n     * We are switching over to having a hash table for quick look\n     * up of attributes, but up until now we haven't kept any\n     * information in the Hashtable, so we now update the Hashtable.\n     * Future additional attributes will update the Hashtable as\n     * they are added.\n     * @param numAtts\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void clear()",
    "returnType" : "void",
    "comment" : "\n     * This method clears the accumulated attributes.\n     *\n     * @see org.xml.sax.helpers.AttributesImpl#clear()\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void setAttributes(Attributes atts)",
    "returnType" : "void",
    "comment" : "\n     * This method sets the attributes, previous attributes are cleared,\n     * it also keeps the hashtable up to date for quick lookup via\n     * getIndex(qName).\n     * @param atts the attributes to copy into these attributes.\n     * @see org.xml.sax.helpers.AttributesImpl#setAttributes(Attributes)\n     * @see #getIndex(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public final int getIndex(String uri, String localName)",
    "returnType" : "int",
    "comment" : "\n     * This method gets the index of an attribute given its uri and locanName.\n     * @param uri the URI of the attribute name.\n     * @param localName the local namer (after the ':' ) of the attribute name.\n     * @return the integer index of the attribute.\n     * @see org.xml.sax.Attributes#getIndex(String)\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final int getIndex(String qname)", "public final void addAttribute(String uri, String local, String qname, String type, String val)", "private void switchOverToHash(int numAtts)", "public final void clear()", "public final void setAttributes(Attributes atts)", "public final int getIndex(String uri, String localName)" ],
  "variableNames" : [ "m_indexFromQName", "m_buff", "MAX", "MAXMinus1" ]
}