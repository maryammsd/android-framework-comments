{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/Editor.java",
  "packageName" : "android.widget",
  "className" : "InsertModeController",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mTextView",
    "type" : "TextView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsInsertModeActive",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInsertModeTransformationMethod",
    "type" : "InsertModeTransformationMethod",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHighlightPaint",
    "type" : "Paint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHighlightPath",
    "type" : "Path",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUpdatingTransformationMethod",
    "type" : "boolean",
    "comment" : "\n         * Whether it is in the progress of updating transformation method. It's needed because\n         * {@link TextView#setTransformationMethod(TransformationMethod)} will eventually call\n         * {@link TextView#setText(CharSequence)}.\n         * Because it normally should exit insert mode when {@link TextView#setText(CharSequence)}\n         * is called externally, we need this boolean to distinguish whether setText is triggered\n         * by setTransformation or not.\n         ",
    "links" : [ "android.widget.TextView#setTransformationMethod(TransformationMethod)", "android.widget.TextView#setText(CharSequence)" ]
  } ],
  "methods" : [ {
    "name" : " boolean enterInsertMode(int offset)",
    "returnType" : "boolean",
    "comment" : "\n         * Enter insert mode.\n         * @param offset the index to set the cursor.\n         * @return true if the call is successful. false if a) it's already in the insert mode,\n         * b) it failed to enter the insert mode.\n         ",
    "links" : [ ]
  }, {
    "name" : " void exitInsertMode()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void exitInsertMode(boolean updateText)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onDraw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setTransformationMethod(TransformationMethod method, boolean updateText)",
    "returnType" : "void",
    "comment" : "\n         * Update the TransformationMethod on the {@link TextView}.\n         * @param method the new method to be set on the {@link TextView}/\n         * @param updateText whether to update the text during setTransformationMethod call.\n         ",
    "links" : [ "android.widget.TextView" ]
  }, {
    "name" : " void beforeSetText()",
    "returnType" : "void",
    "comment" : "\n         * Notify the InsertMode controller that the {@link TextView} is about to set its text.\n         ",
    "links" : [ "android.widget.TextView" ]
  }, {
    "name" : " void updateTransformationMethod(TransformationMethod transformationMethod)",
    "returnType" : "void",
    "comment" : "\n         * Notify the {@link InsertModeController} that TextView#setTransformationMethod is called.\n         * If it's not in the insert mode, the given transformation method is directly set to the\n         * TextView. Otherwise, it will wrap the given transformation method with an\n         * {@link InsertModeTransformationMethod} and then set it on the TextView.\n         *\n         * @param transformationMethod the new {@link TransformationMethod} to be set on the\n         *                             TextView.\n         ",
    "links" : [ "InsertModeController", "android.text.method.InsertModeTransformationMethod" ]
  } ],
  "methodNames" : [ " boolean enterInsertMode(int offset)", " void exitInsertMode()", " void exitInsertMode(boolean updateText)", " void onDraw(Canvas canvas)", "private void setTransformationMethod(TransformationMethod method, boolean updateText)", " void beforeSetText()", " void updateTransformationMethod(TransformationMethod transformationMethod)" ],
  "variableNames" : [ "mTextView", "mIsInsertModeActive", "mInsertModeTransformationMethod", "mHighlightPaint", "mHighlightPath", "mUpdatingTransformationMethod" ]
}