{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/telemetry/ExperimentalOptions.java",
  "packageName" : "org.chromium.net.telemetry",
  "className" : "ExperimentalOptions",
  "comment" : " Parses the experimentalOptions string ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UNSET_INT_VALUE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "QUIC",
    "type" : "String",
    "comment" : " Declare static experimental options field trial names",
    "links" : [ ]
  }, {
    "name" : "ASYNC_DNS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STALE_DNS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mJson",
    "type" : "JSONObject",
    "comment" : " The JSONObject created from the experimentalOptions String",
    "links" : [ ]
  }, {
    "name" : "VALID_CONNECTION_OPTIONS",
    "type" : "Set<String>",
    "comment" : " //external/cronet:net/third_party/quiche/src/quiche/quic/core/crypto/crypto_protocol.h",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getConnectionOptionsOption()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getStoreServerConfigsInPropertiesOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaxServerConfigsStoredInPropertiesOption()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getIdleConnectionTimeoutSecondsOption()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getGoawaySessionsOnIpChangeOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getCloseSessionsOnIpChangeOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getMigrateSessionsOnNetworkChangeV2Option()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getMigrateSessionsEarlyV2()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getDisableBidirectionalStreamsOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaxTimeBeforeCryptoHandshakeSecondsOption()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaxIdleTimeBeforeCryptoHandshakeSecondsOption()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getEnableSocketRecvOptimizationOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getAsyncDnsEnableOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getStaleDnsEnableOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getStaleDnsDelayMillisOption()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getStaleDnsMaxExpiredTimeMillisOption()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getStaleDnsMaxStaleUsesOption()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getStaleDnsAllowOtherNetworkOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getStaleDnsPersistToDiskOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getStaleDnsPersistDelayMillisOption()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getStaleDnsUseStaleOnNameNotResolvedOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OptionalBoolean getDisableIpv6OnWifiOption()",
    "returnType" : "OptionalBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private T getOrDefault(String experimentalOptionFieldTrialName, String option, T defaultValue, Class<T> clazz)",
    "returnType" : "T",
    "comment" : "\n     * Checks if an experimentalOption fieldTrial key exists, then gets the value of the child\n     * option.\n     *\n     * @param experimentalOptionFieldTrialName the super option name for a nested experimental\n     *     option eg QUIC.connection_options where <code>QUIC</code> is the FieldTrialName and\n     *     <code>\n     *     connection_options</code> is the child option\n     * @param option the child option eg <code>connection_options</code>\n     * @param defaultValue the defaultValue if the option is null or empty\n     * @return the experimental option value\n     ",
    "links" : [ ]
  }, {
    "name" : "private T getOrDefault(String option, T defaultValue, Class<T> clazz)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String parseExperimentalOptionsString(String str)",
    "returnType" : "String",
    "comment" : "\n     * Checks that the connection_options options are always valid and do not contain any PII.\n     * Removes any value that does not conform to a valid option.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean isNullOrEmpty(String str)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getConnectionOptionsOption()", "public OptionalBoolean getStoreServerConfigsInPropertiesOption()", "public int getMaxServerConfigsStoredInPropertiesOption()", "public int getIdleConnectionTimeoutSecondsOption()", "public OptionalBoolean getGoawaySessionsOnIpChangeOption()", "public OptionalBoolean getCloseSessionsOnIpChangeOption()", "public OptionalBoolean getMigrateSessionsOnNetworkChangeV2Option()", "public OptionalBoolean getMigrateSessionsEarlyV2()", "public OptionalBoolean getDisableBidirectionalStreamsOption()", "public int getMaxTimeBeforeCryptoHandshakeSecondsOption()", "public int getMaxIdleTimeBeforeCryptoHandshakeSecondsOption()", "public OptionalBoolean getEnableSocketRecvOptimizationOption()", "public OptionalBoolean getAsyncDnsEnableOption()", "public OptionalBoolean getStaleDnsEnableOption()", "public int getStaleDnsDelayMillisOption()", "public int getStaleDnsMaxExpiredTimeMillisOption()", "public int getStaleDnsMaxStaleUsesOption()", "public OptionalBoolean getStaleDnsAllowOtherNetworkOption()", "public OptionalBoolean getStaleDnsPersistToDiskOption()", "public int getStaleDnsPersistDelayMillisOption()", "public OptionalBoolean getStaleDnsUseStaleOnNameNotResolvedOption()", "public OptionalBoolean getDisableIpv6OnWifiOption()", "private T getOrDefault(String experimentalOptionFieldTrialName, String option, T defaultValue, Class<T> clazz)", "private T getOrDefault(String option, T defaultValue, Class<T> clazz)", "private String parseExperimentalOptionsString(String str)", "private boolean isNullOrEmpty(String str)" ],
  "variableNames" : [ "TAG", "UNSET_INT_VALUE", "QUIC", "ASYNC_DNS", "STALE_DNS", "mJson", "VALID_CONNECTION_OPTIONS" ]
}