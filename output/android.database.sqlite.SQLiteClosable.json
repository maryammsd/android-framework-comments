{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/database/sqlite/SQLiteClosable.java",
  "packageName" : "android.database.sqlite",
  "className" : "SQLiteClosable",
  "comment" : "\n * An object created from a SQLiteDatabase that can be closed.\n *\n * This class implements a primitive reference counting scheme for database objects.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mReferenceCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected abstract void onAllReferencesReleased()",
    "returnType" : "void",
    "comment" : "\n     * Called when the last reference to the object was released by\n     * a call to {@link #releaseReference()} or {@link #close()}.\n     ",
    "links" : [ "#releaseReference()", "#close()" ]
  }, {
    "name" : "protected void onAllReferencesReleasedFromContainer()",
    "returnType" : "void",
    "comment" : "\n     * Called when the last reference to the object was released by\n     * a call to {@link #releaseReferenceFromContainer()}.\n     *\n     * @deprecated Do not use.\n     ",
    "links" : [ "#releaseReferenceFromContainer()" ]
  }, {
    "name" : "public void acquireReference()",
    "returnType" : "void",
    "comment" : "\n     * Acquires a reference to the object.\n     *\n     * @throws IllegalStateException if the last reference to the object has already\n     * been released.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void releaseReference()",
    "returnType" : "void",
    "comment" : "\n     * Releases a reference to the object, closing the object if the last reference\n     * was released.\n     *\n     * @see #onAllReferencesReleased()\n     ",
    "links" : [ ]
  }, {
    "name" : "public void releaseReferenceFromContainer()",
    "returnType" : "void",
    "comment" : "\n     * Releases a reference to the object that was owned by the container of the object,\n     * closing the object if the last reference was released.\n     *\n     * @see #onAllReferencesReleasedFromContainer()\n     * @deprecated Do not use.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Releases a reference to the object, closing the object if the last reference\n     * was released.\n     *\n     * Calling this method is equivalent to calling {@link #releaseReference}.\n     *\n     * @see #releaseReference()\n     * @see #onAllReferencesReleased()\n     ",
    "links" : [ "#releaseReference" ]
  } ],
  "methodNames" : [ "protected abstract void onAllReferencesReleased()", "protected void onAllReferencesReleasedFromContainer()", "public void acquireReference()", "public void releaseReference()", "public void releaseReferenceFromContainer()", "public void close()" ],
  "variableNames" : [ "mReferenceCount" ]
}