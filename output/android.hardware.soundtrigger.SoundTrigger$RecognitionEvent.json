{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/soundtrigger/SoundTrigger.java",
  "packageName" : "android.hardware.soundtrigger",
  "className" : "RecognitionEvent",
  "comment" : "\n     *  A RecognitionEvent is provided by the\n     *  {@code StatusListener#onRecognition(RecognitionEvent)}\n     *  callback upon recognition success or failure.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "status",
    "type" : "int",
    "comment" : "\n         * Recognition status e.g RECOGNITION_STATUS_SUCCESS\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "soundModelHandle",
    "type" : "int",
    "comment" : "\n         *\n         * Sound Model corresponding to this event callback\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "captureAvailable",
    "type" : "boolean",
    "comment" : "\n         * True if it is possible to capture audio from this utterance buffered by the hardware\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "captureSession",
    "type" : "int",
    "comment" : "\n         * Audio session ID to be used when capturing the utterance with an AudioRecord\n         * if captureAvailable() is true.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "captureDelayMs",
    "type" : "int",
    "comment" : "\n         * Delay in ms between end of model detection and start of audio available for capture.\n         * A negative value is possible (e.g. if keyphrase is also available for capture)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "capturePreambleMs",
    "type" : "int",
    "comment" : "\n         * Duration in ms of audio captured before the start of the trigger. 0 if none.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "triggerInData",
    "type" : "boolean",
    "comment" : "\n         * True if  the trigger (key phrase capture is present in binary data\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "captureFormat",
    "type" : "AudioFormat",
    "comment" : "\n         * Audio format of either the trigger in event data or to use for capture of the\n         * rest of the utterance\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "data",
    "type" : "byte[]",
    "comment" : "\n         * Opaque data for use by system applications who know about voice engine internals,\n         * typically during enrollment.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "recognitionStillActive",
    "type" : "boolean",
    "comment" : "\n         * Is recognition still active after this event.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "halEventReceivedMillis",
    "type" : "long",
    "comment" : "\n         * Timestamp of when the trigger event from SoundTriggerHal was received by the\n         * framework.\n         *\n         * <p>Clock monotonic including suspend time or its equivalent on the system,\n         * in the same units and timebase as {@link SystemClock#elapsedRealtime()}.\n         *\n         * <p>Value represents elapsed realtime in milliseconds when the event was received from the\n         * HAL. The value will be -1 if the event was not generated from the HAL.\n         *\n         * @hide\n         ",
    "links" : [ "android.os.SystemClock#elapsedRealtime()" ]
  }, {
    "name" : "token",
    "type" : "IBinder",
    "comment" : "\n         * Binder token returned by {@link SoundTriggerModule#startRecognitionWithToken(\n         * int soundModelHandle, SoundTrigger.RecognitionConfig config)}\n         * @hide\n         ",
    "links" : [ "android.hardware.soundtrigger.SoundTriggerModule#startRecognitionWithToken(" ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<RecognitionEvent>",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isCaptureAvailable()",
    "returnType" : "boolean",
    "comment" : "\n         * Check if is possible to capture audio from this utterance buffered by the hardware.\n         *\n         * @return {@code true} iff a capturing is possible\n         ",
    "links" : [ ]
  }, {
    "name" : "public AudioFormat getCaptureFormat()",
    "returnType" : "AudioFormat",
    "comment" : "\n         * Get the audio format of either the trigger in event data or to use for capture of the\n         * rest of the utterance\n         *\n         * @return the audio format\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getCaptureSession()",
    "returnType" : "int",
    "comment" : "\n         * Get Audio session ID to be used when capturing the utterance with an {@link AudioRecord}\n         * if {@link #isCaptureAvailable()} is true.\n         *\n         * @return The id of the capture session\n         ",
    "links" : [ "AudioRecord", "#isCaptureAvailable()" ]
  }, {
    "name" : "public byte[] getData()",
    "returnType" : "byte[]",
    "comment" : "\n         * Get the opaque data for use by system applications who know about voice engine\n         * internals, typically during enrollment.\n         *\n         * @return The data of the event\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getHalEventReceivedMillis()",
    "returnType" : "long",
    "comment" : "\n         * Timestamp of when the trigger event from SoundTriggerHal was received by the\n         * framework.\n         *\n         * Clock monotonic including suspend time or its equivalent on the system,\n         * in the same units and timebase as {@link SystemClock#elapsedRealtime()}.\n         *\n         * @return Elapsed realtime in milliseconds when the event was received from the HAL.\n         *      Returns -1 if the event was not generated from the HAL.\n         ",
    "links" : [ "android.os.SystemClock#elapsedRealtime()" ]
  }, {
    "name" : "public IBinder getToken()",
    "returnType" : "IBinder",
    "comment" : "\n         * Get token associated with this recognition session returned by\n         *{@link SoundTriggerModule#startRecognitionWithToken(\n         * int soundModelHandle, SoundTrigger.RecognitionConfig config)}\n         * @hide\n         ",
    "links" : [ "android.hardware.soundtrigger.SoundTriggerModule#startRecognitionWithToken(" ]
  }, {
    "name" : "protected static RecognitionEvent fromParcel(Parcel in)",
    "returnType" : "RecognitionEvent",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isCaptureAvailable()", "public AudioFormat getCaptureFormat()", "public int getCaptureSession()", "public byte[] getData()", "public long getHalEventReceivedMillis()", "public IBinder getToken()", "protected static RecognitionEvent fromParcel(Parcel in)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public int hashCode()", "public boolean equals(@Nullable Object obj)", "public String toString()" ],
  "variableNames" : [ "status", "soundModelHandle", "captureAvailable", "captureSession", "captureDelayMs", "capturePreambleMs", "triggerInData", "captureFormat", "data", "recognitionStillActive", "halEventReceivedMillis", "token", "CREATOR" ]
}