{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/TelephonyManager.java",
  "packageName" : "android.telephony",
  "className" : "CarrierPrivilegesCallback",
  "comment" : "\n     * Callbacks to listen for when the set of packages with carrier privileges for a SIM changes.\n     *\n     * <p>Of note, when multiple callbacks are registered, they may be triggered one after another.\n     * The ordering of them is not guaranteed and thus should not be depend on.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onCarrierPrivilegesChanged(@NonNull Set<String> privilegedPackageNames, @NonNull Set<Integer> privilegedUids)",
    "returnType" : "void",
    "comment" : "\n         * Called when the set of packages with carrier privileges has changed.\n         *\n         * <p>Of note, this callback will <b>not</b> be fired if a carrier triggers a SIM profile\n         * switch and the same set of packages remains privileged after the switch.\n         *\n         * <p>At registration, the callback will receive the current set of privileged packages.\n         *\n         * @param privilegedPackageNames The updated set of package names that have carrier\n         *                               privileges\n         * @param privilegedUids         The updated set of UIDs that have carrier privileges\n         ",
    "links" : [ ]
  }, {
    "name" : " void onCarrierServiceChanged(@Nullable String carrierServicePackageName, int carrierServiceUid)",
    "returnType" : "void",
    "comment" : "\n         * Called when the {@link CarrierService} for the current user profile has changed.\n         *\n         * <p>This method does nothing by default. Clients that are interested in the carrier\n         * service change should override this method to get package name and UID info.\n         *\n         * <p>At registration, the callback will receive the current carrier service info.\n         *\n         * <p>Of note, this callback will <b>not</b> be fired if a carrier triggers a SIM profile\n         * switch and the same carrier service remains after switch.\n         *\n         * @param carrierServicePackageName package name of the {@link CarrierService}. May be\n         *                                  {@code null} when no carrier service is detected.\n         * @param carrierServiceUid         UID of the {@link CarrierService}. May be\n         *                                  {@link android.os.Process#INVALID_UID} if no carrier\n         *                                  service is detected.\n         ",
    "links" : [ "android.os.Process#INVALID_UID", "android.service.carrier.CarrierService" ]
  } ],
  "methodNames" : [ " void onCarrierPrivilegesChanged(@NonNull Set<String> privilegedPackageNames, @NonNull Set<Integer> privilegedUids)", " void onCarrierServiceChanged(@Nullable String carrierServicePackageName, int carrierServiceUid)" ],
  "variableNames" : [ ]
}