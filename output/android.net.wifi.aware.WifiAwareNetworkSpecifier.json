{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/aware/WifiAwareNetworkSpecifier.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "WifiAwareNetworkSpecifier",
  "comment" : "\n * Network specifier object used to request a Wi-Fi Aware network. Apps should use the\n * {@link WifiAwareNetworkSpecifier.Builder} class to create an instance.\n ",
  "links" : [ "WifiAwareNetworkSpecifier.Builder" ],
  "variables" : [ {
    "name" : "NETWORK_SPECIFIER_TYPE_IB",
    "type" : "int",
    "comment" : "\n     * TYPE: in band, specific peer: role, client_id, session_id, peer_id, pmk/passphrase optional\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_SPECIFIER_TYPE_IB_ANY_PEER",
    "type" : "int",
    "comment" : "\n     * TYPE: in band, any peer: role, client_id, session_id, pmk/passphrase optional\n     * [only permitted for RESPONDER]\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_SPECIFIER_TYPE_OOB",
    "type" : "int",
    "comment" : "\n     * TYPE: out-of-band: role, client_id, peer_mac, pmk/passphrase optional\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_SPECIFIER_TYPE_OOB_ANY_PEER",
    "type" : "int",
    "comment" : "\n     * TYPE: out-of-band, any peer: role, client_id, pmk/passphrase optional\n     * [only permitted for RESPONDER]\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_SPECIFIER_TYPE_MAX_VALID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "type",
    "type" : "int",
    "comment" : "\n     * One of the NETWORK_SPECIFIER_TYPE_* constants. The type of the network specifier object.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "role",
    "type" : "int",
    "comment" : "\n     * The role of the device: WifiAwareManager.WIFI_AWARE_DATA_PATH_ROLE_INITIATOR or\n     * WifiAwareManager.WIFI_AWARE_DATA_PATH_ROLE_RESPONDER.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "clientId",
    "type" : "int",
    "comment" : "\n     * The client ID of the device.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "sessionId",
    "type" : "int",
    "comment" : "\n     * The session ID in which context to request a data-path. Only relevant for IB requests.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "peerId",
    "type" : "int",
    "comment" : "\n     * The peer ID of the device which the data-path should be connected to. Only relevant for\n     * IB requests (i.e. not IB_ANY_PEER or OOB*).\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "peerMac",
    "type" : "byte[]",
    "comment" : "\n     * The peer MAC address of the device which the data-path should be connected to. Only relevant\n     * for OB requests (i.e. not OOB_ANY_PEER or IB*).\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "pmk",
    "type" : "byte[]",
    "comment" : "\n     * The PMK of the requested data-path. Can be null. Only one or none of pmk or passphrase should\n     * be specified.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "passphrase",
    "type" : "String",
    "comment" : "\n     * The Passphrase of the requested data-path. Can be null. Only one or none of the pmk or\n     * passphrase should be specified.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "port",
    "type" : "int",
    "comment" : "\n     * The port information to be used for this link. This information will be communicated to the\n     * peer as part of the layer 2 link setup.\n     *\n     * Information only allowed on secure links since a single layer-2 link is set up for all\n     * requestors. Therefore if multiple apps on a single device request links to the same peer\n     * device they all get the same link. However, the link is only set up on the first request -\n     * hence only the first can transmit the port information. But we don't want to expose that\n     * information to other apps. Limiting to secure links would (usually) imply single app usage.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "transportProtocol",
    "type" : "int",
    "comment" : "\n     * The transport protocol information to be used for this link. This information will be\n     * communicated to the peer as part of the layer 2 link setup.\n     *\n     * Information only allowed on secure links since a single layer-2 link is set up for all\n     * requestors. Therefore if multiple apps on a single device request links to the same peer\n     * device they all get the same link. However, the link is only set up on the first request -\n     * hence only the first can transmit the port information. But we don't want to expose that\n     * information to other apps. Limiting to secure links would (usually) imply single app usage.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mChannelInMhz",
    "type" : "int",
    "comment" : "\n     * Channel frequency in MHz for setup data-path on.\n     ",
    "links" : [ ]
  }, {
    "name" : "mForcedChannel",
    "type" : "boolean",
    "comment" : "\n     * Force to use the specified channel or not. If true, Channel request is specified and must be\n     * respected. If the firmware cannot honor the request then the data-path request is rejected.\n     * Otherwise, requested channel can be overridden by firmware.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSecurityConfig",
    "type" : "WifiAwareDataPathSecurityConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WifiAwareNetworkSpecifier>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getChannelFrequencyMhz()",
    "returnType" : "int",
    "comment" : "\n     * Get the specified channel in MHZ for this Wi-Fi Aware network specifier.\n     * @see Builder#setChannelFrequencyMhz(int, boolean)\n     * @return Channel frequency in Mhz. A value of 0 indicates that no channel was specified.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isChannelRequired()",
    "returnType" : "boolean",
    "comment" : "\n     * Check if the specified channel is required to honor or not.\n     * @see Builder#setChannelFrequencyMhz(int, boolean)\n     * @return true if forced to honer, false for recommend to use.\n     ",
    "links" : [ ]
  }, {
    "name" : "public WifiAwareDataPathSecurityConfig getWifiAwareDataPathSecurityConfig()",
    "returnType" : "WifiAwareDataPathSecurityConfig",
    "comment" : "\n     * Get the security config specified in this Network Specifier to encrypt Wi-Fi Aware data-path\n     * @return {@link WifiAwareDataPathSecurityConfig} used to encrypt the data-path\n     ",
    "links" : [ "android.net.wifi.aware.WifiAwareDataPathSecurityConfig" ]
  }, {
    "name" : "public boolean isOutOfBand()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether the network specifier specifies an OOB (out-of-band) data-path - i.e. a\n     * data-path created without a corresponding Aware discovery session.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canBeSatisfiedBy(NetworkSpecifier other)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getChannelFrequencyMhz()", "public boolean isChannelRequired()", "public WifiAwareDataPathSecurityConfig getWifiAwareDataPathSecurityConfig()", "public boolean isOutOfBand()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean canBeSatisfiedBy(NetworkSpecifier other)", "public int hashCode()", "public boolean equals(Object obj)", "public String toString()" ],
  "variableNames" : [ "NETWORK_SPECIFIER_TYPE_IB", "NETWORK_SPECIFIER_TYPE_IB_ANY_PEER", "NETWORK_SPECIFIER_TYPE_OOB", "NETWORK_SPECIFIER_TYPE_OOB_ANY_PEER", "NETWORK_SPECIFIER_TYPE_MAX_VALID", "type", "role", "clientId", "sessionId", "peerId", "peerMac", "pmk", "passphrase", "port", "transportProtocol", "mChannelInMhz", "mForcedChannel", "mSecurityConfig", "CREATOR" ]
}