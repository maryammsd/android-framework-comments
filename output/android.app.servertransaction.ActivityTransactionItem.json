{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/servertransaction/ActivityTransactionItem.java",
  "packageName" : "android.app.servertransaction",
  "className" : "ActivityTransactionItem",
  "comment" : "\n * An activity-targeting callback message to a client that can be scheduled and executed.\n * It also provides nullity-free version of\n * {@link #execute(ClientTransactionHandler, IBinder, PendingTransactionActions)} for child class\n * to inherit.\n *\n * @see ClientTransaction\n * @see ClientTransactionItem\n * @see com.android.server.wm.ClientLifecycleManager\n * @hide\n ",
  "links" : [ "#execute(ClientTransactionHandler" ],
  "variables" : [ {
    "name" : "mActivityToken",
    "type" : "IBinder",
    "comment" : " Target client activity. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void execute(@NonNull ClientTransactionHandler client, @NonNull PendingTransactionActions pendingActions)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void execute(@NonNull ClientTransactionHandler client, @NonNull ActivityClientRecord r, @NonNull PendingTransactionActions pendingActions)",
    "returnType" : "void",
    "comment" : "\n     * Like {@link #execute(ClientTransactionHandler, PendingTransactionActions)},\n     * but take non-null {@link ActivityClientRecord} as a parameter.\n     ",
    "links" : [ "#execute(ClientTransactionHandler", "android.app.ActivityThread.ActivityClientRecord" ]
  }, {
    "name" : " final ActivityClientRecord getActivityClientRecord(@NonNull ClientTransactionHandler client)",
    "returnType" : "ActivityClientRecord",
    "comment" : "\n     * Gets the {@link ActivityClientRecord} instance that this transaction item is for.\n     * @param client Target client handler.\n     * @return The {@link ActivityClientRecord} instance that this transaction item is for.\n     ",
    "links" : [ "android.app.ActivityThread.ActivityClientRecord" ]
  }, {
    "name" : "public IBinder getActivityToken()",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setActivityToken(@NonNull IBinder activityToken)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void recycle()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void dump(@NonNull String prefix, @NonNull PrintWriter pw, @NonNull ClientTransactionHandler transactionHandler)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : " Subclass must override and call super.equals to compare the mActivityToken.",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final void execute(@NonNull ClientTransactionHandler client, @NonNull PendingTransactionActions pendingActions)", "public abstract void execute(@NonNull ClientTransactionHandler client, @NonNull ActivityClientRecord r, @NonNull PendingTransactionActions pendingActions)", " final ActivityClientRecord getActivityClientRecord(@NonNull ClientTransactionHandler client)", "public IBinder getActivityToken()", " void setActivityToken(@NonNull IBinder activityToken)", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public void recycle()", " void dump(@NonNull String prefix, @NonNull PrintWriter pw, @NonNull ClientTransactionHandler transactionHandler)", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "mActivityToken" ]
}