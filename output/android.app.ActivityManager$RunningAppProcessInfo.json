{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/ActivityManager.java",
  "packageName" : "android.app",
  "className" : "RunningAppProcessInfo",
  "comment" : "\n     * Information you can retrieve about a running process.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "processName",
    "type" : "String",
    "comment" : "\n         * The name of the process that this object is associated with\n         ",
    "links" : [ ]
  }, {
    "name" : "pid",
    "type" : "int",
    "comment" : "\n         * The pid of this process; 0 if none\n         ",
    "links" : [ ]
  }, {
    "name" : "uid",
    "type" : "int",
    "comment" : "\n         * The user id of this process.\n         ",
    "links" : [ ]
  }, {
    "name" : "pkgList",
    "type" : "String[]",
    "comment" : "\n         * All packages that have been loaded into the process.\n         ",
    "links" : [ ]
  }, {
    "name" : "pkgDeps",
    "type" : "String[]",
    "comment" : "\n         * Additional packages loaded into the process as dependency.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "FLAG_CANT_SAVE_STATE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #flags}: this is an app that is unable to\n         * correctly save its state when going to the background,\n         * so it can not be killed while in the background.\n         * @hide\n         ",
    "links" : [ "#flags" ]
  }, {
    "name" : "FLAG_PERSISTENT",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #flags}: this process is associated with a\n         * persistent system app.\n         * @hide\n         ",
    "links" : [ "#flags" ]
  }, {
    "name" : "FLAG_HAS_ACTIVITIES",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #flags}: this process is associated with a\n         * persistent system app.\n         * @hide\n         ",
    "links" : [ "#flags" ]
  }, {
    "name" : "flags",
    "type" : "int",
    "comment" : "\n         * Flags of information.  May be any of\n         * {@link #FLAG_CANT_SAVE_STATE}.\n         * @hide\n         ",
    "links" : [ "#FLAG_CANT_SAVE_STATE" ]
  }, {
    "name" : "lastTrimLevel",
    "type" : "int",
    "comment" : "\n         * Last memory trim level reported to the process: corresponds to\n         * the values supplied to {@link android.content.ComponentCallbacks2#onTrimMemory(int)\n         * ComponentCallbacks2.onTrimMemory(int)}.\n         ",
    "links" : [ "android.content.ComponentCallbacks2#onTrimMemory(int)" ]
  }, {
    "name" : "IMPORTANCE_FOREGROUND",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process is running the\n         * foreground UI; that is, it is the thing currently at the top of the screen\n         * that the user is interacting with.\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "IMPORTANCE_FOREGROUND_SERVICE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process is running a foreground\n         * service, for example to perform music playback even while the user is\n         * not immediately in the app.  This generally indicates that the process\n         * is doing something the user actively cares about.\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "IMPORTANCE_TOP_SLEEPING_PRE_28",
    "type" : "int",
    "comment" : "\n         * @deprecated Pre-{@link android.os.Build.VERSION_CODES#P} version of\n         * {@link #IMPORTANCE_TOP_SLEEPING}.  As of Android\n         * {@link android.os.Build.VERSION_CODES#P}, this is considered much less\n         * important since we want to reduce what apps can do when the screen is off.\n         ",
    "links" : [ "android.os.Build.VERSION_CODES#P", "#IMPORTANCE_TOP_SLEEPING" ]
  }, {
    "name" : "IMPORTANCE_VISIBLE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process is running something\n         * that is actively visible to the user, though not in the immediate\n         * foreground.  This may be running a window that is behind the current\n         * foreground (so paused and with its state saved, not interacting with\n         * the user, but visible to them to some degree); it may also be running\n         * other services under the system's control that it considers important.\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "IMPORTANCE_PERCEPTIBLE_PRE_26",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: {@link #IMPORTANCE_PERCEPTIBLE} had this wrong value\n         * before {@link Build.VERSION_CODES#O}.  Since the {@link Build.VERSION_CODES#O} SDK,\n         * the value of {@link #IMPORTANCE_PERCEPTIBLE} has been fixed.\n         *\n         * <p>The system will return this value instead of {@link #IMPORTANCE_PERCEPTIBLE}\n         * on Android versions below {@link Build.VERSION_CODES#O}.\n         *\n         * <p>On Android version {@link Build.VERSION_CODES#O} and later, this value will still be\n         * returned for apps with the target API level below {@link Build.VERSION_CODES#O}.\n         * For apps targeting version {@link Build.VERSION_CODES#O} and later,\n         * the correct value {@link #IMPORTANCE_PERCEPTIBLE} will be returned.\n         ",
    "links" : [ "#importance", "Build.VERSION_CODES#O", "#IMPORTANCE_PERCEPTIBLE" ]
  }, {
    "name" : "IMPORTANCE_PERCEPTIBLE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process is not something the user\n         * is directly aware of, but is otherwise perceptible to them to some degree.\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "IMPORTANCE_CANT_SAVE_STATE_PRE_26",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: {@link #IMPORTANCE_CANT_SAVE_STATE} had\n         * this wrong value\n         * before {@link Build.VERSION_CODES#O}.  Since the {@link Build.VERSION_CODES#O} SDK,\n         * the value of {@link #IMPORTANCE_CANT_SAVE_STATE} has been fixed.\n         *\n         * <p>The system will return this value instead of {@link #IMPORTANCE_CANT_SAVE_STATE}\n         * on Android versions below {@link Build.VERSION_CODES#O}.\n         *\n         * <p>On Android version {@link Build.VERSION_CODES#O} after, this value will still be\n         * returned for apps with the target API level below {@link Build.VERSION_CODES#O}.\n         * For apps targeting version {@link Build.VERSION_CODES#O} and later,\n         * the correct value {@link #IMPORTANCE_CANT_SAVE_STATE} will be returned.\n         *\n         * @hide\n         ",
    "links" : [ "#importance", "Build.VERSION_CODES#O", "#IMPORTANCE_CANT_SAVE_STATE" ]
  }, {
    "name" : "IMPORTANCE_SERVICE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process contains services\n         * that should remain running.  These are background services apps have\n         * started, not something the user is aware of, so they may be killed by\n         * the system relatively freely (though it is generally desired that they\n         * stay running as long as they want to).\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "IMPORTANCE_TOP_SLEEPING",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process is running the foreground\n         * UI, but the device is asleep so it is not visible to the user.  Though the\n         * system will try hard to keep its process from being killed, in all other\n         * ways we consider it a kind of cached process, with the limitations that go\n         * along with that state: network access, running background services, etc.\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "IMPORTANCE_CANT_SAVE_STATE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process is running an\n         * application that can not save its state, and thus can't be killed\n         * while in the background.  This will be used with apps that have\n         * {@link android.R.attr#cantSaveState} set on their application tag.\n         ",
    "links" : [ "#importance", "android.R.attr#cantSaveState" ]
  }, {
    "name" : "IMPORTANCE_CACHED",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process contains cached code\n         * that is expendable, not actively running any app components we care\n         * about.\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "IMPORTANCE_BACKGROUND",
    "type" : "int",
    "comment" : "\n         * @deprecated Renamed to {@link #IMPORTANCE_CACHED}.\n         ",
    "links" : [ "#IMPORTANCE_CACHED" ]
  }, {
    "name" : "IMPORTANCE_EMPTY",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process is empty of any\n         * actively running code.\n         * @deprecated This value is no longer reported, use {@link #IMPORTANCE_CACHED} instead.\n         ",
    "links" : [ "#importance", "#IMPORTANCE_CACHED" ]
  }, {
    "name" : "IMPORTANCE_GONE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importance}: This process does not exist.\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "importance",
    "type" : "int",
    "comment" : "\n         * The relative importance level that the system places on this process.\n         * These constants are numbered so that \"more important\" values are\n         * always smaller than \"less important\" values.\n         ",
    "links" : [ ]
  }, {
    "name" : "lru",
    "type" : "int",
    "comment" : "\n         * An additional ordering within a particular {@link #importance}\n         * category, providing finer-grained information about the relative\n         * utility of processes within a category.  This number means nothing\n         * except that a smaller values are more recently used (and thus\n         * more important).  Currently an LRU value is only maintained for\n         * the {@link #IMPORTANCE_CACHED} category, though others may\n         * be maintained in the future.\n         ",
    "links" : [ "#importance", "#IMPORTANCE_CACHED" ]
  }, {
    "name" : "REASON_UNKNOWN",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importanceReasonCode}: nothing special has\n         * been specified for the reason for this level.\n         ",
    "links" : [ "#importanceReasonCode" ]
  }, {
    "name" : "REASON_PROVIDER_IN_USE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importanceReasonCode}: one of the application's\n         * content providers is being used by another process.  The pid of\n         * the client process is in {@link #importanceReasonPid} and the\n         * target provider in this process is in\n         * {@link #importanceReasonComponent}.\n         ",
    "links" : [ "#importanceReasonComponent", "#importanceReasonPid", "#importanceReasonCode" ]
  }, {
    "name" : "REASON_SERVICE_IN_USE",
    "type" : "int",
    "comment" : "\n         * Constant for {@link #importanceReasonCode}: one of the application's\n         * content providers is being used by another process.  The pid of\n         * the client process is in {@link #importanceReasonPid} and the\n         * target provider in this process is in\n         * {@link #importanceReasonComponent}.\n         ",
    "links" : [ "#importanceReasonComponent", "#importanceReasonPid", "#importanceReasonCode" ]
  }, {
    "name" : "importanceReasonCode",
    "type" : "int",
    "comment" : "\n         * The reason for {@link #importance}, if any.\n         ",
    "links" : [ "#importance" ]
  }, {
    "name" : "importanceReasonPid",
    "type" : "int",
    "comment" : "\n         * For the specified values of {@link #importanceReasonCode}, this\n         * is the process ID of the other process that is a client of this\n         * process.  This will be 0 if no other process is using this one.\n         ",
    "links" : [ "#importanceReasonCode" ]
  }, {
    "name" : "importanceReasonComponent",
    "type" : "ComponentName",
    "comment" : "\n         * For the specified values of {@link #importanceReasonCode}, this\n         * is the name of the component that is being used in this process.\n         ",
    "links" : [ "#importanceReasonCode" ]
  }, {
    "name" : "importanceReasonImportance",
    "type" : "int",
    "comment" : "\n         * When {@link #importanceReasonPid} is non-0, this is the importance\n         * of the other pid. @hide\n         ",
    "links" : [ "#importanceReasonPid" ]
  }, {
    "name" : "processState",
    "type" : "int",
    "comment" : "\n         * Current process state, as per PROCESS_STATE_* constants.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "isFocused",
    "type" : "boolean",
    "comment" : "\n         * Whether the app is focused in multi-window environment.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "lastActivityTime",
    "type" : "long",
    "comment" : "\n         * Copy of {@link com.android.server.am.ProcessRecord#lastActivityTime} of the process.\n         * @hide\n         ",
    "links" : [ "com.android.server.am.ProcessRecord#lastActivityTime" ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<RunningAppProcessInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int procStateToImportance(int procState)",
    "returnType" : "int",
    "comment" : "\n         * Convert a proc state to the correspondent IMPORTANCE_* constant.  If the return value\n         * will be passed to a client, use {@link #procStateToImportanceForClient}.\n         * @hide\n         ",
    "links" : [ "#procStateToImportanceForClient" ]
  }, {
    "name" : "public static int procStateToImportanceForClient(int procState, Context clientContext)",
    "returnType" : "int",
    "comment" : "\n         * Convert a proc state to the correspondent IMPORTANCE_* constant for a client represented\n         * by a given {@link Context}, with converting {@link #IMPORTANCE_PERCEPTIBLE}\n         * and {@link #IMPORTANCE_CANT_SAVE_STATE} to the corresponding \"wrong\" value if the\n         * client's target SDK < {@link VERSION_CODES#O}.\n         * @hide\n         ",
    "links" : [ "android.content.Context", "android.os.Build.VERSION_CODES#O", "#IMPORTANCE_PERCEPTIBLE", "#IMPORTANCE_CANT_SAVE_STATE" ]
  }, {
    "name" : "public static int procStateToImportanceForTargetSdk(int procState, int targetSdkVersion)",
    "returnType" : "int",
    "comment" : "\n         * See {@link #procStateToImportanceForClient}.\n         * @hide\n         ",
    "links" : [ "#procStateToImportanceForClient" ]
  }, {
    "name" : "public static int importanceToProcState(@Importance int importance)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void readFromParcel(Parcel source)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int procStateToImportance(int procState)", "public static int procStateToImportanceForClient(int procState, Context clientContext)", "public static int procStateToImportanceForTargetSdk(int procState, int targetSdkVersion)", "public static int importanceToProcState(@Importance int importance)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void readFromParcel(Parcel source)" ],
  "variableNames" : [ "processName", "pid", "uid", "pkgList", "pkgDeps", "FLAG_CANT_SAVE_STATE", "FLAG_PERSISTENT", "FLAG_HAS_ACTIVITIES", "flags", "lastTrimLevel", "IMPORTANCE_FOREGROUND", "IMPORTANCE_FOREGROUND_SERVICE", "IMPORTANCE_TOP_SLEEPING_PRE_28", "IMPORTANCE_VISIBLE", "IMPORTANCE_PERCEPTIBLE_PRE_26", "IMPORTANCE_PERCEPTIBLE", "IMPORTANCE_CANT_SAVE_STATE_PRE_26", "IMPORTANCE_SERVICE", "IMPORTANCE_TOP_SLEEPING", "IMPORTANCE_CANT_SAVE_STATE", "IMPORTANCE_CACHED", "IMPORTANCE_BACKGROUND", "IMPORTANCE_EMPTY", "IMPORTANCE_GONE", "importance", "lru", "REASON_UNKNOWN", "REASON_PROVIDER_IN_USE", "REASON_SERVICE_IN_USE", "importanceReasonCode", "importanceReasonPid", "importanceReasonComponent", "importanceReasonImportance", "processState", "isFocused", "lastActivityTime", "CREATOR" ]
}