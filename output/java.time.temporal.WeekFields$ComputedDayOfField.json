{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/time/temporal/WeekFields.java",
  "packageName" : "java.time.temporal",
  "className" : "ComputedDayOfField",
  "comment" : "\n     * Field type that computes DayOfWeek, WeekOfMonth, and WeekOfYear\n     * based on a WeekFields.\n     * A separate Field instance is required for each different WeekFields;\n     * combination of start of week and minimum number of days.\n     * Constructors are provided to create fields for DayOfWeek, WeekOfMonth,\n     * and WeekOfYear.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "name",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "weekDef",
    "type" : "WeekFields",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "baseUnit",
    "type" : "TemporalUnit",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "rangeUnit",
    "type" : "TemporalUnit",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "range",
    "type" : "ValueRange",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DAY_OF_WEEK_RANGE",
    "type" : "ValueRange",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEK_OF_MONTH_RANGE",
    "type" : "ValueRange",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEK_OF_YEAR_RANGE",
    "type" : "ValueRange",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEK_OF_WEEK_BASED_YEAR_RANGE",
    "type" : "ValueRange",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static ComputedDayOfField ofDayOfWeekField(WeekFields weekDef)",
    "returnType" : "ComputedDayOfField",
    "comment" : "\n         * Returns a field to access the day of week,\n         * computed based on a WeekFields.\n         * <p>\n         * The WeekDefintion of the first day of the week is used with\n         * the ISO DAY_OF_WEEK field to compute week boundaries.\n         ",
    "links" : [ ]
  }, {
    "name" : " static ComputedDayOfField ofWeekOfMonthField(WeekFields weekDef)",
    "returnType" : "ComputedDayOfField",
    "comment" : "\n         * Returns a field to access the week of month,\n         * computed based on a WeekFields.\n         * @see WeekFields#weekOfMonth()\n         ",
    "links" : [ ]
  }, {
    "name" : " static ComputedDayOfField ofWeekOfYearField(WeekFields weekDef)",
    "returnType" : "ComputedDayOfField",
    "comment" : "\n         * Returns a field to access the week of year,\n         * computed based on a WeekFields.\n         * @see WeekFields#weekOfYear()\n         ",
    "links" : [ ]
  }, {
    "name" : " static ComputedDayOfField ofWeekOfWeekBasedYearField(WeekFields weekDef)",
    "returnType" : "ComputedDayOfField",
    "comment" : "\n         * Returns a field to access the week of week-based-year,\n         * computed based on a WeekFields.\n         * @see WeekFields#weekOfWeekBasedYear()\n         ",
    "links" : [ ]
  }, {
    "name" : " static ComputedDayOfField ofWeekBasedYearField(WeekFields weekDef)",
    "returnType" : "ComputedDayOfField",
    "comment" : "\n         * Returns a field to access the week of week-based-year,\n         * computed based on a WeekFields.\n         * @see WeekFields#weekBasedYear()\n         ",
    "links" : [ ]
  }, {
    "name" : "private ChronoLocalDate ofWeekBasedYear(Chronology chrono, int yowby, int wowby, int dow)",
    "returnType" : "ChronoLocalDate",
    "comment" : "\n         * Return a new week-based-year date of the Chronology, year, week-of-year,\n         * and dow of week.\n         * @param chrono The chronology of the new date\n         * @param yowby the year of the week-based-year\n         * @param wowby the week of the week-based-year\n         * @param dow the day of the week\n         * @return a ChronoLocalDate for the requested year, week of year, and day of week\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getFrom(TemporalAccessor temporal)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int localizedDayOfWeek(TemporalAccessor temporal)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int localizedDayOfWeek(int isoDow)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private long localizedWeekOfMonth(TemporalAccessor temporal)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private long localizedWeekOfYear(TemporalAccessor temporal)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int localizedWeekBasedYear(TemporalAccessor temporal)",
    "returnType" : "int",
    "comment" : "\n         * Returns the year of week-based-year for the temporal.\n         * The year can be the previous year, the current year, or the next year.\n         * @param temporal a date of any chronology, not null\n         * @return the year of week-based-year for the date\n         ",
    "links" : [ ]
  }, {
    "name" : "private int localizedWeekOfWeekBasedYear(TemporalAccessor temporal)",
    "returnType" : "int",
    "comment" : "\n         * Returns the week of week-based-year for the temporal.\n         * The week can be part of the previous year, the current year,\n         * or the next year depending on the week start and minimum number\n         * of days.\n         * @param temporal  a date of any chronology\n         * @return the week of the year\n         * @see #localizedWeekBasedYear(java.time.temporal.TemporalAccessor)\n         ",
    "links" : [ ]
  }, {
    "name" : "private int startOfWeekOffset(int day, int dow)",
    "returnType" : "int",
    "comment" : "\n         * Returns an offset to align week start with a day of month or day of year.\n         *\n         * @param day  the day; 1 through infinity\n         * @param dow  the day of the week of that day; 1 through 7\n         * @return  an offset in days to align a day with the start of the first 'full' week\n         ",
    "links" : [ ]
  }, {
    "name" : "private int computeWeek(int offset, int day)",
    "returnType" : "int",
    "comment" : "\n         * Returns the week number computed from the reference day and reference dayOfWeek.\n         *\n         * @param offset the offset to align a date with the start of week\n         *     from {@link #startOfWeekOffset}.\n         * @param day  the day for which to compute the week number\n         * @return the week number where zero is used for a partial week and 1 for the first full week\n         ",
    "links" : [ "#startOfWeekOffset" ]
  }, {
    "name" : "public R adjustInto(R temporal, long newValue)",
    "returnType" : "R",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ChronoLocalDate resolve(Map<TemporalField, Long> fieldValues, TemporalAccessor partialTemporal, ResolverStyle resolverStyle)",
    "returnType" : "ChronoLocalDate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ChronoLocalDate resolveWoM(Map<TemporalField, Long> fieldValues, Chronology chrono, int year, long month, long wom, int localDow, ResolverStyle resolverStyle)",
    "returnType" : "ChronoLocalDate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ChronoLocalDate resolveWoY(Map<TemporalField, Long> fieldValues, Chronology chrono, int year, long woy, int localDow, ResolverStyle resolverStyle)",
    "returnType" : "ChronoLocalDate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ChronoLocalDate resolveWBY(Map<TemporalField, Long> fieldValues, Chronology chrono, int localDow, ResolverStyle resolverStyle)",
    "returnType" : "ChronoLocalDate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getDisplayName(Locale locale)",
    "returnType" : "String",
    "comment" : "-----------------------------------------------------------------------",
    "links" : [ ]
  }, {
    "name" : "public TemporalUnit getBaseUnit()",
    "returnType" : "TemporalUnit",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TemporalUnit getRangeUnit()",
    "returnType" : "TemporalUnit",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isDateBased()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isTimeBased()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ValueRange range()",
    "returnType" : "ValueRange",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isSupportedBy(TemporalAccessor temporal)",
    "returnType" : "boolean",
    "comment" : "-----------------------------------------------------------------------",
    "links" : [ ]
  }, {
    "name" : "public ValueRange rangeRefinedBy(TemporalAccessor temporal)",
    "returnType" : "ValueRange",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ValueRange rangeByWeek(TemporalAccessor temporal, TemporalField field)",
    "returnType" : "ValueRange",
    "comment" : "\n         * Map the field range to a week range\n         * @param temporal the temporal\n         * @param field the field to get the range of\n         * @return the ValueRange with the range adjusted to weeks.\n         ",
    "links" : [ ]
  }, {
    "name" : "private ValueRange rangeWeekOfWeekBasedYear(TemporalAccessor temporal)",
    "returnType" : "ValueRange",
    "comment" : "\n         * Map the field range to a week range of a week year.\n         * @param temporal  the temporal\n         * @return the ValueRange with the range adjusted to weeks.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "-----------------------------------------------------------------------",
    "links" : [ ]
  } ],
  "methodNames" : [ " static ComputedDayOfField ofDayOfWeekField(WeekFields weekDef)", " static ComputedDayOfField ofWeekOfMonthField(WeekFields weekDef)", " static ComputedDayOfField ofWeekOfYearField(WeekFields weekDef)", " static ComputedDayOfField ofWeekOfWeekBasedYearField(WeekFields weekDef)", " static ComputedDayOfField ofWeekBasedYearField(WeekFields weekDef)", "private ChronoLocalDate ofWeekBasedYear(Chronology chrono, int yowby, int wowby, int dow)", "public long getFrom(TemporalAccessor temporal)", "private int localizedDayOfWeek(TemporalAccessor temporal)", "private int localizedDayOfWeek(int isoDow)", "private long localizedWeekOfMonth(TemporalAccessor temporal)", "private long localizedWeekOfYear(TemporalAccessor temporal)", "private int localizedWeekBasedYear(TemporalAccessor temporal)", "private int localizedWeekOfWeekBasedYear(TemporalAccessor temporal)", "private int startOfWeekOffset(int day, int dow)", "private int computeWeek(int offset, int day)", "public R adjustInto(R temporal, long newValue)", "public ChronoLocalDate resolve(Map<TemporalField, Long> fieldValues, TemporalAccessor partialTemporal, ResolverStyle resolverStyle)", "private ChronoLocalDate resolveWoM(Map<TemporalField, Long> fieldValues, Chronology chrono, int year, long month, long wom, int localDow, ResolverStyle resolverStyle)", "private ChronoLocalDate resolveWoY(Map<TemporalField, Long> fieldValues, Chronology chrono, int year, long woy, int localDow, ResolverStyle resolverStyle)", "private ChronoLocalDate resolveWBY(Map<TemporalField, Long> fieldValues, Chronology chrono, int localDow, ResolverStyle resolverStyle)", "public String getDisplayName(Locale locale)", "public TemporalUnit getBaseUnit()", "public TemporalUnit getRangeUnit()", "public boolean isDateBased()", "public boolean isTimeBased()", "public ValueRange range()", "public boolean isSupportedBy(TemporalAccessor temporal)", "public ValueRange rangeRefinedBy(TemporalAccessor temporal)", "private ValueRange rangeByWeek(TemporalAccessor temporal, TemporalField field)", "private ValueRange rangeWeekOfWeekBasedYear(TemporalAccessor temporal)", "public String toString()" ],
  "variableNames" : [ "name", "weekDef", "baseUnit", "rangeUnit", "range", "DAY_OF_WEEK_RANGE", "WEEK_OF_MONTH_RANGE", "WEEK_OF_YEAR_RANGE", "WEEK_OF_WEEK_BASED_YEAR_RANGE" ]
}