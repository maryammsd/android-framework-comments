{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/ExpressionNode.java",
  "packageName" : "org.apache.xpath",
  "className" : "ExpressionNode",
  "comment" : "\n * A class that implements this interface can construct expressions, \n * give information about child and parent expressions,\n * and give the originating source information.  A class that implements \n * this interface does not lay any claim to being directly executable.\n * \n * <p>Note: This interface should not be considered stable.  Only exprSetParent \n * and exprGetParent can be counted on to work reliably.  Work in progress.</p>\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void exprSetParent(ExpressionNode n)",
    "returnType" : "void",
    "comment" : " This pair of methods are used to inform the node of its\n    parent. ",
    "links" : [ ]
  }, {
    "name" : "public ExpressionNode exprGetParent()",
    "returnType" : "ExpressionNode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void exprAddChild(ExpressionNode n, int i)",
    "returnType" : "void",
    "comment" : " This method tells the node to add its argument to the node's\n    list of children.  ",
    "links" : [ ]
  }, {
    "name" : "public ExpressionNode exprGetChild(int i)",
    "returnType" : "ExpressionNode",
    "comment" : " This method returns a child node.  The children are numbered\n     from zero, left to right. ",
    "links" : [ ]
  }, {
    "name" : "public int exprGetNumChildren()",
    "returnType" : "int",
    "comment" : " Return the number of children the node has. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void exprSetParent(ExpressionNode n)", "public ExpressionNode exprGetParent()", "public void exprAddChild(ExpressionNode n, int i)", "public ExpressionNode exprGetChild(int i)", "public int exprGetNumChildren()" ],
  "variableNames" : [ ]
}