{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/companion/BluetoothDeviceFilterUtils.java",
  "packageName" : "android.companion",
  "className" : "BluetoothDeviceFilterUtils",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static String patternToString(@Nullable Pattern p)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static Pattern patternFromString(@Nullable String s)",
    "returnType" : "Pattern",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean matchesAddress(String deviceAddress, BluetoothDevice device)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean matchesServiceUuids(List<ParcelUuid> serviceUuids, List<ParcelUuid> serviceUuidMasks, BluetoothDevice device)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean matchesServiceUuid(ParcelUuid serviceUuid, ParcelUuid serviceUuidMask, BluetoothDevice device)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean matchesName(@Nullable Pattern namePattern, BluetoothDevice device)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean matchesName(@Nullable Pattern namePattern, ScanResult device)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void debugLogMatchResult(boolean result, BluetoothDevice device, Object criteria)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void debugLogMatchResult(boolean result, ScanResult device, Object criteria)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String getDeviceDisplayNameInternal(@NonNull BluetoothDevice device)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String getDeviceDisplayNameInternal(@NonNull ScanResult device)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String getDeviceMacAddress(@NonNull Parcelable device)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean uuidsMaskedEquals(UUID data, UUID uuid, UUID mask)",
    "returnType" : "boolean",
    "comment" : "\n     * Compares two {@link #UUID} with a {@link #UUID} mask.\n     *\n     * @param data first {@link #UUID}.\n     * @param uuid second {@link #UUID}.\n     * @param mask mask {@link #UUID}.\n     * @return true if both UUIDs are equals when masked, false otherwise.\n     ",
    "links" : [ "#UUID" ]
  } ],
  "methodNames" : [ " static String patternToString(@Nullable Pattern p)", " static Pattern patternFromString(@Nullable String s)", " static boolean matchesAddress(String deviceAddress, BluetoothDevice device)", " static boolean matchesServiceUuids(List<ParcelUuid> serviceUuids, List<ParcelUuid> serviceUuidMasks, BluetoothDevice device)", " static boolean matchesServiceUuid(ParcelUuid serviceUuid, ParcelUuid serviceUuidMask, BluetoothDevice device)", " static boolean matchesName(@Nullable Pattern namePattern, BluetoothDevice device)", " static boolean matchesName(@Nullable Pattern namePattern, ScanResult device)", "private static void debugLogMatchResult(boolean result, BluetoothDevice device, Object criteria)", "private static void debugLogMatchResult(boolean result, ScanResult device, Object criteria)", "public static String getDeviceDisplayNameInternal(@NonNull BluetoothDevice device)", "public static String getDeviceDisplayNameInternal(@NonNull ScanResult device)", "public static String getDeviceMacAddress(@NonNull Parcelable device)", "public static boolean uuidsMaskedEquals(UUID data, UUID uuid, UUID mask)" ],
  "variableNames" : [ "DEBUG", "LOG_TAG" ]
}