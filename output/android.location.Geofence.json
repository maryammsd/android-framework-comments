{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/location/Geofence.java",
  "packageName" : "android.location",
  "className" : "Geofence",
  "comment" : "\n * Represents a geographical boundary, also known as a geofence.\n *\n * <p>Currently only circular geofences are supported and they do not support altitude changes.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TYPE_HORIZONTAL_CIRCLE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLatitude",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLongitude",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRadius",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<Geofence>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Geofence createCircle(double latitude, double longitude, float radius)",
    "returnType" : "Geofence",
    "comment" : "\n     * Create a circular geofence (on a flat, horizontal plane).\n     *\n     * @param latitude latitude in degrees, between -90 and +90 inclusive\n     * @param longitude longitude in degrees, between -180 and +180 inclusive\n     * @param radius radius in meters\n     * @return a new geofence\n     * @throws IllegalArgumentException if any parameters are out of range\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public double getLatitude()",
    "returnType" : "double",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public double getLongitude()",
    "returnType" : "double",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public float getRadius()",
    "returnType" : "float",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static void checkRadius(float radius)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkLatLong(double latitude, double longitude)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkType(int type)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String typeToString(int type)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * Two geofences are equal if they have identical properties.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TYPE_HORIZONTAL_CIRCLE", "mType", "mLatitude", "mLongitude", "mRadius", "CREATOR" ],
  "methodNames" : [ "public static Geofence createCircle(double latitude, double longitude, float radius)", "public int getType()", "public double getLatitude()", "public double getLongitude()", "public float getRadius()", "private static void checkRadius(float radius)", "private static void checkLatLong(double latitude, double longitude)", "private static void checkType(int type)", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)", "private static String typeToString(int type)", "public String toString()", "public int hashCode()", "public boolean equals(Object obj)" ]
}