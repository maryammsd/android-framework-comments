{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/Geofence.java",
  "packageName" : "android.location",
  "className" : "Geofence",
  "comment" : "\n * Represents a geographical boundary, also known as a geofence.\n *\n * <p>Currently only circular geofences are supported and they do not support altitude changes.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mLatitude",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLongitude",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRadius",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExpirationRealtimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<Geofence>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Geofence createCircle(double latitude, double longitude, float radius, long expirationRealtimeMs)",
    "returnType" : "Geofence",
    "comment" : "\n     * Create a circular geofence (on a flat, horizontal plane).\n     *\n     * @param latitude latitude in degrees, between -90 and +90 inclusive\n     * @param longitude longitude in degrees, between -180 and +180 inclusive\n     * @param radius radius in meters\n     * @return a new geofence\n     * @throws IllegalArgumentException if any parameters are out of range\n     ",
    "links" : [ ]
  }, {
    "name" : "public double getLatitude()",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public double getLongitude()",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getRadius()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isExpired()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isExpired(long referenceRealtimeMs)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if this geofence is expired with reference to the given realtime.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Geofence createCircle(double latitude, double longitude, float radius, long expirationRealtimeMs)", "public double getLatitude()", "public double getLongitude()", "public float getRadius()", "public boolean isExpired()", "public boolean isExpired(long referenceRealtimeMs)", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "mLatitude", "mLongitude", "mRadius", "mExpirationRealtimeMs", "CREATOR" ]
}