{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/TelephonyScanManager.java",
  "packageName" : "android.telephony",
  "className" : "TelephonyScanManager",
  "comment" : "\n * Manages the radio access network scan requests and callbacks.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SCAN_RESULT_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CALLBACK_SCAN_RESULTS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CALLBACK_SCAN_ERROR",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CALLBACK_SCAN_COMPLETE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CALLBACK_RESTRICTED_SCAN_RESULTS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "INVALID_SCAN_ID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mLooper",
    "type" : "Looper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessenger",
    "type" : "Messenger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScanInfo",
    "type" : "SparseArray<NetworkScanInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public NetworkScan requestNetworkScan(int subId, NetworkScanRequest request, Executor executor, NetworkScanCallback callback, String callingPackage, @Nullable String callingFeatureId)",
    "returnType" : "NetworkScan",
    "comment" : "\n     * Request a network scan.\n     *\n     * This method is asynchronous, so the network scan results will be returned by callback.\n     * The returned NetworkScan will contain a callback method which can be used to stop the scan.\n     *\n     * <p>\n     * Requires Permission:\n     * {@link android.Manifest.permission#ACCESS_COARSE_LOCATION} and\n     *   {@link android.Manifest.permission#MODIFY_PHONE_STATE MODIFY_PHONE_STATE}\n     * Or the calling app has carrier privileges. @see #hasCarrierPrivileges\n     *\n     * @param request Contains all the RAT with bands/channels that need to be scanned.\n     * @param callback Returns network scan results or errors.\n     * @param callingPackage The package name of the caller\n     * @param callingFeatureId The feature id inside of the calling package\n     * @return A NetworkScan obj which contains a callback which can stop the scan.\n     * @hide\n     ",
    "links" : [ "android.Manifest.permission#ACCESS_COARSE_LOCATION", "android.Manifest.permission#MODIFY_PHONE_STATE" ]
  }, {
    "name" : "private void saveScanInfo(int id, NetworkScanRequest request, Executor executor, NetworkScanCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ITelephony getITelephony()",
    "returnType" : "ITelephony",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "SCAN_RESULT_KEY", "CALLBACK_SCAN_RESULTS", "CALLBACK_SCAN_ERROR", "CALLBACK_SCAN_COMPLETE", "CALLBACK_RESTRICTED_SCAN_RESULTS", "INVALID_SCAN_ID", "mLooper", "mMessenger", "mScanInfo" ],
  "methodNames" : [ "public NetworkScan requestNetworkScan(int subId, NetworkScanRequest request, Executor executor, NetworkScanCallback callback, String callingPackage, @Nullable String callingFeatureId)", "private void saveScanInfo(int id, NetworkScanRequest request, Executor executor, NetworkScanCallback callback)", "private ITelephony getITelephony()" ]
}