{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/ccil/cowan/tagsoup/ScanHandler.java",
  "packageName" : "org.ccil.cowan.tagsoup",
  "className" : "ScanHandler",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void adup(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void aname(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void aval(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cdsect(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "\n\t  * Reports the content of a CDATA section (not a CDATA element)\n\t  ",
    "links" : [ ]
  }, {
    "name" : "public void decl(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void entity(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void eof(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void etag(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void gi(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void pcdata(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void pi(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void pitarget(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stagc(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stage(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cmnt(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getEntity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void adup(char[] buff, int offset, int length) throws SAXException", "public void aname(char[] buff, int offset, int length) throws SAXException", "public void aval(char[] buff, int offset, int length) throws SAXException", "public void cdsect(char[] buff, int offset, int length) throws SAXException", "public void decl(char[] buff, int offset, int length) throws SAXException", "public void entity(char[] buff, int offset, int length) throws SAXException", "public void eof(char[] buff, int offset, int length) throws SAXException", "public void etag(char[] buff, int offset, int length) throws SAXException", "public void gi(char[] buff, int offset, int length) throws SAXException", "public void pcdata(char[] buff, int offset, int length) throws SAXException", "public void pi(char[] buff, int offset, int length) throws SAXException", "public void pitarget(char[] buff, int offset, int length) throws SAXException", "public void stagc(char[] buff, int offset, int length) throws SAXException", "public void stage(char[] buff, int offset, int length) throws SAXException", "public void cmnt(char[] buff, int offset, int length) throws SAXException", "public int getEntity()" ],
  "variableNames" : [ ]
}