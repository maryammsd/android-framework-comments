{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/View.java",
  "packageName" : "android.view",
  "className" : "DragShadowBuilder",
  "comment" : "\n     * Creates an image that the system displays during the drag and drop\n     * operation. This is called a &quot;drag shadow&quot;. The default implementation\n     * for a DragShadowBuilder based on a View returns an image that has exactly the same\n     * appearance as the given View. The default also positions the center of the drag shadow\n     * directly under the touch point. If no View is provided (the constructor with no parameters\n     * is used), and {@link #onProvideShadowMetrics(Point,Point) onProvideShadowMetrics()} and\n     * {@link #onDrawShadow(Canvas) onDrawShadow()} are not overridden, then the\n     * default is an invisible drag shadow.\n     * <p>\n     * You are not required to use the View you provide to the constructor as the basis of the\n     * drag shadow. The {@link #onDrawShadow(Canvas) onDrawShadow()} method allows you to draw\n     * anything you want as the drag shadow.\n     * </p>\n     * <p>\n     *  You pass a DragShadowBuilder object to the system when you start the drag. The system\n     *  calls {@link #onProvideShadowMetrics(Point,Point) onProvideShadowMetrics()} to get the\n     *  size and position of the drag shadow. It uses this data to construct a\n     *  {@link android.graphics.Canvas} object, then it calls {@link #onDrawShadow(Canvas) onDrawShadow()}\n     *  so that your application can draw the shadow image in the Canvas.\n     * </p>\n     *\n     * <div class=\"special reference\">\n     * <h3>Developer Guides</h3>\n     * <p>For a guide to implementing drag and drop features, read the\n     * <a href=\"{@docRoot}guide/topics/ui/drag-drop.html\">Drag and Drop</a> developer guide.</p>\n     * </div>\n     ",
  "links" : [ "#onDrawShadow(Canvas)", "#onProvideShadowMetrics(Point", "android.graphics.Canvas" ],
  "variables" : [ {
    "name" : "mView",
    "type" : "WeakReference<View>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final View getView()",
    "returnType" : "View",
    "comment" : "\n         * Returns the View object that had been passed to the\n         * {@link #DragShadowBuilder(View)}\n         * constructor.  If that View parameter was {@code null} or if the\n         * {@link #DragShadowBuilder()}\n         * constructor was used to instantiate the builder object, this method will return\n         * null.\n         *\n         * @return The View object associate with this builder object.\n         ",
    "links" : [ "#DragShadowBuilder(View)", "#DragShadowBuilder()" ]
  }, {
    "name" : "public void onProvideShadowMetrics(Point outShadowSize, Point outShadowTouchPoint)",
    "returnType" : "void",
    "comment" : "\n         * Provides the metrics for the shadow image. These include the dimensions of\n         * the shadow image, and the point within that shadow that should\n         * be centered under the touch location while dragging.\n         * <p>\n         * The default implementation sets the dimensions of the shadow to be the\n         * same as the dimensions of the View itself and centers the shadow under\n         * the touch point.\n         * </p>\n         *\n         * @param outShadowSize A {@link android.graphics.Point} containing the width and height\n         * of the shadow image. Your application must set {@link android.graphics.Point#x} to the\n         * desired width and must set {@link android.graphics.Point#y} to the desired height of the\n         * image. Since Android P, the width and height must be positive values.\n         *\n         * @param outShadowTouchPoint A {@link android.graphics.Point} for the position within the\n         * shadow image that should be underneath the touch point during the drag and drop\n         * operation. Your application must set {@link android.graphics.Point#x} to the\n         * X coordinate and {@link android.graphics.Point#y} to the Y coordinate of this position.\n         ",
    "links" : [ "android.graphics.Point", "android.graphics.Point#y", "android.graphics.Point#x" ]
  }, {
    "name" : "public void onDrawShadow(@NonNull Canvas canvas)",
    "returnType" : "void",
    "comment" : "\n         * Draws the shadow image. The system creates the {@link android.graphics.Canvas} object\n         * based on the dimensions it received from the\n         * {@link #onProvideShadowMetrics(Point, Point)} callback.\n         *\n         * @param canvas A {@link android.graphics.Canvas} object in which to draw the shadow image.\n         ",
    "links" : [ "#onProvideShadowMetrics(Point", "android.graphics.Canvas" ]
  } ],
  "methodNames" : [ "public final View getView()", "public void onProvideShadowMetrics(Point outShadowSize, Point outShadowTouchPoint)", "public void onDrawShadow(@NonNull Canvas canvas)" ],
  "variableNames" : [ "mView" ]
}