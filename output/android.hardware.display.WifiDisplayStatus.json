{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/display/WifiDisplayStatus.java",
  "packageName" : "android.hardware.display",
  "className" : "WifiDisplayStatus",
  "comment" : "\n * Describes the current global state of Wifi display connectivity, including the\n * currently connected display and all available or remembered displays.\n * <p>\n * This object is immutable.\n * </p>\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mFeatureState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScanState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActiveDisplayState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActiveDisplay",
    "type" : "WifiDisplay",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplays",
    "type" : "WifiDisplay[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionInfo",
    "type" : "WifiDisplaySessionInfo",
    "comment" : " Session info needed for Miracast Certification ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_STATE_UNAVAILABLE",
    "type" : "int",
    "comment" : " Feature state: Wifi display is not available on this device. ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_STATE_DISABLED",
    "type" : "int",
    "comment" : " Feature state: Wifi display is disabled, probably because Wifi is disabled. ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_STATE_OFF",
    "type" : "int",
    "comment" : " Feature state: Wifi display is turned off in settings. ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_STATE_ON",
    "type" : "int",
    "comment" : " Feature state: Wifi display is turned on in settings. ",
    "links" : [ ]
  }, {
    "name" : "SCAN_STATE_NOT_SCANNING",
    "type" : "int",
    "comment" : " Scan state: Not currently scanning. ",
    "links" : [ ]
  }, {
    "name" : "SCAN_STATE_SCANNING",
    "type" : "int",
    "comment" : " Scan state: Currently scanning. ",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_STATE_NOT_CONNECTED",
    "type" : "int",
    "comment" : " Display state: Not connected. ",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_STATE_CONNECTING",
    "type" : "int",
    "comment" : " Display state: Connecting to active display. ",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_STATE_CONNECTED",
    "type" : "int",
    "comment" : " Display state: Connected to active display. ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WifiDisplayStatus>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getFeatureState()",
    "returnType" : "int",
    "comment" : "\n     * Returns the state of the Wifi display feature on this device.\n     * <p>\n     * The value of this property reflects whether the device supports the Wifi display,\n     * whether it has been enabled by the user and whether the prerequisites for\n     * connecting to displays have been met.\n     * </p>\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getScanState()",
    "returnType" : "int",
    "comment" : "\n     * Returns the current state of the Wifi display scan.\n     *\n     * @return One of: {@link #SCAN_STATE_NOT_SCANNING} or {@link #SCAN_STATE_SCANNING}.\n     ",
    "links" : [ "#SCAN_STATE_NOT_SCANNING", "#SCAN_STATE_SCANNING" ]
  }, {
    "name" : "public int getActiveDisplayState()",
    "returnType" : "int",
    "comment" : "\n     * Get the state of the currently active display.\n     *\n     * @return One of: {@link #DISPLAY_STATE_NOT_CONNECTED}, {@link #DISPLAY_STATE_CONNECTING},\n     * or {@link #DISPLAY_STATE_CONNECTED}.\n     ",
    "links" : [ "#DISPLAY_STATE_CONNECTING", "#DISPLAY_STATE_NOT_CONNECTED", "#DISPLAY_STATE_CONNECTED" ]
  }, {
    "name" : "public WifiDisplay getActiveDisplay()",
    "returnType" : "WifiDisplay",
    "comment" : "\n     * Gets the Wifi display that is currently active.  It may be connecting or\n     * connected.\n     ",
    "links" : [ ]
  }, {
    "name" : "public WifiDisplay[] getDisplays()",
    "returnType" : "WifiDisplay[]",
    "comment" : "\n     * Gets the list of Wifi displays, returns a combined list of all available\n     * Wifi displays as reported by the most recent scan, and all remembered\n     * Wifi displays (not necessarily available at the time).\n     ",
    "links" : [ ]
  }, {
    "name" : "public WifiDisplaySessionInfo getSessionInfo()",
    "returnType" : "WifiDisplaySessionInfo",
    "comment" : "\n     * Gets the Wifi display session info (required for certification only)\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " For debugging purposes only.",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getFeatureState()", "public int getScanState()", "public int getActiveDisplayState()", "public WifiDisplay getActiveDisplay()", "public WifiDisplay[] getDisplays()", "public WifiDisplaySessionInfo getSessionInfo()", "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()", "public String toString()" ],
  "variableNames" : [ "mFeatureState", "mScanState", "mActiveDisplayState", "mActiveDisplay", "mDisplays", "mSessionInfo", "FEATURE_STATE_UNAVAILABLE", "FEATURE_STATE_DISABLED", "FEATURE_STATE_OFF", "FEATURE_STATE_ON", "SCAN_STATE_NOT_SCANNING", "SCAN_STATE_SCANNING", "DISPLAY_STATE_NOT_CONNECTED", "DISPLAY_STATE_CONNECTING", "DISPLAY_STATE_CONNECTED", "CREATOR" ]
}