{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/processor/ProcessorCharacters.java",
  "packageName" : "org.apache.xalan.processor",
  "className" : "ProcessorCharacters",
  "comment" : "\n * This class processes character events for a XSLT template element.\n * @see <a href=\"http://www.w3.org/TR/xslt#dtd\">XSLT DTD</a>\n * @see <a href=\"http://www.w3.org/TR/xslt#section-Creating-the-Result-Tree\">section-Creating-the-Result-Tree in XSLT Specification</a>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_firstBackPointer",
    "type" : "Node",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_accumulator",
    "type" : "StringBuffer",
    "comment" : "\n   * Accumulate characters, until a non-whitespace event has\n   * occured.\n   ",
    "links" : [ ]
  }, {
    "name" : "m_xslTextElement",
    "type" : "ElemText",
    "comment" : "\n   * The xsl:text processor will call this to set a\n   * preserve space state.\n   ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void startNonText(StylesheetHandler handler) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Receive notification of the start of the non-text event.  This\n   * is sent to the current processor when any non-text event occurs.\n   *\n   * @param handler non-null reference to current StylesheetHandler that is constructing the Templates.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void characters(StylesheetHandler handler, char[] ch, int start, int length) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Receive notification of character data inside an element.\n   *\n   *\n   * @param handler non-null reference to current StylesheetHandler that is constructing the Templates.\n   * @param ch The characters.\n   * @param start The start position in the character array.\n   * @param length The number of characters to use from the\n   *               character array.\n   * @throws org.xml.sax.SAXException Any SAX exception, possibly\n   *            wrapping another exception.\n   * @see org.xml.sax.ContentHandler#characters\n   ",
    "links" : [ ]
  }, {
    "name" : "public void endElement(StylesheetHandler handler, String uri, String localName, String rawName) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Receive notification of the end of an element.\n   *\n   * @param handler The calling StylesheetHandler/TemplatesBuilder.\n   * @param uri The Namespace URI, or the empty string if the\n   *        element has no Namespace URI or if Namespace\n   *        processing is not being performed.\n   * @param localName The local name (without prefix), or the\n   *        empty string if Namespace processing is not being\n   *        performed.\n   * @param rawName The raw XML 1.0 name (with prefix), or the\n   *        empty string if raw names are not available.\n   * @see org.apache.xalan.processor.StylesheetHandler#startElement\n   * @see org.apache.xalan.processor.StylesheetHandler#endElement\n   * @see org.xml.sax.ContentHandler#startElement\n   * @see org.xml.sax.ContentHandler#endElement\n   * @see org.xml.sax.Attributes\n   ",
    "links" : [ ]
  }, {
    "name" : " void setXslTextElement(ElemText xslTextElement)",
    "returnType" : "void",
    "comment" : "\n   * Set the current setXslTextElement. The xsl:text \n   * processor will call this to set a preserve space state.\n   *\n   * @param xslTextElement The current xslTextElement that \n   *                       is preserving state, or null.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void startNonText(StylesheetHandler handler) throws org.xml.sax.SAXException", "public void characters(StylesheetHandler handler, char[] ch, int start, int length) throws org.xml.sax.SAXException", "public void endElement(StylesheetHandler handler, String uri, String localName, String rawName) throws org.xml.sax.SAXException", " void setXslTextElement(ElemText xslTextElement)" ],
  "variableNames" : [ "serialVersionUID", "m_firstBackPointer", "m_accumulator", "m_xslTextElement" ]
}