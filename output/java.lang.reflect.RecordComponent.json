{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/reflect/RecordComponent.java",
  "packageName" : "java.lang.reflect",
  "className" : "RecordComponent",
  "comment" : "\n * A {@code RecordComponent} provides information about, and dynamic access to, a\n * component of a record class.\n *\n * @see Class#getRecordComponents()\n * @see java.lang.Record\n * @jls 8.10 Record Classes\n * @since 16\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "clazz",
    "type" : "Class<?>",
    "comment" : " declaring class",
    "links" : [ ]
  }, {
    "name" : "name",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "type",
    "type" : "Class<?>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "accessor",
    "type" : "Method",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "signature",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "parent",
    "type" : "RecordComponents",
    "comment" : " Android-added: Add parent and selfIndex to read generic signature and annotations lazily.",
    "links" : [ ]
  }, {
    "name" : "selfIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "declaredAnnotations",
    "type" : "Map<Class<? extends Annotation>, Annotation>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of this record component.\n     *\n     * @return the name of this record component\n     ",
    "links" : [ ]
  }, {
    "name" : "public Class<?> getType()",
    "returnType" : "Class<?>",
    "comment" : "\n     * Returns a {@code Class} that identifies the declared type for this\n     * record component.\n     *\n     * @return a {@code Class} identifying the declared type of the component\n     * represented by this record component\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getGenericSignature()",
    "returnType" : "String",
    "comment" : "\n     * Returns a {@code String} that describes the generic type signature for\n     * this record component.\n     *\n     * @return a {@code String} that describes the generic type signature for\n     * this record component\n     *\n     * @jvms 4.7.9.1 Signatures\n     ",
    "links" : [ ]
  }, {
    "name" : "public Type getGenericType()",
    "returnType" : "Type",
    "comment" : "\n     * Returns a {@code Type} object that represents the declared type for\n     * this record component.\n     *\n     * <p>If the declared type of the record component is a parameterized type,\n     * the {@code Type} object returned reflects the actual type arguments used\n     * in the source code.\n     *\n     * <p>If the type of the underlying record component is a type variable or a\n     * parameterized type, it is created. Otherwise, it is resolved.\n     *\n     * @return a {@code Type} object that represents the declared type for\n     *         this record component\n     * @throws GenericSignatureFormatError if the generic record component\n     *         signature does not conform to the format specified in\n     *         <cite>The Java Virtual Machine Specification</cite>\n     * @throws TypeNotPresentException if the generic type\n     *         signature of the underlying record component refers to a non-existent\n     *         type declaration\n     * @throws MalformedParameterizedTypeException if the generic\n     *         signature of the underlying record component refers to a parameterized\n     *         type that cannot be instantiated for any reason\n     ",
    "links" : [ ]
  }, {
    "name" : "public Method getAccessor()",
    "returnType" : "Method",
    "comment" : "\n     * Returns a {@code Method} that represents the accessor for this record\n     * component.\n     *\n     * @return a {@code Method} that represents the accessor for this record\n     * component\n     ",
    "links" : [ ]
  }, {
    "name" : "public T getAnnotation(Class<T> annotationClass)",
    "returnType" : "T",
    "comment" : "\n     * {@inheritDoc}\n     * <p>Note that any annotation returned by this method is a\n     * declaration annotation.\n     * @throws NullPointerException {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "private Map<Class<? extends Annotation>, Annotation> declaredAnnotations()",
    "returnType" : "Map<Class<? extends Annotation>, Annotation>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Annotation[] getAnnotations()",
    "returnType" : "Annotation[]",
    "comment" : "\n     * {@inheritDoc}\n     * <p>Note that any annotations returned by this method are\n     * declaration annotations.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Annotation[] getDeclaredAnnotations()",
    "returnType" : "Annotation[]",
    "comment" : "\n     * {@inheritDoc}\n     * <p>Note that any annotations returned by this method are\n     * declaration annotations.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a string describing this record component. The format is\n     * the record component type, followed by a space, followed by the name\n     * of the record component.\n     * For example:\n     * <pre>\n     *    java.lang.String name\n     *    int age\n     * </pre>\n     *\n     * @return a string describing this record component\n     ",
    "links" : [ ]
  }, {
    "name" : "public Class<?> getDeclaringRecord()",
    "returnType" : "Class<?>",
    "comment" : "\n     * Returns the record class which declares this record component.\n     *\n     * @return The record class declaring this record component.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getName()", "public Class<?> getType()", "public String getGenericSignature()", "public Type getGenericType()", "public Method getAccessor()", "public T getAnnotation(Class<T> annotationClass)", "private Map<Class<? extends Annotation>, Annotation> declaredAnnotations()", "public Annotation[] getAnnotations()", "public Annotation[] getDeclaredAnnotations()", "public String toString()", "public Class<?> getDeclaringRecord()" ],
  "variableNames" : [ "clazz", "name", "type", "accessor", "signature", "parent", "selfIndex", "declaredAnnotations" ]
}