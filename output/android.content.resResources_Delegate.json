{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/res/Resources_Delegate.java",
  "packageName" : "android.content.res",
  "className" : "Resources_Delegate",
  "comment" : "",
  "variables" : [ {
    "name" : "sLayoutlibCallbacks",
    "type" : "WeakHashMap<Resources, LayoutlibCallback>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sContexts",
    "type" : "WeakHashMap<Resources, BridgeContext>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sDrawableCache",
    "type" : "LruCache<String, Drawable.ConstantState>",
    "comment" : " more long lived.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Resources initSystem(@NonNull BridgeContext context, @NonNull AssetManager assets, @NonNull DisplayMetrics metrics, @NonNull Configuration config, @NonNull LayoutlibCallback layoutlibCallback)",
    "returnType" : "Resources",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static BridgeContext getContext(@NonNull Resources resources)",
    "returnType" : "BridgeContext",
    "comment" : " Returns the {@link BridgeContext} associated to the given {@link Resources} ",
    "links" : [ "BridgeContext", "Resources" ]
  }, {
    "name" : "public static LayoutlibCallback getLayoutlibCallback(@NonNull Resources resources)",
    "returnType" : "LayoutlibCallback",
    "comment" : " Returns the {@link LayoutlibCallback} associated to the given {@link Resources} ",
    "links" : [ "LayoutlibCallback", "Resources" ]
  }, {
    "name" : "public static void disposeSystem()",
    "returnType" : "void",
    "comment" : "\n     * Disposes the static {@link Resources#mSystem} to make sure we don't leave objects around that\n     * would prevent us from unloading the library.\n     ",
    "links" : [ "Resources#mSystem" ]
  }, {
    "name" : "public static BridgeTypedArray newTypeArray(Resources resources, int numEntries)",
    "returnType" : "BridgeTypedArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ResourceReference getResourceInfo(Resources resources, int id)",
    "returnType" : "ResourceReference",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Pair<String, ResourceValue> getResourceValue(Resources resources, int id)",
    "returnType" : "Pair<String, ResourceValue>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static Drawable getDrawable(Resources resources, int id)",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static Drawable getDrawable(Resources resources, int id, Theme theme)",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getColor(Resources resources, int id)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getColor(Resources resources, int id, Theme theme) throws NotFoundException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static ColorStateList getColorStateList(Resources resources, int id) throws NotFoundException",
    "returnType" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static ColorStateList getColorStateList(Resources resources, int id, Theme theme) throws NotFoundException",
    "returnType" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static CharSequence getText(Resources resources, int id, CharSequence def)",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static CharSequence getText(Resources resources, int id) throws NotFoundException",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static CharSequence[] getTextArray(Resources resources, int id) throws NotFoundException",
    "returnType" : "CharSequence[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String[] getStringArray(Resources resources, int id) throws NotFoundException",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String[] resolveValues(@NonNull Resources resources, @NonNull ArrayResourceValue resValue)",
    "returnType" : "String[]",
    "comment" : "\n     * Resolves each element in resValue and returns an array of resolved values. The returned array\n     * may contain nulls.\n     ",
    "links" : [ ]
  }, {
    "name" : " static int[] getIntArray(Resources resources, int id) throws NotFoundException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ResourceValue getArrayResourceValue(Resources resources, int id) throws NotFoundException",
    "returnType" : "ResourceValue",
    "comment" : "\n     * Try to find the ArrayResourceValue for the given id.\n     * <p/>\n     * If the ResourceValue found is not of type {@link ResourceType#ARRAY}, the method logs an\n     * error and return null. However, if the ResourceValue found has type {@code\n     * ResourceType.ARRAY}, but the value is not an instance of {@link ArrayResourceValue}, the\n     * method returns the ResourceValue. This happens on older versions of the IDE, which did not\n     * parse the array resources properly.\n     * <p/>\n     *\n     * @throws NotFoundException if no resource if found\n     ",
    "links" : [ "ResourceType#ARRAY", "ArrayResourceValue" ]
  }, {
    "name" : "private static String resolveReference(@NonNull Resources resources, @Nullable String value, @NonNull ResourceNamespace contextNamespace, @NonNull ResourceNamespace.Resolver resolver)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String resolveReference(@NonNull Resources resources, @NonNull ResourceValue value)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static XmlResourceParser getLayout(Resources resources, int id) throws NotFoundException",
    "returnType" : "XmlResourceParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static XmlResourceParser getAnimation(Resources resources, int id) throws NotFoundException",
    "returnType" : "XmlResourceParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static TypedArray obtainAttributes(Resources resources, AttributeSet set, int[] attrs)",
    "returnType" : "TypedArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static TypedArray obtainAttributes(Resources resources, Resources.Theme theme, AttributeSet set, int[] attrs)",
    "returnType" : "TypedArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static TypedArray obtainTypedArray(Resources resources, int id) throws NotFoundException",
    "returnType" : "TypedArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float getDimension(Resources resources, int id) throws NotFoundException",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getDimensionPixelOffset(Resources resources, int id) throws NotFoundException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getDimensionPixelSize(Resources resources, int id) throws NotFoundException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getInteger(Resources resources, int id) throws NotFoundException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float getFloat(Resources resources, int id)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean getBoolean(Resources resources, int id) throws NotFoundException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getResourceEntryName(Resources resources, int resid) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getResourceName(Resources resources, int resid) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getResourcePackageName(Resources resources, int resid) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getResourceTypeName(Resources resources, int resid) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String getPackageName(ResourceReference resourceInfo, Resources resources)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getString(Resources resources, int id, Object... formatArgs) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getString(Resources resources, int id) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getQuantityString(Resources resources, int id, int quantity) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getQuantityString(Resources resources, int id, int quantity, Object... formatArgs) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static CharSequence getQuantityText(Resources resources, int id, int quantity) throws NotFoundException",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static Typeface getFont(Resources resources, int id) throws NotFoundException",
    "returnType" : "Typeface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static Typeface getFont(Resources resources, TypedValue outValue, int id) throws NotFoundException",
    "returnType" : "Typeface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void getValue(Resources resources, int id, TypedValue outValue, boolean resolveRefs) throws NotFoundException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ResourceValue getResourceValue(Resources resources, int id, TypedValue outValue) throws NotFoundException",
    "returnType" : "ResourceValue",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void getValue(Resources resources, String name, TypedValue outValue, boolean resolveRefs) throws NotFoundException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void getValueForDensity(Resources resources, int id, int density, TypedValue outValue, boolean resolveRefs) throws NotFoundException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getAttributeSetSourceResId(@Nullable AttributeSet set)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static XmlResourceParser getXml(Resources resources, int id) throws NotFoundException",
    "returnType" : "XmlResourceParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static XmlResourceParser loadXmlResourceParser(Resources resources, int id, String type) throws NotFoundException",
    "returnType" : "XmlResourceParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static XmlResourceParser loadXmlResourceParser(Resources resources, String file, int id, int assetCookie, String type) throws NotFoundException",
    "returnType" : "XmlResourceParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static InputStream openRawResource(Resources resources, int id) throws NotFoundException",
    "returnType" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static InputStream openRawResource(Resources resources, int id, TypedValue value) throws NotFoundException",
    "returnType" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static InputStream openRawResource(Resources resources, String path) throws NotFoundException",
    "returnType" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static AssetFileDescriptor openRawResourceFd(Resources resources, int id) throws NotFoundException",
    "returnType" : "AssetFileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static ResourceUrl resourceUrlFromName(@NonNull String name, @Nullable String defType, @Nullable String defPackage)",
    "returnType" : "ResourceUrl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getIdentifier(Resources resources, String name, String defType, String defPackage)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void throwException(Resources resources, int id, @Nullable String expectedType) throws NotFoundException",
    "returnType" : "void",
    "comment" : "\n     * Builds and throws a {@link Resources.NotFoundException} based on a resource id and a resource\n     * type.\n     *\n     * @param id the id of the resource\n     * @param expectedType the type of resource that was expected\n     *\n     * @throws NotFoundException\n     ",
    "links" : [ "Resources.NotFoundException" ]
  }, {
    "name" : "private static void throwException(Resources resources, int id) throws NotFoundException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void throwException(int id, @Nullable ResourceReference resourceInfo)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void throwException(int id, @Nullable ResourceReference resourceInfo, @Nullable String expectedType)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int getInt(String v) throws NumberFormatException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static AssetRepository getAssetRepository(Resources resources)",
    "returnType" : "AssetRepository",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "sLayoutlibCallbacks", "sContexts", "sDrawableCache" ],
  "methodNames" : [ "public static Resources initSystem(@NonNull BridgeContext context, @NonNull AssetManager assets, @NonNull DisplayMetrics metrics, @NonNull Configuration config, @NonNull LayoutlibCallback layoutlibCallback)", "public static BridgeContext getContext(@NonNull Resources resources)", "public static LayoutlibCallback getLayoutlibCallback(@NonNull Resources resources)", "public static void disposeSystem()", "public static BridgeTypedArray newTypeArray(Resources resources, int numEntries)", "private static ResourceReference getResourceInfo(Resources resources, int id)", "private static Pair<String, ResourceValue> getResourceValue(Resources resources, int id)", " static Drawable getDrawable(Resources resources, int id)", " static Drawable getDrawable(Resources resources, int id, Theme theme)", " static int getColor(Resources resources, int id)", " static int getColor(Resources resources, int id, Theme theme) throws NotFoundException", " static ColorStateList getColorStateList(Resources resources, int id) throws NotFoundException", " static ColorStateList getColorStateList(Resources resources, int id, Theme theme) throws NotFoundException", " static CharSequence getText(Resources resources, int id, CharSequence def)", " static CharSequence getText(Resources resources, int id) throws NotFoundException", " static CharSequence[] getTextArray(Resources resources, int id) throws NotFoundException", " static String[] getStringArray(Resources resources, int id) throws NotFoundException", " static String[] resolveValues(@NonNull Resources resources, @NonNull ArrayResourceValue resValue)", " static int[] getIntArray(Resources resources, int id) throws NotFoundException", "private static ResourceValue getArrayResourceValue(Resources resources, int id) throws NotFoundException", "private static String resolveReference(@NonNull Resources resources, @Nullable String value, @NonNull ResourceNamespace contextNamespace, @NonNull ResourceNamespace.Resolver resolver)", "private static String resolveReference(@NonNull Resources resources, @NonNull ResourceValue value)", " static XmlResourceParser getLayout(Resources resources, int id) throws NotFoundException", " static XmlResourceParser getAnimation(Resources resources, int id) throws NotFoundException", " static TypedArray obtainAttributes(Resources resources, AttributeSet set, int[] attrs)", " static TypedArray obtainAttributes(Resources resources, Resources.Theme theme, AttributeSet set, int[] attrs)", " static TypedArray obtainTypedArray(Resources resources, int id) throws NotFoundException", " static float getDimension(Resources resources, int id) throws NotFoundException", " static int getDimensionPixelOffset(Resources resources, int id) throws NotFoundException", " static int getDimensionPixelSize(Resources resources, int id) throws NotFoundException", " static int getInteger(Resources resources, int id) throws NotFoundException", " static float getFloat(Resources resources, int id)", " static boolean getBoolean(Resources resources, int id) throws NotFoundException", " static String getResourceEntryName(Resources resources, int resid) throws NotFoundException", " static String getResourceName(Resources resources, int resid) throws NotFoundException", " static String getResourcePackageName(Resources resources, int resid) throws NotFoundException", " static String getResourceTypeName(Resources resources, int resid) throws NotFoundException", "private static String getPackageName(ResourceReference resourceInfo, Resources resources)", " static String getString(Resources resources, int id, Object... formatArgs) throws NotFoundException", " static String getString(Resources resources, int id) throws NotFoundException", " static String getQuantityString(Resources resources, int id, int quantity) throws NotFoundException", " static String getQuantityString(Resources resources, int id, int quantity, Object... formatArgs) throws NotFoundException", " static CharSequence getQuantityText(Resources resources, int id, int quantity) throws NotFoundException", " static Typeface getFont(Resources resources, int id) throws NotFoundException", " static Typeface getFont(Resources resources, TypedValue outValue, int id) throws NotFoundException", " static void getValue(Resources resources, int id, TypedValue outValue, boolean resolveRefs) throws NotFoundException", "private static ResourceValue getResourceValue(Resources resources, int id, TypedValue outValue) throws NotFoundException", " static void getValue(Resources resources, String name, TypedValue outValue, boolean resolveRefs) throws NotFoundException", " static void getValueForDensity(Resources resources, int id, int density, TypedValue outValue, boolean resolveRefs) throws NotFoundException", " static int getAttributeSetSourceResId(@Nullable AttributeSet set)", " static XmlResourceParser getXml(Resources resources, int id) throws NotFoundException", " static XmlResourceParser loadXmlResourceParser(Resources resources, int id, String type) throws NotFoundException", " static XmlResourceParser loadXmlResourceParser(Resources resources, String file, int id, int assetCookie, String type) throws NotFoundException", " static InputStream openRawResource(Resources resources, int id) throws NotFoundException", " static InputStream openRawResource(Resources resources, int id, TypedValue value) throws NotFoundException", "private static InputStream openRawResource(Resources resources, String path) throws NotFoundException", " static AssetFileDescriptor openRawResourceFd(Resources resources, int id) throws NotFoundException", " static ResourceUrl resourceUrlFromName(@NonNull String name, @Nullable String defType, @Nullable String defPackage)", " static int getIdentifier(Resources resources, String name, String defType, String defPackage)", "private static void throwException(Resources resources, int id, @Nullable String expectedType) throws NotFoundException", "private static void throwException(Resources resources, int id) throws NotFoundException", "private static void throwException(int id, @Nullable ResourceReference resourceInfo)", "private static void throwException(int id, @Nullable ResourceReference resourceInfo, @Nullable String expectedType)", "private static int getInt(String v) throws NumberFormatException", "private static AssetRepository getAssetRepository(Resources resources)" ]
}