{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/ReplaceableContextIterator.java",
  "packageName" : "android.icu.text",
  "className" : "ReplaceableContextIterator",
  "comment" : "\n * Implementation of UCaseProps.ContextIterator, iterates over a Replaceable.\n * See casetrn.cpp/utrans_rep_caseContextIterator().\n * See also UCharacter.StringContextIterator.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "rep",
    "type" : "Replaceable",
    "comment" : " variables",
    "links" : [ ]
  }, {
    "name" : "index",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "limit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cpStart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cpLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "contextStart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "contextLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dir",
    "type" : "int",
    "comment" : " 0=initial state  >0=forward  <0=backward",
    "links" : [ ]
  }, {
    "name" : "reachedLimit",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setText(Replaceable rep)",
    "returnType" : "void",
    "comment" : "\n     * Set the text for iteration.\n     * @param rep Iteration text.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIndex(int index)",
    "returnType" : "void",
    "comment" : "\n     * Set the index where nextCaseMapCP() is to start iterating.\n     * @param index Iteration start index for nextCaseMapCP().\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCaseMapCPStart()",
    "returnType" : "int",
    "comment" : "\n     * Get the index of where the code point currently being case-mapped starts.\n     * @return The start index of the current code point.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setLimit(int lim)",
    "returnType" : "void",
    "comment" : "\n     * Set the iteration limit for nextCaseMapCP() to an index within the string.\n     * If the limit parameter is negative or past the string, then the\n     * string length is restored as the iteration limit.\n     *\n     * @param lim The iteration limit.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setContextLimits(int contextStart, int contextLimit)",
    "returnType" : "void",
    "comment" : "\n     * Set the start and limit indexes for context iteration with next().\n     * @param contextStart Start of context for next().\n     * @param contextLimit Limit of context for next().\n     ",
    "links" : [ ]
  }, {
    "name" : "public int nextCaseMapCP()",
    "returnType" : "int",
    "comment" : "\n     * Iterate forward through the string to fetch the next code point\n     * to be case-mapped, and set the context indexes for it.\n     *\n     * @return The next code point to be case-mapped, or <0 when the iteration is done.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int replace(String text)",
    "returnType" : "int",
    "comment" : "\n     * Replace the current code point by its case mapping,\n     * and update the indexes.\n     *\n     * @param text Replacement text.\n     * @return The delta for the change of the text length.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean didReachLimit()",
    "returnType" : "boolean",
    "comment" : "\n     * Did forward context iteration with next() reach the iteration limit?\n     * @return Boolean value.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reset(int direction)",
    "returnType" : "void",
    "comment" : " implement UCaseProps.ContextIterator",
    "links" : [ ]
  }, {
    "name" : "public int next()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setText(Replaceable rep)", "public void setIndex(int index)", "public int getCaseMapCPStart()", "public void setLimit(int lim)", "public void setContextLimits(int contextStart, int contextLimit)", "public int nextCaseMapCP()", "public int replace(String text)", "public boolean didReachLimit()", "public void reset(int direction)", "public int next()" ],
  "variableNames" : [ "rep", "index", "limit", "cpStart", "cpLimit", "contextStart", "contextLimit", "dir", "reachedLimit" ]
}