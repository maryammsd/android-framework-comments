{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/AnyTransliterator.java",
  "packageName" : "android.icu.text",
  "className" : "AnyTransliterator",
  "comment" : "\n * A transliterator that translates multiple input scripts to a single\n * output script.  It is named Any-T or Any-T/V, where T is the target\n * and V is the optional variant.  The target T is a script.\n *\n * <p>An AnyTransliterator partitions text into runs of the same\n * script, together with adjacent COMMON or INHERITED characters.\n * After determining the script of each run, it transliterates from\n * that script to the given target/variant.  It does so by\n * instantiating a transliterator from the source script to the\n * target/variant.  If a run consists only of the target script,\n * COMMON, or INHERITED characters, then the run is not changed.\n *\n * <p>At startup, all possible AnyTransliterators are registered with\n * the system, as determined by examining the registered script\n * transliterators.\n *\n * @author Alan Liu\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TARGET_SEP",
    "type" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VARIANT_SEP",
    "type" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NULL_ID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LATIN_PIVOT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cache",
    "type" : "ConcurrentHashMap<Integer, Transliterator>",
    "comment" : "\n     * Cache mapping UScriptCode values to Transliterator*.\n     ",
    "links" : [ ]
  }, {
    "name" : "target",
    "type" : "String",
    "comment" : "\n     * The target or target/variant string.\n     ",
    "links" : [ ]
  }, {
    "name" : "targetScript",
    "type" : "int",
    "comment" : "\n     * The target script code.  Never USCRIPT_INVALID_CODE.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void handleTransliterate(Replaceable text, Position pos, boolean isIncremental)",
    "returnType" : "void",
    "comment" : "\n     * Implements {@link Transliterator#handleTransliterate}.\n     ",
    "links" : [ "android.icu.text.Transliterator#handleTransliterate" ]
  }, {
    "name" : "private Transliterator getTransliterator(int source)",
    "returnType" : "Transliterator",
    "comment" : "\n     * Returns a transliterator from the given source to our target or\n     * target/variant.  Returns NULL if the source is the same as our\n     * target script, or if the source is USCRIPT_INVALID_CODE.\n     * Caches the result and returns the same transliterator the next\n     * time.  The caller does NOT own the result and must not delete\n     * it.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean isWide(int script)",
    "returnType" : "boolean",
    "comment" : "\n     * @param targetScript2\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : " static void register()",
    "returnType" : "void",
    "comment" : "\n     * Registers standard transliterators with the system.  Called by\n     * Transliterator during initialization.  Scan all current targets\n     * and register those that are scripts T as Any-T/V.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int scriptNameToCode(String name)",
    "returnType" : "int",
    "comment" : "\n     * Return the script code for a given name, or\n     * UScript.INVALID_CODE if not found.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Transliterator safeClone()",
    "returnType" : "Transliterator",
    "comment" : "\n     * Temporary hack for registry problem. Needs to be replaced by better architecture.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addSourceTargetSet(UnicodeSet inputFilter, UnicodeSet sourceSet, UnicodeSet targetSet)",
    "returnType" : "void",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.Transliterator#addSourceTargetSet(android.icu.text.UnicodeSet, android.icu.text.UnicodeSet, android.icu.text.UnicodeSet)\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected void handleTransliterate(Replaceable text, Position pos, boolean isIncremental)", "private Transliterator getTransliterator(int source)", "private boolean isWide(int script)", " static void register()", "private static int scriptNameToCode(String name)", "public Transliterator safeClone()", "public void addSourceTargetSet(UnicodeSet inputFilter, UnicodeSet sourceSet, UnicodeSet targetSet)" ],
  "variableNames" : [ "TARGET_SEP", "VARIANT_SEP", "ANY", "NULL_ID", "LATIN_PIVOT", "cache", "target", "targetScript" ]
}