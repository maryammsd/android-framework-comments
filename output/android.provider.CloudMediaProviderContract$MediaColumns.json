{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/CloudMediaProviderContract.java",
  "packageName" : "android.provider",
  "className" : "MediaColumns",
  "comment" : " Constants related to a media item, including {@link Cursor} column names ",
  "links" : [ "android.database.Cursor" ],
  "variables" : [ {
    "name" : "ID",
    "type" : "String",
    "comment" : "\n         * Unique ID of a media item. This ID is both provided by and interpreted\n         * by a {@link CloudMediaProvider}, and should be treated as an opaque\n         * value by client applications.\n         *\n         * <p>\n         * Each media item must have a unique ID within a provider.\n         *\n         * <p>\n         * A provider must always return stable IDs, since they will be used to\n         * issue long-term URI permission grants when an application interacts\n         * with {@link MediaStore#ACTION_PICK_IMAGES}.\n         * <p>\n         * Type: STRING\n         ",
    "links" : [ "android.provider.CloudMediaProvider", "android.provider.MediaStore#ACTION_PICK_IMAGES" ]
  }, {
    "name" : "DATE_TAKEN_MILLIS",
    "type" : "String",
    "comment" : "\n         * Timestamp when a media item was capture, in milliseconds since\n         * January 1, 1970 00:00:00.0 UTC.\n         * <p>\n         * Implementations should extract this data from the metadata embedded in the media\n         * file. If this information is not available, a reasonable heuristic can be used, e.g.\n         * the time the media file was added to the media collection.\n         * <p>\n         * Type: LONG\n         *\n         * @see CloudMediaProviderContract.AlbumColumns#DATE_TAKEN_MILLIS\n         * @see System#currentTimeMillis()\n         ",
    "links" : [ ]
  }, {
    "name" : "SYNC_GENERATION",
    "type" : "String",
    "comment" : "\n         * Non-negative number associated with a media item indicating what generation or batch the\n         * media item was synced into the media collection.\n         * <p>\n         * Providers should associate a monotonically increasing sync generation number to each\n         * media item which is expected to increase for each atomic modification on the media item.\n         * This is useful for the OS to quickly identify that a media item has changed since a\n         * previous point in time. Note that this does not need to be unique across all media items,\n         * i.e. multiple media items can have the same SYNC_GENERATION value. However, the\n         * modification of a media item should increase the\n         * {@link MediaCollectionInfo#LAST_MEDIA_SYNC_GENERATION}.\n         * <p>\n         * Type: LONG\n         *\n         * @see MediaCollectionInfo#LAST_MEDIA_SYNC_GENERATION\n         ",
    "links" : [ "#LAST_MEDIA_SYNC_GENERATION" ]
  }, {
    "name" : "MIME_TYPE",
    "type" : "String",
    "comment" : "\n         * Concrete MIME type of a media file. For example, \"image/png\" or\n         * \"video/mp4\".\n         * <p>\n         * Type: STRING\n         ",
    "links" : [ ]
  }, {
    "name" : "STANDARD_MIME_TYPE_EXTENSION",
    "type" : "String",
    "comment" : "\n         * Mime-type extension representing special format for a media item.\n         *\n         * Photo Picker requires special format tagging for media items.\n         * This is essential as media items can have various formats like\n         * Motion Photos, GIFs etc, which are not identifiable by\n         * {@link #MIME_TYPE}.\n         * <p>\n         * Type: INTEGER\n         ",
    "links" : [ "#MIME_TYPE" ]
  }, {
    "name" : "STANDARD_MIME_TYPE_EXTENSION_NONE",
    "type" : "int",
    "comment" : "\n         * Constant for the {@link #STANDARD_MIME_TYPE_EXTENSION} column indicating\n         * that the media item doesn't have any special format associated with it.\n         ",
    "links" : [ "#STANDARD_MIME_TYPE_EXTENSION" ]
  }, {
    "name" : "STANDARD_MIME_TYPE_EXTENSION_GIF",
    "type" : "int",
    "comment" : "\n         * Constant for the {@link #STANDARD_MIME_TYPE_EXTENSION} column indicating\n         * that the media item is a GIF.\n         ",
    "links" : [ "#STANDARD_MIME_TYPE_EXTENSION" ]
  }, {
    "name" : "STANDARD_MIME_TYPE_EXTENSION_MOTION_PHOTO",
    "type" : "int",
    "comment" : "\n         * Constant for the {@link #STANDARD_MIME_TYPE_EXTENSION} column indicating\n         * that the media item is a Motion Photo.\n         ",
    "links" : [ "#STANDARD_MIME_TYPE_EXTENSION" ]
  }, {
    "name" : "STANDARD_MIME_TYPE_EXTENSION_ANIMATED_WEBP",
    "type" : "int",
    "comment" : "\n         * Constant for the {@link #STANDARD_MIME_TYPE_EXTENSION} column indicating\n         * that the media item is an Animated Webp.\n         ",
    "links" : [ "#STANDARD_MIME_TYPE_EXTENSION" ]
  }, {
    "name" : "SIZE_BYTES",
    "type" : "String",
    "comment" : "\n         * Size of a media file, in bytes.\n         * <p>\n         * Type: LONG\n         ",
    "links" : [ ]
  }, {
    "name" : "MEDIA_STORE_URI",
    "type" : "String",
    "comment" : "\n         * {@link MediaStore} URI of a media file if the file is available locally on the device.\n         * <p>\n         * If it's a cloud-only media file, this field should not be set.\n         * Any of the following URIs can be used: {@link MediaStore.Files},\n         * {@link MediaStore.Images} or {@link MediaStore.Video} e.g.\n         * {@code content://media/file/45}.\n         * <p>\n         * Implementations don't need to handle the {@link MediaStore} URI becoming invalid after\n         * the local item has been deleted or modified. If the URI becomes invalid or the\n         * local and cloud file content diverges, the OS will treat the cloud media item as a\n         * cloud-only item.\n         * <p>\n         * Type: STRING\n         ",
    "links" : [ "MediaStore.Files", "android.provider.MediaStore", "MediaStore.Video", "MediaStore.Images" ]
  }, {
    "name" : "DURATION_MILLIS",
    "type" : "String",
    "comment" : "\n         * Duration of a video file in ms. If the file is an image for which duration is not\n         * applicable, this field can be left empty or set to {@code zero}.\n         * <p>\n         * Type: LONG\n         ",
    "links" : [ ]
  }, {
    "name" : "IS_FAVORITE",
    "type" : "String",
    "comment" : "\n         * Whether the item has been favourited in the media collection. If {@code non-zero}, this\n         * media item will appear in the favourites category in the Photo Picker.\n         * <p>\n         * Type: INTEGER\n         ",
    "links" : [ ]
  }, {
    "name" : "WIDTH",
    "type" : "String",
    "comment" : "\n         * This column contains the width of the image or video.\n         ",
    "links" : [ ]
  }, {
    "name" : "HEIGHT",
    "type" : "String",
    "comment" : "\n         * This column contains the height of the image or video.\n         ",
    "links" : [ ]
  }, {
    "name" : "ORIENTATION",
    "type" : "String",
    "comment" : "\n         * This column contains the orientation, if available.\n         * <p>\n         * For consistency the indexed value is expressed in degrees, such as 0,\n         * 90, 180, or 270.\n         ",
    "links" : [ ]
  }, {
    "name" : "AUTHORITY",
    "type" : "String",
    "comment" : "\n         * Authority of the media item\n         * <p>\n         * Type: STRING\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DATA",
    "type" : "String",
    "comment" : "\n         * File path of the media item\n         * <p>\n         * Type: STRING\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ALL_PROJECTION",
    "type" : "String[]",
    "comment" : "\n         * Array of all {@link MediaColumn} fields.\n         *\n         * @hide\n         ",
    "links" : [ "MediaColumn" ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "ID", "DATE_TAKEN_MILLIS", "SYNC_GENERATION", "MIME_TYPE", "STANDARD_MIME_TYPE_EXTENSION", "STANDARD_MIME_TYPE_EXTENSION_NONE", "STANDARD_MIME_TYPE_EXTENSION_GIF", "STANDARD_MIME_TYPE_EXTENSION_MOTION_PHOTO", "STANDARD_MIME_TYPE_EXTENSION_ANIMATED_WEBP", "SIZE_BYTES", "MEDIA_STORE_URI", "DURATION_MILLIS", "IS_FAVORITE", "WIDTH", "HEIGHT", "ORIENTATION", "AUTHORITY", "DATA", "ALL_PROJECTION" ]
}