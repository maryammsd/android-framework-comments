{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/BasicTimeZone.java",
  "packageName" : "android.icu.util",
  "className" : "BasicTimeZone",
  "comment" : "\n * <strong>[icu]</strong> BasicTimeZone extends <code>TimeZone</code> with additional methods to access\n * time zone transitions and rules.  All ICU <code>TimeZone</code> concrete subclasses\n * extend this class. APIs added to <code>java.util.TimeZone</code> by\n * <code>BasicTimeZone</code> are annotated with <strong>'<font\n * style=\"color:red\">[icu]</font>'</strong>.\n *\n * @see android.icu.util.TimeZoneRule\n * @see android.icu.util.TimeZoneTransition\n *\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MILLIS_PER_YEAR",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOCAL_STD",
    "type" : "int",
    "comment" : "\n     * The time type option for standard time used by internal implementation.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "LOCAL_DST",
    "type" : "int",
    "comment" : "\n     * The time type option for daylight saving time used internally.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "LOCAL_FORMER",
    "type" : "int",
    "comment" : "\n     * The option designate former time used by internal implementation.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "LOCAL_LATTER",
    "type" : "int",
    "comment" : "\n     * The option designate latter time used by internal implementation.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "STD_DST_MASK",
    "type" : "int",
    "comment" : "\n     * The bit mask for the time type option used by internal implementation.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "FORMER_LATTER_MASK",
    "type" : "int",
    "comment" : "\n     * The bit mask for the former/latter option used by internal implementation.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract TimeZoneTransition getNextTransition(long base, boolean inclusive)",
    "returnType" : "TimeZoneTransition",
    "comment" : "\n     * <strong>[icu]</strong> Returns the first time zone transition after the base time.\n     * <p>Example code:{{@literal @}.jcite  android.icu.samples.util.timezone.BasicTimeZoneExample:---getNextTransitionExample}\n     *\n     * @param base      The base time.\n     * @param inclusive Whether the base time is inclusive or not.\n     *\n     * @return  A <code>Date</code> holding the first time zone transition time\n     *          after the given base time, or null if no time zone transitions\n     *          are available after the base time.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract TimeZoneTransition getPreviousTransition(long base, boolean inclusive)",
    "returnType" : "TimeZoneTransition",
    "comment" : "\n     * <strong>[icu]</strong> Returns the last time zone transition before the base time.\n     * <p>Example code:{{@literal @}.jcite  android.icu.samples.util.timezone.BasicTimeZoneExample:---getPreviousTransitionExample}\n     *\n     * @param base      The base time.\n     * @param inclusive Whether the base time is inclusive or not.\n     *\n     * @return  A <code>Date</code> holding the last time zone transition time\n     *          before the given base time, or null if no time zone transitions\n     *          are available before the base time.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasEquivalentTransitions(TimeZone tz, long start, long end)",
    "returnType" : "boolean",
    "comment" : "\n     * <strong>[icu]</strong> Checks if the time zone has equivalent transitions in the time range.\n     * This method returns true when all of transition times, from/to standard\n     * offsets and DST savings used by this time zone match the other in the\n     * time range.\n     * <p>Example code:{{@literal @}.jcite  android.icu.samples.util.timezone.BasicTimeZoneExample:---hasEquivalentTransitionsExample}\n     *\n     * @param tz    The instance of <code>TimeZone</code>\n     * @param start The start time of the evaluated time range (inclusive)\n     * @param end   The end time of the evaluated time range (inclusive)\n     *\n     * @return true if the other time zone has the equivalent transitions in the\n     * time range.  When tz is not a <code>BasicTimeZone</code>, this method\n     * returns false.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasEquivalentTransitions(TimeZone tz, long start, long end, boolean ignoreDstAmount)",
    "returnType" : "boolean",
    "comment" : "\n     * <strong>[icu]</strong> Checks if the time zone has equivalent transitions in the time range.\n     * This method returns true when all of transition times, from/to standard\n     * offsets and DST savings used by this time zone match the other in the\n     * time range.\n     *\n     * @param tz    The instance of <code>TimeZone</code>\n     * @param start The start time of the evaluated time range (inclusive)\n     * @param end   The end time of the evaluated time range (inclusive)\n     * @param ignoreDstAmount When true, any transitions with only daylight saving amount\n     * changes will be ignored, except either of them is zero. For example, a transition\n     * from rawoffset 3:00/dstsavings 1:00 to rawoffset 2:00/dstsavings 2:00 is excluded\n     * from the comparison, but a transition from rawoffset 2:00/dstsavings 1:00 to\n     * rawoffset 3:00/dstsavings 0:00 is included.\n     *\n     * @return true if the other time zone has the equivalent transitions in the\n     * time range.  When tz is not a <code>BasicTimeZone</code>, this method\n     * returns false.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract TimeZoneRule[] getTimeZoneRules()",
    "returnType" : "TimeZoneRule[]",
    "comment" : "\n     * <strong>[icu]</strong> Returns the array of <code>TimeZoneRule</code> which represents the rule\n     * of this time zone object.  The first element in the result array will\n     * be the <code>InitialTimeZoneRule</code> instance for the initial rule.\n     * The rest will be either <code>AnnualTimeZoneRule</code> or\n     * <code>TimeArrayTimeZoneRule</code> instances representing transitions.\n     *\n     * @return  The array of <code>TimeZoneRule</code> which represents this\n     *          time zone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public TimeZoneRule[] getTimeZoneRules(long start)",
    "returnType" : "TimeZoneRule[]",
    "comment" : "\n     * <strong>[icu]</strong> Returns the array of <code>TimeZoneRule</code> which represents the rule\n     * of this time zone object since the specified start time.  The first\n     * element in the result array will be the <code>InitialTimeZoneRule</code>\n     * instance for the initial rule.  The rest will be either\n     * <code>AnnualTimeZoneRule</code> or <code>TimeArrayTimeZoneRule</code>\n     * instances representing transitions.\n     * <p>Example code:{{@literal @}.jcite  android.icu.samples.util.timezone.BasicTimeZoneExample:---getTimeZoneRulesExample}\n     *\n     * @param start The start time (inclusive).\n     * @return  The array of <code>TimeZoneRule</code> which represents this\n     *          time zone since the start time.\n     ",
    "links" : [ ]
  }, {
    "name" : "public TimeZoneRule[] getSimpleTimeZoneRulesNear(long date)",
    "returnType" : "TimeZoneRule[]",
    "comment" : "\n     * <strong>[icu]</strong> Returns the array of <code>TimeZoneRule</code> which represents the rule of\n     * this time zone object near the specified date.  Some applications are not\n     * capable to handle historic time zone rule changes.  Also some applications\n     * can only handle certain type of rule definitions.  This method returns\n     * either a single <code>InitialTimeZoneRule</code> if this time zone does not\n     * have any daylight saving time within 1 year from the specified time, or a\n     * pair of <code>AnnualTimeZoneRule</code> whose rule type is\n     * <code>DateTimeRule.DOW</code> for date and <code>DateTimeRule.WALL_TIME</code>\n     * for time with a single <code>InitialTimeZoneRule</code> representing the\n     * initial time, when this time zone observes daylight saving time near the\n     * specified date.  Thus, the result may be only valid for dates around the\n     * specified date.\n     *\n     * @param date The date to be used for <code>TimeZoneRule</code> extraction.\n     * @return The array of <code>TimeZoneRule</code>, either a single\n     * <code>InitialTimeZoneRule</code> object, or a pair of <code>AnnualTimeZoneRule</code>\n     * with a single <code>InitialTimeZoneRule</code>.  The first element in the\n     * array is always a <code>InitialTimeZoneRule</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected static int getLocalOptionValue(LocalOption locOpt)",
    "returnType" : "int",
    "comment" : "\n     * Get {@link LocalOption}'s internal flag value. This is used by ICU internal\n     * implementation only.\n     * @param locOpt    A LocalOption\n     * @return LocalOption's internal flag value.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ "LocalOption" ]
  }, {
    "name" : "public void getOffsetFromLocal(long date, LocalOption nonExistingTimeOpt, LocalOption duplicatedTimeOpt, int[] offsets)",
    "returnType" : "void",
    "comment" : "\n     * <strong>[icu]</strong> Returns time zone offsets from local wall time.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract TimeZoneTransition getNextTransition(long base, boolean inclusive)", "public abstract TimeZoneTransition getPreviousTransition(long base, boolean inclusive)", "public boolean hasEquivalentTransitions(TimeZone tz, long start, long end)", "public boolean hasEquivalentTransitions(TimeZone tz, long start, long end, boolean ignoreDstAmount)", "public abstract TimeZoneRule[] getTimeZoneRules()", "public TimeZoneRule[] getTimeZoneRules(long start)", "public TimeZoneRule[] getSimpleTimeZoneRulesNear(long date)", "protected static int getLocalOptionValue(LocalOption locOpt)", "public void getOffsetFromLocal(long date, LocalOption nonExistingTimeOpt, LocalOption duplicatedTimeOpt, int[] offsets)" ],
  "variableNames" : [ "serialVersionUID", "MILLIS_PER_YEAR", "LOCAL_STD", "LOCAL_DST", "LOCAL_FORMER", "LOCAL_LATTER", "STD_DST_MASK", "FORMER_LATTER_MASK" ]
}