{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/ResultReceiver.java",
  "packageName" : "android.os",
  "className" : "ResultReceiver",
  "comment" : "\n * Generic interface for receiving a callback result from someone.  Use this\n * by creating a subclass and implement {@link #onReceiveResult}, which you can\n * then pass to others and send through IPC, and receive results they\n * supply with {@link #send}.\n *\n * <p>Note: the implementation underneath is just a simple wrapper around\n * a {@link Binder} that is used to perform the communication.  This means\n * semantically you should treat it as such: this class does not impact process\n * lifecycle management (you must be using some higher-level component to tell\n * the system that your process needs to continue running), the connection will\n * break if your process goes away for any reason, etc.</p>\n ",
  "variables" : [ {
    "name" : "mLocal",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReceiver",
    "type" : "IResultReceiver",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ResultReceiver>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void send(int resultCode, Bundle resultData)",
    "returnType" : "void",
    "comment" : "\n     * Deliver a result to this receiver.  Will call {@link #onReceiveResult},\n     * always asynchronously if the receiver has supplied a Handler in which\n     * to dispatch the result.\n     * @param resultCode Arbitrary result code to deliver, as defined by you.\n     * @param resultData Any additional data provided by you.\n     ",
    "links" : [ "#onReceiveResult" ]
  }, {
    "name" : "protected void onReceiveResult(int resultCode, Bundle resultData)",
    "returnType" : "void",
    "comment" : "\n     * Override to receive results delivered to this object.\n     * \n     * @param resultCode Arbitrary result code delivered by the sender, as\n     * defined by the sender.\n     * @param resultData Any additional data provided by the sender.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mLocal", "mHandler", "mReceiver", "CREATOR" ],
  "methodNames" : [ "public void send(int resultCode, Bundle resultData)", "protected void onReceiveResult(int resultCode, Bundle resultData)", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)" ]
}