{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/RoundedCorners.java",
  "packageName" : "android.view",
  "className" : "RoundedCorners",
  "comment" : "\n * A class to create & manage all the {@link RoundedCorner} on the display.\n *\n * @hide\n ",
  "links" : [ "android.view.RoundedCorner" ],
  "variables" : [ {
    "name" : "NO_ROUNDED_CORNERS",
    "type" : "RoundedCorners",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ROUNDED_CORNER_POSITION_LENGTH",
    "type" : "int",
    "comment" : "\n     * The number of possible positions at which rounded corners can be located.\n     ",
    "links" : [ ]
  }, {
    "name" : "CACHE_LOCK",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCachedDisplayWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCachedDisplayHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCachedRadii",
    "type" : "Pair<Integer, Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCachedRoundedCorners",
    "type" : "RoundedCorners",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCachedPhysicalPixelDisplaySizeRatio",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRoundedCorners",
    "type" : "RoundedCorner[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<RoundedCorners>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static RoundedCorners fromResources(Resources res, String displayUniqueId, int physicalDisplayWidth, int physicalDisplayHeight, int displayWidth, int displayHeight)",
    "returnType" : "RoundedCorners",
    "comment" : "\n     * Creates the rounded corners according to @android:dimen/rounded_corner_radius,\n     * @android:dimen/rounded_corner_radius_top and @android:dimen/rounded_corner_radius_bottom\n     ",
    "links" : [ ]
  }, {
    "name" : "public static RoundedCorners fromRadii(Pair<Integer, Integer> radii, int displayWidth, int displayHeight)",
    "returnType" : "RoundedCorners",
    "comment" : "\n     * Creates the rounded corners from radius\n     ",
    "links" : [ ]
  }, {
    "name" : "private static RoundedCorners fromRadii(Pair<Integer, Integer> radii, int physicalDisplayWidth, int physicalDisplayHeight, int displayWidth, int displayHeight)",
    "returnType" : "RoundedCorners",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Pair<Integer, Integer> loadRoundedCornerRadii(Resources res, String displayUniqueId)",
    "returnType" : "Pair<Integer, Integer>",
    "comment" : "\n     * Loads the rounded corner radii from resources.\n     *\n     * @param res\n     * @param displayUniqueId the display unique id.\n     * @return a Pair of radius. The first is the top rounded corner radius and second is the\n     * bottom corner radius.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getRoundedCornerRadius(Resources res, String displayUniqueId)",
    "returnType" : "int",
    "comment" : "\n     * Gets the default rounded corner radius of a display which is determined by the\n     * given display unique id.\n     *\n     * Loads the default dimen{@link R.dimen#rounded_corner_radius} if\n     * {@link R.array#config_displayUniqueIdArray} is not set.\n     *\n     * @hide\n     ",
    "links" : [ "R.dimen#rounded_corner_radius", "R.array#config_displayUniqueIdArray" ]
  }, {
    "name" : "public static int getRoundedCornerTopRadius(Resources res, String displayUniqueId)",
    "returnType" : "int",
    "comment" : "\n     * Gets the top rounded corner radius of a display which is determined by the\n     * given display unique id.\n     *\n     * Loads the default dimen{@link R.dimen#rounded_corner_radius_top} if\n     * {@link R.array#config_displayUniqueIdArray} is not set.\n     *\n     * @hide\n     ",
    "links" : [ "R.dimen#rounded_corner_radius_top", "R.array#config_displayUniqueIdArray" ]
  }, {
    "name" : "public static int getRoundedCornerBottomRadius(Resources res, String displayUniqueId)",
    "returnType" : "int",
    "comment" : "\n     * Gets the bottom rounded corner radius of a display which is determined by the\n     * given display unique id.\n     *\n     * Loads the default dimen{@link R.dimen#rounded_corner_radius_bottom} if\n     * {@link R.array#config_displayUniqueIdArray} is not set.\n     *\n     * @hide\n     ",
    "links" : [ "R.dimen#rounded_corner_radius_bottom", "R.array#config_displayUniqueIdArray" ]
  }, {
    "name" : "public static int getRoundedCornerRadiusAdjustment(Resources res, String displayUniqueId)",
    "returnType" : "int",
    "comment" : "\n     * Gets the rounded corner radius adjustment of a display which is determined by the\n     * given display unique id.\n     *\n     * Loads the default dimen{@link R.dimen#rounded_corner_radius_adjustment} if\n     * {@link R.array#config_displayUniqueIdArray} is not set.\n     *\n     * @hide\n     ",
    "links" : [ "R.dimen#rounded_corner_radius_adjustment", "R.array#config_displayUniqueIdArray" ]
  }, {
    "name" : "public static int getRoundedCornerRadiusTopAdjustment(Resources res, String displayUniqueId)",
    "returnType" : "int",
    "comment" : "\n     * Gets the rounded corner top radius adjustment of a display which is determined by the\n     * given display unique id.\n     *\n     * Loads the default dimen{@link R.dimen#rounded_corner_radius_top_adjustment} if\n     * {@link R.array#config_displayUniqueIdArray} is not set.\n     *\n     * @hide\n     ",
    "links" : [ "R.dimen#rounded_corner_radius_top_adjustment", "R.array#config_displayUniqueIdArray" ]
  }, {
    "name" : "public static int getRoundedCornerRadiusBottomAdjustment(Resources res, String displayUniqueId)",
    "returnType" : "int",
    "comment" : "\n     * Gets the rounded corner bottom radius adjustment of a display which is determined by the\n     * given display unique id.\n     *\n     * Loads the default dimen{@link R.dimen#rounded_corner_radius_bottom_adjustment} if\n     * {@link R.array#config_displayUniqueIdArray} is not set.\n     *\n     * @hide\n     ",
    "links" : [ "R.dimen#rounded_corner_radius_bottom_adjustment", "R.array#config_displayUniqueIdArray" ]
  }, {
    "name" : "public static boolean getBuiltInDisplayIsRound(Resources res, String displayUniqueId)",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether a built-in display is round.\n     *\n     * Loads the default config{@link R.bool#config_mainBuiltInDisplayIsRound} if\n     * {@link R.array#config_displayUniqueIdArray} is not set.\n     *\n     * @hide\n     ",
    "links" : [ "R.bool#config_mainBuiltInDisplayIsRound", "R.array#config_displayUniqueIdArray" ]
  }, {
    "name" : "public RoundedCorners insetWithFrame(Rect frame, Rect roundedCornerFrame)",
    "returnType" : "RoundedCorners",
    "comment" : "\n     * Insets the reference frame of the rounded corners.\n     *\n     * @param frame the frame of a window or any rectangle bounds\n     * @param roundedCornerFrame the frame that used to calculate relative {@link RoundedCorner}\n     * @return a copy of this instance which has been inset\n     ",
    "links" : [ "android.view.RoundedCorner" ]
  }, {
    "name" : "public RoundedCorners inset(int insetLeft, int insetTop, int insetRight, int insetBottom)",
    "returnType" : "RoundedCorners",
    "comment" : "\n     * Insets the reference frame of the rounded corners.\n     *\n     * @return a copy of this instance which has been inset\n     ",
    "links" : [ ]
  }, {
    "name" : "private RoundedCorner insetRoundedCorner(@Position int position, int radius, int centerX, int centerY, int insetLeft, int insetTop, int insetRight, int insetBottom)",
    "returnType" : "RoundedCorner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RoundedCorner getRoundedCorner(@Position int position)",
    "returnType" : "RoundedCorner",
    "comment" : "\n     * Returns the {@link RoundedCorner} of the given position if there is one.\n     *\n     * @param position the position of the rounded corner on the display.\n     * @return the rounded corner of the given position. Returns {@code null} if\n     * {@link RoundedCorner#isEmpty()} is {@code true}.\n     ",
    "links" : [ "android.view.RoundedCorner#isEmpty()", "android.view.RoundedCorner" ]
  }, {
    "name" : "public void setRoundedCorner(@Position int position, @Nullable RoundedCorner roundedCorner)",
    "returnType" : "void",
    "comment" : "\n     * Sets the rounded corner of given position.\n     *\n     * @param position the position of this rounded corner\n     * @param roundedCorner the rounded corner or null if there is none\n     ",
    "links" : [ ]
  }, {
    "name" : "public RoundedCorner[] getAllRoundedCorners()",
    "returnType" : "RoundedCorner[]",
    "comment" : "\n     * Returns an array of {@link RoundedCorner}s. Ordinal value of RoundedCornerPosition is used\n     * as an index of the array.\n     *\n     * @return an array of {@link RoundedCorner}s, one for each rounded corner area.\n     ",
    "links" : [ "android.view.RoundedCorner" ]
  }, {
    "name" : "public RoundedCorners scale(float scale)",
    "returnType" : "RoundedCorners",
    "comment" : "\n     * Returns a scaled RoundedCorners.\n     ",
    "links" : [ ]
  }, {
    "name" : "public RoundedCorners rotate(@Surface.Rotation int rotation, int initialDisplayWidth, int initialDisplayHeight)",
    "returnType" : "RoundedCorners",
    "comment" : "\n     * Returns a rotated RoundedCorners.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static RoundedCorner createRoundedCorner(@Position int position, int radius, int displayWidth, int displayHeight)",
    "returnType" : "RoundedCorner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int getRotatedIndex(int position, int rotation)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static RoundedCorners fromResources(Resources res, String displayUniqueId, int physicalDisplayWidth, int physicalDisplayHeight, int displayWidth, int displayHeight)", "public static RoundedCorners fromRadii(Pair<Integer, Integer> radii, int displayWidth, int displayHeight)", "private static RoundedCorners fromRadii(Pair<Integer, Integer> radii, int physicalDisplayWidth, int physicalDisplayHeight, int displayWidth, int displayHeight)", "private static Pair<Integer, Integer> loadRoundedCornerRadii(Resources res, String displayUniqueId)", "public static int getRoundedCornerRadius(Resources res, String displayUniqueId)", "public static int getRoundedCornerTopRadius(Resources res, String displayUniqueId)", "public static int getRoundedCornerBottomRadius(Resources res, String displayUniqueId)", "public static int getRoundedCornerRadiusAdjustment(Resources res, String displayUniqueId)", "public static int getRoundedCornerRadiusTopAdjustment(Resources res, String displayUniqueId)", "public static int getRoundedCornerRadiusBottomAdjustment(Resources res, String displayUniqueId)", "public static boolean getBuiltInDisplayIsRound(Resources res, String displayUniqueId)", "public RoundedCorners insetWithFrame(Rect frame, Rect roundedCornerFrame)", "public RoundedCorners inset(int insetLeft, int insetTop, int insetRight, int insetBottom)", "private RoundedCorner insetRoundedCorner(@Position int position, int radius, int centerX, int centerY, int insetLeft, int insetTop, int insetRight, int insetBottom)", "public RoundedCorner getRoundedCorner(@Position int position)", "public void setRoundedCorner(@Position int position, @Nullable RoundedCorner roundedCorner)", "public RoundedCorner[] getAllRoundedCorners()", "public RoundedCorners scale(float scale)", "public RoundedCorners rotate(@Surface.Rotation int rotation, int initialDisplayWidth, int initialDisplayHeight)", "private static RoundedCorner createRoundedCorner(@Position int position, int radius, int displayWidth, int displayHeight)", "private static int getRotatedIndex(int position, int rotation)", "public int hashCode()", "public boolean equals(Object o)", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ],
  "variableNames" : [ "NO_ROUNDED_CORNERS", "ROUNDED_CORNER_POSITION_LENGTH", "CACHE_LOCK", "sCachedDisplayWidth", "sCachedDisplayHeight", "sCachedRadii", "sCachedRoundedCorners", "sCachedPhysicalPixelDisplaySizeRatio", "mRoundedCorners", "CREATOR" ]
}