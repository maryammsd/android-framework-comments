{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/audiofx/AudioEffect.java",
  "packageName" : "android.media.audiofx",
  "className" : "Descriptor",
  "comment" : "\n     * The effect descriptor contains information on a particular effect implemented in the\n     * audio framework:<br>\n     * <ul>\n     *  <li>type: UUID identifying the effect type. May be one of:\n     * {@link AudioEffect#EFFECT_TYPE_AEC}, {@link AudioEffect#EFFECT_TYPE_AGC},\n     * {@link AudioEffect#EFFECT_TYPE_BASS_BOOST}, {@link AudioEffect#EFFECT_TYPE_ENV_REVERB},\n     * {@link AudioEffect#EFFECT_TYPE_EQUALIZER}, {@link AudioEffect#EFFECT_TYPE_NS},\n     * {@link AudioEffect#EFFECT_TYPE_PRESET_REVERB}, {@link AudioEffect#EFFECT_TYPE_VIRTUALIZER},\n     * {@link AudioEffect#EFFECT_TYPE_DYNAMICS_PROCESSING}.\n     *  </li>\n     *  <li>uuid: UUID for this particular implementation</li>\n     *  <li>connectMode: {@link #EFFECT_INSERT} or {@link #EFFECT_AUXILIARY}</li>\n     *  <li>name: human readable effect name</li>\n     *  <li>implementor: human readable effect implementor name</li>\n     * </ul>\n     * The method {@link #queryEffects()} returns an array of Descriptors to facilitate effects\n     * enumeration.\n     ",
  "variables" : [ {
    "name" : "type",
    "type" : "UUID",
    "comment" : "\n         *  Indicates the generic type of the effect (Equalizer, Bass boost ...).\n         *  One of {@link AudioEffect#EFFECT_TYPE_AEC},\n         *  {@link AudioEffect#EFFECT_TYPE_AGC}, {@link AudioEffect#EFFECT_TYPE_BASS_BOOST},\n         *  {@link AudioEffect#EFFECT_TYPE_ENV_REVERB}, {@link AudioEffect#EFFECT_TYPE_EQUALIZER},\n         *  {@link AudioEffect#EFFECT_TYPE_NS}, {@link AudioEffect#EFFECT_TYPE_PRESET_REVERB}\n         *  {@link AudioEffect#EFFECT_TYPE_VIRTUALIZER}\n         *   or {@link AudioEffect#EFFECT_TYPE_DYNAMICS_PROCESSING}.<br>\n         *  For reverberation, bass boost, EQ and virtualizer, the UUID\n         *  corresponds to the OpenSL ES Interface ID.\n         ",
    "links" : [ "android.media.audiofx.AudioEffect#EFFECT_TYPE_PRESET_REVERB", "android.media.audiofx.AudioEffect#EFFECT_TYPE_BASS_BOOST", "android.media.audiofx.AudioEffect#EFFECT_TYPE_ENV_REVERB", "android.media.audiofx.AudioEffect#EFFECT_TYPE_AEC", "android.media.audiofx.AudioEffect#EFFECT_TYPE_EQUALIZER", "android.media.audiofx.AudioEffect#EFFECT_TYPE_AGC", "android.media.audiofx.AudioEffect#EFFECT_TYPE_DYNAMICS_PROCESSING", "android.media.audiofx.AudioEffect#EFFECT_TYPE_VIRTUALIZER", "android.media.audiofx.AudioEffect#EFFECT_TYPE_NS" ]
  }, {
    "name" : "uuid",
    "type" : "UUID",
    "comment" : "\n         *  Indicates the particular implementation of the effect in that type. Several effects\n         *  can have the same type but this uuid is unique to a given implementation.\n         ",
    "links" : [ ]
  }, {
    "name" : "connectMode",
    "type" : "String",
    "comment" : "\n         *  Indicates if the effect is of insert category {@link #EFFECT_INSERT} or auxiliary\n         *  category {@link #EFFECT_AUXILIARY}.\n         *  Insert effects (typically an {@link Equalizer}) are applied\n         *  to the entire audio source and usually not shared by several sources. Auxiliary effects\n         *  (typically a reverberator) are applied to part of the signal (wet) and the effect output\n         *  is added to the original signal (dry).\n         *  Audio pre processing are applied to audio captured on a particular\n         * {@link android.media.AudioRecord}.\n         ",
    "links" : [ "android.media.audiofx.Equalizer", "android.media.AudioRecord", "#EFFECT_INSERT", "#EFFECT_AUXILIARY" ]
  }, {
    "name" : "name",
    "type" : "String",
    "comment" : "\n         * Human readable effect name\n         ",
    "links" : [ ]
  }, {
    "name" : "implementor",
    "type" : "String",
    "comment" : "\n         * Human readable effect implementor name\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "type", "uuid", "connectMode", "name", "implementor" ],
  "methodNames" : [ "public int hashCode()", "public void writeToParcel(Parcel dest)", "public boolean equals(Object o)" ]
}