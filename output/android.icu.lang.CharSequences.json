{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/lang/CharSequences.java",
  "packageName" : "android.icu.lang",
  "className" : "CharSequences",
  "comment" : "\n * A number of utilities for dealing with CharSequences and related classes.\n * For accessing codepoints with a CharSequence, also see \n * <ul>\n * <li>{@link java.lang.Character#codePointAt(CharSequence, int)}</li>\n * <li>{@link java.lang.Character#codePointBefore(CharSequence, int)}</li>\n * <li>{@link java.lang.Character#codePointCount(CharSequence, int, int)}</li>\n * <li>{@link java.lang.Character#charCount(int)}</li>\n * <li>{@link java.lang.Character#offsetByCodePoints(CharSequence, int, int)}</li>\n * <li>{@link java.lang.Character#toChars(int, char[], int)}</li>\n * <li>{@link java.lang.Character#toCodePoint(char, char)}</li>\n * </ul>\n * @author markdavis\n * @deprecated This API is ICU internal only.\n * @hide Only a subset of ICU is exposed in Android\n * @hide draft / provisional / internal are hidden on Android\n ",
  "links" : [ "java.lang.Character#codePointAt(CharSequence", "java.lang.Character#offsetByCodePoints(CharSequence", "java.lang.Character#charCount(int)", "java.lang.Character#codePointBefore(CharSequence", "java.lang.Character#codePointCount(CharSequence", "java.lang.Character#toCodePoint(char", "java.lang.Character#toChars(int" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static int matchAfter(CharSequence a, CharSequence b, int aIndex, int bIndex)",
    "returnType" : "int",
    "comment" : "\n     * Find the longest n such that a[aIndex,n] = b[bIndex,n], and n is on a character boundary.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public int codePointLength(CharSequence s)",
    "returnType" : "int",
    "comment" : "\n     * Count the code point length. Unpaired surrogates count as 1.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final boolean equals(int codepoint, CharSequence other)",
    "returnType" : "boolean",
    "comment" : "\n     * Utility function for comparing codepoint to string without generating new\n     * string.\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final boolean equals(CharSequence other, int codepoint)",
    "returnType" : "boolean",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int compare(CharSequence string, int codePoint)",
    "returnType" : "int",
    "comment" : "\n     * Utility to compare a string to a code point.\n     * Same results as turning the code point into a string (with the [ugly] new StringBuilder().appendCodePoint(codepoint).toString())\n     * and comparing, but much faster (no object creation). \n     * Actually, there is one difference; a null compares as less.\n     * Note that this (=String) order is UTF-16 order -- <i>not</i> code point order.\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int compare(int codepoint, CharSequence a)",
    "returnType" : "int",
    "comment" : "\n     * Utility to compare a string to a code point.\n     * Same results as turning the code point into a string and comparing, but much faster (no object creation). \n     * Actually, there is one difference; a null compares as less.\n     * Note that this (=String) order is UTF-16 order -- <i>not</i> code point order.\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getSingleCodePoint(CharSequence s)",
    "returnType" : "int",
    "comment" : "\n     * Return the value of the first code point, if the string is exactly one code point. Otherwise return Integer.MAX_VALUE.\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final boolean equals(T a, T b)",
    "returnType" : "boolean",
    "comment" : "\n     * Utility function for comparing objects that may be null\n     * string.\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int compare(CharSequence a, CharSequence b)",
    "returnType" : "int",
    "comment" : "\n     * Utility for comparing the contents of CharSequences\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean equalsChars(CharSequence a, CharSequence b)",
    "returnType" : "boolean",
    "comment" : "\n     * Utility for comparing the contents of CharSequences\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean onCharacterBoundary(CharSequence s, int i)",
    "returnType" : "boolean",
    "comment" : "\n     * Are we on a character boundary?\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int indexOf(CharSequence s, int codePoint)",
    "returnType" : "int",
    "comment" : "\n     * Find code point in string.\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int[] codePoints(CharSequence s)",
    "returnType" : "int[]",
    "comment" : "\n     * Utility function for simplified, more robust loops, such as:\n     * <pre>\n     *   for (int codePoint : CharSequences.codePoints(string)) {\n     *     doSomethingWith(codePoint);\n     *   }\n     * </pre>\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int matchAfter(CharSequence a, CharSequence b, int aIndex, int bIndex)", "public int codePointLength(CharSequence s)", "public static final boolean equals(int codepoint, CharSequence other)", "public static final boolean equals(CharSequence other, int codepoint)", "public static int compare(CharSequence string, int codePoint)", "public static int compare(int codepoint, CharSequence a)", "public static int getSingleCodePoint(CharSequence s)", "public static final boolean equals(T a, T b)", "public static int compare(CharSequence a, CharSequence b)", "public static boolean equalsChars(CharSequence a, CharSequence b)", "public static boolean onCharacterBoundary(CharSequence s, int i)", "public static int indexOf(CharSequence s, int codePoint)", "public static int[] codePoints(CharSequence s)" ],
  "variableNames" : [ ]
}