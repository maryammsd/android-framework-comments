{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/dataloader/DataLoaderService.java",
  "packageName" : "android.service.dataloader",
  "className" : "DataLoaderService",
  "comment" : "\n * The base class for implementing a data loader service.\n * <p>\n * After calling commit() on the install session, the DataLoaderService is started and bound to\n * provide the actual data bytes for the streaming session.\n * The service will automatically be rebound until the streaming session has enough data to\n * proceed with the installation.\n *\n * @see android.content.pm.DataLoaderParams\n * @see android.content.pm.PackageInstaller.SessionParams#setDataLoaderParams\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "DataLoaderBinderService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public DataLoader onCreateDataLoader(@NonNull DataLoaderParams dataLoaderParams)",
    "returnType" : "DataLoader",
    "comment" : "\n     * DataLoader factory method.\n     * An installation session uses it to create an instance of DataLoader.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public final IBinder onBind(@NonNull Intent intent)",
    "returnType" : "IBinder",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativeCreateDataLoader(int storageId, @NonNull FileSystemControlParcel control, @NonNull DataLoaderParamsParcel params, IDataLoaderStatusListener listener)",
    "returnType" : "boolean",
    "comment" : " Native methods ",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativeStartDataLoader(int storageId)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativeStopDataLoader(int storageId)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativeDestroyDataLoader(int storageId)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativePrepareImage(int storageId, InstallationFileParcel[] addedFiles, String[] removedFiles)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeWriteData(long nativeInstance, String name, long offsetBytes, long lengthBytes, ParcelFileDescriptor incomingFd)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public DataLoader onCreateDataLoader(@NonNull DataLoaderParams dataLoaderParams)", "public final IBinder onBind(@NonNull Intent intent)", "private native boolean nativeCreateDataLoader(int storageId, @NonNull FileSystemControlParcel control, @NonNull DataLoaderParamsParcel params, IDataLoaderStatusListener listener)", "private native boolean nativeStartDataLoader(int storageId)", "private native boolean nativeStopDataLoader(int storageId)", "private native boolean nativeDestroyDataLoader(int storageId)", "private native boolean nativePrepareImage(int storageId, InstallationFileParcel[] addedFiles, String[] removedFiles)", "private static native void nativeWriteData(long nativeInstance, String name, long offsetBytes, long lengthBytes, ParcelFileDescriptor incomingFd)" ],
  "variableNames" : [ "TAG", "mBinder" ]
}