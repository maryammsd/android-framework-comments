{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/SetSchemaResponse.java",
  "packageName" : "android.app.appsearch",
  "className" : "SetSchemaResponse",
  "comment" : " The response class of {@link AppSearchSession#setSchema} ",
  "links" : [ "android.app.appsearch.AppSearchSession#setSchema" ],
  "variables" : [ {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SetSchemaResponse>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeletedTypes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIncompatibleTypes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMigratedTypes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMigrationFailures",
    "type" : "List<MigrationFailure>",
    "comment" : "\n     * The migrationFailures won't be saved as a SafeParcelable field. Since:\n     *\n     * <ul>\n     *   <li>{@link MigrationFailure} is generated in {@link AppSearchSession} which will be the SDK\n     *       side in platform. We don't need to pass it from service side via binder as a part of\n     *       {@link SetSchemaResponse}.\n     *   <li>Writing multiple {@link MigrationFailure}s to SafeParcelable in {@link Builder} and\n     *       then back in constructor will be a huge waste.\n     * </ul>\n     ",
    "links" : [ "android.app.appsearch.SetSchemaResponse", "Builder", "MigrationFailure", "android.app.appsearch.AppSearchSession" ]
  }, {
    "name" : "mDeletedTypesCached",
    "type" : "Set<String>",
    "comment" : "\n     * Cache of the inflated deleted schema types. Comes from inflating mDeletedTypes at first use\n     ",
    "links" : [ ]
  }, {
    "name" : "mMigratedTypesCached",
    "type" : "Set<String>",
    "comment" : "\n     * Cache of the inflated migrated schema types. Comes from inflating mMigratedTypes at first\n     * use.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIncompatibleTypesCached",
    "type" : "Set<String>",
    "comment" : "\n     * Cache of the inflated incompatible schema types. Comes from inflating mIncompatibleTypes at\n     * first use.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<MigrationFailure> getMigrationFailures()",
    "returnType" : "List<MigrationFailure>",
    "comment" : "\n     * Returns a {@link List} of all failed {@link MigrationFailure}.\n     *\n     * <p>A {@link MigrationFailure} will be generated if the system trying to save a post-migrated\n     * {@link GenericDocument} but fail.\n     *\n     * <p>{@link MigrationFailure} contains the namespace, id and schemaType of the post-migrated\n     * {@link GenericDocument} and the error reason. Mostly it will be mismatch the schema it\n     * migrated to.\n     ",
    "links" : [ "MigrationFailure", "android.app.appsearch.GenericDocument", "java.util.ArrayList" ]
  }, {
    "name" : "public Set<String> getDeletedTypes()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Returns a {@link Set} of deleted schema types.\n     *\n     * <p>A \"deleted\" type is a schema type that was previously a part of the database schema but\n     * was not present in the {@link SetSchemaRequest} object provided in the {@link\n     * AppSearchSession#setSchema} call.\n     *\n     * <p>Documents for a deleted type are removed from the database.\n     ",
    "links" : [ "android.app.appsearch.AppSearchSession#setSchema", "android.app.appsearch.SetSchemaRequest", "android.util.ArraySet" ]
  }, {
    "name" : "public Set<String> getMigratedTypes()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Returns a {@link Set} of schema type that were migrated by the {@link\n     * AppSearchSession#setSchema} call.\n     *\n     * <p>A \"migrated\" type is a schema type that has triggered a {@link Migrator} instance to\n     * migrate documents of the schema type to another schema type, or to another version of the\n     * schema type.\n     *\n     * <p>If a document fails to be migrated, a {@link MigrationFailure} will be generated for that\n     * document.\n     *\n     * @see Migrator\n     ",
    "links" : [ "android.app.appsearch.AppSearchSession#setSchema", "android.util.ArraySet", "MigrationFailure", "android.app.appsearch.Migrator" ]
  }, {
    "name" : "public Set<String> getIncompatibleTypes()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Returns a {@link Set} of schema type whose new definitions set in the {@link\n     * AppSearchSession#setSchema} call were incompatible with the pre-existing schema.\n     *\n     * <p>If a {@link Migrator} is provided for this type and the migration is success triggered.\n     * The type will also appear in {@link #getMigratedTypes()}.\n     *\n     * @see SetSchemaRequest\n     * @see AppSearchSession#setSchema\n     * @see SetSchemaRequest.Builder#setForceOverride\n     ",
    "links" : [ "android.app.appsearch.AppSearchSession#setSchema", "#getMigratedTypes()", "android.util.ArraySet", "android.app.appsearch.Migrator" ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public List<MigrationFailure> getMigrationFailures()", "public Set<String> getDeletedTypes()", "public Set<String> getMigratedTypes()", "public Set<String> getIncompatibleTypes()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "CREATOR", "mDeletedTypes", "mIncompatibleTypes", "mMigratedTypes", "mMigrationFailures", "mDeletedTypesCached", "mMigratedTypesCached", "mIncompatibleTypesCached" ]
}