{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/nfc/cardemulation/PollingFrame.java",
  "packageName" : "android.nfc.cardemulation",
  "className" : "PollingFrame",
  "comment" : "\n * Polling Frames represent data about individual frames of an NFC polling loop. These frames will\n * be deliverd to subclasses of {@link HostApduService} that have registered filters with\n * {@link CardEmulation#registerPollingLoopFilterForService(ComponentName, String)} that match a\n * given frame in a loop and will be delivered through calls to\n * {@link HostApduService#processPollingFrames(List)}.\n ",
  "links" : [ "android.nfc.cardemulation.HostApduService#processPollingFrames(List)", "android.nfc.cardemulation.HostApduService", "android.nfc.cardemulation.CardEmulation#registerPollingLoopFilterForService(ComponentName" ],
  "variables" : [ {
    "name" : "POLLING_LOOP_TYPE_A",
    "type" : "int",
    "comment" : "\n     * POLLING_LOOP_TYPE_A is the value associated with the key\n     * POLLING_LOOP_TYPE  in the Bundle passed to {@link HostApduService#processPollingFrames(List)}\n     * when the polling loop is for NFC-A.\n     ",
    "links" : [ "android.nfc.cardemulation.HostApduService#processPollingFrames(List)" ]
  }, {
    "name" : "POLLING_LOOP_TYPE_B",
    "type" : "int",
    "comment" : "\n     * POLLING_LOOP_TYPE_B is the value associated with the key\n     * POLLING_LOOP_TYPE  in the Bundle passed to {@link HostApduService#processPollingFrames(List)}\n     * when the polling loop is for NFC-B.\n     ",
    "links" : [ "android.nfc.cardemulation.HostApduService#processPollingFrames(List)" ]
  }, {
    "name" : "POLLING_LOOP_TYPE_F",
    "type" : "int",
    "comment" : "\n     * POLLING_LOOP_TYPE_F is the value associated with the key\n     * POLLING_LOOP_TYPE  in the Bundle passed to {@link HostApduService#processPollingFrames(List)}\n     * when the polling loop is for NFC-F.\n     ",
    "links" : [ "android.nfc.cardemulation.HostApduService#processPollingFrames(List)" ]
  }, {
    "name" : "POLLING_LOOP_TYPE_ON",
    "type" : "int",
    "comment" : "\n     * POLLING_LOOP_TYPE_ON is the value associated with the key\n     * POLLING_LOOP_TYPE  in the Bundle passed to {@link HostApduService#processPollingFrames(List)}\n     * when the polling loop turns on.\n     ",
    "links" : [ "android.nfc.cardemulation.HostApduService#processPollingFrames(List)" ]
  }, {
    "name" : "POLLING_LOOP_TYPE_OFF",
    "type" : "int",
    "comment" : "\n     * POLLING_LOOP_TYPE_OFF is the value associated with the key\n     * POLLING_LOOP_TYPE  in the Bundle passed to {@link HostApduService#processPollingFrames(List)}\n     * when the polling loop turns off.\n     ",
    "links" : [ "android.nfc.cardemulation.HostApduService#processPollingFrames(List)" ]
  }, {
    "name" : "POLLING_LOOP_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * POLLING_LOOP_TYPE_UNKNOWN is the value associated with the key\n     * POLLING_LOOP_TYPE  in the Bundle passed to {@link HostApduService#processPollingFrames(List)}\n     * when the polling loop frame isn't recognized.\n     ",
    "links" : [ "android.nfc.cardemulation.HostApduService#processPollingFrames(List)" ]
  }, {
    "name" : "KEY_POLLING_LOOP_TYPE",
    "type" : "String",
    "comment" : "\n     * KEY_POLLING_LOOP_TYPE is the Bundle key for the type of\n     * polling loop frame in the Bundle included in MSG_POLLING_LOOP.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_POLLING_LOOP_DATA",
    "type" : "String",
    "comment" : "\n     * KEY_POLLING_LOOP_DATA is the Bundle key for the raw data of captured from\n     * the polling loop frame in the Bundle included in MSG_POLLING_LOOP.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_POLLING_LOOP_GAIN",
    "type" : "String",
    "comment" : "\n     * KEY_POLLING_LOOP_GAIN is the Bundle key for the field strength of\n     * the polling loop frame in the Bundle included in MSG_POLLING_LOOP.\n    ",
    "links" : [ ]
  }, {
    "name" : "KEY_POLLING_LOOP_TIMESTAMP",
    "type" : "String",
    "comment" : "\n     * KEY_POLLING_LOOP_TIMESTAMP is the Bundle key for the timestamp of\n     * the polling loop frame in the Bundle included in MSG_POLLING_LOOP.\n    ",
    "links" : [ ]
  }, {
    "name" : "KEY_POLLING_LOOP_TRIGGERED_AUTOTRANSACT",
    "type" : "String",
    "comment" : "\n     * KEY_POLLING_LOOP_TIMESTAMP is the Bundle key for whether this polling frame triggered\n     * autoTransact in the Bundle included in MSG_POLLING_LOOP.\n    ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGain",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimestamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTriggeredAutoTransact",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<PollingFrame>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the type of frame for this polling loop frame.\n     * The possible return values are:\n     * <ul>\n     *   <li>{@link POLLING_LOOP_TYPE_ON}</li>\n     *   <li>{@link POLLING_LOOP_TYPE_OFF}</li>\n     *   <li>{@link POLLING_LOOP_TYPE_A}</li>\n     *   <li>{@link POLLING_LOOP_TYPE_B}</li>\n     *   <li>{@link POLLING_LOOP_TYPE_F}</li>\n     * </ul>\n     ",
    "links" : [ "POLLING_LOOP_TYPE_OFF", "POLLING_LOOP_TYPE_F", "POLLING_LOOP_TYPE_B", "POLLING_LOOP_TYPE_ON", "POLLING_LOOP_TYPE_A" ]
  }, {
    "name" : "public byte[] getData()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the raw data from the polling type frame.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getVendorSpecificGain()",
    "returnType" : "int",
    "comment" : "\n     * Returns the gain representing the field strength of the NFC field when this polling loop\n     * frame was observed.\n     * @return the gain or -1 if there is no gain measurement associated with this frame.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTimestamp()",
    "returnType" : "long",
    "comment" : "\n     * Returns the timestamp of when the polling loop frame was observed in milliseconds. These\n     * timestamps are relative and not absolute and should only be used for comparing the timing of\n     * frames relative to each other.\n     * @return the timestamp in milliseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setTriggeredAutoTransact(boolean triggeredAutoTransact)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getTriggeredAutoTransact()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether this frame triggered the device to automatically disable observe mode and\n     * allow one transaction.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Bundle toBundle()",
    "returnType" : "Bundle",
    "comment" : "\n     * @return a Bundle representing this frame\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getType()", "public byte[] getData()", "public int getVendorSpecificGain()", "public long getTimestamp()", "public void setTriggeredAutoTransact(boolean triggeredAutoTransact)", "public boolean getTriggeredAutoTransact()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "private Bundle toBundle()", "public String toString()" ],
  "variableNames" : [ "POLLING_LOOP_TYPE_A", "POLLING_LOOP_TYPE_B", "POLLING_LOOP_TYPE_F", "POLLING_LOOP_TYPE_ON", "POLLING_LOOP_TYPE_OFF", "POLLING_LOOP_TYPE_UNKNOWN", "KEY_POLLING_LOOP_TYPE", "KEY_POLLING_LOOP_DATA", "KEY_POLLING_LOOP_GAIN", "KEY_POLLING_LOOP_TIMESTAMP", "KEY_POLLING_LOOP_TRIGGERED_AUTOTRANSACT", "mType", "mData", "mGain", "mTimestamp", "mTriggeredAutoTransact", "CREATOR" ]
}