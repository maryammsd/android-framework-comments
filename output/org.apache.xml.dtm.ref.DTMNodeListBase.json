{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/dtm/ref/DTMNodeListBase.java",
  "packageName" : "org.apache.xml.dtm.ref",
  "className" : "DTMNodeListBase",
  "comment" : "\n * <code>DTMNodeList</code> gives us an implementation of the DOM's\n * NodeList interface wrapped around a DTM Iterator. The author\n * considers this something of an abominations, since NodeList was not\n * intended to be a general purpose \"list of nodes\" API and is\n * generally considered by the DOM WG to have be a mistake... but I'm\n * told that some of the XPath/XSLT folks say they must have this\n * solution.\n *\n * Please note that this is not necessarily equivlaent to a DOM\n * NodeList operating over the same document. In particular:\n * <ul>\n *\n * <li>If there are several Text nodes in logical succession (ie,\n * across CDATASection and EntityReference boundaries), we will return\n * only the first; the caller is responsible for stepping through\n * them.\n * (%REVIEW% Provide a convenience routine here to assist, pending\n * proposed DOM Level 3 getAdjacentText() operation?) </li>\n *\n * <li>Since the whole XPath/XSLT architecture assumes that the source\n * document is not altered while we're working with it, we do not\n * promise to implement the DOM NodeList's \"live view\" response to\n * document mutation. </li>\n *\n * </ul>\n *\n * <p>State: In progress!!</p>\n *\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public Node item(int index)",
    "returnType" : "Node",
    "comment" : "\n     * Returns the <code>index</code>th item in the collection. If \n     * <code>index</code> is greater than or equal to the number of nodes in \n     * the list, this returns <code>null</code>.\n     * @param index Index into the collection.\n     * @return The node at the <code>index</code>th position in the \n     *   <code>NodeList</code>, or <code>null</code> if that is not a valid \n     *   index.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLength()",
    "returnType" : "int",
    "comment" : "\n     * The number of nodes in the list. The range of valid child node indices \n     * is 0 to <code>length-1</code> inclusive. \n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Node item(int index)", "public int getLength()" ],
  "variableNames" : [ ]
}