{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/text/AttributedCharacterIterator.java",
  "packageName" : "java.text",
  "className" : "Attribute",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "name",
    "type" : "String",
    "comment" : "\n         * The name of this {@code Attribute}. The name is used primarily by {@code readResolve}\n         * to look up the corresponding predefined instance when deserializing\n         * an instance.\n         * @serial\n         ",
    "links" : [ ]
  }, {
    "name" : "instanceMap",
    "type" : "Map<String, Attribute>",
    "comment" : " table of all instances in this class, used by readResolve",
    "links" : [ ]
  }, {
    "name" : "LANGUAGE",
    "type" : "Attribute",
    "comment" : "\n         * Attribute key for the language of some text.\n         * <p> Values are instances of {@link java.util.Locale Locale}.\n         * @see java.util.Locale\n         ",
    "links" : [ "java.util.Locale" ]
  }, {
    "name" : "READING",
    "type" : "Attribute",
    "comment" : "\n         * Attribute key for the reading of some text. In languages where the written form\n         * and the pronunciation of a word are only loosely related (such as Japanese),\n         * it is often necessary to store the reading (pronunciation) along with the\n         * written form.\n         * <p>Values are instances of {@link Annotation} holding instances of {@link String}.\n         *\n         * @see Annotation\n         * @see java.lang.String\n         ",
    "links" : [ "java.text.Annotation", "String" ]
  }, {
    "name" : "INPUT_METHOD_SEGMENT",
    "type" : "Attribute",
    "comment" : "\n         * Attribute key for input method segments. Input methods often break\n         * up text into segments, which usually correspond to words.\n         * <p>Values are instances of {@link Annotation} holding a {@code null} reference.\n         * @see Annotation\n         ",
    "links" : [ "java.text.Annotation" ]
  }, {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : " make sure the serial version doesn't change between compiler versions",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n         * Compares two objects for equality. This version only returns true\n         * for {@code x.equals(y)} if {@code x} and {@code y} refer\n         * to the same object, and guarantees this for all subclasses.\n         ",
    "links" : [ ]
  }, {
    "name" : "public final int hashCode()",
    "returnType" : "int",
    "comment" : "\n         * Returns a hash code value for the object. This version is identical to\n         * the one in {@code Object}, but is also final.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n         * Returns a string representation of the object. This version returns the\n         * concatenation of class name, {@code \"(\"}, a name identifying the attribute\n         * and {@code \")\"}.\n         ",
    "links" : [ ]
  }, {
    "name" : "protected String getName()",
    "returnType" : "String",
    "comment" : "\n         * Returns the name of the attribute.\n         *\n         * @return the name of {@code Attribute}\n         ",
    "links" : [ ]
  }, {
    "name" : "protected Object readResolve() throws InvalidObjectException",
    "returnType" : "Object",
    "comment" : "\n         * Resolves instances being deserialized to the predefined constants.\n         *\n         * @return the resolved {@code Attribute} object\n         * @throws InvalidObjectException if the object to resolve is not\n         *                                an instance of {@code Attribute}\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final boolean equals(Object obj)", "public final int hashCode()", "public String toString()", "protected String getName()", "protected Object readResolve() throws InvalidObjectException" ],
  "variableNames" : [ "name", "instanceMap", "LANGUAGE", "READING", "INPUT_METHOD_SEGMENT", "serialVersionUID" ]
}