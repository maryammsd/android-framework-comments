{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/Notification.java",
  "packageName" : "android.app",
  "className" : "Builder",
  "comment" : "\n         * Builder class for {@link Action} objects.\n         ",
  "links" : [ "Action" ],
  "variables" : [ {
    "name" : "mIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowGeneratedReplies",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRemoteInputs",
    "type" : "ArrayList<RemoteInput>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSemanticAction",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsContextual",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAuthenticationRequired",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder addExtras(Bundle extras)",
    "returnType" : "Builder",
    "comment" : "\n             * Merge additional metadata into this builder.\n             *\n             * <p>Values within the Bundle will replace existing extras values in this Builder.\n             *\n             * @see Notification.Action#extras\n             ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n             * Get the metadata Bundle used by this Builder.\n             *\n             * <p>The returned Bundle is shared with this Builder.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder addRemoteInput(RemoteInput remoteInput)",
    "returnType" : "Builder",
    "comment" : "\n             * Add an input to be collected from the user when this action is sent.\n             * Response values can be retrieved from the fired intent by using the\n             * {@link RemoteInput#getResultsFromIntent} function.\n             * @param remoteInput a {@link RemoteInput} to add to the action\n             * @return this object for method chaining\n             ",
    "links" : [ "android.app.RemoteInput", "android.app.RemoteInput#getResultsFromIntent" ]
  }, {
    "name" : "public Builder setAllowGeneratedReplies(boolean allowGeneratedReplies)",
    "returnType" : "Builder",
    "comment" : "\n             * Set whether the platform should automatically generate possible replies to add to\n             * {@link RemoteInput#getChoices()}. If the {@link Action} doesn't have a\n             * {@link RemoteInput}, this has no effect.\n             * @param allowGeneratedReplies {@code true} to allow generated replies, {@code false}\n             * otherwise\n             * @return this object for method chaining\n             * The default value is {@code true}\n             ",
    "links" : [ "android.app.RemoteInput", "Action", "android.app.RemoteInput#getChoices()" ]
  }, {
    "name" : "public Builder setSemanticAction(@SemanticAction int semanticAction)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets the {@code SemanticAction} for this {@link Action}. A\n             * {@code SemanticAction} denotes what an {@link Action}'s\n             * {@link PendingIntent} will do (eg. reply, mark as read, delete, etc).\n             * @param semanticAction a SemanticAction defined within {@link Action} with\n             * {@code SEMANTIC_ACTION_} prefixes\n             * @return this object for method chaining\n             ",
    "links" : [ "Action", "android.app.PendingIntent" ]
  }, {
    "name" : "public Builder setContextual(boolean isContextual)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether this {@link Action} is a contextual action, i.e. whether the action is\n             * dependent on the notification message body. An example of a contextual action could\n             * be an action opening a map application with an address shown in the notification.\n             ",
    "links" : [ "Action" ]
  }, {
    "name" : "public Builder extend(Extender extender)",
    "returnType" : "Builder",
    "comment" : "\n             * Apply an extender to this action builder. Extenders may be used to add\n             * metadata or change options on this builder.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAuthenticationRequired(boolean authenticationRequired)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether the OS should only send this action's {@link PendingIntent} on an\n             * unlocked device.\n             *\n             * If this is true and the device is locked when the action is invoked, the OS will\n             * show the keyguard and require successful authentication before invoking the intent.\n             * If this is false and the device is locked, the OS will decide whether authentication\n             * should be required.\n             ",
    "links" : [ "android.app.PendingIntent" ]
  }, {
    "name" : "private void checkContextualActionNullFields()",
    "returnType" : "void",
    "comment" : "\n             * Throws an NPE if we are building a contextual action missing one of the fields\n             * necessary to display the action.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Action build()",
    "returnType" : "Action",
    "comment" : "\n             * Combine all of the options that have been set and return a new {@link Action}\n             * object.\n             * @return the built action\n             ",
    "links" : [ "Action" ]
  } ],
  "methodNames" : [ "public Builder addExtras(Bundle extras)", "public Bundle getExtras()", "public Builder addRemoteInput(RemoteInput remoteInput)", "public Builder setAllowGeneratedReplies(boolean allowGeneratedReplies)", "public Builder setSemanticAction(@SemanticAction int semanticAction)", "public Builder setContextual(boolean isContextual)", "public Builder extend(Extender extender)", "public Builder setAuthenticationRequired(boolean authenticationRequired)", "private void checkContextualActionNullFields()", "public Action build()" ],
  "variableNames" : [ "mIcon", "mTitle", "mIntent", "mAllowGeneratedReplies", "mExtras", "mRemoteInputs", "mSemanticAction", "mIsContextual", "mAuthenticationRequired" ]
}