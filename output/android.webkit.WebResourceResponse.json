{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/WebResourceResponse.java",
  "packageName" : "android.webkit",
  "className" : "WebResourceResponse",
  "comment" : "\n * Encapsulates a resource response. Applications can return an instance of this\n * class from {@link WebViewClient#shouldInterceptRequest} to provide a custom\n * response when the WebView requests a particular resource.\n ",
  "links" : [ "android.webkit.WebViewClient#shouldInterceptRequest" ],
  "variables" : [ {
    "name" : "mImmutable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMimeType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncoding",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatusCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReasonPhrase",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResponseHeaders",
    "type" : "Map<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInputStream",
    "type" : "InputStream",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setMimeType(String mimeType)",
    "returnType" : "void",
    "comment" : "\n     * Sets the resource response's MIME type, for example &quot;text/html&quot;.\n     *\n     * @param mimeType The resource response's MIME type\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getMimeType()",
    "returnType" : "String",
    "comment" : "\n     * Gets the resource response's MIME type.\n     *\n     * @return The resource response's MIME type\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setEncoding(String encoding)",
    "returnType" : "void",
    "comment" : "\n     * Sets the resource response's encoding, for example &quot;UTF-8&quot;. This is used\n     * to decode the data from the input stream.\n     *\n     * @param encoding The resource response's encoding\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getEncoding()",
    "returnType" : "String",
    "comment" : "\n     * Gets the resource response's encoding.\n     *\n     * @return The resource response's encoding\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setStatusCodeAndReasonPhrase(int statusCode, @NonNull String reasonPhrase)",
    "returnType" : "void",
    "comment" : "\n     * Sets the resource response's status code and reason phrase.\n     *\n     * @param statusCode the status code needs to be in the ranges [100, 299], [400, 599].\n     *                   Causing a redirect by specifying a 3xx code is not supported.\n     * @param reasonPhrase the phrase describing the status code, for example \"OK\". Must be\n     *                     non-empty.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getStatusCode()",
    "returnType" : "int",
    "comment" : "\n     * Gets the resource response's status code.\n     *\n     * @return The resource response's status code.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getReasonPhrase()",
    "returnType" : "String",
    "comment" : "\n     * Gets the description of the resource response's status code.\n     *\n     * @return The description of the resource response's status code.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setResponseHeaders(Map<String, String> headers)",
    "returnType" : "void",
    "comment" : "\n     * Sets the headers for the resource response.\n     *\n     * @param headers Mapping of header name -> header value.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, String> getResponseHeaders()",
    "returnType" : "Map<String, String>",
    "comment" : "\n     * Gets the headers for the resource response.\n     *\n     * @return The headers for the resource response.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setData(InputStream data)",
    "returnType" : "void",
    "comment" : "\n     * Sets the input stream that provides the resource response's data. Callers\n     * must implement {@link InputStream#read(byte[])}. {@link InputStream#close()}\n     * will be called after the WebView has finished with the response.\n     *\n     * @param data the input stream that provides the resource response's data. Must not be a\n     *             StringBufferInputStream.\n     ",
    "links" : [ "java.io.InputStream#close()", "java.io.InputStream#read(byte" ]
  }, {
    "name" : "public InputStream getData()",
    "returnType" : "InputStream",
    "comment" : "\n     * Gets the input stream that provides the resource response's data.\n     *\n     * @return The input stream that provides the resource response's data\n     ",
    "links" : [ ]
  }, {
    "name" : "private void checkImmutable()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setMimeType(String mimeType)", "public String getMimeType()", "public void setEncoding(String encoding)", "public String getEncoding()", "public void setStatusCodeAndReasonPhrase(int statusCode, @NonNull String reasonPhrase)", "public int getStatusCode()", "public String getReasonPhrase()", "public void setResponseHeaders(Map<String, String> headers)", "public Map<String, String> getResponseHeaders()", "public void setData(InputStream data)", "public InputStream getData()", "private void checkImmutable()" ],
  "variableNames" : [ "mImmutable", "mMimeType", "mEncoding", "mStatusCode", "mReasonPhrase", "mResponseHeaders", "mInputStream" ]
}