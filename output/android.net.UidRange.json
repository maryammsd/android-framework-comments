{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/UidRange.java",
  "packageName" : "android.net",
  "className" : "UidRange",
  "comment" : "\n * An inclusive range of UIDs.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "start",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "stop",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<UidRange>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static UidRange createForUser(UserHandle user)",
    "returnType" : "UidRange",
    "comment" : " Creates a UidRange for the specified user. ",
    "links" : [ ]
  }, {
    "name" : "public int getStartUser()",
    "returnType" : "int",
    "comment" : " Returns the smallest user Id which is contained in this UidRange ",
    "links" : [ ]
  }, {
    "name" : "public int getEndUser()",
    "returnType" : "int",
    "comment" : " Returns the largest user Id which is contained in this UidRange ",
    "links" : [ ]
  }, {
    "name" : "public boolean contains(int uid)",
    "returnType" : "boolean",
    "comment" : " Returns whether the UidRange contains the specified UID. ",
    "links" : [ ]
  }, {
    "name" : "public int count()",
    "returnType" : "int",
    "comment" : "\n     * Returns the count of UIDs in this range.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean containsRange(UidRange other)",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if this range contains every UID contained by the {@code other} range.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " system server.",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean containsUid(Collection<UidRange> ranges, int uid)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether any of the UidRange in the collection contains the specified uid\n     *\n     * @param ranges The collection of UidRange to check\n     * @param uid the uid in question\n     * @return {@code true} if the uid is contained within the ranges, {@code false} otherwise\n     *\n     * @see UidRange#contains(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ArraySet<UidRange> fromIntRanges(@Nullable Set<Range<Integer>> ranges)",
    "returnType" : "ArraySet<UidRange>",
    "comment" : "\n     *  Convert a set of {@code Range<Integer>} to a set of {@link UidRange}.\n     ",
    "links" : [ "android.net.UidRange" ]
  }, {
    "name" : "public static ArraySet<Range<Integer>> toIntRanges(@Nullable Set<UidRange> ranges)",
    "returnType" : "ArraySet<Range<Integer>>",
    "comment" : "\n     *  Convert a set of {@link UidRange} to a set of {@code Range<Integer>}.\n     ",
    "links" : [ "android.net.UidRange" ]
  }, {
    "name" : "public static boolean hasSameUids(@Nullable Set<UidRange> uids1, @Nullable Set<UidRange> uids2)",
    "returnType" : "boolean",
    "comment" : "\n     * Compare if the given UID range sets have the same UIDs.\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static UidRange createForUser(UserHandle user)", "public int getStartUser()", "public int getEndUser()", "public boolean contains(int uid)", "public int count()", "public boolean containsRange(UidRange other)", "public int hashCode()", "public boolean equals(@Nullable Object o)", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public static boolean containsUid(Collection<UidRange> ranges, int uid)", "public static ArraySet<UidRange> fromIntRanges(@Nullable Set<Range<Integer>> ranges)", "public static ArraySet<Range<Integer>> toIntRanges(@Nullable Set<UidRange> ranges)", "public static boolean hasSameUids(@Nullable Set<UidRange> uids1, @Nullable Set<UidRange> uids2)" ],
  "variableNames" : [ "start", "stop", "CREATOR" ]
}