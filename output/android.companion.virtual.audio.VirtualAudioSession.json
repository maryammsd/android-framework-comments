{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/companion/virtual/audio/VirtualAudioSession.java",
  "packageName" : "android.companion.virtual.audio",
  "className" : "VirtualAudioSession",
  "comment" : "\n * Manages an ongiong audio session in which audio can be captured (recorded) and/or\n * injected from a remote device.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserRestrictionsDetector",
    "type" : "UserRestrictionsDetector",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioConfigChangedCallback",
    "type" : "AudioConfigChangedCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReroutedAppUids",
    "type" : "IntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioPolicy",
    "type" : "AudioPolicy",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioCapture",
    "type" : "AudioCapture",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioInjection",
    "type" : "AudioInjection",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public AudioCapture startAudioCapture(@NonNull AudioFormat captureFormat)",
    "returnType" : "AudioCapture",
    "comment" : "\n     * Begins recording audio emanating from this device.\n     *\n     * @return An {@link AudioCapture} containing the recorded audio.\n     ",
    "links" : [ "android.companion.virtual.audio.AudioCapture" ]
  }, {
    "name" : "public AudioInjection startAudioInjection(@NonNull AudioFormat injectionFormat)",
    "returnType" : "AudioInjection",
    "comment" : "\n     * Begins injecting audio from a remote device into this device.\n     *\n     * @return An {@link AudioInjection} containing the injected audio.\n     ",
    "links" : [ "android.companion.virtual.audio.AudioInjection" ]
  }, {
    "name" : "public AudioConfigChangedCallback getAudioConfigChangedListener()",
    "returnType" : "AudioConfigChangedCallback",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public AudioCapture getAudioCapture()",
    "returnType" : "AudioCapture",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public AudioInjection getAudioInjection()",
    "returnType" : "AudioInjection",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void onAppsNeedingAudioRoutingChanged(int[] appUids)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onMicrophoneRestrictionChanged(boolean isUnmuteMicDisallowed)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void createAudioStreams(int[] appUids)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void releaseAudioStreams()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public IntArray getReroutedAppUids()",
    "returnType" : "IntArray",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static AudioMix createAudioRecordMix(@NonNull AudioFormat audioFormat, int[] appUids)",
    "returnType" : "AudioMix",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static AudioMix createAudioTrackMix(@NonNull AudioFormat audioFormat, int[] appUids)",
    "returnType" : "AudioMix",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public AudioCapture startAudioCapture(@NonNull AudioFormat captureFormat)", "public AudioInjection startAudioInjection(@NonNull AudioFormat injectionFormat)", "public AudioConfigChangedCallback getAudioConfigChangedListener()", "public AudioCapture getAudioCapture()", "public AudioInjection getAudioInjection()", "public void onAppsNeedingAudioRoutingChanged(int[] appUids)", "public void close()", "public void onMicrophoneRestrictionChanged(boolean isUnmuteMicDisallowed)", "private void createAudioStreams(int[] appUids)", "private void releaseAudioStreams()", "public IntArray getReroutedAppUids()", "private static AudioMix createAudioRecordMix(@NonNull AudioFormat audioFormat, int[] appUids)", "private static AudioMix createAudioTrackMix(@NonNull AudioFormat audioFormat, int[] appUids)" ],
  "variableNames" : [ "TAG", "mContext", "mUserRestrictionsDetector", "mAudioConfigChangedCallback", "mLock", "mReroutedAppUids", "mAudioPolicy", "mAudioCapture", "mAudioInjection" ]
}