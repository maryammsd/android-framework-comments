{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/extensions/ExpressionContext.java",
  "packageName" : "org.apache.xalan.extensions",
  "className" : "ExpressionContext",
  "comment" : "\n * An object that implements this interface can supply\n * information about the current XPath expression context.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public Node getContextNode()",
    "returnType" : "Node",
    "comment" : "\n   * Get the current context node.\n   * @return The current context node.\n   ",
    "links" : [ ]
  }, {
    "name" : "public NodeIterator getContextNodes()",
    "returnType" : "NodeIterator",
    "comment" : "\n   * Get the current context node list.\n   * @return An iterator for the current context list, as\n   * defined in XSLT.\n   ",
    "links" : [ ]
  }, {
    "name" : "public ErrorListener getErrorListener()",
    "returnType" : "ErrorListener",
    "comment" : "\n   * Get the error listener.\n   * @return The registered error listener.\n   ",
    "links" : [ ]
  }, {
    "name" : "public double toNumber(Node n)",
    "returnType" : "double",
    "comment" : "\n   * Get the value of a node as a number.\n   * @param n Node to be converted to a number.  May be null.\n   * @return value of n as a number.\n   ",
    "links" : [ ]
  }, {
    "name" : "public String toString(Node n)",
    "returnType" : "String",
    "comment" : "\n   * Get the value of a node as a string.\n   * @param n Node to be converted to a string.  May be null.\n   * @return value of n as a string, or an empty string if n is null.\n   ",
    "links" : [ ]
  }, {
    "name" : "public XObject getVariableOrParam(org.apache.xml.utils.QName qname) throws javax.xml.transform.TransformerException",
    "returnType" : "XObject",
    "comment" : "\n   * Get a variable based on it's qualified name.\n   *\n   * @param qname The qualified name of the variable.\n   *\n   * @return The evaluated value of the variable.\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public org.apache.xpath.XPathContext getXPathContext() throws javax.xml.transform.TransformerException",
    "returnType" : "org.apache.xpath.XPathContext",
    "comment" : "\n   * Get the XPathContext that owns this ExpressionContext.\n   * \n   * Note: exslt:function requires the XPathContext to access\n   * the variable stack and TransformerImpl.\n   * \n   * @return The current XPathContext.\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Node getContextNode()", "public NodeIterator getContextNodes()", "public ErrorListener getErrorListener()", "public double toNumber(Node n)", "public String toString(Node n)", "public XObject getVariableOrParam(org.apache.xml.utils.QName qname) throws javax.xml.transform.TransformerException", "public org.apache.xpath.XPathContext getXPathContext() throws javax.xml.transform.TransformerException" ],
  "variableNames" : [ ]
}