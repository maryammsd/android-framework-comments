{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/StringReplacer.java",
  "packageName" : "android.icu.text",
  "className" : "StringReplacer",
  "comment" : "\n * A replacer that produces static text as its output.  The text may\n * contain transliterator stand-in characters that represent nested\n * UnicodeReplacer objects, making it possible to encode a tree of\n * replacers in a StringReplacer.  A StringReplacer that contains such\n * stand-ins is called a <em>complex</em> StringReplacer.  A complex\n * StringReplacer has a slower processing loop than a non-complex one.\n * @author Alan Liu\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "output",
    "type" : "String",
    "comment" : "\n     * Output text, possibly containing stand-in characters that\n     * represent nested UnicodeReplacers.\n     ",
    "links" : [ ]
  }, {
    "name" : "cursorPos",
    "type" : "int",
    "comment" : "\n     * Cursor position.  Value is ignored if hasCursor is false.\n     ",
    "links" : [ ]
  }, {
    "name" : "hasCursor",
    "type" : "boolean",
    "comment" : "\n     * True if this object outputs a cursor position.\n     ",
    "links" : [ ]
  }, {
    "name" : "isComplex",
    "type" : "boolean",
    "comment" : "\n     * A complex object contains nested replacers and requires more\n     * complex processing.  StringReplacers are initially assumed to\n     * be complex.  If no nested replacers are seen during processing,\n     * then isComplex is set to false, and future replacements are\n     * short circuited for better performance.\n     ",
    "links" : [ ]
  }, {
    "name" : "data",
    "type" : "RuleBasedTransliterator.Data",
    "comment" : "\n     * Object that translates stand-in characters in 'output' to\n     * UnicodeReplacer objects.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int replace(Replaceable text, int start, int limit, int[] cursor)",
    "returnType" : "int",
    "comment" : "\n     * UnicodeReplacer API\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toReplacerPattern(boolean escapeUnprintable)",
    "returnType" : "String",
    "comment" : "\n     * UnicodeReplacer API\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addReplacementSetTo(UnicodeSet toUnionTo)",
    "returnType" : "void",
    "comment" : "\n     * Union the set of all characters that may output by this object\n     * into the given set.\n     * @param toUnionTo the set into which to union the output characters\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int replace(Replaceable text, int start, int limit, int[] cursor)", "public String toReplacerPattern(boolean escapeUnprintable)", "public void addReplacementSetTo(UnicodeSet toUnionTo)" ],
  "variableNames" : [ "output", "cursorPos", "hasCursor", "isComplex", "data" ]
}