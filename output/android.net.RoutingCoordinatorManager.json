{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/RoutingCoordinatorManager.java",
  "packageName" : "android.net",
  "className" : "RoutingCoordinatorManager",
  "comment" : "\n * A manager class for talking to the routing coordinator service.\n *\n * This class should only be used by the connectivity and tethering module. This is enforced\n * by the build rules. Do not change build rules to gain access to this class from elsewhere.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IRoutingCoordinator",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void addRoute(final int netId, final RouteInfo route)",
    "returnType" : "void",
    "comment" : "\n     * Add a route for specific network\n     *\n     * @param netId the network to add the route to\n     * @param route the route to add\n     * @throws ServiceSpecificException in case of failure, with an error code indicating the\n     *         cause of the failure.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeRoute(final int netId, final RouteInfo route)",
    "returnType" : "void",
    "comment" : "\n     * Remove a route for specific network\n     *\n     * @param netId the network to remove the route from\n     * @param route the route to remove\n     * @throws ServiceSpecificException in case of failure, with an error code indicating the\n     *         cause of the failure.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void updateRoute(final int netId, final RouteInfo route)",
    "returnType" : "void",
    "comment" : "\n     * Update a route for specific network\n     *\n     * @param netId the network to update the route for\n     * @param route parcelable with route information\n     * @throws ServiceSpecificException in case of failure, with an error code indicating the\n     *         cause of the failure.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addInterfaceToNetwork(final int netId, final String iface)",
    "returnType" : "void",
    "comment" : "\n     * Adds an interface to a network. The interface must not be assigned to any network, including\n     * the specified network.\n     *\n     * @param netId the network to add the interface to.\n     * @param iface the name of the interface to add.\n     *\n     * @throws ServiceSpecificException in case of failure, with an error code corresponding to the\n     *         unix errno.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeInterfaceFromNetwork(final int netId, final String iface)",
    "returnType" : "void",
    "comment" : "\n     * Removes an interface from a network. The interface must be assigned to the specified network.\n     *\n     * @param netId the network to remove the interface from.\n     * @param iface the name of the interface to remove.\n     *\n     * @throws ServiceSpecificException in case of failure, with an error code corresponding to the\n     *         unix errno.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addInterfaceForward(final String fromIface, final String toIface)",
    "returnType" : "void",
    "comment" : "\n     * Add forwarding ip rule\n     *\n     * @param fromIface interface name to add forwarding ip rule\n     * @param toIface interface name to add forwarding ip rule\n     * @throws ServiceSpecificException in case of failure, with an error code indicating the\n     *         cause of the failure.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeInterfaceForward(final String fromIface, final String toIface)",
    "returnType" : "void",
    "comment" : "\n     * Remove forwarding ip rule\n     *\n     * @param fromIface interface name to remove forwarding ip rule\n     * @param toIface interface name to remove forwarding ip rule\n     * @throws ServiceSpecificException in case of failure, with an error code indicating the\n     *         cause of the failure.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void addRoute(final int netId, final RouteInfo route)", "public void removeRoute(final int netId, final RouteInfo route)", "public void updateRoute(final int netId, final RouteInfo route)", "public void addInterfaceToNetwork(final int netId, final String iface)", "public void removeInterfaceFromNetwork(final int netId, final String iface)", "public void addInterfaceForward(final String fromIface, final String toIface)", "public void removeInterfaceForward(final String fromIface, final String toIface)" ],
  "variableNames" : [ "mContext", "mService" ]
}