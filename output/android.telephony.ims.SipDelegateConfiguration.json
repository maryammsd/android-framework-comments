{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/SipDelegateConfiguration.java",
  "packageName" : "android.telephony.ims",
  "className" : "SipDelegateConfiguration",
  "comment" : "\n * The IMS registration and other attributes that the {@link SipDelegateConnection} used by the\n * IMS application will need to be aware of to correctly generate outgoing {@link SipMessage}s.\n * <p>\n * The IMS service must generate new instances of this configuration as the IMS configuration\n * managed by the IMS service changes. Along with each {@link SipDelegateConfiguration} instance\n * containing the configuration is the \"version\", which should be incremented every time a new\n * {@link SipDelegateConfiguration} instance is created. The {@link SipDelegateConnection} will\n * include the version of the {@link SipDelegateConfiguration} instance that it used in order for\n * the {@link SipDelegate} to easily identify if the IMS application used a now stale configuration\n * to generate the {@link SipMessage} and return\n * {@link SipDelegateManager#MESSAGE_FAILURE_REASON_STALE_IMS_CONFIGURATION} in\n * {@link DelegateMessageCallback#onMessageSendFailure(String, int)} so that the IMS application can\n * regenerate that {@link SipMessage} using the correct {@link SipDelegateConfiguration}\n * instance.\n * <p>\n * Every time the IMS configuration state changes in the IMS service, a full configuration should\n * be generated. The new  {@link SipDelegateConfiguration} instance should not be an incremental\n * update.\n * @see Builder\n * @hide\n ",
  "links" : [ "android.telephony.ims.SipMessage", "android.telephony.ims.stub.SipDelegate", "android.telephony.ims.SipDelegateConnection", "android.telephony.ims.SipDelegateConfiguration", "android.telephony.ims.DelegateMessageCallback#onMessageSendFailure(String", "android.telephony.ims.SipDelegateManager#MESSAGE_FAILURE_REASON_STALE_IMS_CONFIGURATION" ],
  "variables" : [ {
    "name" : "SIP_TRANSPORT_UDP",
    "type" : "int",
    "comment" : "\n     * The SIP transport uses UDP.\n     ",
    "links" : [ ]
  }, {
    "name" : "SIP_TRANSPORT_TCP",
    "type" : "int",
    "comment" : "\n     * The SIP transport uses TCP.\n     ",
    "links" : [ ]
  }, {
    "name" : "UDP_PAYLOAD_SIZE_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * The value returned by {@link #getMaxUdpPayloadSizeBytes()} when it is not defined.\n     ",
    "links" : [ "#getMaxUdpPayloadSizeBytes()" ]
  }, {
    "name" : "mVersion",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransportType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLocalAddress",
    "type" : "InetSocketAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSipServerAddress",
    "type" : "InetSocketAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSipCompactFormEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSipKeepaliveEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxUdpPayloadSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPublicUserIdentifier",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPrivateUserIdentifier",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHomeDomain",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImei",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGruu",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSipAuthHeader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSipAuthNonce",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceRouteHeader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPathHeader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserAgentHeader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContactUserParam",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPaniHeader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlaniHeader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCniHeader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAssociatedUriHeader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIpSecConfiguration",
    "type" : "IpSecConfiguration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNatAddress",
    "type" : "InetSocketAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SipDelegateConfiguration>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SipDelegateConfiguration copyAndIncrementVersion()",
    "returnType" : "SipDelegateConfiguration",
    "comment" : "\n     * @return A copy of this instance with an incremented version.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getVersion()",
    "returnType" : "long",
    "comment" : "\n     * An integer representing the version number of this SipDelegateImsConfiguration.\n     * {@link SipMessage}s that are created using this configuration will also have a this\n     * version number associated with them, which will allow the IMS service to validate that the\n     * {@link SipMessage} was using the latest configuration during creation and not a stale\n     * configuration due to race conditions between the configuration being updated and the RCS\n     * application not receiving the updated configuration before generating a new message.\n     * <p>\n     * The version number should be a positive number that starts at 0 and increments sequentially\n     * as new {@link SipDelegateConfiguration} instances are created to update the IMS\n     * configuration state.\n     *\n     * @return the version number associated with this {@link SipDelegateConfiguration}.\n     ",
    "links" : [ "android.telephony.ims.SipMessage", "android.telephony.ims.SipDelegateConfiguration" ]
  }, {
    "name" : "public int getTransportType()",
    "returnType" : "int",
    "comment" : "\n     * @return The Transport type of the SIP delegate.\n     ",
    "links" : [ ]
  }, {
    "name" : "public InetSocketAddress getLocalAddress()",
    "returnType" : "InetSocketAddress",
    "comment" : "\n     * @return The local IP address and port used for SIP traffic.\n     ",
    "links" : [ ]
  }, {
    "name" : "public InetSocketAddress getSipServerAddress()",
    "returnType" : "InetSocketAddress",
    "comment" : "\n     * @return The default IP Address and port of the SIP server or P-CSCF used for SIP traffic.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSipCompactFormEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if SIP compact form is enabled for the associated SIP Delegate,\n     * {@code false} if it is not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSipKeepaliveEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if SIP keepalives are enabled for the associated SIP Delegate,\n     * {@code false} if it is not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxUdpPayloadSizeBytes()",
    "returnType" : "int",
    "comment" : "\n     * @return The maximum SIP payload size in bytes for UDP or {code -1} if no value was set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPublicUserIdentifier()",
    "returnType" : "String",
    "comment" : "\n     * @return The IMS public user identifier or {@code null} if it was not set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPrivateUserIdentifier()",
    "returnType" : "String",
    "comment" : "\n     * @return The IMS private user identifier or {@code null} if it was not set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getHomeDomain()",
    "returnType" : "String",
    "comment" : "\n     * @return The IMS home domain or {@code null} if it was not set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getImei()",
    "returnType" : "String",
    "comment" : "\n     * get the IMEI of the associated device.\n     * <p>\n     * Application can include the Instance-ID feature tag {@code \"+sip.instance\"} in the Contact\n     * header with a value of the device IMEI in the form {@code \"urn:gsma:imei:<device IMEI>\"}.\n     * @return The IMEI of the device or {@code null} if it was not set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public IpSecConfiguration getIpSecConfiguration()",
    "returnType" : "IpSecConfiguration",
    "comment" : "\n     * @return The IPSec configuration that must be used because SIP is communicating over IPSec.\n     * This returns {@code null} SIP is not communicating over IPSec.\n     ",
    "links" : [ ]
  }, {
    "name" : "public InetSocketAddress getNatSocketAddress()",
    "returnType" : "InetSocketAddress",
    "comment" : "\n     * @return The public IP address and port of the device due to it being behind a NAT.\n     * This returns {@code null} if the device is not behind a NAT.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Uri getPublicGruuUri()",
    "returnType" : "Uri",
    "comment" : "\n     * @return The device's Globally routable user-agent URI (GRUU) or {@code null} if this feature\n     * is not enabled for the SIP delegate.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipAuthenticationHeader()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP authentication header or {@code null} if there is none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipAuthenticationNonce()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP authentication nonce or {@code null} if there is none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipServiceRouteHeader()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP service route header or {@code null} if there is none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipPathHeader()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP path header or {@code null} if there is none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipUserAgentHeader()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP User-Agent header or {@code null} if there is none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipContactUserParameter()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP Contact header's User parameter or {@code null} if there is\n     * none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipPaniHeader()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP P-Access-Network-Info (P-ANI) header or {@code null} if there is\n     * none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipPlaniHeader()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP P-Last-Access-Network-Info (P-LANI) header or {@code null} if\n     * there is none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipCniHeader()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP Cellular-Network-Info (CNI) header or {@code null} if there is\n     * none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipAssociatedUriHeader()",
    "returnType" : "String",
    "comment" : "\n     * @return The value of the SIP P-associated-uri header or {@code null} if there is none set.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void writeAddressToParcel(InetSocketAddress addr, Parcel dest)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private InetSocketAddress readAddressFromParcel(Parcel source)",
    "returnType" : "InetSocketAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void writeToParcel(@NonNull Parcel dest, int flags)", "public SipDelegateConfiguration copyAndIncrementVersion()", "public long getVersion()", "public int getTransportType()", "public InetSocketAddress getLocalAddress()", "public InetSocketAddress getSipServerAddress()", "public boolean isSipCompactFormEnabled()", "public boolean isSipKeepaliveEnabled()", "public int getMaxUdpPayloadSizeBytes()", "public String getPublicUserIdentifier()", "public String getPrivateUserIdentifier()", "public String getHomeDomain()", "public String getImei()", "public IpSecConfiguration getIpSecConfiguration()", "public InetSocketAddress getNatSocketAddress()", "public Uri getPublicGruuUri()", "public String getSipAuthenticationHeader()", "public String getSipAuthenticationNonce()", "public String getSipServiceRouteHeader()", "public String getSipPathHeader()", "public String getSipUserAgentHeader()", "public String getSipContactUserParameter()", "public String getSipPaniHeader()", "public String getSipPlaniHeader()", "public String getSipCniHeader()", "public String getSipAssociatedUriHeader()", "private void writeAddressToParcel(InetSocketAddress addr, Parcel dest)", "private InetSocketAddress readAddressFromParcel(Parcel source)", "public int describeContents()", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "SIP_TRANSPORT_UDP", "SIP_TRANSPORT_TCP", "UDP_PAYLOAD_SIZE_UNDEFINED", "mVersion", "mTransportType", "mLocalAddress", "mSipServerAddress", "mIsSipCompactFormEnabled", "mIsSipKeepaliveEnabled", "mMaxUdpPayloadSize", "mPublicUserIdentifier", "mPrivateUserIdentifier", "mHomeDomain", "mImei", "mGruu", "mSipAuthHeader", "mSipAuthNonce", "mServiceRouteHeader", "mPathHeader", "mUserAgentHeader", "mContactUserParam", "mPaniHeader", "mPlaniHeader", "mCniHeader", "mAssociatedUriHeader", "mIpSecConfiguration", "mNatAddress", "CREATOR" ]
}