{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/aidl/SipDelegateConnectionAidlWrapper.java",
  "packageName" : "android.telephony.ims.aidl",
  "className" : "SipDelegateConnectionAidlWrapper",
  "comment" : "\n * Wrapper class implementing {@link SipDelegateConnection} using AIDL, which is returned to the\n * local process. Also holds a reference to incoming connection message and state AIDL impl to\n * trampoline events to callbacks as well as notify the local process in the event that the remote\n * process becomes unavailable.\n * <p>\n * When the remote {@link SipDelegate} is created, this instance tracks the\n * {@link ISipDelegate} associated with it and implements the\n * {@link SipDelegateConnection} sent back to the local callback.\n * @hide\n ",
  "links" : [ "android.telephony.ims.stub.SipDelegate", "android.telephony.ims.SipDelegateConnection", "ISipDelegate" ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStateBinder",
    "type" : "ISipDelegateConnectionStateCallback.Stub",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageBinder",
    "type" : "ISipDelegateMessageCallback.Stub",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStateCallback",
    "type" : "DelegateConnectionStateCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageCallback",
    "type" : "DelegateConnectionMessageCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDelegateBinder",
    "type" : "AtomicReference<ISipDelegate>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void sendMessage(SipMessage sipMessage, long configVersion)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyMessageReceived(String viaTransactionId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyMessageReceiveError(String viaTransactionId, int reason)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cleanupSession(String callId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void binderDied()",
    "returnType" : "void",
    "comment" : " Also called upon IImsRcsController death (telephony process dies).",
    "links" : [ ]
  }, {
    "name" : "public ISipDelegateConnectionStateCallback getStateCallbackBinder()",
    "returnType" : "ISipDelegateConnectionStateCallback",
    "comment" : "\n     * @return Implementation of state binder.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ISipDelegateMessageCallback getMessageCallbackBinder()",
    "returnType" : "ISipDelegateMessageCallback",
    "comment" : "\n     * @return Implementation of message binder.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ISipDelegate getSipDelegateBinder()",
    "returnType" : "ISipDelegate",
    "comment" : "\n     * @return The ISipDelegateConnection associated with this wrapper.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void associateSipDelegate(ISipDelegate c)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void invalidateSipDelegateBinder()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void notifyLocalMessageFailedToSend(SipMessage m, int reason)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void sendMessage(SipMessage sipMessage, long configVersion)", "public void notifyMessageReceived(String viaTransactionId)", "public void notifyMessageReceiveError(String viaTransactionId, int reason)", "public void cleanupSession(String callId)", "public void binderDied()", "public ISipDelegateConnectionStateCallback getStateCallbackBinder()", "public ISipDelegateMessageCallback getMessageCallbackBinder()", "public ISipDelegate getSipDelegateBinder()", "private void associateSipDelegate(ISipDelegate c)", "private void invalidateSipDelegateBinder()", "private void notifyLocalMessageFailedToSend(SipMessage m, int reason)" ],
  "variableNames" : [ "LOG_TAG", "mStateBinder", "mMessageBinder", "mExecutor", "mStateCallback", "mMessageCallback", "mDelegateBinder" ]
}