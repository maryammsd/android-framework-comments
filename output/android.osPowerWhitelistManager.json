{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/PowerWhitelistManager.java",
  "packageName" : "android.os",
  "className" : "PowerWhitelistManager",
  "comment" : "\n * Interface to access and modify the power save whitelist.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IDeviceIdleController",
    "comment" : " TODO: migrate to PowerWhitelistController",
    "links" : [ ]
  }, {
    "name" : "EVENT_UNSPECIFIED",
    "type" : "int",
    "comment" : "\n     * Indicates that an unforeseen event has occurred and the app should be whitelisted to handle\n     * it.\n     ",
    "links" : [ ]
  }, {
    "name" : "EVENT_SMS",
    "type" : "int",
    "comment" : "\n     * Indicates that an SMS event has occurred and the app should be whitelisted to handle it.\n     ",
    "links" : [ ]
  }, {
    "name" : "EVENT_MMS",
    "type" : "int",
    "comment" : "\n     * Indicates that an MMS event has occurred and the app should be whitelisted to handle it.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void addToWhitelist(@NonNull String packageName)",
    "returnType" : "void",
    "comment" : "\n     * Add the specified package to the permanent power save whitelist.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addToWhitelist(@NonNull List<String> packageNames)",
    "returnType" : "void",
    "comment" : "\n     * Add the specified packages to the permanent power save whitelist.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getWhitelistedAppIds(boolean includingIdle)",
    "returnType" : "int[]",
    "comment" : "\n     * Get a list of app IDs of app that are whitelisted. This does not include temporarily\n     * whitelisted apps.\n     *\n     * @param includingIdle Set to true if the app should be whitelisted from device idle as well\n     *                      as other power save restrictions\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isWhitelisted(@NonNull String packageName, boolean includingIdle)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the app is whitelisted from power save restrictions. This does not include\n     * temporarily whitelisted apps.\n     *\n     * @param includingIdle Set to true if the app should be whitelisted from device\n     *                      idle as well as other power save restrictions\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void whitelistAppTemporarily(@NonNull String packageName, long durationMs)",
    "returnType" : "void",
    "comment" : "\n     * Add an app to the temporary whitelist for a short amount of time.\n     *\n     * @param packageName The package to add to the temp whitelist\n     * @param durationMs How long to keep the app on the temp whitelist for (in milliseconds)\n     ",
    "links" : [ ]
  }, {
    "name" : "public long whitelistAppTemporarilyForEvent(@NonNull String packageName, @WhitelistEvent int event, @NonNull String reason)",
    "returnType" : "long",
    "comment" : "\n     * Add an app to the temporary whitelist for a short amount of time for a specific reason.\n     *\n     * @param packageName The package to add to the temp whitelist\n     * @param event The reason to add the app to the temp whitelist\n     * @param reason A human-readable reason explaining why the app is temp whitelisted. Only used\n     *               for logging purposes\n     * @return The duration (in milliseconds) that the app is whitelisted for\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mContext", "mService", "EVENT_UNSPECIFIED", "EVENT_SMS", "EVENT_MMS" ],
  "methodNames" : [ "public void addToWhitelist(@NonNull String packageName)", "public void addToWhitelist(@NonNull List<String> packageNames)", "public int[] getWhitelistedAppIds(boolean includingIdle)", "public boolean isWhitelisted(@NonNull String packageName, boolean includingIdle)", "public void whitelistAppTemporarily(@NonNull String packageName, long durationMs)", "public long whitelistAppTemporarilyForEvent(@NonNull String packageName, @WhitelistEvent int event, @NonNull String reason)" ]
}