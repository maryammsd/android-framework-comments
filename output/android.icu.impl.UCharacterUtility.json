{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/UCharacterUtility.java",
  "packageName" : "android.icu.impl",
  "className" : "UCharacterUtility",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "NON_CHARACTER_SUFFIX_MIN_3_0_",
    "type" : "int",
    "comment" : "\n    * Minimum suffix value that indicates if a character is non character.\n    * Unicode 3.0 non characters\n    ",
    "links" : [ ]
  }, {
    "name" : "NON_CHARACTER_MIN_3_1_",
    "type" : "int",
    "comment" : "\n    * New minimum non character in Unicode 3.1\n    ",
    "links" : [ ]
  }, {
    "name" : "NON_CHARACTER_MAX_3_1_",
    "type" : "int",
    "comment" : "\n    * New non character range in Unicode 3.1\n    ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean isNonCharacter(int ch)",
    "returnType" : "boolean",
    "comment" : "\n    * Determines if codepoint is a non character\n    * @param ch codepoint\n    * @return true if codepoint is a non character false otherwise\n    ",
    "links" : [ ]
  }, {
    "name" : " static int toInt(char msc, char lsc)",
    "returnType" : "int",
    "comment" : "\n    * joining 2 chars to form an int\n    * @param msc most significant char\n    * @param lsc least significant char\n    * @return int form\n    ",
    "links" : [ ]
  }, {
    "name" : " static int getNullTermByteSubString(StringBuffer str, byte[] array, int index)",
    "returnType" : "int",
    "comment" : "\n    * Retrieves a null terminated substring from an array of bytes.\n    * Substring is a set of non-zero bytes starting from argument start to the \n    * next zero byte. If the first byte is a zero, the next byte will be taken as\n    * the first byte.\n    * @param str stringbuffer to store data in, data will be store with each\n    *            byte as a char\n    * @param array byte array\n    * @param index to start substring in byte count\n    * @return the end position of the substring within the character array\n    ",
    "links" : [ ]
  }, {
    "name" : " static int compareNullTermByteSubString(String str, byte[] array, int strindex, int aindex)",
    "returnType" : "int",
    "comment" : "\n    * Compares a null terminated substring from an array of bytes.\n    * Substring is a set of non-zero bytes starting from argument start to the \n    * next zero byte. if the first byte is a zero, the next byte will be taken as\n    * the first byte.\n    * @param str string to compare\n    * @param array byte array\n    * @param strindex index within str to start comparing\n    * @param aindex array index to start in byte count\n    * @return the end position of the substring within str if matches otherwise \n    *         a -1\n    ",
    "links" : [ ]
  }, {
    "name" : " static int skipNullTermByteSubString(byte[] array, int index, int skipcount)",
    "returnType" : "int",
    "comment" : "\n    * Skip null terminated substrings from an array of bytes.\n    * Substring is a set of non-zero bytes starting from argument start to the \n    * next zero byte. If the first byte is a zero, the next byte will be taken as\n    * the first byte.\n    * @param array byte array\n    * @param index to start substrings in byte count\n    * @param skipcount number of null terminated substrings to skip\n    * @return the end position of the substrings within the character array\n    ",
    "links" : [ ]
  }, {
    "name" : " static int skipByteSubString(byte[] array, int index, int length, byte skipend)",
    "returnType" : "int",
    "comment" : "\n     * skip substrings from an array of characters, where each character is a set \n     * of 2 bytes. substring is a set of non-zero bytes starting from argument \n     * start to the byte of the argument value. skips up to a max number of \n     * characters\n     * @param array byte array to parse\n     * @param index to start substrings in byte count\n     * @param length the max number of bytes to skip\n     * @param skipend value of byte to skip to\n     * @return the number of bytes skipped\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static boolean isNonCharacter(int ch)", " static int toInt(char msc, char lsc)", " static int getNullTermByteSubString(StringBuffer str, byte[] array, int index)", " static int compareNullTermByteSubString(String str, byte[] array, int strindex, int aindex)", " static int skipNullTermByteSubString(byte[] array, int index, int skipcount)", " static int skipByteSubString(byte[] array, int index, int length, byte skipend)" ],
  "variableNames" : [ "NON_CHARACTER_SUFFIX_MIN_3_0_", "NON_CHARACTER_MIN_3_1_", "NON_CHARACTER_MAX_3_1_" ]
}