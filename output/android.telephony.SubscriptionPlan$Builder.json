{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/SubscriptionPlan.java",
  "packageName" : "android.telephony",
  "className" : "Builder",
  "comment" : "\n     * Builder for a {@link SubscriptionPlan}.\n     ",
  "links" : [ "android.telephony.SubscriptionPlan" ],
  "variables" : [ {
    "name" : "plan",
    "type" : "SubscriptionPlan",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Builder createNonrecurring(ZonedDateTime start, ZonedDateTime end)",
    "returnType" : "Builder",
    "comment" : "\n         * Start defining a {@link SubscriptionPlan} that covers a very specific\n         * window of time, and never automatically recurs.\n         *\n         * @param start The exact time at which the plan starts.\n         * @param end The exact time at which the plan ends.\n         ",
    "links" : [ "android.telephony.SubscriptionPlan" ]
  }, {
    "name" : "public static Builder createRecurring(ZonedDateTime start, Period period)",
    "returnType" : "Builder",
    "comment" : "\n         * Start defining a {@link SubscriptionPlan} that starts at a specific\n         * time, and automatically recurs after each specific period of time,\n         * repeating indefinitely.\n         * <p>\n         * When the given period is set to exactly one month, the plan will\n         * always recur on the day of the month defined by\n         * {@link ZonedDateTime#getDayOfMonth()}. When a particular month ends\n         * before this day, the plan will recur on the last possible instant of\n         * that month.\n         *\n         * @param start The exact time at which the plan starts.\n         * @param period The period after which the plan automatically recurs.\n         ",
    "links" : [ "java.time.ZonedDateTime#getDayOfMonth()", "android.telephony.SubscriptionPlan" ]
  }, {
    "name" : "public static Builder createRecurringMonthly(ZonedDateTime start)",
    "returnType" : "Builder",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public static Builder createRecurringWeekly(ZonedDateTime start)",
    "returnType" : "Builder",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public static Builder createRecurringDaily(ZonedDateTime start)",
    "returnType" : "Builder",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public SubscriptionPlan build()",
    "returnType" : "SubscriptionPlan",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Builder setTitle(@Nullable CharSequence title)",
    "returnType" : "Builder",
    "comment" : " Set the short title of this plan. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSummary(@Nullable CharSequence summary)",
    "returnType" : "Builder",
    "comment" : " Set the short summary of this plan. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDataLimit(@BytesLong long dataLimitBytes, @LimitBehavior int dataLimitBehavior)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the usage threshold at which data access changes.\n         *\n         * @param dataLimitBytes the usage threshold at which data access\n         *            changes\n         * @param dataLimitBehavior the behavior of data access when usage\n         *            reaches the threshold\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDataUsage(@BytesLong long dataUsageBytes, @CurrentTimeMillisLong long dataUsageTime)",
    "returnType" : "Builder",
    "comment" : "\n         * Set a snapshot of currently known mobile data usage.\n         *\n         * @param dataUsageBytes the currently known mobile data usage\n         * @param dataUsageTime the time at which this snapshot was valid\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNetworkTypes(@NonNull @NetworkType int[] networkTypes)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the network types this SubscriptionPlan applies to. By default the plan will apply\n         * to all network types. An empty array means this plan applies to no network types.\n         *\n         * @param networkTypes an array of all network types that apply to this plan.\n         * @see TelephonyManager for network type values\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder resetNetworkTypes()",
    "returnType" : "Builder",
    "comment" : "\n         * Reset any network types that were set with {@link #setNetworkTypes(int[])}.\n         * This will make the SubscriptionPlan apply to all network types.\n         ",
    "links" : [ "#setNetworkTypes(int" ]
  } ],
  "methodNames" : [ "public static Builder createNonrecurring(ZonedDateTime start, ZonedDateTime end)", "public static Builder createRecurring(ZonedDateTime start, Period period)", "public static Builder createRecurringMonthly(ZonedDateTime start)", "public static Builder createRecurringWeekly(ZonedDateTime start)", "public static Builder createRecurringDaily(ZonedDateTime start)", "public SubscriptionPlan build()", "public Builder setTitle(@Nullable CharSequence title)", "public Builder setSummary(@Nullable CharSequence summary)", "public Builder setDataLimit(@BytesLong long dataLimitBytes, @LimitBehavior int dataLimitBehavior)", "public Builder setDataUsage(@BytesLong long dataUsageBytes, @CurrentTimeMillisLong long dataUsageTime)", "public Builder setNetworkTypes(@NonNull @NetworkType int[] networkTypes)", "public Builder resetNetworkTypes()" ],
  "variableNames" : [ "plan" ]
}