{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/interactive/TvInteractiveAppManager.java",
  "packageName" : "android.media.tv.interactive",
  "className" : "TvInteractiveAppCallback",
  "comment" : "\n     * Callback used to monitor status of the TV Interactive App.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onInteractiveAppServiceAdded(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a TV Interactive App service is added to the system.\n         *\n         * <p>Normally it happens when the user installs a new TV Interactive App service package\n         * that implements {@link TvInteractiveAppService} interface.\n         *\n         * @param iAppServiceId The ID of the TV Interactive App service.\n         ",
    "links" : [ "android.media.tv.interactive.TvInteractiveAppService" ]
  }, {
    "name" : "public void onInteractiveAppServiceRemoved(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a TV Interactive App service is removed from the system.\n         *\n         * <p>Normally it happens when the user uninstalls the previously installed TV Interactive\n         * App service package.\n         *\n         * @param iAppServiceId The ID of the TV Interactive App service.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onInteractiveAppServiceUpdated(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a TV Interactive App service is updated on the system.\n         *\n         * <p>Normally it happens when a previously installed TV Interactive App service package is\n         * re-installed or a newer version of the package exists becomes available/unavailable.\n         *\n         * @param iAppServiceId The ID of the TV Interactive App service.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTvInteractiveAppServiceInfoUpdated(@NonNull TvInteractiveAppServiceInfo iAppInfo)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the information about an existing TV Interactive App service has been\n         * updated.\n         *\n         * <p>Because the system automatically creates a <code>TvInteractiveAppServiceInfo</code>\n         * object for each TV Interactive App service based on the information collected from the\n         * <code>AndroidManifest.xml</code>, this method is only called back when such information\n         * has changed dynamically.\n         *\n         * @param iAppInfo The <code>TvInteractiveAppServiceInfo</code> object that contains new\n         *                 information.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTvInteractiveAppServiceStateChanged(@NonNull String iAppServiceId, @TvInteractiveAppServiceInfo.InteractiveAppType int type, @ServiceState int state, @ErrorCode int err)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the state of the interactive app service is changed.\n         *\n         * @param iAppServiceId The ID of the TV Interactive App service.\n         * @param type the interactive app type\n         * @param state the current state of the service of the given type\n         * @param err the error code for error state. {@link #ERROR_NONE} is used when the state is\n         *            not {@link #SERVICE_STATE_ERROR}.\n         ",
    "links" : [ "#ERROR_NONE", "#SERVICE_STATE_ERROR" ]
  } ],
  "methodNames" : [ "public void onInteractiveAppServiceAdded(@NonNull String iAppServiceId)", "public void onInteractiveAppServiceRemoved(@NonNull String iAppServiceId)", "public void onInteractiveAppServiceUpdated(@NonNull String iAppServiceId)", "public void onTvInteractiveAppServiceInfoUpdated(@NonNull TvInteractiveAppServiceInfo iAppInfo)", "public void onTvInteractiveAppServiceStateChanged(@NonNull String iAppServiceId, @TvInteractiveAppServiceInfo.InteractiveAppType int type, @ServiceState int state, @ErrorCode int err)" ],
  "variableNames" : [ ]
}