{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/TimeUtils.java",
  "packageName" : "org.chromium.base",
  "className" : "TimeUtils",
  "comment" : "\n * Utilities related to timestamps, including the ability to use fake time for tests via\n * FakeTimeTestRule.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SECONDS_PER_MINUTE",
    "type" : "long",
    "comment" : " static-get / static-invoke.",
    "links" : [ ]
  }, {
    "name" : "SECONDS_PER_HOUR",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SECONDS_PER_DAY",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MILLISECONDS_PER_MINUTE",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NANOSECONDS_PER_MICROSECOND",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NANOSECONDS_PER_MILLISECOND",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sFakeClock",
    "type" : "FakeClock",
    "comment" : " restores the value to null in its clean-up logic.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static long currentTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Wrapper for System.currentTimeMillis() (milliseconds since the epoch).\n     * Can be faked in tests using FakeTimeTestRule.\n     * See: https://developer.android.com/reference/android/os/SystemClock\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long uptimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Wrapper for SystemClock.uptimeMillis() (uptime excluding deep sleep).\n     * Can be faked in tests using FakeTimeTestRule.\n     * See: https://developer.android.com/reference/android/os/SystemClock\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long elapsedRealtimeNanos()",
    "returnType" : "long",
    "comment" : "\n     * Wrapper for SystemClock.elapsedRealtimeNanos() (uptime including deep sleep).\n     * Can be faked in tests using FakeTimeTestRule.\n     * See: https://developer.android.com/reference/android/os/SystemClock\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long elapsedRealtimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Wrapper for SystemClock.elapsedRealtimeMillis() (uptime including deep sleep).\n     * Can be faked in tests using FakeTimeTestRule.\n     * See: https://developer.android.com/reference/android/os/SystemClock\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long currentThreadTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Wrapper for SystemClock.currentThreadTimeMillis() (excludes blocking time).\n     * Can be faked in tests using FakeTimeTestRule.\n     * See: https://developer.android.com/reference/android/os/SystemClock\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static long currentTimeMillis()", "public static long uptimeMillis()", "public static long elapsedRealtimeNanos()", "public static long elapsedRealtimeMillis()", "public static long currentThreadTimeMillis()" ],
  "variableNames" : [ "SECONDS_PER_MINUTE", "SECONDS_PER_HOUR", "SECONDS_PER_DAY", "MILLISECONDS_PER_MINUTE", "NANOSECONDS_PER_MICROSECOND", "NANOSECONDS_PER_MILLISECOND", "sFakeClock" ]
}