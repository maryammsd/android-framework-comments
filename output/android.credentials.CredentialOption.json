{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/credentials/CredentialOption.java",
  "packageName" : "android.credentials",
  "className" : "CredentialOption",
  "comment" : "\n * Information about a specific type of credential to be requested during a {@link\n * CredentialManager#getCredential} operation.\n ",
  "links" : [ "android.credentials.CredentialManager#getCredential" ],
  "variables" : [ {
    "name" : "SUPPORTED_ELEMENT_KEYS",
    "type" : "String",
    "comment" : "\n     * Bundle key to the list of elements keys supported/requested. Framework will use this key\n     * to determine which types of Credentials will utilize Credential Registry when filtering\n     * Credential Providers to ping.\n     ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "String",
    "comment" : "\n     * The requested credential type.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCredentialRetrievalData",
    "type" : "Bundle",
    "comment" : "\n     * The full request data.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCandidateQueryData",
    "type" : "Bundle",
    "comment" : "\n     * The partial request data that will be sent to the provider during the initial credential\n     * candidate query stage.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsSystemProviderRequired",
    "type" : "boolean",
    "comment" : "\n     * Determines whether the request must only be fulfilled by a system provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "mAllowedProviders",
    "type" : "ArraySet<ComponentName>",
    "comment" : "\n     * A list of {@link ComponentName}s corresponding to the providers that this option must be\n     * queried against.\n     ",
    "links" : [ "android.content.ComponentName" ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<CredentialOption>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getType()",
    "returnType" : "String",
    "comment" : "\n     * Returns the requested credential type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getCredentialRetrievalData()",
    "returnType" : "Bundle",
    "comment" : "\n     * Returns the full request data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getCandidateQueryData()",
    "returnType" : "Bundle",
    "comment" : "\n     * Returns the partial request data that will be sent to the provider during the initial\n     * credential candidate query stage.\n     *\n     * For security reason, a provider will receive the request data in two stages. First it gets\n     * this partial request that do not contain sensitive user information; it uses this\n     * information to provide credential candidates that the [@code CredentialManager] will show to\n     * the user. Next, the full request data, {@link #getCredentialRetrievalData()}, will be sent to\n     * a provider only if the user further grants the consent by choosing a candidate from the\n     * provider.\n     ",
    "links" : [ "#getCredentialRetrievalData()" ]
  }, {
    "name" : "public boolean isSystemProviderRequired()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the request must only be fulfilled by a system provider, and false\n     * otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<ComponentName> getAllowedProviders()",
    "returnType" : "Set<ComponentName>",
    "comment" : "\n     * Returns the set of {@link ComponentName} corresponding to providers that must receive\n     * this option.\n     ",
    "links" : [ "android.content.ComponentName" ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getType()", "public Bundle getCredentialRetrievalData()", "public Bundle getCandidateQueryData()", "public boolean isSystemProviderRequired()", "public Set<ComponentName> getAllowedProviders()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public String toString()" ],
  "variableNames" : [ "SUPPORTED_ELEMENT_KEYS", "mType", "mCredentialRetrievalData", "mCandidateQueryData", "mIsSystemProviderRequired", "mAllowedProviders", "CREATOR" ]
}