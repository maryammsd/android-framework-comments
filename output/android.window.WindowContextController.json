{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/WindowContextController.java",
  "packageName" : "android.window",
  "className" : "WindowContextController",
  "comment" : "\n * The controller to manage {@link WindowContext}, such as attaching to a window manager node or\n * detaching from the current attached node. The user must call\n * {@link #attachToDisplayArea(int, int, Bundle)}, call {@link #attachToWindowToken(IBinder)}\n * after that if necessary, and then call {@link #detachIfNeeded()} for release.\n *\n * @hide\n ",
  "links" : [ "#attachToDisplayArea(int", "#attachToWindowToken(IBinder)", "android.window.WindowContext", "#detachIfNeeded()" ],
  "variables" : [ {
    "name" : "DEBUG_ATTACH",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAttachedToDisplayArea",
    "type" : "int",
    "comment" : "\n     * {@link AttachStatus#STATUS_ATTACHED} to indicate that the {@code mToken} is associated with a\n     * {@link com.android.server.wm.DisplayArea}. Note that {@code mToken} is able to attach a\n     * WindowToken after this flag sets to {@link AttachStatus#STATUS_ATTACHED}.\n     ",
    "links" : [ "com.android.server.wm.DisplayArea", "#STATUS_ATTACHED" ]
  }, {
    "name" : "mToken",
    "type" : "WindowTokenClient",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void attachToDisplayArea(@WindowType int type, int displayId, @Nullable Bundle options)",
    "returnType" : "void",
    "comment" : "\n     * Attaches the {@code mToken} to a {@link com.android.server.wm.DisplayArea}.\n     *\n     * @param type The window type of the {@link WindowContext}\n     * @param displayId The {@link Context#getDisplayId() ID of display} to associate with\n     * @param options The window context launched option\n     * @throws IllegalStateException if the {@code mToken} has already been attached to a\n     * DisplayArea.\n     ",
    "links" : [ "com.android.server.wm.DisplayArea", "android.content.Context#getDisplayId()", "android.window.WindowContext" ]
  }, {
    "name" : "public void attachToWindowToken(@NonNull IBinder windowToken)",
    "returnType" : "void",
    "comment" : "\n     * Switches to attach the window context to a window token.\n     * <p>\n     * Note that the context should have been attached to a\n     * {@link com.android.server.wm.DisplayArea} by {@link #attachToDisplayArea(int, int, Bundle)}\n     * before attaching to a window token, and the window token's type must match the window\n     * context's type.\n     * </p><p>\n     * A {@link WindowContext} can only attach to a specific window manager node, which is either a\n     * {@link com.android.server.wm.DisplayArea} by calling\n     * {@link #attachToDisplayArea(int, int, Bundle)} or the latest attached {@code windowToken}\n     * although this API is allowed to be called multiple times.\n     * </p>\n     * @throws IllegalStateException if the {@code mClientToken} has not yet attached to\n     * a {@link com.android.server.wm.DisplayArea} by\n     * {@link #attachToDisplayArea(int, int, Bundle)}.\n     *\n     * @see WindowProviderService#attachToWindowToken(IBinder))\n     * @see IWindowManager#attachWindowContextToWindowToken\n     ",
    "links" : [ "#attachToDisplayArea(int", "com.android.server.wm.DisplayArea", "android.window.WindowContext" ]
  }, {
    "name" : "public void detachIfNeeded()",
    "returnType" : "void",
    "comment" : " Detaches the window context from the node it's currently associated with. ",
    "links" : [ ]
  }, {
    "name" : "public WindowTokenClientController getWindowTokenClientController()",
    "returnType" : "WindowTokenClientController",
    "comment" : " Gets the {@link WindowTokenClientController}. ",
    "links" : [ "android.window.WindowTokenClientController" ]
  } ],
  "methodNames" : [ "public void attachToDisplayArea(@WindowType int type, int displayId, @Nullable Bundle options)", "public void attachToWindowToken(@NonNull IBinder windowToken)", "public void detachIfNeeded()", "public WindowTokenClientController getWindowTokenClientController()" ],
  "variableNames" : [ "DEBUG_ATTACH", "TAG", "mAttachedToDisplayArea", "mToken" ]
}