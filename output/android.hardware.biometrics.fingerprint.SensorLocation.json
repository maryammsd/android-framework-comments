{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/biometrics/fingerprint/SensorLocation.java",
  "packageName" : "android.hardware.biometrics.fingerprint",
  "className" : "SensorLocation",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "displayId",
    "type" : "int",
    "comment" : " @deprecated use the display field instead. This field was never used. ",
    "links" : [ ]
  }, {
    "name" : "sensorLocationX",
    "type" : "int",
    "comment" : "\n   * The location of the center of the sensor if applicable. For example, sensors of\n   * FingerprintSensorType::UNDER_DISPLAY_* would report this value as the distance in pixels,\n   * measured from the left edge of the screen.\n   ",
    "links" : [ ]
  }, {
    "name" : "sensorLocationY",
    "type" : "int",
    "comment" : "\n   * The location of the center of the sensor if applicable. For example, sensors of\n   * FingerprintSensorType::UNDER_DISPLAY_* would report this value as the distance in pixels,\n   * measured from the top edge of the screen.\n   ",
    "links" : [ ]
  }, {
    "name" : "sensorRadius",
    "type" : "int",
    "comment" : "\n   * The radius of the sensor if applicable. For example, sensors of\n   * FingerprintSensorType::UNDER_DISPLAY_* would report this value as the radius of the sensor,\n   * in pixels.\n   ",
    "links" : [ ]
  }, {
    "name" : "display",
    "type" : "java.lang.String",
    "comment" : "\n   * The display to which all of the measurements are relative to. This must correspond to the\n   * android.view.Display#getUniqueId Android API. The default display is used if this field is\n   * empty.\n   * \n   * A few examples:\n   *   1) A capacitive rear fingerprint sensor would specify the display to which it is behind.\n   *   2) An under-display fingerprint sensor would specify the display on which the sensor is\n   *      located.\n   *   3) A foldable device would specify multiple locations and have a SensorLocation entry\n   *      for each display from which the sensor is accessible from.\n   ",
    "links" : [ ]
  }, {
    "name" : "sensorShape",
    "type" : "byte",
    "comment" : "\n   * The shape of the sensor if applicable. Most useful for the sensor of type\n   * SensorType::UNDER_DISPLAY_*.\n   ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "android.os.Parcelable.Creator<SensorLocation>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final int getStability()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void writeToParcel(android.os.Parcel _aidl_parcel, int _aidl_flag)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void readFromParcel(android.os.Parcel _aidl_parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final int getStability()", "public final void writeToParcel(android.os.Parcel _aidl_parcel, int _aidl_flag)", "public final void readFromParcel(android.os.Parcel _aidl_parcel)", "public int describeContents()" ],
  "variableNames" : [ "displayId", "sensorLocationX", "sensorLocationY", "sensorRadius", "display", "sensorShape", "CREATOR" ]
}