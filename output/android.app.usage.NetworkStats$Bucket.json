{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/usage/NetworkStats.java",
  "packageName" : "android.app.usage",
  "className" : "Bucket",
  "comment" : "\n     * Buckets are the smallest elements of a query result. As some dimensions of a result may be\n     * aggregated (e.g. time or state) some values may be equal across all buckets.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STATE_ALL",
    "type" : "int",
    "comment" : "\n         * Combined usage across all states.\n         ",
    "links" : [ ]
  }, {
    "name" : "STATE_DEFAULT",
    "type" : "int",
    "comment" : "\n         * Usage not accounted for in any other state.\n         ",
    "links" : [ ]
  }, {
    "name" : "STATE_FOREGROUND",
    "type" : "int",
    "comment" : "\n         * Foreground usage.\n         ",
    "links" : [ ]
  }, {
    "name" : "UID_ALL",
    "type" : "int",
    "comment" : "\n         * Special UID value for aggregate/unspecified.\n         ",
    "links" : [ ]
  }, {
    "name" : "UID_REMOVED",
    "type" : "int",
    "comment" : "\n         * Special UID value for removed apps.\n         ",
    "links" : [ ]
  }, {
    "name" : "UID_TETHERING",
    "type" : "int",
    "comment" : "\n         * Special UID value for data usage by tethering.\n         ",
    "links" : [ ]
  }, {
    "name" : "METERED_ALL",
    "type" : "int",
    "comment" : "\n         * Combined usage across all metered states. Covers metered and unmetered usage.\n         ",
    "links" : [ ]
  }, {
    "name" : "METERED_NO",
    "type" : "int",
    "comment" : "\n         * Usage that occurs on an unmetered network.\n         ",
    "links" : [ ]
  }, {
    "name" : "METERED_YES",
    "type" : "int",
    "comment" : "\n         * Usage that occurs on a metered network.\n         *\n         * <p>A network is classified as metered when the user is sensitive to heavy data usage on\n         * that connection.\n         ",
    "links" : [ ]
  }, {
    "name" : "ROAMING_ALL",
    "type" : "int",
    "comment" : "\n         * Combined usage across all roaming states. Covers both roaming and non-roaming usage.\n         ",
    "links" : [ ]
  }, {
    "name" : "ROAMING_NO",
    "type" : "int",
    "comment" : "\n         * Usage that occurs on a home, non-roaming network.\n         *\n         * <p>Any cellular usage in this bucket was incurred while the device was connected to a\n         * tower owned or operated by the user's wireless carrier, or a tower that the user's\n         * wireless carrier has indicated should be treated as a home network regardless.\n         *\n         * <p>This is also the default value for network types that do not support roaming.\n         ",
    "links" : [ ]
  }, {
    "name" : "ROAMING_YES",
    "type" : "int",
    "comment" : "\n         * Usage that occurs on a roaming network.\n         *\n         * <p>Any cellular usage in this bucket as incurred while the device was roaming on another\n         * carrier's network, for which additional charges may apply.\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_NETWORK_ALL",
    "type" : "int",
    "comment" : "\n         * Combined usage for this network regardless of default network status.\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_NETWORK_NO",
    "type" : "int",
    "comment" : "\n         * Usage that occurs while this network is not a default network.\n         *\n         * <p>This implies that the app responsible for this usage requested that it occur on a\n         * specific network different from the one(s) the system would have selected for it.\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_NETWORK_YES",
    "type" : "int",
    "comment" : "\n         * Usage that occurs while this network is a default network.\n         *\n         * <p>This implies that the app either did not select a specific network for this usage,\n         * or it selected a network that the system could have selected for app traffic.\n         ",
    "links" : [ ]
  }, {
    "name" : "TAG_NONE",
    "type" : "int",
    "comment" : "\n         * Special TAG value for total data across all tags\n         ",
    "links" : [ ]
  }, {
    "name" : "mUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTag",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultNetworkStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMetered",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRoaming",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBeginTimeStamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEndTimeStamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRxBytes",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRxPackets",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxBytes",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxPackets",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static int convertSet(@State int state)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertState(int networkStatsSet)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertUid(int uid)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertTag(int tag)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertMetered(int metered)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertRoaming(int roaming)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertDefaultNetworkStatus(int defaultNetworkStatus)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getUid()",
    "returnType" : "int",
    "comment" : "\n         * Key of the bucket. Usually an app uid or one of the following special values:<p />\n         * <ul>\n         * <li>{@link #UID_REMOVED}</li>\n         * <li>{@link #UID_TETHERING}</li>\n         * <li>{@link android.os.Process#SYSTEM_UID}</li>\n         * </ul>\n         * @return Bucket key.\n         ",
    "links" : [ "#UID_TETHERING", "android.os.Process#SYSTEM_UID", "#UID_REMOVED" ]
  }, {
    "name" : "public int getTag()",
    "returnType" : "int",
    "comment" : "\n         * Tag of the bucket.<p />\n         * @return Bucket tag.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getState()",
    "returnType" : "int",
    "comment" : "\n         * Usage state. One of the following values:<p/>\n         * <ul>\n         * <li>{@link #STATE_ALL}</li>\n         * <li>{@link #STATE_DEFAULT}</li>\n         * <li>{@link #STATE_FOREGROUND}</li>\n         * </ul>\n         * @return Usage state.\n         ",
    "links" : [ "#STATE_ALL", "#STATE_DEFAULT", "#STATE_FOREGROUND" ]
  }, {
    "name" : "public int getMetered()",
    "returnType" : "int",
    "comment" : "\n         * Metered state. One of the following values:<p/>\n         * <ul>\n         * <li>{@link #METERED_ALL}</li>\n         * <li>{@link #METERED_NO}</li>\n         * <li>{@link #METERED_YES}</li>\n         * </ul>\n         * <p>A network is classified as metered when the user is sensitive to heavy data usage on\n         * that connection. Apps may warn before using these networks for large downloads. The\n         * metered state can be set by the user within data usage network restrictions.\n         ",
    "links" : [ "#METERED_YES", "#METERED_NO", "#METERED_ALL" ]
  }, {
    "name" : "public int getRoaming()",
    "returnType" : "int",
    "comment" : "\n         * Roaming state. One of the following values:<p/>\n         * <ul>\n         * <li>{@link #ROAMING_ALL}</li>\n         * <li>{@link #ROAMING_NO}</li>\n         * <li>{@link #ROAMING_YES}</li>\n         * </ul>\n         ",
    "links" : [ "#ROAMING_NO", "#ROAMING_YES", "#ROAMING_ALL" ]
  }, {
    "name" : "public int getDefaultNetworkStatus()",
    "returnType" : "int",
    "comment" : "\n         * Default network status. One of the following values:<p/>\n         * <ul>\n         * <li>{@link #DEFAULT_NETWORK_ALL}</li>\n         * <li>{@link #DEFAULT_NETWORK_NO}</li>\n         * <li>{@link #DEFAULT_NETWORK_YES}</li>\n         * </ul>\n         ",
    "links" : [ "#DEFAULT_NETWORK_ALL", "#DEFAULT_NETWORK_NO", "#DEFAULT_NETWORK_YES" ]
  }, {
    "name" : "public long getStartTimeStamp()",
    "returnType" : "long",
    "comment" : "\n         * Start timestamp of the bucket's time interval. Defined in terms of \"Unix time\", see\n         * {@link java.lang.System#currentTimeMillis}.\n         * @return Start of interval.\n         ",
    "links" : [ "java.lang.System#currentTimeMillis" ]
  }, {
    "name" : "public long getEndTimeStamp()",
    "returnType" : "long",
    "comment" : "\n         * End timestamp of the bucket's time interval. Defined in terms of \"Unix time\", see\n         * {@link java.lang.System#currentTimeMillis}.\n         * @return End of interval.\n         ",
    "links" : [ "java.lang.System#currentTimeMillis" ]
  }, {
    "name" : "public long getRxBytes()",
    "returnType" : "long",
    "comment" : "\n         * Number of bytes received during the bucket's time interval. Statistics are measured at\n         * the network layer, so they include both TCP and UDP usage.\n         * @return Number of bytes.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getTxBytes()",
    "returnType" : "long",
    "comment" : "\n         * Number of bytes transmitted during the bucket's time interval. Statistics are measured at\n         * the network layer, so they include both TCP and UDP usage.\n         * @return Number of bytes.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getRxPackets()",
    "returnType" : "long",
    "comment" : "\n         * Number of packets received during the bucket's time interval. Statistics are measured at\n         * the network layer, so they include both TCP and UDP usage.\n         * @return Number of packets.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getTxPackets()",
    "returnType" : "long",
    "comment" : "\n         * Number of packets transmitted during the bucket's time interval. Statistics are measured\n         * at the network layer, so they include both TCP and UDP usage.\n         * @return Number of packets.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static int convertSet(@State int state)", "private static int convertState(int networkStatsSet)", "private static int convertUid(int uid)", "private static int convertTag(int tag)", "private static int convertMetered(int metered)", "private static int convertRoaming(int roaming)", "private static int convertDefaultNetworkStatus(int defaultNetworkStatus)", "public int getUid()", "public int getTag()", "public int getState()", "public int getMetered()", "public int getRoaming()", "public int getDefaultNetworkStatus()", "public long getStartTimeStamp()", "public long getEndTimeStamp()", "public long getRxBytes()", "public long getTxBytes()", "public long getRxPackets()", "public long getTxPackets()" ],
  "variableNames" : [ "STATE_ALL", "STATE_DEFAULT", "STATE_FOREGROUND", "UID_ALL", "UID_REMOVED", "UID_TETHERING", "METERED_ALL", "METERED_NO", "METERED_YES", "ROAMING_ALL", "ROAMING_NO", "ROAMING_YES", "DEFAULT_NETWORK_ALL", "DEFAULT_NETWORK_NO", "DEFAULT_NETWORK_YES", "TAG_NONE", "mUid", "mTag", "mState", "mDefaultNetworkStatus", "mMetered", "mRoaming", "mBeginTimeStamp", "mEndTimeStamp", "mRxBytes", "mRxPackets", "mTxBytes", "mTxPackets" ]
}