{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/serializer/SerializationHandler.java",
  "packageName" : "org.apache.xml.serializer",
  "className" : "SerializationHandler",
  "comment" : "\n * This interface is the one that a serializer implements. It is a group of\n * other interfaces, such as ExtendedContentHandler, ExtendedLexicalHandler etc.\n * In addition there are other methods, such as reset().\n * \n * This class is public only because it is used in another package,\n * it is not a public API.\n * \n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void setContentHandler(ContentHandler ch)",
    "returnType" : "void",
    "comment" : "\n     * Set the SAX Content handler that the serializer sends its output to. This\n     * method only applies to a ToSAXHandler, not to a ToStream serializer.\n     * \n     * @see Serializer#asContentHandler()\n     * @see ToSAXHandler\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void serialize(Node node) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Notify that the serializer should take this DOM node as input to be\n     * serialized.\n     * \n     * @param node the DOM node to be serialized.\n     * @throws IOException\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean setEscaping(boolean escape) throws SAXException",
    "returnType" : "boolean",
    "comment" : "\n     * Turns special character escaping on/off. \n     * \n     * Note that characters will\n     * never, even if this option is set to 'true', be escaped within\n     * CDATA sections in output XML documents.\n     * \n     * @param escape true if escaping is to be set on.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIndentAmount(int spaces)",
    "returnType" : "void",
    "comment" : "\n     * Set the number of spaces to indent for each indentation level.\n     * @param spaces the number of spaces to indent for each indentation level.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setTransformer(Transformer transformer)",
    "returnType" : "void",
    "comment" : "\n     * Set the transformer associated with the serializer.\n     * @param transformer the transformer associated with the serializer.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Transformer getTransformer()",
    "returnType" : "Transformer",
    "comment" : "\n     * Get the transformer associated with the serializer.\n     * @return Transformer the transformer associated with the serializer.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNamespaceMappings(NamespaceMappings mappings)",
    "returnType" : "void",
    "comment" : " \n     * Used only by TransformerSnapshotImpl to restore the serialization \n     * to a previous state. \n     * \n     * @param mappings NamespaceMappings\n     ",
    "links" : [ ]
  }, {
    "name" : "public void flushPending() throws SAXException",
    "returnType" : "void",
    "comment" : "\n     * A SerializationHandler accepts SAX-like events, so\n     * it can accumulate attributes or namespace nodes after\n     * a startElement().\n     * <p>\n     * If the SerializationHandler has a Writer or OutputStream, \n     * a call to this method will flush such accumulated \n     * events as a closed start tag for an element.\n     * <p>\n     * If the SerializationHandler wraps a ContentHandler,\n     * a call to this method will flush such accumulated\n     * events as a SAX (not SAX-like) calls to\n     * startPrefixMapping() and startElement().\n     * <p>\n     * If one calls endDocument() then one need not call\n     * this method since a call to endDocument() will\n     * do what this method does. However, in some\n     * circumstances, such as with document fragments,\n     * endDocument() is not called and it may be\n     * necessary to call this method to flush\n     * any pending events.\n     * <p> \n     * For performance reasons this method should not be called\n     * very often. \n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDTDEntityExpansion(boolean expand)",
    "returnType" : "void",
    "comment" : "\n     * Default behavior is to expand DTD entities,\n     * that is the initall default value is true.\n     * @param expand true if DTD entities are to be expanded,\n     * false if they are to be left as DTD entity references. \n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setContentHandler(ContentHandler ch)", "public void close()", "public void serialize(Node node) throws IOException", "public boolean setEscaping(boolean escape) throws SAXException", "public void setIndentAmount(int spaces)", "public void setTransformer(Transformer transformer)", "public Transformer getTransformer()", "public void setNamespaceMappings(NamespaceMappings mappings)", "public void flushPending() throws SAXException", "public void setDTDEntityExpansion(boolean expand)" ],
  "variableNames" : [ ]
}