{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/ColorMatrixColorFilter.java",
  "packageName" : "android.graphics",
  "className" : "ColorMatrixColorFilter",
  "comment" : "\n * A color filter that transforms colors through a 4x5 color matrix. This filter\n * can be used to change the saturation of pixels, convert from YUV to RGB, etc.\n *\n * @see ColorMatrix\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mMatrix",
    "type" : "ColorMatrix",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void getColorMatrix(ColorMatrix colorMatrix)",
    "returnType" : "void",
    "comment" : "\n     * Copies the ColorMatrix from the filter into the passed ColorMatrix.\n     *\n     * @param colorMatrix Set to the current value of the filter's ColorMatrix.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setColorMatrix(@Nullable ColorMatrix matrix)",
    "returnType" : "void",
    "comment" : "\n     * Copies the provided color matrix to be used by this filter.\n     *\n     * If the specified color matrix is null, this filter's color matrix will be reset to the\n     * identity matrix.\n     *\n     * @param matrix A {@link ColorMatrix} or null\n     *\n     * @see #getColorMatrix(ColorMatrix)\n     * @see #setColorMatrixArray(float[])\n     * @see ColorMatrix#reset()\n     *\n     * @hide\n     ",
    "links" : [ "android.graphics.ColorMatrix" ]
  }, {
    "name" : "public void setColorMatrixArray(@Nullable float[] array)",
    "returnType" : "void",
    "comment" : "\n     * Copies the provided color matrix to be used by this filter.\n     *\n     * If the specified color matrix is null, this filter's color matrix will be reset to the\n     * identity matrix.\n     *\n     * @param array Array of floats used to transform colors, treated as a 4x5\n     *              matrix. The first 20 entries of the array are copied into\n     *              the filter. See {@link ColorMatrix}.\n     *\n     * @see #getColorMatrix(ColorMatrix)\n     * @see #setColorMatrix(ColorMatrix)\n     * @see ColorMatrix#reset()\n     *\n     * @throws ArrayIndexOutOfBoundsException if the specified array's\n     *         length is < 20\n     *\n     * @hide\n     ",
    "links" : [ "android.graphics.ColorMatrix" ]
  }, {
    "name" : " long createNativeInstance()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nativeColorMatrixFilter(float[] array)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeSetColorMatrix(long colorMatrixColorFilter, float[] array)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void getColorMatrix(ColorMatrix colorMatrix)", "public void setColorMatrix(@Nullable ColorMatrix matrix)", "public void setColorMatrixArray(@Nullable float[] array)", " long createNativeInstance()", "private static native long nativeColorMatrixFilter(float[] array)", "private static native void nativeSetColorMatrix(long colorMatrixColorFilter, float[] array)" ],
  "variableNames" : [ "mMatrix" ]
}