{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/CallRedirectionService.java",
  "packageName" : "android.telecom",
  "className" : "CallRedirectionService",
  "comment" : "\n * This service can be implemented to interact between Telecom and its implementor\n * for making outgoing call with optional redirection/cancellation purposes.\n *\n * <p>\n * Below is an example manifest registration for a {@code CallRedirectionService}.\n * {@code\n * <service android:name=\"your.package.YourCallRedirectionServiceImplementation\"\n *          android:permission=\"android.permission.BIND_CALL_REDIRECTION_SERVICE\">\n *      <intent-filter>\n *          <action android:name=\"android.telecom.CallRedirectionService\"/>\n *      </intent-filter>\n * </service>\n * }\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The {@link Intent} that must be declared as handled by the service.\n     ",
    "links" : [ "android.content.Intent" ]
  }, {
    "name" : "mCallRedirectionAdapter",
    "type" : "ICallRedirectionAdapter",
    "comment" : "\n     * An adapter to inform Telecom the response from the implementor of the Call\n     * Redirection service\n     ",
    "links" : [ ]
  }, {
    "name" : "MSG_PLACE_CALL",
    "type" : "int",
    "comment" : "\n     * A handler message to process the attempt to place call with redirection service from Telecom\n     ",
    "links" : [ ]
  }, {
    "name" : "MSG_TIMEOUT",
    "type" : "int",
    "comment" : "\n     * A handler message to process the attempt to notify the operation of redirection service timed\n     * out from Telecom\n     ",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "\n     * A handler to process the attempt to place call with redirection service from Telecom\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onPlaceCall(@NonNull Uri handle, @NonNull PhoneAccountHandle initialPhoneAccount, boolean allowInteractiveResponse)",
    "returnType" : "void",
    "comment" : "\n     * Telecom calls this method once upon binding to a {@link CallRedirectionService} to inform\n     * it of a new outgoing call which is being placed. Telecom does not request to redirect\n     * emergency calls and does not request to redirect calls with gateway information.\n     *\n     * <p>Telecom will cancel the call if Telecom does not receive a response in 5 seconds from\n     * the implemented {@link CallRedirectionService} set by users.\n     *\n     * <p>The implemented {@link CallRedirectionService} can call {@link #placeCallUnmodified()},\n     * {@link #redirectCall(Uri, PhoneAccountHandle, boolean)}, and {@link #cancelCall()} only\n     * from here. Calls to these methods are assumed by the Telecom framework to be the response\n     * for the phone call for which {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)} was\n     * invoked by Telecom. The Telecom framework will only invoke\n     * {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)} once each time it binds to a\n     * {@link CallRedirectionService}.\n     *\n     * @param handle the phone number dialed by the user, represented in E.164 format if possible\n     * @param initialPhoneAccount the {@link PhoneAccountHandle} on which the call will be placed.\n     * @param allowInteractiveResponse a boolean to tell if the implemented\n     *                                 {@link CallRedirectionService} should allow interactive\n     *                                 responses with users. Will be {@code false} if, for example\n     *                                 the device is in car mode and the user would not be able to\n     *                                 interact with their device.\n     ",
    "links" : [ "android.telecom.PhoneAccountHandle", "#onPlaceCall(Uri", "#redirectCall(Uri", "#cancelCall()", "com.android.internal.telecom.ICallRedirectionService", "#placeCallUnmodified()" ]
  }, {
    "name" : "public void onRedirectionTimeout()",
    "returnType" : "void",
    "comment" : "\n     * Telecom calls this method when times out waiting for the {@link CallRedirectionService} to\n     * call {@link #placeCallUnmodified()}, {@link #redirectCall(Uri, PhoneAccountHandle, boolean)},\n     * or {@link #cancelCall()}\n     ",
    "links" : [ "#redirectCall(Uri", "#cancelCall()", "com.android.internal.telecom.ICallRedirectionService", "#placeCallUnmodified()" ]
  }, {
    "name" : "public final void placeCallUnmodified()",
    "returnType" : "void",
    "comment" : "\n     * The implemented {@link CallRedirectionService} calls this method to response a request\n     * received via {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)} to inform Telecom that\n     * no changes are required to the outgoing call, and that the call should be placed as-is.\n     *\n     * <p>This can only be called from implemented\n     * {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)}. The response corresponds to the\n     * latest request via {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)}.\n     *\n     ",
    "links" : [ "#onPlaceCall(Uri", "com.android.internal.telecom.ICallRedirectionService" ]
  }, {
    "name" : "public final void redirectCall(@NonNull Uri gatewayUri, @NonNull PhoneAccountHandle targetPhoneAccount, boolean confirmFirst)",
    "returnType" : "void",
    "comment" : "\n     * The implemented {@link CallRedirectionService} calls this method to response a request\n     * received via {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)} to inform Telecom that\n     * changes are required to the phone number or/and {@link PhoneAccountHandle} for the outgoing\n     * call. Telecom will cancel the call if the implemented {@link CallRedirectionService}\n     * replies Telecom a handle for an emergency number.\n     *\n     * <p>This can only be called from implemented\n     * {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)}. The response corresponds to the\n     * latest request via {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)}.\n     *\n     * @param gatewayUri the gateway uri for call redirection.\n     * @param targetPhoneAccount the {@link PhoneAccountHandle} to use when placing the call.\n     * @param confirmFirst Telecom will ask users to confirm the redirection via a yes/no dialog\n     *                     if the confirmFirst is true, and if the redirection request of this\n     *                     response was sent with a true flag of allowInteractiveResponse via\n     *                     {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)}\n     ",
    "links" : [ "android.telecom.PhoneAccountHandle", "#onPlaceCall(Uri", "com.android.internal.telecom.ICallRedirectionService" ]
  }, {
    "name" : "public final void cancelCall()",
    "returnType" : "void",
    "comment" : "\n     * The implemented {@link CallRedirectionService} calls this method to response a request\n     * received via {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)} to inform Telecom that\n     * an outgoing call should be canceled entirely.\n     *\n     * <p>This can only be called from implemented\n     * {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)}. The response corresponds to the\n     * latest request via {@link #onPlaceCall(Uri, PhoneAccountHandle, boolean)}.\n     *\n     ",
    "links" : [ "#onPlaceCall(Uri", "com.android.internal.telecom.ICallRedirectionService" ]
  }, {
    "name" : "public final IBinder onBind(@NonNull Intent intent)",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean onUnbind(@NonNull Intent intent)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onPlaceCall(@NonNull Uri handle, @NonNull PhoneAccountHandle initialPhoneAccount, boolean allowInteractiveResponse)", "public void onRedirectionTimeout()", "public final void placeCallUnmodified()", "public final void redirectCall(@NonNull Uri gatewayUri, @NonNull PhoneAccountHandle targetPhoneAccount, boolean confirmFirst)", "public final void cancelCall()", "public final IBinder onBind(@NonNull Intent intent)", "public final boolean onUnbind(@NonNull Intent intent)" ],
  "variableNames" : [ "SERVICE_INTERFACE", "mCallRedirectionAdapter", "MSG_PLACE_CALL", "MSG_TIMEOUT", "mHandler" ]
}