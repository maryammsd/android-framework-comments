{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/FormattedValue.java",
  "packageName" : "android.icu.text",
  "className" : "FormattedValue",
  "comment" : "\n * An abstract formatted value: a string with associated field attributes.\n * Many formatters format to classes implementing FormattedValue.\n *\n * @author sffc\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns the formatted string as a Java String.\n     *\n     * Consider using {@link #appendTo} for greater efficiency.\n     *\n     * @return The formatted string.\n     ",
    "links" : [ "#appendTo" ]
  }, {
    "name" : "public A appendTo(A appendable)",
    "returnType" : "A",
    "comment" : "\n     * Appends the formatted string to an Appendable.\n     * <p>\n     * If an IOException occurs when appending to the Appendable, an unchecked\n     * {@link ICUUncheckedIOException} is thrown instead.\n     *\n     * @param appendable The Appendable to which to append the string output.\n     * @return The same Appendable, for chaining.\n     * @throws ICUUncheckedIOException if the Appendable throws IOException\n     ",
    "links" : [ "android.icu.util.ICUUncheckedIOException" ]
  }, {
    "name" : "public boolean nextPosition(ConstrainedFieldPosition cfpos)",
    "returnType" : "boolean",
    "comment" : "\n     * Iterates over field positions in the FormattedValue. This lets you determine the position\n     * of specific types of substrings, like a month or a decimal separator.\n     *\n     * To loop over all field positions:\n     *\n     * <pre>\n     *     ConstrainedFieldPosition cfpos = new ConstrainedFieldPosition();\n     *     while (fmtval.nextPosition(cfpos)) {\n     *         // handle the field position; get information from cfpos\n     *     }\n     * </pre>\n     *\n     * @param cfpos\n     *         The object used for iteration state. This can provide constraints to iterate over\n     *         only one specific field; see {@link ConstrainedFieldPosition#constrainField}.\n     * @return true if a new occurrence of the field was found;\n     *         false otherwise.\n     ",
    "links" : [ "android.icu.text.ConstrainedFieldPosition#constrainField" ]
  }, {
    "name" : "public AttributedCharacterIterator toCharacterIterator()",
    "returnType" : "AttributedCharacterIterator",
    "comment" : "\n     * Exports the formatted number as an AttributedCharacterIterator.\n     * <p>\n     * Consider using {@link #nextPosition} if you are trying to get field information.\n     *\n     * @return An AttributedCharacterIterator containing full field information.\n     ",
    "links" : [ "#nextPosition" ]
  } ],
  "methodNames" : [ "public String toString()", "public A appendTo(A appendable)", "public boolean nextPosition(ConstrainedFieldPosition cfpos)", "public AttributedCharacterIterator toCharacterIterator()" ],
  "variableNames" : [ ]
}