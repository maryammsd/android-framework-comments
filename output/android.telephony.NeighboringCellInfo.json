{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/NeighboringCellInfo.java",
  "packageName" : "android.telephony",
  "className" : "NeighboringCellInfo",
  "comment" : "\n * Represents the neighboring cell information, including\n * Received Signal Strength and Cell ID location.\n *\n * @deprecated This class should not be used by any app targeting\n *     {@link android.os.Build.VERSION_CODES#Q Android Q} or higher. Instead callers should use\n *     {@link android.telephony.CellInfo CellInfo}.\n ",
  "variables" : [ {
    "name" : "UNKNOWN_RSSI",
    "type" : "int",
    "comment" : "\n     * Signal strength is not available\n     ",
    "links" : [ ]
  }, {
    "name" : "UNKNOWN_CID",
    "type" : "int",
    "comment" : "\n     * Cell location is not available\n     ",
    "links" : [ ]
  }, {
    "name" : "mRssi",
    "type" : "int",
    "comment" : "\n     * In GSM, mRssi is the Received RSSI;\n     * In UMTS, mRssi is the Level index of CPICH Received Signal Code Power\n     ",
    "links" : [ ]
  }, {
    "name" : "mCid",
    "type" : "int",
    "comment" : "\n     * CID in 16 bits format in GSM. Return UNKNOWN_CID in UMTS and CMDA.\n     ",
    "links" : [ ]
  }, {
    "name" : "mLac",
    "type" : "int",
    "comment" : "\n     * LAC in 16 bits format in GSM. Return UNKNOWN_CID in UMTS and CMDA.\n     ",
    "links" : [ ]
  }, {
    "name" : "mPsc",
    "type" : "int",
    "comment" : "\n     * Primary Scrambling Code in 9 bits format in UMTS\n     * Return UNKNOWN_CID in GSM and CMDA.\n     ",
    "links" : [ ]
  }, {
    "name" : "mNetworkType",
    "type" : "int",
    "comment" : "\n     * Radio network type, value is one of following\n     * TelephonyManager.NETWORK_TYPE_XXXXXX.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<NeighboringCellInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getRssi()",
    "returnType" : "int",
    "comment" : "\n     * @return received signal strength or UNKNOWN_RSSI if unknown\n     *\n     * For GSM, it is in \"asu\" ranging from 0 to 31 (dBm = -113 + 2*asu)\n     * 0 means \"-113 dBm or less\" and 31 means \"-51 dBm or greater\"\n     * For UMTS, it is the Level index of CPICH RSCP defined in TS 25.125\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLac()",
    "returnType" : "int",
    "comment" : "\n     * @return LAC in GSM, 0xffff max legal value\n     *  UNKNOWN_CID if in UMTS or CMDA or unknown\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCid()",
    "returnType" : "int",
    "comment" : "\n     * @return cell id in GSM, 0xffff max legal value\n     *  UNKNOWN_CID if in UMTS or CDMA or unknown\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPsc()",
    "returnType" : "int",
    "comment" : "\n     * @return Primary Scrambling Code in 9 bits format in UMTS, 0x1ff max value\n     *  UNKNOWN_CID if in GSM or CMDA or unknown\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNetworkType()",
    "returnType" : "int",
    "comment" : "\n     * @return Radio network type while neighboring cell location is stored.\n     *\n     * Return {@link TelephonyManager#NETWORK_TYPE_UNKNOWN TelephonyManager.NETWORK_TYPE_UNKNOWN}\n     * means that the location information is unavailable.\n     *\n     * Return {@link TelephonyManager#NETWORK_TYPE_GPRS TelephonyManager.NETWORK_TYPE_GPRS} or\n     * {@link TelephonyManager#NETWORK_TYPE_EDGE TelephonyManager.NETWORK_TYPE_EDGE}\n     * means that Neighboring Cell information is stored for GSM network, in\n     * which {@link NeighboringCellInfo#getLac NeighboringCellInfo.getLac} and\n     * {@link NeighboringCellInfo#getCid NeighboringCellInfo.getCid} should be\n     * called to access location.\n     *\n     * Return {@link TelephonyManager#NETWORK_TYPE_UMTS TelephonyManager.NETWORK_TYPE_UMTS},\n     * {@link TelephonyManager#NETWORK_TYPE_HSDPA TelephonyManager.NETWORK_TYPE_HSDPA},\n     * {@link TelephonyManager#NETWORK_TYPE_HSUPA TelephonyManager.NETWORK_TYPE_HSUPA},\n     * or {@link TelephonyManager#NETWORK_TYPE_HSPA TelephonyManager.NETWORK_TYPE_HSPA}\n     * means that Neighboring Cell information is stored for UMTS network, in\n     * which {@link NeighboringCellInfo#getPsc NeighboringCellInfo.getPsc}\n     * should be called to access location.\n     ",
    "links" : [ "android.telephony.TelephonyManager#NETWORK_TYPE_HSDPA", "android.telephony.TelephonyManager#NETWORK_TYPE_HSPA", "android.telephony.TelephonyManager#NETWORK_TYPE_GPRS", "android.telephony.TelephonyManager#NETWORK_TYPE_EDGE", "android.telephony.NeighboringCellInfo#getLac", "android.telephony.NeighboringCellInfo#getCid", "android.telephony.TelephonyManager#NETWORK_TYPE_UMTS", "android.telephony.TelephonyManager#NETWORK_TYPE_HSUPA", "android.telephony.NeighboringCellInfo#getPsc", "android.telephony.TelephonyManager#NETWORK_TYPE_UNKNOWN" ]
  }, {
    "name" : "public void setCid(int cid)",
    "returnType" : "void",
    "comment" : "\n     * Set the cell id.\n     *\n     * NeighboringCellInfo is a one time shot for the neighboring cells based on\n     * the radio network type at that moment. It shouldn't be changed after\n     * creation.\n     *\n     * @deprecated cid value passed as in location parameter passed to constructor\n     *              {@link #NeighboringCellInfo(int, String, int)}\n     ",
    "links" : [ "#NeighboringCellInfo(int" ]
  }, {
    "name" : "public void setRssi(int rssi)",
    "returnType" : "void",
    "comment" : "\n     * Set the signal strength of the cell.\n     *\n     * NeighboringCellInfo is a one time shot for the neighboring cells based on\n     * the radio network type at that moment. It shouldn't be changed after\n     * creation.\n     *\n     * @deprecated initial rssi value passed as parameter to constructor\n     *              {@link #NeighboringCellInfo(int, String, int)}\n     ",
    "links" : [ "#NeighboringCellInfo(int" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "UNKNOWN_RSSI", "UNKNOWN_CID", "mRssi", "mCid", "mLac", "mPsc", "mNetworkType", "CREATOR" ],
  "methodNames" : [ "public int getRssi()", "public int getLac()", "public int getCid()", "public int getPsc()", "public int getNetworkType()", "public void setCid(int cid)", "public void setRssi(int rssi)", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ]
}