{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/InCallService.java",
  "packageName" : "android.telecom",
  "className" : "Callback",
  "comment" : "\n         * The {@link InCallService} extends this class to provide a means of receiving callbacks\n         * from the {@link Connection.VideoProvider}.\n         * <p>\n         * When the {@link InCallService} receives the\n         * {@link Call.Callback#onVideoCallChanged(Call, VideoCall)} callback, it should create an\n         * instance its {@link VideoCall.Callback} implementation and set it on the\n         * {@link VideoCall} using {@link VideoCall#registerCallback(Callback)}.\n         ",
  "links" : [ "VideoCall", "Connection.VideoProvider", "Call.Callback#onVideoCallChanged(Call", "com.android.internal.telecom.IInCallService", "#registerCallback(Callback)", "VideoCall.Callback" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void onSessionModifyRequestReceived(VideoProfile videoProfile)",
    "returnType" : "void",
    "comment" : "\n             * Called when the {@link Connection.VideoProvider} receives a session modification\n             * request from the peer device.\n             * <p>\n             * The {@link InCallService} may potentially prompt the user to confirm whether they\n             * wish to accept the request, or decide to automatically accept the request.  In either\n             * case the {@link InCallService} should call\n             * {@link VideoCall#sendSessionModifyResponse(VideoProfile)} to indicate the video\n             * profile agreed upon.\n             * <p>\n             * Callback originates from\n             * {@link Connection.VideoProvider#receiveSessionModifyRequest(VideoProfile)}.\n             *\n             * @param videoProfile The requested video profile.\n             ",
    "links" : [ "Connection.VideoProvider#receiveSessionModifyRequest(VideoProfile)", "Connection.VideoProvider", "#sendSessionModifyResponse(VideoProfile)", "com.android.internal.telecom.IInCallService" ]
  }, {
    "name" : "public abstract void onSessionModifyResponseReceived(int status, VideoProfile requestedProfile, VideoProfile responseProfile)",
    "returnType" : "void",
    "comment" : "\n             * Called when the {@link Connection.VideoProvider} receives a response to a session\n             * modification request previously sent to the peer device.\n             * <p>\n             * The new video state should not be considered active by the {@link InCallService}\n             * until the {@link Call} video state changes (the\n             * {@link Call.Callback#onDetailsChanged(Call, Call.Details)} callback is triggered\n             * when the video state changes).\n             * <p>\n             * Callback originates from\n             * {@link Connection.VideoProvider#receiveSessionModifyResponse(int, VideoProfile,\n             *      VideoProfile)}.\n             *\n             * @param status Status of the session modify request.  Valid values are\n             *      {@link Connection.VideoProvider#SESSION_MODIFY_REQUEST_SUCCESS},\n             *      {@link Connection.VideoProvider#SESSION_MODIFY_REQUEST_FAIL},\n             *      {@link Connection.VideoProvider#SESSION_MODIFY_REQUEST_INVALID},\n             *      {@link Connection.VideoProvider#SESSION_MODIFY_REQUEST_TIMED_OUT},\n             *      {@link Connection.VideoProvider#SESSION_MODIFY_REQUEST_REJECTED_BY_REMOTE}.\n             * @param requestedProfile The original request which was sent to the peer device.\n             * @param responseProfile The actual profile changes made by the peer device.\n             ",
    "links" : [ "Connection.VideoProvider#receiveSessionModifyResponse(int", "Connection.VideoProvider#SESSION_MODIFY_REQUEST_INVALID", "Connection.VideoProvider#SESSION_MODIFY_REQUEST_REJECTED_BY_REMOTE", "Connection.VideoProvider", "Connection.VideoProvider#SESSION_MODIFY_REQUEST_SUCCESS", "com.android.internal.telecom.IInCallService", "Connection.VideoProvider#SESSION_MODIFY_REQUEST_FAIL", "Connection.VideoProvider#SESSION_MODIFY_REQUEST_TIMED_OUT", "Call.Callback#onDetailsChanged(Call", "android.telecom.Call" ]
  }, {
    "name" : "public abstract void onCallSessionEvent(int event)",
    "returnType" : "void",
    "comment" : "\n             * Handles events related to the current video session which the {@link InCallService}\n             * may wish to handle. These are separate from requested changes to the session due to\n             * the underlying protocol or connection.\n             * <p>\n             * Callback originates from\n             * {@link Connection.VideoProvider#handleCallSessionEvent(int)}.\n             *\n             * @param event The event.  Valid values are:\n             *      {@link Connection.VideoProvider#SESSION_EVENT_RX_PAUSE},\n             *      {@link Connection.VideoProvider#SESSION_EVENT_RX_RESUME},\n             *      {@link Connection.VideoProvider#SESSION_EVENT_TX_START},\n             *      {@link Connection.VideoProvider#SESSION_EVENT_TX_STOP},\n             *      {@link Connection.VideoProvider#SESSION_EVENT_CAMERA_FAILURE},\n             *      {@link Connection.VideoProvider#SESSION_EVENT_CAMERA_READY},\n             *      {@link Connection.VideoProvider#SESSION_EVENT_CAMERA_PERMISSION_ERROR}.\n             ",
    "links" : [ "Connection.VideoProvider#SESSION_EVENT_TX_STOP", "Connection.VideoProvider#SESSION_EVENT_CAMERA_PERMISSION_ERROR", "Connection.VideoProvider#SESSION_EVENT_CAMERA_READY", "Connection.VideoProvider#handleCallSessionEvent(int)", "Connection.VideoProvider#SESSION_EVENT_CAMERA_FAILURE", "Connection.VideoProvider#SESSION_EVENT_RX_PAUSE", "com.android.internal.telecom.IInCallService", "Connection.VideoProvider#SESSION_EVENT_TX_START", "Connection.VideoProvider#SESSION_EVENT_RX_RESUME" ]
  }, {
    "name" : "public abstract void onPeerDimensionsChanged(int width, int height)",
    "returnType" : "void",
    "comment" : "\n             * Handles a change to the video dimensions from the peer device. This could happen if,\n             * for example, the peer changes orientation of their device, or switches cameras.\n             * <p>\n             * Callback originates from\n             * {@link Connection.VideoProvider#changePeerDimensions(int, int)}.\n             *\n             * @param width  The updated peer video width.\n             * @param height The updated peer video height.\n             ",
    "links" : [ "Connection.VideoProvider#changePeerDimensions(int" ]
  }, {
    "name" : "public abstract void onVideoQualityChanged(int videoQuality)",
    "returnType" : "void",
    "comment" : "\n             * Handles a change to the video quality.\n             * <p>\n             * Callback originates from {@link Connection.VideoProvider#changeVideoQuality(int)}.\n             *\n             * @param videoQuality  The updated peer video quality.  Valid values:\n             *      {@link VideoProfile#QUALITY_HIGH},\n             *      {@link VideoProfile#QUALITY_MEDIUM},\n             *      {@link VideoProfile#QUALITY_LOW},\n             *      {@link VideoProfile#QUALITY_DEFAULT}.\n             ",
    "links" : [ "android.telecom.VideoProfile#QUALITY_MEDIUM", "android.telecom.VideoProfile#QUALITY_DEFAULT", "android.telecom.VideoProfile#QUALITY_LOW", "Connection.VideoProvider#changeVideoQuality(int)", "android.telecom.VideoProfile#QUALITY_HIGH" ]
  }, {
    "name" : "public abstract void onCallDataUsageChanged(long dataUsage)",
    "returnType" : "void",
    "comment" : "\n             * Handles an update to the total data used for the current video session.\n             * <p>\n             * Used by the {@link Connection.VideoProvider} in response to\n             * {@link VideoCall#requestCallDataUsage()}.  May also be called periodically by the\n             * {@link Connection.VideoProvider}.\n             * <p>\n             * Callback originates from {@link Connection.VideoProvider#setCallDataUsage(long)}.\n             *\n             * @param dataUsage The updated data usage (in bytes).\n             ",
    "links" : [ "#requestCallDataUsage()", "Connection.VideoProvider", "Connection.VideoProvider#setCallDataUsage(long)" ]
  }, {
    "name" : "public abstract void onCameraCapabilitiesChanged(VideoProfile.CameraCapabilities cameraCapabilities)",
    "returnType" : "void",
    "comment" : "\n             * Handles a change in the capabilities of the currently selected camera.\n             * <p>\n             * Used by the {@link Connection.VideoProvider} in response to\n             * {@link VideoCall#requestCameraCapabilities()}.  The {@link Connection.VideoProvider}\n             * may also report the camera capabilities after a call to\n             * {@link VideoCall#setCamera(String)}.\n             * <p>\n             * Callback originates from\n             * {@link Connection.VideoProvider#changeCameraCapabilities(\n             *      VideoProfile.CameraCapabilities)}.\n             *\n             * @param cameraCapabilities The changed camera capabilities.\n             ",
    "links" : [ "Connection.VideoProvider#changeCameraCapabilities(", "Connection.VideoProvider", "#requestCameraCapabilities()", "#setCamera(String)" ]
  } ],
  "methodNames" : [ "public abstract void onSessionModifyRequestReceived(VideoProfile videoProfile)", "public abstract void onSessionModifyResponseReceived(int status, VideoProfile requestedProfile, VideoProfile responseProfile)", "public abstract void onCallSessionEvent(int event)", "public abstract void onPeerDimensionsChanged(int width, int height)", "public abstract void onVideoQualityChanged(int videoQuality)", "public abstract void onCallDataUsageChanged(long dataUsage)", "public abstract void onCameraCapabilitiesChanged(VideoProfile.CameraCapabilities cameraCapabilities)" ],
  "variableNames" : [ ]
}