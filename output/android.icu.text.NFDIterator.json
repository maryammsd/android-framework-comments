{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/RuleBasedCollator.java",
  "packageName" : "android.icu.text",
  "className" : "NFDIterator",
  "comment" : "\n    * Abstract iterator for identical-level string comparisons.\n    * Returns FCD code points and handles temporary switching to NFD.\n    *\n    * <p>As with CollationIterator,\n    * Java NFDIterator instances are partially constructed and cached,\n    * and completed when reset for use.\n    * C++ NFDIterator instances are stack-allocated.\n    ",
  "links" : [ ],
  "variables" : [ {
    "name" : "decomp",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "index",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " final void reset()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final int nextCodePoint()",
    "returnType" : "int",
    "comment" : "\n         * Returns the next code point from the internal normalization buffer,\n         * or else the next text code point.\n         * Returns -1 at the end of the text.\n         ",
    "links" : [ ]
  }, {
    "name" : " final int nextDecomposedCodePoint(Normalizer2Impl nfcImpl, int c)",
    "returnType" : "int",
    "comment" : "\n         * @param nfcImpl\n         * @param c the last code point returned by nextCodePoint() or nextDecomposedCodePoint()\n         * @return the first code point in c's decomposition,\n         *         or c itself if it was decomposed already or if it does not decompose\n         ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int nextRawCodePoint()",
    "returnType" : "int",
    "comment" : "\n         * Returns the next text code point in FCD order.\n         * Returns -1 at the end of the text.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " final void reset()", " final int nextCodePoint()", " final int nextDecomposedCodePoint(Normalizer2Impl nfcImpl, int c)", "protected abstract int nextRawCodePoint()" ],
  "variableNames" : [ "decomp", "index" ]
}