{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/session/MediaController.java",
  "packageName" : "android.media.session",
  "className" : "Callback",
  "comment" : "\n     * Callback for receiving updates from the session. A Callback can be\n     * registered using {@link #registerCallback}.\n     ",
  "links" : [ "#registerCallback" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onSessionDestroyed()",
    "returnType" : "void",
    "comment" : "\n         * Override to handle the session being destroyed. The session is no\n         * longer valid after this call and calls to it will be ignored.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onSessionEvent(@NonNull String event, @Nullable Bundle extras)",
    "returnType" : "void",
    "comment" : "\n         * Override to handle custom events sent by the session owner without a\n         * specified interface. Controllers should only handle these for\n         * sessions they own.\n         *\n         * @param event The event from the session.\n         * @param extras Optional parameters for the event, may be null.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onPlaybackStateChanged(@Nullable PlaybackState state)",
    "returnType" : "void",
    "comment" : "\n         * Override to handle changes in playback state.\n         *\n         * @param state The new playback state of the session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onMetadataChanged(@Nullable MediaMetadata metadata)",
    "returnType" : "void",
    "comment" : "\n         * Override to handle changes to the current metadata.\n         *\n         * @param metadata The current metadata for the session or null if none.\n         * @see MediaMetadata\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onQueueChanged(@Nullable List<MediaSession.QueueItem> queue)",
    "returnType" : "void",
    "comment" : "\n         * Override to handle changes to items in the queue.\n         *\n         * @param queue A list of items in the current play queue. It should\n         *            include the currently playing item as well as previous and\n         *            upcoming items if applicable.\n         * @see MediaSession.QueueItem\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onQueueTitleChanged(@Nullable CharSequence title)",
    "returnType" : "void",
    "comment" : "\n         * Override to handle changes to the queue title.\n         *\n         * @param title The title that should be displayed along with the play queue such as\n         *              \"Now Playing\". May be null if there is no such title.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onExtrasChanged(@Nullable Bundle extras)",
    "returnType" : "void",
    "comment" : "\n         * Override to handle changes to the {@link MediaSession} extras.\n         *\n         * @param extras The extras that can include other information associated with the\n         *               {@link MediaSession}.\n         ",
    "links" : [ "android.media.session.MediaSession" ]
  }, {
    "name" : "public void onAudioInfoChanged(@NonNull PlaybackInfo playbackInfo)",
    "returnType" : "void",
    "comment" : "\n         * Signals a change in the session's {@link PlaybackInfo PlaybackInfo}.\n         *\n         * @param playbackInfo The latest known state of the session's playback info.\n         ",
    "links" : [ "PlaybackInfo" ]
  } ],
  "methodNames" : [ "public void onSessionDestroyed()", "public void onSessionEvent(@NonNull String event, @Nullable Bundle extras)", "public void onPlaybackStateChanged(@Nullable PlaybackState state)", "public void onMetadataChanged(@Nullable MediaMetadata metadata)", "public void onQueueChanged(@Nullable List<MediaSession.QueueItem> queue)", "public void onQueueTitleChanged(@Nullable CharSequence title)", "public void onExtrasChanged(@Nullable Bundle extras)", "public void onAudioInfoChanged(@NonNull PlaybackInfo playbackInfo)" ],
  "variableNames" : [ ]
}