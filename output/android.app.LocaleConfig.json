{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/LocaleConfig.java",
  "packageName" : "android.app",
  "className" : "LocaleConfig",
  "comment" : " add link to guide",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_LOCALE_CONFIG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_LOCALE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLocales",
    "type" : "LocaleList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultLocale",
    "type" : "Locale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATUS_SUCCESS",
    "type" : "int",
    "comment" : "\n     * succeeded reading the LocaleConfig structure stored in an XML file.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_NOT_SPECIFIED",
    "type" : "int",
    "comment" : "\n     * No android:localeConfig tag on <application>.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_PARSING_FAILED",
    "type" : "int",
    "comment" : "\n     * Malformed input in the XML file where the LocaleConfig was stored.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<LocaleConfig>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static LocaleConfig fromContextIgnoringOverride(@NonNull Context context)",
    "returnType" : "LocaleConfig",
    "comment" : "\n     * Returns a LocaleConfig from the application resources regardless of whether any LocaleConfig\n     * is overridden via {@link LocaleManager#setOverrideLocaleConfig(LocaleConfig)}.\n     *\n     * @param context the context of the application.\n     *\n     * @see Context#createPackageContext(String, int).\n     ",
    "links" : [ "android.app.LocaleManager#setOverrideLocaleConfig(LocaleConfig)" ]
  }, {
    "name" : "private void parseLocaleConfig(XmlResourceParser parser, Resources res) throws IOException, XmlPullParserException",
    "returnType" : "void",
    "comment" : "\n     * Parse the XML content and get the locales supported by the application\n     ",
    "links" : [ ]
  }, {
    "name" : "public LocaleList getSupportedLocales()",
    "returnType" : "LocaleList",
    "comment" : "\n     * Returns the locales supported by the specified application.\n     *\n     * <p><b>Note:</b> The locale format should follow the\n     * <a href=\"https://www.rfc-editor.org/rfc/bcp/bcp47.txt\">IETF BCP47 regular expression</a>\n     *\n     * @return the {@link LocaleList}\n     ",
    "links" : [ "android.os.LocaleList" ]
  }, {
    "name" : "public Locale getDefaultLocale()",
    "returnType" : "Locale",
    "comment" : "\n     * Returns the locale the strings in values/strings.xml (the default strings in the directory\n     * with no locale qualifier) are in if specified, otherwise null\n     *\n     * @return The default Locale or null\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getStatus()",
    "returnType" : "int",
    "comment" : "\n     * Get the status of reading the resource file where the LocaleConfig was stored.\n     *\n     * <p>Distinguish \"the application didn't provide the resource file\" from \"the application\n     * provided malformed input\" if {@link #getSupportedLocales()} returns {@code null}.\n     *\n     * @return {@code STATUS_SUCCESS} if the LocaleConfig structure existed in an XML file was\n     * successfully read, or {@code STATUS_NOT_SPECIFIED} if no android:localeConfig tag on\n     * <application> pointing to an XML file that stores the LocaleConfig, or\n     * {@code STATUS_PARSING_FAILED} if the application provided malformed input for the\n     * LocaleConfig structure.\n     *\n     * @see #STATUS_SUCCESS\n     * @see #STATUS_NOT_SPECIFIED\n     * @see #STATUS_PARSING_FAILED\n     *\n     ",
    "links" : [ "#getSupportedLocales()" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isSameLocaleConfig(@Nullable LocaleConfig other)",
    "returnType" : "boolean",
    "comment" : "\n     * Compare whether the LocaleConfig is the same.\n     *\n     * <p>If the elements of {@code mLocales} in LocaleConfig are the same but arranged in different\n     * positions, they are also considered to be the same LocaleConfig.\n     *\n     * @param other The {@link LocaleConfig} to compare for.\n     *\n     * @return true if the LocaleConfig is the same, false otherwise.\n     *\n     * @hide\n     ",
    "links" : [ "android.app.LocaleConfig" ]
  }, {
    "name" : "public boolean containsLocale(Locale locale)",
    "returnType" : "boolean",
    "comment" : "\n     * Compare whether the locale is existed in the {@code mLocales} of the LocaleConfig.\n     *\n     * @param locale The {@link Locale} to compare for.\n     *\n     * @return true if the locale is existed in the {@code mLocales} of the LocaleConfig, false\n     * otherwise.\n     *\n     * @hide\n     ",
    "links" : [ "java.util.Locale" ]
  } ],
  "methodNames" : [ "public static LocaleConfig fromContextIgnoringOverride(@NonNull Context context)", "private void parseLocaleConfig(XmlResourceParser parser, Resources res) throws IOException, XmlPullParserException", "public LocaleList getSupportedLocales()", "public Locale getDefaultLocale()", "public int getStatus()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean isSameLocaleConfig(@Nullable LocaleConfig other)", "public boolean containsLocale(Locale locale)" ],
  "variableNames" : [ "TAG", "TAG_LOCALE_CONFIG", "TAG_LOCALE", "mLocales", "mDefaultLocale", "mStatus", "STATUS_SUCCESS", "STATUS_NOT_SPECIFIED", "STATUS_PARSING_FAILED", "CREATOR" ]
}