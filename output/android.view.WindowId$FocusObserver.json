{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/WindowId.java",
  "packageName" : "android.view",
  "className" : "FocusObserver",
  "comment" : "\n     * Subclass for observing changes to the focus state of an {@link WindowId}.\n     * You should use the same instance of this class for observing multiple\n     * {@link WindowId} objects, since this class is fairly heavy-weight -- the\n     * base class includes all of the mechanisms for connecting to and receiving updates\n     * from the window.\n     ",
  "links" : [ "android.view.WindowId" ],
  "variables" : [ {
    "name" : "mIObserver",
    "type" : "IWindowFocusObserver.Stub",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRegistrations",
    "type" : "HashMap<IBinder, WindowId>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onFocusGained(WindowId token)",
    "returnType" : "void",
    "comment" : "\n         * Called when one of the monitored windows gains input focus.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onFocusLost(WindowId token)",
    "returnType" : "void",
    "comment" : "\n         * Called when one of the monitored windows loses input focus.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onFocusGained(WindowId token)", "public abstract void onFocusLost(WindowId token)" ],
  "variableNames" : [ "mIObserver", "mRegistrations", "mHandler" ]
}