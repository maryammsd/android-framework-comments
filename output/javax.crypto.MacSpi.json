{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/crypto/MacSpi.java",
  "packageName" : "javax.crypto",
  "className" : "MacSpi",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "protected abstract int engineGetMacLength()",
    "returnType" : "int",
    "comment" : "\n     * Returns the length of the MAC in bytes.\n     *\n     * @return the MAC length in bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract void engineInit(Key key, AlgorithmParameterSpec params) throws InvalidKeyException, InvalidAlgorithmParameterException",
    "returnType" : "void",
    "comment" : "\n     * Initializes the MAC with the given (secret) key and algorithm\n     * parameters.\n     *\n     * @param key the (secret) key.\n     * @param params the algorithm parameters.\n     *\n     * @exception InvalidKeyException if the given key is inappropriate for\n     * initializing this MAC.\n     * @exception InvalidAlgorithmParameterException if the given algorithm\n     * parameters are inappropriate for this MAC.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract void engineUpdate(byte input)",
    "returnType" : "void",
    "comment" : "\n     * Processes the given byte.\n     *\n     * @param input the input byte to be processed.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract void engineUpdate(byte[] input, int offset, int len)",
    "returnType" : "void",
    "comment" : "\n     * Processes the first <code>len</code> bytes in <code>input</code>,\n     * starting at <code>offset</code> inclusive.\n     *\n     * @param input the input buffer.\n     * @param offset the offset in <code>input</code> where the input starts.\n     * @param len the number of bytes to process.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void engineUpdate(ByteBuffer input)",
    "returnType" : "void",
    "comment" : "\n     * Processes <code>input.remaining()</code> bytes in the ByteBuffer\n     * <code>input</code>, starting at <code>input.position()</code>.\n     * Upon return, the buffer's position will be equal to its limit;\n     * its limit will not have changed.\n     *\n     * <p>Subclasses should consider overriding this method if they can\n     * process ByteBuffers more efficiently than byte arrays.\n     *\n     * @param input the ByteBuffer\n     * @since 1.5\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract byte[] engineDoFinal()",
    "returnType" : "byte[]",
    "comment" : "\n     * Completes the MAC computation and resets the MAC for further use,\n     * maintaining the secret key that the MAC was initialized with.\n     *\n     * @return the MAC result.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract void engineReset()",
    "returnType" : "void",
    "comment" : "\n     * Resets the MAC for further use, maintaining the secret key that the\n     * MAC was initialized with.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object clone() throws CloneNotSupportedException",
    "returnType" : "Object",
    "comment" : "\n     * Returns a clone if the implementation is cloneable.\n     *\n     * @return a clone if the implementation is cloneable.\n     *\n     * @exception CloneNotSupportedException if this is called\n     * on an implementation that does not support <code>Cloneable</code>.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected abstract int engineGetMacLength()", "protected abstract void engineInit(Key key, AlgorithmParameterSpec params) throws InvalidKeyException, InvalidAlgorithmParameterException", "protected abstract void engineUpdate(byte input)", "protected abstract void engineUpdate(byte[] input, int offset, int len)", "protected void engineUpdate(ByteBuffer input)", "protected abstract byte[] engineDoFinal()", "protected abstract void engineReset()", "public Object clone() throws CloneNotSupportedException" ],
  "variableNames" : [ ]
}