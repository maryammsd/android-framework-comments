{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/AudioRecordingMonitor.java",
  "packageName" : "android.media",
  "className" : "AudioRecordingMonitor",
  "comment" : "\n * AudioRecordingMonitor defines an interface implemented by {@link AudioRecord} and\n * {@link MediaRecorder} allowing applications to install a callback and be notified of changes\n * in the capture path while recoding is active.\n ",
  "links" : [ "android.media.AudioRecord", "android.media.MediaRecorder" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void registerAudioRecordingCallback(@NonNull @CallbackExecutor Executor executor, @NonNull AudioManager.AudioRecordingCallback cb)",
    "returnType" : "void",
    "comment" : "\n     * Register a callback to be notified of audio capture changes via a\n     * {@link AudioManager.AudioRecordingCallback}. A callback is received when the capture path\n     * configuration changes (pre-processing, format, sampling rate...) or capture is\n     * silenced/unsilenced by the system.\n     * @param executor {@link Executor} to handle the callbacks.\n     * @param cb non-null callback to register\n     ",
    "links" : [ "AudioManager.AudioRecordingCallback", "android.annotation.CallbackExecutor" ]
  }, {
    "name" : " void unregisterAudioRecordingCallback(@NonNull AudioManager.AudioRecordingCallback cb)",
    "returnType" : "void",
    "comment" : "\n     * Unregister an audio recording callback previously registered with\n     * {@link #registerAudioRecordingCallback(Executor, AudioManager.AudioRecordingCallback)}.\n     * @param cb non-null callback to unregister\n     ",
    "links" : [ "#registerAudioRecordingCallback(Executor" ]
  }, {
    "name" : " AudioRecordingConfiguration getActiveRecordingConfiguration()",
    "returnType" : "AudioRecordingConfiguration",
    "comment" : "\n     * Returns the current active audio recording for this audio recorder.\n     * @return a valid {@link AudioRecordingConfiguration} if this recorder is active\n     * or null otherwise.\n     * @see AudioRecordingConfiguration\n     ",
    "links" : [ "android.media.AudioRecordingConfiguration" ]
  } ],
  "methodNames" : [ " void registerAudioRecordingCallback(@NonNull @CallbackExecutor Executor executor, @NonNull AudioManager.AudioRecordingCallback cb)", " void unregisterAudioRecordingCallback(@NonNull AudioManager.AudioRecordingCallback cb)", " AudioRecordingConfiguration getActiveRecordingConfiguration()" ],
  "variableNames" : [ ]
}