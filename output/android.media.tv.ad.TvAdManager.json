{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/ad/TvAdManager.java",
  "packageName" : "android.media.tv.ad",
  "className" : "TvAdManager",
  "comment" : "\n * Central system API to the overall client-side TV AD architecture, which arbitrates interaction\n * between applications and AD services.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_PACKAGE_NAME",
    "type" : "String",
    "comment" : "\n     * Key for package name in app link.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_CLASS_NAME",
    "type" : "String",
    "comment" : "\n     * Key for class name in app link.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_COMMAND_TYPE",
    "type" : "String",
    "comment" : "\n     * Key for command type in app link command.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_SERVICE_ID",
    "type" : "String",
    "comment" : "\n     * Key for service ID in app link command.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_BACK_URI",
    "type" : "String",
    "comment" : "\n     * Key for back URI in app link command.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_APP_LINK_COMMAND",
    "type" : "String",
    "comment" : "\n     * Broadcast intent action to send app command to TV app.\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_TV_INPUT_ID",
    "type" : "String",
    "comment" : "\n     * Intent key for TV input ID. It's used to send app command to TV app.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_AD_SERVICE_ID",
    "type" : "String",
    "comment" : "\n     * Intent key for TV AD service ID. It's used to send app command to TV app.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     * @see TvAdServiceInfo#getId()\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_CHANNEL_URI",
    "type" : "String",
    "comment" : "\n     * Intent key for TV channel URI. It's used to send app command to TV app.\n     * <p>Type: android.net.Uri\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_COMMAND_TYPE",
    "type" : "String",
    "comment" : "\n     * Intent key for command type. It's used to send app command to TV app. The value of this key\n     * could vary according to TV apps.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     ",
    "links" : [ ]
  }, {
    "name" : "SESSION_DATA_TYPE_AD_REQUEST",
    "type" : "String",
    "comment" : "\n     * Sends an advertisement request to be processed by the related TV input.\n     *\n     * @see TvAdService.Session#sendTvAdSessionData(String, Bundle)\n     * @see SESSION_DATA_KEY_AD_REQUEST\n     ",
    "links" : [ ]
  }, {
    "name" : "SESSION_DATA_TYPE_AD_BUFFER_READY",
    "type" : "String",
    "comment" : "\n     * Notifies the advertisement buffer is ready.\n     *\n     * @see TvAdService.Session#sendTvAdSessionData(String, Bundle)\n     * @see SESSION_DATA_KEY_AD_BUFFER\n     ",
    "links" : [ ]
  }, {
    "name" : "SESSION_DATA_TYPE_BROADCAST_INFO_REQUEST",
    "type" : "String",
    "comment" : "\n     * Sends request for broadcast info.\n     *\n     * @see TvAdService.Session#sendTvAdSessionData(String, Bundle)\n     * @see SESSION_DATA_KEY_BROADCAST_INFO_RESQUEST\n     ",
    "links" : [ ]
  }, {
    "name" : "SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUEST",
    "type" : "String",
    "comment" : "\n     * Removes request for broadcast info.\n     *\n     * @see TvAdService.Session#sendTvAdSessionData(String, Bundle)\n     * @see SESSION_DATA_KEY_BROADCAST_INFO_REQUEST_ID\n     ",
    "links" : [ ]
  }, {
    "name" : "SESSION_DATA_KEY_AD_REQUEST",
    "type" : "String",
    "comment" : "\n     * An object of {@link android.media.tv.AdRequest}.\n     *\n     * <p> Type: android.media.tv.AdRequest\n     *\n     * @see TvAdService.Session#sendTvAdSessionData(String, Bundle)\n     ",
    "links" : [ "android.media.tv.AdRequest" ]
  }, {
    "name" : "SESSION_DATA_KEY_AD_BUFFER",
    "type" : "String",
    "comment" : "\n     * An object of {@link AdBuffer}.\n     *\n     * <p> Type: android.media.tv.AdBuffer\n     *\n     * @see TvAdService.Session#sendTvAdSessionData(String, Bundle)\n     ",
    "links" : [ "android.media.tv.AdBuffer" ]
  }, {
    "name" : "SESSION_DATA_KEY_BROADCAST_INFO_REQUEST",
    "type" : "String",
    "comment" : "\n     * An object of {@link android.media.tv.BroadcastInfoRequest}.\n     *\n     * <p> Type: android.media.tv.BroadcastInfoRequest\n     *\n     * @see TvAdService.Session#sendTvAdSessionData(String, Bundle)\n     ",
    "links" : [ "android.media.tv.BroadcastInfoRequest" ]
  }, {
    "name" : "SESSION_DATA_KEY_REQUEST_ID",
    "type" : "String",
    "comment" : "\n     * The ID of {@link android.media.tv.BroadcastInfoRequest}.\n     *\n     * <p> Type: Integer\n     *\n     * @see TvAdService.Session#sendTvAdSessionData(String, Bundle)\n     ",
    "links" : [ "android.media.tv.BroadcastInfoRequest" ]
  }, {
    "name" : "SESSION_STATE_STOPPED",
    "type" : "int",
    "comment" : "\n     * Stopped (or not started) state of AD service session.\n     ",
    "links" : [ ]
  }, {
    "name" : "SESSION_STATE_RUNNING",
    "type" : "int",
    "comment" : "\n     * Running state of AD service session.\n     ",
    "links" : [ ]
  }, {
    "name" : "SESSION_STATE_ERROR",
    "type" : "int",
    "comment" : "\n     * Error state of AD service session.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NONE",
    "type" : "int",
    "comment" : "\n     * No error.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Unknown error code.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NOT_SUPPORTED",
    "type" : "int",
    "comment" : "\n     * Error code for an unsupported channel.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_WEAK_SIGNAL",
    "type" : "int",
    "comment" : "\n     * Error code for weak signal.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_RESOURCE_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n     * Error code when resource (e.g. tuner) is unavailable.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_BLOCKED",
    "type" : "int",
    "comment" : "\n     * Error code for blocked contents.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_ENCRYPTED",
    "type" : "int",
    "comment" : "\n     * Error code when the key or module is missing for the encrypted channel.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_UNKNOWN_CHANNEL",
    "type" : "int",
    "comment" : "\n     * Error code when the current channel is an unknown channel.\n     ",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "ITvAdManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionCallbackRecordMap",
    "type" : "SparseArray<SessionCallbackRecord>",
    "comment" : " A mapping from the sequence number of a session to its SessionCallbackRecord.",
    "links" : [ ]
  }, {
    "name" : "mCallbackRecords",
    "type" : "List<TvAdServiceCallbackRecord>",
    "comment" : " @GuardedBy(\"mLock\")",
    "links" : [ ]
  }, {
    "name" : "mNextSeq",
    "type" : "int",
    "comment" : " {@code mSessionCallbackRecordMap}.",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClient",
    "type" : "ITvAdClient",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<TvAdServiceInfo> getTvAdServiceList()",
    "returnType" : "List<TvAdServiceInfo>",
    "comment" : "\n     * Returns the complete list of TV AD services on the system.\n     *\n     * @return List of {@link TvAdServiceInfo} for each TV AD service that describes its meta\n     * information.\n     ",
    "links" : [ "android.media.tv.ad.TvAdServiceInfo" ]
  }, {
    "name" : "public void createSession(@NonNull String serviceId, @NonNull String type, @NonNull final TvAdManager.SessionCallback callback, @NonNull Handler handler)",
    "returnType" : "void",
    "comment" : "\n     * Creates a {@link Session} for a given TV AD service.\n     *\n     * <p>The number of sessions that can be created at the same time is limited by the capability\n     * of the given AD service.\n     *\n     * @param serviceId The ID of the AD service.\n     * @param callback A callback used to receive the created session.\n     * @param handler A {@link Handler} that the session creation will be delivered to.\n     * @hide\n     ",
    "links" : [ "android.os.Handler", "Session" ]
  }, {
    "name" : "private void createSessionInternal(String serviceId, String type, TvAdManager.SessionCallback callback, Handler handler)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendAppLinkCommand(@NonNull String serviceId, @NonNull Bundle command)",
    "returnType" : "void",
    "comment" : "\n     * Sends app link command.\n     *\n     * @param serviceId The ID of TV AD service which the command to be sent to. The ID can be found\n     *                  in {@link TvAdServiceInfo#getId()}.\n     * @param command The command to be sent. The command is a bundle with the following keys:\n     *                <ul>\n     *                <li>{@link #APP_LINK_KEY_PACKAGE_NAME}: The package name of the app to be\n     *                launched.\n     *                <li>{@link #APP_LINK_KEY_CLASS_NAME}: The class name of the app to be\n     *                launched.\n     *                <li>{@link #APP_LINK_KEY_COMMAND_TYPE}: The command type.\n     *                <li>{@link #APP_LINK_KEY_SERVICE_ID}: The ID of the TV AD service.\n     *                <li>{@link #APP_LINK_KEY_BACK_URI}: The URI to be used to return to the\n     *                previous app.\n     *                </ul>\n     ",
    "links" : [ "#APP_LINK_KEY_CLASS_NAME", "#APP_LINK_KEY_PACKAGE_NAME", "#APP_LINK_KEY_BACK_URI", "android.media.tv.ad.TvAdServiceInfo#getId()", "#APP_LINK_KEY_SERVICE_ID", "#APP_LINK_KEY_COMMAND_TYPE" ]
  }, {
    "name" : "public void registerCallback(@CallbackExecutor @NonNull Executor executor, @NonNull TvAdServiceCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Registers a {@link TvAdServiceCallback}.\n     *\n     * @param callback A callback used to monitor status of the TV AD services.\n     * @param executor A {@link Executor} that the status change will be delivered to.\n     ",
    "links" : [ "android.annotation.CallbackExecutor", "TvAdServiceCallback" ]
  }, {
    "name" : "public void unregisterCallback(@NonNull final TvAdServiceCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Unregisters the existing {@link TvAdServiceCallback}.\n     *\n     * @param callback The existing callback to remove.\n     ",
    "links" : [ "TvAdServiceCallback" ]
  } ],
  "methodNames" : [ "public List<TvAdServiceInfo> getTvAdServiceList()", "public void createSession(@NonNull String serviceId, @NonNull String type, @NonNull final TvAdManager.SessionCallback callback, @NonNull Handler handler)", "private void createSessionInternal(String serviceId, String type, TvAdManager.SessionCallback callback, Handler handler)", "public void sendAppLinkCommand(@NonNull String serviceId, @NonNull Bundle command)", "public void registerCallback(@CallbackExecutor @NonNull Executor executor, @NonNull TvAdServiceCallback callback)", "public void unregisterCallback(@NonNull final TvAdServiceCallback callback)" ],
  "variableNames" : [ "TAG", "APP_LINK_KEY_PACKAGE_NAME", "APP_LINK_KEY_CLASS_NAME", "APP_LINK_KEY_COMMAND_TYPE", "APP_LINK_KEY_SERVICE_ID", "APP_LINK_KEY_BACK_URI", "ACTION_APP_LINK_COMMAND", "INTENT_KEY_TV_INPUT_ID", "INTENT_KEY_AD_SERVICE_ID", "INTENT_KEY_CHANNEL_URI", "INTENT_KEY_COMMAND_TYPE", "SESSION_DATA_TYPE_AD_REQUEST", "SESSION_DATA_TYPE_AD_BUFFER_READY", "SESSION_DATA_TYPE_BROADCAST_INFO_REQUEST", "SESSION_DATA_TYPE_REMOVE_BROADCAST_INFO_REQUEST", "SESSION_DATA_KEY_AD_REQUEST", "SESSION_DATA_KEY_AD_BUFFER", "SESSION_DATA_KEY_BROADCAST_INFO_REQUEST", "SESSION_DATA_KEY_REQUEST_ID", "SESSION_STATE_STOPPED", "SESSION_STATE_RUNNING", "SESSION_STATE_ERROR", "ERROR_NONE", "ERROR_UNKNOWN", "ERROR_NOT_SUPPORTED", "ERROR_WEAK_SIGNAL", "ERROR_RESOURCE_UNAVAILABLE", "ERROR_BLOCKED", "ERROR_ENCRYPTED", "ERROR_UNKNOWN_CHANNEL", "mService", "mUserId", "mSessionCallbackRecordMap", "mCallbackRecords", "mNextSeq", "mLock", "mClient" ]
}