{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/vibrator/MultiVibratorInfo.java",
  "packageName" : "android.os.vibrator",
  "className" : "MultiVibratorInfo",
  "comment" : "\n * Represents multiple vibrator information as a single {@link VibratorInfo}.\n *\n * <p>This uses an intersection of all vibrators to decide the capabilities and effect/primitive\n * support.\n *\n * @hide\n ",
  "links" : [ "android.os.VibratorInfo" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EPSILON",
    "type" : "float",
    "comment" : " Epsilon used for float comparison applied in calculations for the merged info.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static int capabilitiesIntersection(VibratorInfo[] infos, boolean frequencyProfileIsEmpty)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static SparseBooleanArray supportedBrakingIntersection(VibratorInfo[] infos)",
    "returnType" : "SparseBooleanArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static SparseBooleanArray supportedEffectsIntersection(VibratorInfo[] infos)",
    "returnType" : "SparseBooleanArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static SparseIntArray supportedPrimitivesAndDurationsIntersection(VibratorInfo[] infos)",
    "returnType" : "SparseIntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int integerLimitIntersection(VibratorInfo[] infos, Function<VibratorInfo, Integer> propertyGetter)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static float floatPropertyIntersection(VibratorInfo[] infos, Function<VibratorInfo, Float> propertyGetter)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static FrequencyProfile frequencyProfileIntersection(VibratorInfo[] infos)",
    "returnType" : "FrequencyProfile",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Range<Float> frequencyRangeIntersection(VibratorInfo[] infos, float frequencyResolution)",
    "returnType" : "Range<Float>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static int capabilitiesIntersection(VibratorInfo[] infos, boolean frequencyProfileIsEmpty)", "private static SparseBooleanArray supportedBrakingIntersection(VibratorInfo[] infos)", "private static SparseBooleanArray supportedEffectsIntersection(VibratorInfo[] infos)", "private static SparseIntArray supportedPrimitivesAndDurationsIntersection(VibratorInfo[] infos)", "private static int integerLimitIntersection(VibratorInfo[] infos, Function<VibratorInfo, Integer> propertyGetter)", "private static float floatPropertyIntersection(VibratorInfo[] infos, Function<VibratorInfo, Float> propertyGetter)", "private static FrequencyProfile frequencyProfileIntersection(VibratorInfo[] infos)", "private static Range<Float> frequencyRangeIntersection(VibratorInfo[] infos, float frequencyResolution)" ],
  "variableNames" : [ "TAG", "EPSILON" ]
}