{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/companion/virtual/VirtualDevice.java",
  "packageName" : "android.companion.virtual",
  "className" : "VirtualDevice",
  "comment" : " TODO(b/310912420): Link to VirtualDeviceManager#registerVirtualDeviceListener from the docs",
  "links" : [ ],
  "variables" : [ {
    "name" : "mVirtualDevice",
    "type" : "IVirtualDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPersistentId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayName",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<VirtualDevice>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getDeviceId()",
    "returnType" : "int",
    "comment" : " TODO(b/310912420): Link to #getPersistentDeviceId from the docs",
    "links" : [ ]
  }, {
    "name" : "public String getPersistentDeviceId()",
    "returnType" : "String",
    "comment" : "\n     * Returns the persistent identifier of this virtual device, if any.\n     *\n     * <p> If there is no stable identifier for this virtual device, then this returns {@code null}.\n\n     * <p>This identifier may correspond to a physical device. In that case it remains valid for as\n     * long as that physical device is associated with the host device and may be used to persist\n     * data per device.\n     *\n     * <p class=\"note\">This identifier may not be unique across virtual devices, in case there are\n     * more than one virtual devices corresponding to the same physical device.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the virtual device (optionally) provided during its creation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getDisplayName()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Returns the human-readable name of the virtual device, if defined, which is suitable to be\n     * shown in UI.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getDisplayIds()",
    "returnType" : "int[]",
    "comment" : "\n     * Returns the IDs of all virtual displays that belong to this device, if any.\n     *\n     * <p>The actual {@link android.view.Display} objects can be obtained by passing the returned\n     * IDs to {@link android.hardware.display.DisplayManager#getDisplay(int)}.</p>\n     ",
    "links" : [ "android.view.Display", "android.hardware.display.DisplayManager#getDisplay(int)" ]
  }, {
    "name" : "public boolean hasCustomSensorSupport()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether this device may have custom sensors.\n     *\n     * <p>Returning {@code true} does not necessarily mean that this device has sensors, it only\n     * means that a {@link android.hardware.SensorManager} instance created from a {@link Context}\n     * associated with this device will return this device's sensors, if any.</p>\n     *\n     * @see Context#getDeviceId()\n     * @see Context#createDeviceContext(int)\n     ",
    "links" : [ "android.content.Context", "android.hardware.SensorManager" ]
  }, {
    "name" : "public boolean hasCustomAudioInputSupport()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether this device may have custom audio input device.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasCustomCameraSupport()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether this device may have custom cameras.\n     *\n     * <p>Returning {@code true} does not necessarily mean that this device has cameras, it only\n     * means that a {@link android.hardware.camera2.CameraManager} instance created from a\n     * {@link Context} associated with this device will return this device's cameras, if any.</p>\n     *\n     * @see Context#getDeviceId()\n     * @see Context#createDeviceContext(int)\n     *\n     * @hide\n     ",
    "links" : [ "android.content.Context", "android.hardware.camera2.CameraManager" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getDeviceId()", "public String getPersistentDeviceId()", "public String getName()", "public CharSequence getDisplayName()", "public int[] getDisplayIds()", "public boolean hasCustomSensorSupport()", "public boolean hasCustomAudioInputSupport()", "public boolean hasCustomCameraSupport()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()" ],
  "variableNames" : [ "mVirtualDevice", "mId", "mPersistentId", "mName", "mDisplayName", "CREATOR" ]
}