{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/EmergencyRegistrationResult.java",
  "packageName" : "android.telephony",
  "className" : "EmergencyRegistrationResult",
  "comment" : "\n * Contains attributes required to determine the domain for a telephony service, including\n * the network registration state.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mAccessNetworkType",
    "type" : "int",
    "comment" : "\n     * Indicates the cellular network type of the acquired system.\n     ",
    "links" : [ ]
  }, {
    "name" : "mRegState",
    "type" : "int",
    "comment" : "\n     * Registration state of the acquired system.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDomain",
    "type" : "int",
    "comment" : "\n     * EMC domain indicates the current domain of the acquired system.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsVopsSupported",
    "type" : "boolean",
    "comment" : "\n     * Indicates whether the network supports voice over PS network.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsEmcBearerSupported",
    "type" : "boolean",
    "comment" : "\n     * This indicates if camped network support VoLTE emergency bearers.\n     * This should only be set if the UE is in LTE mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "mNwProvidedEmc",
    "type" : "int",
    "comment" : "\n     * The value of the network provided EMC in 5G Registration ACCEPT.\n     * This should be set only if the UE is in 5G mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "mNwProvidedEmf",
    "type" : "int",
    "comment" : "\n     * The value of the network provided EMF(EPS Fallback) in 5G Registration ACCEPT.\n     * This should be set only if the UE is in 5G mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMcc",
    "type" : "String",
    "comment" : " 3-digit Mobile Country Code, 000..999, empty string if unknown. ",
    "links" : [ ]
  }, {
    "name" : "mMnc",
    "type" : "String",
    "comment" : " 2 or 3-digit Mobile Network Code, 00..999, empty string if unknown. ",
    "links" : [ ]
  }, {
    "name" : "mCountryIso",
    "type" : "String",
    "comment" : "\n     * The ISO-3166-1 alpha-2 country code equivalent for the network's country code,\n     * empty string if unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<EmergencyRegistrationResult>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getAccessNetwork()",
    "returnType" : "int",
    "comment" : "\n     * Returns the cellular access network type of the acquired system.\n     *\n     * @return the cellular network type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRegState()",
    "returnType" : "int",
    "comment" : "\n     * Returns the registration state of the acquired system.\n     *\n     * @return the registration state.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDomain()",
    "returnType" : "int",
    "comment" : "\n     * Returns the current domain of the acquired system.\n     *\n     * @return the current domain.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isVopsSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the network supports voice over PS network.\n     *\n     * @return {@code true} if the network supports voice over PS network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmcBearerSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether camped network support VoLTE emergency bearers.\n     * This is not valid if the UE is not in LTE mode.\n     *\n     * @return {@code true} if the network supports VoLTE emergency bearers.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNwProvidedEmc()",
    "returnType" : "int",
    "comment" : "\n     * Returns the value of the network provided EMC in 5G Registration ACCEPT.\n     * This is not valid if UE is not in 5G mode.\n     *\n     * @return the value of the network provided EMC.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNwProvidedEmf()",
    "returnType" : "int",
    "comment" : "\n     * Returns the value of the network provided EMF(EPS Fallback) in 5G Registration ACCEPT.\n     * This is not valid if UE is not in 5G mode.\n     *\n     * @return the value of the network provided EMF.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getMcc()",
    "returnType" : "String",
    "comment" : "\n     * Returns 3-digit Mobile Country Code.\n     *\n     * @return Mobile Country Code.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getMnc()",
    "returnType" : "String",
    "comment" : "\n     * Returns 2 or 3-digit Mobile Network Code.\n     *\n     * @return Mobile Network Code.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getCountryIso()",
    "returnType" : "String",
    "comment" : "\n     * Returns the ISO-3166-1 alpha-2 country code is provided in lowercase 2 character format.\n     *\n     * @return Country code.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void readFromParcel(@NonNull Parcel in)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getAccessNetwork()", "public int getRegState()", "public int getDomain()", "public boolean isVopsSupported()", "public boolean isEmcBearerSupported()", "public int getNwProvidedEmc()", "public int getNwProvidedEmf()", "public String getMcc()", "public String getMnc()", "public String getCountryIso()", "public String toString()", "public boolean equals(Object o)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)", "private void readFromParcel(@NonNull Parcel in)" ],
  "variableNames" : [ "mAccessNetworkType", "mRegState", "mDomain", "mIsVopsSupported", "mIsEmcBearerSupported", "mNwProvidedEmc", "mNwProvidedEmf", "mMcc", "mMnc", "mCountryIso", "CREATOR" ]
}