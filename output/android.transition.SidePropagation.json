{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/transition/SidePropagation.java",
  "packageName" : "android.transition",
  "className" : "SidePropagation",
  "comment" : "\n * A <code>TransitionPropagation</code> that propagates based on the distance to the side\n * and, orthogonally, the distance to epicenter. If the transitioning View is visible in\n * the start of the transition, then it will transition sooner when closer to the side and\n * later when farther. If the view is not visible in the start of the transition, then\n * it will transition later when closer to the side and sooner when farther from the edge.\n * This is the default TransitionPropagation used with {@link android.transition.Slide}.\n ",
  "links" : [ "android.transition.Slide" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPropagationSpeed",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSide",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setSide(@GravityFlag int side)",
    "returnType" : "void",
    "comment" : "\n     * Sets the side that is used to calculate the transition propagation. If the transitioning\n     * View is visible in the start of the transition, then it will transition sooner when\n     * closer to the side and later when farther. If the view is not visible in the start of\n     * the transition, then it will transition later when closer to the side and sooner when\n     * farther from the edge. The default is {@link Gravity#BOTTOM}.\n     *\n     * @param side The side that is used to calculate the transition propagation. Must be one of\n     *             {@link Gravity#LEFT}, {@link Gravity#TOP}, {@link Gravity#RIGHT},\n     *             {@link Gravity#BOTTOM}, {@link Gravity#START}, or {@link Gravity#END}.\n     ",
    "links" : [ "android.view.Gravity#TOP", "android.view.Gravity#LEFT", "android.view.Gravity#RIGHT", "android.view.Gravity#START", "android.view.Gravity#END", "android.view.Gravity#BOTTOM" ]
  }, {
    "name" : "public void setPropagationSpeed(float propagationSpeed)",
    "returnType" : "void",
    "comment" : "\n     * Sets the speed at which transition propagation happens, relative to the duration of the\n     * Transition. A <code>propagationSpeed</code> of 1 means that a View centered at the side\n     * set in {@link #setSide(int)} and View centered at the opposite edge will have a difference\n     * in start delay of approximately the duration of the Transition. A speed of 2 means the\n     * start delay difference will be approximately half of the duration of the transition. A\n     * value of 0 is illegal, but negative values will invert the propagation.\n     *\n     * @param propagationSpeed The speed at which propagation occurs, relative to the duration\n     *                         of the transition. A speed of 4 means it works 4 times as fast\n     *                         as the duration of the transition. May not be 0.\n     ",
    "links" : [ "#setSide(int)" ]
  }, {
    "name" : "public long getStartDelay(ViewGroup sceneRoot, Transition transition, TransitionValues startValues, TransitionValues endValues)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int distance(View sceneRoot, int viewX, int viewY, int epicenterX, int epicenterY, int left, int top, int right, int bottom)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getMaxDistance(ViewGroup sceneRoot)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setSide(@GravityFlag int side)", "public void setPropagationSpeed(float propagationSpeed)", "public long getStartDelay(ViewGroup sceneRoot, Transition transition, TransitionValues startValues, TransitionValues endValues)", "private int distance(View sceneRoot, int viewX, int viewY, int epicenterX, int epicenterY, int left, int top, int right, int bottom)", "private int getMaxDistance(ViewGroup sceneRoot)" ],
  "variableNames" : [ "TAG", "mPropagationSpeed", "mSide" ]
}