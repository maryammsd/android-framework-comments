{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/UnguessableToken.java",
  "packageName" : "org.chromium.base",
  "className" : "UnguessableToken",
  "comment" : "\n * This class mirrors unguessable_token.h .  Since tokens are passed by value,\n * we don't bother to maintain a native token.  This implements Parcelable so\n * that it may be sent via binder.\n *\n * To get one of these from native, one must start with a\n * base::UnguessableToken, then create a Java object from it.  See\n * jni_unguessable_token.h for information.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mHigh",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLow",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<UnguessableToken>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static UnguessableToken create(long high, long low)",
    "returnType" : "UnguessableToken",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getHighForSerialization()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getLowForSerialization()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private UnguessableToken parcelAndUnparcelForTesting()",
    "returnType" : "UnguessableToken",
    "comment" : " to do that.",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static UnguessableToken create(long high, long low)", "public long getHighForSerialization()", "public long getLowForSerialization()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(@Nullable Object obj)", "public int hashCode()", "private UnguessableToken parcelAndUnparcelForTesting()" ],
  "variableNames" : [ "mHigh", "mLow", "CREATOR" ]
}