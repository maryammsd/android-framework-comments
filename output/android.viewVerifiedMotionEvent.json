{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/VerifiedMotionEvent.java",
  "packageName" : "android.view",
  "className" : "VerifiedMotionEvent",
  "comment" : "\n * MotionEvent that has been verified by the system.\n * The data contained in this class is always a subset of a {@link MotionEvent}. Use this class to\n * check which data has been confirmed by the system to be authentic.\n *\n * Most applications do not need to use this class.\n *\n * {@see android.hardware.input.InputManager#verifyInputEvent}\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRawX",
    "type" : "float",
    "comment" : "\n     * The raw X coordinate of the primary pointer.\n     * @see MotionEvent#getRawX()\n     ",
    "links" : [ ]
  }, {
    "name" : "mRawY",
    "type" : "float",
    "comment" : "\n     * The raw Y coordinate of the primary pointer.\n     * @see MotionEvent#getRawY()\n     ",
    "links" : [ ]
  }, {
    "name" : "mActionMasked",
    "type" : "int",
    "comment" : "\n     * The masked action being performed, without pointer index information.\n     *\n     * @see MotionEvent#getActionMasked()\n     ",
    "links" : [ ]
  }, {
    "name" : "mDownTimeNanos",
    "type" : "long",
    "comment" : "\n     * The time that the gesture started, in nanoseconds.\n     * Uses the same time base as {@link android.os.SystemClock#uptimeMillis()}\n     *\n     * @see MotionEvent#getDownTime()\n     ",
    "links" : [ "android.os.SystemClock#uptimeMillis" ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "\n     * Returns the flags for this motion event.\n     *\n     * @see MotionEvent#getFlags()\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mMetaState",
    "type" : "int",
    "comment" : "\n     * The state of any meta / modifier keys that were in effect when the event was generated.\n     *\n     * @see MotionEvent#getMetaState()\n     ",
    "links" : [ ]
  }, {
    "name" : "mButtonState",
    "type" : "int",
    "comment" : "\n     *  The state of all buttons that are pressed such as a mouse or stylus button.\n     *\n     * @see MotionEvent#getButtonState()\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<VerifiedMotionEvent>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Boolean getFlag(int flag)",
    "returnType" : "Boolean",
    "comment" : "\n     * Get a specific flag of this motion event, if possible. Return null if the flag value could\n     * not be checked.\n     *\n     * @param flag the flag of interest\n     * @return Boolean(true) if the motion event has the requested flag\n     *         Boolean(false) if the motion event does not have the requested flag\n     *         null if the flag value could not be checked\n     *\n     * @see MotionEvent#FLAG_WINDOW_IS_OBSCURED\n     * @see MotionEvent#FLAG_WINDOW_IS_PARTIALLY_OBSCURED\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getRawX()",
    "returnType" : "float",
    "comment" : "\n     * The raw X coordinate of the primary pointer.\n     *\n     * @see MotionEvent#getRawX()\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getRawY()",
    "returnType" : "float",
    "comment" : "\n     * The raw Y coordinate of the primary pointer.\n     *\n     * @see MotionEvent#getRawY()\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getActionMasked()",
    "returnType" : "int",
    "comment" : "\n     * The masked action being performed, without pointer index information.\n     *\n     * @see MotionEvent#getActionMasked()\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getDownTimeNanos()",
    "returnType" : "long",
    "comment" : "\n     * The time that the gesture started, in nanoseconds.\n     * Uses the same time base as {@link android.os.SystemClock#uptimeMillis()}\n     *\n     * @see MotionEvent#getDownTime()\n     ",
    "links" : [ "android.os.SystemClock#uptimeMillis" ]
  }, {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : "\n     * Returns the flags for this motion event.\n     *\n     * @see MotionEvent#getFlags()\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMetaState()",
    "returnType" : "int",
    "comment" : "\n     * The state of any meta / modifier keys that were in effect when the event was generated.\n     *\n     * @see MotionEvent#getMetaState()\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getButtonState()",
    "returnType" : "int",
    "comment" : "\n     *  The state of all buttons that are pressed such as a mouse or stylus button.\n     *\n     * @see MotionEvent#getButtonState()\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@android.annotation.NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void __metadata()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mRawX", "mRawY", "mActionMasked", "mDownTimeNanos", "mFlags", "mMetaState", "mButtonState", "CREATOR" ],
  "methodNames" : [ "public Boolean getFlag(int flag)", "public float getRawX()", "public float getRawY()", "public int getActionMasked()", "public long getDownTimeNanos()", "public int getFlags()", "public int getMetaState()", "public int getButtonState()", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public void writeToParcel(@android.annotation.NonNull Parcel dest, int flags)", "public int describeContents()", "private void __metadata()" ]
}