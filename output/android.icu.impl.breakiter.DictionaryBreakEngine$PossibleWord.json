{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/breakiter/DictionaryBreakEngine.java",
  "packageName" : "android.icu.impl.breakiter",
  "className" : "PossibleWord",
  "comment" : " Helper class for improving readability of the Thai/Lao/Khmer word break\n     * algorithm.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "POSSIBLE_WORD_LIST_MAX",
    "type" : "int",
    "comment" : " that form a nested sequence.",
    "links" : [ ]
  }, {
    "name" : "lengths",
    "type" : "int[]",
    "comment" : "list of word candidate lengths, in increasing length order",
    "links" : [ ]
  }, {
    "name" : "count",
    "type" : "int[]",
    "comment" : " Count of candidates",
    "links" : [ ]
  }, {
    "name" : "prefix",
    "type" : "int",
    "comment" : " The longest match with a dictionary word",
    "links" : [ ]
  }, {
    "name" : "offset",
    "type" : "int",
    "comment" : " Offset in the text of these candidates",
    "links" : [ ]
  }, {
    "name" : "mark",
    "type" : "int",
    "comment" : " The preferred candidate's offset",
    "links" : [ ]
  }, {
    "name" : "current",
    "type" : "int",
    "comment" : " The candidate we're currently looking at",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int candidates(CharacterIterator fIter, DictionaryMatcher dict, int rangeEnd)",
    "returnType" : "int",
    "comment" : " Fill the list of candidates if needed, select the longest, and return the number found",
    "links" : [ ]
  }, {
    "name" : "public int acceptMarked(CharacterIterator fIter)",
    "returnType" : "int",
    "comment" : " Select the currently marked candidate, point after it in the text, and invalidate self",
    "links" : [ ]
  }, {
    "name" : "public boolean backUp(CharacterIterator fIter)",
    "returnType" : "boolean",
    "comment" : " and point the text after it",
    "links" : [ ]
  }, {
    "name" : "public int longestPrefix()",
    "returnType" : "int",
    "comment" : " Return the longest prefix this candidate location shares with a dictionary word",
    "links" : [ ]
  }, {
    "name" : "public void markCurrent()",
    "returnType" : "void",
    "comment" : " Mark the current candidate as the one we like",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int candidates(CharacterIterator fIter, DictionaryMatcher dict, int rangeEnd)", "public int acceptMarked(CharacterIterator fIter)", "public boolean backUp(CharacterIterator fIter)", "public int longestPrefix()", "public void markCurrent()" ],
  "variableNames" : [ "POSSIBLE_WORD_LIST_MAX", "lengths", "count", "prefix", "offset", "mark", "current" ]
}