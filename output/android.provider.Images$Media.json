{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/MediaStore.java",
  "packageName" : "android.provider",
  "className" : "Media",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "INTERNAL_CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n             * The content:// style URI for the internal storage.\n             ",
    "links" : [ ]
  }, {
    "name" : "EXTERNAL_CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n             * The content:// style URI for the \"primary\" external storage\n             * volume.\n             ",
    "links" : [ ]
  }, {
    "name" : "CONTENT_TYPE",
    "type" : "String",
    "comment" : "\n             * The MIME type of this directory of\n             * images.  Note that each entry in this directory will have a standard\n             * image MIME type as appropriate -- for example, image/jpeg.\n             ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_SORT_ORDER",
    "type" : "String",
    "comment" : "\n             * The default sort order for this table\n             ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static final Cursor query(ContentResolver cr, Uri uri, String[] projection)",
    "returnType" : "Cursor",
    "comment" : "\n             * @deprecated all queries should be performed through\n             *             {@link ContentResolver} directly, which offers modern\n             *             features like {@link CancellationSignal}.\n             ",
    "links" : [ "android.content.ContentResolver", "android.os.CancellationSignal" ]
  }, {
    "name" : "public static final Cursor query(ContentResolver cr, Uri uri, String[] projection, String where, String orderBy)",
    "returnType" : "Cursor",
    "comment" : "\n             * @deprecated all queries should be performed through\n             *             {@link ContentResolver} directly, which offers modern\n             *             features like {@link CancellationSignal}.\n             ",
    "links" : [ "android.content.ContentResolver", "android.os.CancellationSignal" ]
  }, {
    "name" : "public static final Cursor query(ContentResolver cr, Uri uri, String[] projection, String selection, String[] selectionArgs, String orderBy)",
    "returnType" : "Cursor",
    "comment" : "\n             * @deprecated all queries should be performed through\n             *             {@link ContentResolver} directly, which offers modern\n             *             features like {@link CancellationSignal}.\n             ",
    "links" : [ "android.content.ContentResolver", "android.os.CancellationSignal" ]
  }, {
    "name" : "public static final Bitmap getBitmap(ContentResolver cr, Uri url) throws FileNotFoundException, IOException",
    "returnType" : "Bitmap",
    "comment" : "\n             * Retrieves an image for the given url as a {@link Bitmap}.\n             *\n             * @param cr The content resolver to use\n             * @param url The url of the image\n             * @deprecated loading of images should be performed through\n             *             {@link ImageDecoder#createSource(ContentResolver, Uri)},\n             *             which offers modern features like\n             *             {@link PostProcessor}.\n             ",
    "links" : [ "android.graphics.PostProcessor", "android.graphics.Bitmap", "android.graphics.ImageDecoder#createSource(ContentResolver" ]
  }, {
    "name" : "public static final String insertImage(ContentResolver cr, String imagePath, String name, String description) throws FileNotFoundException",
    "returnType" : "String",
    "comment" : "\n             * Insert an image and create a thumbnail for it.\n             *\n             * @param cr The content resolver to use\n             * @param imagePath The path to the image to insert\n             * @param name The name of the image\n             * @param description The description of the image\n             * @return The URL to the newly created image\n             * @deprecated inserting of images should be performed using\n             *             {@link MediaColumns#IS_PENDING}, which offers richer\n             *             control over lifecycle.\n             ",
    "links" : [ "#IS_PENDING" ]
  }, {
    "name" : "public static final String insertImage(ContentResolver cr, Bitmap source, String title, String description)",
    "returnType" : "String",
    "comment" : "\n             * Insert an image and create a thumbnail for it.\n             *\n             * @param cr The content resolver to use\n             * @param source The stream to use for the image\n             * @param title The name of the image\n             * @param description The description of the image\n             * @return The URL to the newly created image, or <code>null</code> if the image failed to be stored\n             *              for any reason.\n             * @deprecated inserting of images should be performed using\n             *             {@link MediaColumns#IS_PENDING}, which offers richer\n             *             control over lifecycle.\n             ",
    "links" : [ "#IS_PENDING" ]
  }, {
    "name" : "public static Uri getContentUri(String volumeName)",
    "returnType" : "Uri",
    "comment" : "\n             * Get the content:// style URI for the image media table on the\n             * given volume.\n             *\n             * @param volumeName the name of the volume to get the URI for\n             * @return the URI to the image media table on the given volume\n             ",
    "links" : [ ]
  }, {
    "name" : "public static Uri getContentUri(@NonNull String volumeName, long id)",
    "returnType" : "Uri",
    "comment" : "\n             * Get the content:// style URI for a single row in the images table\n             * on the given volume.\n             *\n             * @param volumeName the name of the volume to get the URI for\n             * @param id the image to get the URI for\n             * @return the URI to the images table on the given volume\n             ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static final Cursor query(ContentResolver cr, Uri uri, String[] projection)", "public static final Cursor query(ContentResolver cr, Uri uri, String[] projection, String where, String orderBy)", "public static final Cursor query(ContentResolver cr, Uri uri, String[] projection, String selection, String[] selectionArgs, String orderBy)", "public static final Bitmap getBitmap(ContentResolver cr, Uri url) throws FileNotFoundException, IOException", "public static final String insertImage(ContentResolver cr, String imagePath, String name, String description) throws FileNotFoundException", "public static final String insertImage(ContentResolver cr, Bitmap source, String title, String description)", "public static Uri getContentUri(String volumeName)", "public static Uri getContentUri(@NonNull String volumeName, long id)" ],
  "variableNames" : [ "INTERNAL_CONTENT_URI", "EXTERNAL_CONTENT_URI", "CONTENT_TYPE", "DEFAULT_SORT_ORDER" ]
}