{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/camera2/legacy/LegacyRequestMapper.java",
  "packageName" : "android.hardware.camera2.legacy",
  "className" : "LegacyRequestMapper",
  "comment" : "\n * Provide legacy-specific implementations of camera2 CaptureRequest for legacy devices.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_JPEG_QUALITY",
    "type" : "byte",
    "comment" : " Default quality for android.jpeg.quality, android.jpeg.thumbnailQuality ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void convertRequestMetadata(LegacyRequest legacyRequest)",
    "returnType" : "void",
    "comment" : "\n     * Set the legacy parameters using the {@link LegacyRequest legacy request}.\n     *\n     * <p>The legacy request's parameters are changed as a side effect of calling this\n     * method.</p>\n     *\n     * @param legacyRequest a non-{@code null} legacy request\n     ",
    "links" : [ "LegacyRequest" ]
  }, {
    "name" : "private static boolean checkForCompleteGpsData(Location location)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int filterSupportedCaptureIntent(int captureIntent)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static List<Camera.Area> convertMeteringRegionsToLegacy(Rect activeArray, ParameterUtils.ZoomData zoomData, MeteringRectangle[] meteringRegions, int maxNumMeteringAreas, String regionName)",
    "returnType" : "List<Camera.Area>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void mapAeAndFlashMode(CaptureRequest r, Parameters p)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String convertAeAntiBandingModeToLegacy(int mode)",
    "returnType" : "String",
    "comment" : "\n     * Returns null if the anti-banding mode enum is not supported.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int[] convertAeFpsRangeToLegacy(Range<Integer> fpsRange)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String convertAwbModeToLegacy(int mode)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static T getIfSupported(CaptureRequest r, CaptureRequest.Key<T> key, T defaultValue, boolean isSupported, T allowedValue)",
    "returnType" : "T",
    "comment" : "\n     * Return {@code null} if the value is not supported, otherwise return the retrieved key's\n     * value from the request (or the default value if it wasn't set).\n     *\n     * <p>If the fetched value in the request is equivalent to {@code allowedValue},\n     * then omit the warning (e.g. turning off AF lock on a camera\n     * that always has the AF lock turned off is a silent no-op), but still return {@code null}.</p>\n     *\n     * <p>Logs a warning to logcat if the key is not supported by api1 camera device.</p.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DEBUG", "DEFAULT_JPEG_QUALITY" ],
  "methodNames" : [ "public static void convertRequestMetadata(LegacyRequest legacyRequest)", "private static boolean checkForCompleteGpsData(Location location)", " static int filterSupportedCaptureIntent(int captureIntent)", "private static List<Camera.Area> convertMeteringRegionsToLegacy(Rect activeArray, ParameterUtils.ZoomData zoomData, MeteringRectangle[] meteringRegions, int maxNumMeteringAreas, String regionName)", "private static void mapAeAndFlashMode(CaptureRequest r, Parameters p)", "private static String convertAeAntiBandingModeToLegacy(int mode)", "private static int[] convertAeFpsRangeToLegacy(Range<Integer> fpsRange)", "private static String convertAwbModeToLegacy(int mode)", "private static T getIfSupported(CaptureRequest r, CaptureRequest.Key<T> key, T defaultValue, boolean isSupported, T allowedValue)" ]
}