{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/supplier/OneshotSupplierImpl.java",
  "packageName" : "org.chromium.base.supplier",
  "className" : "OneshotSupplierImpl",
  "comment" : "\n * Concrete implementation of {@link OneshotSupplier} to be used by classes owning a\n * OneshotSupplier and providing it as a dependency to others.\n *\n * <p>Instances of this class must only be accessed from the thread they were created on.\n *\n * To use:\n * <ol>\n *    <li>Create a new {@code OneshotSupplierImpl<T>} to pass as a dependency.\n *    <li>Call {@link #set(Object)} when the object becomes available. {@link #set(Object)} may only\n * be called once.\n * </ol>\n *\n * @param <T> The type of the wrapped object.\n ",
  "links" : [ "org.chromium.base.supplier.OneshotSupplier", "#set(Object)" ],
  "variables" : [ {
    "name" : "mPromise",
    "type" : "Promise<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mThreadChecker",
    "type" : "ThreadUtils.ThreadChecker",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public T onAvailable(Callback<T> callback)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T get()",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void set(@NonNull T object)",
    "returnType" : "void",
    "comment" : "\n     * Set the object supplied by this supplier. This will post notifications to registered\n     * callbacks that the dependency is available. If set() has already been called, this method\n     * will assert.\n     *\n     * @param object The object to supply.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public T onAvailable(Callback<T> callback)", "public T get()", "public void set(@NonNull T object)" ],
  "variableNames" : [ "mPromise", "mThreadChecker" ]
}