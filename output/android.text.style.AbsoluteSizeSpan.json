{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/style/AbsoluteSizeSpan.java",
  "packageName" : "android.text.style",
  "className" : "AbsoluteSizeSpan",
  "comment" : "\n * A span that changes the size of the text it's attached to.\n * <p>\n * For example, the size of the text can be changed to 55dp like this:\n * <pre>{@code\n * SpannableString string = new SpannableString(\"Text with absolute size span\");\n *string.setSpan(new AbsoluteSizeSpan(55, true), 10, 23, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);}</pre>\n * <img src=\"{@docRoot}reference/android/images/text/style/absolutesizespan.png\" />\n * <figcaption>Text with text size updated.</figcaption>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDip",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getSpanTypeId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeIdInternal()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcelInternal(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getSize()",
    "returnType" : "int",
    "comment" : "\n     * Get the text size. This is in physical pixels if {@link #getDip()} returns false or in\n     * device-independent pixels if {@link #getDip()} returns true.\n     *\n     * @return the text size, either in physical pixels or device-independent pixels.\n     * @see AbsoluteSizeSpan#AbsoluteSizeSpan(int, boolean)\n     ",
    "links" : [ "#getDip()" ]
  }, {
    "name" : "public boolean getDip()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the size is in device-independent pixels or not, depending on the\n     * <code>dip</code> flag passed in {@link #AbsoluteSizeSpan(int, boolean)}\n     *\n     * @return <code>true</code> if the size is in device-independent pixels, <code>false</code>\n     * otherwise\n     *\n     * @see #AbsoluteSizeSpan(int, boolean)\n     ",
    "links" : [ "#AbsoluteSizeSpan(int" ]
  }, {
    "name" : "public void updateDrawState(@NonNull TextPaint ds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateMeasureState(@NonNull TextPaint ds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getSpanTypeId()", "public int getSpanTypeIdInternal()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public void writeToParcelInternal(@NonNull Parcel dest, int flags)", "public int getSize()", "public boolean getDip()", "public void updateDrawState(@NonNull TextPaint ds)", "public void updateMeasureState(@NonNull TextPaint ds)", "public String toString()" ],
  "variableNames" : [ "mSize", "mDip" ]
}