{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/assist/AssistStructure.java",
  "packageName" : "android.app.assist",
  "className" : "WindowNode",
  "comment" : "\n     * Describes a window in the assist data.\n     ",
  "variables" : [ {
    "name" : "mX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRoot",
    "type" : "ViewNode",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " int resolveViewAutofillFlags(Context context, int fillRequestFlags)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void writeSelfToParcel(Parcel out, PooledStringWriter pwriter, float[] tmpMatrix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getLeft()",
    "returnType" : "int",
    "comment" : "\n         * Returns the left edge of the window, in pixels, relative to the left\n         * edge of the screen.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getTop()",
    "returnType" : "int",
    "comment" : "\n         * Returns the top edge of the window, in pixels, relative to the top\n         * edge of the screen.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getWidth()",
    "returnType" : "int",
    "comment" : "\n         * Returns the total width of the window in pixels.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getHeight()",
    "returnType" : "int",
    "comment" : "\n         * Returns the total height of the window in pixels.\n         ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getTitle()",
    "returnType" : "CharSequence",
    "comment" : "\n         * Returns the title associated with the window, if it has one.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getDisplayId()",
    "returnType" : "int",
    "comment" : "\n         * Returns the ID of the display this window is on, for use with\n         * {@link android.hardware.display.DisplayManager#getDisplay DisplayManager.getDisplay()}.\n         ",
    "links" : [ "android.hardware.display.DisplayManager#getDisplay" ]
  }, {
    "name" : "public ViewNode getRootViewNode()",
    "returnType" : "ViewNode",
    "comment" : "\n         * Returns the {@link ViewNode} containing the root content of the window.\n         ",
    "links" : [ "ViewNode" ]
  } ],
  "variableNames" : [ "mX", "mY", "mWidth", "mHeight", "mTitle", "mDisplayId", "mRoot" ],
  "methodNames" : [ " int resolveViewAutofillFlags(Context context, int fillRequestFlags)", " void writeSelfToParcel(Parcel out, PooledStringWriter pwriter, float[] tmpMatrix)", "public int getLeft()", "public int getTop()", "public int getWidth()", "public int getHeight()", "public CharSequence getTitle()", "public int getDisplayId()", "public ViewNode getRootViewNode()" ]
}