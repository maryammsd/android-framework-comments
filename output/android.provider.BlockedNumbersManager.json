{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/BlockedNumbersManager.java",
  "packageName" : "android.provider",
  "className" : "BlockedNumbersManager",
  "comment" : "\n * Constants and methods to interact with the blocked numbers list. This class also serves as\n * a mediator between the BlockedNumber provider and the system: it manages blocking behavior\n * when the user contacts emergency services. Currently, this is only used internally by Telecom.\n *\n * Refer to {@link BlockedNumberContract} for more context.\n * @hide\n ",
  "links" : [ "android.provider.BlockedNumberContract" ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ACTION_BLOCK_SUPPRESSION_STATE_CHANGED",
    "type" : "String",
    "comment" : "\n     * A protected broadcast intent action for letting components with\n     * {@link android.Manifest.permission#READ_BLOCKED_NUMBERS} know that the block suppression\n     * status as returned by {@link #getBlockSuppressionStatus()} has been updated.\n     * @hide\n     ",
    "links" : [ "#getBlockSuppressionStatus()", "android.Manifest.permission#READ_BLOCKED_NUMBERS" ]
  }, {
    "name" : "ENHANCED_SETTING_KEY_BLOCK_UNREGISTERED",
    "type" : "String",
    "comment" : "\n     * Preference key of block numbers not in contacts setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ENHANCED_SETTING_KEY_BLOCK_PRIVATE",
    "type" : "String",
    "comment" : "\n     * Preference key of block private number calls setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ENHANCED_SETTING_KEY_BLOCK_PAYPHONE",
    "type" : "String",
    "comment" : "\n     * Preference key of block payphone calls setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ENHANCED_SETTING_KEY_BLOCK_UNKNOWN",
    "type" : "String",
    "comment" : "\n     * Preference key of block unknown calls setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ENHANCED_SETTING_KEY_SHOW_EMERGENCY_CALL_NOTIFICATION",
    "type" : "String",
    "comment" : "\n     * Preference key for whether should show an emergency call notification.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ENHANCED_SETTING_KEY_BLOCK_UNAVAILABLE",
    "type" : "String",
    "comment" : "\n     * Preference key of block unavailable calls setting.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void notifyEmergencyContact()",
    "returnType" : "void",
    "comment" : "\n     * Notifies the provider that emergency services were contacted by the user.\n     * <p> This results in {@link #shouldSystemBlockNumber} returning {@code false} independent\n     * of the contents of the provider for a duration defined by\n     * {@link android.telephony.CarrierConfigManager#KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INT}\n     * the provider unless {@link #endBlockSuppression()} is called.\n     * @hide\n     ",
    "links" : [ "android.telephony.CarrierConfigManager#KEY_DURATION_BLOCKING_DISABLED_AFTER_EMERGENCY_INT", "#endBlockSuppression()", "#shouldSystemBlockNumber" ]
  }, {
    "name" : "public void endBlockSuppression()",
    "returnType" : "void",
    "comment" : "\n     * Notifies the provider to disable suppressing blocking. If emergency services were not\n     * contacted recently at all, calling this method is a no-op.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int shouldSystemBlockNumber(@NonNull String phoneNumber, @TelecomManager.Presentation int numberPresentation, boolean isNumberInContacts)",
    "returnType" : "int",
    "comment" : "\n     * Returns {@code true} if {@code phoneNumber} is blocked taking\n     * {@link #notifyEmergencyContact()} into consideration. If emergency services\n     * have not been contacted recently and enhanced call blocking not been enabled, this\n     * method is equivalent to {@link BlockedNumberContract#isBlocked(Context, String)}.\n     *\n     * @param phoneNumber the number to check.\n     * @param numberPresentation the presentation code associated with the call.\n     * @param isNumberInContacts indicates if the provided number exists as a contact.\n     * @return result code indicating if the number should be blocked, and if so why.\n     *         Valid values are: {@link BlockedNumberContract#STATUS_NOT_BLOCKED},\n     *         {@link BlockedNumberContract#STATUS_BLOCKED_IN_LIST},\n     *         {@link BlockedNumberContract#STATUS_BLOCKED_NOT_IN_CONTACTS},\n     *         {@link BlockedNumberContract#STATUS_BLOCKED_PAYPHONE},\n     *         {@link BlockedNumberContract#STATUS_BLOCKED_RESTRICTED},\n     *         {@link BlockedNumberContract#STATUS_BLOCKED_UNKNOWN_NUMBER}.\n     * @hide\n     ",
    "links" : [ "android.provider.BlockedNumberContract#STATUS_BLOCKED_RESTRICTED", "android.provider.BlockedNumberContract#STATUS_BLOCKED_PAYPHONE", "android.provider.BlockedNumberContract#STATUS_NOT_BLOCKED", "android.provider.BlockedNumberContract#STATUS_BLOCKED_IN_LIST", "android.provider.BlockedNumberContract#STATUS_BLOCKED_UNKNOWN_NUMBER", "#notifyEmergencyContact()", "android.provider.BlockedNumberContract#isBlocked(Context", "android.provider.BlockedNumberContract#STATUS_BLOCKED_NOT_IN_CONTACTS" ]
  }, {
    "name" : "public BlockSuppressionStatus getBlockSuppressionStatus()",
    "returnType" : "BlockSuppressionStatus",
    "comment" : "\n     * @return The current status of block suppression.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean shouldShowEmergencyCallNotification()",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether should show the emergency call notification.\n     *\n     * @return {@code true} if should show emergency call notification. {@code false} otherwise.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getBlockedNumberSetting(@NonNull String key)",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether the enhanced block setting is enabled.\n     *\n     * @param key the key of the setting to check, can be\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNREGISTERED}\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_PRIVATE}\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_PAYPHONE}\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNKNOWN}\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNAVAILABLE}\n     *        {@link BlockedNumberContract.SystemContract\n     *               #ENHANCED_SETTING_KEY_SHOW_EMERGENCY_CALL_NOTIFICATION}\n     * @return {@code true} if the setting is enabled. {@code false} otherwise.\n     * @hide\n     ",
    "links" : [ "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNAVAILABLE", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNREGISTERED", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_PRIVATE", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNKNOWN", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_SHOW_EMERGENCY_CALL_NOTIFICATION", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_PAYPHONE" ]
  }, {
    "name" : "public void setBlockedNumberSetting(@NonNull String key, boolean value)",
    "returnType" : "void",
    "comment" : "\n     * Set the enhanced block setting enabled status.\n     *\n     * @param key the key of the setting to set, can be\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNREGISTERED}\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_PRIVATE}\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_PAYPHONE}\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNKNOWN}\n     *        {@link BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNAVAILABLE}\n     *        {@link BlockedNumberContract.SystemContract\n     *               #ENHANCED_SETTING_KEY_SHOW_EMERGENCY_CALL_NOTIFICATION}\n     * @param value the enabled statue of the setting to set.\n     * @hide\n     ",
    "links" : [ "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNAVAILABLE", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNREGISTERED", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_PRIVATE", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_UNKNOWN", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_SHOW_EMERGENCY_CALL_NOTIFICATION", "BlockedNumberContract.SystemContract#ENHANCED_SETTING_KEY_BLOCK_PAYPHONE" ]
  }, {
    "name" : "private void verifyBlockedNumbersPermission()",
    "returnType" : "void",
    "comment" : "\n     * Verifies that the caller holds both the\n     * {@link android.Manifest.permission#READ_BLOCKED_NUMBERS} permission and the\n     * {@link android.Manifest.permission#WRITE_BLOCKED_NUMBERS} permission.\n     *\n     * @throws SecurityException if the caller is missing the necessary permissions\n     ",
    "links" : [ "android.Manifest.permission#WRITE_BLOCKED_NUMBERS", "android.Manifest.permission#READ_BLOCKED_NUMBERS" ]
  } ],
  "methodNames" : [ "public void notifyEmergencyContact()", "public void endBlockSuppression()", "public int shouldSystemBlockNumber(@NonNull String phoneNumber, @TelecomManager.Presentation int numberPresentation, boolean isNumberInContacts)", "public BlockSuppressionStatus getBlockSuppressionStatus()", "public boolean shouldShowEmergencyCallNotification()", "public boolean getBlockedNumberSetting(@NonNull String key)", "public void setBlockedNumberSetting(@NonNull String key, boolean value)", "private void verifyBlockedNumbersPermission()" ],
  "variableNames" : [ "LOG_TAG", "mContext", "ACTION_BLOCK_SUPPRESSION_STATE_CHANGED", "ENHANCED_SETTING_KEY_BLOCK_UNREGISTERED", "ENHANCED_SETTING_KEY_BLOCK_PRIVATE", "ENHANCED_SETTING_KEY_BLOCK_PAYPHONE", "ENHANCED_SETTING_KEY_BLOCK_UNKNOWN", "ENHANCED_SETTING_KEY_SHOW_EMERGENCY_CALL_NOTIFICATION", "ENHANCED_SETTING_KEY_BLOCK_UNAVAILABLE" ]
}