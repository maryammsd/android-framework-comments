{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/Looper.java",
  "packageName" : "android.os",
  "className" : "Observer",
  "comment" : " {@hide} ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " Object messageDispatchStarting()",
    "returnType" : "Object",
    "comment" : "\n         * Called right before a message is dispatched.\n         *\n         * <p> The token type is not specified to allow the implementation to specify its own type.\n         *\n         * @return a token used for collecting telemetry when dispatching a single message.\n         *         The token token must be passed back exactly once to either\n         *         {@link Observer#messageDispatched} or {@link Observer#dispatchingThrewException}\n         *         and must not be reused again.\n         *\n         ",
    "links" : [ "#messageDispatched", "#dispatchingThrewException" ]
  }, {
    "name" : " void messageDispatched(Object token, Message msg)",
    "returnType" : "void",
    "comment" : "\n         * Called when a message was processed by a Handler.\n         *\n         * @param token Token obtained by previously calling\n         *              {@link Observer#messageDispatchStarting} on the same Observer instance.\n         * @param msg The message that was dispatched.\n         ",
    "links" : [ "#messageDispatchStarting" ]
  }, {
    "name" : " void dispatchingThrewException(Object token, Message msg, Exception exception)",
    "returnType" : "void",
    "comment" : "\n         * Called when an exception was thrown while processing a message.\n         *\n         * @param token Token obtained by previously calling\n         *              {@link Observer#messageDispatchStarting} on the same Observer instance.\n         * @param msg The message that was dispatched and caused an exception.\n         * @param exception The exception that was thrown.\n         ",
    "links" : [ "#messageDispatchStarting" ]
  } ],
  "methodNames" : [ " Object messageDispatchStarting()", " void messageDispatched(Object token, Message msg)", " void dispatchingThrewException(Object token, Message msg, Exception exception)" ],
  "variableNames" : [ ]
}