{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/admin/SecurityLog.java",
  "packageName" : "android.app.admin",
  "className" : "SecurityEvent",
  "comment" : "\n     * A class representing a security event log entry.\n     ",
  "variables" : [ {
    "name" : "mEvent",
    "type" : "Event",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SecurityEvent>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getTimeNanos()",
    "returnType" : "long",
    "comment" : "\n         * Returns the timestamp in nano seconds when this event was logged.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getTag()",
    "returnType" : "int",
    "comment" : "\n         * Returns the tag of this log entry, which specifies entry's semantics.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Object getData()",
    "returnType" : "Object",
    "comment" : "\n         * Returns the payload contained in this log entry or {@code null} if there is no payload.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getIntegerData(int index)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String getStringData(int index)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setId(long id)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getId()",
    "returnType" : "long",
    "comment" : "\n         * Returns the id of the event, where the id monotonically increases for each event. The id\n         * is reset when the device reboots, and when security logging is enabled.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getLogLevel()",
    "returnType" : "int",
    "comment" : "\n         * Returns severity level for the event.\n         ",
    "links" : [ ]
  }, {
    "name" : "private boolean getSuccess()",
    "returnType" : "boolean",
    "comment" : " Success/failure if present is encoded as an integer in the first (0th) element of data.",
    "links" : [ ]
  }, {
    "name" : "public SecurityEvent redact(int accessingUser)",
    "returnType" : "SecurityEvent",
    "comment" : "\n         * Returns a copy of the security event suitable to be consumed by the provided user.\n         * This method will either return the original event itself if the event does not contain\n         * any sensitive data; or a copy of itself but with sensitive information redacted; or\n         * {@code null} if the entire event should not be accessed by the given user.\n         *\n         * @param accessingUser which user this security event is to be accessed, must be a\n         *     concrete user id.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean eventEquals(SecurityEvent other)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mEvent", "mId", "CREATOR" ],
  "methodNames" : [ "public long getTimeNanos()", "public int getTag()", "public Object getData()", "public int getIntegerData(int index)", "public String getStringData(int index)", "public void setId(long id)", "public long getId()", "public int getLogLevel()", "private boolean getSuccess()", "public SecurityEvent redact(int accessingUser)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public boolean eventEquals(SecurityEvent other)" ]
}