{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/locale/LikelySubtags.java",
  "packageName" : "android.icu.impl.locale",
  "className" : "LikelySubtags",
  "comment" : "\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "PSEUDO_ACCENTS_PREFIX",
    "type" : "String",
    "comment" : " -XA, -PSACCENT",
    "links" : [ ]
  }, {
    "name" : "PSEUDO_BIDI_PREFIX",
    "type" : "String",
    "comment" : " -XB, -PSBIDI",
    "links" : [ ]
  }, {
    "name" : "PSEUDO_CRACKED_PREFIX",
    "type" : "String",
    "comment" : " -XC, -PSCRACK",
    "links" : [ ]
  }, {
    "name" : "SKIP_SCRIPT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG_OUTPUT",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INSTANCE",
    "type" : "LikelySubtags",
    "comment" : " VisibleForTesting",
    "links" : [ ]
  }, {
    "name" : "languageAliases",
    "type" : "Map<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "regionAliases",
    "type" : "Map<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "trie",
    "type" : "BytesTrie",
    "comment" : " '*' is used instead of \"und\", \"Zzzz\"/\"\" and \"ZZ\"/\"\".",
    "links" : [ ]
  }, {
    "name" : "trieUndState",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "trieUndZzzzState",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "defaultLsrIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "trieFirstLetterStates",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "lsrs",
    "type" : "LSR[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ULocale canonicalize(ULocale locale)",
    "returnType" : "ULocale",
    "comment" : "\n     * Implementation of LocaleMatcher.canonicalize(ULocale).\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String getCanonical(Map<String, String> aliases, String alias)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public LSR makeMaximizedLsrFrom(ULocale locale, boolean returnInputIfUnmatch)",
    "returnType" : "LSR",
    "comment" : " VisibleForTesting",
    "links" : [ ]
  }, {
    "name" : "public LSR makeMaximizedLsrFrom(Locale locale)",
    "returnType" : "LSR",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private LSR makeMaximizedLsr(String language, String script, String region, String variant, boolean returnInputIfUnmatch)",
    "returnType" : "LSR",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isMacroregion(String region)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to find out a region is a macroregion\n     ",
    "links" : [ ]
  }, {
    "name" : "private LSR maximize(String language, String script, String region, boolean returnInputIfUnmatch)",
    "returnType" : "LSR",
    "comment" : "\n     * Raw access to addLikelySubtags. Input must be in canonical format, eg \"en\", not \"eng\" or \"EN\".\n     ",
    "links" : [ ]
  }, {
    "name" : " int compareLikely(LSR lsr, LSR other, int likelyInfo)",
    "returnType" : "int",
    "comment" : "\n     * Tests whether lsr is \"more likely\" than other.\n     * For example, fr-Latn-FR is more likely than fr-Latn-CH because\n     * FR is the default region for fr-Latn.\n     *\n     * <p>The likelyInfo caches lookup information between calls.\n     * The return value is an updated likelyInfo value,\n     * with bit 0 set if lsr is \"more likely\".\n     * The initial value of likelyInfo must be negative.\n     ",
    "links" : [ ]
  }, {
    "name" : "private int getLikelyIndex(String language, String script)",
    "returnType" : "int",
    "comment" : " Subset of maximize().",
    "links" : [ ]
  }, {
    "name" : "private static final int trieNext(BytesTrie iter, String s, int i)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public LSR minimizeSubtags(String languageIn, String scriptIn, String regionIn, ULocale.Minimize fieldToFavor)",
    "returnType" : "LSR",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Map<String, LSR> getTable()",
    "returnType" : "Map<String, LSR>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ULocale canonicalize(ULocale locale)", "private static String getCanonical(Map<String, String> aliases, String alias)", "public LSR makeMaximizedLsrFrom(ULocale locale, boolean returnInputIfUnmatch)", "public LSR makeMaximizedLsrFrom(Locale locale)", "private LSR makeMaximizedLsr(String language, String script, String region, String variant, boolean returnInputIfUnmatch)", "private boolean isMacroregion(String region)", "private LSR maximize(String language, String script, String region, boolean returnInputIfUnmatch)", " int compareLikely(LSR lsr, LSR other, int likelyInfo)", "private int getLikelyIndex(String language, String script)", "private static final int trieNext(BytesTrie iter, String s, int i)", "public LSR minimizeSubtags(String languageIn, String scriptIn, String regionIn, ULocale.Minimize fieldToFavor)", "private Map<String, LSR> getTable()", "public String toString()" ],
  "variableNames" : [ "PSEUDO_ACCENTS_PREFIX", "PSEUDO_BIDI_PREFIX", "PSEUDO_CRACKED_PREFIX", "SKIP_SCRIPT", "DEBUG_OUTPUT", "INSTANCE", "languageAliases", "regionAliases", "trie", "trieUndState", "trieUndZzzzState", "defaultLsrIndex", "trieFirstLetterStates", "lsrs" ]
}