{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/controls/actions/ControlAction.java",
  "packageName" : "android.service.controls.actions",
  "className" : "ControlAction",
  "comment" : "\n * An abstract action indicating a user interaction with a {@link Control}.\n *\n * In some cases, an action needs to be validated by the user, using a password, PIN or simple\n * acknowledgment. For those cases, an optional (nullable) parameter can be passed to send the user\n * input. This <b>challenge value</b> will be requested from the user and sent as part\n * of a {@link ControlAction} only if the service has responded to an action with one of:\n * <ul>\n *     <li> {@link #RESPONSE_CHALLENGE_ACK}\n *     <li> {@link #RESPONSE_CHALLENGE_PIN}\n *     <li> {@link #RESPONSE_CHALLENGE_PASSPHRASE}\n * </ul>\n ",
  "links" : [ "#RESPONSE_CHALLENGE_PIN", "#RESPONSE_CHALLENGE_PASSPHRASE", "#RESPONSE_CHALLENGE_ACK", "android.service.controls.Control", "android.service.controls.actions.ControlAction" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KEY_ACTION_TYPE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KEY_TEMPLATE_ID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KEY_CHALLENGE_VALUE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ERROR_ACTION",
    "type" : "ControlAction",
    "comment" : "\n     * Object returned when there is an unparcelling error.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_ERROR",
    "type" : "int",
    "comment" : "\n     * The identifier of the action returned by {@link #getErrorAction}.\n     ",
    "links" : [ "#getErrorAction" ]
  }, {
    "name" : "TYPE_BOOLEAN",
    "type" : "int",
    "comment" : "\n     * The identifier of {@link BooleanAction}.\n     ",
    "links" : [ "android.service.controls.actions.BooleanAction" ]
  }, {
    "name" : "TYPE_FLOAT",
    "type" : "int",
    "comment" : "\n     * The identifier of {@link FloatAction}.\n     ",
    "links" : [ "android.service.controls.actions.FloatAction" ]
  }, {
    "name" : "TYPE_MODE",
    "type" : "int",
    "comment" : "\n     * The identifier of {@link ModeAction}.\n     ",
    "links" : [ "android.service.controls.actions.ModeAction" ]
  }, {
    "name" : "TYPE_COMMAND",
    "type" : "int",
    "comment" : "\n     * The identifier of {@link CommandAction}.\n     ",
    "links" : [ "android.service.controls.actions.CommandAction" ]
  }, {
    "name" : "NUM_RESPONSE_TYPES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_UNKNOWN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_OK",
    "type" : "int",
    "comment" : "\n     * Response code for the {@code consumer} in\n     * {@link ControlsProviderService#performControlAction} indicating that the action has been\n     * performed. The action may still fail later and the state may not change.\n     ",
    "links" : [ "android.service.controls.ControlsProviderService#performControlAction" ]
  }, {
    "name" : "RESPONSE_FAIL",
    "type" : "int",
    "comment" : "\n     * Response code for the {@code consumer} in\n     * {@link ControlsProviderService#performControlAction} indicating that the action has failed.\n     ",
    "links" : [ "android.service.controls.ControlsProviderService#performControlAction" ]
  }, {
    "name" : "RESPONSE_CHALLENGE_ACK",
    "type" : "int",
    "comment" : "\n     * Response code for the {@code consumer} in\n     * {@link ControlsProviderService#performControlAction} indicating that in order for the action\n     * to be performed, acknowledgment from the user is required. Any non-empty string returned\n     * from {@link #getChallengeValue} shall be treated as a positive acknowledgment.\n     ",
    "links" : [ "#getChallengeValue", "android.service.controls.ControlsProviderService#performControlAction" ]
  }, {
    "name" : "RESPONSE_CHALLENGE_PIN",
    "type" : "int",
    "comment" : "\n     * Response code for the {@code consumer} in\n     * {@link ControlsProviderService#performControlAction} indicating that in order for the action\n     * to be performed, a PIN is required.\n     ",
    "links" : [ "android.service.controls.ControlsProviderService#performControlAction" ]
  }, {
    "name" : "RESPONSE_CHALLENGE_PASSPHRASE",
    "type" : "int",
    "comment" : "\n     * Response code for the {@code consumer} in\n     * {@link ControlsProviderService#performControlAction} indicating that in order for the action\n     * to be performed, an alphanumeric passphrase is required.\n     ",
    "links" : [ "android.service.controls.ControlsProviderService#performControlAction" ]
  }, {
    "name" : "mTemplateId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChallengeValue",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static final boolean isValidResponse(@ResponseResult int response)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract int getActionType()",
    "returnType" : "int",
    "comment" : "\n     * The action type associated with this class.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTemplateId()",
    "returnType" : "String",
    "comment" : "\n     * The identifier of the {@link ControlTemplate} that originated this action\n     ",
    "links" : [ "android.service.controls.templates.ControlTemplate" ]
  }, {
    "name" : "public String getChallengeValue()",
    "returnType" : "String",
    "comment" : "\n     * The challenge value used to authenticate certain actions, if available.\n     ",
    "links" : [ ]
  }, {
    "name" : " Bundle getDataBundle()",
    "returnType" : "Bundle",
    "comment" : "\n     * Obtain a {@link Bundle} describing this object populated with data.\n     *\n     * Implementations in subclasses should populate the {@link Bundle} returned by\n     * {@link ControlAction}.\n     * @return a {@link Bundle} containing the data that represents this object.\n     * @hide\n     ",
    "links" : [ "android.os.Bundle", "android.service.controls.actions.ControlAction" ]
  }, {
    "name" : " static ControlAction createActionFromBundle(@NonNull Bundle bundle)",
    "returnType" : "ControlAction",
    "comment" : "\n     * @param bundle\n     * @return\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ControlAction getErrorAction()",
    "returnType" : "ControlAction",
    "comment" : "\n     * Returns a singleton {@link ControlAction} used for indicating an error in unparceling.\n     ",
    "links" : [ "android.service.controls.actions.ControlAction" ]
  } ],
  "methodNames" : [ "public static final boolean isValidResponse(@ResponseResult int response)", "public abstract int getActionType()", "public String getTemplateId()", "public String getChallengeValue()", " Bundle getDataBundle()", " static ControlAction createActionFromBundle(@NonNull Bundle bundle)", "public static ControlAction getErrorAction()" ],
  "variableNames" : [ "TAG", "KEY_ACTION_TYPE", "KEY_TEMPLATE_ID", "KEY_CHALLENGE_VALUE", "ERROR_ACTION", "TYPE_ERROR", "TYPE_BOOLEAN", "TYPE_FLOAT", "TYPE_MODE", "TYPE_COMMAND", "NUM_RESPONSE_TYPES", "RESPONSE_UNKNOWN", "RESPONSE_OK", "RESPONSE_FAIL", "RESPONSE_CHALLENGE_ACK", "RESPONSE_CHALLENGE_PIN", "RESPONSE_CHALLENGE_PASSPHRASE", "mTemplateId", "mChallengeValue" ]
}