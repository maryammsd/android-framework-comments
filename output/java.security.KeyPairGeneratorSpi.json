{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/KeyPairGeneratorSpi.java",
  "packageName" : "java.security",
  "className" : "KeyPairGeneratorSpi",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void initialize(int keysize, SecureRandom random)",
    "returnType" : "void",
    "comment" : "\n     * Initializes the key pair generator for a certain keysize, using\n     * the default parameter set.\n     *\n     * @param keysize the keysize. This is an\n     * algorithm-specific metric, such as modulus length, specified in\n     * number of bits.\n     *\n     * @param random the source of randomness for this generator.\n     *\n     * @exception InvalidParameterException if the {@code keysize} is not\n     * supported by this KeyPairGeneratorSpi object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void initialize(AlgorithmParameterSpec params, SecureRandom random) throws InvalidAlgorithmParameterException",
    "returnType" : "void",
    "comment" : "\n     * Initializes the key pair generator using the specified parameter\n     * set and user-provided source of randomness.\n     *\n     * <p>This concrete method has been added to this previously-defined\n     * abstract class. (For backwards compatibility, it cannot be abstract.)\n     * It may be overridden by a provider to initialize the key pair\n     * generator. Such an override\n     * is expected to throw an InvalidAlgorithmParameterException if\n     * a parameter is inappropriate for this key pair generator.\n     * If this method is not overridden, it always throws an\n     * UnsupportedOperationException.\n     *\n     * @param params the parameter set used to generate the keys.\n     *\n     * @param random the source of randomness for this generator.\n     *\n     * @exception InvalidAlgorithmParameterException if the given parameters\n     * are inappropriate for this key pair generator.\n     *\n     * @since 1.2\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract KeyPair generateKeyPair()",
    "returnType" : "KeyPair",
    "comment" : "\n     * Generates a key pair. Unless an initialization method is called\n     * using a KeyPairGenerator interface, algorithm-specific defaults\n     * will be used. This will generate a new key pair every time it\n     * is called.\n     *\n     * @return the newly generated {@code KeyPair}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void initialize(int keysize, SecureRandom random)", "public void initialize(AlgorithmParameterSpec params, SecureRandom random) throws InvalidAlgorithmParameterException", "public abstract KeyPair generateKeyPair()" ],
  "variableNames" : [ ]
}