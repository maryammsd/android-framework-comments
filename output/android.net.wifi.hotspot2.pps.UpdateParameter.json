{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/hotspot2/pps/UpdateParameter.java",
  "packageName" : "android.net.wifi.hotspot2.pps",
  "className" : "UpdateParameter",
  "comment" : "\n * Class representing configuration parameters for subscription or policy update in\n * PerProviderSubscription (PPS) Management Object (MO) tree.  This is used by both\n * PerProviderSubscription/Policy/PolicyUpdate and PerProviderSubscription/SubscriptionUpdate\n * subtree.\n *\n * For more info, refer to Hotspot 2.0 PPS MO defined in section 9.1 of the Hotspot 2.0\n * Release 2 Technical Specification.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UPDATE_CHECK_INTERVAL_NEVER",
    "type" : "long",
    "comment" : "\n     * Value indicating policy update is not applicable.  Thus, never check with policy server\n     * for updates.\n     ",
    "links" : [ ]
  }, {
    "name" : "UPDATE_METHOD_OMADM",
    "type" : "String",
    "comment" : "\n     * Valid string for UpdateMethod.\n     ",
    "links" : [ ]
  }, {
    "name" : "UPDATE_METHOD_SSP",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UPDATE_RESTRICTION_HOMESP",
    "type" : "String",
    "comment" : "\n     * Valid string for Restriction.\n     ",
    "links" : [ ]
  }, {
    "name" : "UPDATE_RESTRICTION_ROAMING_PARTNER",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UPDATE_RESTRICTION_UNRESTRICTED",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_URI_BYTES",
    "type" : "int",
    "comment" : "\n     * Maximum bytes for URI string.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_URL_BYTES",
    "type" : "int",
    "comment" : "\n     * Maximum bytes for URI string.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_USERNAME_BYTES",
    "type" : "int",
    "comment" : "\n     * Maximum bytes for username.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_PASSWORD_BYTES",
    "type" : "int",
    "comment" : "\n     * Maximum bytes for password.\n     ",
    "links" : [ ]
  }, {
    "name" : "CERTIFICATE_SHA256_BYTES",
    "type" : "int",
    "comment" : "\n     * Number of bytes for certificate SHA-256 fingerprint byte array.\n     ",
    "links" : [ ]
  }, {
    "name" : "mUpdateIntervalInMinutes",
    "type" : "long",
    "comment" : "\n     * This specifies how often the mobile device shall check with policy server for updates.\n     *\n     * Using Long.MIN_VALUE to indicate unset value.\n     ",
    "links" : [ ]
  }, {
    "name" : "mUpdateMethod",
    "type" : "String",
    "comment" : "\n     * The method used to update the policy.  Permitted values are \"OMA-DM-ClientInitiated\"\n     * and \"SPP-ClientInitiated\".\n     ",
    "links" : [ ]
  }, {
    "name" : "mRestriction",
    "type" : "String",
    "comment" : "\n     * This specifies the hotspots at which the subscription update is permitted.  Permitted\n     * values are \"HomeSP\", \"RoamingPartner\", or \"Unrestricted\";\n     ",
    "links" : [ ]
  }, {
    "name" : "mServerUri",
    "type" : "String",
    "comment" : "\n     * The URI of the update server.\n     ",
    "links" : [ ]
  }, {
    "name" : "mUsername",
    "type" : "String",
    "comment" : "\n     * Username used to authenticate with the policy server.\n     ",
    "links" : [ ]
  }, {
    "name" : "mBase64EncodedPassword",
    "type" : "String",
    "comment" : "\n     * Base64 encoded password used to authenticate with the policy server.\n     ",
    "links" : [ ]
  }, {
    "name" : "mTrustRootCertUrl",
    "type" : "String",
    "comment" : "\n     * HTTPS URL for retrieving certificate for trust root.  The trust root is used to validate\n     * policy server's identity.\n     ",
    "links" : [ ]
  }, {
    "name" : "mTrustRootCertSha256Fingerprint",
    "type" : "byte[]",
    "comment" : "\n     * SHA-256 fingerprint of the certificate located at {@code mTrustRootCertUrl}\n     ",
    "links" : [ ]
  }, {
    "name" : "mCaCertificate",
    "type" : "X509Certificate",
    "comment" : "\n     * CA (Certificate Authority) X509 certificates.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<UpdateParameter>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setUpdateIntervalInMinutes(long updateIntervalInMinutes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getUpdateIntervalInMinutes()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setUpdateMethod(String updateMethod)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getUpdateMethod()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRestriction(String restriction)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getRestriction()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setServerUri(String serverUri)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getServerUri()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setUsername(String username)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getUsername()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setBase64EncodedPassword(String password)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getBase64EncodedPassword()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTrustRootCertUrl(String trustRootCertUrl)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getTrustRootCertUrl()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTrustRootCertSha256Fingerprint(byte[] fingerprint)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] getTrustRootCertSha256Fingerprint()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCaCertificate(X509Certificate caCertificate)",
    "returnType" : "void",
    "comment" : "\n     * Set the CA (Certification Authority) certificate associated with Policy/Subscription update.\n     *\n     * @param caCertificate The CA certificate to set\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public X509Certificate getCaCertificate()",
    "returnType" : "X509Certificate",
    "comment" : "\n     * Get the CA (Certification Authority) certificate associated with Policy/Subscription update.\n     *\n     * @return CA certificate associated and {@code null} if certificate is not set.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object thatObject)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean validate()",
    "returnType" : "boolean",
    "comment" : "\n     * Validate UpdateParameter data.\n     *\n     * @return true on success\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "UPDATE_CHECK_INTERVAL_NEVER", "UPDATE_METHOD_OMADM", "UPDATE_METHOD_SSP", "UPDATE_RESTRICTION_HOMESP", "UPDATE_RESTRICTION_ROAMING_PARTNER", "UPDATE_RESTRICTION_UNRESTRICTED", "MAX_URI_BYTES", "MAX_URL_BYTES", "MAX_USERNAME_BYTES", "MAX_PASSWORD_BYTES", "CERTIFICATE_SHA256_BYTES", "mUpdateIntervalInMinutes", "mUpdateMethod", "mRestriction", "mServerUri", "mUsername", "mBase64EncodedPassword", "mTrustRootCertUrl", "mTrustRootCertSha256Fingerprint", "mCaCertificate", "CREATOR" ],
  "methodNames" : [ "public void setUpdateIntervalInMinutes(long updateIntervalInMinutes)", "public long getUpdateIntervalInMinutes()", "public void setUpdateMethod(String updateMethod)", "public String getUpdateMethod()", "public void setRestriction(String restriction)", "public String getRestriction()", "public void setServerUri(String serverUri)", "public String getServerUri()", "public void setUsername(String username)", "public String getUsername()", "public void setBase64EncodedPassword(String password)", "public String getBase64EncodedPassword()", "public void setTrustRootCertUrl(String trustRootCertUrl)", "public String getTrustRootCertUrl()", "public void setTrustRootCertSha256Fingerprint(byte[] fingerprint)", "public byte[] getTrustRootCertSha256Fingerprint()", "public void setCaCertificate(X509Certificate caCertificate)", "public X509Certificate getCaCertificate()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(Object thatObject)", "public int hashCode()", "public String toString()", "public boolean validate()" ]
}