{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/WifiNetworkSelectionConfig.java",
  "packageName" : "android.net.wifi",
  "className" : "WifiNetworkSelectionConfig",
  "comment" : "\n * An Object used in {@link WifiManager#setNetworkSelectionConfig(WifiNetworkSelectionConfig)}.\n * @hide\n ",
  "links" : [ "android.net.wifi.WifiManager#setNetworkSelectionConfig(WifiNetworkSelectionConfig)" ],
  "variables" : [ {
    "name" : "ASSOCIATED_NETWORK_SELECTION_OVERRIDE_NONE",
    "type" : "int",
    "comment" : "\n     * A constant used in {@link Builder#setAssociatedNetworkSelectionOverride(int)}\n     * This is the default value which performs no override.\n     ",
    "links" : [ "#setAssociatedNetworkSelectionOverride(int)" ]
  }, {
    "name" : "ASSOCIATED_NETWORK_SELECTION_OVERRIDE_ENABLED",
    "type" : "int",
    "comment" : "\n     * A constant used in {{@link Builder#setAssociatedNetworkSelectionOverride(int)}\n     * Overrides the config_wifi_framework_enable_associated_network_selection overlay to true to\n     * allow the wifi framework to automatically select and switch to a better wifi network while\n     * already connected.\n     ",
    "links" : [ "#setAssociatedNetworkSelectionOverride(int)" ]
  }, {
    "name" : "ASSOCIATED_NETWORK_SELECTION_OVERRIDE_DISABLED",
    "type" : "int",
    "comment" : "\n     * A constant used in {@link Builder#setAssociatedNetworkSelectionOverride(int)}\n     * Overrides the config_wifi_framework_enable_associated_network_selection overlay to false to\n     * disallow the wifi framework to automatically select and connect to another network while\n     * already connected.\n     ",
    "links" : [ "#setAssociatedNetworkSelectionOverride(int)" ]
  }, {
    "name" : "FREQUENCY_WEIGHT_LOW",
    "type" : "int",
    "comment" : "\n     * A constant used in {@link Builder#setFrequencyWeights(SparseArray)} to indicate a low\n     * preference for the frequency it's associated with.\n     ",
    "links" : [ "#setFrequencyWeights(SparseArray)" ]
  }, {
    "name" : "FREQUENCY_WEIGHT_HIGH",
    "type" : "int",
    "comment" : "\n     * A constant used in {@link Builder#setFrequencyWeights(SparseArray)} to indicate a high\n     * preference for the frequency it's associated with.\n     ",
    "links" : [ "#setFrequencyWeights(SparseArray)" ]
  }, {
    "name" : "mSufficiencyCheckEnabledWhenScreenOff",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSufficiencyCheckEnabledWhenScreenOn",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserConnectChoiceOverrideEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastSelectionWeightEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAssociatedNetworkSelectionOverride",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRssi2Thresholds",
    "type" : "int[]",
    "comment" : " RSSI thresholds for 2.4 GHz band (dBm) ",
    "links" : [ ]
  }, {
    "name" : "mRssi5Thresholds",
    "type" : "int[]",
    "comment" : " RSSI thresholds for 5 GHz band (dBm) ",
    "links" : [ ]
  }, {
    "name" : "mRssi6Thresholds",
    "type" : "int[]",
    "comment" : " RSSI thresholds for 6 GHz band (dBm) ",
    "links" : [ ]
  }, {
    "name" : "mFrequencyWeights",
    "type" : "SparseArray<Integer>",
    "comment" : " Frequency weight list ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WifiNetworkSelectionConfig>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isSufficiencyCheckEnabledWhenScreenOff()",
    "returnType" : "boolean",
    "comment" : "\n     * See {@link Builder#setSufficiencyCheckEnabledWhenScreenOff(boolean)}.\n     ",
    "links" : [ "#setSufficiencyCheckEnabledWhenScreenOff(boolean)" ]
  }, {
    "name" : "public boolean isSufficiencyCheckEnabledWhenScreenOn()",
    "returnType" : "boolean",
    "comment" : "\n     * See {@link Builder#setSufficiencyCheckEnabledWhenScreenOn(boolean)}.\n     ",
    "links" : [ "#setSufficiencyCheckEnabledWhenScreenOn(boolean)" ]
  }, {
    "name" : "public boolean isUserConnectChoiceOverrideEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * See {@link Builder#setUserConnectChoiceOverrideEnabled(boolean)}.\n     ",
    "links" : [ "#setUserConnectChoiceOverrideEnabled(boolean)" ]
  }, {
    "name" : "public boolean isLastSelectionWeightEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * See {@link Builder#setLastSelectionWeightEnabled(boolean)}.\n     ",
    "links" : [ "#setLastSelectionWeightEnabled(boolean)" ]
  }, {
    "name" : "public int getAssociatedNetworkSelectionOverride()",
    "returnType" : "int",
    "comment" : "\n     * See {@link Builder#setAssociatedNetworkSelectionOverride(int)}.\n     ",
    "links" : [ "#setAssociatedNetworkSelectionOverride(int)" ]
  }, {
    "name" : "private static boolean isValidAssociatedNetworkSelectionOverride(int override)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isValidBand(@WifiBand int band)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isValidRssiThresholdArray(int[] thresholds)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isValidFrequencyWeightArray(SparseArray<Integer> weights)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean isRssiThresholdResetArray(@NonNull int[] thresholds)",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether the given RSSI threshold array contains all 0s.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isValid()",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether the current configuration is valid.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getRssiThresholds(@WifiBand int band)",
    "returnType" : "int[]",
    "comment" : "\n     * See {@link Builder#setRssiThresholds(int, int[])}.\n     * Returns RSSI thresholds for the input band.\n     *\n     * @throws IllegalArgumentException if the input band is not a supported {@link WifiBand}\n     ",
    "links" : [ "android.net.wifi.ScanResult.WifiBand", "#setRssiThresholds(int" ]
  }, {
    "name" : "public SparseArray<Integer> getFrequencyWeights()",
    "returnType" : "SparseArray<Integer>",
    "comment" : "\n     * See {@link Builder#setFrequencyWeights(SparseArray)}.\n     ",
    "links" : [ "#setFrequencyWeights(SparseArray)" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isSufficiencyCheckEnabledWhenScreenOff()", "public boolean isSufficiencyCheckEnabledWhenScreenOn()", "public boolean isUserConnectChoiceOverrideEnabled()", "public boolean isLastSelectionWeightEnabled()", "public int getAssociatedNetworkSelectionOverride()", "private static boolean isValidAssociatedNetworkSelectionOverride(int override)", "private static boolean isValidBand(@WifiBand int band)", "private static boolean isValidRssiThresholdArray(int[] thresholds)", "private static boolean isValidFrequencyWeightArray(SparseArray<Integer> weights)", "public static boolean isRssiThresholdResetArray(@NonNull int[] thresholds)", "public boolean isValid()", "public int[] getRssiThresholds(@WifiBand int band)", "public SparseArray<Integer> getFrequencyWeights()", "public int hashCode()", "public boolean equals(Object obj)", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()" ],
  "variableNames" : [ "ASSOCIATED_NETWORK_SELECTION_OVERRIDE_NONE", "ASSOCIATED_NETWORK_SELECTION_OVERRIDE_ENABLED", "ASSOCIATED_NETWORK_SELECTION_OVERRIDE_DISABLED", "FREQUENCY_WEIGHT_LOW", "FREQUENCY_WEIGHT_HIGH", "mSufficiencyCheckEnabledWhenScreenOff", "mSufficiencyCheckEnabledWhenScreenOn", "mUserConnectChoiceOverrideEnabled", "mLastSelectionWeightEnabled", "mAssociatedNetworkSelectionOverride", "mRssi2Thresholds", "mRssi5Thresholds", "mRssi6Thresholds", "mFrequencyWeights", "CREATOR" ]
}