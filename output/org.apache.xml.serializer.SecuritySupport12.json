{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/serializer/SecuritySupport12.java",
  "packageName" : "org.apache.xml.serializer",
  "className" : "SecuritySupport12",
  "comment" : "\n * This class is duplicated for each Xalan-Java subpackage so keep it in sync.\n * It is package private and therefore is not exposed as part of the Xalan-Java\n * API.\n *\n * Security related methods that only work on J2SE 1.2 and newer.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " ClassLoader getContextClassLoader()",
    "returnType" : "ClassLoader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ClassLoader getSystemClassLoader()",
    "returnType" : "ClassLoader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ClassLoader getParentClassLoader(final ClassLoader cl)",
    "returnType" : "ClassLoader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String getSystemProperty(final String propName)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " FileInputStream getFileInputStream(final File file) throws FileNotFoundException",
    "returnType" : "FileInputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " InputStream getResourceAsStream(final ClassLoader cl, final String name)",
    "returnType" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean getFileExists(final File f)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long getLastModified(final File f)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " ClassLoader getContextClassLoader()", " ClassLoader getSystemClassLoader()", " ClassLoader getParentClassLoader(final ClassLoader cl)", " String getSystemProperty(final String propName)", " FileInputStream getFileInputStream(final File file) throws FileNotFoundException", " InputStream getResourceAsStream(final ClassLoader cl, final String name)", " boolean getFileExists(final File f)", " long getLastModified(final File f)" ],
  "variableNames" : [ ]
}