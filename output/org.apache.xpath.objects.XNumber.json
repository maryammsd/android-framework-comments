{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/objects/XNumber.java",
  "packageName" : "org.apache.xpath.objects",
  "className" : "XNumber",
  "comment" : "\n * This class represents an XPath number, and is capable of\n * converting the number to other types, such as a string.\n * @xsl.usage general\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_val",
    "type" : "double",
    "comment" : " Value of the XNumber object.\n   *  @serial         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n   * Tell that this is a CLASS_NUMBER.\n   *\n   * @return node type CLASS_NUMBER \n   ",
    "links" : [ ]
  }, {
    "name" : "public String getTypeString()",
    "returnType" : "String",
    "comment" : "\n   * Given a request type, return the equivalent string.\n   * For diagnostic purposes.\n   *\n   * @return type string \"#NUMBER\" \n   ",
    "links" : [ ]
  }, {
    "name" : "public double num()",
    "returnType" : "double",
    "comment" : "\n   * Cast result object to a number.\n   *\n   * @return the value of the XNumber object\n   ",
    "links" : [ ]
  }, {
    "name" : "public double num(XPathContext xctxt) throws javax.xml.transform.TransformerException",
    "returnType" : "double",
    "comment" : "\n   * Evaluate expression to a number.\n   *\n   * @return 0.0\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean bool()",
    "returnType" : "boolean",
    "comment" : "\n   * Cast result object to a boolean.\n   *\n   * @return false if the value is NaN or equal to 0.0\n   ",
    "links" : [ ]
  }, {
    "name" : "public String str()",
    "returnType" : "String",
    "comment" : "\n   * Cast result object to a string.\n   *\n   * @return \"NaN\" if the number is NaN, Infinity or -Infinity if\n   * the number is infinite or the string value of the number.\n   ",
    "links" : [ ]
  }, {
    "name" : "private static String zeros(int n)",
    "returnType" : "String",
    "comment" : "\n   * Return a string of '0' of the given length\n   *\n   *\n   * @param n Length of the string to be returned\n   *\n   * @return a string of '0' with the given length\n   ",
    "links" : [ ]
  }, {
    "name" : "public Object object()",
    "returnType" : "Object",
    "comment" : "\n   * Return a java object that's closest to the representation\n   * that should be handed to an extension.\n   *\n   * @return The value of this XNumber as a Double object\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(XObject obj2)",
    "returnType" : "boolean",
    "comment" : "\n   * Tell if two objects are functionally equal.\n   *\n   * @param obj2 Object to compare this to\n   *\n   * @return true if the two objects are equal \n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean isStableNumber()",
    "returnType" : "boolean",
    "comment" : "\n   * Tell if this expression returns a stable number that will not change during \n   * iterations within the expression.  This is used to determine if a proximity \n   * position predicate can indicate that no more searching has to occur.\n   * \n   *\n   * @return true if the expression represents a stable number.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void callVisitors(ExpressionOwner owner, XPathVisitor visitor)",
    "returnType" : "void",
    "comment" : "\n   * @see org.apache.xpath.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getType()", "public String getTypeString()", "public double num()", "public double num(XPathContext xctxt) throws javax.xml.transform.TransformerException", "public boolean bool()", "public String str()", "private static String zeros(int n)", "public Object object()", "public boolean equals(XObject obj2)", "public boolean isStableNumber()", "public void callVisitors(ExpressionOwner owner, XPathVisitor visitor)" ],
  "variableNames" : [ "serialVersionUID", "m_val" ]
}