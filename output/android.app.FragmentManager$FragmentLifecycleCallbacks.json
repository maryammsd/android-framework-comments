{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/FragmentManager.java",
  "packageName" : "android.app",
  "className" : "FragmentLifecycleCallbacks",
  "comment" : "\n     * Callback interface for listening to fragment state changes that happen\n     * within a given FragmentManager.\n     *\n     * @deprecated Use the <a href=\"{@docRoot}tools/extras/support-library.html\">\n     *      Support Library</a>\n     *      {@link androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks}\n     ",
  "links" : [ "androidx.fragment.app.FragmentManager.FragmentLifecycleCallbacks" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onFragmentPreAttached(FragmentManager fm, Fragment f, Context context)",
    "returnType" : "void",
    "comment" : "\n         * Called right before the fragment's {@link Fragment#onAttach(Context)} method is called.\n         * This is a good time to inject any required dependencies for the fragment before any of\n         * the fragment's lifecycle methods are invoked.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         * @param context Context that the Fragment is being attached to\n         ",
    "links" : [ "android.app.Fragment#onAttach(Context)" ]
  }, {
    "name" : "public void onFragmentAttached(FragmentManager fm, Fragment f, Context context)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has been attached to its host. Its host will have had\n         * <code>onAttachFragment</code> called before this call happens.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         * @param context Context that the Fragment was attached to\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onFragmentPreCreated(FragmentManager fm, Fragment f, Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : "\n         * Called right before the fragment's {@link Fragment#onCreate(Bundle)} method is called.\n         * This is a good time to inject any required dependencies or perform other configuration\n         * for the fragment.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         * @param savedInstanceState Saved instance bundle from a previous instance\n         ",
    "links" : [ "android.app.Fragment#onCreate(Bundle)" ]
  }, {
    "name" : "public void onFragmentCreated(FragmentManager fm, Fragment f, Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onCreate(Bundle)}. This will only happen once for any given\n         * fragment instance, though the fragment may be attached and detached multiple times.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         * @param savedInstanceState Saved instance bundle from a previous instance\n         ",
    "links" : [ "android.app.Fragment#onCreate(Bundle)" ]
  }, {
    "name" : "public void onFragmentActivityCreated(FragmentManager fm, Fragment f, Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onActivityCreated(Bundle)}. This will only happen once for any given\n         * fragment instance, though the fragment may be attached and detached multiple times.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         * @param savedInstanceState Saved instance bundle from a previous instance\n         ",
    "links" : [ "android.app.Fragment#onActivityCreated(Bundle)" ]
  }, {
    "name" : "public void onFragmentViewCreated(FragmentManager fm, Fragment f, View v, Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned a non-null view from the FragmentManager's\n         * request to {@link Fragment#onCreateView(LayoutInflater, ViewGroup, Bundle)}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment that created and owns the view\n         * @param v View returned by the fragment\n         * @param savedInstanceState Saved instance bundle from a previous instance\n         ",
    "links" : [ "android.app.Fragment#onCreateView(LayoutInflater" ]
  }, {
    "name" : "public void onFragmentStarted(FragmentManager fm, Fragment f)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onStart()}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         ",
    "links" : [ "android.app.Fragment#onStart()" ]
  }, {
    "name" : "public void onFragmentResumed(FragmentManager fm, Fragment f)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onResume()}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         ",
    "links" : [ "android.app.Fragment#onResume()" ]
  }, {
    "name" : "public void onFragmentPaused(FragmentManager fm, Fragment f)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onPause()}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         ",
    "links" : [ "android.app.Fragment#onPause()" ]
  }, {
    "name" : "public void onFragmentStopped(FragmentManager fm, Fragment f)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onStop()}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         ",
    "links" : [ "android.app.Fragment#onStop()" ]
  }, {
    "name" : "public void onFragmentSaveInstanceState(FragmentManager fm, Fragment f, Bundle outState)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onSaveInstanceState(Bundle)}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         * @param outState Saved state bundle for the fragment\n         ",
    "links" : [ "android.app.Fragment#onSaveInstanceState(Bundle)" ]
  }, {
    "name" : "public void onFragmentViewDestroyed(FragmentManager fm, Fragment f)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onDestroyView()}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         ",
    "links" : [ "android.app.Fragment#onDestroyView()" ]
  }, {
    "name" : "public void onFragmentDestroyed(FragmentManager fm, Fragment f)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onDestroy()}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         ",
    "links" : [ "android.app.Fragment#onDestroy()" ]
  }, {
    "name" : "public void onFragmentDetached(FragmentManager fm, Fragment f)",
    "returnType" : "void",
    "comment" : "\n         * Called after the fragment has returned from the FragmentManager's call to\n         * {@link Fragment#onDetach()}.\n         *\n         * @param fm Host FragmentManager\n         * @param f Fragment changing state\n         ",
    "links" : [ "android.app.Fragment#onDetach()" ]
  } ],
  "methodNames" : [ "public void onFragmentPreAttached(FragmentManager fm, Fragment f, Context context)", "public void onFragmentAttached(FragmentManager fm, Fragment f, Context context)", "public void onFragmentPreCreated(FragmentManager fm, Fragment f, Bundle savedInstanceState)", "public void onFragmentCreated(FragmentManager fm, Fragment f, Bundle savedInstanceState)", "public void onFragmentActivityCreated(FragmentManager fm, Fragment f, Bundle savedInstanceState)", "public void onFragmentViewCreated(FragmentManager fm, Fragment f, View v, Bundle savedInstanceState)", "public void onFragmentStarted(FragmentManager fm, Fragment f)", "public void onFragmentResumed(FragmentManager fm, Fragment f)", "public void onFragmentPaused(FragmentManager fm, Fragment f)", "public void onFragmentStopped(FragmentManager fm, Fragment f)", "public void onFragmentSaveInstanceState(FragmentManager fm, Fragment f, Bundle outState)", "public void onFragmentViewDestroyed(FragmentManager fm, Fragment f)", "public void onFragmentDestroyed(FragmentManager fm, Fragment f)", "public void onFragmentDetached(FragmentManager fm, Fragment f)" ],
  "variableNames" : [ ]
}