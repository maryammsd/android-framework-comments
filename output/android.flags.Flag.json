{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/flags/Flag.java",
  "packageName" : "android.flags",
  "className" : "Flag",
  "comment" : "\n * Base class for constants read via {@link android.flags.FeatureFlags}.\n *\n * @param <T> The type of value that this flag stores. E.g. Boolean or String.\n *\n * @hide\n ",
  "links" : [ "android.flags.FeatureFlags" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " String getNamespace()",
    "returnType" : "String",
    "comment" : " The namespace for a flag. Should combine uniquely with its name. ",
    "links" : [ ]
  }, {
    "name" : " String getName()",
    "returnType" : "String",
    "comment" : " The name of the flag. Should combine uniquely with its namespace. ",
    "links" : [ ]
  }, {
    "name" : " T getDefault()",
    "returnType" : "T",
    "comment" : " The value of this flag if no override has been set. Null values are not supported. ",
    "links" : [ ]
  }, {
    "name" : " boolean isDynamic()",
    "returnType" : "boolean",
    "comment" : " Returns true if the value of this flag can change at runtime. ",
    "links" : [ ]
  }, {
    "name" : " Flag<T> defineMetaData(String label, String description, String categoryName)",
    "returnType" : "Flag<T>",
    "comment" : "\n     * Add human-readable details to the flag. Flag client's are not required to set this.\n     *\n     * See {@link #getLabel()}, {@link #getDescription()}, and {@link #getCategoryName()}.\n     *\n     * @return Returns `this`, to make a fluent api.\n     ",
    "links" : [ "#getDescription()", "#getLabel()", "#getCategoryName()" ]
  }, {
    "name" : " String getLabel()",
    "returnType" : "String",
    "comment" : "\n     * A human-readable name for the flag. Defaults to {@link #getName()}\n     *\n     * See {@link #defineMetaData(String, String, String)}\n     ",
    "links" : [ "#defineMetaData(String", "#getName()" ]
  }, {
    "name" : " String getDescription()",
    "returnType" : "String",
    "comment" : "\n     * A human-readable description for the flag. Defaults to null if unset.\n     *\n     * See {@link #defineMetaData(String, String, String)}\n     ",
    "links" : [ "#defineMetaData(String" ]
  }, {
    "name" : " String getCategoryName()",
    "returnType" : "String",
    "comment" : "\n     * A human-readable category name for the flag. Defaults to null if unset.\n     *\n     * See {@link #defineMetaData(String, String, String)}\n     ",
    "links" : [ "#defineMetaData(String" ]
  } ],
  "methodNames" : [ " String getNamespace()", " String getName()", " T getDefault()", " boolean isDynamic()", " Flag<T> defineMetaData(String label, String description, String categoryName)", " String getLabel()", " String getDescription()", " String getCategoryName()" ],
  "variableNames" : [ ]
}