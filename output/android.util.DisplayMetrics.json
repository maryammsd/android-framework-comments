{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/util/DisplayMetrics.java",
  "packageName" : "android.util",
  "className" : "DisplayMetrics",
  "comment" : "\n * A structure describing general information about a display, such as its\n * size, density, and font scaling.\n * <p>To access the DisplayMetrics members, retrieve display metrics like this:</p>\n * <pre>context.getResources().getDisplayMetrics();</pre>\n *\n * <p>\n * For UI layout, obtain {@link android.view.WindowMetrics} from\n * {@link WindowManager#getCurrentWindowMetrics()}. {@code DisplayMetrics} should only be used for\n * obtaining display related properties, such as {@link #xdpi} and {@link #ydpi}\n * </p><p>\n * See {@link #density} for more information about the differences between {@link #xdpi},\n * {@link #ydpi} and {@link #density}.\n * </p>\n *\n ",
  "links" : [ "#density", "android.view.WindowMetrics", "#ydpi", "android.view.WindowManager#getCurrentWindowMetrics()", "#xdpi" ],
  "variables" : [ {
    "name" : "DENSITY_LOW",
    "type" : "int",
    "comment" : "\n     * Standard quantized DPI for low-density screens.\n     ",
    "links" : [ ]
  }, {
    "name" : "DENSITY_140",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit between {@link #DENSITY_LOW} (120dpi) and\n     * {@link #DENSITY_MEDIUM} (160dpi). This is not a density that applications should target,\n     * instead relying on the system to scale their {@link #DENSITY_MEDIUM} assets for them.\n     ",
    "links" : [ "#DENSITY_MEDIUM", "#DENSITY_LOW" ]
  }, {
    "name" : "DENSITY_MEDIUM",
    "type" : "int",
    "comment" : "\n     * Standard quantized DPI for medium-density screens.\n     ",
    "links" : [ ]
  }, {
    "name" : "DENSITY_180",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit between {@link #DENSITY_MEDIUM} (160dpi) and\n     * {@link #DENSITY_HIGH} (240dpi). This is not a density that applications should target,\n     * instead relying on the system to scale their {@link #DENSITY_HIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_MEDIUM", "#DENSITY_HIGH" ]
  }, {
    "name" : "DENSITY_200",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit between {@link #DENSITY_MEDIUM} (160dpi) and\n     * {@link #DENSITY_HIGH} (240dpi). This is not a density that applications should target,\n     * instead relying on the system to scale their {@link #DENSITY_HIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_MEDIUM", "#DENSITY_HIGH" ]
  }, {
    "name" : "DENSITY_TV",
    "type" : "int",
    "comment" : "\n     * This is a secondary density, added for some common screen configurations.\n     * It is recommended that applications not generally target this as a first\n     * class density -- that is, don't supply specific graphics for this\n     * density, instead allow the platform to scale from other densities\n     * (typically {@link #DENSITY_HIGH}) as\n     * appropriate.  In most cases (such as using bitmaps in\n     * {@link android.graphics.drawable.Drawable}) the platform\n     * can perform this scaling at load time, so the only cost is some slight\n     * startup runtime overhead.\n     *\n     * <p>This density was original introduced to correspond with a\n     * 720p TV screen: the density for 1080p televisions is\n     * {@link #DENSITY_XHIGH}, and the value here provides the same UI\n     * size for a TV running at 720p.  It has also found use in 7\" tablets,\n     * when these devices have 1280x720 displays.\n     ",
    "links" : [ "#DENSITY_HIGH", "#DENSITY_XHIGH", "android.graphics.drawable.Drawable" ]
  }, {
    "name" : "DENSITY_220",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit between {@link #DENSITY_MEDIUM} (160dpi) and\n     * {@link #DENSITY_HIGH} (240dpi). This is not a density that applications should target,\n     * instead relying on the system to scale their {@link #DENSITY_HIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_MEDIUM", "#DENSITY_HIGH" ]
  }, {
    "name" : "DENSITY_HIGH",
    "type" : "int",
    "comment" : "\n     * Standard quantized DPI for high-density screens.\n     ",
    "links" : [ ]
  }, {
    "name" : "DENSITY_260",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit between {@link #DENSITY_HIGH} (240dpi) and\n     * {@link #DENSITY_XHIGH} (320dpi). This is not a density that applications should target,\n     * instead relying on the system to scale their {@link #DENSITY_XHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_HIGH", "#DENSITY_XHIGH" ]
  }, {
    "name" : "DENSITY_280",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit between {@link #DENSITY_HIGH} (240dpi) and\n     * {@link #DENSITY_XHIGH} (320dpi). This is not a density that applications should target,\n     * instead relying on the system to scale their {@link #DENSITY_XHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_HIGH", "#DENSITY_XHIGH" ]
  }, {
    "name" : "DENSITY_300",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit between {@link #DENSITY_HIGH} (240dpi) and\n     * {@link #DENSITY_XHIGH} (320dpi). This is not a density that applications should target,\n     * instead relying on the system to scale their {@link #DENSITY_XHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_HIGH", "#DENSITY_XHIGH" ]
  }, {
    "name" : "DENSITY_XHIGH",
    "type" : "int",
    "comment" : "\n     * Standard quantized DPI for extra-high-density screens.\n     ",
    "links" : [ ]
  }, {
    "name" : "DENSITY_340",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XHIGH} (320 dpi) and {@link #DENSITY_XXHIGH} (480 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_360",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XHIGH} (320 dpi) and {@link #DENSITY_XXHIGH} (480 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_390",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XHIGH} (320 dpi) and {@link #DENSITY_XXHIGH} (480 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_400",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XHIGH} (320 dpi) and {@link #DENSITY_XXHIGH} (480 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_420",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XHIGH} (320 dpi) and {@link #DENSITY_XXHIGH} (480 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_440",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XHIGH} (320 dpi) and {@link #DENSITY_XXHIGH} (480 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_450",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XHIGH} (320 dpi) and {@link #DENSITY_XXHIGH} (480 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_XXHIGH",
    "type" : "int",
    "comment" : "\n     * Standard quantized DPI for extra-extra-high-density screens.\n     ",
    "links" : [ ]
  }, {
    "name" : "DENSITY_520",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XXHIGH} (480 dpi) and {@link #DENSITY_XXXHIGH} (640 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XXXHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_560",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XXHIGH} (480 dpi) and {@link #DENSITY_XXXHIGH} (640 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XXXHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_600",
    "type" : "int",
    "comment" : "\n     * Intermediate density for screens that sit somewhere between\n     * {@link #DENSITY_XXHIGH} (480 dpi) and {@link #DENSITY_XXXHIGH} (640 dpi).\n     * This is not a density that applications should target, instead relying\n     * on the system to scale their {@link #DENSITY_XXXHIGH} assets for them.\n     ",
    "links" : [ "#DENSITY_XXXHIGH", "#DENSITY_XXHIGH" ]
  }, {
    "name" : "DENSITY_XXXHIGH",
    "type" : "int",
    "comment" : "\n     * Standard quantized DPI for extra-extra-extra-high-density screens.  Applications\n     * should not generally worry about this density; relying on XHIGH graphics\n     * being scaled up to it should be sufficient for almost all cases.  A typical\n     * use of this density would be 4K television screens -- 3840x2160, which\n     * is 2x a traditional HD 1920x1080 screen which runs at DENSITY_XHIGH.\n     ",
    "links" : [ ]
  }, {
    "name" : "DENSITY_DEFAULT",
    "type" : "int",
    "comment" : "\n     * The reference density used throughout the system.\n     ",
    "links" : [ ]
  }, {
    "name" : "DENSITY_DEFAULT_SCALE",
    "type" : "float",
    "comment" : "\n     * Scaling factor to convert a density in DPI units to the density scale.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DENSITY_DEVICE",
    "type" : "int",
    "comment" : "\n     * The device's current density.\n     * <p>\n     * This value reflects any changes made to the device density. To obtain\n     * the device's stable density, use {@link #DENSITY_DEVICE_STABLE}.\n     *\n     * @hide This value should not be used.\n     * @deprecated Use {@link #DENSITY_DEVICE_STABLE} to obtain the stable\n     *             device density or {@link #densityDpi} to obtain the current\n     *             density for a specific display.\n     ",
    "links" : [ "#densityDpi", "#DENSITY_DEVICE_STABLE" ]
  }, {
    "name" : "DENSITY_DEVICE_STABLE",
    "type" : "int",
    "comment" : "\n     * The device's stable density.\n     * <p>\n     * This value is constant at run time and may not reflect the current\n     * display density. To obtain the current density for a specific display,\n     * use {@link #densityDpi}.\n     ",
    "links" : [ "#densityDpi" ]
  }, {
    "name" : "widthPixels",
    "type" : "int",
    "comment" : "\n     * The absolute width of the available display size in pixels.\n     ",
    "links" : [ ]
  }, {
    "name" : "heightPixels",
    "type" : "int",
    "comment" : "\n     * The absolute height of the available display size in pixels.\n     ",
    "links" : [ ]
  }, {
    "name" : "density",
    "type" : "float",
    "comment" : "\n     * The logical density of the display.  This is a scaling factor for the\n     * Density Independent Pixel unit, where one DIP is one pixel on an\n     * approximately 160 dpi screen (for example a 240x320, 1.5\"x2\" screen), \n     * providing the baseline of the system's display. Thus on a 160dpi screen \n     * this density value will be 1; on a 120 dpi screen it would be .75; etc.\n     *  \n     * <p>This value does not exactly follow the real screen size (as given by \n     * {@link #xdpi} and {@link #ydpi}), but rather is used to scale the size of\n     * the overall UI in steps based on gross changes in the display dpi.  For \n     * example, a 240x320 screen will have a density of 1 even if its width is \n     * 1.8\", 1.3\", etc. However, if the screen resolution is increased to \n     * 320x480 but the screen size remained 1.5\"x2\" then the density would be \n     * increased (probably to 1.5).\n     *\n     * @see #DENSITY_DEFAULT\n     ",
    "links" : [ "#ydpi", "#xdpi" ]
  }, {
    "name" : "densityDpi",
    "type" : "int",
    "comment" : "\n     * The screen density expressed as dots-per-inch. May be any one of the\n     * {@code DENSITY_} constants defined above.\n     *\n     * New constants are frequently added, and constants added on new Android\n     * versions may be backported to previous Android versions, so applications\n     * should not strongly rely on density matching one of the enum constants.\n     ",
    "links" : [ ]
  }, {
    "name" : "scaledDensity",
    "type" : "float",
    "comment" : "\n     * A scaling factor for fonts displayed on the display.  This is the same\n     * as {@link #density}, except that it may be adjusted in smaller\n     * increments at runtime based on a user preference for the font size.\n     *\n     * @deprecated this scalar factor is no longer accurate due to adaptive non-linear font scaling.\n     *  Please use {@link TypedValue#applyDimension(int, float, DisplayMetrics)} or\n     *  {@link TypedValue#deriveDimension(int, float, DisplayMetrics)} to convert between SP font\n     *  sizes and pixels.\n     ",
    "links" : [ "#density", "android.util.TypedValue#applyDimension(int", "android.util.TypedValue#deriveDimension(int" ]
  }, {
    "name" : "fontScaleConverter",
    "type" : "FontScaleConverter",
    "comment" : "\n     * If non-null, this will be used to calculate font sizes instead of {@link #scaledDensity}.\n     *\n     * @hide\n     ",
    "links" : [ "#scaledDensity" ]
  }, {
    "name" : "xdpi",
    "type" : "float",
    "comment" : "\n     * The exact physical pixels per inch of the screen in the X dimension.\n     ",
    "links" : [ ]
  }, {
    "name" : "ydpi",
    "type" : "float",
    "comment" : "\n     * The exact physical pixels per inch of the screen in the Y dimension.\n     ",
    "links" : [ ]
  }, {
    "name" : "noncompatWidthPixels",
    "type" : "int",
    "comment" : "\n     * The reported display width prior to any compatibility mode scaling\n     * being applied.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "noncompatHeightPixels",
    "type" : "int",
    "comment" : "\n     * The reported display height prior to any compatibility mode scaling\n     * being applied.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "noncompatDensity",
    "type" : "float",
    "comment" : "\n     * The reported display density prior to any compatibility mode scaling\n     * being applied.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "noncompatDensityDpi",
    "type" : "int",
    "comment" : "\n     * The reported display density prior to any compatibility mode scaling\n     * being applied.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "noncompatScaledDensity",
    "type" : "float",
    "comment" : "\n     * The reported scaled density prior to any compatibility mode scaling\n     * being applied.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "noncompatXdpi",
    "type" : "float",
    "comment" : "\n     * The reported display xdpi prior to any compatibility mode scaling\n     * being applied.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "noncompatYdpi",
    "type" : "float",
    "comment" : "\n     * The reported display ydpi prior to any compatibility mode scaling\n     * being applied.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setTo(DisplayMetrics o)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setToDefaults()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(DisplayMetrics other)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if these display metrics equal the other display metrics.\n     *\n     * @param other The display metrics with which to compare.\n     * @return True if the display metrics are equal.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equalsPhysical(DisplayMetrics other)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the physical aspects of the two display metrics\n     * are equal.  This ignores the scaled density, which is a logical\n     * attribute based on the current desired font size.\n     *\n     * @param other The display metrics with which to compare.\n     * @return True if the display metrics are equal.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int getDeviceDensity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setTo(DisplayMetrics o)", "public void setToDefaults()", "public boolean equals(@Nullable Object o)", "public boolean equals(DisplayMetrics other)", "public boolean equalsPhysical(DisplayMetrics other)", "public int hashCode()", "public String toString()", "private static int getDeviceDensity()" ],
  "variableNames" : [ "DENSITY_LOW", "DENSITY_140", "DENSITY_MEDIUM", "DENSITY_180", "DENSITY_200", "DENSITY_TV", "DENSITY_220", "DENSITY_HIGH", "DENSITY_260", "DENSITY_280", "DENSITY_300", "DENSITY_XHIGH", "DENSITY_340", "DENSITY_360", "DENSITY_390", "DENSITY_400", "DENSITY_420", "DENSITY_440", "DENSITY_450", "DENSITY_XXHIGH", "DENSITY_520", "DENSITY_560", "DENSITY_600", "DENSITY_XXXHIGH", "DENSITY_DEFAULT", "DENSITY_DEFAULT_SCALE", "DENSITY_DEVICE", "DENSITY_DEVICE_STABLE", "widthPixels", "heightPixels", "density", "densityDpi", "scaledDensity", "fontScaleConverter", "xdpi", "ydpi", "noncompatWidthPixels", "noncompatHeightPixels", "noncompatDensity", "noncompatDensityDpi", "noncompatScaledDensity", "noncompatXdpi", "noncompatYdpi" ]
}