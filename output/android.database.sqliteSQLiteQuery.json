{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/database/sqlite/SQLiteQuery.java",
  "packageName" : "android.database.sqlite",
  "className" : "SQLiteQuery",
  "comment" : "\n * Represents a query that reads the resulting rows into a {@link SQLiteQuery}.\n * This class is used by {@link SQLiteCursor} and isn't useful itself.\n * <p>\n * This class is not thread-safe.\n * </p>\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCancellationSignal",
    "type" : "CancellationSignal",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " int fillWindow(CursorWindow window, int startPos, int requiredPos, boolean countAllRows)",
    "returnType" : "int",
    "comment" : "\n     * Reads rows into a buffer.\n     *\n     * @param window The window to fill into\n     * @param startPos The start position for filling the window.\n     * @param requiredPos The position of a row that MUST be in the window.\n     * If it won't fit, then the query should discard part of what it filled.\n     * @param countAllRows True to count all rows that the query would\n     * return regardless of whether they fit in the window.\n     * @return Number of rows that were enumerated.  Might not be all rows\n     * unless countAllRows is true.\n     *\n     * @throws SQLiteException if an error occurs.\n     * @throws OperationCanceledException if the operation was canceled.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mCancellationSignal" ],
  "methodNames" : [ " int fillWindow(CursorWindow window, int startPos, int requiredPos, boolean countAllRows)", "public String toString()" ]
}