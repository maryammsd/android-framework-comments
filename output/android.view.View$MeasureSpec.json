{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/View.java",
  "packageName" : "android.view",
  "className" : "MeasureSpec",
  "comment" : "\n     * A MeasureSpec encapsulates the layout requirements passed from parent to child.\n     * Each MeasureSpec represents a requirement for either the width or the height.\n     * A MeasureSpec is comprised of a size and a mode. There are three possible\n     * modes:\n     * <dl>\n     * <dt>UNSPECIFIED</dt>\n     * <dd>\n     * The parent has not imposed any constraint on the child. It can be whatever size\n     * it wants.\n     * </dd>\n     *\n     * <dt>EXACTLY</dt>\n     * <dd>\n     * The parent has determined an exact size for the child. The child is going to be\n     * given those bounds regardless of how big it wants to be.\n     * </dd>\n     *\n     * <dt>AT_MOST</dt>\n     * <dd>\n     * The child can be as large as it wants up to the specified size.\n     * </dd>\n     * </dl>\n     *\n     * MeasureSpecs are implemented as ints to reduce object allocation. This class\n     * is provided to pack and unpack the &lt;size, mode&gt; tuple into the int.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MODE_SHIFT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MODE_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UNSPECIFIED",
    "type" : "int",
    "comment" : "\n         * Measure specification mode: The parent has not imposed any constraint\n         * on the child. It can be whatever size it wants.\n         ",
    "links" : [ ]
  }, {
    "name" : "EXACTLY",
    "type" : "int",
    "comment" : "\n         * Measure specification mode: The parent has determined an exact size\n         * for the child. The child is going to be given those bounds regardless\n         * of how big it wants to be.\n         ",
    "links" : [ ]
  }, {
    "name" : "AT_MOST",
    "type" : "int",
    "comment" : "\n         * Measure specification mode: The child can be as large as it wants up\n         * to the specified size.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int makeMeasureSpec(@IntRange(from = 0, to = (1 << MeasureSpec.MODE_SHIFT) - 1) int size, @MeasureSpecMode int mode)",
    "returnType" : "int",
    "comment" : "\n         * Creates a measure specification based on the supplied size and mode.\n         *\n         * The mode must always be one of the following:\n         * <ul>\n         *  <li>{@link android.view.View.MeasureSpec#UNSPECIFIED}</li>\n         *  <li>{@link android.view.View.MeasureSpec#EXACTLY}</li>\n         *  <li>{@link android.view.View.MeasureSpec#AT_MOST}</li>\n         * </ul>\n         *\n         * <p><strong>Note:</strong> On API level 17 and lower, makeMeasureSpec's\n         * implementation was such that the order of arguments did not matter\n         * and overflow in either value could impact the resulting MeasureSpec.\n         * {@link android.widget.RelativeLayout} was affected by this bug.\n         * Apps targeting API levels greater than 17 will get the fixed, more strict\n         * behavior.</p>\n         *\n         * @param size the size of the measure specification\n         * @param mode the mode of the measure specification\n         * @return the measure specification based on size and mode\n         ",
    "links" : [ "android.view.View.MeasureSpec#EXACTLY", "android.view.View.MeasureSpec#AT_MOST", "android.widget.RelativeLayout", "android.view.View.MeasureSpec#UNSPECIFIED" ]
  }, {
    "name" : "public static int makeSafeMeasureSpec(int size, int mode)",
    "returnType" : "int",
    "comment" : "\n         * Like {@link #makeMeasureSpec(int, int)}, but any spec with a mode of UNSPECIFIED\n         * will automatically get a size of 0. Older apps expect this.\n         *\n         * @hide internal use only for compatibility with system widgets and older apps\n         ",
    "links" : [ "#makeMeasureSpec(int" ]
  }, {
    "name" : "public static int getMode(int measureSpec)",
    "returnType" : "int",
    "comment" : "\n         * Extracts the mode from the supplied measure specification.\n         *\n         * @param measureSpec the measure specification to extract the mode from\n         * @return {@link android.view.View.MeasureSpec#UNSPECIFIED},\n         *         {@link android.view.View.MeasureSpec#AT_MOST} or\n         *         {@link android.view.View.MeasureSpec#EXACTLY}\n         ",
    "links" : [ "android.view.View.MeasureSpec#EXACTLY", "android.view.View.MeasureSpec#AT_MOST", "android.view.View.MeasureSpec#UNSPECIFIED" ]
  }, {
    "name" : "public static int getSize(int measureSpec)",
    "returnType" : "int",
    "comment" : "\n         * Extracts the size from the supplied measure specification.\n         *\n         * @param measureSpec the measure specification to extract the size from\n         * @return the size in pixels defined in the supplied measure specification\n         ",
    "links" : [ ]
  }, {
    "name" : " static int adjust(int measureSpec, int delta)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String toString(int measureSpec)",
    "returnType" : "String",
    "comment" : "\n         * Returns a String representation of the specified measure\n         * specification.\n         *\n         * @param measureSpec the measure specification to convert to a String\n         * @return a String with the following format: \"MeasureSpec: MODE SIZE\"\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int makeMeasureSpec(@IntRange(from = 0, to = (1 << MeasureSpec.MODE_SHIFT) - 1) int size, @MeasureSpecMode int mode)", "public static int makeSafeMeasureSpec(int size, int mode)", "public static int getMode(int measureSpec)", "public static int getSize(int measureSpec)", " static int adjust(int measureSpec, int delta)", "public static String toString(int measureSpec)" ],
  "variableNames" : [ "MODE_SHIFT", "MODE_MASK", "UNSPECIFIED", "EXACTLY", "AT_MOST" ]
}