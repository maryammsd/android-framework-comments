{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/DeviceConfig.java",
  "packageName" : "android.provider",
  "className" : "Properties",
  "comment" : "\n     * A mapping of properties to values, as well as a single namespace which they all belong to.\n     *\n     * @hide\n     ",
  "variables" : [ {
    "name" : "mNamespace",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMap",
    "type" : "HashMap<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeyset",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getNamespace()",
    "returnType" : "String",
    "comment" : "\n         * @return the namespace all properties within this instance belong to.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Set<String> getKeyset()",
    "returnType" : "Set<String>",
    "comment" : "\n         * @return the non-null set of property names.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getString(@NonNull String name, @Nullable String defaultValue)",
    "returnType" : "String",
    "comment" : "\n         * Look up the String value of a property.\n         *\n         * @param name         The name of the property to look up.\n         * @param defaultValue The value to return if the property has not been defined.\n         * @return the corresponding value, or defaultValue if none exists.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean getBoolean(@NonNull String name, boolean defaultValue)",
    "returnType" : "boolean",
    "comment" : "\n         * Look up the boolean value of a property.\n         *\n         * @param name         The name of the property to look up.\n         * @param defaultValue The value to return if the property has not been defined.\n         * @return the corresponding value, or defaultValue if none exists.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getInt(@NonNull String name, int defaultValue)",
    "returnType" : "int",
    "comment" : "\n         * Look up the int value of a property.\n         *\n         * @param name         The name of the property to look up.\n         * @param defaultValue The value to return if the property has not been defined or fails to\n         *                     parse into an int.\n         * @return the corresponding value, or defaultValue if no valid int is available.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getLong(@NonNull String name, long defaultValue)",
    "returnType" : "long",
    "comment" : "\n         * Look up the long value of a property.\n         *\n         * @param name         The name of the property to look up.\n         * @param defaultValue The value to return if the property has not been defined. or fails to\n         *                     parse into a long.\n         * @return the corresponding value, or defaultValue if no valid long is available.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getFloat(@NonNull String name, float defaultValue)",
    "returnType" : "float",
    "comment" : "\n         * Look up the int value of a property.\n         *\n         * @param name         The name of the property to look up.\n         * @param defaultValue The value to return if the property has not been defined. or fails to\n         *                     parse into a float.\n         * @return the corresponding value, or defaultValue if no valid float is available.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mNamespace", "mMap", "mKeyset" ],
  "methodNames" : [ "public String getNamespace()", "public Set<String> getKeyset()", "public String getString(@NonNull String name, @Nullable String defaultValue)", "public boolean getBoolean(@NonNull String name, boolean defaultValue)", "public int getInt(@NonNull String name, int defaultValue)", "public long getLong(@NonNull String name, long defaultValue)", "public float getFloat(@NonNull String name, float defaultValue)" ]
}