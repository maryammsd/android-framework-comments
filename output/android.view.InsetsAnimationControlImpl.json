{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/InsetsAnimationControlImpl.java",
  "packageName" : "android.view",
  "className" : "InsetsAnimationControlImpl",
  "comment" : "\n * Implements {@link WindowInsetsAnimationController}\n * @hide\n ",
  "links" : [ "android.view.WindowInsetsAnimationController" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmpFrame",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "WindowInsetsAnimationControlListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControls",
    "type" : "SparseArray<InsetsSourceControl>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSideControlsMap",
    "type" : "SparseSetArray<InsetsSourceControl>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHiddenInsets",
    "type" : "Insets",
    "comment" : " @see WindowInsetsAnimationController#getHiddenStateInsets ",
    "links" : [ ]
  }, {
    "name" : "mShownInsets",
    "type" : "Insets",
    "comment" : " @see WindowInsetsAnimationController#getShownStateInsets ",
    "links" : [ ]
  }, {
    "name" : "mTmpMatrix",
    "type" : "Matrix",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialInsetsState",
    "type" : "InsetsState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimationType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLayoutInsetsDuringAnimation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTypes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControllingTypes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mController",
    "type" : "InsetsAnimationControlCallbacks",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimation",
    "type" : "WindowInsetsAnimation",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasZeroInsetsIme",
    "type" : "boolean",
    "comment" : " @see WindowInsetsAnimationController#hasZeroInsetsIme ",
    "links" : [ ]
  }, {
    "name" : "mTranslator",
    "type" : "CompatibilityInfo.Translator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatsToken",
    "type" : "ImeTracker.Token",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentInsets",
    "type" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingInsets",
    "type" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingFraction",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFinished",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCancelled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShownOnFinish",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentAlpha",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingAlpha",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReadyDispatched",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPerceptible",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private boolean calculatePerceptible(Insets currentInsets, float currentAlpha)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasZeroInsetsIme()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setReadyDispatched(boolean dispatched)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Insets getHiddenStateInsets()",
    "returnType" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Insets getShownStateInsets()",
    "returnType" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Insets getCurrentInsets()",
    "returnType" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getCurrentAlpha()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getTypes()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getControllingTypes()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyControlRevoked(@InsetsType int types)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateSurfacePosition(SparseArray<InsetsSourceControl> controls)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getAnimationType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ImeTracker.Token getStatsToken()",
    "returnType" : "ImeTracker.Token",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setInsetsAndAlpha(Insets insets, float alpha, float fraction)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setInsetsAndAlpha(Insets insets, float alpha, float fraction, boolean allowWhenFinished)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean applyChangeInsets(@Nullable InsetsState outState)",
    "returnType" : "boolean",
    "comment" : "\n     * @return Whether the finish callback of this animation should be invoked.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void releaseLeashes()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finish(boolean shown)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getCurrentFraction()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancel()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isFinished()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isCancelled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WindowInsetsAnimation getAnimation()",
    "returnType" : "WindowInsetsAnimation",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateLayoutInsetsDuringAnimation(@LayoutInsetsDuringAnimation int layoutInsetsDuringAnimation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dumpDebug(ProtoOutputStream proto, long fieldId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " SparseArray<InsetsSourceControl> getControls()",
    "returnType" : "SparseArray<InsetsSourceControl>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Insets getInsetsFromState(InsetsState state, Rect frame, @Nullable @InternalInsetsSide SparseIntArray idSideMap)",
    "returnType" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Insets calculateInsets(InsetsState state, Rect frame, SparseArray<InsetsSourceControl> controls, boolean shown, @Nullable @InternalInsetsSide SparseIntArray idSideMap)",
    "returnType" : "Insets",
    "comment" : " Computes the insets relative to the given frame. ",
    "links" : [ ]
  }, {
    "name" : "private Insets calculateInsets(InsetsState state, SparseArray<InsetsSourceControl> controls, boolean shownOrCurrent)",
    "returnType" : "Insets",
    "comment" : " Computes the insets from the insets hints of controls. ",
    "links" : [ ]
  }, {
    "name" : "private Insets sanitize(Insets insets)",
    "returnType" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static float sanitize(float alpha)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateLeashesForSide(@InternalInsetsSide int side, int offset, ArrayList<SurfaceParams> surfaceParams, @Nullable InsetsState outState, float alpha)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addTranslationToMatrix(@InternalInsetsSide int side, int offset, Matrix m, Rect frame)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void buildSideControlsMap(SparseIntArray idSideMap, SparseSetArray<InsetsSourceControl> sideControlsMap, SparseArray<InsetsSourceControl> controls)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void buildSideControlsMap(SparseSetArray<InsetsSourceControl> sideControlsMap, SparseArray<InsetsSourceControl> controls)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private boolean calculatePerceptible(Insets currentInsets, float currentAlpha)", "public boolean hasZeroInsetsIme()", "public void setReadyDispatched(boolean dispatched)", "public Insets getHiddenStateInsets()", "public Insets getShownStateInsets()", "public Insets getCurrentInsets()", "public float getCurrentAlpha()", "public int getTypes()", "public int getControllingTypes()", "public void notifyControlRevoked(@InsetsType int types)", "public void updateSurfacePosition(SparseArray<InsetsSourceControl> controls)", "public int getAnimationType()", "public ImeTracker.Token getStatsToken()", "public void setInsetsAndAlpha(Insets insets, float alpha, float fraction)", "private void setInsetsAndAlpha(Insets insets, float alpha, float fraction, boolean allowWhenFinished)", "public boolean applyChangeInsets(@Nullable InsetsState outState)", "private void releaseLeashes()", "public void finish(boolean shown)", "public float getCurrentFraction()", "public void cancel()", "public boolean isFinished()", "public boolean isCancelled()", "public WindowInsetsAnimation getAnimation()", "public void updateLayoutInsetsDuringAnimation(@LayoutInsetsDuringAnimation int layoutInsetsDuringAnimation)", "public void dumpDebug(ProtoOutputStream proto, long fieldId)", " SparseArray<InsetsSourceControl> getControls()", "private Insets getInsetsFromState(InsetsState state, Rect frame, @Nullable @InternalInsetsSide SparseIntArray idSideMap)", "private Insets calculateInsets(InsetsState state, Rect frame, SparseArray<InsetsSourceControl> controls, boolean shown, @Nullable @InternalInsetsSide SparseIntArray idSideMap)", "private Insets calculateInsets(InsetsState state, SparseArray<InsetsSourceControl> controls, boolean shownOrCurrent)", "private Insets sanitize(Insets insets)", "private static float sanitize(float alpha)", "private void updateLeashesForSide(@InternalInsetsSide int side, int offset, ArrayList<SurfaceParams> surfaceParams, @Nullable InsetsState outState, float alpha)", "private void addTranslationToMatrix(@InternalInsetsSide int side, int offset, Matrix m, Rect frame)", "private static void buildSideControlsMap(SparseIntArray idSideMap, SparseSetArray<InsetsSourceControl> sideControlsMap, SparseArray<InsetsSourceControl> controls)", "private static void buildSideControlsMap(SparseSetArray<InsetsSourceControl> sideControlsMap, SparseArray<InsetsSourceControl> controls)" ],
  "variableNames" : [ "TAG", "mTmpFrame", "mListener", "mControls", "mSideControlsMap", "mHiddenInsets", "mShownInsets", "mTmpMatrix", "mInitialInsetsState", "mAnimationType", "mLayoutInsetsDuringAnimation", "mTypes", "mControllingTypes", "mController", "mAnimation", "mHasZeroInsetsIme", "mTranslator", "mStatsToken", "mCurrentInsets", "mPendingInsets", "mPendingFraction", "mFinished", "mCancelled", "mShownOnFinish", "mCurrentAlpha", "mPendingAlpha", "mReadyDispatched", "mPerceptible" ]
}