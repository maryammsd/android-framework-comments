{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/RttManager.java",
  "packageName" : "android.net.wifi",
  "className" : "RttResult",
  "comment" : " specifies RTT results ",
  "variables" : [ {
    "name" : "bssid",
    "type" : "String",
    "comment" : " mac address of the device being ranged. ",
    "links" : [ ]
  }, {
    "name" : "burstNumber",
    "type" : "int",
    "comment" : " # of burst for this measurement. ",
    "links" : [ ]
  }, {
    "name" : "measurementFrameNumber",
    "type" : "int",
    "comment" : " total number of measurement frames attempted in this measurement. ",
    "links" : [ ]
  }, {
    "name" : "successMeasurementFrameNumber",
    "type" : "int",
    "comment" : " total successful number of measurement frames in this measurement. ",
    "links" : [ ]
  }, {
    "name" : "frameNumberPerBurstPeer",
    "type" : "int",
    "comment" : "\n         * Maximum number of frames per burst supported by peer. Two side RTT only\n         * Valid only if less than request\n         ",
    "links" : [ ]
  }, {
    "name" : "status",
    "type" : "int",
    "comment" : " status of the request ",
    "links" : [ ]
  }, {
    "name" : "requestType",
    "type" : "int",
    "comment" : "\n         * type of the request used\n         * @deprecated Use {@link android.net.wifi.RttManager.RttResult#measurementType}\n         ",
    "links" : [ "android.net.wifi.RttManager.RttResult#measurementType" ]
  }, {
    "name" : "measurementType",
    "type" : "int",
    "comment" : " RTT measurement method type used, should be one of RTT_TYPE_ONE_SIDED or\n         *  RTT_TYPE_TWO_SIDED.\n         ",
    "links" : [ ]
  }, {
    "name" : "retryAfterDuration",
    "type" : "int",
    "comment" : "\n         * only valid when status ==  RTT_STATUS_FAIL_BUSY_TRY_LATER\n         * please retry RTT measurement after this duration since peer indicate busy at ths moment\n         *  Unit S  Range:1-31\n         ",
    "links" : [ ]
  }, {
    "name" : "ts",
    "type" : "long",
    "comment" : " timestamp of completion, in microsecond since boot. ",
    "links" : [ ]
  }, {
    "name" : "rssi",
    "type" : "int",
    "comment" : " average RSSI observed, unit of 0.5 dB. ",
    "links" : [ ]
  }, {
    "name" : "rssi_spread",
    "type" : "int",
    "comment" : "\n         * RSSI spread (i.e. max - min)\n         * @deprecated Use {@link android.net.wifi.RttManager.RttResult#rssiSpread} API.\n         ",
    "links" : [ "android.net.wifi.RttManager.RttResult#rssiSpread" ]
  }, {
    "name" : "rssiSpread",
    "type" : "int",
    "comment" : "RSSI spread (i.e. max - min), unit of 0.5 dB. ",
    "links" : [ ]
  }, {
    "name" : "tx_rate",
    "type" : "int",
    "comment" : "\n         * average transmit rate\n         * @deprecated Use {@link android.net.wifi.RttManager.RttResult#txRate} API.\n         ",
    "links" : [ "android.net.wifi.RttManager.RttResult#txRate" ]
  }, {
    "name" : "txRate",
    "type" : "int",
    "comment" : " average transmit rate. Unit (kbps). ",
    "links" : [ ]
  }, {
    "name" : "rxRate",
    "type" : "int",
    "comment" : " average receiving rate Unit (kbps). ",
    "links" : [ ]
  }, {
    "name" : "rtt_ns",
    "type" : "long",
    "comment" : "\n        * average round trip time in nano second\n        * @deprecated  Use {@link android.net.wifi.RttManager.RttResult#rtt} API.\n        ",
    "links" : [ "android.net.wifi.RttManager.RttResult#rtt" ]
  }, {
    "name" : "rtt",
    "type" : "long",
    "comment" : " average round trip time in picoseconds. ",
    "links" : [ ]
  }, {
    "name" : "rtt_sd_ns",
    "type" : "long",
    "comment" : "\n         * standard deviation observed in round trip time\n         * @deprecated Use {@link android.net.wifi.RttManager.RttResult#rttStandardDeviation} API.\n         ",
    "links" : [ "android.net.wifi.RttManager.RttResult#rttStandardDeviation" ]
  }, {
    "name" : "rttStandardDeviation",
    "type" : "long",
    "comment" : " standard deviation of RTT in picoseconds. ",
    "links" : [ ]
  }, {
    "name" : "rtt_spread_ns",
    "type" : "long",
    "comment" : "\n         * spread (i.e. max - min) round trip time\n         * @deprecated Use {@link android.net.wifi.RttManager.RttResult#rttSpread} API.\n         ",
    "links" : [ "android.net.wifi.RttManager.RttResult#rttSpread" ]
  }, {
    "name" : "rttSpread",
    "type" : "long",
    "comment" : " spread (i.e. max - min) RTT in picoseconds. ",
    "links" : [ ]
  }, {
    "name" : "distance_cm",
    "type" : "int",
    "comment" : "\n         * average distance in centimeter, computed based on rtt_ns\n         * @deprecated use {@link android.net.wifi.RttManager.RttResult#distance} API.\n         ",
    "links" : [ "android.net.wifi.RttManager.RttResult#distance" ]
  }, {
    "name" : "distance",
    "type" : "int",
    "comment" : " average distance in cm, computed based on rtt. ",
    "links" : [ ]
  }, {
    "name" : "distance_sd_cm",
    "type" : "int",
    "comment" : "\n         * standard deviation observed in distance\n         * @deprecated\n         * Use {@link .android.net.wifi.RttManager.RttResult#distanceStandardDeviation} API.\n         ",
    "links" : [ ".android.net.wifi.RttManager.RttResult#distanceStandardDeviation" ]
  }, {
    "name" : "distanceStandardDeviation",
    "type" : "int",
    "comment" : " standard deviation observed in distance in cm. ",
    "links" : [ ]
  }, {
    "name" : "distance_spread_cm",
    "type" : "int",
    "comment" : "\n         * spread (i.e. max - min) distance\n         * @deprecated Use {@link android.net.wifi.RttManager.RttResult#distanceSpread} API.\n         ",
    "links" : [ "android.net.wifi.RttManager.RttResult#distanceSpread" ]
  }, {
    "name" : "distanceSpread",
    "type" : "int",
    "comment" : " spread (i.e. max - min) distance in cm. ",
    "links" : [ ]
  }, {
    "name" : "burstDuration",
    "type" : "int",
    "comment" : " the duration of this measurement burst, unit ms. ",
    "links" : [ ]
  }, {
    "name" : "negotiatedBurstNum",
    "type" : "int",
    "comment" : " Burst number supported by peer after negotiation, 2side RTT only",
    "links" : [ ]
  }, {
    "name" : "LCI",
    "type" : "WifiInformationElement",
    "comment" : " LCI information Element, only available for double side RTT. ",
    "links" : [ ]
  }, {
    "name" : "LCR",
    "type" : "WifiInformationElement",
    "comment" : " LCR information Element, only available to double side RTT. ",
    "links" : [ ]
  }, {
    "name" : "secure",
    "type" : "boolean",
    "comment" : "\n         * Whether the secure RTT protocol was used for ranging.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "bssid", "burstNumber", "measurementFrameNumber", "successMeasurementFrameNumber", "frameNumberPerBurstPeer", "status", "requestType", "measurementType", "retryAfterDuration", "ts", "rssi", "rssi_spread", "rssiSpread", "tx_rate", "txRate", "rxRate", "rtt_ns", "rtt", "rtt_sd_ns", "rttStandardDeviation", "rtt_spread_ns", "rttSpread", "distance_cm", "distance", "distance_sd_cm", "distanceStandardDeviation", "distance_spread_cm", "distanceSpread", "burstDuration", "negotiatedBurstNum", "LCI", "LCR", "secure" ],
  "methodNames" : [ ]
}