{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/ReplaceableUCharacterIterator.java",
  "packageName" : "android.icu.impl",
  "className" : "ReplaceableUCharacterIterator",
  "comment" : "\n * DLF docs must define behavior when Replaceable is mutated underneath\n * the iterator.\n *\n * This and ICUCharacterIterator share some code, maybe they should share\n * an implementation, or the common state and implementation should be\n * moved up into UCharacterIterator.\n *\n * What are first, last, and getBeginIndex doing here?!?!?!\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "replaceable",
    "type" : "Replaceable",
    "comment" : "\n     * Replacable object\n     ",
    "links" : [ ]
  }, {
    "name" : "currentIndex",
    "type" : "int",
    "comment" : "\n     * Current currentIndex\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "\n     * Creates a copy of this iterator, does not clone the underlying\n     * <code>Replaceable</code>object\n     * @return copy of this iterator\n     ",
    "links" : [ ]
  }, {
    "name" : "public int current()",
    "returnType" : "int",
    "comment" : "\n     * Returns the current UTF16 character.\n     * @return current UTF16 character\n     ",
    "links" : [ ]
  }, {
    "name" : "public int currentCodePoint()",
    "returnType" : "int",
    "comment" : "\n     * Returns the current codepoint\n     * @return current codepoint\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLength()",
    "returnType" : "int",
    "comment" : "\n     * Returns the length of the text\n     * @return length of the text\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getIndex()",
    "returnType" : "int",
    "comment" : "\n     * Gets the current currentIndex in text.\n     * @return current currentIndex in text.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int next()",
    "returnType" : "int",
    "comment" : "\n     * Returns next UTF16 character and increments the iterator's currentIndex by 1.\n     * If the resulting currentIndex is greater or equal to the text length, the\n     * currentIndex is reset to the text length and a value of DONECODEPOINT is\n     * returned.\n     * @return next UTF16 character in text or DONE if the new currentIndex is off the\n     *         end of the text range.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int previous()",
    "returnType" : "int",
    "comment" : "\n     * Returns previous UTF16 character and decrements the iterator's currentIndex by\n     * 1.\n     * If the resulting currentIndex is less than 0, the currentIndex is reset to 0 and a\n     * value of DONECODEPOINT is returned.\n     * @return next UTF16 character in text or DONE if the new currentIndex is off the\n     *         start of the text range.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIndex(int currentIndex) throws IndexOutOfBoundsException",
    "returnType" : "void",
    "comment" : "\n     * <p>Sets the currentIndex to the specified currentIndex in the text and returns that\n     * single UTF16 character at currentIndex.\n     * This assumes the text is stored as 16-bit code units.</p>\n     * @param currentIndex the currentIndex within the text.\n     * @exception IllegalArgumentException is thrown if an invalid currentIndex is\n     *            supplied. i.e. currentIndex is out of bounds.\n     * @returns the character at the specified currentIndex or DONE if the specified\n     *         currentIndex is equal to the end of the text.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getText(char[] fillIn, int offset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Object clone()", "public int current()", "public int currentCodePoint()", "public int getLength()", "public int getIndex()", "public int next()", "public int previous()", "public void setIndex(int currentIndex) throws IndexOutOfBoundsException", "public int getText(char[] fillIn, int offset)" ],
  "variableNames" : [ "replaceable", "currentIndex" ]
}