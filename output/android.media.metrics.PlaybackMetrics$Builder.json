{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/metrics/PlaybackMetrics.java",
  "packageName" : "android.media.metrics",
  "className" : "Builder",
  "comment" : "\n     * A builder for {@link PlaybackMetrics}\n     ",
  "links" : [ "android.media.metrics.PlaybackMetrics" ],
  "variables" : [ {
    "name" : "mMediaDurationMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStreamSource",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStreamType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlaybackType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDrmType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlayerName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlayerVersion",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExperimentIds",
    "type" : "List<Long>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVideoFramesPlayed",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVideoFramesDropped",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioUnderrunCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkBytesRead",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLocalBytesRead",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkTransferDurationMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDrmSessionId",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMetricsBundle",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setMediaDurationMillis(@IntRange(from = -1) long value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the media duration in milliseconds.\n         * @param value the media duration in milliseconds. -1 indicates the value is unknown.\n         * @see #getMediaDurationMillis()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setStreamSource(@StreamSource int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the stream source type.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setStreamType(@StreamType int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the stream type.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPlaybackType(@PlaybackType int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the playback type.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDrmType(@DrmType int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the DRM type.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setContentType(@ContentType int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the content type.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPlayerName(@NonNull String value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the player name.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPlayerVersion(@NonNull String value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the player version.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addExperimentId(long value)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds the experiment ID.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVideoFramesPlayed(@IntRange(from = -1, to = Integer.MAX_VALUE) int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the video frames played.\n         * @param value the video frames played. -1 indicates the value is unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVideoFramesDropped(@IntRange(from = -1, to = Integer.MAX_VALUE) int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the video frames dropped.\n         * @param value the video frames dropped. -1 indicates the value is unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAudioUnderrunCount(@IntRange(from = -1, to = Integer.MAX_VALUE) int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the audio underrun count.\n         * @param value the audio underrun count. -1 indicates the value is unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNetworkBytesRead(@IntRange(from = -1) long value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the number of network bytes read.\n         * @param value the number of network bytes read. -1 indicates the value is unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLocalBytesRead(@IntRange(from = -1) long value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the number of local bytes read.\n         * @param value the number of local bytes read. -1 indicates the value is unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNetworkTransferDurationMillis(@IntRange(from = -1) long value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the network transfer duration in milliseconds.\n         * @param value the network transfer duration in milliseconds.\n         *              -1 indicates the value is unknown.\n         * @see #getNetworkTransferDurationMillis()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDrmSessionId(@NonNull byte[] drmSessionId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets DRM session ID.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMetricsBundle(@NonNull Bundle metricsBundle)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets metrics-related information that is not supported by dedicated\n         * methods.\n         * <p>It is intended to be used for backwards compatibility by the\n         * metrics infrastructure.\n         ",
    "links" : [ ]
  }, {
    "name" : "public PlaybackMetrics build()",
    "returnType" : "PlaybackMetrics",
    "comment" : " Builds the instance. This builder should not be touched after calling this! ",
    "links" : [ ]
  }, {
    "name" : "private long[] idsToLongArray()",
    "returnType" : "long[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setMediaDurationMillis(@IntRange(from = -1) long value)", "public Builder setStreamSource(@StreamSource int value)", "public Builder setStreamType(@StreamType int value)", "public Builder setPlaybackType(@PlaybackType int value)", "public Builder setDrmType(@DrmType int value)", "public Builder setContentType(@ContentType int value)", "public Builder setPlayerName(@NonNull String value)", "public Builder setPlayerVersion(@NonNull String value)", "public Builder addExperimentId(long value)", "public Builder setVideoFramesPlayed(@IntRange(from = -1, to = Integer.MAX_VALUE) int value)", "public Builder setVideoFramesDropped(@IntRange(from = -1, to = Integer.MAX_VALUE) int value)", "public Builder setAudioUnderrunCount(@IntRange(from = -1, to = Integer.MAX_VALUE) int value)", "public Builder setNetworkBytesRead(@IntRange(from = -1) long value)", "public Builder setLocalBytesRead(@IntRange(from = -1) long value)", "public Builder setNetworkTransferDurationMillis(@IntRange(from = -1) long value)", "public Builder setDrmSessionId(@NonNull byte[] drmSessionId)", "public Builder setMetricsBundle(@NonNull Bundle metricsBundle)", "public PlaybackMetrics build()", "private long[] idsToLongArray()" ],
  "variableNames" : [ "mMediaDurationMillis", "mStreamSource", "mStreamType", "mPlaybackType", "mDrmType", "mContentType", "mPlayerName", "mPlayerVersion", "mExperimentIds", "mVideoFramesPlayed", "mVideoFramesDropped", "mAudioUnderrunCount", "mNetworkBytesRead", "mLocalBytesRead", "mNetworkTransferDurationMillis", "mDrmSessionId", "mMetricsBundle" ]
}