{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/SmsCbMessage.java",
  "packageName" : "android.telephony",
  "className" : "SmsCbMessage",
  "comment" : "\n * Parcelable object containing a received cell broadcast message. There are four different types\n * of Cell Broadcast messages:\n *\n * <ul>\n * <li>opt-in informational broadcasts, e.g. news, weather, stock quotes, sports scores</li>\n * <li>cell information messages, broadcast on channel 50, indicating the current cell name for\n *  roaming purposes (required to display on the idle screen in Brazil)</li>\n * <li>emergency broadcasts for the Japanese Earthquake and Tsunami Warning System (ETWS)</li>\n * <li>emergency broadcasts for the American Commercial Mobile Alert Service (CMAS)</li>\n * </ul>\n *\n * <p>There are also four different CB message formats: GSM, ETWS Primary Notification (GSM only),\n * UMTS, and CDMA. Some fields are only applicable for some message formats. Other fields were\n * unified under a common name, avoiding some names, such as \"Message Identifier\", that refer to\n * two completely different concepts in 3GPP and CDMA.\n *\n * <p>The GSM/UMTS Message Identifier field is available via {@link #getServiceCategory}, the name\n * of the equivalent field in CDMA. In both cases the service category is a 16-bit value, but 3GPP\n * and 3GPP2 have completely different meanings for the respective values. For ETWS and CMAS, the\n * application should\n *\n * <p>The CDMA Message Identifier field is available via {@link #getSerialNumber}, which is used\n * to detect the receipt of a duplicate message to be discarded. In CDMA, the message ID is\n * unique to the current PLMN. In GSM/UMTS, there is a 16-bit serial number containing a 2-bit\n * Geographical Scope field which indicates whether the 10-bit message code and 4-bit update number\n * are considered unique to the PLMN, to the current cell, or to the current Location Area (or\n * Service Area in UMTS). The relevant values are concatenated into a single String which will be\n * unique if the messages are not duplicates.\n *\n * <p>The SMS dispatcher does not detect duplicate messages. However, it does concatenate the\n * pages of a GSM multi-page cell broadcast into a single SmsCbMessage object.\n *\n * <p>Interested applications with {@code RECEIVE_SMS_PERMISSION} can register to receive\n * {@code SMS_CB_RECEIVED_ACTION} broadcast intents for incoming non-emergency broadcasts.\n * Only system applications such as the CellBroadcastReceiver may receive notifications for\n * emergency broadcasts (ETWS and CMAS). This is intended to prevent any potential for delays or\n * interference with the immediate display of the alert message and playing of the alert sound and\n * vibration pattern, which could be caused by poorly written or malicious non-system code.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "GEOGRAPHICAL_SCOPE_CELL_WIDE_IMMEDIATE",
    "type" : "int",
    "comment" : " Cell wide geographical scope with immediate display (GSM/UMTS only). ",
    "links" : [ ]
  }, {
    "name" : "GEOGRAPHICAL_SCOPE_PLMN_WIDE",
    "type" : "int",
    "comment" : " PLMN wide geographical scope (GSM/UMTS and all CDMA broadcasts). ",
    "links" : [ ]
  }, {
    "name" : "GEOGRAPHICAL_SCOPE_LOCATION_AREA_WIDE",
    "type" : "int",
    "comment" : " Location / service area wide geographical scope (GSM/UMTS only). ",
    "links" : [ ]
  }, {
    "name" : "GEOGRAPHICAL_SCOPE_CELL_WIDE",
    "type" : "int",
    "comment" : " Cell wide geographical scope (GSM/UMTS only). ",
    "links" : [ ]
  }, {
    "name" : "MESSAGE_FORMAT_3GPP",
    "type" : "int",
    "comment" : " GSM or UMTS format cell broadcast. ",
    "links" : [ ]
  }, {
    "name" : "MESSAGE_FORMAT_3GPP2",
    "type" : "int",
    "comment" : " CDMA format cell broadcast. ",
    "links" : [ ]
  }, {
    "name" : "MESSAGE_PRIORITY_NORMAL",
    "type" : "int",
    "comment" : " Normal message priority. ",
    "links" : [ ]
  }, {
    "name" : "MESSAGE_PRIORITY_INTERACTIVE",
    "type" : "int",
    "comment" : " Interactive message priority. ",
    "links" : [ ]
  }, {
    "name" : "MESSAGE_PRIORITY_URGENT",
    "type" : "int",
    "comment" : " Urgent message priority. ",
    "links" : [ ]
  }, {
    "name" : "MESSAGE_PRIORITY_EMERGENCY",
    "type" : "int",
    "comment" : " Emergency message priority. ",
    "links" : [ ]
  }, {
    "name" : "MAXIMUM_WAIT_TIME_NOT_SET",
    "type" : "int",
    "comment" : "\n     * Integer indicating that the maximum wait time is not set.\n     * Based on ATIS-0700041 Section 5.2.8 WAC Geo-Fencing Maximum Wait Time Table 12.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMessageFormat",
    "type" : "int",
    "comment" : " Format of this message (for interpretation of service category values). ",
    "links" : [ ]
  }, {
    "name" : "mGeographicalScope",
    "type" : "int",
    "comment" : " Geographical scope of broadcast. ",
    "links" : [ ]
  }, {
    "name" : "mSerialNumber",
    "type" : "int",
    "comment" : "\n     * Serial number of broadcast (message identifier for CDMA, geographical scope + message code +\n     * update number for GSM/UMTS). The serial number plus the location code uniquely identify\n     * a cell broadcast for duplicate detection.\n     ",
    "links" : [ ]
  }, {
    "name" : "mLocation",
    "type" : "SmsCbLocation",
    "comment" : "\n     * Location identifier for this message. It consists of the current operator MCC/MNC as a\n     * 5 or 6-digit decimal string. In addition, for GSM/UMTS, if the Geographical Scope of the\n     * message is not binary 01, the Location Area is included for comparison. If the GS is\n     * 00 or 11, the Cell ID is also included. LAC and Cell ID are -1 if not specified.\n     ",
    "links" : [ ]
  }, {
    "name" : "mServiceCategory",
    "type" : "int",
    "comment" : "\n     * 16-bit CDMA service category or GSM/UMTS message identifier. For ETWS and CMAS warnings,\n     * the information provided by the category is also available via {@link #getEtwsWarningInfo()}\n     * or {@link #getCmasWarningInfo()}.\n     ",
    "links" : [ "#getEtwsWarningInfo", "#getCmasWarningInfo" ]
  }, {
    "name" : "mLanguage",
    "type" : "String",
    "comment" : " Message language, as a two-character string, e.g. \"en\". ",
    "links" : [ ]
  }, {
    "name" : "mDataCodingScheme",
    "type" : "int",
    "comment" : " The 8-bit data coding scheme defined in 3GPP TS 23.038 section 4. ",
    "links" : [ ]
  }, {
    "name" : "mBody",
    "type" : "String",
    "comment" : " Message body, as a String. ",
    "links" : [ ]
  }, {
    "name" : "mPriority",
    "type" : "int",
    "comment" : " Message priority (including emergency priority). ",
    "links" : [ ]
  }, {
    "name" : "mEtwsWarningInfo",
    "type" : "SmsCbEtwsInfo",
    "comment" : " ETWS warning notification information (ETWS warnings only). ",
    "links" : [ ]
  }, {
    "name" : "mCmasWarningInfo",
    "type" : "SmsCbCmasInfo",
    "comment" : " CMAS warning notification information (CMAS warnings only). ",
    "links" : [ ]
  }, {
    "name" : "mMaximumWaitTimeSec",
    "type" : "int",
    "comment" : "\n     * Geo-Fencing Maximum Wait Time in second, a device shall allow to determine its position\n     * meeting operator policy. If the device is unable to determine its position meeting operator\n     * policy within the GeoFencing Maximum Wait Time, it shall present the alert to the user and\n     * discontinue further positioning determination for the alert.\n     ",
    "links" : [ ]
  }, {
    "name" : "mReceivedTimeMillis",
    "type" : "long",
    "comment" : " UNIX timestamp of when the message was received. ",
    "links" : [ ]
  }, {
    "name" : "mGeometries",
    "type" : "List<Geometry>",
    "comment" : " CMAS warning area coordinates. ",
    "links" : [ ]
  }, {
    "name" : "mSlotIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SmsCbMessage>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Flatten this object into a Parcel.\n     *\n     * @param dest  The Parcel in which the object should be written.\n     * @param flags Additional flags about how the object should be written (ignored).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getGeographicalScope()",
    "returnType" : "int",
    "comment" : "\n     * Return the geographical scope of this message (GSM/UMTS only).\n     *\n     * @return Geographical scope\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSerialNumber()",
    "returnType" : "int",
    "comment" : "\n     * Return the broadcast serial number of broadcast (message identifier for CDMA, or\n     * geographical scope + message code + update number for GSM/UMTS). The serial number plus\n     * the location code uniquely identify a cell broadcast for duplicate detection.\n     *\n     * @return the 16-bit CDMA message identifier or GSM/UMTS serial number\n     ",
    "links" : [ ]
  }, {
    "name" : "public android.telephony.SmsCbLocation getLocation()",
    "returnType" : "android.telephony.SmsCbLocation",
    "comment" : "\n     * Return the location identifier for this message, consisting of the MCC/MNC as a\n     * 5 or 6-digit decimal string. In addition, for GSM/UMTS, if the Geographical Scope of the\n     * message is not binary 01, the Location Area is included. If the GS is 00 or 11, the\n     * cell ID is also included. The {@link SmsCbLocation} object includes a method to test\n     * if the location is included within another location area or within a PLMN and CellLocation.\n     *\n     * @return the geographical location code for duplicate message detection\n     ",
    "links" : [ "SmsCbLocation" ]
  }, {
    "name" : "public int getServiceCategory()",
    "returnType" : "int",
    "comment" : "\n     * Return the 16-bit CDMA service category or GSM/UMTS message identifier. The interpretation\n     * of the category is radio technology specific. For ETWS and CMAS warnings, the information\n     * provided by the category is available via {@link #getEtwsWarningInfo()} or\n     * {@link #getCmasWarningInfo()} in a radio technology independent format.\n     *\n     * @return the radio technology specific service category\n     ",
    "links" : [ "#getEtwsWarningInfo", "#getCmasWarningInfo" ]
  }, {
    "name" : "public String getLanguageCode()",
    "returnType" : "String",
    "comment" : "\n     * Get the ISO-639-1 language code for this message, or null if unspecified\n     *\n     * @return Language code\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDataCodingScheme()",
    "returnType" : "int",
    "comment" : "\n     * Get data coding scheme of the message\n     *\n     * @return The 8-bit data coding scheme defined in 3GPP TS 23.038 section 4.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getMessageBody()",
    "returnType" : "String",
    "comment" : "\n     * Get the body of this message, or null if no body available\n     *\n     * @return Body, or null\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<Geometry> getGeometries()",
    "returnType" : "List<Geometry>",
    "comment" : "\n     * Get the warning area coordinates information represented by polygons and circles.\n     * @return a list of geometries, or an empty list if there is no coordinate information\n     * associated with this message.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaximumWaitingDuration()",
    "returnType" : "int",
    "comment" : "\n     * Get the Geo-Fencing Maximum Wait Time.\n     * @return the time in second.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getReceivedTime()",
    "returnType" : "long",
    "comment" : "\n     * Get the time when this message was received.\n     * @return the time in millisecond\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSlotIndex()",
    "returnType" : "int",
    "comment" : "\n     * Get the slot index associated with this message.\n     * @return the slot index associated with this message\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSubscriptionId()",
    "returnType" : "int",
    "comment" : "\n     * Get the subscription id associated with this message.\n     * @return the subscription id associated with this message\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMessageFormat()",
    "returnType" : "int",
    "comment" : "\n     * Get the message format ({@link #MESSAGE_FORMAT_3GPP} or {@link #MESSAGE_FORMAT_3GPP2}).\n     * @return an integer representing 3GPP or 3GPP2 message format\n     ",
    "links" : [ "#MESSAGE_FORMAT_3GPP", "#MESSAGE_FORMAT_3GPP2" ]
  }, {
    "name" : "public int getMessagePriority()",
    "returnType" : "int",
    "comment" : "\n     * Get the message priority. Normal broadcasts return {@link #MESSAGE_PRIORITY_NORMAL}\n     * and emergency broadcasts return {@link #MESSAGE_PRIORITY_EMERGENCY}. CDMA also may return\n     * {@link #MESSAGE_PRIORITY_INTERACTIVE} or {@link #MESSAGE_PRIORITY_URGENT}.\n     * @return an integer representing the message priority\n     ",
    "links" : [ "#MESSAGE_PRIORITY_NORMAL", "#MESSAGE_PRIORITY_EMERGENCY", "#MESSAGE_PRIORITY_INTERACTIVE", "#MESSAGE_PRIORITY_URGENT" ]
  }, {
    "name" : "public SmsCbEtwsInfo getEtwsWarningInfo()",
    "returnType" : "SmsCbEtwsInfo",
    "comment" : "\n     * If this is an ETWS warning notification then this method will return an object containing\n     * the ETWS warning type, the emergency user alert flag, and the popup flag. If this is an\n     * ETWS primary notification (GSM only), there will also be a 7-byte timestamp and 43-byte\n     * digital signature. As of Release 10, 3GPP TS 23.041 states that the UE shall ignore the\n     * ETWS primary notification timestamp and digital signature if received.\n     *\n     * @return an SmsCbEtwsInfo object, or null if this is not an ETWS warning notification\n     ",
    "links" : [ ]
  }, {
    "name" : "public SmsCbCmasInfo getCmasWarningInfo()",
    "returnType" : "SmsCbCmasInfo",
    "comment" : "\n     * If this is a CMAS warning notification then this method will return an object containing\n     * the CMAS message class, category, response type, severity, urgency and certainty.\n     * The message class is always present. Severity, urgency and certainty are present for CDMA\n     * warning notifications containing a type 1 elements record and for GSM and UMTS warnings\n     * except for the Presidential-level alert category. Category and response type are only\n     * available for CDMA notifications containing a type 1 elements record.\n     *\n     * @return an SmsCbCmasInfo object, or null if this is not a CMAS warning notification\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmergencyMessage()",
    "returnType" : "boolean",
    "comment" : "\n     * Return whether this message is an emergency (PWS) message type.\n     * @return true if the message is an emergency notification; false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEtwsMessage()",
    "returnType" : "boolean",
    "comment" : "\n     * Return whether this message is an ETWS warning alert.\n     * @return true if the message is an ETWS warning notification; false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCmasMessage()",
    "returnType" : "boolean",
    "comment" : "\n     * Return whether this message is a CMAS warning alert.\n     * @return true if the message is a CMAS warning notification; false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * Describe the kinds of special objects contained in the marshalled representation.\n     * @return a bitmask indicating this Parcelable contains no special objects\n     ",
    "links" : [ ]
  }, {
    "name" : "public ContentValues getContentValues()",
    "returnType" : "ContentValues",
    "comment" : "\n     * @return the {@link ContentValues} instance that includes the cell broadcast data.\n     ",
    "links" : [ "ContentValues" ]
  }, {
    "name" : "public static SmsCbMessage createFromCursor(@NonNull Cursor cursor)",
    "returnType" : "SmsCbMessage",
    "comment" : "\n     * Create a {@link SmsCbMessage} instance from a row in the cell broadcast database.\n     * @param cursor an open SQLite cursor pointing to the row to read\n     * @return a {@link SmsCbMessage} instance.\n     * @throws IllegalArgumentException if one of the required columns is missing\n     ",
    "links" : [ "SmsCbMessage", "SmsCbMessage" ]
  }, {
    "name" : "public boolean needGeoFencingCheck()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code True} if this message needs geo-fencing check.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "GEOGRAPHICAL_SCOPE_CELL_WIDE_IMMEDIATE", "GEOGRAPHICAL_SCOPE_PLMN_WIDE", "GEOGRAPHICAL_SCOPE_LOCATION_AREA_WIDE", "GEOGRAPHICAL_SCOPE_CELL_WIDE", "MESSAGE_FORMAT_3GPP", "MESSAGE_FORMAT_3GPP2", "MESSAGE_PRIORITY_NORMAL", "MESSAGE_PRIORITY_INTERACTIVE", "MESSAGE_PRIORITY_URGENT", "MESSAGE_PRIORITY_EMERGENCY", "MAXIMUM_WAIT_TIME_NOT_SET", "mMessageFormat", "mGeographicalScope", "mSerialNumber", "mLocation", "mServiceCategory", "mLanguage", "mDataCodingScheme", "mBody", "mPriority", "mEtwsWarningInfo", "mCmasWarningInfo", "mMaximumWaitTimeSec", "mReceivedTimeMillis", "mGeometries", "mSlotIndex", "mSubId", "CREATOR" ],
  "methodNames" : [ "public void writeToParcel(Parcel dest, int flags)", "public int getGeographicalScope()", "public int getSerialNumber()", "public android.telephony.SmsCbLocation getLocation()", "public int getServiceCategory()", "public String getLanguageCode()", "public int getDataCodingScheme()", "public String getMessageBody()", "public List<Geometry> getGeometries()", "public int getMaximumWaitingDuration()", "public long getReceivedTime()", "public int getSlotIndex()", "public int getSubscriptionId()", "public int getMessageFormat()", "public int getMessagePriority()", "public SmsCbEtwsInfo getEtwsWarningInfo()", "public SmsCbCmasInfo getCmasWarningInfo()", "public boolean isEmergencyMessage()", "public boolean isEtwsMessage()", "public boolean isCmasMessage()", "public String toString()", "public int describeContents()", "public ContentValues getContentValues()", "public static SmsCbMessage createFromCursor(@NonNull Cursor cursor)", "public boolean needGeoFencingCheck()" ]
}