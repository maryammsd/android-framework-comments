{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/dtm/ref/DTMTreeWalker.java",
  "packageName" : "org.apache.xml.dtm.ref",
  "className" : "DTMTreeWalker",
  "comment" : "\n * This class does a pre-order walk of the DTM tree, calling a ContentHandler\n * interface as it goes. As such, it's more like the Visitor design pattern\n * than like the DOM's TreeWalker.\n *\n * I think normally this class should not be needed, because \n * of DTM#dispatchToEvents.\n * @xsl.usage advanced\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_contentHandler",
    "type" : "ContentHandler",
    "comment" : " Local reference to a ContentHandler          ",
    "links" : [ ]
  }, {
    "name" : "m_dtm",
    "type" : "DTM",
    "comment" : " DomHelper for this TreeWalker          ",
    "links" : [ ]
  }, {
    "name" : "nextIsRaw",
    "type" : "boolean",
    "comment" : " Flag indicating whether following text to be processed is raw text          ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setDTM(DTM dtm)",
    "returnType" : "void",
    "comment" : "\n   * Set the DTM to be traversed.\n   * \n   * @param dtm The Document Table Model to be used.\n   ",
    "links" : [ ]
  }, {
    "name" : "public ContentHandler getcontentHandler()",
    "returnType" : "ContentHandler",
    "comment" : "\n   * Get the ContentHandler used for the tree walk.\n   *\n   * @return the ContentHandler used for the tree walk\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setcontentHandler(ContentHandler ch)",
    "returnType" : "void",
    "comment" : "\n   * Set the ContentHandler used for the tree walk.\n   *\n   * @param ch the ContentHandler to be the result of the tree walk.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void traverse(int pos) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : " Perform a non-recursive pre-order/post-order traversal,\n   * operating as a Visitor. startNode (preorder) and endNode\n   * (postorder) are invoked for each node as we traverse over them,\n   * with the result that the node is written out to m_contentHandler.\n   *\n   * @param pos Node in the tree at which to start (and end) traversal --\n   * in other words, the root of the subtree to traverse over.\n   *\n   * @throws TransformerException ",
    "links" : [ ]
  }, {
    "name" : "public void traverse(int pos, int top) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : " Perform a non-recursive pre-order/post-order traversal,\n   * operating as a Visitor. startNode (preorder) and endNode\n   * (postorder) are invoked for each node as we traverse over them,\n   * with the result that the node is written out to m_contentHandler.\n   *\n   * @param pos Node in the tree where to start traversal\n   * @param top Node in the tree where to end traversal.\n   * If top==DTM.NULL, run through end of document.\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "private final void dispatachChars(int node) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Optimized dispatch of characters.\n   ",
    "links" : [ ]
  }, {
    "name" : "protected void startNode(int node) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Start processing given node\n   *\n   *\n   * @param node Node to process\n   *\n   * @throws org.xml.sax.SAXException\n   ",
    "links" : [ ]
  }, {
    "name" : "protected void endNode(int node) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * End processing of given node \n   *\n   *\n   * @param node Node we just finished processing\n   *\n   * @throws org.xml.sax.SAXException\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setDTM(DTM dtm)", "public ContentHandler getcontentHandler()", "public void setcontentHandler(ContentHandler ch)", "public void traverse(int pos) throws org.xml.sax.SAXException", "public void traverse(int pos, int top) throws org.xml.sax.SAXException", "private final void dispatachChars(int node) throws org.xml.sax.SAXException", "protected void startNode(int node) throws org.xml.sax.SAXException", "protected void endNode(int node) throws org.xml.sax.SAXException" ],
  "variableNames" : [ "m_contentHandler", "m_dtm", "nextIsRaw" ]
}