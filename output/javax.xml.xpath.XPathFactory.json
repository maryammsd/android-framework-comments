{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/xpath/XPathFactory.java",
  "packageName" : "javax.xml.xpath",
  "className" : "XPathFactory",
  "comment" : "\n * <p>An <code>XPathFactory</code> instance can be used to create\n * {@link javax.xml.xpath.XPath} objects.</p>\n *\n *<p>See {@link #newInstance(String uri)} for lookup mechanism.</p>\n *\n * @author  <a href=\"mailto:Norman.Walsh@Sun.com\">Norman Walsh</a>\n * @author  <a href=\"mailto:Jeff.Suttor@Sun.com\">Jeff Suttor</a>\n * @version $Revision: 888889 $, $Date: 2009-12-09 09:43:18 -0800 (Wed, 09 Dec 2009) $\n * @since 1.5\n ",
  "links" : [ "javax.xml.xpath.XPath", "#newInstance(String" ],
  "variables" : [ {
    "name" : "DEFAULT_PROPERTY_NAME",
    "type" : "String",
    "comment" : "\n     * <p>The default property name according to the JAXP spec.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_OBJECT_MODEL_URI",
    "type" : "String",
    "comment" : "\n     * <p>Default Object Model URI.</p>\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static final XPathFactory newInstance()",
    "returnType" : "XPathFactory",
    "comment" : "\n     * <p>Get a new <code>XPathFactory</code> instance using the default object model,\n     * {@link #DEFAULT_OBJECT_MODEL_URI},\n     * the W3C DOM.</p>\n     *\n     * <p>This method is functionally equivalent to:</p>\n     * <pre>\n     *   newInstance(DEFAULT_OBJECT_MODEL_URI)\n     * </pre>\n     *\n     * <p>Since the implementation for the W3C DOM is always available, this method will never fail.</p>\n     *\n     * @return Instance of an <code>XPathFactory</code>.\n     ",
    "links" : [ "#DEFAULT_OBJECT_MODEL_URI" ]
  }, {
    "name" : "public static final XPathFactory newInstance(final String uri) throws XPathFactoryConfigurationException",
    "returnType" : "XPathFactory",
    "comment" : "\n    * <p>Get a new <code>XPathFactory</code> instance using the specified object model.</p>\n    *\n    * <p>To find a <code>XPathFactory</code> object,\n    * this method looks the following places in the following order where \"the class loader\" refers to the context class loader:</p>\n    * <ol>\n    *   <li>\n    *     If the system property {@link #DEFAULT_PROPERTY_NAME} + \":uri\" is present,\n    *     where uri is the parameter to this method, then its value is read as a class name.\n    *     The method will try to create a new instance of this class by using the class loader,\n    *     and returns it if it is successfully created.\n    *   </li>\n    *   <li>\n    *     ${java.home}/lib/jaxp.properties is read and the value associated with the key being the system property above is looked for.\n    *     If present, the value is processed just like above.\n    *   </li>\n    *   <li>\n    *     The class loader is asked for service provider provider-configuration files matching <code>javax.xml.xpath.XPathFactory</code>\n    *     in the resource directory META-INF/services.\n    *     See the JAR File Specification for file format and parsing rules.\n    *     Each potential service provider is required to implement the method:\n    *     <pre>\n    *       {@link #isObjectModelSupported(String objectModel)}\n    *     </pre>\n    *     The first service provider found in class loader order that supports the specified object model is returned.\n    *   </li>\n    *   <li>\n    *     Platform default <code>XPathFactory</code> is located in a platform specific way.\n    *     There must be a platform default XPathFactory for the W3C DOM, i.e. {@link #DEFAULT_OBJECT_MODEL_URI}.\n    *   </li>\n    * </ol>\n    * <p>If everything fails, an <code>XPathFactoryConfigurationException</code> will be thrown.</p>\n    *\n    * <p>Tip for Trouble-shooting:</p>\n    * <p>See {@link java.util.Properties#load(java.io.InputStream)} for exactly how a property file is parsed.\n    * In particular, colons ':' need to be escaped in a property file, so make sure the URIs are properly escaped in it.\n    * For example:</p>\n    * <pre>\n    *   http\\://java.sun.com/jaxp/xpath/dom=org.acme.DomXPathFactory\n    * </pre>\n    *\n    * @param uri Identifies the underlying object model.\n    *   The specification only defines the URI {@link #DEFAULT_OBJECT_MODEL_URI},\n    *   <code>http://java.sun.com/jaxp/xpath/dom</code> for the W3C DOM,\n    *   the org.w3c.dom package, and implementations are free to introduce other URIs for other object models.\n    *\n    * @return Instance of an <code>XPathFactory</code>.\n    *\n    * @throws XPathFactoryConfigurationException If the specified object model is unavailable.\n    * @throws NullPointerException If <code>uri</code> is <code>null</code>.\n    * @throws IllegalArgumentException If <code>uri.length() == 0</code>.\n    ",
    "links" : [ "#DEFAULT_PROPERTY_NAME", "#DEFAULT_OBJECT_MODEL_URI", "#isObjectModelSupported(String", "java.util.Properties#load(java.io.InputStream)" ]
  }, {
    "name" : "public static XPathFactory newInstance(String uri, String factoryClassName, ClassLoader classLoader) throws XPathFactoryConfigurationException",
    "returnType" : "XPathFactory",
    "comment" : "\n     * @return Instance of an <code>XPathFactory</code>.\n     *\n     * @throws XPathFactoryConfigurationException If the specified object model is unavailable.\n     * @throws NullPointerException If <code>uri</code> is <code>null</code>.\n     * @throws IllegalArgumentException If <code>uri.length() == 0</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean isObjectModelSupported(String objectModel)",
    "returnType" : "boolean",
    "comment" : "\n     * <p>Is specified object model supported by this <code>XPathFactory</code>?</p>\n     *\n     * @param objectModel Specifies the object model which the returned <code>XPathFactory</code> will understand.\n     *\n     * @return <code>true</code> if <code>XPathFactory</code> supports <code>objectModel</code>, else <code>false</code>.\n     *\n     * @throws NullPointerException If <code>objectModel</code> is <code>null</code>.\n     * @throws IllegalArgumentException If <code>objectModel.length() == 0</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void setFeature(String name, boolean value) throws XPathFactoryConfigurationException",
    "returnType" : "void",
    "comment" : "\n     * <p>Set a feature for this <code>XPathFactory</code> and <code>XPath</code>s created by this factory.</p>\n     *\n     * <p>\n     * Feature names are fully qualified {@link java.net.URI}s.\n     * Implementations may define their own features.\n     * An {@link XPathFactoryConfigurationException} is thrown if this <code>XPathFactory</code> or the <code>XPath</code>s\n     *  it creates cannot support the feature.\n     * It is possible for an <code>XPathFactory</code> to expose a feature value but be unable to change its state.\n     * </p>\n     *\n     * <p>\n     * All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.\n     * When the feature is <code>true</code>, any reference to  an external function is an error.\n     * Under these conditions, the implementation must not call the {@link XPathFunctionResolver}\n     * and must throw an {@link XPathFunctionException}.\n     * </p>\n     *\n     * @param name Feature name.\n     * @param value Is feature state <code>true</code> or <code>false</code>.\n     *\n     * @throws XPathFactoryConfigurationException if this <code>XPathFactory</code> or the <code>XPath</code>s\n     *   it creates cannot support this feature.\n     * @throws NullPointerException if <code>name</code> is <code>null</code>.\n     ",
    "links" : [ "javax.xml.xpath.XPathFactoryConfigurationException", "javax.xml.xpath.XPathFunctionException", "javax.xml.xpath.XPathFunctionResolver", "java.net.URI", "javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING" ]
  }, {
    "name" : "public abstract boolean getFeature(String name) throws XPathFactoryConfigurationException",
    "returnType" : "boolean",
    "comment" : "\n     * <p>Get the state of the named feature.</p>\n     *\n     * <p>\n     * Feature names are fully qualified {@link java.net.URI}s.\n     * Implementations may define their own features.\n     * An {@link XPathFactoryConfigurationException} is thrown if this <code>XPathFactory</code> or the <code>XPath</code>s\n     * it creates cannot support the feature.\n     * It is possible for an <code>XPathFactory</code> to expose a feature value but be unable to change its state.\n     * </p>\n     *\n     * @param name Feature name.\n     *\n     * @return State of the named feature.\n     *\n     * @throws XPathFactoryConfigurationException if this <code>XPathFactory</code> or the <code>XPath</code>s\n     *   it creates cannot support this feature.\n     * @throws NullPointerException if <code>name</code> is <code>null</code>.\n     ",
    "links" : [ "javax.xml.xpath.XPathFactoryConfigurationException", "java.net.URI" ]
  }, {
    "name" : "public abstract void setXPathVariableResolver(XPathVariableResolver resolver)",
    "returnType" : "void",
    "comment" : "\n     * <p>Establish a default variable resolver.</p>\n     *\n     * <p>Any <code>XPath</code> objects constructed from this factory will use\n     * the specified resolver by default.</p>\n     *\n     * <p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>\n     *\n     * @param resolver Variable resolver.\n     *\n     *  @throws NullPointerException If <code>resolver</code> is <code>null</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void setXPathFunctionResolver(XPathFunctionResolver resolver)",
    "returnType" : "void",
    "comment" : "\n       * <p>Establish a default function resolver.</p>\n       *\n       * <p>Any <code>XPath</code> objects constructed from this factory will use\n       * the specified resolver by default.</p>\n       *\n       * <p>A <code>NullPointerException</code> is thrown if <code>resolver</code> is <code>null</code>.</p>\n       *\n       * @param resolver XPath function resolver.\n       *\n       * @throws NullPointerException If <code>resolver</code> is <code>null</code>.\n       ",
    "links" : [ ]
  }, {
    "name" : "public abstract XPath newXPath()",
    "returnType" : "XPath",
    "comment" : "\n    * <p>Return a new <code>XPath</code> using the underlying object\n    * model determined when the <code>XPathFactory</code> was instantiated.</p>\n    *\n    * @return New instance of an <code>XPath</code>.\n    ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static final XPathFactory newInstance()", "public static final XPathFactory newInstance(final String uri) throws XPathFactoryConfigurationException", "public static XPathFactory newInstance(String uri, String factoryClassName, ClassLoader classLoader) throws XPathFactoryConfigurationException", "public abstract boolean isObjectModelSupported(String objectModel)", "public abstract void setFeature(String name, boolean value) throws XPathFactoryConfigurationException", "public abstract boolean getFeature(String name) throws XPathFactoryConfigurationException", "public abstract void setXPathVariableResolver(XPathVariableResolver resolver)", "public abstract void setXPathFunctionResolver(XPathFunctionResolver resolver)", "public abstract XPath newXPath()" ],
  "variableNames" : [ "DEFAULT_PROPERTY_NAME", "DEFAULT_OBJECT_MODEL_URI" ]
}