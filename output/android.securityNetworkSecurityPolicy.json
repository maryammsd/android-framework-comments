{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/security/NetworkSecurityPolicy.java",
  "packageName" : "android.security",
  "className" : "NetworkSecurityPolicy",
  "comment" : "\n * Network security policy.\n *\n * <p>Network stacks/components should honor this policy to make it possible to centrally control\n * the relevant aspects of network security behavior.\n *\n * <p>The policy currently consists of a single flag: whether cleartext network traffic is\n * permitted. See {@link #isCleartextTrafficPermitted()}.\n ",
  "variables" : [ {
    "name" : "INSTANCE",
    "type" : "NetworkSecurityPolicy",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static NetworkSecurityPolicy getInstance()",
    "returnType" : "NetworkSecurityPolicy",
    "comment" : "\n     * Gets the policy for this process.\n     *\n     * <p>It's fine to cache this reference. Any changes to the policy will be immediately visible\n     * through the reference.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCleartextTrafficPermitted()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether cleartext network traffic (e.g. HTTP, FTP, WebSockets, XMPP, IMAP, SMTP --\n     * without TLS or STARTTLS) is permitted for all network communication from this process.\n     *\n     * <p>When cleartext network traffic is not permitted, the platform's components (e.g. HTTP and\n     * FTP stacks, {@link android.app.DownloadManager}, {@link android.media.MediaPlayer}) will\n     * refuse this process's requests to use cleartext traffic. Third-party libraries are strongly\n     * encouraged to honor this setting as well.\n     *\n     * <p>This flag is honored on a best effort basis because it's impossible to prevent all\n     * cleartext traffic from Android applications given the level of access provided to them. For\n     * example, there's no expectation that the {@link java.net.Socket} API will honor this flag\n     * because it cannot determine whether its traffic is in cleartext. However, most network\n     * traffic from applications is handled by higher-level network stacks/components which can\n     * honor this aspect of the policy.\n     *\n     * <p>NOTE: {@link android.webkit.WebView} honors this flag for applications targeting API level\n     * 26 and up.\n     ",
    "links" : [ "android.app.DownloadManager", "android.media.MediaPlayer", "java.net.Socket", "android.webkit.WebView" ]
  }, {
    "name" : "public boolean isCleartextTrafficPermitted(String hostname)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether cleartext network traffic (e.g. HTTP, FTP, XMPP, IMAP, SMTP -- without\n     * TLS or STARTTLS) is permitted for communicating with {@code hostname} for this process.\n     *\n     * @see #isCleartextTrafficPermitted()\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setCleartextTrafficPermitted(boolean permitted)",
    "returnType" : "void",
    "comment" : "\n     * Sets whether cleartext network traffic is permitted for this process.\n     *\n     * <p>This method is used by the platform early on in the application's initialization to set\n     * the policy.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void handleTrustStorageUpdate()",
    "returnType" : "void",
    "comment" : "\n     * Handle an update to the system or user certificate stores.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ApplicationConfig getApplicationConfigForPackage(Context context, String packageName) throws PackageManager.NameNotFoundException",
    "returnType" : "ApplicationConfig",
    "comment" : "\n     * Returns an {@link ApplicationConfig} based on the configuration for {@code packageName}.\n     *\n     * @hide\n     ",
    "links" : [ "ApplicationConfig" ]
  } ],
  "variableNames" : [ "INSTANCE" ],
  "methodNames" : [ "public static NetworkSecurityPolicy getInstance()", "public boolean isCleartextTrafficPermitted()", "public boolean isCleartextTrafficPermitted(String hostname)", "public void setCleartextTrafficPermitted(boolean permitted)", "public void handleTrustStorageUpdate()", "public static ApplicationConfig getApplicationConfigForPackage(Context context, String packageName) throws PackageManager.NameNotFoundException" ]
}