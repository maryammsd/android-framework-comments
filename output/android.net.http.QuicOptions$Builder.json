{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/http/QuicOptions.java",
  "packageName" : "android.net.http",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link QuicOptions}.\n     ",
  "links" : [ "android.net.http.QuicOptions" ],
  "variables" : [ {
    "name" : "mQuicHostAllowlist",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnabledQuicVersions",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectionOptions",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientConnectionOptions",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInMemoryServerConfigsCacheSize",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandshakeUserAgent",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRetryWithoutAltSvcOnQuicErrors",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnableTlsZeroRtt",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreCryptoHandshakeIdleTimeout",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCryptoHandshakeTimeout",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIdleConnectionTimeout",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRetransmittableOnWireTimeout",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCloseSessionsOnIpChange",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGoawaySessionsOnIpChange",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialBrokenServicePeriod",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIncreaseBrokenServicePeriodExponentially",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDelayJobsWithAvailableSpdySession",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtraQuicheFlags",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder addAllowedQuicHost(@NonNull String quicHost)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a host to the QUIC allowlist.\n         *\n         * <p>If no hosts are specified, the per-host allowlist functionality is disabled.\n         * Otherwise, the HTTP stack will only use QUIC when talking to hosts on the allowlist.\n         *\n         * @return the builder for chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setInMemoryServerConfigsCacheSize(int inMemoryServerConfigsCacheSize)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets how many server configurations (metadata like list of alt svc, whether QUIC is\n         * supported, etc.) should be held in memory.\n         *\n         * <p>If the storage path is set ({@link HttpEngine.Builder#setStoragePath(String)},\n         * the HTTP stack will also persist the server configurations on disk.\n         *\n         * @return the builder for chaining\n         ",
    "links" : [ "HttpEngine.Builder#setStoragePath(String)" ]
  }, {
    "name" : "public Builder setHandshakeUserAgent(@NonNull String handshakeUserAgent)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the user agent to be used outside of HTTP requests (for example for QUIC\n         * handshakes).\n         *\n         * <p>To set the default user agent for HTTP requests, use\n         * {@link HttpEngine.Builder#setUserAgent(String)} instead.\n         *\n         * @return the builder for chaining\n         ",
    "links" : [ "HttpEngine.Builder#setUserAgent(String)" ]
  }, {
    "name" : "public Builder setIdleConnectionTimeout(@NonNull Duration idleConnectionTimeout)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the maximum idle time for a connection. The actual value for the idle timeout is\n         * the minimum of this value and the server's and is negotiated during the handshake. Thus,\n         * it only applies after the handshake has completed. If no activity is detected\n         * on the connection for the set duration, the connection is closed.\n         *\n         * <p>See <a href=\"https://www.rfc-editor.org/rfc/rfc9114.html#name-idle-connections\">RFC\n         * 9114, section 5.1 </a> for more details.\n         * \n         * @return the builder for chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public QuicOptions build()",
    "returnType" : "QuicOptions",
    "comment" : "\n         * Creates and returns the final {@link QuicOptions} instance, based on the values\n         * in this builder.\n         ",
    "links" : [ "android.net.http.QuicOptions" ]
  } ],
  "methodNames" : [ "public Builder addAllowedQuicHost(@NonNull String quicHost)", "public Builder setInMemoryServerConfigsCacheSize(int inMemoryServerConfigsCacheSize)", "public Builder setHandshakeUserAgent(@NonNull String handshakeUserAgent)", "public Builder setIdleConnectionTimeout(@NonNull Duration idleConnectionTimeout)", "public QuicOptions build()" ],
  "variableNames" : [ "mQuicHostAllowlist", "mEnabledQuicVersions", "mConnectionOptions", "mClientConnectionOptions", "mInMemoryServerConfigsCacheSize", "mHandshakeUserAgent", "mRetryWithoutAltSvcOnQuicErrors", "mEnableTlsZeroRtt", "mPreCryptoHandshakeIdleTimeout", "mCryptoHandshakeTimeout", "mIdleConnectionTimeout", "mRetransmittableOnWireTimeout", "mCloseSessionsOnIpChange", "mGoawaySessionsOnIpChange", "mInitialBrokenServicePeriod", "mIncreaseBrokenServicePeriodExponentially", "mDelayJobsWithAvailableSpdySession", "mExtraQuicheFlags" ]
}