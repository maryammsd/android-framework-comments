{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/inputmethod/InlineSuggestion.java",
  "packageName" : "android.view.inputmethod",
  "className" : "InlineSuggestion",
  "comment" : "\n * This class represents an inline suggestion which is made by one app and can be embedded into the\n * UI of another. Suggestions may contain sensitive information not known to the host app which\n * needs to be protected from spoofing. To address that the suggestion view inflated on demand for\n * embedding is created in such a way that the hosting app cannot introspect its content and cannot\n * interact with it.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInfo",
    "type" : "InlineSuggestionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentProvider",
    "type" : "IInlineContentProvider",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mInlineContentCallback",
    "type" : "InlineContentCallbackImpl",
    "comment" : "\n     * Used to keep a strong reference to the callback so it doesn't get garbage collected.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "sParcellingForInlineContentCallback",
    "type" : "Parcelling<InlineContentCallbackImpl>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<InlineSuggestion>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static InlineSuggestion newInlineSuggestion(@NonNull InlineSuggestionInfo info)",
    "returnType" : "InlineSuggestion",
    "comment" : "\n     * Creates a new {@link InlineSuggestion}, for testing purpose.\n     *\n     * @hide\n     ",
    "links" : [ "InlineSuggestion" ]
  }, {
    "name" : "public void inflate(@NonNull Context context, @NonNull Size size, @NonNull @CallbackExecutor Executor callbackExecutor, @NonNull Consumer<InlineContentView> callback)",
    "returnType" : "void",
    "comment" : "\n     * Inflates a view with the content of this suggestion at a specific size.\n     *\n     * <p> Each dimension of the size must satisfy one of the following conditions:\n     *\n     * <ol>\n     *     <li>between {@link android.widget.inline.InlinePresentationSpec#getMinSize()} and\n     * {@link android.widget.inline.InlinePresentationSpec#getMaxSize()} of the presentation spec\n     * from {@code mInfo}\n     *     <li>{@link ViewGroup.LayoutParams#WRAP_CONTENT}\n     * </ol>\n     *\n     * If the size is set to {@link\n     * ViewGroup.LayoutParams#WRAP_CONTENT}, then the size of the inflated view will be just large\n     * enough to fit the content, while still conforming to the min / max size specified by the\n     * {@link android.widget.inline.InlinePresentationSpec}.\n     *\n     * <p> The caller can attach an {@link android.view.View.OnClickListener} and/or an\n     * {@link android.view.View.OnLongClickListener} to the view in the {@code callback} to receive\n     * click and long click events on the view.\n     *\n     * @param context  Context in which to inflate the view.\n     * @param size     The size at which to inflate the suggestion. For each dimension, it maybe an\n     *                 exact value or {@link ViewGroup.LayoutParams#WRAP_CONTENT}.\n     * @param callback Callback for receiving the inflated view, where the {@link\n     *                 ViewGroup.LayoutParams} of the view is set as the actual size of the\n     *                 underlying remote view.\n     * @throws IllegalArgumentException If an invalid argument is passed.\n     * @throws IllegalStateException    If this method is already called.\n     ",
    "links" : [ "android.widget.inline.InlinePresentationSpec#getMinSize", "android.widget.inline.InlinePresentationSpec#getMaxSize", "ViewGroup.LayoutParams#WRAP_CONTENT", "android.widget.inline.InlinePresentationSpec", "android.view.View.OnClickListener", "android.view.View.OnLongClickListener", "ViewGroup.LayoutParams#WRAP_CONTENT" ]
  }, {
    "name" : "private static boolean isValid(int actual, int min, int max)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the {@code actual} length is within [min, max] or is {@link\n     * ViewGroup.LayoutParams#WRAP_CONTENT}.\n     ",
    "links" : [ ]
  }, {
    "name" : "private synchronized InlineContentCallbackImpl getInlineContentCallback(Context context, Executor callbackExecutor, Consumer<InlineContentView> callback)",
    "returnType" : "InlineContentCallbackImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InlineSuggestionInfo getInfo()",
    "returnType" : "InlineSuggestionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public IInlineContentProvider getContentProvider()",
    "returnType" : "IInlineContentProvider",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public InlineContentCallbackImpl getInlineContentCallback()",
    "returnType" : "InlineContentCallbackImpl",
    "comment" : "\n     * Used to keep a strong reference to the callback so it doesn't get garbage collected.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void __metadata()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mInfo", "mContentProvider", "mInlineContentCallback", "sParcellingForInlineContentCallback", "CREATOR" ],
  "methodNames" : [ "public static InlineSuggestion newInlineSuggestion(@NonNull InlineSuggestionInfo info)", "public void inflate(@NonNull Context context, @NonNull Size size, @NonNull @CallbackExecutor Executor callbackExecutor, @NonNull Consumer<InlineContentView> callback)", "private static boolean isValid(int actual, int min, int max)", "private synchronized InlineContentCallbackImpl getInlineContentCallback(Context context, Executor callbackExecutor, Consumer<InlineContentView> callback)", "public InlineSuggestionInfo getInfo()", "public IInlineContentProvider getContentProvider()", "public InlineContentCallbackImpl getInlineContentCallback()", "public String toString()", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "private void __metadata()" ]
}