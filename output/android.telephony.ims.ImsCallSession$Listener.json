{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/ImsCallSession.java",
  "packageName" : "android.telephony.ims",
  "className" : "Listener",
  "comment" : "\n     * Listener for events relating to an IMS session, such as when a session is being\n     * recieved (\"on ringing\") or a call is outgoing (\"on calling\").\n     * <p>Many of these events are also received by {@link ImsCall.Listener}.</p>\n     ",
  "links" : [ "ImsCall.Listener" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void callSessionInitiating(ImsCallSession session, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is initiating.\n         *\n         * see: {@link ImsCallSessionListener#callSessionInitiating(ImsCallProfile)}\n         ",
    "links" : [ "android.telephony.ims.aidl.IImsCallSessionListener#callSessionInitiating(ImsCallProfile)" ]
  }, {
    "name" : "public void callSessionInitiatingFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session failed before initiating was called.\n         *\n         * see: {@link ImsCallSessionListener#callSessionInitiatingFailed(ImsReasonInfo)}\n         ",
    "links" : [ "android.telephony.ims.aidl.IImsCallSessionListener#callSessionInitiatingFailed(ImsReasonInfo)" ]
  }, {
    "name" : "public void callSessionProgressing(ImsCallSession session, ImsStreamMediaProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is progressing.\n         *\n         * see: {@link ImsCallSessionListener#callSessionProgressing(ImsStreamMediaProfile)}\n         ",
    "links" : [ "android.telephony.ims.aidl.IImsCallSessionListener#callSessionProgressing(ImsStreamMediaProfile)" ]
  }, {
    "name" : "public void callSessionStarted(ImsCallSession session, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is established.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionStartFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session establishment is failed.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the session establishment failure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionTerminated(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is terminated.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the session termination\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionHeld(ImsCallSession session, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is in hold.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionHoldFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session hold is failed.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the session hold failure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionHoldReceived(ImsCallSession session, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session hold is received from the remote user.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionResumed(ImsCallSession session, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session resume is done.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionResumeFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session resume is failed.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the session resume failure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionResumeReceived(ImsCallSession session, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session resume is received from the remote user.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionMergeStarted(ImsCallSession session, ImsCallSession newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session merge has been started.  At this point, the {@code newSession}\n         * represents the session which has been initiated to the IMS conference server for the\n         * new merged conference.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param newSession the session object that is merged with an active & hold session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionMergeComplete(ImsCallSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session merge is successful and the merged session is active.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionMergeFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session merge has failed.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the call merge failure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionUpdated(ImsCallSession session, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is updated (except for hold/unhold).\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionUpdateFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session update is failed.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the session update failure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionUpdateReceived(ImsCallSession session, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session update is received from the remote user.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionConferenceExtended(ImsCallSession session, ImsCallSession newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is extended to the conference session.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param newSession the session object that is extended to the conference\n         *      from the active session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionConferenceExtendFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the conference extension is failed.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the conference extension failure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionConferenceExtendReceived(ImsCallSession session, ImsCallSession newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * Called when the conference extension is received from the remote user.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionInviteParticipantsRequestDelivered(ImsCallSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when the invitation request of the participants is delivered to the conference\n         * server.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionInviteParticipantsRequestFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the invitation request of the participants is failed.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the conference invitation failure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRemoveParticipantsRequestDelivered(ImsCallSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when the removal request of the participants is delivered to the conference\n         * server.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRemoveParticipantsRequestFailed(ImsCallSession session, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the removal request of the participants is failed.\n         *\n         * @param session the session object that carries out the IMS session\n         * @param reasonInfo detailed reason of the conference removal failure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionConferenceStateUpdated(ImsCallSession session, ImsConferenceState state)",
    "returnType" : "void",
    "comment" : "\n         * Called when the conference state is updated.\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionUssdMessageReceived(ImsCallSession session, int mode, String ussdMessage)",
    "returnType" : "void",
    "comment" : "\n         * Called when the USSD message is received from the network.\n         *\n         * @param mode mode of the USSD message (REQUEST / NOTIFY)\n         * @param ussdMessage USSD message\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionMayHandover(ImsCallSession session, int srcNetworkType, int targetNetworkType)",
    "returnType" : "void",
    "comment" : "\n         * Called when an {@link ImsCallSession} may handover from one network type to another.\n         * For example, the session may handover from WIFI to LTE if conditions are right.\n         * <p>\n         * If handover is attempted,\n         * {@link #callSessionHandover(ImsCallSession, int, int, ImsReasonInfo)} or\n         * {@link #callSessionHandoverFailed(ImsCallSession, int, int, ImsReasonInfo)} will be\n         * called to indicate the success or failure of the handover.\n         *\n         * @param session IMS session object\n         * @param srcNetworkType original network type\n         * @param targetNetworkType new network type\n         ",
    "links" : [ "#callSessionHandoverFailed(ImsCallSession", "com.android.ims.internal.IImsCallSession", "#callSessionHandover(ImsCallSession" ]
  }, {
    "name" : "public void callSessionHandover(ImsCallSession session, int srcNetworkType, int targetNetworkType, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when session network type changes\n         *\n         * @param session IMS session object\n         * @param srcNetworkType original network type\n         * @param targetNetworkType new network type\n         * @param reasonInfo\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionHandoverFailed(ImsCallSession session, int srcNetworkType, int targetNetworkType, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when session access technology change fails\n         *\n         * @param session IMS session object\n         * @param srcNetworkType original access technology\n         * @param targetNetworkType new access technology\n         * @param reasonInfo handover failure reason\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionTtyModeReceived(ImsCallSession session, int mode)",
    "returnType" : "void",
    "comment" : "\n         * Called when TTY mode of remote party changed\n         *\n         * @param session IMS session object\n         * @param mode TTY mode of remote party\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionMultipartyStateChanged(ImsCallSession session, boolean isMultiParty)",
    "returnType" : "void",
    "comment" : "\n         * Notifies of a change to the multiparty state for this {@code ImsCallSession}.\n         *\n         * @param session The call session.\n         * @param isMultiParty {@code true} if the session became multiparty, {@code false}\n         *      otherwise.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionSuppServiceReceived(ImsCallSession session, ImsSuppServiceNotification suppServiceInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session supplementary service is received\n         *\n         * @param session the session object that carries out the IMS session\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRttModifyRequestReceived(ImsCallSession session, ImsCallProfile callProfile)",
    "returnType" : "void",
    "comment" : "\n         * Received RTT modify request from Remote Party\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRttModifyResponseReceived(int status)",
    "returnType" : "void",
    "comment" : "\n         * Received response for RTT modify request\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRttMessageReceived(String rttMessage)",
    "returnType" : "void",
    "comment" : "\n         * Device received RTT message from Remote UE\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRttAudioIndicatorChanged(ImsStreamMediaProfile profile)",
    "returnType" : "void",
    "comment" : "\n         * While in call, there has been a change in RTT audio indicator.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionTransferred(@NonNull ImsCallSession session)",
    "returnType" : "void",
    "comment" : "\n         * Received success response for call transfer request.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionTransferFailed(@NonNull ImsCallSession session, @Nullable ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n         * Received failure response for call transfer request.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionDtmfReceived(char digit)",
    "returnType" : "void",
    "comment" : "\n         * Informs the framework of a DTMF digit which was received from the network.\n         * <p>\n         * According to <a href=\"http://tools.ietf.org/html/rfc2833\">RFC 2833 sec 3.10</a>,\n         * event 0 ~ 9 maps to decimal value 0 ~ 9, '*' to 10, '#' to 11, event 'A' ~ 'D' to\n         * 12 ~ 15.\n         * @param digit the DTMF digit\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callQualityChanged(CallQuality callQuality)",
    "returnType" : "void",
    "comment" : "\n         * Called when the IMS service reports a change to the call quality.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRtpHeaderExtensionsReceived(@NonNull Set<RtpHeaderExtension> extensions)",
    "returnType" : "void",
    "comment" : "\n         * Called when the IMS service reports incoming RTP header extension data.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionSendAnbrQuery(int mediaType, int direction, int bitsPerSecond)",
    "returnType" : "void",
    "comment" : "\n         * Called when radio to send ANBRQ message to the access network to query the desired\n         * bitrate.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void callSessionInitiating(ImsCallSession session, ImsCallProfile profile)", "public void callSessionInitiatingFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionProgressing(ImsCallSession session, ImsStreamMediaProfile profile)", "public void callSessionStarted(ImsCallSession session, ImsCallProfile profile)", "public void callSessionStartFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionTerminated(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionHeld(ImsCallSession session, ImsCallProfile profile)", "public void callSessionHoldFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionHoldReceived(ImsCallSession session, ImsCallProfile profile)", "public void callSessionResumed(ImsCallSession session, ImsCallProfile profile)", "public void callSessionResumeFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionResumeReceived(ImsCallSession session, ImsCallProfile profile)", "public void callSessionMergeStarted(ImsCallSession session, ImsCallSession newSession, ImsCallProfile profile)", "public void callSessionMergeComplete(ImsCallSession session)", "public void callSessionMergeFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionUpdated(ImsCallSession session, ImsCallProfile profile)", "public void callSessionUpdateFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionUpdateReceived(ImsCallSession session, ImsCallProfile profile)", "public void callSessionConferenceExtended(ImsCallSession session, ImsCallSession newSession, ImsCallProfile profile)", "public void callSessionConferenceExtendFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionConferenceExtendReceived(ImsCallSession session, ImsCallSession newSession, ImsCallProfile profile)", "public void callSessionInviteParticipantsRequestDelivered(ImsCallSession session)", "public void callSessionInviteParticipantsRequestFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionRemoveParticipantsRequestDelivered(ImsCallSession session)", "public void callSessionRemoveParticipantsRequestFailed(ImsCallSession session, ImsReasonInfo reasonInfo)", "public void callSessionConferenceStateUpdated(ImsCallSession session, ImsConferenceState state)", "public void callSessionUssdMessageReceived(ImsCallSession session, int mode, String ussdMessage)", "public void callSessionMayHandover(ImsCallSession session, int srcNetworkType, int targetNetworkType)", "public void callSessionHandover(ImsCallSession session, int srcNetworkType, int targetNetworkType, ImsReasonInfo reasonInfo)", "public void callSessionHandoverFailed(ImsCallSession session, int srcNetworkType, int targetNetworkType, ImsReasonInfo reasonInfo)", "public void callSessionTtyModeReceived(ImsCallSession session, int mode)", "public void callSessionMultipartyStateChanged(ImsCallSession session, boolean isMultiParty)", "public void callSessionSuppServiceReceived(ImsCallSession session, ImsSuppServiceNotification suppServiceInfo)", "public void callSessionRttModifyRequestReceived(ImsCallSession session, ImsCallProfile callProfile)", "public void callSessionRttModifyResponseReceived(int status)", "public void callSessionRttMessageReceived(String rttMessage)", "public void callSessionRttAudioIndicatorChanged(ImsStreamMediaProfile profile)", "public void callSessionTransferred(@NonNull ImsCallSession session)", "public void callSessionTransferFailed(@NonNull ImsCallSession session, @Nullable ImsReasonInfo reasonInfo)", "public void callSessionDtmfReceived(char digit)", "public void callQualityChanged(CallQuality callQuality)", "public void callSessionRtpHeaderExtensionsReceived(@NonNull Set<RtpHeaderExtension> extensions)", "public void callSessionSendAnbrQuery(int mediaType, int direction, int bitsPerSecond)" ],
  "variableNames" : [ ]
}