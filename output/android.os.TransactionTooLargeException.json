{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/TransactionTooLargeException.java",
  "packageName" : "android.os",
  "className" : "TransactionTooLargeException",
  "comment" : "\n * The Binder transaction failed because it was too large.\n * <p>\n * During a remote procedure call, the arguments and the return value of the call\n * are transferred as {@link Parcel} objects stored in the Binder transaction buffer.\n * If the arguments or the return value are too large to fit in the transaction buffer,\n * then the call will fail.  {@link TransactionTooLargeException} is thrown as a\n * heuristic when a transaction is large, and it fails, since these are the transactions\n * which are most likely to overfill the transaction buffer.\n * </p><p>\n * The Binder transaction buffer has a limited fixed size, currently 1MB, which\n * is shared by all transactions in progress for the process.  Consequently this\n * exception can be thrown when there are many transactions in progress even when\n * most of the individual transactions are of moderate size.\n * </p><p>\n * There are two possible outcomes when a remote procedure call throws\n * {@link TransactionTooLargeException}.  Either the client was unable to send\n * its request to the service (most likely if the arguments were too large to fit in\n * the transaction buffer), or the service was unable to send its response back\n * to the client (most likely if the return value was too large to fit\n * in the transaction buffer).  It is not possible to tell which of these outcomes\n * actually occurred.  The client should assume that a partial failure occurred.\n * </p><p>\n * The key to avoiding {@link TransactionTooLargeException} is to keep all\n * transactions relatively small.  Try to minimize the amount of memory needed to create\n * a {@link Parcel} for the arguments and the return value of the remote procedure call.\n * Avoid transferring huge arrays of strings or large bitmaps.\n * If possible, try to break up big requests into smaller pieces.\n * </p><p>\n * If you are implementing a service, it may help to impose size or complexity\n * contraints on the queries that clients can perform.  For example, if the result set\n * could become large, then don't allow the client to request more than a few records\n * at a time.  Alternately, instead of returning all of the available data all at once,\n * return the essential information first and make the client ask for additional information\n * later as needed.\n * </p>\n ",
  "links" : [ "android.os.TransactionTooLargeException", "android.os.Parcel" ],
  "variables" : [ ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ ]
}