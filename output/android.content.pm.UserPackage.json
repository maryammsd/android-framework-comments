{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/UserPackage.java",
  "packageName" : "android.content.pm",
  "className" : "UserPackage",
  "comment" : "\n * POJO to represent a package for a specific user ID.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ENABLE_CACHING",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_NUM_CACHED_ENTRIES_PER_USER",
    "type" : "int",
    "comment" : "\n     * The maximum number of entries to keep in the cache per user ID.\n     * The value should ideally be high enough to cover all packages on an end-user device,\n     * but low enough that stale or invalid packages would eventually (probably) get removed.\n     * This should benefit components that loop through all packages on a device and use this class,\n     * since being able to cache the objects for all packages on the device\n     * means we don't have to keep recreating the objects.\n     ",
    "links" : [ ]
  }, {
    "name" : "userId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "packageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCacheLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCache",
    "type" : "SparseArrayMap<String, UserPackage>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sUserIds",
    "type" : "int[]",
    "comment" : "\n     * Set of userIDs to cache objects for. We start off with an empty set, so there's no caching\n     * by default. The system will override with a valid set of userIDs in its process so that\n     * caching becomes active in the system process.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static UserPackage of(@UserIdInt int userId, @NonNull String packageName)",
    "returnType" : "UserPackage",
    "comment" : " Return an instance of this class representing the given userId + packageName combination. ",
    "links" : [ ]
  }, {
    "name" : "public static void removeFromCache(@UserIdInt int userId, @NonNull String packageName)",
    "returnType" : "void",
    "comment" : " Remove the specified app from the cache. ",
    "links" : [ ]
  }, {
    "name" : "public static void setValidUserIds(@NonNull int[] userIds)",
    "returnType" : "void",
    "comment" : " Indicate the list of valid user IDs on the device. ",
    "links" : [ ]
  }, {
    "name" : "public static int numEntriesForUser(int userId)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void maybePurgeRandomEntriesLocked(int userId)",
    "returnType" : "void",
    "comment" : " Purge a random set of entries if the cache size is too large. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String toString()", "public boolean equals(Object obj)", "public int hashCode()", "public static UserPackage of(@UserIdInt int userId, @NonNull String packageName)", "public static void removeFromCache(@UserIdInt int userId, @NonNull String packageName)", "public static void setValidUserIds(@NonNull int[] userIds)", "public static int numEntriesForUser(int userId)", "private static void maybePurgeRandomEntriesLocked(int userId)" ],
  "variableNames" : [ "ENABLE_CACHING", "MAX_NUM_CACHED_ENTRIES_PER_USER", "userId", "packageName", "sCacheLock", "sCache", "sUserIds" ]
}