{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/RuleBasedTransliterator.java",
  "packageName" : "android.icu.text",
  "className" : "Data",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "ruleSet",
    "type" : "TransliterationRuleSet",
    "comment" : "\n         * Rule table.  May be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "variableNames",
    "type" : "Map<String, char[]>",
    "comment" : "\n         * Map variable name (String) to variable (char[]).  A variable name\n         * corresponds to zero or more characters, stored in a char[] array in\n         * this hash.  One or more of these chars may also correspond to a\n         * UnicodeSet, in which case the character in the char[] in this hash is\n         * a stand-in: it is an index for a secondary lookup in\n         * data.variables.  The stand-in also represents the UnicodeSet in\n         * the stored rules.\n         ",
    "links" : [ ]
  }, {
    "name" : "variables",
    "type" : "Object[]",
    "comment" : "\n         * Map category variable (Character) to UnicodeMatcher or UnicodeReplacer.\n         * Variables that correspond to a set of characters are mapped\n         * from variable name to a stand-in character in data.variableNames.\n         * The stand-in then serves as a key in this hash to lookup the\n         * actual UnicodeSet object.  In addition, the stand-in is\n         * stored in the rule text to represent the set of characters.\n         * variables[i] represents character (variablesBase + i).\n         ",
    "links" : [ ]
  }, {
    "name" : "variablesBase",
    "type" : "char",
    "comment" : "\n         * The character that represents variables[0].  Characters\n         * variablesBase through variablesBase +\n         * variables.length - 1 represent UnicodeSet objects.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public UnicodeMatcher lookupMatcher(int standIn)",
    "returnType" : "UnicodeMatcher",
    "comment" : "\n         * Return the UnicodeMatcher represented by the given character, or\n         * null if none.\n         ",
    "links" : [ ]
  }, {
    "name" : "public UnicodeReplacer lookupReplacer(int standIn)",
    "returnType" : "UnicodeReplacer",
    "comment" : "\n         * Return the UnicodeReplacer represented by the given character, or\n         * null if none.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public UnicodeMatcher lookupMatcher(int standIn)", "public UnicodeReplacer lookupReplacer(int standIn)" ],
  "variableNames" : [ "ruleSet", "variableNames", "variables", "variablesBase" ]
}