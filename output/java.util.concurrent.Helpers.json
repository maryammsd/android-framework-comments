{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/Helpers.java",
  "packageName" : "java.util.concurrent",
  "className" : "Helpers",
  "comment" : " Shared implementation code for java.util.concurrent. ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " static String collectionToString(Collection<?> c)",
    "returnType" : "String",
    "comment" : "\n     * An implementation of Collection.toString() suitable for classes\n     * with locks.  Instead of holding a lock for the entire duration of\n     * toString(), or acquiring a lock for each call to Iterator.next(),\n     * we hold the lock only during the call to toArray() (less\n     * disruptive to other threads accessing the collection) and follows\n     * the maxim \"Never call foreign code while holding a lock\".\n     ",
    "links" : [ ]
  }, {
    "name" : " static String toString(Object[] a, int size, int charLength)",
    "returnType" : "String",
    "comment" : "\n     * Like Arrays.toString(), but caller guarantees that size > 0,\n     * each element with index 0 <= i < size is a non-null String,\n     * and charLength is the sum of the lengths of the input Strings.\n     ",
    "links" : [ ]
  }, {
    "name" : " static String mapEntryToString(Object key, Object val)",
    "returnType" : "String",
    "comment" : " Optimized form of: key + \"=\" + val ",
    "links" : [ ]
  }, {
    "name" : "private static String objectToString(Object x)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static String collectionToString(Collection<?> c)", " static String toString(Object[] a, int size, int charLength)", " static String mapEntryToString(Object key, Object val)", "private static String objectToString(Object x)" ],
  "variableNames" : [ ]
}