{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/accessibility/AccessibilityEventSource.java",
  "packageName" : "android.view.accessibility",
  "className" : "AccessibilityEventSource",
  "comment" : "\n * This interface is implemented by classes source of {@link AccessibilityEvent}s.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For more information about making applications accessible, read the\n * <a href=\"{@docRoot}guide/topics/ui/accessibility/index.html\">Accessibility</a>\n * developer guide.</p>\n * </div>\n ",
  "links" : [ "android.view.accessibility.AccessibilityEvent" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void sendAccessibilityEvent(int eventType)",
    "returnType" : "void",
    "comment" : "\n     * Handles the request for sending an {@link AccessibilityEvent} given\n     * the event type. The method must first check if accessibility is on\n     * via calling {@link AccessibilityManager#isEnabled() AccessibilityManager.isEnabled()},\n     * obtain an {@link AccessibilityEvent} from the event pool through calling\n     * {@link AccessibilityEvent#obtain(int) AccessibilityEvent.obtain(int)}, populate the\n     * event, and send it for dispatch via calling\n     * {@link AccessibilityManager#sendAccessibilityEvent(AccessibilityEvent)\n     * AccessibilityManager.sendAccessibilityEvent(AccessibilityEvent)}.\n     *\n     * @see AccessibilityEvent\n     * @see AccessibilityManager\n     *\n     * @param eventType The event type.\n     ",
    "links" : [ "android.view.accessibility.AccessibilityEvent#obtain(int)", "android.view.accessibility.AccessibilityEvent", "android.view.accessibility.AccessibilityManager#sendAccessibilityEvent(AccessibilityEvent)", "android.view.accessibility.AccessibilityManager#isEnabled()" ]
  }, {
    "name" : "public void sendAccessibilityEventUnchecked(AccessibilityEvent event)",
    "returnType" : "void",
    "comment" : "\n     * Handles the request for sending an {@link AccessibilityEvent}. The\n     * method does not guarantee to check if accessibility is on before\n     * sending the event for dispatch. It is responsibility of the caller\n     * to do the check via calling {@link AccessibilityManager#isEnabled()\n     * AccessibilityManager.isEnabled()}.\n     *\n     * @see AccessibilityEvent\n     * @see AccessibilityManager\n     *\n     * @param event The event.\n     ",
    "links" : [ "android.view.accessibility.AccessibilityEvent", "android.view.accessibility.AccessibilityManager#isEnabled()" ]
  } ],
  "methodNames" : [ "public void sendAccessibilityEvent(int eventType)", "public void sendAccessibilityEventUnchecked(AccessibilityEvent event)" ],
  "variableNames" : [ ]
}