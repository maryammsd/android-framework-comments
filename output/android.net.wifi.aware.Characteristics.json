{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/aware/Characteristics.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "Characteristics",
  "comment" : "\n * The characteristics of the Wi-Fi Aware implementation.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "KEY_MAX_SERVICE_NAME_LENGTH",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_MAX_SERVICE_SPECIFIC_INFO_LENGTH",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_MAX_MATCH_FILTER_LENGTH",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_SUPPORTED_DATA_PATH_CIPHER_SUITES",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_SUPPORTED_PAIRING_CIPHER_SUITES",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_IS_INSTANT_COMMUNICATION_MODE_SUPPORTED",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_MAX_NDP_NUMBER",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_MAX_PUBLISH_NUMBER",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_MAX_SUBSCRIBE_NUMBER",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_MAX_NDI_NUMBER",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_SUPPORT_NAN_PAIRING",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_SUPPORT_SUSPENSION",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mCharacteristics",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WIFI_AWARE_CIPHER_SUITE_NONE",
    "type" : "int",
    "comment" : "\n     * Wi-Fi Aware supported open (unencrypted) data-path.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_AWARE_CIPHER_SUITE_NCS_SK_128",
    "type" : "int",
    "comment" : "\n     * Wi-Fi Aware supported cipher suite representing NCS SK 128: 128 bit shared-key.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_AWARE_CIPHER_SUITE_NCS_SK_256",
    "type" : "int",
    "comment" : "\n     * Wi-Fi Aware supported cipher suite representing NCS SK 256: 256 bit shared-key.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_AWARE_CIPHER_SUITE_NCS_PK_128",
    "type" : "int",
    "comment" : "\n     * Wi-Fi Aware supported cipher suite representing NCS PK 2WDH 128: 128 bit public-key.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_AWARE_CIPHER_SUITE_NCS_PK_256",
    "type" : "int",
    "comment" : "\n     * Wi-Fi Aware supported cipher suite representing NCS 2WDH 256: 256 bit public-key.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_AWARE_CIPHER_SUITE_NCS_PK_PASN_128",
    "type" : "int",
    "comment" : "\n     * Wi-Fi Aware supported cipher suite representing NCS PASN 128: 128 bit public-key.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_AWARE_CIPHER_SUITE_NCS_PK_PASN_256",
    "type" : "int",
    "comment" : "\n     * Wi-Fi Aware supported cipher suite representing NCS PASN 256: 256 bit public-key.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Characteristics>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getMaxServiceNameLength()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum string length that can be used to specify a Aware service name. Restricts\n     * the parameters of the {@link PublishConfig.Builder#setServiceName(String)} and\n     * {@link SubscribeConfig.Builder#setServiceName(String)}.\n     *\n     * @return A positive integer, maximum string length of Aware service name.\n     ",
    "links" : [ "PublishConfig.Builder#setServiceName(String)", "SubscribeConfig.Builder#setServiceName(String)" ]
  }, {
    "name" : "public int getMaxServiceSpecificInfoLength()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum length of byte array that can be used to specify a Aware service specific\n     * information field: the arbitrary load used in discovery or the message length of Aware\n     * message exchange. Restricts the parameters of the\n     * {@link PublishConfig.Builder#setServiceSpecificInfo(byte[])},\n     * {@link SubscribeConfig.Builder#setServiceSpecificInfo(byte[])}, and\n     * {@link DiscoverySession#sendMessage(PeerHandle, int, byte[])}\n     * variants.\n     *\n     * @return A positive integer, maximum length of byte array for Aware messaging.\n     ",
    "links" : [ "PublishConfig.Builder#setServiceSpecificInfo(byte", "android.net.wifi.aware.DiscoverySession#sendMessage(PeerHandle", "SubscribeConfig.Builder#setServiceSpecificInfo(byte" ]
  }, {
    "name" : "public int getMaxMatchFilterLength()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum length of byte array that can be used to specify a Aware match filter.\n     * Restricts the parameters of the\n     * {@link PublishConfig.Builder#setMatchFilter(java.util.List)} and\n     * {@link SubscribeConfig.Builder#setMatchFilter(java.util.List)}.\n     *\n     * @return A positive integer, maximum length of byte array for Aware discovery match filter.\n     ",
    "links" : [ "PublishConfig.Builder#setMatchFilter(java.util.List)", "SubscribeConfig.Builder#setMatchFilter(java.util.List)" ]
  }, {
    "name" : "public int getNumberOfSupportedDataInterfaces()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum number of Aware data interfaces supported by the device.\n     *\n     * @return A positive integer, maximum number of Aware data interfaces supported by the device.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNumberOfSupportedPublishSessions()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum number of Aware publish sessions supported by the device.\n     * Use {@link AwareResources#getAvailablePublishSessionsCount()} to get the number of available\n     * publish sessions which are not currently used by any app.\n     *\n     * @return A positive integer, maximum number of publish sessions supported by the device.\n     ",
    "links" : [ "android.net.wifi.aware.AwareResources#getAvailablePublishSessionsCount()" ]
  }, {
    "name" : "public int getNumberOfSupportedSubscribeSessions()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum number of Aware subscribe session supported by the device.\n     * Use {@link AwareResources#getAvailableSubscribeSessionsCount()} to get the number of\n     * available subscribe sessions which are not currently used by any app.\n     *\n     * @return A positive integer, maximum number of subscribe sessions supported by the device.\n     ",
    "links" : [ "android.net.wifi.aware.AwareResources#getAvailableSubscribeSessionsCount()" ]
  }, {
    "name" : "public int getNumberOfSupportedDataPaths()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum number of Aware data paths(also known as NDPs - NAN Data Paths) supported\n     * by the device.\n     * Use {@link AwareResources#getAvailableDataPathsCount()} to get the number of available Aware\n     * data paths which are not currently used by any app.\n     *\n     * @return A positive integer, maximum number of Aware data paths supported by the device.\n     ",
    "links" : [ "android.net.wifi.aware.AwareResources#getAvailableDataPathsCount()" ]
  }, {
    "name" : "public boolean isInstantCommunicationModeSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Check if instant communication mode is supported by device. The instant communication mode is\n     * defined as per Wi-Fi Alliance (WFA) Wi-Fi Aware specifications version 3.1 Section 12.3.\n     * @return True if supported, false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAwarePairingSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Check if the Aware Pairing is supported. The Aware Pairing is defined as per Wi-Fi Alliance\n     * (WFA) Wi-Fi Aware specifications version 4.0 Section 7.6.\n     * @return True if supported, false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSuspensionSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Check if Aware Suspension is supported. Aware Suspension is a mechanism of putting an Aware\n     * connection in and out of a low-power mode while preserving the discovery sessions and data\n     * paths.\n     * @return True if supported, false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSupportedCipherSuites()",
    "returnType" : "int",
    "comment" : "\n     * Returns the set of cipher suites supported by the device for use in Wi-Fi Aware data-paths.\n     * The device automatically picks the strongest cipher suite when initiating a data-path setup.\n     *\n     * @return A set of flags from {@link #WIFI_AWARE_CIPHER_SUITE_NCS_SK_128},\n     * {@link #WIFI_AWARE_CIPHER_SUITE_NCS_SK_256}, {@link #WIFI_AWARE_CIPHER_SUITE_NCS_PK_128},\n     * or {@link #WIFI_AWARE_CIPHER_SUITE_NCS_PK_256}\n     ",
    "links" : [ "#WIFI_AWARE_CIPHER_SUITE_NCS_SK_256", "#WIFI_AWARE_CIPHER_SUITE_NCS_PK_256", "#WIFI_AWARE_CIPHER_SUITE_NCS_SK_128", "#WIFI_AWARE_CIPHER_SUITE_NCS_PK_128" ]
  }, {
    "name" : "public int getSupportedPairingCipherSuites()",
    "returnType" : "int",
    "comment" : "\n     * Returns the set of cipher suites supported by the device for use in Wi-Fi Aware pairing.\n     *\n     * @return A set of flags from {@link #WIFI_AWARE_CIPHER_SUITE_NCS_PK_PASN_256},\n     * or {@link #WIFI_AWARE_CIPHER_SUITE_NCS_PK_PASN_256}\n     ",
    "links" : [ "#WIFI_AWARE_CIPHER_SUITE_NCS_PK_PASN_256" ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getMaxServiceNameLength()", "public int getMaxServiceSpecificInfoLength()", "public int getMaxMatchFilterLength()", "public int getNumberOfSupportedDataInterfaces()", "public int getNumberOfSupportedPublishSessions()", "public int getNumberOfSupportedSubscribeSessions()", "public int getNumberOfSupportedDataPaths()", "public boolean isInstantCommunicationModeSupported()", "public boolean isAwarePairingSupported()", "public boolean isSuspensionSupported()", "public int getSupportedCipherSuites()", "public int getSupportedPairingCipherSuites()", "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()" ],
  "variableNames" : [ "KEY_MAX_SERVICE_NAME_LENGTH", "KEY_MAX_SERVICE_SPECIFIC_INFO_LENGTH", "KEY_MAX_MATCH_FILTER_LENGTH", "KEY_SUPPORTED_DATA_PATH_CIPHER_SUITES", "KEY_SUPPORTED_PAIRING_CIPHER_SUITES", "KEY_IS_INSTANT_COMMUNICATION_MODE_SUPPORTED", "KEY_MAX_NDP_NUMBER", "KEY_MAX_PUBLISH_NUMBER", "KEY_MAX_SUBSCRIBE_NUMBER", "KEY_MAX_NDI_NUMBER", "KEY_SUPPORT_NAN_PAIRING", "KEY_SUPPORT_SUSPENSION", "mCharacteristics", "WIFI_AWARE_CIPHER_SUITE_NONE", "WIFI_AWARE_CIPHER_SUITE_NCS_SK_128", "WIFI_AWARE_CIPHER_SUITE_NCS_SK_256", "WIFI_AWARE_CIPHER_SUITE_NCS_PK_128", "WIFI_AWARE_CIPHER_SUITE_NCS_PK_256", "WIFI_AWARE_CIPHER_SUITE_NCS_PK_PASN_128", "WIFI_AWARE_CIPHER_SUITE_NCS_PK_PASN_256", "CREATOR" ]
}