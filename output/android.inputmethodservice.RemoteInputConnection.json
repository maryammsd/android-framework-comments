{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/inputmethodservice/RemoteInputConnection.java",
  "packageName" : "android.inputmethodservice",
  "className" : "RemoteInputConnection",
  "comment" : "\n * Takes care of remote method invocations of {@link InputConnection} in the IME side.\n *\n * <p>This class works as a proxy to forward API calls on {@link InputConnection} to\n * {@link android.view.inputmethod.RemoteInputConnectionImpl} running on the IME client\n * (editor app) process then waits replies as needed.</p>\n *\n * <p>See also {@link IRemoteInputConnection} for the actual {@link android.os.Binder} IPC protocols\n * under the hood.</p>\n ",
  "links" : [ "android.os.Binder", "android.view.inputmethod.InputConnection", "android.view.inputmethod.RemoteInputConnectionImpl", "com.android.internal.inputmethod.IRemoteInputConnection" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_WAIT_TIME_MILLIS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInvoker",
    "type" : "IRemoteInputConnectionInvoker",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImsInternal",
    "type" : "InputMethodServiceInternalHolder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCancellationGroup",
    "type" : "CancellationGroup",
    "comment" : "\n     * Signaled when the system decided to take away IME focus from the target app.\n     *\n     * <p>This is expected to be signaled immediately when the IME process receives\n     * {@link com.android.internal.inputmethod.IInputMethod#unbindInput()}.</p>\n     ",
    "links" : [ "com.android.internal.inputmethod.IInputMethod#unbindInput()" ]
  } ],
  "methods" : [ {
    "name" : "public boolean isSameConnection(@NonNull IRemoteInputConnection inputConnection)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getTextAfterCursor(@IntRange(from = 0) int length, int flags)",
    "returnType" : "CharSequence",
    "comment" : "\n     * See {@link InputConnection#getTextAfterCursor(int, int)}.\n     ",
    "links" : [ "android.view.inputmethod.InputConnection#getTextAfterCursor(int" ]
  }, {
    "name" : "public CharSequence getTextBeforeCursor(@IntRange(from = 0) int length, int flags)",
    "returnType" : "CharSequence",
    "comment" : "\n     * See {@link InputConnection#getTextBeforeCursor(int, int)}.\n     ",
    "links" : [ "android.view.inputmethod.InputConnection#getTextBeforeCursor(int" ]
  }, {
    "name" : "public CharSequence getSelectedText(int flags)",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SurroundingText getSurroundingText(@IntRange(from = 0) int beforeLength, @IntRange(from = 0) int afterLength, int flags)",
    "returnType" : "SurroundingText",
    "comment" : "\n     * Get {@link SurroundingText} around the current cursor, with <var>beforeLength</var>\n     * characters of text before the cursor, <var>afterLength</var> characters of text after the\n     * cursor, and all of the selected text.\n     * @param beforeLength The expected length of the text before the cursor\n     * @param afterLength The expected length of the text after the cursor\n     * @param flags Supplies additional options controlling how the text is returned. May be either\n     *              0 or {@link #GET_TEXT_WITH_STYLES}.\n     * @return the surrounding text around the cursor position; the length of the returned text\n     * might be less than requested.  It could also be {@code null} when the editor or system could\n     * not support this protocol.\n     ",
    "links" : [ "#GET_TEXT_WITH_STYLES", "android.view.inputmethod.SurroundingText" ]
  }, {
    "name" : "public int getCursorCapsMode(int reqModes)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ExtractedText getExtractedText(ExtractedTextRequest request, int flags)",
    "returnType" : "ExtractedText",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean commitText(CharSequence text, int newCursorPosition)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean commitText(@NonNull CharSequence text, int newCursorPosition, @Nullable TextAttribute textAttribute)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void notifyUserActionIfNecessary()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean commitCompletion(CompletionInfo text)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean commitCorrection(CorrectionInfo correctionInfo)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setSelection(int start, int end)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performEditorAction(int actionCode)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performContextMenuAction(int id)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setComposingRegion(int start, int end)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setComposingRegion(int start, int end, @Nullable TextAttribute textAttribute)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setComposingText(CharSequence text, int newCursorPosition)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setComposingText(CharSequence text, int newCursorPosition, @Nullable TextAttribute textAttribute)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean finishComposingText()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean beginBatchEdit()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean endBatchEdit()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean sendKeyEvent(KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean clearMetaKeyStates(int states)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean deleteSurroundingText(int beforeLength, int afterLength)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean deleteSurroundingTextInCodePoints(int beforeLength, int afterLength)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean reportFullscreenMode(boolean enabled)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performSpellCheck()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performPrivateCommand(String action, Bundle data)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void performHandwritingGesture(@NonNull HandwritingGesture gesture, @Nullable @CallbackExecutor Executor executor, @Nullable IntConsumer consumer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean previewHandwritingGesture(@NonNull PreviewableHandwritingGesture gesture, @Nullable CancellationSignal cancellationSignal)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean requestCursorUpdates(int cursorUpdateMode)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean requestCursorUpdates(@CursorUpdateMode int cursorUpdateMode, @CursorUpdateFilter int cursorUpdateFilter)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void requestTextBoundsInfo(@NonNull RectF bounds, @NonNull @CallbackExecutor Executor executor, @NonNull Consumer<TextBoundsInfoResult> consumer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Handler getHandler()",
    "returnType" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void closeConnection()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean commitContent(InputContentInfo inputContentInfo, int flags, Bundle opts)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setImeConsumesInput(boolean imeConsumesInput)",
    "returnType" : "boolean",
    "comment" : "\n     * See {@link InputConnection#setImeConsumesInput(boolean)}.\n     ",
    "links" : [ "android.view.inputmethod.InputConnection#setImeConsumesInput(boolean)" ]
  }, {
    "name" : "public boolean replaceText(int start, int end, @NonNull CharSequence text, int newCursorPosition, @Nullable TextAttribute textAttribute)",
    "returnType" : "boolean",
    "comment" : " See {@link InputConnection#replaceText(int, int, CharSequence, int, TextAttribute)}. ",
    "links" : [ "android.view.inputmethod.InputConnection#replaceText(int" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isSameConnection(@NonNull IRemoteInputConnection inputConnection)", "public CharSequence getTextAfterCursor(@IntRange(from = 0) int length, int flags)", "public CharSequence getTextBeforeCursor(@IntRange(from = 0) int length, int flags)", "public CharSequence getSelectedText(int flags)", "public SurroundingText getSurroundingText(@IntRange(from = 0) int beforeLength, @IntRange(from = 0) int afterLength, int flags)", "public int getCursorCapsMode(int reqModes)", "public ExtractedText getExtractedText(ExtractedTextRequest request, int flags)", "public boolean commitText(CharSequence text, int newCursorPosition)", "public boolean commitText(@NonNull CharSequence text, int newCursorPosition, @Nullable TextAttribute textAttribute)", "private void notifyUserActionIfNecessary()", "public boolean commitCompletion(CompletionInfo text)", "public boolean commitCorrection(CorrectionInfo correctionInfo)", "public boolean setSelection(int start, int end)", "public boolean performEditorAction(int actionCode)", "public boolean performContextMenuAction(int id)", "public boolean setComposingRegion(int start, int end)", "public boolean setComposingRegion(int start, int end, @Nullable TextAttribute textAttribute)", "public boolean setComposingText(CharSequence text, int newCursorPosition)", "public boolean setComposingText(CharSequence text, int newCursorPosition, @Nullable TextAttribute textAttribute)", "public boolean finishComposingText()", "public boolean beginBatchEdit()", "public boolean endBatchEdit()", "public boolean sendKeyEvent(KeyEvent event)", "public boolean clearMetaKeyStates(int states)", "public boolean deleteSurroundingText(int beforeLength, int afterLength)", "public boolean deleteSurroundingTextInCodePoints(int beforeLength, int afterLength)", "public boolean reportFullscreenMode(boolean enabled)", "public boolean performSpellCheck()", "public boolean performPrivateCommand(String action, Bundle data)", "public void performHandwritingGesture(@NonNull HandwritingGesture gesture, @Nullable @CallbackExecutor Executor executor, @Nullable IntConsumer consumer)", "public boolean previewHandwritingGesture(@NonNull PreviewableHandwritingGesture gesture, @Nullable CancellationSignal cancellationSignal)", "public boolean requestCursorUpdates(int cursorUpdateMode)", "public boolean requestCursorUpdates(@CursorUpdateMode int cursorUpdateMode, @CursorUpdateFilter int cursorUpdateFilter)", "public void requestTextBoundsInfo(@NonNull RectF bounds, @NonNull @CallbackExecutor Executor executor, @NonNull Consumer<TextBoundsInfoResult> consumer)", "public Handler getHandler()", "public void closeConnection()", "public boolean commitContent(InputContentInfo inputContentInfo, int flags, Bundle opts)", "public boolean setImeConsumesInput(boolean imeConsumesInput)", "public boolean replaceText(int start, int end, @NonNull CharSequence text, int newCursorPosition, @Nullable TextAttribute textAttribute)", "public String toString()" ],
  "variableNames" : [ "TAG", "MAX_WAIT_TIME_MILLIS", "mInvoker", "mImsInternal", "mCancellationGroup" ]
}