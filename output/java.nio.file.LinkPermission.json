{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/file/LinkPermission.java",
  "packageName" : "java.nio.file",
  "className" : "LinkPermission",
  "comment" : "\n * The {@code Permission} class for link creation operations.\n *\n * <p> The following table provides a summary description of what the permission\n * allows, and discusses the risks of granting code the permission.\n *\n * <table class=\"striped\">\n * <caption style=\"display:none\">Table shows permission target name, what the permission allows, and associated risks</caption>\n * <thead>\n * <tr>\n * <th scope=\"col\">Permission Target Name</th>\n * <th scope=\"col\">What the Permission Allows</th>\n * <th scope=\"col\">Risks of Allowing this Permission</th>\n * </tr>\n * </thead>\n * <tbody>\n * <tr>\n *   <th scope=\"row\">hard</th>\n *   <td> Ability to add an existing file to a directory. This is sometimes\n *   known as creating a link, or hard link. </td>\n *   <td> Extreme care should be taken when granting this permission. It allows\n *   linking to any file or directory in the file system thus allowing the\n *   attacker access to all files. </td>\n * </tr>\n * <tr>\n *   <th scope=\"row\">symbolic</th>\n *   <td> Ability to create symbolic links. </td>\n *   <td> Extreme care should be taken when granting this permission. It allows\n *   linking to any file or directory in the file system thus allowing the\n *   attacker to access to all files. </td>\n * </tr>\n * </tbody>\n * </table>\n *\n * @since 1.7\n *\n * @see Files#createLink\n * @see Files#createSymbolicLink\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void checkName(String name)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void checkName(String name)" ],
  "variableNames" : [ "serialVersionUID" ]
}