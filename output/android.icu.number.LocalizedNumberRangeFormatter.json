{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/number/LocalizedNumberRangeFormatter.java",
  "packageName" : "android.icu.number",
  "className" : "LocalizedNumberRangeFormatter",
  "comment" : "\n * A NumberRangeFormatter that has a locale associated with it; this means .formatRange() methods are available.\n *\n * Instances of this class are immutable and thread-safe.\n *\n * @author sffc\n * @see NumberRangeFormatter\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "fImpl",
    "type" : "NumberRangeFormatterImpl",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public FormattedNumberRange formatRange(int first, int second)",
    "returnType" : "FormattedNumberRange",
    "comment" : "\n     * Format the given integers to a string using the settings specified in the NumberRangeFormatter fluent setting\n     * chain.\n     *\n     * @param first\n     *            The first number in the range, usually to the left in LTR locales.\n     * @param second\n     *            The second number in the range, usually to the right in LTR locales.\n     * @return A FormattedNumberRange object; call .toString() to get the string.\n     * @see NumberRangeFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : "public FormattedNumberRange formatRange(double first, double second)",
    "returnType" : "FormattedNumberRange",
    "comment" : "\n     * Format the given doubles to a string using the settings specified in the NumberRangeFormatter fluent setting\n     * chain.\n     *\n     * @param first\n     *            The first number in the range, usually to the left in LTR locales.\n     * @param second\n     *            The second number in the range, usually to the right in LTR locales.\n     * @return A FormattedNumberRange object; call .toString() to get the string.\n     * @see NumberRangeFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : "public FormattedNumberRange formatRange(Number first, Number second)",
    "returnType" : "FormattedNumberRange",
    "comment" : "\n     * Format the given Numbers to a string using the settings specified in the NumberRangeFormatter fluent setting\n     * chain.\n     *\n     * @param first\n     *            The first number in the range, usually to the left in LTR locales.\n     * @param second\n     *            The second number in the range, usually to the right in LTR locales.\n     * @return A FormattedNumberRange object; call .toString() to get the string.\n     * @throws IllegalArgumentException if first or second is null\n     * @see NumberRangeFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : "public UnlocalizedNumberRangeFormatter withoutLocale()",
    "returnType" : "UnlocalizedNumberRangeFormatter",
    "comment" : "\n     * Disassociate the locale from this formatter.\n     *\n     * @return The fluent chain.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : " FormattedNumberRange formatImpl(DecimalQuantity first, DecimalQuantity second, boolean equalBeforeRounding)",
    "returnType" : "FormattedNumberRange",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " LocalizedNumberRangeFormatter create(int key, Object value)",
    "returnType" : "LocalizedNumberRangeFormatter",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public FormattedNumberRange formatRange(int first, int second)", "public FormattedNumberRange formatRange(double first, double second)", "public FormattedNumberRange formatRange(Number first, Number second)", "public UnlocalizedNumberRangeFormatter withoutLocale()", " FormattedNumberRange formatImpl(DecimalQuantity first, DecimalQuantity second, boolean equalBeforeRounding)", " LocalizedNumberRangeFormatter create(int key, Object value)" ],
  "variableNames" : [ "fImpl" ]
}