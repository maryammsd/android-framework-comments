{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/renderscript/ScriptIntrinsic3DLUT.java",
  "packageName" : "android.renderscript",
  "className" : "ScriptIntrinsic3DLUT",
  "comment" : "\n *\n * Intrinsic for converting RGB to RGBA by using a 3D lookup table.  The\n * incoming r,g,b values are use as normalized x,y,z coordinates into a 3D\n * allocation.  The 8 nearest values are sampled and linearly interpolated.  The\n * result is placed in the output.\n *\n * @deprecated Renderscript has been deprecated in API level 31. Please refer to the <a\n * href=\"https://developer.android.com/guide/topics/renderscript/migration-guide\">migration\n * guide</a> for the proposed alternatives.\n *",
  "links" : [ ],
  "variables" : [ {
    "name" : "mLUT",
    "type" : "Allocation",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElement",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static ScriptIntrinsic3DLUT create(RenderScript rs, Element e)",
    "returnType" : "ScriptIntrinsic3DLUT",
    "comment" : "\n     * Supported elements types are {@link Element#U8_4}\n     *\n     * The defaults tables are identity.\n     *\n     * @param rs The RenderScript context\n     * @param e Element type for intputs and outputs\n     *\n     * @return ScriptIntrinsic3DLUT\n     ",
    "links" : [ "android.renderscript.Element#U8_4" ]
  }, {
    "name" : "public void setLUT(Allocation lut)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forEach(Allocation ain, Allocation aout)",
    "returnType" : "void",
    "comment" : "\n     * Invoke the kernel and apply the lookup to each cell of ain\n     * and copy to aout.\n     *\n     * @param ain Input allocation\n     * @param aout Output allocation\n     ",
    "links" : [ ]
  }, {
    "name" : "public void forEach(Allocation ain, Allocation aout, Script.LaunchOptions opt)",
    "returnType" : "void",
    "comment" : "\n     * Invoke the kernel and apply the lookup to each cell of ain\n     * and copy to aout.\n     *\n     * @param ain Input allocation\n     * @param aout Output allocation\n     * @param opt Launch options for kernel\n     ",
    "links" : [ ]
  }, {
    "name" : "public Script.KernelID getKernelID()",
    "returnType" : "Script.KernelID",
    "comment" : "\n     * Get a KernelID for this intrinsic kernel.\n     *\n     * @return Script.KernelID The KernelID object.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static ScriptIntrinsic3DLUT create(RenderScript rs, Element e)", "public void setLUT(Allocation lut)", "public void forEach(Allocation ain, Allocation aout)", "public void forEach(Allocation ain, Allocation aout, Script.LaunchOptions opt)", "public Script.KernelID getKernelID()" ],
  "variableNames" : [ "mLUT", "mElement" ]
}