{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/util/Slog.java",
  "packageName" : "android.util",
  "className" : "Slog",
  "comment" : "\n * API for sending log output to the {@link Log#LOG_ID_SYSTEM} buffer.\n *\n * <p>Should be used by system components. Use {@code adb logcat --buffer=system} to fetch the logs.\n *\n * @see Log\n * @hide\n ",
  "links" : [ "android.util.Log#LOG_ID_SYSTEM" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static int v(@Nullable String tag, @NonNull String msg)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#VERBOSE} level.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     *\n     * @see Log#v(String, String)\n     ",
    "links" : [ "android.util.Log#VERBOSE" ]
  }, {
    "name" : "public static int v(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#VERBOSE} level, attaching stack trace of the {@code tr} to\n     * the end of the log statement.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     * @param tr an exception to log.\n     *\n     * @see Log#v(String, String, Throwable)\n     ",
    "links" : [ "android.util.Log#VERBOSE" ]
  }, {
    "name" : "public static int d(@Nullable String tag, @NonNull String msg)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#DEBUG} level.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     *\n     * @see Log#d(String, String)\n     ",
    "links" : [ "android.util.Log#DEBUG" ]
  }, {
    "name" : "public static int d(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#DEBUG} level, attaching stack trace of the {@code tr} to\n     * the end of the log statement.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     * @param tr an exception to log.\n     *\n     * @see Log#d(String, String, Throwable)\n     ",
    "links" : [ "android.util.Log#DEBUG" ]
  }, {
    "name" : "public static int i(@Nullable String tag, @NonNull String msg)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#INFO} level.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     *\n     * @see Log#i(String, String)\n     ",
    "links" : [ "android.util.Log#INFO" ]
  }, {
    "name" : "public static int i(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#INFO} level, attaching stack trace of the {@code tr} to\n     * the end of the log statement.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     * @param tr an exception to log.\n     *\n     * @see Log#i(String, String, Throwable)\n     ",
    "links" : [ "android.util.Log#INFO" ]
  }, {
    "name" : "public static int w(@Nullable String tag, @NonNull String msg)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#WARN} level.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     *\n     * @see Log#w(String, String)\n     ",
    "links" : [ "android.util.Log#WARN" ]
  }, {
    "name" : "public static int w(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#WARN} level, attaching stack trace of the {@code tr} to\n     * the end of the log statement.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     * @param tr an exception to log.\n     *\n     * @see Log#w(String, String, Throwable)\n     ",
    "links" : [ "android.util.Log#WARN" ]
  }, {
    "name" : "public static int w(@Nullable String tag, @Nullable Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Logs stack trace of {@code tr} at {@link Log#WARN} level.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param tr an exception to log.\n     *\n     * @see Log#w(String, Throwable)\n     ",
    "links" : [ "android.util.Log#WARN" ]
  }, {
    "name" : "public static int e(@Nullable String tag, @NonNull String msg)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#ERROR} level.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     *\n     * @see Log#e(String, String)\n     ",
    "links" : [ "android.util.Log#ERROR" ]
  }, {
    "name" : "public static int e(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Logs {@code msg} at {@link Log#ERROR} level, attaching stack trace of the {@code tr} to\n     * the end of the log statement.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     * @param tr an exception to log.\n     *\n     * @see Log#e(String, String, Throwable)\n     ",
    "links" : [ "android.util.Log#ERROR" ]
  }, {
    "name" : "public static int wtf(@Nullable String tag, @NonNull String msg)",
    "returnType" : "int",
    "comment" : "\n     * Logs a condition that should never happen.\n     *\n     * <p>\n     * Similar to {@link Log#wtf(String, String)}, but will never cause the caller to crash, and\n     * will always be handled asynchronously. Primarily to be used by the system server.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     *\n     * @see Log#wtf(String, String)\n     ",
    "links" : [ "android.util.Log#wtf(String" ]
  }, {
    "name" : "public static void wtfQuiet(@Nullable String tag, @NonNull String msg)",
    "returnType" : "void",
    "comment" : "\n     * Similar to {@link #wtf(String, String)}, but does not output anything to the log.\n     ",
    "links" : [ "#wtf(String" ]
  }, {
    "name" : "public static int wtfStack(@Nullable String tag, @NonNull String msg)",
    "returnType" : "int",
    "comment" : "\n     * Logs a condition that should never happen, attaching the full call stack to the log.\n     *\n     * <p>\n     * Similar to {@link Log#wtfStack(String, String)}, but will never cause the caller to crash,\n     * and will always be handled asynchronously. Primarily to be used by the system server.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     *\n     * @see Log#wtfStack(String, String)\n     ",
    "links" : [ "android.util.Log#wtfStack(String" ]
  }, {
    "name" : "public static int wtf(@Nullable String tag, @Nullable Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Logs a condition that should never happen, attaching stack trace of the {@code tr} to the\n     * end of the log statement.\n     *\n     * <p>\n     * Similar to {@link Log#wtf(String, Throwable)}, but will never cause the caller to crash,\n     * and will always be handled asynchronously. Primarily to be used by the system server.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param tr an exception to log.\n     *\n     * @see Log#wtf(String, Throwable)\n     ",
    "links" : [ "android.util.Log#wtf(String" ]
  }, {
    "name" : "public static int wtf(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Logs a condition that should never happen, attaching stack trace of the {@code tr} to the\n     * end of the log statement.\n     *\n     * <p>\n     * Similar to {@link Log#wtf(String, String, Throwable)}, but will never cause the caller to\n     * crash, and will always be handled asynchronously. Primarily to be used by the system server.\n     *\n     * @param tag identifies the source of a log message.  It usually represents system service,\n     *            e.g. {@code PackageManager}.\n     * @param msg the message to log.\n     * @param tr an exception to log.\n     *\n     * @see Log#wtf(String, String, Throwable)\n     ",
    "links" : [ "android.util.Log#wtf(String" ]
  }, {
    "name" : "public static int println(@Log.Level int priority, @Nullable String tag, @NonNull String msg)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int v(@Nullable String tag, @NonNull String msg)", "public static int v(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)", "public static int d(@Nullable String tag, @NonNull String msg)", "public static int d(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)", "public static int i(@Nullable String tag, @NonNull String msg)", "public static int i(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)", "public static int w(@Nullable String tag, @NonNull String msg)", "public static int w(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)", "public static int w(@Nullable String tag, @Nullable Throwable tr)", "public static int e(@Nullable String tag, @NonNull String msg)", "public static int e(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)", "public static int wtf(@Nullable String tag, @NonNull String msg)", "public static void wtfQuiet(@Nullable String tag, @NonNull String msg)", "public static int wtfStack(@Nullable String tag, @NonNull String msg)", "public static int wtf(@Nullable String tag, @Nullable Throwable tr)", "public static int wtf(@Nullable String tag, @NonNull String msg, @Nullable Throwable tr)", "public static int println(@Log.Level int priority, @Nullable String tag, @NonNull String msg)" ],
  "variableNames" : [ ]
}