{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothQualityReport.java",
  "packageName" : "android.bluetooth",
  "className" : "BqrVsLsto",
  "comment" : "\n     * This class provides the System APIs to access the vendor specific part of Approaching LSTO\n     * event.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBasebandStats",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSlotsUsed",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCxmDenials",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxSkipped",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRfLoss",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNativeClock",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastTxAckTimestamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<BqrVsLsto>",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getConnState()",
    "returnType" : "int",
    "comment" : "\n         * Get the conn state of sco.\n         *\n         * @return the conn state\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static String connStateToString(int connectionState)",
    "returnType" : "String",
    "comment" : "\n         * Get the string of conn state of sco.\n         *\n         * @param connectionState connection state of sco\n         * @return the string of conn state\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getBasebandStats()",
    "returnType" : "long",
    "comment" : "\n         * Get the baseband statistics.\n         *\n         * @return the baseband statistics\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getSlotsUsed()",
    "returnType" : "long",
    "comment" : "\n         * Get the count of slots allocated for current connection.\n         *\n         * @return the count of slots allocated for current connection\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getCxmDenials()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of Coex denials.\n         *\n         * @return the count of CXM denials\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getTxSkipped()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of TX skipped when no poll from remote device.\n         *\n         * @return the count of TX skipped\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getRfLoss()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of RF loss.\n         *\n         * @return the count of RF loss\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getNativeClock()",
    "returnType" : "long",
    "comment" : "\n         * Get the timestamp when issue happened. time_ms: N * 0.3125 ms (1 Bluetooth Clock).\n         *\n         * @return the timestamp when issue happened\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getLastTxAckTimestamp()",
    "returnType" : "long",
    "comment" : "\n         * Get the timestamp of last TX ACK. time_ms: N * 0.3125 ms (1 Bluetooth Clock).\n         *\n         * @return the timestamp of last TX ACK\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n         * Describe contents.\n         *\n         * @return 0\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n         * Write BqrVsLsto to parcel.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " BqrVsLsto to String. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getConnState()", "public static String connStateToString(int connectionState)", "public long getBasebandStats()", "public long getSlotsUsed()", "public int getCxmDenials()", "public int getTxSkipped()", "public int getRfLoss()", "public long getNativeClock()", "public long getLastTxAckTimestamp()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()" ],
  "variableNames" : [ "TAG", "mConnState", "mBasebandStats", "mSlotsUsed", "mCxmDenials", "mTxSkipped", "mRfLoss", "mNativeClock", "mLastTxAckTimestamp", "CREATOR" ]
}