{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/MediaRouteButton.java",
  "packageName" : "android.app",
  "className" : "MediaRouteButton",
  "comment" : "",
  "variables" : [ {
    "name" : "mRouter",
    "type" : "MediaRouter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "MediaRouterCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRouteTypes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAttachedToWindow",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRemoteIndicator",
    "type" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRemoteActive",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsConnecting",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtendedSettingsClickListener",
    "type" : "OnClickListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHECKED_STATE_SET",
    "type" : "int[]",
    "comment" : " The checked state is used when connected to a remote route.",
    "links" : [ ]
  }, {
    "name" : "ACTIVATED_STATE_SET",
    "type" : "int[]",
    "comment" : " The activated state is used while connecting to a remote route.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getRouteTypes()",
    "returnType" : "int",
    "comment" : "\n     * Gets the media route types for filtering the routes that the user can\n     * select using the media route chooser dialog.\n     *\n     * @return The route types.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setRouteTypes(int types)",
    "returnType" : "void",
    "comment" : "\n     * Sets the types of routes that will be shown in the media route chooser dialog\n     * launched by this button.\n     *\n     * @param types The route types to match.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setExtendedSettingsClickListener(OnClickListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void showDialog()",
    "returnType" : "void",
    "comment" : "\n     * Show the route chooser or controller dialog.\n     * <p>\n     * If the default route is selected or if the currently selected route does\n     * not match the {@link #getRouteTypes route types}, then shows the route chooser dialog.\n     * Otherwise, shows the route controller dialog to offer the user\n     * a choice to disconnect from the route or perform other control actions\n     * such as setting the route's volume.\n     * </p><p>\n     * This will attach a {@link DialogFragment} to the containing Activity.\n     * </p>\n     ",
    "links" : [ "#getRouteTypes", "DialogFragment" ]
  }, {
    "name" : " boolean showDialogInternal()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Activity getActivity()",
    "returnType" : "Activity",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setContentDescription(CharSequence contentDescription)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performClick()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int[] onCreateDrawableState(int extraSpace)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void drawableStateChanged()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setRemoteIndicatorDrawable(Drawable d)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean verifyDrawable(@NonNull Drawable who)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void jumpDrawablesToCurrentState()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setVisibility(int visibility)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAttachedToWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDetachedFromWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onDraw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void refreshRoute()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mRouter", "mCallback", "mRouteTypes", "mAttachedToWindow", "mRemoteIndicator", "mRemoteActive", "mIsConnecting", "mMinWidth", "mMinHeight", "mExtendedSettingsClickListener", "CHECKED_STATE_SET", "ACTIVATED_STATE_SET" ],
  "methodNames" : [ "public int getRouteTypes()", "public void setRouteTypes(int types)", "public void setExtendedSettingsClickListener(OnClickListener listener)", "public void showDialog()", " boolean showDialogInternal()", "private Activity getActivity()", "public void setContentDescription(CharSequence contentDescription)", "public boolean performClick()", "protected int[] onCreateDrawableState(int extraSpace)", "protected void drawableStateChanged()", "private void setRemoteIndicatorDrawable(Drawable d)", "protected boolean verifyDrawable(@NonNull Drawable who)", "public void jumpDrawablesToCurrentState()", "public void setVisibility(int visibility)", "public void onAttachedToWindow()", "public void onDetachedFromWindow()", "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "protected void onDraw(Canvas canvas)", "private void refreshRoute()" ]
}