{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/View.java",
  "packageName" : "android.view",
  "className" : "OnDragListener",
  "comment" : "\n     * Interface definition for a listener that's invoked when a drag event is dispatched to this\n     * view. The listener is invoked before the view's own\n     * {@link #onDragEvent(DragEvent)} method. To fall back to the view's\n     * {@code onDragEvent(DragEvent)} behavior, return {@code false} from the listener method.\n     *\n     * <div class=\"special reference\">\n     *   <h3>Developer Guides</h3>\n     *   <p>For a guide to implementing drag and drop features, see the\n     *   <a href=\"{@docRoot}guide/topics/ui/drag-drop.html\">Drag and drop</a> developer guide.</p>\n     * </div>\n     ",
  "links" : [ "#onDragEvent(DragEvent)" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " boolean onDrag(View v, DragEvent event)",
    "returnType" : "boolean",
    "comment" : "\n         * Called when a drag event is dispatched to a view. Enables listeners to override the\n         * base behavior provided by {@link #onDragEvent(DragEvent)}.\n         *\n         * @param v The {@code View} that received the drag event.\n         * @param event The event object for the drag event.\n         * @return {@code true} if the drag event was handled successfully; {@code false}, if the\n         *   drag event was not handled. <b>Note:</b> A {@code false} return value triggers the\n         *   view's {@link #onDragEvent(DragEvent)} handler.\n         ",
    "links" : [ "#onDragEvent(DragEvent)" ]
  } ],
  "methodNames" : [ " boolean onDrag(View v, DragEvent event)" ],
  "variableNames" : [ ]
}