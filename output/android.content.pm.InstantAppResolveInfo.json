{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/InstantAppResolveInfo.java",
  "packageName" : "android.content.pm",
  "className" : "InstantAppResolveInfo",
  "comment" : "\n * Describes an externally resolvable instant application. There are three states that this class\n * can represent: <p/>\n * <ul>\n *     <li>\n *         The first, usable only for non http/s intents, implies that the resolver cannot\n *         immediately resolve this intent and would prefer that resolution be deferred to the\n *         instant app installer. Represent this state with {@link #InstantAppResolveInfo(Bundle)}.\n *         If the {@link android.content.Intent} has the scheme set to http/s and a set of digest\n *         prefixes were passed into one of the resolve methods in\n *         {@link android.app.InstantAppResolverService}, this state cannot be used.\n *     </li>\n *     <li>\n *         The second represents a partial match and is constructed with any of the other\n *         constructors. By setting one or more of the {@link Nullable}arguments to null, you\n *         communicate to the resolver in response to\n *         {@link android.app.InstantAppResolverService#onGetInstantAppResolveInfo(Intent, int[],\n *                String, InstantAppResolverService.InstantAppResolutionCallback)}\n *         that you need a 2nd round of resolution to complete the request.\n *     </li>\n *     <li>\n *         The third represents a complete match and is constructed with all @Nullable parameters\n *         populated.\n *     </li>\n * </ul>\n * @hide\n ",
  "links" : [ "android.app.InstantAppResolverService#onGetInstantAppResolveInfo(Intent", "android.annotation.Nullable", "#InstantAppResolveInfo(Bundle)", "android.content.Intent", "android.app.InstantAppResolverService" ],
  "variables" : [ {
    "name" : "SHA_ALGORITHM",
    "type" : "String",
    "comment" : " Algorithm that will be used to generate the domain digest ",
    "links" : [ ]
  }, {
    "name" : "EMPTY_DIGEST",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDigest",
    "type" : "InstantAppDigest",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFilters",
    "type" : "List<InstantAppIntentFilter>",
    "comment" : " The filters used to match domain ",
    "links" : [ ]
  }, {
    "name" : "mVersionCode",
    "type" : "long",
    "comment" : " The version code of the app that this class resolves to ",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : " Data about the app that should be passed along to the Instant App installer on resolve ",
    "links" : [ ]
  }, {
    "name" : "mShouldLetInstallerDecide",
    "type" : "boolean",
    "comment" : "\n     * A flag that indicates that the resolver is aware that an app may match, but would prefer\n     * that the installer get the sanitized intent to decide.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<InstantAppResolveInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean shouldLetInstallerDecide()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the resolver is aware that an app may match, but would prefer\n     * that the installer get the sanitized intent to decide. This should not be true for\n     * resolutions that include a host and will be ignored in such cases.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getDigestBytes()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getDigestPrefix()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<InstantAppIntentFilter> getIntentFilters()",
    "returnType" : "List<InstantAppIntentFilter>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getVersionCode()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated Use {@link #getLongVersionCode} instead.\n     ",
    "links" : [ "#getLongVersionCode" ]
  }, {
    "name" : "public long getLongVersionCode()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean shouldLetInstallerDecide()", "public byte[] getDigestBytes()", "public int getDigestPrefix()", "public String getPackageName()", "public List<InstantAppIntentFilter> getIntentFilters()", "public int getVersionCode()", "public long getLongVersionCode()", "public Bundle getExtras()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)" ],
  "variableNames" : [ "SHA_ALGORITHM", "EMPTY_DIGEST", "mDigest", "mPackageName", "mFilters", "mVersionCode", "mExtras", "mShouldLetInstallerDecide", "CREATOR" ]
}