{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/atomic/AtomicLongFieldUpdater.java",
  "packageName" : "java.util.concurrent.atomic",
  "className" : "CASUpdater",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "U",
    "type" : "Unsafe",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "offset",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cclass",
    "type" : "Class<?>",
    "comment" : "\n         * if field is protected, the subclass constructing updater, else\n         * the same as tclass\n         ",
    "links" : [ ]
  }, {
    "name" : "tclass",
    "type" : "Class<T>",
    "comment" : " class holding the field ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private final void accessCheck(T obj)",
    "returnType" : "void",
    "comment" : "\n         * Checks that target argument is instance of cclass.  On\n         * failure, throws cause.\n         ",
    "links" : [ ]
  }, {
    "name" : "private final void throwAccessCheckException(T obj)",
    "returnType" : "void",
    "comment" : "\n         * Throws access exception if accessCheck failed due to\n         * protected access, else ClassCastException.\n         ",
    "links" : [ ]
  }, {
    "name" : "public final boolean compareAndSet(T obj, long expect, long update)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean weakCompareAndSet(T obj, long expect, long update)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void set(T obj, long newValue)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void lazySet(T obj, long newValue)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long get(T obj)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long getAndSet(T obj, long newValue)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long getAndAdd(T obj, long delta)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long getAndIncrement(T obj)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long getAndDecrement(T obj)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long incrementAndGet(T obj)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long decrementAndGet(T obj)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long addAndGet(T obj, long delta)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private final void accessCheck(T obj)", "private final void throwAccessCheckException(T obj)", "public final boolean compareAndSet(T obj, long expect, long update)", "public final boolean weakCompareAndSet(T obj, long expect, long update)", "public final void set(T obj, long newValue)", "public final void lazySet(T obj, long newValue)", "public final long get(T obj)", "public final long getAndSet(T obj, long newValue)", "public final long getAndAdd(T obj, long delta)", "public final long getAndIncrement(T obj)", "public final long getAndDecrement(T obj)", "public final long incrementAndGet(T obj)", "public final long decrementAndGet(T obj)", "public final long addAndGet(T obj, long delta)" ],
  "variableNames" : [ "U", "offset", "cclass", "tclass" ]
}