{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/invoke/MethodType.java",
  "packageName" : "java.lang.invoke",
  "className" : "ConcurrentWeakInternSet",
  "comment" : "\n     * Simple implementation of weak concurrent intern set.\n     *\n     * @param <T> interned type\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "map",
    "type" : "ConcurrentMap<WeakEntry<T>, WeakEntry<T>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "stale",
    "type" : "ReferenceQueue<T>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public T get(T elem)",
    "returnType" : "T",
    "comment" : "\n         * Get the existing interned element.\n         * This method returns null if no element is interned.\n         *\n         * @param elem element to look up\n         * @return the interned element\n         ",
    "links" : [ ]
  }, {
    "name" : "public T add(T elem)",
    "returnType" : "T",
    "comment" : "\n         * Interns the element.\n         * Always returns non-null element, matching the one in the intern set.\n         * Under the race against another add(), it can return <i>different</i>\n         * element, if another thread beats us to interning it.\n         *\n         * @param elem element to add\n         * @return element that was actually added\n         ",
    "links" : [ ]
  }, {
    "name" : "private void expungeStaleElements()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public T get(T elem)", "public T add(T elem)", "private void expungeStaleElements()" ],
  "variableNames" : [ "map", "stale" ]
}