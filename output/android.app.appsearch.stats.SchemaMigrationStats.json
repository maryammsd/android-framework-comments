{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/stats/SchemaMigrationStats.java",
  "packageName" : "android.app.appsearch.stats",
  "className" : "SchemaMigrationStats",
  "comment" : "\n * Class holds detailed stats for Schema migration.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SchemaMigrationStats>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NO_MIGRATION",
    "type" : "int",
    "comment" : " This SetSchema call is not relative to a SchemaMigration case. ",
    "links" : [ ]
  }, {
    "name" : "FIRST_CALL_GET_INCOMPATIBLE",
    "type" : "int",
    "comment" : " This is the first SetSchema call in Migration cases to get all incompatible changes. ",
    "links" : [ ]
  }, {
    "name" : "SECOND_CALL_APPLY_NEW_SCHEMA",
    "type" : "int",
    "comment" : " This is the second SetSchema call in Migration cases to apply new schema changes ",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDatabase",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatusCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutorAcquisitionLatencyMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalLatencyMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGetSchemaLatencyMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQueryAndTransformLatencyMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFirstSetSchemaLatencyMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsFirstSetSchemaSuccess",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSecondSetSchemaLatencyMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSaveDocumentLatencyMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalNeedMigratedDocumentCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMigrationFailureCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalSuccessMigratedDocumentCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : " Returns calling package name. ",
    "links" : [ ]
  }, {
    "name" : "public String getDatabase()",
    "returnType" : "String",
    "comment" : " Returns calling database name. ",
    "links" : [ ]
  }, {
    "name" : "public int getStatusCode()",
    "returnType" : "int",
    "comment" : " Returns status of the schema migration action. ",
    "links" : [ ]
  }, {
    "name" : "public int getExecutorAcquisitionLatencyMillis()",
    "returnType" : "int",
    "comment" : " Gets the latency for waiting the executor. ",
    "links" : [ ]
  }, {
    "name" : "public int getTotalLatencyMillis()",
    "returnType" : "int",
    "comment" : " Gets total latency for the schema migration action in milliseconds. ",
    "links" : [ ]
  }, {
    "name" : "public int getGetSchemaLatencyMillis()",
    "returnType" : "int",
    "comment" : " Returns GetSchema latency in milliseconds. ",
    "links" : [ ]
  }, {
    "name" : "public int getQueryAndTransformLatencyMillis()",
    "returnType" : "int",
    "comment" : "\n     * Returns latency of querying all documents that need to be migrated to new version and\n     * transforming documents to new version in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFirstSetSchemaLatencyMillis()",
    "returnType" : "int",
    "comment" : "\n     * Returns latency of first SetSchema action in milliseconds.\n     *\n     * <p>If all schema fields are backward compatible, the schema will be successful set to Icing.\n     * Otherwise, we will retrieve incompatible types here.\n     *\n     * <p>Please see {@link SetSchemaRequest} for what is \"incompatible\".\n     ",
    "links" : [ "android.app.appsearch.SetSchemaRequest" ]
  }, {
    "name" : "public boolean isFirstSetSchemaSuccess()",
    "returnType" : "boolean",
    "comment" : " Returns whether the first SetSchema action success. ",
    "links" : [ ]
  }, {
    "name" : "public int getSecondSetSchemaLatencyMillis()",
    "returnType" : "int",
    "comment" : "\n     * Returns latency of second SetSchema action in milliseconds.\n     *\n     * <p>If all schema fields are backward compatible, the schema will be successful set to Icing\n     * in the first setSchema action and this value will be 0. Otherwise, schema types will be set\n     * to Icing by this action.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSaveDocumentLatencyMillis()",
    "returnType" : "int",
    "comment" : " Returns latency of putting migrated document to Icing lib in milliseconds. ",
    "links" : [ ]
  }, {
    "name" : "public int getTotalNeedMigratedDocumentCount()",
    "returnType" : "int",
    "comment" : " Returns number of document that need to be migrated to another version. ",
    "links" : [ ]
  }, {
    "name" : "public int getMigrationFailureCount()",
    "returnType" : "int",
    "comment" : " Returns number of {@link android.app.appsearch.SetSchemaResponse.MigrationFailure}. ",
    "links" : [ "android.app.appsearch.SetSchemaResponse.MigrationFailure" ]
  }, {
    "name" : "public int getTotalSuccessMigratedDocumentCount()",
    "returnType" : "int",
    "comment" : " Returns number of successfully migrated and saved in Icing. ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getPackageName()", "public String getDatabase()", "public int getStatusCode()", "public int getExecutorAcquisitionLatencyMillis()", "public int getTotalLatencyMillis()", "public int getGetSchemaLatencyMillis()", "public int getQueryAndTransformLatencyMillis()", "public int getFirstSetSchemaLatencyMillis()", "public boolean isFirstSetSchemaSuccess()", "public int getSecondSetSchemaLatencyMillis()", "public int getSaveDocumentLatencyMillis()", "public int getTotalNeedMigratedDocumentCount()", "public int getMigrationFailureCount()", "public int getTotalSuccessMigratedDocumentCount()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "CREATOR", "NO_MIGRATION", "FIRST_CALL_GET_INCOMPATIBLE", "SECOND_CALL_APPLY_NEW_SCHEMA", "mPackageName", "mDatabase", "mStatusCode", "mExecutorAcquisitionLatencyMillis", "mTotalLatencyMillis", "mGetSchemaLatencyMillis", "mQueryAndTransformLatencyMillis", "mFirstSetSchemaLatencyMillis", "mIsFirstSetSchemaSuccess", "mSecondSetSchemaLatencyMillis", "mSaveDocumentLatencyMillis", "mTotalNeedMigratedDocumentCount", "mMigrationFailureCount", "mTotalSuccessMigratedDocumentCount" ]
}