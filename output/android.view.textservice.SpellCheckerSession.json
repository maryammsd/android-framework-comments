{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/textservice/SpellCheckerSession.java",
  "packageName" : "android.view.textservice",
  "className" : "SpellCheckerSession",
  "comment" : "\n * The SpellCheckerSession interface provides the per client functionality of SpellCheckerService.\n *\n *\n * <a name=\"Applications\"></a>\n * <h3>Applications</h3>\n *\n * <p>In most cases, applications that are using the standard\n * {@link android.widget.TextView} or its subclasses will have little they need\n * to do to work well with spell checker services.  The main things you need to\n * be aware of are:</p>\n *\n * <ul>\n * <li> Properly set the {@link android.R.attr#inputType} in your editable\n * text views, so that the spell checker will have enough context to help the\n * user in editing text in them.\n * </ul>\n *\n * <p>For the rare people amongst us writing client applications that use the spell checker service\n * directly, you will need to use {@link #getSuggestions(TextInfo, int)} or\n * {@link #getSuggestions(TextInfo[], int, boolean)} for obtaining results from the spell checker\n * service by yourself.</p>\n *\n * <h3>Security</h3>\n *\n * <p>There are a lot of security issues associated with spell checkers,\n * since they could monitor all the text being sent to them\n * through, for instance, {@link android.widget.TextView}.\n * The Android spell checker framework also allows\n * arbitrary third party spell checkers, so care must be taken to restrict their\n * selection and interactions.</p>\n *\n * <p>Here are some key points about the security architecture behind the\n * spell checker framework:</p>\n *\n * <ul>\n * <li>Only the system is allowed to directly access a spell checker framework's\n * {@link android.service.textservice.SpellCheckerService} interface, via the\n * {@link android.Manifest.permission#BIND_TEXT_SERVICE} permission.  This is\n * enforced in the system by not binding to a spell checker service that does\n * not require this permission.\n *\n * <li>The user must explicitly enable a new spell checker in settings before\n * they can be enabled, to confirm with the system that they know about it\n * and want to make it available for use.\n * </ul>\n *\n ",
  "links" : [ "android.Manifest.permission#BIND_TEXT_SERVICE", "#getSuggestions(TextInfo", "android.R.attr#inputType", "android.widget.TextView", "android.service.textservice.SpellCheckerService" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SERVICE_META_DATA",
    "type" : "String",
    "comment" : "\n     * Name under which a SpellChecker service component publishes information about itself.\n     * This meta-data must reference an XML resource.\n     *",
    "links" : [ ]
  }, {
    "name" : "MSG_ON_GET_SUGGESTION_MULTIPLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_ON_GET_SUGGESTION_MULTIPLE_FOR_SENTENCE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInternalListener",
    "type" : "InternalListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextServicesManager",
    "type" : "TextServicesManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSpellCheckerInfo",
    "type" : "SpellCheckerInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSpellCheckerSessionListener",
    "type" : "SpellCheckerSessionListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSpellCheckerSessionListenerImpl",
    "type" : "SpellCheckerSessionListenerImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isSessionDisconnected()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if the connection to a text service of this session is disconnected and not\n     * alive.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SpellCheckerInfo getSpellChecker()",
    "returnType" : "SpellCheckerInfo",
    "comment" : "\n     * Get the spell checker service info this spell checker session has.\n     * @return SpellCheckerInfo for the specified locale.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void cancel()",
    "returnType" : "void",
    "comment" : "\n     * Cancel pending and running spell check tasks\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Finish this session and allow TextServicesManagerService to disconnect the bound spell\n     * checker.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void getSentenceSuggestions(TextInfo[] textInfos, int suggestionsLimit)",
    "returnType" : "void",
    "comment" : "\n     * Get suggestions from the specified sentences\n     * @param textInfos an array of text metadata for a spell checker\n     * @param suggestionsLimit the maximum number of suggestions that will be returned\n     ",
    "links" : [ ]
  }, {
    "name" : "public void getSuggestions(TextInfo textInfo, int suggestionsLimit)",
    "returnType" : "void",
    "comment" : "\n     * Get candidate strings for a substring of the specified text.\n     * @param textInfo text metadata for a spell checker\n     * @param suggestionsLimit the maximum number of suggestions that will be returned\n     * @deprecated use {@link SpellCheckerSession#getSentenceSuggestions(TextInfo[], int)} instead\n     ",
    "links" : [ "com.android.internal.textservice.ISpellCheckerSession#getSentenceSuggestions(TextInfo" ]
  }, {
    "name" : "public void getSuggestions(TextInfo[] textInfos, int suggestionsLimit, boolean sequentialWords)",
    "returnType" : "void",
    "comment" : "\n     * A batch process of getSuggestions\n     * @param textInfos an array of text metadata for a spell checker\n     * @param suggestionsLimit the maximum number of suggestions that will be returned\n     * @param sequentialWords true if textInfos can be treated as sequential words.\n     * @deprecated use {@link SpellCheckerSession#getSentenceSuggestions(TextInfo[], int)} instead\n     ",
    "links" : [ "com.android.internal.textservice.ISpellCheckerSession#getSentenceSuggestions(TextInfo" ]
  }, {
    "name" : " void handleOnGetSuggestionsMultiple(SuggestionsInfo[] suggestionsInfos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void handleOnGetSentenceSuggestionsMultiple(SentenceSuggestionsInfo[] suggestionsInfos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ITextServicesSessionListener getTextServicesSessionListener()",
    "returnType" : "ITextServicesSessionListener",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public ISpellCheckerSessionListener getSpellCheckerSessionListener()",
    "returnType" : "ISpellCheckerSessionListener",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isSessionDisconnected()", "public SpellCheckerInfo getSpellChecker()", "public void cancel()", "public void close()", "public void getSentenceSuggestions(TextInfo[] textInfos, int suggestionsLimit)", "public void getSuggestions(TextInfo textInfo, int suggestionsLimit)", "public void getSuggestions(TextInfo[] textInfos, int suggestionsLimit, boolean sequentialWords)", " void handleOnGetSuggestionsMultiple(SuggestionsInfo[] suggestionsInfos)", " void handleOnGetSentenceSuggestionsMultiple(SentenceSuggestionsInfo[] suggestionsInfos)", "protected void finalize() throws Throwable", "public ITextServicesSessionListener getTextServicesSessionListener()", "public ISpellCheckerSessionListener getSpellCheckerSessionListener()" ],
  "variableNames" : [ "TAG", "DBG", "SERVICE_META_DATA", "MSG_ON_GET_SUGGESTION_MULTIPLE", "MSG_ON_GET_SUGGESTION_MULTIPLE_FOR_SENTENCE", "mInternalListener", "mTextServicesManager", "mSpellCheckerInfo", "mSpellCheckerSessionListener", "mSpellCheckerSessionListenerImpl", "mExecutor", "mGuard" ]
}