{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/XPathContext.java",
  "packageName" : "org.apache.xpath",
  "className" : "XPathExpressionContext",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public XPathContext getXPathContext()",
    "returnType" : "XPathContext",
    "comment" : "\n     * Return the XPathContext associated with this XPathExpressionContext.\n     * Extensions should use this judiciously and only when special processing\n     * requirements cannot be met another way.  Consider requesting an enhancement\n     * to the ExpressionContext interface to avoid having to call this method.\n     * @return the XPathContext associated with this XPathExpressionContext.\n     ",
    "links" : [ ]
  }, {
    "name" : "public DTMManager getDTMManager()",
    "returnType" : "DTMManager",
    "comment" : "\n     * Return the DTMManager object.  Though XPathContext context extends \n     * the DTMManager, it really is a proxy for the real DTMManager.  If a \n     * caller needs to make a lot of calls to the DTMManager, it is faster \n     * if it gets the real one from this function.\n     ",
    "links" : [ ]
  }, {
    "name" : "public org.w3c.dom.Node getContextNode()",
    "returnType" : "org.w3c.dom.Node",
    "comment" : "\n     * Get the current context node.\n     * @return The current context node.\n     ",
    "links" : [ ]
  }, {
    "name" : "public org.w3c.dom.traversal.NodeIterator getContextNodes()",
    "returnType" : "org.w3c.dom.traversal.NodeIterator",
    "comment" : "\n     * Get the current context node list.\n     * @return An iterator for the current context list, as\n     * defined in XSLT.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ErrorListener getErrorListener()",
    "returnType" : "ErrorListener",
    "comment" : "\n     * Get the error listener.\n     * @return The registered error listener.\n     ",
    "links" : [ ]
  }, {
    "name" : "public double toNumber(org.w3c.dom.Node n)",
    "returnType" : "double",
    "comment" : "\n     * Get the value of a node as a number.\n     * @param n Node to be converted to a number.  May be null.\n     * @return value of n as a number.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString(org.w3c.dom.Node n)",
    "returnType" : "String",
    "comment" : "\n     * Get the value of a node as a string.\n     * @param n Node to be converted to a string.  May be null.\n     * @return value of n as a string, or an empty string if n is null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final XObject getVariableOrParam(org.apache.xml.utils.QName qname) throws javax.xml.transform.TransformerException",
    "returnType" : "XObject",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public XPathContext getXPathContext()", "public DTMManager getDTMManager()", "public org.w3c.dom.Node getContextNode()", "public org.w3c.dom.traversal.NodeIterator getContextNodes()", "public ErrorListener getErrorListener()", "public double toNumber(org.w3c.dom.Node n)", "public String toString(org.w3c.dom.Node n)", "public final XObject getVariableOrParam(org.apache.xml.utils.QName qname) throws javax.xml.transform.TransformerException" ],
  "variableNames" : [ ]
}