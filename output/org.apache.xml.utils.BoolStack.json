{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/utils/BoolStack.java",
  "packageName" : "org.apache.xml.utils",
  "className" : "BoolStack",
  "comment" : "\n * Simple stack for boolean values.\n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_values",
    "type" : "boolean[]",
    "comment" : " Array of boolean values          ",
    "links" : [ ]
  }, {
    "name" : "m_allocatedSize",
    "type" : "int",
    "comment" : " Array size allocated           ",
    "links" : [ ]
  }, {
    "name" : "m_index",
    "type" : "int",
    "comment" : " Index into the array of booleans          ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final int size()",
    "returnType" : "int",
    "comment" : "\n   * Get the length of the list.\n   *\n   * @return Current length of the list\n   ",
    "links" : [ ]
  }, {
    "name" : "public final void clear()",
    "returnType" : "void",
    "comment" : "\n   * Clears the stack.\n   *\n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean push(boolean val)",
    "returnType" : "boolean",
    "comment" : "\n   * Pushes an item onto the top of this stack.\n   *\n   *\n   * @param val the boolean to be pushed onto this stack.\n   * @return  the <code>item</code> argument.\n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean pop()",
    "returnType" : "boolean",
    "comment" : "\n   * Removes the object at the top of this stack and returns that\n   * object as the value of this function.\n   *\n   * @return     The object at the top of this stack.\n   * @throws  EmptyStackException  if this stack is empty.\n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean popAndTop()",
    "returnType" : "boolean",
    "comment" : "\n   * Removes the object at the top of this stack and returns the\n   * next object at the top as the value of this function.\n   *\n   *\n   * @return Next object to the top or false if none there\n   ",
    "links" : [ ]
  }, {
    "name" : "public final void setTop(boolean b)",
    "returnType" : "void",
    "comment" : "\n   * Set the item at the top of this stack  \n   *\n   *\n   * @param b Object to set at the top of this stack\n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean peek()",
    "returnType" : "boolean",
    "comment" : "\n   * Looks at the object at the top of this stack without removing it\n   * from the stack.\n   *\n   * @return     the object at the top of this stack.\n   * @throws  EmptyStackException  if this stack is empty.\n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean peekOrFalse()",
    "returnType" : "boolean",
    "comment" : "\n   * Looks at the object at the top of this stack without removing it\n   * from the stack.  If the stack is empty, it returns false.\n   *\n   * @return     the object at the top of this stack.\n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean peekOrTrue()",
    "returnType" : "boolean",
    "comment" : "\n   * Looks at the object at the top of this stack without removing it\n   * from the stack.  If the stack is empty, it returns true.\n   *\n   * @return     the object at the top of this stack.\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "\n   * Tests if this stack is empty.\n   *\n   * @return  <code>true</code> if this stack is empty;\n   *          <code>false</code> otherwise.\n   ",
    "links" : [ ]
  }, {
    "name" : "private void grow()",
    "returnType" : "void",
    "comment" : "\n   * Grows the size of the stack\n   *\n   ",
    "links" : [ ]
  }, {
    "name" : "public Object clone() throws CloneNotSupportedException",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final int size()", "public final void clear()", "public final boolean push(boolean val)", "public final boolean pop()", "public final boolean popAndTop()", "public final void setTop(boolean b)", "public final boolean peek()", "public final boolean peekOrFalse()", "public final boolean peekOrTrue()", "public boolean isEmpty()", "private void grow()", "public Object clone() throws CloneNotSupportedException" ],
  "variableNames" : [ "m_values", "m_allocatedSize", "m_index" ]
}