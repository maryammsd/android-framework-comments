{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/TimeZoneAdapter.java",
  "packageName" : "android.icu.impl",
  "className" : "TimeZoneAdapter",
  "comment" : "\n * <code>TimeZoneAdapter</code> wraps a android.icu.util.TimeZone\n * subclass and inherits from java.util.TimeZone.\n * Without this class, we would need to 'port' java.util.Date to\n * android.icu.util as well, so that Date could interoperate properly\n * with the android.icu.util TimeZone and Calendar classes.  With this\n * class, we can use java.util.Date together with android.icu.util\n * classes.\n *\n * @see android.icu.util.TimeZone#setDefault\n * @author Alan Liu\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : " Generated by serialver from JDK 1.4.1_01",
    "links" : [ ]
  }, {
    "name" : "zone",
    "type" : "TimeZone",
    "comment" : "\n     * The contained android.icu.util.TimeZone object.  Must not be null.\n     * We delegate all methods to this object.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static java.util.TimeZone wrap(android.icu.util.TimeZone tz)",
    "returnType" : "java.util.TimeZone",
    "comment" : "\n     * Given a java.util.TimeZone, wrap it in the appropriate adapter\n     * subclass of android.icu.util.TimeZone and return the adapter.\n     ",
    "links" : [ ]
  }, {
    "name" : "public android.icu.util.TimeZone unwrap()",
    "returnType" : "android.icu.util.TimeZone",
    "comment" : "\n     * Return the java.util.TimeZone wrapped by this object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setID(String ID)",
    "returnType" : "void",
    "comment" : "\n     * TimeZone API; calls through to wrapped time zone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasSameRules(java.util.TimeZone other)",
    "returnType" : "boolean",
    "comment" : "\n     * TimeZone API; calls through to wrapped time zone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getOffset(int era, int year, int month, int day, int dayOfWeek, int millis)",
    "returnType" : "int",
    "comment" : "\n     * TimeZone API; calls through to wrapped time zone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRawOffset()",
    "returnType" : "int",
    "comment" : "\n     * TimeZone API; calls through to wrapped time zone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setRawOffset(int offsetMillis)",
    "returnType" : "void",
    "comment" : "\n     * TimeZone API; calls through to wrapped time zone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean useDaylightTime()",
    "returnType" : "boolean",
    "comment" : "\n     * TimeZone API; calls through to wrapped time zone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean inDaylightTime(Date date)",
    "returnType" : "boolean",
    "comment" : "\n     * TimeZone API; calls through to wrapped time zone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "\n     * Boilerplate API; calls through to wrapped object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public synchronized int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * Boilerplate API; calls through to wrapped object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * Boilerplate API; calls through to wrapped object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a string representation of this object.\n     * @return  a string representation of this object.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static java.util.TimeZone wrap(android.icu.util.TimeZone tz)", "public android.icu.util.TimeZone unwrap()", "public void setID(String ID)", "public boolean hasSameRules(java.util.TimeZone other)", "public int getOffset(int era, int year, int month, int day, int dayOfWeek, int millis)", "public int getRawOffset()", "public void setRawOffset(int offsetMillis)", "public boolean useDaylightTime()", "public boolean inDaylightTime(Date date)", "public Object clone()", "public synchronized int hashCode()", "public boolean equals(Object obj)", "public String toString()" ],
  "variableNames" : [ "serialVersionUID", "zone" ]
}