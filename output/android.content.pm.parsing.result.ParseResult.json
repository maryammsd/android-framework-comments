{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/parsing/result/ParseResult.java",
  "packageName" : "android.content.pm.parsing.result",
  "className" : "ParseResult",
  "comment" : "\n * The output side of {@link ParseInput}, which must result from a method call on\n * {@link ParseInput}.\n *\n * When using this class, keep in mind that all {@link ParseInput}s and {@link ParseResult}s\n * are the exact same object, scoped per thread, thrown around and casted for type safety.\n *\n * @hide\n ",
  "links" : [ "android.content.pm.parsing.result.ParseInput", "android.content.pm.parsing.result.ParseResult" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " boolean isSuccess()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the result is not an error and thus contains a valid object.\n     *\n     * For backwards-compat reasons, it's possible to have a successful result with a null\n     * result object, depending on the behavior of the parsing method.\n     *\n     * It is expected that every method calls this to check for an error state to bubble up\n     * the error to its parent method after every parse method call.\n     *\n     * It is not always necessary to check this, as it is valid to return any ParseResult from\n     * a method so long as the type matches <b>without casting it</b>.\n     *\n     * The infrastructure is set up such that as long as a result is the proper type and\n     * the right side of success vs. error, it can be bubble up through all its parent methods.\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean isError()",
    "returnType" : "boolean",
    "comment" : "\n     * Opposite of {@link #isSuccess()} for readability.\n     ",
    "links" : [ "#isSuccess()" ]
  }, {
    "name" : " ResultType getResult()",
    "returnType" : "ResultType",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int getErrorCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String getErrorMessage()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Exception getException()",
    "returnType" : "Exception",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " boolean isSuccess()", " boolean isError()", " ResultType getResult()", " int getErrorCode()", " String getErrorMessage()", " Exception getException()" ],
  "variableNames" : [ ]
}