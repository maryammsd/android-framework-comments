{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/Executors.java",
  "packageName" : "java.util.concurrent",
  "className" : "DelegatedExecutorService",
  "comment" : "\n     * A wrapper class that exposes only the ExecutorService methods\n     * of an ExecutorService implementation.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "e",
    "type" : "ExecutorService",
    "comment" : " Needed for FinalizableDelegatedExecutorService below.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void execute(Runnable command)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void shutdown()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<Runnable> shutdownNow()",
    "returnType" : "List<Runnable>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isShutdown()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isTerminated()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean awaitTermination(long timeout, TimeUnit unit) throws InterruptedException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Future<?> submit(Runnable task)",
    "returnType" : "Future<?>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Future<T> submit(Callable<T> task)",
    "returnType" : "Future<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Future<T> submit(Runnable task, T result)",
    "returnType" : "Future<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks) throws InterruptedException",
    "returnType" : "List<Future<T>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit) throws InterruptedException",
    "returnType" : "List<Future<T>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T invokeAny(Collection<? extends Callable<T>> tasks) throws InterruptedException, ExecutionException",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T invokeAny(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void execute(Runnable command)", "public void shutdown()", "public List<Runnable> shutdownNow()", "public boolean isShutdown()", "public boolean isTerminated()", "public boolean awaitTermination(long timeout, TimeUnit unit) throws InterruptedException", "public Future<?> submit(Runnable task)", "public Future<T> submit(Callable<T> task)", "public Future<T> submit(Runnable task, T result)", "public List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks) throws InterruptedException", "public List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit) throws InterruptedException", "public T invokeAny(Collection<? extends Callable<T>> tasks) throws InterruptedException, ExecutionException", "public T invokeAny(Collection<? extends Callable<T>> tasks, long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException" ],
  "variableNames" : [ "e" ]
}