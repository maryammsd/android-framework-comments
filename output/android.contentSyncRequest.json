{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/SyncRequest.java",
  "packageName" : "android.content",
  "className" : "SyncRequest",
  "comment" : "\n * Convenience class to construct sync requests. See {@link android.content.SyncRequest.Builder}\n * for an explanation of the various functions. The resulting object is passed through to the\n * framework via {@link android.content.ContentResolver#requestSync(SyncRequest)}.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccountToSync",
    "type" : "Account",
    "comment" : " Account to pass to the sync adapter. Can be null. ",
    "links" : [ ]
  }, {
    "name" : "mAuthority",
    "type" : "String",
    "comment" : " Authority string that corresponds to a ContentProvider. ",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : " Bundle containing user info as well as sync settings. ",
    "links" : [ ]
  }, {
    "name" : "mDisallowMetered",
    "type" : "boolean",
    "comment" : " Don't allow this sync request on metered networks. ",
    "links" : [ ]
  }, {
    "name" : "mSyncFlexTimeSecs",
    "type" : "long",
    "comment" : "\n     * Amount of time before {@link #mSyncRunTimeSecs} from which the sync may optionally be\n     * started.\n     ",
    "links" : [ "#mSyncRunTimeSecs" ]
  }, {
    "name" : "mSyncRunTimeSecs",
    "type" : "long",
    "comment" : "\n     * Specifies a point in the future at which the sync must have been scheduled to run.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsPeriodic",
    "type" : "boolean",
    "comment" : " Periodic versus one-off. ",
    "links" : [ ]
  }, {
    "name" : "mIsAuthority",
    "type" : "boolean",
    "comment" : " Service versus provider. ",
    "links" : [ ]
  }, {
    "name" : "mIsExpedited",
    "type" : "boolean",
    "comment" : " Sync should be run in lieu of other syncs. ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SyncRequest>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isPeriodic()",
    "returnType" : "boolean",
    "comment" : "\n     * {@hide}\n     * @return whether this sync is periodic or one-time. A Sync Request must be\n     *         either one of these or an InvalidStateException will be thrown in\n     *         Builder.build().\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isExpedited()",
    "returnType" : "boolean",
    "comment" : "\n     * {@hide}\n     * @return whether this sync is expedited.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Account getAccount()",
    "returnType" : "Account",
    "comment" : "\n     * {@hide}\n     *\n     * @return account object for this sync.\n     * @throws IllegalArgumentException if this function is called for a request that targets a\n     * sync service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getProvider()",
    "returnType" : "String",
    "comment" : "\n     * {@hide}\n     *\n     * @return provider for this sync.\n     * @throws IllegalArgumentException if this function is called for a request that targets a\n     * sync service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getBundle()",
    "returnType" : "Bundle",
    "comment" : "\n     * {@hide}\n     * Retrieve bundle for this SyncRequest. Will not be null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getSyncFlexTime()",
    "returnType" : "long",
    "comment" : "\n     * {@hide}\n     * @return the earliest point in time that this sync can be scheduled.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getSyncRunTime()",
    "returnType" : "long",
    "comment" : "\n     * {@hide}\n     * @return the last point in time at which this sync must scheduled.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mAccountToSync", "mAuthority", "mExtras", "mDisallowMetered", "mSyncFlexTimeSecs", "mSyncRunTimeSecs", "mIsPeriodic", "mIsAuthority", "mIsExpedited", "CREATOR" ],
  "methodNames" : [ "public boolean isPeriodic()", "public boolean isExpedited()", "public Account getAccount()", "public String getProvider()", "public Bundle getBundle()", "public long getSyncFlexTime()", "public long getSyncRunTime()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ]
}