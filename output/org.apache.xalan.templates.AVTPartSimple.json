{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/templates/AVTPartSimple.java",
  "packageName" : "org.apache.xalan.templates",
  "className" : "AVTPartSimple",
  "comment" : "\n * Simple string part of a complex AVT.\n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_val",
    "type" : "String",
    "comment" : "\n   * Simple string value;\n   * @serial\n   ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getSimpleString()",
    "returnType" : "String",
    "comment" : "\n   * Get the AVT part as the original string.\n   *\n   * @return the AVT part as the original string.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void fixupVariables(java.util.Vector vars, int globalsSize)",
    "returnType" : "void",
    "comment" : "\n   * This function is used to fixup variables from QNames to stack frame \n   * indexes at stylesheet build time.\n   * @param vars List of QNames that correspond to variables.  This list \n   * should be searched backwards for the first qualified name that \n   * corresponds to the variable reference qname.  The position of the \n   * QName in the vector from the start of the vector will be its position \n   * in the stack frame (but variables above the globalsTop value will need \n   * to be offset to the current stack frame).\n   ",
    "links" : [ ]
  }, {
    "name" : "public void evaluate(XPathContext xctxt, FastStringBuffer buf, int context, org.apache.xml.utils.PrefixResolver nsNode)",
    "returnType" : "void",
    "comment" : "\n   * Write the value into the buffer.\n   *\n   * @param xctxt An XPathContext object, providing infomation specific\n   * to this invocation and this thread. Maintains SAX state, variables, \n   * error handler and  so on, so the transformation/XPath object itself\n   * can be simultaneously invoked from multiple threads.\n   * @param buf Buffer to write into.\n   * @param context The current source tree context.\n   * @param nsNode The current namespace context (stylesheet tree context).\n   ",
    "links" : [ ]
  }, {
    "name" : "public void callVisitors(XSLTVisitor visitor)",
    "returnType" : "void",
    "comment" : "\n   * @see XSLTVisitable#callVisitors(XSLTVisitor)\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getSimpleString()", "public void fixupVariables(java.util.Vector vars, int globalsSize)", "public void evaluate(XPathContext xctxt, FastStringBuffer buf, int context, org.apache.xml.utils.PrefixResolver nsNode)", "public void callVisitors(XSLTVisitor visitor)" ],
  "variableNames" : [ "serialVersionUID", "m_val" ]
}