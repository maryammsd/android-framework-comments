{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/quickaccesswallet/GetWalletCardsRequest.java",
  "packageName" : "android.service.quickaccesswallet",
  "className" : "GetWalletCardsRequest",
  "comment" : "\n * Represents a request to a {@link QuickAccessWalletService} for {@link WalletCard walletCards}.\n * Wallet cards may represent anything that a user might carry in their wallet -- a credit card,\n * library card, a transit pass, etc. This request contains the desired size of the card images and\n * icons as well as the maximum number of cards that may be returned in the {@link\n * GetWalletCardsResponse}.\n *\n * <p>Cards may be displayed with an optional icon and label. The icon and label should communicate\n * the same idea. For example, if a card can be used at an NFC terminal, the icon could be an NFC\n * icon and the label could inform the user how to interact with the NFC terminal.\n *\n * <p>The maximum number of cards that may be displayed in the wallet is provided in {@link\n * #getMaxCards()}. The {@link QuickAccessWalletService} may provide up to this many cards in the\n * {@link GetWalletCardsResponse#getWalletCards()}. If the list of cards provided exceeds this\n * number, some of the cards may not be shown to the user.\n ",
  "variables" : [ {
    "name" : "mCardWidthPx",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCardHeightPx",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIconSizePx",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxCards",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<GetWalletCardsRequest>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCardWidthPx()",
    "returnType" : "int",
    "comment" : "\n     * The desired width of the {@link WalletCard#getCardImage()}, in pixels. The dimensions of the\n     * card image are requested so that it may be rendered without scaling.\n     * <p>\n     * The {@code cardWidthPx} and {@code cardHeightPx} should be applied to the size of the {@link\n     * WalletCard#getCardImage()}. The size of the card image is specified so that it may be\n     * rendered accurately and without distortion caused by scaling.\n     ",
    "links" : [ "android.service.quickaccesswallet.WalletCard#getCardImage()" ]
  }, {
    "name" : "public int getCardHeightPx()",
    "returnType" : "int",
    "comment" : "\n     * The desired height of the {@link WalletCard#getCardImage()}, in pixels. The dimensions of the\n     * card image are requested so that it may be rendered without scaling.\n     ",
    "links" : [ "android.service.quickaccesswallet.WalletCard#getCardImage()" ]
  }, {
    "name" : "public int getIconSizePx()",
    "returnType" : "int",
    "comment" : "\n     * Wallet cards may be displayed next to an icon. The icon can help to convey additional\n     * information about the state of the card. If the provided icon is a bitmap, its width and\n     * height should equal iconSizePx so that it is rendered without distortion caused by scaling.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxCards()",
    "returnType" : "int",
    "comment" : "\n     * The maximum size of the {@link GetWalletCardsResponse#getWalletCards()}. If the list of cards\n     * exceeds this number, not all cards may be displayed.\n     ",
    "links" : [ "android.service.quickaccesswallet.GetWalletCardsResponse#getWalletCards()" ]
  } ],
  "variableNames" : [ "mCardWidthPx", "mCardHeightPx", "mIconSizePx", "mMaxCards", "CREATOR" ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int getCardWidthPx()", "public int getCardHeightPx()", "public int getIconSizePx()", "public int getMaxCards()" ]
}