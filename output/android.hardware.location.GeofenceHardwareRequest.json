{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/location/GeofenceHardwareRequest.java",
  "packageName" : "android.hardware.location",
  "className" : "GeofenceHardwareRequest",
  "comment" : "\n * This class represents the characteristics of the geofence.\n *\n * <p> Use this in conjunction with {@link GeofenceHardware} APIs.\n *\n * @hide\n ",
  "links" : [ "android.hardware.location.GeofenceHardware" ],
  "variables" : [ {
    "name" : "GEOFENCE_TYPE_CIRCLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLatitude",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLongitude",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRadius",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastTransition",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUnknownTimer",
    "type" : "int",
    "comment" : " 30 secs",
    "links" : [ ]
  }, {
    "name" : "mMonitorTransitions",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNotificationResponsiveness",
    "type" : "int",
    "comment" : " 5 secs",
    "links" : [ ]
  }, {
    "name" : "mSourceTechnologies",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void setCircularGeofence(double latitude, double longitude, double radius)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static GeofenceHardwareRequest createCircularGeofence(double latitude, double longitude, double radius)",
    "returnType" : "GeofenceHardwareRequest",
    "comment" : "\n     * Create a circular geofence.\n     *\n     * @param latitude Latitude of the geofence\n     * @param longitude Longitude of the geofence\n     * @param radius Radius of the geofence (in meters)\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setLastTransition(int lastTransition)",
    "returnType" : "void",
    "comment" : "\n     * Set the last known transition of the geofence.\n     *\n     * @param lastTransition The current state of the geofence. Can be one of\n     *        {@link GeofenceHardware#GEOFENCE_ENTERED}, {@link GeofenceHardware#GEOFENCE_EXITED},\n     *        {@link GeofenceHardware#GEOFENCE_UNCERTAIN}.\n     ",
    "links" : [ "android.hardware.location.GeofenceHardware#GEOFENCE_ENTERED", "android.hardware.location.GeofenceHardware#GEOFENCE_UNCERTAIN", "android.hardware.location.GeofenceHardware#GEOFENCE_EXITED" ]
  }, {
    "name" : "public void setUnknownTimer(int unknownTimer)",
    "returnType" : "void",
    "comment" : "\n     * Set the unknown timer for this geofence.\n     *\n     * @param unknownTimer  The time limit after which the\n     *        {@link GeofenceHardware#GEOFENCE_UNCERTAIN} transition\n     *        should be triggered. This paramter is defined in milliseconds.\n     ",
    "links" : [ "android.hardware.location.GeofenceHardware#GEOFENCE_UNCERTAIN" ]
  }, {
    "name" : "public void setMonitorTransitions(int monitorTransitions)",
    "returnType" : "void",
    "comment" : "\n     * Set the transitions to be monitored.\n     *\n     * @param monitorTransitions Bitwise OR of {@link GeofenceHardware#GEOFENCE_ENTERED},\n     *        {@link GeofenceHardware#GEOFENCE_EXITED}, {@link GeofenceHardware#GEOFENCE_UNCERTAIN}\n     ",
    "links" : [ "android.hardware.location.GeofenceHardware#GEOFENCE_ENTERED", "android.hardware.location.GeofenceHardware#GEOFENCE_UNCERTAIN", "android.hardware.location.GeofenceHardware#GEOFENCE_EXITED" ]
  }, {
    "name" : "public void setNotificationResponsiveness(int notificationResponsiveness)",
    "returnType" : "void",
    "comment" : "\n     * Set the notification responsiveness of the geofence.\n     *\n     * @param notificationResponsiveness (milliseconds) Defines the best-effort description\n     *        of how soon should the callback be called when the transition\n     *        associated with the Geofence is triggered. For instance, if\n     *        set to 1000 millseconds with {@link GeofenceHardware#GEOFENCE_ENTERED},\n     *        the callback will be called 1000 milliseconds within entering\n     *        the geofence.\n     ",
    "links" : [ "android.hardware.location.GeofenceHardware#GEOFENCE_ENTERED" ]
  }, {
    "name" : "public void setSourceTechnologies(int sourceTechnologies)",
    "returnType" : "void",
    "comment" : "\n     * Set the source technologies to use while tracking the geofence.\n     * The value is the bit-wise of one or several source fields defined in\n     * {@link GeofenceHardware}.\n     *\n     * @param sourceTechnologies The set of source technologies to use.\n     ",
    "links" : [ "android.hardware.location.GeofenceHardware" ]
  }, {
    "name" : "public double getLatitude()",
    "returnType" : "double",
    "comment" : "\n     * Returns the latitude of this geofence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public double getLongitude()",
    "returnType" : "double",
    "comment" : "\n     * Returns the longitude of this geofence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public double getRadius()",
    "returnType" : "double",
    "comment" : "\n     * Returns the radius of this geofence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMonitorTransitions()",
    "returnType" : "int",
    "comment" : "\n     * Returns transitions monitored for this geofence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getUnknownTimer()",
    "returnType" : "int",
    "comment" : "\n     * Returns the unknownTimer of this geofence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNotificationResponsiveness()",
    "returnType" : "int",
    "comment" : "\n     * Returns the notification responsiveness of this geofence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLastTransition()",
    "returnType" : "int",
    "comment" : "\n     * Returns the last transition of this geofence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSourceTechnologies()",
    "returnType" : "int",
    "comment" : "\n     * Returns the source technologies to track this geofence.\n     ",
    "links" : [ ]
  }, {
    "name" : " int getType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void setCircularGeofence(double latitude, double longitude, double radius)", "public static GeofenceHardwareRequest createCircularGeofence(double latitude, double longitude, double radius)", "public void setLastTransition(int lastTransition)", "public void setUnknownTimer(int unknownTimer)", "public void setMonitorTransitions(int monitorTransitions)", "public void setNotificationResponsiveness(int notificationResponsiveness)", "public void setSourceTechnologies(int sourceTechnologies)", "public double getLatitude()", "public double getLongitude()", "public double getRadius()", "public int getMonitorTransitions()", "public int getUnknownTimer()", "public int getNotificationResponsiveness()", "public int getLastTransition()", "public int getSourceTechnologies()", " int getType()" ],
  "variableNames" : [ "GEOFENCE_TYPE_CIRCLE", "mType", "mLatitude", "mLongitude", "mRadius", "mLastTransition", "mUnknownTimer", "mMonitorTransitions", "mNotificationResponsiveness", "mSourceTechnologies" ]
}