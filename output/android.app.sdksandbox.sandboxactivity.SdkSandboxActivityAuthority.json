{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/sdksandbox/sandboxactivity/SdkSandboxActivityAuthority.java",
  "packageName" : "android.app.sdksandbox.sandboxactivity",
  "className" : "SdkSandboxActivityAuthority",
  "comment" : "\n * Provides information required for building the sandbox activities.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static SdkSandboxActivityAuthority getInstance()",
    "returnType" : "SdkSandboxActivityAuthority",
    "comment" : " Returns a Single instance of this class, instantiated lazily. ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isSdkSandboxActivityIntent(@NonNull Context context, @Nullable Intent intent)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the intent is an SdkSandbox Activity intent. In other words, if the intent\n     * targets either the Sdk Sandbox package or the action is {@link\n     * ACTION_START_SANDBOXED_ACTIVITY}.\n     *\n     * @param context the context.\n     * @param intent the intent.\n     * @hide\n     ",
    "links" : [ "ACTION_START_SANDBOXED_ACTIVITY" ]
  }, {
    "name" : "public ActivityContextInfo getActivityContextInfo(@NonNull Intent intent)",
    "returnType" : "ActivityContextInfo",
    "comment" : "\n     * Returns {@link ActivityContextInfo} instance containing the information which is needed to\n     * build the sandbox activity {@link android.content.Context} for the passed {@link Intent}.\n     *\n     * @param intent an {@link Intent} for a sandbox {@link android.app.Activity} containing\n     *     information to identify the SDK which requested the activity.\n     * @return {@link ActivityContextInfo} instance.\n     * @throws IllegalArgumentException if the intent doesn't refer to a registered {@link\n     *     android.app.sdksandbox.sdkprovider.SdkSandboxActivityHandler}\n     * @throws IllegalStateException if Customized SDK Context flag is not enabled\n     ",
    "links" : [ "android.app.sdksandbox.sandboxactivity.ActivityContextInfo", "android.content.Context", "android.app.sdksandbox.sdkprovider.SdkSandboxActivityHandler", "android.content.Intent", "android.app.Activity" ]
  } ],
  "methodNames" : [ "public static SdkSandboxActivityAuthority getInstance()", "public static boolean isSdkSandboxActivityIntent(@NonNull Context context, @Nullable Intent intent)", "public ActivityContextInfo getActivityContextInfo(@NonNull Intent intent)" ],
  "variableNames" : [ ]
}