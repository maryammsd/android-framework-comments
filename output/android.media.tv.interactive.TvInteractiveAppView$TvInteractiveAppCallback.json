{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/interactive/TvInteractiveAppView.java",
  "packageName" : "android.media.tv.interactive",
  "className" : "TvInteractiveAppCallback",
  "comment" : "\n     * Callback used to receive various status updates on the {@link TvInteractiveAppView}.\n     ",
  "links" : [ "android.media.tv.interactive.TvInteractiveAppView" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onPlaybackCommandRequest(@NonNull String iAppServiceId, @NonNull @TvInteractiveAppService.PlaybackCommandType String cmdType, @NonNull Bundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a playback command is requested to be processed by the related TV\n         * input.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param cmdType type of the command\n         * @param parameters parameters of the command\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTimeShiftCommandRequest(@NonNull String iAppServiceId, @NonNull @TvInteractiveAppService.TimeShiftCommandType String cmdType, @NonNull Bundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a time shift command is requested to be processed by the related TV\n         * input.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param cmdType type of the command\n         * @param parameters parameters of the command\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onStateChanged(@NonNull String iAppServiceId, @TvInteractiveAppManager.InteractiveAppState int state, @TvInteractiveAppManager.ErrorCode int err)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the state of corresponding interactive app is changed.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param state the current state.\n         * @param err the error code for error state. {@link TvInteractiveAppManager#ERROR_NONE}\n         *              is used when the state is not\n         *              {@link TvInteractiveAppManager#INTERACTIVE_APP_STATE_ERROR}.\n         ",
    "links" : [ "android.media.tv.interactive.TvInteractiveAppManager#ERROR_NONE", "android.media.tv.interactive.TvInteractiveAppManager#INTERACTIVE_APP_STATE_ERROR" ]
  }, {
    "name" : "public void onBiInteractiveAppCreated(@NonNull String iAppServiceId, @NonNull Uri biIAppUri, @Nullable String biIAppId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when broadcast-independent (BI) interactive app is created.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param biIAppUri URI associated this BI interactive app. This is the same URI in\n         *                  {@link #createBiInteractiveApp(Uri, Bundle)}\n         * @param biIAppId BI interactive app ID, which can be used to destroy the BI interactive\n         *                 app. {@code null} if it's not created successfully.\n         *\n         * @see #createBiInteractiveApp(Uri, Bundle)\n         * @see #destroyBiInteractiveApp(String)\n         ",
    "links" : [ "#createBiInteractiveApp(Uri" ]
  }, {
    "name" : "public void onTeletextAppStateChanged(@NonNull String iAppServiceId, @TvInteractiveAppManager.TeletextAppState int state)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the digital teletext app state is changed.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param state digital teletext app current state.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onSetVideoBounds(@NonNull String iAppServiceId, @NonNull Rect rect)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#setVideoBounds(Rect)} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#setVideoBounds(Rect)" ]
  }, {
    "name" : "public void onRequestCurrentVideoBounds(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCurrentVideoBounds()}\n         * is called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestCurrentVideoBounds()" ]
  }, {
    "name" : "public void onRequestCurrentChannelUri(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCurrentChannelUri()} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestCurrentChannelUri()" ]
  }, {
    "name" : "public void onRequestCurrentChannelLcn(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCurrentChannelLcn()} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestCurrentChannelLcn()" ]
  }, {
    "name" : "public void onRequestStreamVolume(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestStreamVolume()} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestStreamVolume()" ]
  }, {
    "name" : "public void onRequestTrackInfoList(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestTrackInfoList()} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestTrackInfoList()" ]
  }, {
    "name" : "public void onRequestSelectedTrackInfo(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestSelectedTrackInfo()} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestSelectedTrackInfo()" ]
  }, {
    "name" : "public void onRequestCurrentTvInputId(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCurrentTvInputId()} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestCurrentTvInputId()" ]
  }, {
    "name" : "public void onRequestTimeShiftMode(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestTimeShiftMode()} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestTimeShiftMode()" ]
  }, {
    "name" : "public void onRequestAvailableSpeeds(@NonNull String iAppServiceId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestAvailableSpeeds()} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestAvailableSpeeds()" ]
  }, {
    "name" : "public void onRequestStartRecording(@NonNull String iAppServiceId, @NonNull String requestId, @Nullable Uri programUri)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestStartRecording(String, Uri)} is called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param requestId The ID of this request which is used to match the corresponding\n         *                  response. The request ID in\n         *                  {@link #notifyRecordingStarted(String, String)}  for this request is the\n         *                  same as the ID sent here. This should be defined by the\n         *                  TIAS and can be any string. Should this API be called with the\n         *                  same requestId twice, both requests should be handled regardless\n         *                  by the TV application.\n         * @param programUri The URI of the program to record\n         *\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestStartRecording(String", "#notifyRecordingStarted(String" ]
  }, {
    "name" : "public void onRequestStopRecording(@NonNull String iAppServiceId, @NonNull String recordingId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestStopRecording(String)}\n         * is called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param recordingId The ID of the recording to stop. This is provided by the TV app in\n         *                    {@link #notifyRecordingStarted(String, String)}\n         * @see #notifyRecordingStarted(String, String)\n         * @see #notifyRecordingStopped(String)\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestStopRecording(String)", "#notifyRecordingStarted(String" ]
  }, {
    "name" : "public void onRequestScheduleRecording(@NonNull String iAppServiceId, @NonNull String requestId, @NonNull String inputId, @NonNull Uri channelUri, @NonNull Uri programUri, @NonNull Bundle params)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestScheduleRecording(String, String, Uri, Uri, Bundle)}\n         * is called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param requestId The ID of this request which is used to match the corresponding\n         *                  response. The request ID in\n         *                  {@link #notifyRecordingScheduled(String, String)} for this request is\n         *                  the same as the ID sent here. This should be defined by the\n         *                  TIAS and can be any string. Should this API be called with the\n         *                  same requestId twice, both requests should be handled regardless\n         *                  by the TV application.\n         * @param inputId The ID of the TV input for the given channel.\n         * @param channelUri The URI of a channel to be recorded.\n         * @param programUri The URI of the TV program to be recorded.\n         * @param params Domain-specific data for this tune request. Keys <em>must</em> be a scoped\n         *            name, i.e. prefixed with a package name you own, so that different developers\n         *            will not create conflicting keys.\n         * @see android.media.tv.TvRecordingClient#tune(String, Uri, Bundle)\n         * @see android.media.tv.TvRecordingClient#startRecording(Uri)\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestScheduleRecording(String", "#notifyRecordingScheduled(String" ]
  }, {
    "name" : "public void onRequestScheduleRecording(@NonNull String iAppServiceId, @NonNull String requestId, @NonNull String inputId, @NonNull Uri channelUri, long startTime, long duration, int repeatDays, @NonNull Bundle params)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestScheduleRecording(String, String, Uri, long, long, int, Bundle)}\n         * is called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param requestId The ID of this request which is used to match the corresponding\n         *                  response. The request ID in\n         *                  {@link #notifyRecordingScheduled(String, String)} for this request is\n         *                  the same as the ID sent here. This should be defined by the\n         *                  TIAS and can be any string. Should this API be called with the\n         *                  same requestId twice, both requests should be handled regardless\n         *                  by the TV application.\n         * @param inputId The ID of the TV input for the given channel.\n         * @param channelUri The URI of a channel to be recorded.\n         * @param startTime The start time of the recording in milliseconds since epoch.\n         * @param duration The duration of the recording in milliseconds.\n         * @param repeatDays The repeated days. 0 if not repeated.\n         * @param params Domain-specific data for this tune request. Keys <em>must</em> be a scoped\n         *            name, i.e. prefixed with a package name you own, so that different developers\n         *            will not create conflicting keys.\n         * @see android.media.tv.TvRecordingClient#tune(String, Uri, Bundle)\n         * @see android.media.tv.TvRecordingClient#startRecording(Uri)\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestScheduleRecording(String", "#notifyRecordingScheduled(String" ]
  }, {
    "name" : "public void onRequestSigning(@NonNull String iAppServiceId, @NonNull String signingId, @NonNull String algorithm, @NonNull String alias, @NonNull byte[] data)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestSigning(String, String, String, byte[])} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param signingId the ID to identify the request.\n         * @param algorithm the standard name of the signature algorithm requested, such as\n         *                  MD5withRSA, SHA256withDSA, etc.\n         * @param alias the alias of the corresponding {@link java.security.KeyStore}.\n         * @param data the original bytes to be signed.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestSigning(String", "java.security.KeyStore" ]
  }, {
    "name" : "public void onRequestSigning(@NonNull String iAppServiceId, @NonNull String signingId, @NonNull String algorithm, @NonNull String host, int port, @NonNull byte[] data)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestSigning(String, String, String, int, byte[])}\n         * is called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param signingId the ID to identify the request.\n         * @param algorithm the standard name of the signature algorithm requested, such as\n         *                  MD5withRSA, SHA256withDSA, etc.\n         * @param host The hostname of the SSL authentication server.\n         * @param port The port of the SSL authentication server.\n         * @param data the original bytes to be signed.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestSigning(String" ]
  }, {
    "name" : "public void onRequestCertificate(@NonNull String iAppServiceId, @NonNull String host, int port)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestCertificate(String, int)} is called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param host The hostname of the SSL authentication server.\n         * @param port The port of the SSL authentication server.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestCertificate(String" ]
  }, {
    "name" : "public void onSetTvRecordingInfo(@NonNull String iAppServiceId, @NonNull String recordingId, @NonNull TvRecordingInfo recordingInfo)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#setTvRecordingInfo(String,\n         * TvRecordingInfo)} is called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param recordingId The ID of the recording to set the info for. This is provided by the\n         *     TV app in {@link TvInteractiveAppView#notifyRecordingStarted(String, String)}\n         * @param recordingInfo The {@link TvRecordingInfo} to set to the recording.\n         ",
    "links" : [ "TvInteractiveAppService.Session#setTvRecordingInfo(String", "android.media.tv.TvRecordingInfo", "android.media.tv.interactive.TvInteractiveAppView#notifyRecordingStarted(String" ]
  }, {
    "name" : "public void onRequestTvRecordingInfo(@NonNull String iAppServiceId, @NonNull String recordingId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestTvRecordingInfo(String)} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param recordingId The ID of the recording to get the info for. This is provided by the\n         *                    TV app in\n         *                    {@link TvInteractiveAppView#notifyRecordingStarted(String, String)}\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestTvRecordingInfo(String)", "android.media.tv.interactive.TvInteractiveAppView#notifyRecordingStarted(String" ]
  }, {
    "name" : "public void onRequestTvRecordingInfoList(@NonNull String iAppServiceId, @TvRecordingInfo.TvRecordingListType int type)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestTvRecordingInfoList(int)} is\n         * called.\n         *\n         * @param iAppServiceId The ID of the TV interactive app service bound to this view.\n         * @param type The type of recording requested to retrieve.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestTvRecordingInfoList(int)" ]
  } ],
  "methodNames" : [ "public void onPlaybackCommandRequest(@NonNull String iAppServiceId, @NonNull @TvInteractiveAppService.PlaybackCommandType String cmdType, @NonNull Bundle parameters)", "public void onTimeShiftCommandRequest(@NonNull String iAppServiceId, @NonNull @TvInteractiveAppService.TimeShiftCommandType String cmdType, @NonNull Bundle parameters)", "public void onStateChanged(@NonNull String iAppServiceId, @TvInteractiveAppManager.InteractiveAppState int state, @TvInteractiveAppManager.ErrorCode int err)", "public void onBiInteractiveAppCreated(@NonNull String iAppServiceId, @NonNull Uri biIAppUri, @Nullable String biIAppId)", "public void onTeletextAppStateChanged(@NonNull String iAppServiceId, @TvInteractiveAppManager.TeletextAppState int state)", "public void onSetVideoBounds(@NonNull String iAppServiceId, @NonNull Rect rect)", "public void onRequestCurrentVideoBounds(@NonNull String iAppServiceId)", "public void onRequestCurrentChannelUri(@NonNull String iAppServiceId)", "public void onRequestCurrentChannelLcn(@NonNull String iAppServiceId)", "public void onRequestStreamVolume(@NonNull String iAppServiceId)", "public void onRequestTrackInfoList(@NonNull String iAppServiceId)", "public void onRequestSelectedTrackInfo(@NonNull String iAppServiceId)", "public void onRequestCurrentTvInputId(@NonNull String iAppServiceId)", "public void onRequestTimeShiftMode(@NonNull String iAppServiceId)", "public void onRequestAvailableSpeeds(@NonNull String iAppServiceId)", "public void onRequestStartRecording(@NonNull String iAppServiceId, @NonNull String requestId, @Nullable Uri programUri)", "public void onRequestStopRecording(@NonNull String iAppServiceId, @NonNull String recordingId)", "public void onRequestScheduleRecording(@NonNull String iAppServiceId, @NonNull String requestId, @NonNull String inputId, @NonNull Uri channelUri, @NonNull Uri programUri, @NonNull Bundle params)", "public void onRequestScheduleRecording(@NonNull String iAppServiceId, @NonNull String requestId, @NonNull String inputId, @NonNull Uri channelUri, long startTime, long duration, int repeatDays, @NonNull Bundle params)", "public void onRequestSigning(@NonNull String iAppServiceId, @NonNull String signingId, @NonNull String algorithm, @NonNull String alias, @NonNull byte[] data)", "public void onRequestSigning(@NonNull String iAppServiceId, @NonNull String signingId, @NonNull String algorithm, @NonNull String host, int port, @NonNull byte[] data)", "public void onRequestCertificate(@NonNull String iAppServiceId, @NonNull String host, int port)", "public void onSetTvRecordingInfo(@NonNull String iAppServiceId, @NonNull String recordingId, @NonNull TvRecordingInfo recordingInfo)", "public void onRequestTvRecordingInfo(@NonNull String iAppServiceId, @NonNull String recordingId)", "public void onRequestTvRecordingInfoList(@NonNull String iAppServiceId, @TvRecordingInfo.TvRecordingListType int type)" ],
  "variableNames" : [ ]
}