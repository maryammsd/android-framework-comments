{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothCodecConfig.java",
  "packageName" : "android.bluetooth",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link BluetoothCodecConfig}.\n     *\n     * <p>By default, the codec type will be set to {@link\n     * BluetoothCodecConfig#SOURCE_CODEC_TYPE_INVALID}, the codec priority to {@link\n     * BluetoothCodecConfig#CODEC_PRIORITY_DEFAULT}, the sample rate to {@link\n     * BluetoothCodecConfig#SAMPLE_RATE_NONE}, the bits per sample to {@link\n     * BluetoothCodecConfig#BITS_PER_SAMPLE_NONE}, the channel mode to {@link\n     * BluetoothCodecConfig#CHANNEL_MODE_NONE}, and all the codec specific values to 0.\n     ",
  "links" : [ "android.bluetooth.BluetoothCodecConfig#BITS_PER_SAMPLE_NONE", "android.bluetooth.BluetoothCodecConfig#SAMPLE_RATE_NONE", "android.bluetooth.BluetoothCodecConfig#SOURCE_CODEC_TYPE_INVALID", "android.bluetooth.BluetoothCodecConfig#CODEC_PRIORITY_DEFAULT", "android.bluetooth.BluetoothCodecConfig", "android.bluetooth.BluetoothCodecConfig#CHANNEL_MODE_NONE" ],
  "variables" : [ {
    "name" : "mCodecType",
    "type" : "BluetoothCodecType",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCodecPriority",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampleRate",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBitsPerSample",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCodecSpecific1",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCodecSpecific2",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCodecSpecific3",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCodecSpecific4",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setCodecType(@SourceCodecType int codecType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set codec type for Bluetooth codec config.\n         *\n         * @param codecType of this codec\n         * @return the same Builder instance\n         * @deprecated use {@link BluetoothCodecType} instead\n         ",
    "links" : [ "android.bluetooth.BluetoothCodecType" ]
  }, {
    "name" : "public Builder setExtendedCodecType(@Nullable BluetoothCodecType codecType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set codec type for Bluetooth codec config.\n         *\n         * @param codecType of this codec\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setCodecPriority(@CodecPriority int codecPriority)",
    "returnType" : "Builder",
    "comment" : "\n         * Set codec priority for Bluetooth codec config.\n         *\n         * @param codecPriority of this codec\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSampleRate(@SampleRate int sampleRate)",
    "returnType" : "Builder",
    "comment" : "\n         * Set sample rate for Bluetooth codec config.\n         *\n         * @param sampleRate of this codec\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setBitsPerSample(@BitsPerSample int bitsPerSample)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the bits per sample for Bluetooth codec config.\n         *\n         * @param bitsPerSample of this codec\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setChannelMode(@ChannelMode int channelMode)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the channel mode for Bluetooth codec config.\n         *\n         * @param channelMode of this codec\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setCodecSpecific1(long codecSpecific1)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the first codec specific values for Bluetooth codec config.\n         *\n         * @param codecSpecific1 codec specific value or 0 if default\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setCodecSpecific2(long codecSpecific2)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the second codec specific values for Bluetooth codec config.\n         *\n         * @param codecSpecific2 codec specific value or 0 if default\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setCodecSpecific3(long codecSpecific3)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the third codec specific values for Bluetooth codec config.\n         *\n         * @param codecSpecific3 codec specific value or 0 if default\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setCodecSpecific4(long codecSpecific4)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the fourth codec specific values for Bluetooth codec config.\n         *\n         * @param codecSpecific4 codec specific value or 0 if default\n         * @return the same Builder instance\n         ",
    "links" : [ ]
  }, {
    "name" : "public BluetoothCodecConfig build()",
    "returnType" : "BluetoothCodecConfig",
    "comment" : "\n         * Build {@link BluetoothCodecConfig}.\n         *\n         * @return new BluetoothCodecConfig built\n         ",
    "links" : [ "android.bluetooth.BluetoothCodecConfig" ]
  } ],
  "methodNames" : [ "public Builder setCodecType(@SourceCodecType int codecType)", "public Builder setExtendedCodecType(@Nullable BluetoothCodecType codecType)", "public Builder setCodecPriority(@CodecPriority int codecPriority)", "public Builder setSampleRate(@SampleRate int sampleRate)", "public Builder setBitsPerSample(@BitsPerSample int bitsPerSample)", "public Builder setChannelMode(@ChannelMode int channelMode)", "public Builder setCodecSpecific1(long codecSpecific1)", "public Builder setCodecSpecific2(long codecSpecific2)", "public Builder setCodecSpecific3(long codecSpecific3)", "public Builder setCodecSpecific4(long codecSpecific4)", "public BluetoothCodecConfig build()" ],
  "variableNames" : [ "mCodecType", "mCodecPriority", "mSampleRate", "mBitsPerSample", "mChannelMode", "mCodecSpecific1", "mCodecSpecific2", "mCodecSpecific3", "mCodecSpecific4" ]
}