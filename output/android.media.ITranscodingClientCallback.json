{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/ITranscodingClientCallback.java",
  "packageName" : "android.media",
  "className" : "ITranscodingClientCallback",
  "comment" : "\n * ITranscodingClientCallback\n * \n * Interface for the MediaTranscodingService to communicate with the client.\n * \n * {@hide}\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public android.os.ParcelFileDescriptor openFileDescriptor(java.lang.String fileUri, java.lang.String mode) throws android.os.RemoteException",
    "returnType" : "android.os.ParcelFileDescriptor",
    "comment" : "\n   * Called to open a raw file descriptor to access data under a URI\n   * \n   * @param fileUri The path of the filename.\n   * @param mode The file mode to use. Must be one of (\"r, \"w\", \"rw\")\n   * @return ParcelFileDescriptor if open the file successfully, null otherwise.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onTranscodingStarted(int sessionId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Called when the transcoding associated with the sessionId finished.\n   * This will only be called if client request to get all the status of the session.\n   * \n   * @param sessionId sessionId assigned by the MediaTranscodingService upon receiving request.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onTranscodingPaused(int sessionId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Called when the transcoding associated with the sessionId is paused.\n   * This will only be called if client request to get all the status of the session.\n   * \n   * @param sessionId sessionId assigned by the MediaTranscodingService upon receiving request.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onTranscodingResumed(int sessionId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Called when the transcoding associated with the sessionId is resumed.\n   * This will only be called if client request to get all the status of the session.\n   * \n   * @param sessionId sessionId assigned by the MediaTranscodingService upon receiving request.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onTranscodingFinished(int sessionId, android.media.TranscodingResultParcel result) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Called when the transcoding associated with the sessionId finished.\n   * \n   * @param sessionId sessionId assigned by the MediaTranscodingService upon receiving request.\n   * @param result contains the transcoded file stats and other transcoding metrics if requested.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onTranscodingFailed(int sessionId, int errorCode) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Called when the transcoding associated with the sessionId failed.\n   * \n   * @param sessionId sessionId assigned by the MediaTranscodingService upon receiving request.\n   * @param errorCode error code that indicates the error.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onAwaitNumberOfSessionsChanged(int sessionId, int oldAwaitNumber, int newAwaitNumber) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Called when the transcoding configuration associated with the sessionId gets updated, i.e. wait\n   * number in the session queue.\n   * \n   * <p> This will only be called if client set requestUpdate to be true in the TranscodingRequest\n   * submitted to the MediaTranscodingService.\n   * \n   * @param sessionId sessionId assigned by the MediaTranscodingService upon receiving request.\n   * @param oldAwaitNumber previous number of sessions ahead of current session.\n   * @param newAwaitNumber updated number of sessions ahead of current session.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onProgressUpdate(int sessionId, int progress) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Called when there is an update on the progress of the TranscodingSession.\n   * \n   * <p> This will only be called if client set requestUpdate to be true in the TranscodingRequest\n   * submitted to the MediaTranscodingService.\n   * \n   * @param sessionId sessionId assigned by the MediaTranscodingService upon receiving request.\n   * @param progress an integer number ranging from 0 ~ 100 inclusive.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public android.os.ParcelFileDescriptor openFileDescriptor(java.lang.String fileUri, java.lang.String mode) throws android.os.RemoteException", "public void onTranscodingStarted(int sessionId) throws android.os.RemoteException", "public void onTranscodingPaused(int sessionId) throws android.os.RemoteException", "public void onTranscodingResumed(int sessionId) throws android.os.RemoteException", "public void onTranscodingFinished(int sessionId, android.media.TranscodingResultParcel result) throws android.os.RemoteException", "public void onTranscodingFailed(int sessionId, int errorCode) throws android.os.RemoteException", "public void onAwaitNumberOfSessionsChanged(int sessionId, int oldAwaitNumber, int newAwaitNumber) throws android.os.RemoteException", "public void onProgressUpdate(int sessionId, int progress) throws android.os.RemoteException" ],
  "variableNames" : [ "DESCRIPTOR" ]
}