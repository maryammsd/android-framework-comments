{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/PowerExemptionManager.java",
  "packageName" : "android.os",
  "className" : "PowerExemptionManager",
  "comment" : "\n * Interface to access and modify the permanent and temporary power save allow list. The two lists\n * are kept separately. Apps placed on the permanent allow list are only removed via an explicit\n * {@link #removeFromPermanentAllowList(String)} call. Apps allow-listed by default by the system\n * cannot be removed. Apps placed on the temporary allow list are removed from that allow list after\n * a predetermined amount of time.\n *\n * @hide\n ",
  "links" : [ "#removeFromPermanentAllowList(String)" ],
  "variables" : [ {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IDeviceIdleController",
    "comment" : " TODO: migrate to PowerExemptionController",
    "links" : [ ]
  }, {
    "name" : "EVENT_UNSPECIFIED",
    "type" : "int",
    "comment" : "\n     * Indicates that an unforeseen event has occurred and the app should be allow-listed to handle\n     * it.\n     ",
    "links" : [ ]
  }, {
    "name" : "EVENT_SMS",
    "type" : "int",
    "comment" : "\n     * Indicates that an SMS event has occurred and the app should be allow-listed to handle it.\n     ",
    "links" : [ ]
  }, {
    "name" : "EVENT_MMS",
    "type" : "int",
    "comment" : "\n     * Indicates that an MMS event has occurred and the app should be allow-listed to handle it.\n     ",
    "links" : [ ]
  }, {
    "name" : "TEMPORARY_ALLOW_LIST_TYPE_NONE",
    "type" : "int",
    "comment" : "\n     * Does not place the app on any temporary allow list. Nullifies the previous call to\n     * {@link android.app.BroadcastOptions#setTemporaryAppAllowlist(long, int, int, String)}.\n     * Note: this will not remove the receiver app from the temp allow list.\n     ",
    "links" : [ "android.app.BroadcastOptions#setTemporaryAppAllowlist(long" ]
  }, {
    "name" : "TEMPORARY_ALLOW_LIST_TYPE_FOREGROUND_SERVICE_ALLOWED",
    "type" : "int",
    "comment" : "\n     * Allow the temp allow list behavior, plus allow foreground service start from background.\n     ",
    "links" : [ ]
  }, {
    "name" : "TEMPORARY_ALLOW_LIST_TYPE_FOREGROUND_SERVICE_NOT_ALLOWED",
    "type" : "int",
    "comment" : "\n     * Only allow the temp allow list behavior, not allow foreground service start from background.\n     ",
    "links" : [ ]
  }, {
    "name" : "TEMPORARY_ALLOW_LIST_TYPE_APP_FREEZING_DELAYED",
    "type" : "int",
    "comment" : "\n     * Delay freezing the app when the broadcast is delivered. This flag is not required if\n     * TEMPORARY_ALLOW_LIST_TYPE_FOREGROUND_SERVICE_ALLOWED or\n     * TEMPORARY_ALLOW_LIST_TYPE_FOREGROUND_SERVICE_NOT_ALLOWED are specified, as those will\n     * already defer freezing during the allowlist duration.\n     * @hide temporarily until the next release\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_DENIED",
    "type" : "int",
    "comment" : "\n     * BG-FGS-launch is denied.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * The default reason code if reason is unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_OTHER",
    "type" : "int",
    "comment" : "\n     * Use REASON_OTHER if there is no better choice.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_PROC_STATE_PERSISTENT",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_PROC_STATE_PERSISTENT_UI",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_PROC_STATE_TOP",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_PROC_STATE_BTOP",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_PROC_STATE_FGS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_PROC_STATE_BFGS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_UID_VISIBLE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_SYSTEM_UID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_ACTIVITY_STARTER",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_START_ACTIVITY_FLAG",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_FGS_BINDING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_DEVICE_OWNER",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_PROFILE_OWNER",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_COMPANION_DEVICE_MANAGER",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_BACKGROUND_ACTIVITY_PERMISSION",
    "type" : "int",
    "comment" : "\n     * START_ACTIVITIES_FROM_BACKGROUND permission.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_BACKGROUND_FGS_PERMISSION",
    "type" : "int",
    "comment" : "\n     * START_FOREGROUND_SERVICES_FROM_BACKGROUND permission.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_INSTR_BACKGROUND_ACTIVITY_PERMISSION",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_INSTR_BACKGROUND_FGS_PERMISSION",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_SYSTEM_ALERT_WINDOW_PERMISSION",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_DEVICE_DEMO_MODE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_ALLOWLISTED_PACKAGE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_APPOP",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_ACTIVITY_VISIBILITY_GRACE_PERIOD",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_OP_ACTIVATE_VPN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_OP_ACTIVATE_PLATFORM_VPN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_TEMP_ALLOWED_WHILE_IN_USE",
    "type" : "int",
    "comment" : "\n     * Temporarily allowed to have FGS while-in-use permissions.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_CURRENT_INPUT_METHOD",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_GEOFENCING",
    "type" : "int",
    "comment" : "\n     * Set temp-allow-list for location geofence purpose.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_PUSH_MESSAGING",
    "type" : "int",
    "comment" : "\n     * Set temp-allow-list for server push messaging.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_PUSH_MESSAGING_OVER_QUOTA",
    "type" : "int",
    "comment" : "\n     * Set temp-allow-list for server push messaging over the quota.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_ACTIVITY_RECOGNITION",
    "type" : "int",
    "comment" : "\n     * Set temp-allow-list for activity recognition.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_ACCOUNT_TRANSFER",
    "type" : "int",
    "comment" : "\n     * Set temp-allow-list for transferring accounts between users.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_PUSH_MESSAGING_DEFERRABLE",
    "type" : "int",
    "comment" : "\n     * Set temp-allow-list for server push messaging that can be deferred.\n     * @hide temporarily until the next release\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_BOOT_COMPLETED",
    "type" : "int",
    "comment" : "\n     * Broadcast ACTION_BOOT_COMPLETED.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_PRE_BOOT_COMPLETED",
    "type" : "int",
    "comment" : "\n     * Broadcast ACTION_PRE_BOOT_COMPLETED.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_LOCKED_BOOT_COMPLETED",
    "type" : "int",
    "comment" : "\n     * Broadcast ACTION_LOCKED_BOOT_COMPLETED.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_BLUETOOTH_BROADCAST",
    "type" : "int",
    "comment" : "\n     * All Bluetooth broadcasts.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_TIMEZONE_CHANGED",
    "type" : "int",
    "comment" : "\n     * Broadcast {@link android.content.Intent#ACTION_TIMEZONE_CHANGED}\n     * @hide\n     ",
    "links" : [ "android.content.Intent#ACTION_TIMEZONE_CHANGED" ]
  }, {
    "name" : "REASON_TIME_CHANGED",
    "type" : "int",
    "comment" : "\n     * Broadcast {@link android.content.Intent#ACTION_TIME_CHANGED}\n     * @hide\n     ",
    "links" : [ "android.content.Intent#ACTION_TIME_CHANGED" ]
  }, {
    "name" : "REASON_LOCALE_CHANGED",
    "type" : "int",
    "comment" : "\n     * Broadcast {@link android.content.Intent#ACTION_LOCALE_CHANGED}\n     * @hide\n     ",
    "links" : [ "android.content.Intent#ACTION_LOCALE_CHANGED" ]
  }, {
    "name" : "REASON_SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED",
    "type" : "int",
    "comment" : "\n     * Broadcast\n     * {@link android.app.AlarmManager#ACTION_SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED}\n     * @hide\n     ",
    "links" : [ "android.app.AlarmManager#ACTION_SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED" ]
  }, {
    "name" : "REASON_REFRESH_SAFETY_SOURCES",
    "type" : "int",
    "comment" : "\n     * Broadcast {@link android.safetycenter.SafetyCenterManager#ACTION_REFRESH_SAFETY_SOURCES}.\n     ",
    "links" : [ "android.safetycenter.SafetyCenterManager#ACTION_REFRESH_SAFETY_SOURCES" ]
  }, {
    "name" : "REASON_SYSTEM_ALLOW_LISTED",
    "type" : "int",
    "comment" : "\n     * Device idle system allow list, including EXCEPT-IDLE\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_ALARM_MANAGER_ALARM_CLOCK",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_ALARM_MANAGER_WHILE_IDLE",
    "type" : "int",
    "comment" : "\n     * AlarmManagerService.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_SERVICE_LAUNCH",
    "type" : "int",
    "comment" : "\n     * ActiveServices.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_KEY_CHAIN",
    "type" : "int",
    "comment" : "\n     * KeyChainSystemService.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_PACKAGE_VERIFIER",
    "type" : "int",
    "comment" : "\n     * PackageManagerService.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_SYNC_MANAGER",
    "type" : "int",
    "comment" : "\n     * SyncManager.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_DOMAIN_VERIFICATION_V1",
    "type" : "int",
    "comment" : "\n     * DomainVerificationProxyV1.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_DOMAIN_VERIFICATION_V2",
    "type" : "int",
    "comment" : "\n     * DomainVerificationProxyV2.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_VPN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "REASON_NOTIFICATION_SERVICE",
    "type" : "int",
    "comment" : "\n     * NotificationManagerService.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_PACKAGE_REPLACED",
    "type" : "int",
    "comment" : "\n     * Broadcast ACTION_MY_PACKAGE_REPLACED.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_LOCATION_PROVIDER",
    "type" : "int",
    "comment" : "\n     * LocationProvider.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_MEDIA_BUTTON",
    "type" : "int",
    "comment" : "\n     * MediaButtonReceiver.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_EVENT_SMS",
    "type" : "int",
    "comment" : "\n     * InboundSmsHandler.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_EVENT_MMS",
    "type" : "int",
    "comment" : "\n     * InboundSmsHandler.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_SHELL",
    "type" : "int",
    "comment" : "\n     * Shell app.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_MEDIA_SESSION_CALLBACK",
    "type" : "int",
    "comment" : "\n     * Media session callbacks.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_ROLE_DIALER",
    "type" : "int",
    "comment" : "\n     * Dialer app.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_ROLE_EMERGENCY",
    "type" : "int",
    "comment" : "\n     * Emergency app.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_SYSTEM_MODULE",
    "type" : "int",
    "comment" : "\n     * System Module.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_CARRIER_PRIVILEGED_APP",
    "type" : "int",
    "comment" : "\n     * Carrier privileged app.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_DPO_PROTECTED_APP",
    "type" : "int",
    "comment" : "\n     * Device/Profile owner protected apps.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_DISALLOW_APPS_CONTROL",
    "type" : "int",
    "comment" : "\n     * Apps control is disallowed for the user.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_ACTIVE_DEVICE_ADMIN",
    "type" : "int",
    "comment" : "\n     * Active device admin package.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_MEDIA_NOTIFICATION_TRANSFER",
    "type" : "int",
    "comment" : "\n     * Media notification re-generate during transferring.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_PACKAGE_INSTALLER",
    "type" : "int",
    "comment" : "\n     * Package installer.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_SYSTEM_EXEMPT_APP_OP",
    "type" : "int",
    "comment" : "\n     * {@link android.app.AppOpsManager#OP_SYSTEM_EXEMPT_FROM_POWER_RESTRICTIONS}\n     * set to MODE_ALLOWED\n     * @hide\n     ",
    "links" : [ "android.app.AppOpsManager#OP_SYSTEM_EXEMPT_FROM_POWER_RESTRICTIONS" ]
  }, {
    "name" : "REASON_PACKAGE_UNARCHIVE",
    "type" : "int",
    "comment" : "\n     * Granted by {@link com.android.server.pm.PackageArchiver} to the installer responsible\n     * for unarchiving an app.\n     *\n     * @hide\n     ",
    "links" : [ "com.android.server.pm.PackageArchiver" ]
  }, {
    "name" : "REASON_TILE_ONCLICK",
    "type" : "int",
    "comment" : "\n     * Tile onClick event\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_OPT_OUT_REQUESTED",
    "type" : "int",
    "comment" : " @hide The app requests out-out. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void addToPermanentAllowList(@NonNull String packageName)",
    "returnType" : "void",
    "comment" : "\n     * Add the specified package to the permanent power save allow list.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addToPermanentAllowList(@NonNull List<String> packageNames)",
    "returnType" : "void",
    "comment" : "\n     * Add the specified packages to the permanent power save allow list.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getAllowListedAppIds(boolean includingIdle)",
    "returnType" : "int[]",
    "comment" : "\n     * Get a list of app IDs of app that are allow-listed. This does not include temporarily\n     * allow-listed apps.\n     *\n     * @param includingIdle Set to true if the app should be allow-listed from device idle as well\n     *                      as other power save restrictions\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAllowListed(@NonNull String packageName, boolean includingIdle)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the app is allow-listed from power save restrictions. This does not include\n     * temporarily allow-listed apps.\n     *\n     * @param includingIdle Set to true if the app should be allow-listed from device\n     *                      idle as well as other power save restrictions\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeFromPermanentAllowList(@NonNull String packageName)",
    "returnType" : "void",
    "comment" : "\n     * Remove an app from the permanent power save allow list. Only apps that were added via\n     * {@link #addToPermanentAllowList(String)} or {@link #addToPermanentAllowList(List)} will be\n     * removed. Apps allow-listed by default by the system cannot be removed.\n     *\n     * @param packageName The app to remove from the allow list\n     * @hide\n     ",
    "links" : [ "#addToPermanentAllowList(String)", "#addToPermanentAllowList(List)" ]
  }, {
    "name" : "public void addToTemporaryAllowList(@NonNull String packageName, @ReasonCode int reasonCode, @Nullable String reason, long durationMs)",
    "returnType" : "void",
    "comment" : "\n     * Add an app to the temporary allow list for a short amount of time.\n     *\n     * @param packageName The package to add to the temp allow list\n     * @param durationMs How long to keep the app on the temp allow list for (in milliseconds)\n     * @param reasonCode one of {@link ReasonCode}, use {@link #REASON_UNKNOWN} if not sure.\n     * @param reason a optional human readable reason string, could be null or empty string.\n     ",
    "links" : [ "#REASON_UNKNOWN", "ReasonCode" ]
  }, {
    "name" : "public long addToTemporaryAllowListForEvent(@NonNull String packageName, @ReasonCode int reasonCode, @Nullable String reason, @AllowListEvent int event)",
    "returnType" : "long",
    "comment" : "\n     * Add an app to the temporary allow list for a short amount of time for a specific reason.\n     * The temporary allow list is kept separately from the permanent allow list and apps are\n     * automatically removed from the temporary allow list after a predetermined amount of time.\n     *\n     * @param packageName The package to add to the temp allow list\n     * @param event       The reason to add the app to the temp allow list\n     * @param reasonCode  one of {@link ReasonCode}, use {@link #REASON_UNKNOWN} if not sure.\n     * @param reason      A human-readable reason explaining why the app is temp allow-listed. Only\n     *                    used for logging purposes. Could be null or empty string.\n     * @return The duration (in milliseconds) that the app is allow-listed for\n     ",
    "links" : [ "#REASON_UNKNOWN", "ReasonCode" ]
  }, {
    "name" : "public static int getReasonCodeFromProcState(int procState)",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getExemptionReasonForStatsd(@ReasonCode int reasonCode)",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * @return the reason code mapped to statsd for the AppBackgroundRestrictionsInfo atom.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String reasonCodeToString(@ReasonCode int reasonCode)",
    "returnType" : "String",
    "comment" : "\n     * Return string name of the integer reason code.\n     * @hide\n     * @param reasonCode\n     * @return string name of the reason code.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void addToPermanentAllowList(@NonNull String packageName)", "public void addToPermanentAllowList(@NonNull List<String> packageNames)", "public int[] getAllowListedAppIds(boolean includingIdle)", "public boolean isAllowListed(@NonNull String packageName, boolean includingIdle)", "public void removeFromPermanentAllowList(@NonNull String packageName)", "public void addToTemporaryAllowList(@NonNull String packageName, @ReasonCode int reasonCode, @Nullable String reason, long durationMs)", "public long addToTemporaryAllowListForEvent(@NonNull String packageName, @ReasonCode int reasonCode, @Nullable String reason, @AllowListEvent int event)", "public static int getReasonCodeFromProcState(int procState)", "public static int getExemptionReasonForStatsd(@ReasonCode int reasonCode)", "public static String reasonCodeToString(@ReasonCode int reasonCode)" ],
  "variableNames" : [ "mContext", "mService", "EVENT_UNSPECIFIED", "EVENT_SMS", "EVENT_MMS", "TEMPORARY_ALLOW_LIST_TYPE_NONE", "TEMPORARY_ALLOW_LIST_TYPE_FOREGROUND_SERVICE_ALLOWED", "TEMPORARY_ALLOW_LIST_TYPE_FOREGROUND_SERVICE_NOT_ALLOWED", "TEMPORARY_ALLOW_LIST_TYPE_APP_FREEZING_DELAYED", "REASON_DENIED", "REASON_UNKNOWN", "REASON_OTHER", "REASON_PROC_STATE_PERSISTENT", "REASON_PROC_STATE_PERSISTENT_UI", "REASON_PROC_STATE_TOP", "REASON_PROC_STATE_BTOP", "REASON_PROC_STATE_FGS", "REASON_PROC_STATE_BFGS", "REASON_UID_VISIBLE", "REASON_SYSTEM_UID", "REASON_ACTIVITY_STARTER", "REASON_START_ACTIVITY_FLAG", "REASON_FGS_BINDING", "REASON_DEVICE_OWNER", "REASON_PROFILE_OWNER", "REASON_COMPANION_DEVICE_MANAGER", "REASON_BACKGROUND_ACTIVITY_PERMISSION", "REASON_BACKGROUND_FGS_PERMISSION", "REASON_INSTR_BACKGROUND_ACTIVITY_PERMISSION", "REASON_INSTR_BACKGROUND_FGS_PERMISSION", "REASON_SYSTEM_ALERT_WINDOW_PERMISSION", "REASON_DEVICE_DEMO_MODE", "REASON_ALLOWLISTED_PACKAGE", "REASON_APPOP", "REASON_ACTIVITY_VISIBILITY_GRACE_PERIOD", "REASON_OP_ACTIVATE_VPN", "REASON_OP_ACTIVATE_PLATFORM_VPN", "REASON_TEMP_ALLOWED_WHILE_IN_USE", "REASON_CURRENT_INPUT_METHOD", "REASON_GEOFENCING", "REASON_PUSH_MESSAGING", "REASON_PUSH_MESSAGING_OVER_QUOTA", "REASON_ACTIVITY_RECOGNITION", "REASON_ACCOUNT_TRANSFER", "REASON_PUSH_MESSAGING_DEFERRABLE", "REASON_BOOT_COMPLETED", "REASON_PRE_BOOT_COMPLETED", "REASON_LOCKED_BOOT_COMPLETED", "REASON_BLUETOOTH_BROADCAST", "REASON_TIMEZONE_CHANGED", "REASON_TIME_CHANGED", "REASON_LOCALE_CHANGED", "REASON_SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED", "REASON_REFRESH_SAFETY_SOURCES", "REASON_SYSTEM_ALLOW_LISTED", "REASON_ALARM_MANAGER_ALARM_CLOCK", "REASON_ALARM_MANAGER_WHILE_IDLE", "REASON_SERVICE_LAUNCH", "REASON_KEY_CHAIN", "REASON_PACKAGE_VERIFIER", "REASON_SYNC_MANAGER", "REASON_DOMAIN_VERIFICATION_V1", "REASON_DOMAIN_VERIFICATION_V2", "REASON_VPN", "REASON_NOTIFICATION_SERVICE", "REASON_PACKAGE_REPLACED", "REASON_LOCATION_PROVIDER", "REASON_MEDIA_BUTTON", "REASON_EVENT_SMS", "REASON_EVENT_MMS", "REASON_SHELL", "REASON_MEDIA_SESSION_CALLBACK", "REASON_ROLE_DIALER", "REASON_ROLE_EMERGENCY", "REASON_SYSTEM_MODULE", "REASON_CARRIER_PRIVILEGED_APP", "REASON_DPO_PROTECTED_APP", "REASON_DISALLOW_APPS_CONTROL", "REASON_ACTIVE_DEVICE_ADMIN", "REASON_MEDIA_NOTIFICATION_TRANSFER", "REASON_PACKAGE_INSTALLER", "REASON_SYSTEM_EXEMPT_APP_OP", "REASON_PACKAGE_UNARCHIVE", "REASON_TILE_ONCLICK", "REASON_OPT_OUT_REQUESTED" ]
}