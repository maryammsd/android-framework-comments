{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/twt/TwtRequest.java",
  "packageName" : "android.net.wifi.twt",
  "className" : "TwtRequest",
  "comment" : "\n * Defines target wake time (TWT) request class.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mMinWakeDurationMicros",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxWakeDurationMicros",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinWakeIntervalMicros",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxWakeIntervalMicros",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLinkId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TwtRequest>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getMinWakeDurationMicros()",
    "returnType" : "int",
    "comment" : "\n     * Get minimum TWT wake duration in microseconds.\n     *\n     * @return Minimum wake duration in microseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxWakeDurationMicros()",
    "returnType" : "int",
    "comment" : "\n     * Get maximum TWT wake duration in microseconds.\n     *\n     * @return Maximum wake duration in microseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getMinWakeIntervalMicros()",
    "returnType" : "long",
    "comment" : "\n     * Get minimum TWT wake interval in microseconds.\n     *\n     * @return Minimum wake interval in microseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getMaxWakeIntervalMicros()",
    "returnType" : "long",
    "comment" : "\n     * Get maximum TWT wake interval in microseconds.\n     *\n     * @return Maximum wake interval in microseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLinkId()",
    "returnType" : "int",
    "comment" : "\n     * Get link id (valid only in case of Multi-link operation).\n     *\n     * @return MLO link id in the range {@link MloLink#MIN_MLO_LINK_ID} to\n     * {@link MloLink#MAX_MLO_LINK_ID}. Returns {@link MloLink#INVALID_MLO_LINK_ID} if not set.\n     ",
    "links" : [ "android.net.wifi.MloLink#INVALID_MLO_LINK_ID", "android.net.wifi.MloLink#MAX_MLO_LINK_ID", "android.net.wifi.MloLink#MIN_MLO_LINK_ID" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * Describe the kinds of special objects contained in this Parcelable\n     * instance's marshaled representation.\n     *\n     * @return a bitmask indicating the set of special object types marshaled\n     * by this Parcelable object instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Flatten this object in to a Parcel.\n     *\n     * @param dest The Parcel in which the object should be written.\n     * @param flags Additional flags about how the object should be written.\n     * May be 0 or {@link #PARCELABLE_WRITE_RETURN_VALUE}.\n     ",
    "links" : [ "#PARCELABLE_WRITE_RETURN_VALUE" ]
  } ],
  "methodNames" : [ "public int getMinWakeDurationMicros()", "public int getMaxWakeDurationMicros()", "public long getMinWakeIntervalMicros()", "public long getMaxWakeIntervalMicros()", "public int getLinkId()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "mMinWakeDurationMicros", "mMaxWakeDurationMicros", "mMinWakeIntervalMicros", "mMaxWakeIntervalMicros", "mLinkId", "CREATOR" ]
}