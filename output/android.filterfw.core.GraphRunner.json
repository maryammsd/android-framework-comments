{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/filterfw/core/GraphRunner.java",
  "packageName" : "android.filterfw.core",
  "className" : "GraphRunner",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mFilterContext",
    "type" : "FilterContext",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_UNKNOWN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_RUNNING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_FINISHED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_SLEEPING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_BLOCKED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_STOPPED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_ERROR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract FilterGraph getGraph()",
    "returnType" : "FilterGraph",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public FilterContext getContext()",
    "returnType" : "FilterContext",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean activateGlContext()",
    "returnType" : "boolean",
    "comment" : "\n     * Helper function for subclasses to activate the GL environment before running.\n     * @return true, if the GL environment was activated. Returns false, if the GL environment\n     *         was already active.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void deactivateGlContext()",
    "returnType" : "void",
    "comment" : "\n     * Helper function for subclasses to deactivate the GL environment after running.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void run()",
    "returnType" : "void",
    "comment" : " Starts running the graph. Will open the filters in the graph if they are not already open. ",
    "links" : [ ]
  }, {
    "name" : "public abstract void setDoneCallback(OnRunnerDoneListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean isRunning()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void stop()",
    "returnType" : "void",
    "comment" : " Stops graph execution. As part of stopping, also closes the graph nodes. ",
    "links" : [ ]
  }, {
    "name" : "public abstract void close()",
    "returnType" : "void",
    "comment" : " Closes the filters in a graph. Can only be called if the graph is not running. ",
    "links" : [ ]
  }, {
    "name" : "public abstract Exception getError()",
    "returnType" : "Exception",
    "comment" : "\n     * Returns the last exception that happened during an asynchronous run. Returns null if\n     * there is nothing to report.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract FilterGraph getGraph()", "public FilterContext getContext()", "protected boolean activateGlContext()", "protected void deactivateGlContext()", "public abstract void run()", "public abstract void setDoneCallback(OnRunnerDoneListener listener)", "public abstract boolean isRunning()", "public abstract void stop()", "public abstract void close()", "public abstract Exception getError()" ],
  "variableNames" : [ "mFilterContext", "RESULT_UNKNOWN", "RESULT_RUNNING", "RESULT_FINISHED", "RESULT_SLEEPING", "RESULT_BLOCKED", "RESULT_STOPPED", "RESULT_ERROR" ]
}