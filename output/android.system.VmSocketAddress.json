{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/system/VmSocketAddress.java",
  "packageName" : "android.system",
  "className" : "VmSocketAddress",
  "comment" : "\n * A virtio-vsock address {@link VmSocketAddress}.\n *\n * <p>\n * virtio-vsock socket address, linux specific.\n *\n * <p>\n * {@link VmSocketAddress} corresponds to {@code struct sockaddr_vm} in\n * bionic/libc/kernel/uapi/linux/vm_sockets.h.\n *\n * <p>\n * Currently virtio-vsock is used as a generic purpose pipe in emulators\n * to talk to the host. Most I/O operations using this address via {@link Os} class will require\n * additional permissions to talk to the host.\n *\n * @see <a href=\"https://man7.org/linux/man-pages/man7/vsock.7.html\">vsock(7)</a>\n ",
  "links" : [ "android.system.Os", "android.system.VmSocketAddress" ],
  "variables" : [ {
    "name" : "svmPort",
    "type" : "int",
    "comment" : "\n      * sockaddr_vm::svmPort, see {@code struct sockaddr_vm} in\n      * bionic/libc/kernel/uapi/linux/vm_sockets.h for more details.\n      ",
    "links" : [ ]
  }, {
    "name" : "svmCid",
    "type" : "int",
    "comment" : "\n      * sockaddr_vm::svmCid, see {@code struct sockaddr_vm} in\n      * bionic/libc/kernel/uapi/linux/vm_sockets.h for more details.\n      ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getSvmPort()",
    "returnType" : "int",
    "comment" : "\n     * Returns the value of the svmPort field\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSvmCid()",
    "returnType" : "int",
    "comment" : "\n     * Returns the value of the svmCid field\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getSvmPort()", "public int getSvmCid()" ],
  "variableNames" : [ "svmPort", "svmCid" ]
}