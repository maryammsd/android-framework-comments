{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/AppOpsManager.java",
  "packageName" : "android.app",
  "className" : "OnOpStartedListener",
  "comment" : "\n     * Callback for notification of an op being started.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "START_TYPE_FAILED",
    "type" : "int",
    "comment" : "\n         * Represents a start operation that was unsuccessful\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "START_TYPE_STARTED",
    "type" : "int",
    "comment" : "\n         * Represents a successful start operation\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "START_TYPE_RESUMED",
    "type" : "int",
    "comment" : "\n         * Represents an operation where a restricted operation became unrestricted, and resumed.\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void onOpStarted(int op, int uid, String packageName, String attributionTag, @OpFlags int flags, @Mode int result)",
    "returnType" : "void",
    "comment" : "\n         * Called when an op was started.\n         *\n         * Note: This is only for op starts. It is not called when an op is noted or stopped.\n         * @param op The op code.\n         * @param uid The UID performing the operation.\n         * @param packageName The package performing the operation.\n         * @param attributionTag The attribution tag performing the operation.\n         * @param flags The flags of this op.\n         * @param result The result of the start.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onOpStarted(int op, int uid, String packageName, String attributionTag, @OpFlags int flags, @Mode int result, @StartedType int startType, @AttributionFlags int attributionFlags, int attributionChainId)",
    "returnType" : "void",
    "comment" : "\n         * Called when an op was started.\n         *\n         * <p> Implement this method and not\n         * {@link #onOpStarted(int, int, String, String, int, int, int, int, int, int)} if\n         * callbacks are\n         * required only on op starts for the default device\n         * {@link Context#DEVICE_ID_DEFAULT}.\n         *\n         * Note: This is only for op starts. It is not called when an op is noted or stopped.\n         * By default, unless this method is overridden, no code will be executed for resume\n         * events.\n         * @param op The op code.\n         * @param uid The UID performing the operation.\n         * @param packageName The package performing the operation.\n         * @param attributionTag The attribution tag performing the operation.\n         * @param flags The flags of this op.\n         * @param result The result of the start.\n         * @param startType The start type of this start event. Either failed, resumed, or started.\n         * @param attributionFlags The location of this started op in an attribution chain.\n         * @param attributionChainId The ID of the attribution chain of this op, if it is in one.\n         ",
    "links" : [ "android.content.Context#DEVICE_ID_DEFAULT", "#onOpStarted(int" ]
  }, {
    "name" : " void onOpStarted(int op, int uid, @NonNull String packageName, @Nullable String attributionTag, int virtualDeviceId, @OpFlags int flags, @Mode int result, @StartedType int startType, @AttributionFlags int attributionFlags, int attributionChainId)",
    "returnType" : "void",
    "comment" : "\n         * Similar to {@link #onOpStarted(int, int, String, String, int, int)},\n         * but also includes the virtual device id that started the op.\n         *\n         * <p> Implement this method if callbacks are required on all devices.\n         * If not implemented explicitly, the default implementation will notify for op starts on\n         * the default device {@link Context#DEVICE_ID_DEFAULT} only.\n         *\n         * <p> If implemented, {@link #onOpStarted(int, int, String, String, int, int)}\n         * will not be called automatically.\n         *\n         * @param op The op code.\n         * @param uid The UID performing the operation.\n         * @param packageName The package performing the operation.\n         * @param attributionTag The attribution tag performing the operation.\n         * @param virtualDeviceId the device that started the operation\n         * @param flags The flags of this op.\n         * @param result The result of the start.\n         * @param startType The start type of this start event. Either failed, resumed, or started.\n         * @param attributionFlags The location of this started op in an attribution chain.\n         ",
    "links" : [ "android.content.Context#DEVICE_ID_DEFAULT", "#onOpStarted(int" ]
  } ],
  "methodNames" : [ " void onOpStarted(int op, int uid, String packageName, String attributionTag, @OpFlags int flags, @Mode int result)", " void onOpStarted(int op, int uid, String packageName, String attributionTag, @OpFlags int flags, @Mode int result, @StartedType int startType, @AttributionFlags int attributionFlags, int attributionChainId)", " void onOpStarted(int op, int uid, @NonNull String packageName, @Nullable String attributionTag, int virtualDeviceId, @OpFlags int flags, @Mode int result, @StartedType int startType, @AttributionFlags int attributionFlags, int attributionChainId)" ],
  "variableNames" : [ "START_TYPE_FAILED", "START_TYPE_STARTED", "START_TYPE_RESUMED" ]
}