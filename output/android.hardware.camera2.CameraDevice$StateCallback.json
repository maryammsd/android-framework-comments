{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/CameraDevice.java",
  "packageName" : "android.hardware.camera2",
  "className" : "StateCallback",
  "comment" : "\n     * A callback objects for receiving updates about the state of a camera device.\n     *\n     * <p>A callback instance must be provided to the {@link CameraManager#openCamera} method to\n     * open a camera device.</p>\n     *\n     * <p>These state updates include notifications about the device completing startup (\n     * allowing for {@link #createCaptureSession} to be called), about device\n     * disconnection or closure, and about unexpected device errors.</p>\n     *\n     * <p>Events about the progress of specific {@link CaptureRequest CaptureRequests} are provided\n     * through a {@link CameraCaptureSession.CaptureCallback} given to the\n     * {@link CameraCaptureSession#capture}, {@link CameraCaptureSession#captureBurst},\n     * {@link CameraCaptureSession#setRepeatingRequest}, or\n     * {@link CameraCaptureSession#setRepeatingBurst} methods.\n     *\n     * @see CameraManager#openCamera\n     ",
  "links" : [ "android.hardware.camera2.CameraManager#openCamera", "android.hardware.camera2.CameraCaptureSession#setRepeatingBurst", "#createCaptureSession", "android.hardware.camera2.CameraCaptureSession#capture", "CameraCaptureSession.CaptureCallback", "android.hardware.camera2.CaptureRequest", "android.hardware.camera2.CameraCaptureSession#setRepeatingRequest", "android.hardware.camera2.CameraCaptureSession#captureBurst" ],
  "variables" : [ {
    "name" : "ERROR_CAMERA_IN_USE",
    "type" : "int",
    "comment" : "\n         * An error code that can be reported by {@link #onError}\n         * indicating that the camera device is in use already.\n         *\n         * <p>\n         * This error can be produced when opening the camera fails due to the camera\n        *  being used by a higher-priority camera API client.\n         * </p>\n         *\n         * @see #onError\n         ",
    "links" : [ "#onError" ]
  }, {
    "name" : "ERROR_MAX_CAMERAS_IN_USE",
    "type" : "int",
    "comment" : "\n         * An error code that can be reported by {@link #onError}\n         * indicating that the camera device could not be opened\n         * because there are too many other open camera devices.\n         *\n         * <p>\n         * The system-wide limit for number of open cameras has been reached,\n         * and more camera devices cannot be opened until previous instances are\n         * closed.\n         * </p>\n         *\n         * <p>\n         * This error can be produced when opening the camera fails.\n         * </p>\n         *\n         * @see #onError\n         ",
    "links" : [ "#onError" ]
  }, {
    "name" : "ERROR_CAMERA_DISABLED",
    "type" : "int",
    "comment" : "\n         * An error code that can be reported by {@link #onError}\n         * indicating that the camera device could not be opened due to a device\n         * policy.\n         *\n         * @see android.app.admin.DevicePolicyManager#setCameraDisabled(android.content.ComponentName, boolean)\n         * @see #onError\n         ",
    "links" : [ "#onError" ]
  }, {
    "name" : "ERROR_CAMERA_DEVICE",
    "type" : "int",
    "comment" : "\n         * An error code that can be reported by {@link #onError}\n         * indicating that the camera device has encountered a fatal error.\n         *\n         * <p>The camera device needs to be re-opened to be used again.</p>\n         *\n         * @see #onError\n         ",
    "links" : [ "#onError" ]
  }, {
    "name" : "ERROR_CAMERA_SERVICE",
    "type" : "int",
    "comment" : "\n         * An error code that can be reported by {@link #onError}\n         * indicating that the camera service has encountered a fatal error.\n         *\n         * <p>The Android device may need to be shut down and restarted to restore\n         * camera function, or there may be a persistent hardware problem.</p>\n         *\n         * <p>An attempt at recovery <i>may</i> be possible by closing the\n         * CameraDevice and the CameraManager, and trying to acquire all resources\n         * again from scratch.</p>\n         *\n         * @see #onError\n         ",
    "links" : [ "#onError" ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onOpened(@NonNull CameraDevice camera)",
    "returnType" : "void",
    "comment" : " Must implement",
    "links" : [ ]
  }, {
    "name" : "public void onClosed(@NonNull CameraDevice camera)",
    "returnType" : "void",
    "comment" : "\n         * The method called when a camera device has been closed with\n         * {@link CameraDevice#close}.\n         *\n         * <p>Any attempt to call methods on this CameraDevice in the\n         * future will throw a {@link IllegalStateException}.</p>\n         *\n         * <p>The default implementation of this method does nothing.</p>\n         *\n         * @param camera the camera device that has become closed\n         ",
    "links" : [ "IllegalStateException", "android.hardware.camera2.CameraDevice#close" ]
  }, {
    "name" : "public abstract void onDisconnected(@NonNull CameraDevice camera)",
    "returnType" : "void",
    "comment" : " Must implement",
    "links" : [ ]
  }, {
    "name" : "public abstract void onError(@NonNull CameraDevice camera, @ErrorCode int error)",
    "returnType" : "void",
    "comment" : "\n         * The method called when a camera device has encountered a serious error.\n         *\n         * <p>This callback may be called instead of {@link #onOpened}\n         * if opening the camera fails.</p>\n         *\n         * <p>This indicates a failure of the camera device or camera service in\n         * some way. Any attempt to call methods on this CameraDevice in the\n         * future will throw a {@link CameraAccessException} with the\n         * {@link CameraAccessException#CAMERA_ERROR CAMERA_ERROR} reason.\n         * </p>\n         *\n         * <p>There may still be capture completion or camera stream callbacks\n         * that will be called after this error is received.</p>\n         *\n         * <p>You should clean up the camera with {@link CameraDevice#close} after\n         * this happens. Further attempts at recovery are error-code specific.</p>\n         *\n         * @param camera The device reporting the error\n         * @param error The error code.\n         *\n         * @see #ERROR_CAMERA_IN_USE\n         * @see #ERROR_MAX_CAMERAS_IN_USE\n         * @see #ERROR_CAMERA_DISABLED\n         * @see #ERROR_CAMERA_DEVICE\n         * @see #ERROR_CAMERA_SERVICE\n         ",
    "links" : [ "android.hardware.camera2.CameraAccessException#CAMERA_ERROR", "#onOpened", "android.hardware.camera2.CameraAccessException", "android.hardware.camera2.CameraDevice#close" ]
  } ],
  "methodNames" : [ "public abstract void onOpened(@NonNull CameraDevice camera)", "public void onClosed(@NonNull CameraDevice camera)", "public abstract void onDisconnected(@NonNull CameraDevice camera)", "public abstract void onError(@NonNull CameraDevice camera, @ErrorCode int error)" ],
  "variableNames" : [ "ERROR_CAMERA_IN_USE", "ERROR_MAX_CAMERAS_IN_USE", "ERROR_CAMERA_DISABLED", "ERROR_CAMERA_DEVICE", "ERROR_CAMERA_SERVICE" ]
}