{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/StatFs.java",
  "packageName" : "android.os",
  "className" : "StatFs",
  "comment" : "\n * Retrieve overall information about the space on a filesystem. This is a\n * wrapper for Unix statvfs().\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mStat",
    "type" : "StructStatVfs",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static StructStatVfs doStat(String path)",
    "returnType" : "StructStatVfs",
    "comment" : "\n     * @throws IllegalArgumentException if the file system access fails\n     ",
    "links" : [ ]
  }, {
    "name" : "public void restat(String path)",
    "returnType" : "void",
    "comment" : "\n     * Perform a restat of the file system referenced by this object. This is\n     * the same as re-constructing the object with the same file system path,\n     * and the new stat values are available upon return.\n     *\n     * @throws IllegalArgumentException if the file system access fails\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBlockSize()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated Use {@link #getBlockSizeLong()} instead.\n     ",
    "links" : [ "#getBlockSizeLong()" ]
  }, {
    "name" : "public long getBlockSizeLong()",
    "returnType" : "long",
    "comment" : "\n     * The size, in bytes, of a block on the file system. This corresponds to\n     * the Unix {@code statvfs.f_frsize} field.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBlockCount()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated Use {@link #getBlockCountLong()} instead.\n     ",
    "links" : [ "#getBlockCountLong()" ]
  }, {
    "name" : "public long getBlockCountLong()",
    "returnType" : "long",
    "comment" : "\n     * The total number of blocks on the file system. This corresponds to the\n     * Unix {@code statvfs.f_blocks} field.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFreeBlocks()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated Use {@link #getFreeBlocksLong()} instead.\n     ",
    "links" : [ "#getFreeBlocksLong()" ]
  }, {
    "name" : "public long getFreeBlocksLong()",
    "returnType" : "long",
    "comment" : "\n     * The total number of blocks that are free on the file system, including\n     * reserved blocks (that are not available to normal applications). This\n     * corresponds to the Unix {@code statvfs.f_bfree} field. Most applications\n     * will want to use {@link #getAvailableBlocksLong()} instead.\n     ",
    "links" : [ "#getAvailableBlocksLong()" ]
  }, {
    "name" : "public long getFreeBytes()",
    "returnType" : "long",
    "comment" : "\n     * The number of bytes that are free on the file system, including reserved\n     * blocks (that are not available to normal applications). Most applications\n     * will want to use {@link #getAvailableBytes()} instead.\n     ",
    "links" : [ "#getAvailableBytes()" ]
  }, {
    "name" : "public int getAvailableBlocks()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated Use {@link #getAvailableBlocksLong()} instead.\n     ",
    "links" : [ "#getAvailableBlocksLong()" ]
  }, {
    "name" : "public long getAvailableBlocksLong()",
    "returnType" : "long",
    "comment" : "\n     * The number of blocks that are free on the file system and available to\n     * applications. This corresponds to the Unix {@code statvfs.f_bavail} field.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getAvailableBytes()",
    "returnType" : "long",
    "comment" : "\n     * The number of bytes that are free on the file system and available to\n     * applications.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalBytes()",
    "returnType" : "long",
    "comment" : "\n     * The total number of bytes supported by the file system.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static StructStatVfs doStat(String path)", "public void restat(String path)", "public int getBlockSize()", "public long getBlockSizeLong()", "public int getBlockCount()", "public long getBlockCountLong()", "public int getFreeBlocks()", "public long getFreeBlocksLong()", "public long getFreeBytes()", "public int getAvailableBlocks()", "public long getAvailableBlocksLong()", "public long getAvailableBytes()", "public long getTotalBytes()" ],
  "variableNames" : [ "mStat" ]
}