{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/MediaExtractor.java",
  "packageName" : "android.media",
  "className" : "CasInfo",
  "comment" : "\n     * Describes the conditional access system used to scramble a track.\n     ",
  "variables" : [ {
    "name" : "mSystemId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSession",
    "type" : "MediaCas.Session",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPrivateData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getSystemId()",
    "returnType" : "int",
    "comment" : "\n         * Retrieves the system id of the conditional access system.\n         *\n         * @return CA system id of the CAS used to scramble the track.\n         ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getPrivateData()",
    "returnType" : "byte[]",
    "comment" : "\n         * Retrieves the private data in the CA_Descriptor associated with a track.\n         * Some CAS systems may need this to initialize the CAS plugin object. This\n         * private data can only be retrieved before a valid {@link MediaCas} object\n         * is set on the extractor.\n         * <p>\n         * @see MediaExtractor#setMediaCas\n         * <p>\n         * @return a byte array containing the private data. A null return value\n         *         indicates that the private data is unavailable. An empty array,\n         *         on the other hand, indicates that the private data is empty\n         *         (zero in length).\n         ",
    "links" : [ "android.media.MediaCas" ]
  }, {
    "name" : "public MediaCas.Session getSession()",
    "returnType" : "MediaCas.Session",
    "comment" : "\n         * Retrieves the {@link MediaCas.Session} associated with a track. The\n         * session is needed to initialize a descrambler in order to decode the\n         * scrambled track. The session object can only be retrieved after a valid\n         * {@link MediaCas} object is set on the extractor.\n         * <p>\n         * @see MediaExtractor#setMediaCas\n         * @see MediaDescrambler#setMediaCasSession\n         * <p>\n         * @return a {@link MediaCas.Session} object associated with a track.\n         ",
    "links" : [ "MediaCas.Session", "android.media.MediaCas" ]
  } ],
  "variableNames" : [ "mSystemId", "mSession", "mPrivateData" ],
  "methodNames" : [ "public int getSystemId()", "public byte[] getPrivateData()", "public MediaCas.Session getSession()" ]
}