{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "Nickname",
  "comment" : "\n         * <p>A data kind representing the contact's nickname. For example, for\n         * Bob Parr (\"Mr. Incredible\"):\n         * <pre>\n         * ArrayList&lt;ContentProviderOperation&gt; ops =\n         *          new ArrayList&lt;ContentProviderOperation&gt;();\n         *\n         * ops.add(ContentProviderOperation.newInsert(Data.CONTENT_URI)\n         *          .withValue(Data.RAW_CONTACT_ID, rawContactId)\n         *          .withValue(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE)\n         *          .withValue(StructuredName.DISPLAY_NAME, &quot;Bob Parr&quot;)\n         *          .build());\n         *\n         * ops.add(ContentProviderOperation.newInsert(Data.CONTENT_URI)\n         *          .withValue(Data.RAW_CONTACT_ID, rawContactId)\n         *          .withValue(Data.MIMETYPE, Nickname.CONTENT_ITEM_TYPE)\n         *          .withValue(Nickname.NAME, \"Mr. Incredible\")\n         *          .withValue(Nickname.TYPE, Nickname.TYPE_CUSTOM)\n         *          .withValue(Nickname.LABEL, \"Superhero\")\n         *          .build());\n         *\n         * getContentResolver().applyBatch(ContactsContract.AUTHORITY, ops);\n         * </pre>\n         * </p>\n         * <p>\n         * You can use all columns defined for {@link ContactsContract.Data} as well as the\n         * following aliases.\n         * </p>\n         *\n         * <h2>Column aliases</h2>\n         * <table class=\"jd-sumtable\">\n         * <tr>\n         * <th>Type</th><th>Alias</th><th colspan='2'>Data column</th>\n         * </tr>\n         * <tr>\n         * <td>String</td>\n         * <td>{@link #NAME}</td>\n         * <td>{@link #DATA1}</td>\n         * <td></td>\n         * </tr>\n         * <tr>\n         * <td>int</td>\n         * <td>{@link #TYPE}</td>\n         * <td>{@link #DATA2}</td>\n         * <td>\n         * Allowed values are:\n         * <p>\n         * <ul>\n         * <li>{@link #TYPE_CUSTOM}. Put the actual type in {@link #LABEL}.</li>\n         * <li>{@link #TYPE_DEFAULT}</li>\n         * <li>{@link #TYPE_OTHER_NAME}</li>\n         * <li>{@link #TYPE_MAIDEN_NAME}</li>\n         * <li>{@link #TYPE_SHORT_NAME}</li>\n         * <li>{@link #TYPE_INITIALS}</li>\n         * </ul>\n         * </p>\n         * </td>\n         * </tr>\n         * <tr>\n         * <td>String</td>\n         * <td>{@link #LABEL}</td>\n         * <td>{@link #DATA3}</td>\n         * <td></td>\n         * </tr>\n         * </table>\n         ",
  "links" : [ "#TYPE_MAIDEN_NAME", "#TYPE", "#TYPE_SHORT_NAME", "#DATA3", "#DATA1", "#DATA2", "#TYPE_DEFAULT", "#LABEL", "#TYPE_OTHER_NAME", "ContactsContract.Data", "#TYPE_CUSTOM", "#TYPE_INITIALS", "#NAME" ],
  "variables" : [ {
    "name" : "CONTENT_ITEM_TYPE",
    "type" : "String",
    "comment" : " MIME type used when storing this in data table. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_DEFAULT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_OTHER_NAME",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_MAIDEN_NAME",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_MAINDEN_NAME",
    "type" : "int",
    "comment" : " @deprecated Use TYPE_MAIDEN_NAME instead. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_SHORT_NAME",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_INITIALS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NAME",
    "type" : "String",
    "comment" : "\n             * The name itself\n             ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "CONTENT_ITEM_TYPE", "TYPE_DEFAULT", "TYPE_OTHER_NAME", "TYPE_MAIDEN_NAME", "TYPE_MAINDEN_NAME", "TYPE_SHORT_NAME", "TYPE_INITIALS", "NAME" ]
}