{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/BarringInfo.java",
  "packageName" : "android.telephony",
  "className" : "BarringServiceInfo",
  "comment" : " Describe the current barring configuration of a cell ",
  "variables" : [ {
    "name" : "BARRING_TYPE_NONE",
    "type" : "int",
    "comment" : " Barring is inactive ",
    "links" : [ ]
  }, {
    "name" : "BARRING_TYPE_UNCONDITIONAL",
    "type" : "int",
    "comment" : " The service is barred ",
    "links" : [ ]
  }, {
    "name" : "BARRING_TYPE_CONDITIONAL",
    "type" : "int",
    "comment" : " The service may be barred based on additional factors ",
    "links" : [ ]
  }, {
    "name" : "BARRING_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : " If a modem does not report barring info, then the barring type will be UNKNOWN ",
    "links" : [ ]
  }, {
    "name" : "mBarringType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsConditionallyBarred",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConditionalBarringFactor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConditionalBarringTimeSeconds",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<BarringServiceInfo>",
    "comment" : " @inheritDoc ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getBarringType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isConditionallyBarred()",
    "returnType" : "boolean",
    "comment" : "\n         * @return true if the conditional barring parameters have resulted in the service being\n         *         barred; false if the service has either not been evaluated for conditional\n         *         barring or has been evaluated and isn't barred.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getConditionalBarringFactor()",
    "returnType" : "int",
    "comment" : "\n         * @return the conditional barring factor as a percentage 0-100, which is the probability of\n         *         a random device being barred for the service type.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getConditionalBarringTimeSeconds()",
    "returnType" : "int",
    "comment" : "\n         * @return the conditional barring time seconds, which is the interval between successive\n         *         evaluations for conditional barring based on the barring factor.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBarred()",
    "returnType" : "boolean",
    "comment" : "\n         * Return whether a service is currently barred based on the BarringInfo\n         *\n         * @return true if the service is currently being barred, otherwise false\n         ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object rhs)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "BARRING_TYPE_NONE", "BARRING_TYPE_UNCONDITIONAL", "BARRING_TYPE_CONDITIONAL", "BARRING_TYPE_UNKNOWN", "mBarringType", "mIsConditionallyBarred", "mConditionalBarringFactor", "mConditionalBarringTimeSeconds", "CREATOR" ],
  "methodNames" : [ "public int getBarringType()", "public boolean isConditionallyBarred()", "public int getConditionalBarringFactor()", "public int getConditionalBarringTimeSeconds()", "public boolean isBarred()", "public int hashCode()", "public boolean equals(Object rhs)", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()" ]
}