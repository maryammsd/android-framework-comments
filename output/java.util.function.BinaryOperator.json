{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/function/BinaryOperator.java",
  "packageName" : "java.util.function",
  "className" : "BinaryOperator",
  "comment" : "\n * Represents an operation upon two operands of the same type, producing a result\n * of the same type as the operands.  This is a specialization of\n * {@link BiFunction} for the case where the operands and the result are all of\n * the same type.\n *\n * <p>This is a <a href=\"package-summary.html\">functional interface</a>\n * whose functional method is {@link #apply(Object, Object)}.\n *\n * @param <T> the type of the operands and result of the operator\n *\n * @see BiFunction\n * @see UnaryOperator\n * @since 1.8\n ",
  "links" : [ "java.util.function.BiFunction", "#apply(Object" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static BinaryOperator<T> minBy(Comparator<? super T> comparator)",
    "returnType" : "BinaryOperator<T>",
    "comment" : "\n     * Returns a {@link BinaryOperator} which returns the lesser of two elements\n     * according to the specified {@code Comparator}.\n     *\n     * @param <T> the type of the input arguments of the comparator\n     * @param comparator a {@code Comparator} for comparing the two values\n     * @return a {@code BinaryOperator} which returns the lesser of its operands,\n     *         according to the supplied {@code Comparator}\n     * @throws NullPointerException if the argument is null\n     ",
    "links" : [ "java.util.function.BinaryOperator" ]
  }, {
    "name" : "public static BinaryOperator<T> maxBy(Comparator<? super T> comparator)",
    "returnType" : "BinaryOperator<T>",
    "comment" : "\n     * Returns a {@link BinaryOperator} which returns the greater of two elements\n     * according to the specified {@code Comparator}.\n     *\n     * @param <T> the type of the input arguments of the comparator\n     * @param comparator a {@code Comparator} for comparing the two values\n     * @return a {@code BinaryOperator} which returns the greater of its operands,\n     *         according to the supplied {@code Comparator}\n     * @throws NullPointerException if the argument is null\n     ",
    "links" : [ "java.util.function.BinaryOperator" ]
  } ],
  "methodNames" : [ "public static BinaryOperator<T> minBy(Comparator<? super T> comparator)", "public static BinaryOperator<T> maxBy(Comparator<? super T> comparator)" ],
  "variableNames" : [ ]
}