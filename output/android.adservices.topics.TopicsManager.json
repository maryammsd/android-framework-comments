{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/topics/TopicsManager.java",
  "packageName" : "android.adservices.topics",
  "className" : "TopicsManager",
  "comment" : "\n * TopicsManager provides APIs for App and Ad-Sdks to get the user interest topics in a privacy\n * preserving way.\n *\n * <p>The instance of the {@link TopicsManager} can be obtained using {@link\n * Context#getSystemService} and {@link TopicsManager} class.\n ",
  "links" : [ "android.app.sdksandbox.SandboxedSdkContext#getSystemService", "android.adservices.topics.TopicsManager" ],
  "variables" : [ {
    "name" : "sLogger",
    "type" : "LoggerFactory.Logger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TOPICS_SERVICE",
    "type" : "String",
    "comment" : "\n     * Constant that represents the service name for {@link TopicsManager} to be used in {@link\n     * android.adservices.AdServicesFrameworkInitializer#registerServiceWrappers}\n     *\n     * @hide\n     ",
    "links" : [ "android.adservices.AdServicesFrameworkInitializer#registerServiceWrappers", "android.adservices.topics.TopicsManager" ]
  }, {
    "name" : "EMPTY_SDK",
    "type" : "String",
    "comment" : " When an app calls the Topics API directly, it sets the SDK name to empty string.",
    "links" : [ ]
  }, {
    "name" : "RECORD_OBSERVATION_DEFAULT",
    "type" : "boolean",
    "comment" : " Default value is true to record SDK's Observation when it calls Topics API.",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceBinder",
    "type" : "ServiceBinder<ITopicsService>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static TopicsManager get(@NonNull Context context)",
    "returnType" : "TopicsManager",
    "comment" : "\n     * Factory method for creating an instance of TopicsManager.\n     *\n     * @param context The {@link Context} to use\n     * @return A {@link TopicsManager} instance\n     ",
    "links" : [ "android.app.sdksandbox.SandboxedSdkContext", "android.adservices.topics.TopicsManager" ]
  }, {
    "name" : "public TopicsManager initialize(Context context)",
    "returnType" : "TopicsManager",
    "comment" : "\n     * Initializes {@link TopicsManager} with the given {@code context}.\n     *\n     * <p>This method is called by the {@link SandboxedSdkContext} to propagate the correct context.\n     * For more information check the javadoc on the {@link\n     * android.app.sdksandbox.SdkSandboxSystemServiceRegistry}.\n     *\n     * @hide\n     * @see android.app.sdksandbox.SdkSandboxSystemServiceRegistry\n     ",
    "links" : [ "android.app.sdksandbox.SandboxedSdkContext", "android.app.sdksandbox.SdkSandboxSystemServiceRegistry", "android.adservices.topics.TopicsManager" ]
  }, {
    "name" : "private ITopicsService getService()",
    "returnType" : "ITopicsService",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getTopics(@NonNull GetTopicsRequest getTopicsRequest, @NonNull @CallbackExecutor Executor executor, @NonNull OutcomeReceiver<GetTopicsResponse, Exception> callback)",
    "returnType" : "void",
    "comment" : "\n     * Return the topics.\n     *\n     * @param getTopicsRequest The request for obtaining Topics.\n     * @param executor The executor to run callback.\n     * @param callback The callback that's called after topics are available or an error occurs.\n     * @throws IllegalStateException if this API is not available.\n     ",
    "links" : [ ]
  }, {
    "name" : "private GetTopicsResponse buildGetTopicsResponse(GetTopicsResult resultParcel)",
    "returnType" : "GetTopicsResponse",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private List<Topic> getTopicList(GetTopicsResult resultParcel)",
    "returnType" : "List<Topic>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private List<EncryptedTopic> getEncryptedTopicList(GetTopicsResult resultParcel)",
    "returnType" : "List<EncryptedTopic>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unbindFromService()",
    "returnType" : "void",
    "comment" : " TODO: change to @VisibleForTesting",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static TopicsManager get(@NonNull Context context)", "public TopicsManager initialize(Context context)", "private ITopicsService getService()", "public void getTopics(@NonNull GetTopicsRequest getTopicsRequest, @NonNull @CallbackExecutor Executor executor, @NonNull OutcomeReceiver<GetTopicsResponse, Exception> callback)", "private GetTopicsResponse buildGetTopicsResponse(GetTopicsResult resultParcel)", "private List<Topic> getTopicList(GetTopicsResult resultParcel)", "private List<EncryptedTopic> getEncryptedTopicList(GetTopicsResult resultParcel)", "public void unbindFromService()" ],
  "variableNames" : [ "sLogger", "TOPICS_SERVICE", "EMPTY_SDK", "RECORD_OBSERVATION_DEFAULT", "mContext", "mServiceBinder" ]
}