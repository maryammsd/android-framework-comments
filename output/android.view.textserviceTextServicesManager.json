{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/textservice/TextServicesManager.java",
  "packageName" : "android.view.textservice",
  "className" : "TextServicesManager",
  "comment" : "\n * A stub class of TextServicesManager for Layout-Lib.\n ",
  "variables" : [ {
    "name" : "sInstance",
    "type" : "TextServicesManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMPTY_SPELL_CHECKER_INFO",
    "type" : "SpellCheckerInfo[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static TextServicesManager getInstance()",
    "returnType" : "TextServicesManager",
    "comment" : "\n     * Retrieve the global TextServicesManager instance, creating it if it doesn't already exist.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public SpellCheckerSession newSpellCheckerSession(Bundle bundle, Locale locale, SpellCheckerSessionListener listener, boolean referToSpellCheckerLanguageSettings)",
    "returnType" : "SpellCheckerSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SpellCheckerInfo[] getEnabledSpellCheckers()",
    "returnType" : "SpellCheckerInfo[]",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public SpellCheckerInfo getCurrentSpellChecker()",
    "returnType" : "SpellCheckerInfo",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean allowImplicitlySelectedSubtype)",
    "returnType" : "SpellCheckerSubtype",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSpellCheckerEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "sInstance", "EMPTY_SPELL_CHECKER_INFO" ],
  "methodNames" : [ "public static TextServicesManager getInstance()", "public SpellCheckerSession newSpellCheckerSession(Bundle bundle, Locale locale, SpellCheckerSessionListener listener, boolean referToSpellCheckerLanguageSettings)", "public SpellCheckerInfo[] getEnabledSpellCheckers()", "public SpellCheckerInfo getCurrentSpellChecker()", "public SpellCheckerSubtype getCurrentSpellCheckerSubtype(boolean allowImplicitlySelectedSubtype)", "public boolean isSpellCheckerEnabled()" ]
}