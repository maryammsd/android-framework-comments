{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/text/LineBreakConfig.java",
  "packageName" : "android.graphics.text",
  "className" : "Builder",
  "comment" : "\n     * A builder for creating a {@code LineBreakConfig} instance.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mLineBreakStyle",
    "type" : "int",
    "comment" : " The line break style for the LineBreakConfig.",
    "links" : [ ]
  }, {
    "name" : "mLineBreakWordStyle",
    "type" : "int",
    "comment" : " The line break word style for the LineBreakConfig.",
    "links" : [ ]
  }, {
    "name" : "mHyphenation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder merge(@NonNull LineBreakConfig config)",
    "returnType" : "Builder",
    "comment" : "\n         * Merges line break config with other config\n         *\n         * Update the internal configurations with passed {@code config}. If the config values of\n         * passed {@code config} are unspecified, the original config values are kept. For example,\n         * the following code passes {@code config} that has {@link #LINE_BREAK_STYLE_UNSPECIFIED}.\n         * This code generates {@link LineBreakConfig} that has line break config\n         * {@link #LINE_BREAK_STYLE_STRICT}.\n         *\n         * <pre>\n         *     val override = LineBreakConfig.Builder()\n         *          .setLineBreakWordStyle(LineBreakConfig.LINE_BREAK_WORD_STYLE_PHRASE)\n         *          .build();  // UNSPECIFIED if no setLineBreakStyle is called.\n         *     val config = LineBreakConfig.Builder()\n         *          .setLineBreakStyle(LineBreakConfig.LINE_BREAK_STYLE_STRICT)\n         *          .merge(override)\n         *          .build()\n         *     // Here, config has LINE_BREAK_STYLE_STRICT of line break config and\n         *     // LINE_BREAK_WORD_STYLE_PHRASE of line break word style.\n         * </pre>\n         *\n         * @see #LINE_BREAK_STYLE_UNSPECIFIED\n         * @see #LINE_BREAK_WORD_STYLE_UNSPECIFIED\n         *\n         * @param config an override line break config\n         * @return This {@code Builder}.\n         ",
    "links" : [ "#LINE_BREAK_STYLE_UNSPECIFIED", "android.graphics.text.LineBreakConfig", "#LINE_BREAK_STYLE_STRICT" ]
  }, {
    "name" : "public Builder reset(@Nullable LineBreakConfig config)",
    "returnType" : "Builder",
    "comment" : "\n         * Resets this builder to the given config state.\n         *\n         * @param config a config value used for resetting. {@code null} is allowed. If {@code null}\n         *              is passed, all configs are reset to unspecified.\n         * @return This {@code Builder}.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLineBreakStyle(@LineBreakStyle int lineBreakStyle)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the line-break style.\n         *\n         * @see <a href=\"https://unicode.org/reports/tr35/#UnicodeLineBreakStyleIdentifier\">\n         *     Unicode Line Break Style Identifier</a>\n         * @see <a href=\"https://drafts.csswg.org/css-text/#line-break-property\">\n         *     CSS Line Break Property</a>\n         *\n         * @param lineBreakStyle The new line-break style.\n         * @return This {@code Builder}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLineBreakWordStyle(@LineBreakWordStyle int lineBreakWordStyle)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the line-break word style.\n         *\n         * @see <a href=\"https://unicode.org/reports/tr35/#UnicodeLineBreakWordIdentifier\">\n         *     Unicode Line Break Word Identifier</a>\n         * @see <a href=\"https://drafts.csswg.org/css-text/#word-break-property\">\n         *     CSS Word Break Property</a>\n         *\n         * @param lineBreakWordStyle The new line-break word style.\n         * @return This {@code Builder}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHyphenation(@Hyphenation int hyphenation)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the hyphenation preference\n         *\n         * Note: Even if the {@link LineBreakConfig#HYPHENATION_ENABLED} is specified, the\n         * hyphenation will not be performed if the {@link android.widget.TextView} or underlying\n         * {@link android.text.StaticLayout}, {@link LineBreaker} are configured with\n         * {@link LineBreaker#HYPHENATION_FREQUENCY_NONE}.\n         *\n         * Note: Even if the hyphenation is enabled with a line break strategy\n         * {@link LineBreaker#BREAK_STRATEGY_SIMPLE}, the hyphenation will not be performed unless a\n         * single word cannot meet width constraints.\n         *\n         * @param hyphenation The hyphenation preference.\n         * @return This {@code Builder}.\n         ",
    "links" : [ "android.text.StaticLayout", "android.graphics.text.LineBreakConfig#HYPHENATION_ENABLED", "android.widget.TextView", "android.graphics.text.LineBreaker#HYPHENATION_FREQUENCY_NONE", "android.graphics.text.LineBreaker", "android.graphics.text.LineBreaker#BREAK_STRATEGY_SIMPLE" ]
  }, {
    "name" : "public LineBreakConfig build()",
    "returnType" : "LineBreakConfig",
    "comment" : "\n         * Builds a {@link LineBreakConfig} instance.\n         *\n         * This method can be called multiple times for generating multiple {@link LineBreakConfig}\n         * instances.\n         *\n         * @return The {@code LineBreakConfig} instance.\n         ",
    "links" : [ "android.graphics.text.LineBreakConfig" ]
  } ],
  "methodNames" : [ "public Builder merge(@NonNull LineBreakConfig config)", "public Builder reset(@Nullable LineBreakConfig config)", "public Builder setLineBreakStyle(@LineBreakStyle int lineBreakStyle)", "public Builder setLineBreakWordStyle(@LineBreakWordStyle int lineBreakWordStyle)", "public Builder setHyphenation(@Hyphenation int hyphenation)", "public LineBreakConfig build()" ],
  "variableNames" : [ "mLineBreakStyle", "mLineBreakWordStyle", "mHyphenation" ]
}