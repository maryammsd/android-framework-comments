{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/widget/ExpandableListConnector.java",
  "packageName" : "android.widget",
  "className" : "ExpandableListConnector",
  "comment" : "\n * A {@link BaseAdapter} that provides data/Views in an expandable list (offers\n * features such as collapsing/expanding groups containing children). By\n * itself, this adapter has no data and is a connector to a\n * {@link ExpandableListAdapter} which provides the data.\n * <p>\n * Internally, this connector translates the flat list position that the\n * ListAdapter expects to/from group and child positions that the ExpandableListAdapter\n * expects.\n ",
  "variables" : [ {
    "name" : "mExpandableListAdapter",
    "type" : "ExpandableListAdapter",
    "comment" : "\n     * The ExpandableListAdapter to fetch the data/Views for this expandable list\n     ",
    "links" : [ ]
  }, {
    "name" : "mExpGroupMetadataList",
    "type" : "ArrayList<GroupMetadata>",
    "comment" : "\n     * List of metadata for the currently expanded groups. The metadata consists\n     * of data essential for efficiently translating between flat list positions\n     * and group/child positions. See {@link GroupMetadata}.\n     ",
    "links" : [ "GroupMetadata" ]
  }, {
    "name" : "mTotalExpChildrenCount",
    "type" : "int",
    "comment" : " The number of children from all currently expanded groups ",
    "links" : [ ]
  }, {
    "name" : "mMaxExpGroupCount",
    "type" : "int",
    "comment" : " The maximum number of allowable expanded groups. Defaults to 'no limit' ",
    "links" : [ ]
  }, {
    "name" : "mDataSetObserver",
    "type" : "DataSetObserver",
    "comment" : " Change observer used to have ExpandableListAdapter changes pushed to us ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setExpandableListAdapter(ExpandableListAdapter expandableListAdapter)",
    "returnType" : "void",
    "comment" : "\n     * Point to the {@link ExpandableListAdapter} that will give us data/Views\n     * \n     * @param expandableListAdapter the adapter that supplies us with data/Views\n     ",
    "links" : [ "android.widget.ExpandableListAdapter" ]
  }, {
    "name" : " PositionMetadata getUnflattenedPos(final int flPos)",
    "returnType" : "PositionMetadata",
    "comment" : "\n     * Translates a flat list position to either a) group pos if the specified\n     * flat list position corresponds to a group, or b) child pos if it\n     * corresponds to a child.  Performs a binary search on the expanded\n     * groups list to find the flat list pos if it is an exp group, otherwise\n     * finds where the flat list pos fits in between the exp groups.\n     * \n     * @param flPos the flat list position to be translated\n     * @return the group position or child position of the specified flat list\n     *         position encompassed in a {@link PositionMetadata} object\n     *         that contains additional useful info for insertion, etc.\n     ",
    "links" : [ "PositionMetadata" ]
  }, {
    "name" : " PositionMetadata getFlattenedPos(final ExpandableListPosition pos)",
    "returnType" : "PositionMetadata",
    "comment" : "\n     * Translates either a group pos or a child pos (+ group it belongs to) to a\n     * flat list position.  If searching for a child and its group is not expanded, this will\n     * return null since the child isn't being shown in the ListView, and hence it has no\n     * position.\n     * \n     * @param pos a {@link ExpandableListPosition} representing either a group position\n     *        or child position\n     * @return the flat list position encompassed in a {@link PositionMetadata}\n     *         object that contains additional useful info for insertion, etc., or null.\n     ",
    "links" : [ "android.widget.ExpandableListPosition", "PositionMetadata" ]
  }, {
    "name" : "public boolean areAllItemsEnabled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled(int flatListPos)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object getItem(int flatListPos)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getItemId(int flatListPos)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View getView(int flatListPos, View convertView, ViewGroup parent)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getItemViewType(int flatListPos)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getViewTypeCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasStableIds()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void refreshExpGroupMetadataList(boolean forceChildrenCountRefresh, boolean syncGroupPositions)",
    "returnType" : "void",
    "comment" : "\n     * Traverses the expanded group metadata list and fills in the flat list\n     * positions.\n     * \n     * @param forceChildrenCountRefresh Forces refreshing of the children count\n     *        for all expanded groups.\n     * @param syncGroupPositions Whether to search for the group positions\n     *         based on the group IDs. This should only be needed when calling\n     *         this from an onChanged callback.\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean collapseGroup(int groupPos)",
    "returnType" : "boolean",
    "comment" : "\n     * Collapse a group in the grouped list view\n     * \n     * @param groupPos position of the group to collapse\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean collapseGroup(PositionMetadata posMetadata)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean expandGroup(int groupPos)",
    "returnType" : "boolean",
    "comment" : "\n     * Expand a group in the grouped list view\n     * @param groupPos the group to be expanded\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean expandGroup(PositionMetadata posMetadata)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isGroupExpanded(int groupPosition)",
    "returnType" : "boolean",
    "comment" : "\n     * Whether the given group is currently expanded.\n     * @param groupPosition The group to check.\n     * @return Whether the group is currently expanded.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMaxExpGroupCount(int maxExpGroupCount)",
    "returnType" : "void",
    "comment" : "\n     * Set the maximum number of groups that can be expanded at any given time\n     ",
    "links" : [ ]
  }, {
    "name" : " ExpandableListAdapter getAdapter()",
    "returnType" : "ExpandableListAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Filter getFilter()",
    "returnType" : "Filter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ArrayList<GroupMetadata> getExpandedGroupMetadataList()",
    "returnType" : "ArrayList<GroupMetadata>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setExpandedGroupMetadataList(ArrayList<GroupMetadata> expandedGroupMetadataList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int findGroupPosition(long groupIdToMatch, int seedGroupPosition)",
    "returnType" : "int",
    "comment" : "\n     * Searches the expandable list adapter for a group position matching the\n     * given group ID. The search starts at the given seed position and then\n     * alternates between moving up and moving down until 1) we find the right\n     * position, or 2) we run out of time, or 3) we have looked at every\n     * position\n     * \n     * @return Position of the row that matches the given row ID, or\n     *         {@link AdapterView#INVALID_POSITION} if it can't be found\n     * @see AdapterView#findSyncPosition()\n     ",
    "links" : [ "android.widget.AdapterView#INVALID_POSITION" ]
  } ],
  "variableNames" : [ "mExpandableListAdapter", "mExpGroupMetadataList", "mTotalExpChildrenCount", "mMaxExpGroupCount", "mDataSetObserver" ],
  "methodNames" : [ "public void setExpandableListAdapter(ExpandableListAdapter expandableListAdapter)", " PositionMetadata getUnflattenedPos(final int flPos)", " PositionMetadata getFlattenedPos(final ExpandableListPosition pos)", "public boolean areAllItemsEnabled()", "public boolean isEnabled(int flatListPos)", "public int getCount()", "public Object getItem(int flatListPos)", "public long getItemId(int flatListPos)", "public View getView(int flatListPos, View convertView, ViewGroup parent)", "public int getItemViewType(int flatListPos)", "public int getViewTypeCount()", "public boolean hasStableIds()", "private void refreshExpGroupMetadataList(boolean forceChildrenCountRefresh, boolean syncGroupPositions)", " boolean collapseGroup(int groupPos)", " boolean collapseGroup(PositionMetadata posMetadata)", " boolean expandGroup(int groupPos)", " boolean expandGroup(PositionMetadata posMetadata)", "public boolean isGroupExpanded(int groupPosition)", "public void setMaxExpGroupCount(int maxExpGroupCount)", " ExpandableListAdapter getAdapter()", "public Filter getFilter()", " ArrayList<GroupMetadata> getExpandedGroupMetadataList()", " void setExpandedGroupMetadataList(ArrayList<GroupMetadata> expandedGroupMetadataList)", "public boolean isEmpty()", " int findGroupPosition(long groupIdToMatch, int seedGroupPosition)" ]
}