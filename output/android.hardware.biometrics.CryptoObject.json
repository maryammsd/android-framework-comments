{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/biometrics/CryptoObject.java",
  "packageName" : "android.hardware.biometrics",
  "className" : "CryptoObject",
  "comment" : "\n * A wrapper class for the crypto objects supported by BiometricPrompt and FingerprintManager.\n * Currently the framework supports {@link Signature}, {@link Cipher}, {@link Mac},\n * {@link KeyAgreement}, {@link IdentityCredential}, and {@link PresentationSession} objects.\n * @hide\n ",
  "links" : [ "javax.crypto.KeyAgreement", "android.security.identity.PresentationSession", "java.security.Signature", "javax.crypto.Mac", "android.security.identity.IdentityCredential", "javax.crypto.Cipher" ],
  "variables" : [ {
    "name" : "mCrypto",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Signature getSignature()",
    "returnType" : "Signature",
    "comment" : "\n     * Get {@link Signature} object.\n     * @return {@link Signature} object or null if this doesn't contain one.\n     ",
    "links" : [ "java.security.Signature" ]
  }, {
    "name" : "public Cipher getCipher()",
    "returnType" : "Cipher",
    "comment" : "\n     * Get {@link Cipher} object.\n     * @return {@link Cipher} object or null if this doesn't contain one.\n     ",
    "links" : [ "javax.crypto.Cipher" ]
  }, {
    "name" : "public Mac getMac()",
    "returnType" : "Mac",
    "comment" : "\n     * Get {@link Mac} object.\n     * @return {@link Mac} object or null if this doesn't contain one.\n     ",
    "links" : [ "javax.crypto.Mac" ]
  }, {
    "name" : "public IdentityCredential getIdentityCredential()",
    "returnType" : "IdentityCredential",
    "comment" : "\n     * Get {@link IdentityCredential} object.\n     * @return {@link IdentityCredential} object or null if this doesn't contain one.\n     * @deprecated Use {@link PresentationSession} instead of {@link IdentityCredential}.\n     ",
    "links" : [ "android.security.identity.PresentationSession", "android.security.identity.IdentityCredential" ]
  }, {
    "name" : "public PresentationSession getPresentationSession()",
    "returnType" : "PresentationSession",
    "comment" : "\n     * Get {@link PresentationSession} object.\n     * @return {@link PresentationSession} object or null if this doesn't contain one.\n     ",
    "links" : [ "android.security.identity.PresentationSession" ]
  }, {
    "name" : "public KeyAgreement getKeyAgreement()",
    "returnType" : "KeyAgreement",
    "comment" : "\n     * Get {@link KeyAgreement} object. A key-agreement protocol is a protocol whereby\n     * two or more parties can agree on a shared secret using public key cryptography.\n     *\n     * @return {@link KeyAgreement} object or null if this doesn't contain one.\n     ",
    "links" : [ "javax.crypto.KeyAgreement" ]
  }, {
    "name" : "public long getOpId()",
    "returnType" : "long",
    "comment" : "\n     * @hide\n     * @return the opId associated with this object or 0 if none\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Signature getSignature()", "public Cipher getCipher()", "public Mac getMac()", "public IdentityCredential getIdentityCredential()", "public PresentationSession getPresentationSession()", "public KeyAgreement getKeyAgreement()", "public long getOpId()" ],
  "variableNames" : [ "mCrypto" ]
}