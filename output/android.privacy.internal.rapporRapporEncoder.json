{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/privacy/internal/rappor/RapporEncoder.java",
  "packageName" : "android.privacy.internal.rappor",
  "className" : "RapporEncoder",
  "comment" : "\n * Differential privacy encoder by using\n * <a href=\"https://research.google.com/pubs/pub42852.html\">RAPPOR</a>\n * algorithm.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "INSECURE_SECRET",
    "type" : "byte[]",
    "comment" : " Hard-coded seed and secret for insecure encoder",
    "links" : [ ]
  }, {
    "name" : "sSecureRandom",
    "type" : "SecureRandom",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfig",
    "type" : "RapporConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncoder",
    "type" : "Encoder",
    "comment" : " Rappor encoder",
    "links" : [ ]
  }, {
    "name" : "mIsSecure",
    "type" : "boolean",
    "comment" : " True if encoder is secure (seed is securely randomized)",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private long getInsecureSeed(String input)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static RapporEncoder createEncoder(RapporConfig config, byte[] userSecret)",
    "returnType" : "RapporEncoder",
    "comment" : "\n     * Create {@link RapporEncoder} with {@link RapporConfig} and user secret provided.\n     *\n     * @param config     Rappor parameters to encode input.\n     * @param userSecret Per device unique secret key.\n     * @return {@link RapporEncoder} instance.\n     ",
    "links" : [ "RapporEncoder", "RapporConfig", "RapporEncoder" ]
  }, {
    "name" : "public static RapporEncoder createInsecureEncoderForTest(RapporConfig config)",
    "returnType" : "RapporEncoder",
    "comment" : "\n     * Create <strong>insecure</strong> {@link RapporEncoder} with {@link RapporConfig} provided.\n     * Should not use it to process sensitive data.\n     *\n     * @param config Rappor parameters to encode input.\n     * @return {@link RapporEncoder} instance.\n     ",
    "links" : [ "RapporEncoder", "RapporConfig", "RapporEncoder" ]
  }, {
    "name" : "public byte[] encodeString(String original)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] encodeBoolean(boolean original)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] encodeBits(byte[] bits)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RapporConfig getConfig()",
    "returnType" : "RapporConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isInsecureEncoderForTest()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "INSECURE_SECRET", "sSecureRandom", "mConfig", "mEncoder", "mIsSecure" ],
  "methodNames" : [ "private long getInsecureSeed(String input)", "public static RapporEncoder createEncoder(RapporConfig config, byte[] userSecret)", "public static RapporEncoder createInsecureEncoderForTest(RapporConfig config)", "public byte[] encodeString(String original)", "public byte[] encodeBoolean(boolean original)", "public byte[] encodeBits(byte[] bits)", "public RapporConfig getConfig()", "public boolean isInsecureEncoderForTest()" ]
}