{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/SubtitleTrack.java",
  "packageName" : "android.media",
  "className" : "SubtitleTrack",
  "comment" : "\n * A subtitle track abstract base class that is responsible for parsing and displaying\n * an instance of a particular type of subtitle.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastUpdateTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRunnable",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRunsByEndTime",
    "type" : "LongSparseArray<Run>",
    "comment" : " @hide TODO private ",
    "links" : [ ]
  }, {
    "name" : "mRunsByID",
    "type" : "LongSparseArray<Run>",
    "comment" : " @hide TODO private ",
    "links" : [ ]
  }, {
    "name" : "mCues",
    "type" : "CueList",
    "comment" : " @hide TODO private ",
    "links" : [ ]
  }, {
    "name" : "mActiveCues",
    "type" : "Vector<Cue>",
    "comment" : " @hide TODO private ",
    "links" : [ ]
  }, {
    "name" : "mVisible",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mFormat",
    "type" : "MediaFormat",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNextScheduledTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeProvider",
    "type" : "MediaTimeProvider",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final MediaFormat getFormat()",
    "returnType" : "MediaFormat",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "protected void onData(SubtitleData data)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void onData(byte[] data, boolean eos, long runID)",
    "returnType" : "void",
    "comment" : "\n     * Called when there is input data for the subtitle track.  The\n     * complete subtitle for a track can include multiple whole units\n     * (runs).  Each of these units can have multiple sections.  The\n     * contents of a run are submitted in sequential order, with eos\n     * indicating the last section of the run.  Calls from different\n     * runs must not be intermixed.\n     *\n     * @param data subtitle data byte buffer\n     * @param eos true if this is the last section of the run.\n     * @param runID mostly-unique ID for this run of data.  Subtitle cues\n     *              with runID of 0 are discarded immediately after\n     *              display.  Cues with runID of ~0 are discarded\n     *              only at the deletion of the track object.  Cues\n     *              with other runID-s are discarded at the end of the\n     *              run, which defaults to the latest timestamp of\n     *              any of its cues (with this runID).\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract RenderingWidget getRenderingWidget()",
    "returnType" : "RenderingWidget",
    "comment" : "\n     * Called when adding the subtitle rendering widget to the view hierarchy,\n     * as well as when showing or hiding the subtitle track, or when the video\n     * surface position has changed.\n     *\n     * @return the widget that renders this subtitle track. For most renderers\n     *         there should be a single shared instance that is used for all\n     *         tracks supported by that renderer, as at most one subtitle track\n     *         is visible at one time.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void updateView(Vector<Cue> activeCues)",
    "returnType" : "void",
    "comment" : "\n     * Called when the active cues have changed, and the contents of the subtitle\n     * view should be updated.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected synchronized void updateActiveCues(boolean rebuild, long timeMs)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void removeRunsByEndTimeIndex(int ix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private synchronized void takeTime(long timeMs)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected synchronized void clearActiveCues()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "protected void scheduleTimedEvents()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void onTimedEvent(long timeUs)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onSeek(long timeUs)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onStop()",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void show()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void hide()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "protected synchronized boolean addCue(Cue cue)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public synchronized void setTimeProvider(MediaTimeProvider timeProvider)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "protected void finishedRun(long runID)",
    "returnType" : "void",
    "comment" : " @hide update mRunsByEndTime (with default end time) ",
    "links" : [ ]
  }, {
    "name" : "public void setRunDiscardTimeMs(long runID, long timeMs)",
    "returnType" : "void",
    "comment" : " @hide update mRunsByEndTime with given end time ",
    "links" : [ ]
  }, {
    "name" : "public int getTrackType()",
    "returnType" : "int",
    "comment" : " @hide whether this is a text track who fires events instead getting rendered ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final MediaFormat getFormat()", "protected void onData(SubtitleData data)", "public abstract void onData(byte[] data, boolean eos, long runID)", "public abstract RenderingWidget getRenderingWidget()", "public abstract void updateView(Vector<Cue> activeCues)", "protected synchronized void updateActiveCues(boolean rebuild, long timeMs)", "private void removeRunsByEndTimeIndex(int ix)", "protected void finalize() throws Throwable", "private synchronized void takeTime(long timeMs)", "protected synchronized void clearActiveCues()", "protected void scheduleTimedEvents()", "public void onTimedEvent(long timeUs)", "public void onSeek(long timeUs)", "public void onStop()", "public void show()", "public void hide()", "protected synchronized boolean addCue(Cue cue)", "public synchronized void setTimeProvider(MediaTimeProvider timeProvider)", "protected void finishedRun(long runID)", "public void setRunDiscardTimeMs(long runID, long timeMs)", "public int getTrackType()" ],
  "variableNames" : [ "TAG", "mLastUpdateTimeMs", "mLastTimeMs", "mRunnable", "mRunsByEndTime", "mRunsByID", "mCues", "mActiveCues", "mVisible", "DEBUG", "mHandler", "mFormat", "mNextScheduledTimeMs", "mTimeProvider" ]
}