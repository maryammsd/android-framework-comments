{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/companion/virtual/sensor/VirtualSensorConfig.java",
  "packageName" : "android.companion.virtual.sensor",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link VirtualSensorConfig}.\n     ",
  "links" : [ "android.companion.virtual.sensor.VirtualSensorConfig" ],
  "variables" : [ {
    "name" : "FLAG_MEMORY_FILE_DIRECT_CHANNEL_SUPPORTED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVendor",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaximumRange",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResolution",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPower",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinDelay",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxDelay",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHighestDirectReportRateLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public VirtualSensorConfig build()",
    "returnType" : "VirtualSensorConfig",
    "comment" : "\n         * Creates a new {@link VirtualSensorConfig}.\n         ",
    "links" : [ "android.companion.virtual.sensor.VirtualSensorConfig" ]
  }, {
    "name" : "public VirtualSensorConfig.Builder setVendor(@Nullable String vendor)",
    "returnType" : "VirtualSensorConfig.Builder",
    "comment" : "\n         * Sets the vendor string of the sensor.\n         ",
    "links" : [ ]
  }, {
    "name" : "public VirtualSensorConfig.Builder setMaximumRange(float maximumRange)",
    "returnType" : "VirtualSensorConfig.Builder",
    "comment" : "\n         * Sets the maximum range of the sensor in the sensor's unit.\n         *\n         * @see Sensor#getMaximumRange\n         ",
    "links" : [ ]
  }, {
    "name" : "public VirtualSensorConfig.Builder setResolution(float resolution)",
    "returnType" : "VirtualSensorConfig.Builder",
    "comment" : "\n         * Sets the resolution of the sensor in the sensor's unit.\n         *\n         * @see Sensor#getResolution\n         ",
    "links" : [ ]
  }, {
    "name" : "public VirtualSensorConfig.Builder setPower(float power)",
    "returnType" : "VirtualSensorConfig.Builder",
    "comment" : "\n         * Sets the power in mA used by this sensor while in use.\n         *\n         * @see Sensor#getPower\n         ",
    "links" : [ ]
  }, {
    "name" : "public VirtualSensorConfig.Builder setMinDelay(int minDelay)",
    "returnType" : "VirtualSensorConfig.Builder",
    "comment" : "\n         * Sets the minimum delay allowed between two events in microseconds.\n         *\n         * @see Sensor#getMinDelay\n         ",
    "links" : [ ]
  }, {
    "name" : "public VirtualSensorConfig.Builder setMaxDelay(int maxDelay)",
    "returnType" : "VirtualSensorConfig.Builder",
    "comment" : "\n         * Sets the maximum delay between two sensor events in microseconds.\n         *\n         * @see Sensor#getMaxDelay\n         ",
    "links" : [ ]
  }, {
    "name" : "public VirtualSensorConfig.Builder setHighestDirectReportRateLevel(@SensorDirectChannel.RateLevel int rateLevel)",
    "returnType" : "VirtualSensorConfig.Builder",
    "comment" : "\n         * Sets the highest supported rate level for direct sensor report.\n         *\n         * @see VirtualSensorConfig#getHighestDirectReportRateLevel()\n         ",
    "links" : [ ]
  }, {
    "name" : "public VirtualSensorConfig.Builder setDirectChannelTypesSupported(@SensorDirectChannel.MemoryType int memoryTypes)",
    "returnType" : "VirtualSensorConfig.Builder",
    "comment" : "\n         * Sets whether direct sensor channel of the given types is supported.\n         *\n         * @param memoryTypes A combination of {@link SensorDirectChannel.MemoryType} flags\n         *   indicating the types of shared memory supported for creating direct channels. Only\n         *   {@link SensorDirectChannel#TYPE_MEMORY_FILE} direct channels may be supported for\n         *   virtual sensors.\n         * @throws IllegalArgumentException if {@link SensorDirectChannel#TYPE_HARDWARE_BUFFER} is\n         *   set to be supported.\n         ",
    "links" : [ "android.hardware.SensorDirectChannel#TYPE_MEMORY_FILE", "android.hardware.SensorDirectChannel#TYPE_HARDWARE_BUFFER", "SensorDirectChannel.MemoryType" ]
  } ],
  "methodNames" : [ "public VirtualSensorConfig build()", "public VirtualSensorConfig.Builder setVendor(@Nullable String vendor)", "public VirtualSensorConfig.Builder setMaximumRange(float maximumRange)", "public VirtualSensorConfig.Builder setResolution(float resolution)", "public VirtualSensorConfig.Builder setPower(float power)", "public VirtualSensorConfig.Builder setMinDelay(int minDelay)", "public VirtualSensorConfig.Builder setMaxDelay(int maxDelay)", "public VirtualSensorConfig.Builder setHighestDirectReportRateLevel(@SensorDirectChannel.RateLevel int rateLevel)", "public VirtualSensorConfig.Builder setDirectChannelTypesSupported(@SensorDirectChannel.MemoryType int memoryTypes)" ],
  "variableNames" : [ "FLAG_MEMORY_FILE_DIRECT_CHANNEL_SUPPORTED", "mType", "mName", "mVendor", "mMaximumRange", "mResolution", "mPower", "mMinDelay", "mMaxDelay", "mFlags", "mHighestDirectReportRateLevel" ]
}