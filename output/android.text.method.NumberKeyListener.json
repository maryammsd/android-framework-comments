{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/method/NumberKeyListener.java",
  "packageName" : "android.text.method",
  "className" : "NumberKeyListener",
  "comment" : "\n * For numeric text entry\n * <p></p>\n * As for all implementations of {@link KeyListener}, this class is only concerned\n * with hardware keyboards.  Software input methods have no obligation to trigger\n * the methods in this class.\n ",
  "links" : [ "android.text.method.KeyListener" ],
  "variables" : [ {
    "name" : "DATE_TIME_FORMAT_SYMBOLS",
    "type" : "String",
    "comment" : " From http://unicode.org/reports/tr35/tr35-dates.html#Date_Format_Patterns",
    "links" : [ ]
  }, {
    "name" : "SINGLE_QUOTE",
    "type" : "char",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected abstract char[] getAcceptedChars()",
    "returnType" : "char[]",
    "comment" : "\n     * You can say which characters you can accept.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int lookup(KeyEvent event, Spannable content)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend)",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected static boolean ok(char[] accept, char c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyDown(View view, Editable content, int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean addDigits(@NonNull Collection<Character> collection, @Nullable Locale locale)",
    "returnType" : "boolean",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : " static boolean addFormatCharsFromSkeleton(@NonNull Collection<Character> collection, @Nullable Locale locale, @NonNull String skeleton, @NonNull String symbolsToIgnore)",
    "returnType" : "boolean",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : " static boolean addFormatCharsFromSkeletons(@NonNull Collection<Character> collection, @Nullable Locale locale, @NonNull String[] skeletons, @NonNull String symbolsToIgnore)",
    "returnType" : "boolean",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : " static boolean addAmPmChars(@NonNull Collection<Character> collection, @Nullable Locale locale)",
    "returnType" : "boolean",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : " static char[] collectionToArray(@NonNull Collection<Character> chars)",
    "returnType" : "char[]",
    "comment" : " package ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected abstract char[] getAcceptedChars()", "protected int lookup(KeyEvent event, Spannable content)", "public CharSequence filter(CharSequence source, int start, int end, Spanned dest, int dstart, int dend)", "protected static boolean ok(char[] accept, char c)", "public boolean onKeyDown(View view, Editable content, int keyCode, KeyEvent event)", " static boolean addDigits(@NonNull Collection<Character> collection, @Nullable Locale locale)", " static boolean addFormatCharsFromSkeleton(@NonNull Collection<Character> collection, @Nullable Locale locale, @NonNull String skeleton, @NonNull String symbolsToIgnore)", " static boolean addFormatCharsFromSkeletons(@NonNull Collection<Character> collection, @Nullable Locale locale, @NonNull String[] skeletons, @NonNull String symbolsToIgnore)", " static boolean addAmPmChars(@NonNull Collection<Character> collection, @Nullable Locale locale)", " static char[] collectionToArray(@NonNull Collection<Character> chars)" ],
  "variableNames" : [ "DATE_TIME_FORMAT_SYMBOLS", "SINGLE_QUOTE" ]
}