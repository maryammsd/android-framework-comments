{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/health/connect/datatypes/validation/ValidationUtils.java",
  "packageName" : "android.health.connect.datatypes.validation",
  "className" : "ValidationUtils",
  "comment" : "\n * An util class for HC datatype validation\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "INTDEF_VALIDATION_ERROR_PREFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void requireInRange(long value, long lowerBound, long upperBound, String name)",
    "returnType" : "void",
    "comment" : " Requires long value to be within the range. ",
    "links" : [ ]
  }, {
    "name" : "public static void requireNonNegative(double value, String name)",
    "returnType" : "void",
    "comment" : " Requires double value to be non negative. ",
    "links" : [ ]
  }, {
    "name" : "public static void requireInRange(double value, double lowerBound, double upperBound, String name)",
    "returnType" : "void",
    "comment" : " Requires double value to be within the range. ",
    "links" : [ ]
  }, {
    "name" : "public static void validateIntDefValue(int value, Set<Integer> allowedValues, String name)",
    "returnType" : "void",
    "comment" : " Requires an integer value to be among the set of allowed values. ",
    "links" : [ ]
  }, {
    "name" : "public static void validateSampleStartAndEndTime(Instant sessionStartTime, Instant sessionEndTime, List<Instant> timeInstants)",
    "returnType" : "void",
    "comment" : " Requires list of times to be within the range. ",
    "links" : [ ]
  }, {
    "name" : "public static void requireInRangeIfExists(Comparable<T> value, T threshold, T limit, String name)",
    "returnType" : "void",
    "comment" : " Requires comparable class to be within the range. ",
    "links" : [ ]
  }, {
    "name" : "public static List<? extends TimeInterval.TimeIntervalHolder> sortAndValidateTimeIntervalHolders(Instant parentStartTime, Instant parentEndTime, List<? extends TimeInterval.TimeIntervalHolder> intervalHolders)",
    "returnType" : "List<? extends TimeInterval.TimeIntervalHolder>",
    "comment" : "\n     * Sorts time interval holders by time intervals. Validates that time intervals do not overlap\n     * and within parent start and end times.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void requireInRange(long value, long lowerBound, long upperBound, String name)", "public static void requireNonNegative(double value, String name)", "public static void requireInRange(double value, double lowerBound, double upperBound, String name)", "public static void validateIntDefValue(int value, Set<Integer> allowedValues, String name)", "public static void validateSampleStartAndEndTime(Instant sessionStartTime, Instant sessionEndTime, List<Instant> timeInstants)", "public static void requireInRangeIfExists(Comparable<T> value, T threshold, T limit, String name)", "public static List<? extends TimeInterval.TimeIntervalHolder> sortAndValidateTimeIntervalHolders(Instant parentStartTime, Instant parentEndTime, List<? extends TimeInterval.TimeIntervalHolder> intervalHolders)" ],
  "variableNames" : [ "INTDEF_VALIDATION_ERROR_PREFIX" ]
}