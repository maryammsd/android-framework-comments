{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/p2p/WifiP2pManager.java",
  "packageName" : "android.net.wifi.p2p",
  "className" : "WifiP2pListener",
  "comment" : "\n     * Interface used to listen to Wi-Fi p2p various changes such as device state change,\n     * discovery started/stopped, connection change, etc.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onP2pStateChanged(@WifiP2pState int state)",
    "returnType" : "void",
    "comment" : "\n         * Called when Wi-Fi p2p has been enabled or disabled.\n         * @see #WIFI_P2P_STATE_CHANGED_ACTION\n         * @see #requestP2pState(Channel, P2pStateListener)\n         *\n         * @param state indicates whether Wi-Fi p2p is enabled or disabled.\n         *          @see #WIFI_P2P_STATE_ENABLED\n         *          @see #WIFI_P2P_STATE_DISABLED\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDiscoveryStateChanged(@WifiP2pDiscoveryState int state)",
    "returnType" : "void",
    "comment" : "\n         * Called when peer discovery has either started or stopped.\n         * @see #WIFI_P2P_DISCOVERY_CHANGED_ACTION\n         * @see #requestDiscoveryState(Channel, DiscoveryStateListener)\n         *\n         * @param state indicates whether discovery has started or stopped.\n         *          @see #WIFI_P2P_DISCOVERY_STARTED\n         *          @see #WIFI_P2P_DISCOVERY_STOPPED\n         ",
    "links" : [ ]
  }, {
    "name" : " void onListenStateChanged(@WifiP2pListenState int state)",
    "returnType" : "void",
    "comment" : "\n         * Called when peer listen has either started or stopped.\n         * @see #ACTION_WIFI_P2P_LISTEN_STATE_CHANGED\n         * @see #getListenState(Channel, Executor, Consumer)\n         *\n         * @param state indicates whether listen has started or stopped.\n         *          @see #WIFI_P2P_LISTEN_STARTED\n         *          @see #WIFI_P2P_LISTEN_STOPPED\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDeviceConfigurationChanged(@Nullable WifiP2pDevice p2pDevice)",
    "returnType" : "void",
    "comment" : "\n         * Called when this device details have changed.\n         * @see #WIFI_P2P_THIS_DEVICE_CHANGED_ACTION\n         * @see #requestDeviceInfo(Channel, DeviceInfoListener)\n         *\n         * @param p2pDevice provides this device details.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onPeerListChanged(@NonNull WifiP2pDeviceList p2pDeviceList)",
    "returnType" : "void",
    "comment" : "\n         * Called when the available peer list has changed. This can be sent as a result of peers\n         * being found, lost or updated.\n         * @see #WIFI_P2P_PEERS_CHANGED_ACTION\n         * @see #requestPeers(Channel, PeerListListener)\n         *\n         * @param p2pDeviceList provides the full list of current peers.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onPersistentGroupsChanged(@NonNull WifiP2pGroupList p2pGroupList)",
    "returnType" : "void",
    "comment" : "\n         * Called when remembered persistent groups have changed.\n         * @see #ACTION_WIFI_P2P_PERSISTENT_GROUPS_CHANGED\n         * @see #requestPersistentGroupInfo(Channel, PersistentGroupInfoListener)\n         *\n         * @param p2pGroupList provides the full list of p2p group.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : " void onGroupCreating()",
    "returnType" : "void",
    "comment" : "\n         * Called when either group owner or group client is creating p2p group.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onGroupNegotiationRejectedByUser()",
    "returnType" : "void",
    "comment" : "\n         * Called when group negotiation has been rejected by user.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onGroupCreationFailed(@GroupCreationFailureReason int reason)",
    "returnType" : "void",
    "comment" : "\n         * Called when group creation has failed.\n         *\n         * @param reason provides the group creation failure reason.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onGroupCreated(@NonNull WifiP2pInfo p2pInfo, @NonNull WifiP2pGroup p2pGroup)",
    "returnType" : "void",
    "comment" : "\n         * Called when either group owner or group client has created p2p group successfully.\n         *\n         * @param p2pInfo  provides the p2p connection info.\n         * @param p2pGroup provides the details of the group.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onPeerClientJoined(@NonNull WifiP2pInfo p2pInfo, @NonNull WifiP2pGroup p2pGroup)",
    "returnType" : "void",
    "comment" : "\n         * Called to indicate group owner that a group client has joined p2p group successfully.\n         *\n         * @param p2pInfo  provides the p2p connection info.\n         * @param p2pGroup provides the details of the group.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onPeerClientDisconnected(@NonNull WifiP2pInfo p2pInfo, @NonNull WifiP2pGroup p2pGroup)",
    "returnType" : "void",
    "comment" : "\n         * Called to indicate group owner that a group client has disconnected.\n         *\n         * @param p2pInfo  provides the p2p connection info.\n         * @param p2pGroup provides the details of the group.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onFrequencyChanged(@NonNull WifiP2pInfo p2pInfo, @NonNull WifiP2pGroup p2pGroup)",
    "returnType" : "void",
    "comment" : "\n         * Called when the frequency of a formed group has been changed.\n         *\n         * @param p2pInfo  provides the p2p connection info.\n         * @param p2pGroup provides the details of the group.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onGroupRemoved()",
    "returnType" : "void",
    "comment" : "\n         * Called when p2p group has been removed.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onP2pStateChanged(@WifiP2pState int state)", " void onDiscoveryStateChanged(@WifiP2pDiscoveryState int state)", " void onListenStateChanged(@WifiP2pListenState int state)", " void onDeviceConfigurationChanged(@Nullable WifiP2pDevice p2pDevice)", " void onPeerListChanged(@NonNull WifiP2pDeviceList p2pDeviceList)", " void onPersistentGroupsChanged(@NonNull WifiP2pGroupList p2pGroupList)", " void onGroupCreating()", " void onGroupNegotiationRejectedByUser()", " void onGroupCreationFailed(@GroupCreationFailureReason int reason)", " void onGroupCreated(@NonNull WifiP2pInfo p2pInfo, @NonNull WifiP2pGroup p2pGroup)", " void onPeerClientJoined(@NonNull WifiP2pInfo p2pInfo, @NonNull WifiP2pGroup p2pGroup)", " void onPeerClientDisconnected(@NonNull WifiP2pInfo p2pInfo, @NonNull WifiP2pGroup p2pGroup)", " void onFrequencyChanged(@NonNull WifiP2pInfo p2pInfo, @NonNull WifiP2pGroup p2pGroup)", " void onGroupRemoved()" ],
  "variableNames" : [ ]
}