{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/keystore/recovery/KeyChainSnapshot.java",
  "packageName" : "android.security.keystore.recovery",
  "className" : "KeyChainSnapshot",
  "comment" : "\n * A snapshot of a version of the keystore. Two events can trigger the generation of a new snapshot:\n *\n * <ul>\n *     <li>The user's lock screen changes. (A key derived from the user's lock screen is used to\n *         protected the keychain, which is why this forces a new snapshot.)\n *     <li>A key is added to or removed from the recoverable keychain.\n * </ul>\n *\n * <p>The snapshot data is also encrypted with the remote trusted hardware's public key, so even\n * the recovery agent itself should not be able to decipher the data. The recovery agent sends an\n * instance of this to the remote trusted hardware whenever a new snapshot is generated. During a\n * recovery flow, the recovery agent retrieves a snapshot from the remote trusted hardware. It then\n * sends it to the framework, where it is decrypted using the user's lock screen from their previous\n * device.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEFAULT_MAX_ATTEMPTS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_COUNTER_ID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSnapshotVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxAttempts",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCounterId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServerParams",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCertPath",
    "type" : "RecoveryCertPath",
    "comment" : " The cert path including necessary intermediate certs",
    "links" : [ ]
  }, {
    "name" : "mKeyChainProtectionParams",
    "type" : "List<KeyChainProtectionParams>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEntryRecoveryData",
    "type" : "List<WrappedApplicationKey>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncryptedRecoveryKeyBlob",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<KeyChainSnapshot>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getSnapshotVersion()",
    "returnType" : "int",
    "comment" : "\n     * Snapshot version for given recovery agent. It is incremented when user secret or list of\n     * application keys changes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxAttempts()",
    "returnType" : "int",
    "comment" : "\n     * Number of user secret guesses allowed during KeyChain recovery.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getCounterId()",
    "returnType" : "long",
    "comment" : "\n     * CounterId which is rotated together with user secret.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getServerParams()",
    "returnType" : "byte[]",
    "comment" : "\n     * Server parameters.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CertPath getTrustedHardwareCertPath()",
    "returnType" : "CertPath",
    "comment" : "\n     * CertPath containing the public key used to encrypt {@code encryptedRecoveryKeyBlob}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<KeyChainProtectionParams> getKeyChainProtectionParams()",
    "returnType" : "List<KeyChainProtectionParams>",
    "comment" : "\n     * UI and key derivation parameters. Note that combination of secrets may be used.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<WrappedApplicationKey> getWrappedApplicationKeys()",
    "returnType" : "List<WrappedApplicationKey>",
    "comment" : "\n     * List of application keys, with key material encrypted by\n     * the recovery key ({@link #getEncryptedRecoveryKeyBlob}).\n     ",
    "links" : [ "#getEncryptedRecoveryKeyBlob" ]
  }, {
    "name" : "public byte[] getEncryptedRecoveryKeyBlob()",
    "returnType" : "byte[]",
    "comment" : "\n     * Recovery key blob, encrypted by user secret and recovery service public key.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getSnapshotVersion()", "public int getMaxAttempts()", "public long getCounterId()", "public byte[] getServerParams()", "public CertPath getTrustedHardwareCertPath()", "public List<KeyChainProtectionParams> getKeyChainProtectionParams()", "public List<WrappedApplicationKey> getWrappedApplicationKeys()", "public byte[] getEncryptedRecoveryKeyBlob()", "public void writeToParcel(Parcel out, int flags)", "public int describeContents()" ],
  "variableNames" : [ "DEFAULT_MAX_ATTEMPTS", "DEFAULT_COUNTER_ID", "mSnapshotVersion", "mMaxAttempts", "mCounterId", "mServerParams", "mCertPath", "mKeyChainProtectionParams", "mEntryRecoveryData", "mEncryptedRecoveryKeyBlob", "CREATOR" ]
}