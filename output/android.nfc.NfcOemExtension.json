{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/nfc/NfcOemExtension.java",
  "packageName" : "android.nfc",
  "className" : "NfcOemExtension",
  "comment" : "\n * Used for OEM extension APIs.\n * This class holds all the APIs and callbacks defined for OEMs/vendors to extend the NFC stack\n * for their proprietary features.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OEM_EXTENSION_RESPONSE_THRESHOLD_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAdapter",
    "type" : "NfcAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOemNfcExtensionCallback",
    "type" : "NfcOemExtensionCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "Callback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void registerCallback(@NonNull @CallbackExecutor Executor executor, @NonNull Callback callback)",
    "returnType" : "void",
    "comment" : "\n     * Register an {@link Callback} to listen for UWB oem extension callbacks\n     * <p>The provided callback will be invoked by the given {@link Executor}.\n     *\n     * @param executor an {@link Executor} to execute given callback\n     * @param callback oem implementation of {@link Callback}\n     ",
    "links" : [ "Callback", "android.annotation.CallbackExecutor" ]
  }, {
    "name" : "public void unregisterCallback(@NonNull Callback callback)",
    "returnType" : "void",
    "comment" : "\n     * Unregister the specified {@link Callback}\n     *\n     * <p>The same {@link Callback} object used when calling\n     * {@link #registerCallback(Executor, Callback)} must be used.\n     *\n     * <p>Callbacks are automatically unregistered when an application process goes away\n     *\n     * @param callback oem implementation of {@link Callback}\n     ",
    "links" : [ "Callback", "#registerCallback(Executor" ]
  }, {
    "name" : "public void clearPreference()",
    "returnType" : "void",
    "comment" : "\n     * Clear NfcService preference, interface method to clear NFC preference values on OEM specific\n     * events. For ex: on soft reset, Nfc default values needs to be overridden by OEM defaults.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void registerCallback(@NonNull @CallbackExecutor Executor executor, @NonNull Callback callback)", "public void unregisterCallback(@NonNull Callback callback)", "public void clearPreference()" ],
  "variableNames" : [ "TAG", "OEM_EXTENSION_RESPONSE_THRESHOLD_MS", "mAdapter", "mOemNfcExtensionCallback", "mContext", "mExecutor", "mCallback", "mLock" ]
}