{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/AudioDeviceAttributes.java",
  "packageName" : "android.media",
  "className" : "AudioDeviceAttributes",
  "comment" : "\n * @hide\n * Class to represent the attributes of an audio device: its type (speaker, headset...), address\n * (if known) and role (input, output).\n * <p>Unlike {@link AudioDeviceInfo}, the device\n * doesn't need to be connected to be uniquely identified, it can\n * for instance represent a specific A2DP headset even after a\n * disconnection, whereas the corresponding <code>AudioDeviceInfo</code>\n * would then be invalid.\n * <p>While creating / obtaining an instance is not protected by a\n * permission, APIs using one rely on MODIFY_AUDIO_ROUTING.\n ",
  "links" : [ "android.media.AudioDeviceInfo" ],
  "variables" : [ {
    "name" : "ROLE_INPUT",
    "type" : "int",
    "comment" : "\n     * A role identifying input devices, such as microphones.\n     ",
    "links" : [ ]
  }, {
    "name" : "ROLE_OUTPUT",
    "type" : "int",
    "comment" : "\n     * A role identifying output devices, such as speakers or headphones.\n     ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "\n     * The audio device type, as defined in {@link AudioDeviceInfo}\n     ",
    "links" : [ "android.media.AudioDeviceInfo" ]
  }, {
    "name" : "mAddress",
    "type" : "String",
    "comment" : "\n     * The unique address of the device. Some devices don't have addresses, only an empty string.\n     ",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "\n     * The non-unique name of the device. Some devices don't have names, only an empty string.\n     * Should not be used as a unique identifier for a device.\n     ",
    "links" : [ ]
  }, {
    "name" : "mRole",
    "type" : "int",
    "comment" : "\n     * Is input or output device\n     ",
    "links" : [ ]
  }, {
    "name" : "mNativeType",
    "type" : "int",
    "comment" : "\n     * The internal audio device type\n     ",
    "links" : [ ]
  }, {
    "name" : "mAudioProfiles",
    "type" : "List<AudioProfile>",
    "comment" : "\n     * List of AudioProfiles supported by the device\n     ",
    "links" : [ ]
  }, {
    "name" : "mAudioDescriptors",
    "type" : "List<AudioDescriptor>",
    "comment" : "\n     * List of AudioDescriptors supported by the device\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AudioDeviceAttributes>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getRole()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * Returns the role of a device\n     * @return the role\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * Returns the audio device type of a device\n     * @return the type, as defined in {@link AudioDeviceInfo}\n     ",
    "links" : [ "android.media.AudioDeviceInfo" ]
  }, {
    "name" : "public String getAddress()",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     * Returns the address of the audio device, or an empty string for devices without one\n     * @return the device address\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAddress(@NonNull String address)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     * Sets the device address. Only used by audio service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     * Returns the name of the audio device, or an empty string for devices without one\n     * @return the device name\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInternalType()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * Returns the internal device type of a device\n     * @return the internal device type\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<AudioProfile> getAudioProfiles()",
    "returnType" : "List<AudioProfile>",
    "comment" : "\n     * @hide\n     * Returns the list of AudioProfiles supported by the device\n     * @return the list of AudioProfiles\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<AudioDescriptor> getAudioDescriptors()",
    "returnType" : "List<AudioDescriptor>",
    "comment" : "\n     * @hide\n     * Returns the list of AudioDescriptors supported by the device\n     * @return the list of AudioDescriptors\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equalTypeAddress(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the role, type and address are equal. Called to compare with an\n     * AudioDeviceAttributes that was created from a native AudioDeviceTypeAddr instance.\n     * @param o object to compare with\n     * @return whether role, type and address are equal\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String roleToString(@Role int role)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getRole()", "public int getType()", "public String getAddress()", "public void setAddress(@NonNull String address)", "public String getName()", "public int getInternalType()", "public List<AudioProfile> getAudioProfiles()", "public List<AudioDescriptor> getAudioDescriptors()", "public int hashCode()", "public boolean equals(Object o)", "public boolean equalTypeAddress(@Nullable Object o)", "public static String roleToString(@Role int role)", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "ROLE_INPUT", "ROLE_OUTPUT", "mType", "mAddress", "mName", "mRole", "mNativeType", "mAudioProfiles", "mAudioDescriptors", "CREATOR" ]
}