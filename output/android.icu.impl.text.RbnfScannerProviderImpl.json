{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/text/RbnfScannerProviderImpl.java",
  "packageName" : "android.icu.impl.text",
  "className" : "RbnfScannerProviderImpl",
  "comment" : "\n * Returns RbnfLenientScanners that use the old RuleBasedNumberFormat\n * implementation behind setLenientParseMode, which is based on Collator.\n * @deprecated This API is ICU internal only.\n * @hide Only a subset of ICU is exposed in Android\n * @hide draft / provisional / internal are hidden on Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cache",
    "type" : "Map<String, RbnfLenientScanner>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public RbnfLenientScanner get(ULocale locale, String extras)",
    "returnType" : "RbnfLenientScanner",
    "comment" : "\n     * Returns a collation-based scanner.\n     *\n     * Only primary differences are treated as significant.  This means that case\n     * differences, accent differences, alternate spellings of the same letter\n     * (e.g., ae and a-umlaut in German), ignorable characters, etc. are ignored in\n     * matching the text.  In many cases, numerals will be accepted in place of words\n     * or phrases as well.\n     *\n     * For example, all of the following will correctly parse as 255 in English in\n     * lenient-parse mode:\n     * <br>\"two hundred fifty-five\"\n     * <br>\"two hundred fifty five\"\n     * <br>\"TWO HUNDRED FIFTY-FIVE\"\n     * <br>\"twohundredfiftyfive\"\n     * <br>\"2 hundred fifty-5\"\n     *\n     * The Collator used is determined by the locale that was\n     * passed to this object on construction.  The description passed to this object\n     * on construction may supply additional collation rules that are appended to the\n     * end of the default collator for the locale, enabling additional equivalences\n     * (such as adding more ignorable characters or permitting spelled-out version of\n     * symbols; see the demo program for examples).\n     *\n     * It's important to emphasize that even strict parsing is relatively lenient: it\n     * will accept some text that it won't produce as output.  In English, for example,\n     * it will correctly parse \"two hundred zero\" and \"fifteen hundred\".\n     * \n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected RbnfLenientScanner createScanner(ULocale locale, String extras)",
    "returnType" : "RbnfLenientScanner",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public RbnfLenientScanner get(ULocale locale, String extras)", "protected RbnfLenientScanner createScanner(ULocale locale, String extras)" ],
  "variableNames" : [ "DEBUG", "cache" ]
}