{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/UnownedUserData.java",
  "packageName" : "org.chromium.base",
  "className" : "UnownedUserData",
  "comment" : "\n * Marker interface to be implemented by classes which makes them attachable to a host class that\n * holds {@link UnownedUserDataHost} entries.\n * <p>\n * Marking something as a UnownedUserData has no other implications than that the class can be\n * referenced from a {@link UnownedUserDataHost} as a {@link java.lang.ref.WeakReference}.\n * <p>\n * Implementors can also optionally implement the method\n * {@link #onDetachedFromHost(UnownedUserDataHost)}\n * to be informed whenever they have been detached from the host. This can happen when the\n * particular {@link UnownedUserDataHost} they are attached to is destroyed.\n *\n * @see UnownedUserDataHost for more details on ownership and typical usage.\n * @see UnownedUserDataKey for information about the type of key that is required.\n ",
  "links" : [ "org.chromium.base.UnownedUserDataHost", "#onDetachedFromHost(UnownedUserDataHost)", "java.lang.ref.WeakReference" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onDetachedFromHost(UnownedUserDataHost host)",
    "returnType" : "void",
    "comment" : "\n     * Invoked whenever the particular UnownedUserData has been removed from a particular host. If\n     * the UnownedUserData has been garbage collected before the UserDataHost is informed of its\n     * removal, this method will of course not be invoked.\n     * <p>\n     * This method is invoked asynchronously, but from the correct thread.\n     *\n     * @param host from which host the UnownedUserData was detached.\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean informOnDetachmentFromHost()",
    "returnType" : "boolean",
    "comment" : "\n     * WARNING: This may be invoked in a re-entrant way, but will be invoked on the correct thread.\n     *\n     * @return true if the UnownedUserData wants to be informed asynchronously about detachments.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onDetachedFromHost(UnownedUserDataHost host)", " boolean informOnDetachmentFromHost()" ],
  "variableNames" : [ ]
}