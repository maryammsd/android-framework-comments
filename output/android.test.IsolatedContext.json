{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/test/IsolatedContext.java",
  "packageName" : "android.test",
  "className" : "IsolatedContext",
  "comment" : "\n * A mock context which prevents its users from talking to the rest of the device while\n * stubbing enough methods to satify code that tries to talk to other packages.\n *\n * @deprecated New tests should be written using the\n * <a href=\"{@docRoot}tools/testing-support-library/index.html\">Android Testing Support Library</a>.\n ",
  "variables" : [ {
    "name" : "mResolver",
    "type" : "ContentResolver",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMockAccountManager",
    "type" : "AccountManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBroadcastIntents",
    "type" : "List<Intent>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<Intent> getAndClearBroadcastIntents()",
    "returnType" : "List<Intent>",
    "comment" : " Returns the list of intents that were broadcast since the last call to this method. ",
    "links" : [ ]
  }, {
    "name" : "public ContentResolver getContentResolver()",
    "returnType" : "ContentResolver",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean bindService(Intent service, ServiceConnection conn, int flags)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean bindService(Intent service, int flags, Executor executor, ServiceConnection conn)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean bindIsolatedService(Intent service, int flags, String instanceName, Executor executor, ServiceConnection conn)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter)",
    "returnType" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterReceiver(BroadcastReceiver receiver)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendBroadcast(Intent intent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendOrderedBroadcast(Intent intent, String receiverPermission)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int checkUriPermission(Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int checkUriPermission(Uri uri, int pid, int uid, int modeFlags)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object getSystemService(String name)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public File getFilesDir()",
    "returnType" : "File",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mResolver", "mMockAccountManager", "mBroadcastIntents" ],
  "methodNames" : [ "public List<Intent> getAndClearBroadcastIntents()", "public ContentResolver getContentResolver()", "public boolean bindService(Intent service, ServiceConnection conn, int flags)", "public boolean bindService(Intent service, int flags, Executor executor, ServiceConnection conn)", "public boolean bindIsolatedService(Intent service, int flags, String instanceName, Executor executor, ServiceConnection conn)", "public Intent registerReceiver(BroadcastReceiver receiver, IntentFilter filter)", "public void unregisterReceiver(BroadcastReceiver receiver)", "public void sendBroadcast(Intent intent)", "public void sendOrderedBroadcast(Intent intent, String receiverPermission)", "public int checkUriPermission(Uri uri, String readPermission, String writePermission, int pid, int uid, int modeFlags)", "public int checkUriPermission(Uri uri, int pid, int uid, int modeFlags)", "public Object getSystemService(String name)", "public File getFilesDir()" ]
}