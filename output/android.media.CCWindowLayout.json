{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/Cea708CaptionRenderer.java",
  "packageName" : "android.media",
  "className" : "CCWindowLayout",
  "comment" : "\n     * @hide\n     *\n     * Layout which renders a caption window of CEA-708B. It contains a {@link TextView} that takes\n     * care of displaying the actual CC text.\n     ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPORTION_PEN_SIZE_SMALL",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPORTION_PEN_SIZE_LARGE",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_RELATIVE_POSITIONING_MAX",
    "type" : "int",
    "comment" : " The following values indicates the maximum cell number of a window.",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_VERTICAL_MAX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_HORIZONTAL_16_9_MAX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_COLUMN_COUNT_16_9",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_MODE_DIVIDER",
    "type" : "int",
    "comment" : " The following values indicates a gravity of a window.",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_HORIZONTAL_MODE_LEFT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_HORIZONTAL_MODE_CENTER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_HORIZONTAL_MODE_RIGHT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_VERTICAL_MODE_TOP",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_VERTICAL_MODE_CENTER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_VERTICAL_MODE_BOTTOM",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCCLayout",
    "type" : "CCLayout",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCCView",
    "type" : "CCView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCaptionStyle",
    "type" : "CaptionStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRowLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBuilder",
    "type" : "SpannableStringBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCharacterStyles",
    "type" : "List<CharacterStyle>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCaptionWindowId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRow",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFontScale",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextSize",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWidestChar",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastCaptionLayoutWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastCaptionLayoutHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setCaptionStyle(CaptionStyle style)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFontScale(float fontScale)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCaptionWindowId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCaptionWindowId(int captionWindowId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void show()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void hide()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPenAttr(Cea708CCParser.CaptionPenAttr penAttr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPenColor(Cea708CCParser.CaptionPenColor penColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPenLocation(int row, int column)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setWindowAttr(Cea708CCParser.CaptionWindowAttr windowAttr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendBuffer(String buffer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendControl(char control)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void initWindow(CCLayout ccLayout, Cea708CCParser.CaptionWindow captionWindow)",
    "returnType" : "void",
    "comment" : "\n         * This method places the window on a given CaptionLayout along with the anchor of the\n         * window.\n         * <p>\n         * According to CEA-708B, the anchor id indicates the gravity of the window as the follows.\n         * For example, A value 7 of a anchor id says that a window is align with its parent bottom\n         * and is located at the center horizontally of its parent.\n         * </p>\n         * <h4>Anchor id and the gravity of a window</h4>\n         * <table>\n         *     <tr>\n         *         <th>GRAVITY</th>\n         *         <th>LEFT</th>\n         *         <th>CENTER_HORIZONTAL</th>\n         *         <th>RIGHT</th>\n         *     </tr>\n         *     <tr>\n         *         <th>TOP</th>\n         *         <td>0</td>\n         *         <td>1</td>\n         *         <td>2</td>\n         *     </tr>\n         *     <tr>\n         *         <th>CENTER_VERTICAL</th>\n         *         <td>3</td>\n         *         <td>4</td>\n         *         <td>5</td>\n         *     </tr>\n         *     <tr>\n         *         <th>BOTTOM</th>\n         *         <td>6</td>\n         *         <td>7</td>\n         *         <td>8</td>\n         *     </tr>\n         * </table>\n         * <p>\n         * In order to handle the gravity of a window, there are two steps. First, set the size of\n         * the window. Since the window will be positioned at ScaledLayout, the size factors are\n         * determined in a ratio. Second, set the gravity of the window. CaptionWindowLayout is\n         * inherited from RelativeLayout. Hence, we could set the gravity of its child view,\n         * SubtitleView.\n         * </p>\n         * <p>\n         * The gravity of the window is also related to its size. When it should be pushed to a one\n         * of the end of the window, like LEFT, RIGHT, TOP or BOTTOM, the anchor point should be a\n         * boundary of the window. When it should be pushed in the horizontal/vertical center of its\n         * container, the horizontal/vertical center point of the window should be the same as the\n         * anchor point.\n         * </p>\n         *\n         * @param ccLayout a given CaptionLayout, which contains a safe title area.\n         * @param captionWindow a given CaptionWindow, which stores the construction info of the\n         *                      window.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onLayoutChange(View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateWidestChar()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateTextSize()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getScreenColumnCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeFromCaptionView()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setText(String text)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void appendText(String text)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearText()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateText(String text, boolean appended)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRowLimit(int rowLimit)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "PROPORTION_PEN_SIZE_SMALL", "PROPORTION_PEN_SIZE_LARGE", "ANCHOR_RELATIVE_POSITIONING_MAX", "ANCHOR_VERTICAL_MAX", "ANCHOR_HORIZONTAL_16_9_MAX", "MAX_COLUMN_COUNT_16_9", "ANCHOR_MODE_DIVIDER", "ANCHOR_HORIZONTAL_MODE_LEFT", "ANCHOR_HORIZONTAL_MODE_CENTER", "ANCHOR_HORIZONTAL_MODE_RIGHT", "ANCHOR_VERTICAL_MODE_TOP", "ANCHOR_VERTICAL_MODE_CENTER", "ANCHOR_VERTICAL_MODE_BOTTOM", "mCCLayout", "mCCView", "mCaptionStyle", "mRowLimit", "mBuilder", "mCharacterStyles", "mCaptionWindowId", "mRow", "mFontScale", "mTextSize", "mWidestChar", "mLastCaptionLayoutWidth", "mLastCaptionLayoutHeight" ],
  "methodNames" : [ "public void setCaptionStyle(CaptionStyle style)", "public void setFontScale(float fontScale)", "public int getCaptionWindowId()", "public void setCaptionWindowId(int captionWindowId)", "public void clear()", "public void show()", "public void hide()", "public void setPenAttr(Cea708CCParser.CaptionPenAttr penAttr)", "public void setPenColor(Cea708CCParser.CaptionPenColor penColor)", "public void setPenLocation(int row, int column)", "public void setWindowAttr(Cea708CCParser.CaptionWindowAttr windowAttr)", "public void sendBuffer(String buffer)", "public void sendControl(char control)", "public void initWindow(CCLayout ccLayout, Cea708CCParser.CaptionWindow captionWindow)", "public void onLayoutChange(View v, int left, int top, int right, int bottom, int oldLeft, int oldTop, int oldRight, int oldBottom)", "private void updateWidestChar()", "private void updateTextSize()", "private int getScreenColumnCount()", "public void removeFromCaptionView()", "public void setText(String text)", "public void appendText(String text)", "public void clearText()", "private void updateText(String text, boolean appended)", "public void setRowLimit(int rowLimit)" ]
}