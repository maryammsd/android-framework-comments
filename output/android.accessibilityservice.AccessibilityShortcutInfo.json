{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/accessibilityservice/AccessibilityShortcutInfo.java",
  "packageName" : "android.accessibilityservice",
  "className" : "AccessibilityShortcutInfo",
  "comment" : "\n * Activities of interest to users with accessibility needs may request to be targets of the\n * accessibility shortcut. These activities must handle the\n * {@link Intent#ACTION_MAIN} intent with category\n * {@link Intent#CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET}, which will be dispatched by the system\n * when the user activates the shortcut when it is configured to point at this target.\n *\n * @see Intent#CATEGORY_ACCESSIBILITY_SHORTCUT_TARGET\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG_ACCESSIBILITY_SHORTCUT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "META_DATA",
    "type" : "String",
    "comment" : "\n     * Name under which an activity component of the accessibility shortcut publishes information\n     * about itself. This meta-data must reference an XML resource containing an\n     * <code>&lt;accessibility-shortcut-target&gt;</code> tag.\n     ",
    "links" : [ ]
  }, {
    "name" : "mComponentName",
    "type" : "ComponentName",
    "comment" : "\n     * The component name of the accessibility shortcut target.\n     ",
    "links" : [ ]
  }, {
    "name" : "mActivityInfo",
    "type" : "ActivityInfo",
    "comment" : "\n     * The activity info of the accessibility shortcut target.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSummaryResId",
    "type" : "int",
    "comment" : "\n     * Resource id of the summary of the accessibility shortcut target.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDescriptionResId",
    "type" : "int",
    "comment" : "\n     * Resource id of the description of the accessibility shortcut target.\n     ",
    "links" : [ ]
  }, {
    "name" : "mAnimatedImageRes",
    "type" : "int",
    "comment" : "\n     * Resource id of the animated image of the accessibility shortcut target.\n     ",
    "links" : [ ]
  }, {
    "name" : "mHtmlDescriptionRes",
    "type" : "int",
    "comment" : "\n     * Resource id of the html description of the accessibility shortcut target.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSettingsActivityName",
    "type" : "String",
    "comment" : "\n     * The accessibility shortcut target setting activity's name, used by the system\n     * settings to launch the setting activity of this accessibility shortcut target.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ActivityInfo getActivityInfo()",
    "returnType" : "ActivityInfo",
    "comment" : "\n     * The {@link ActivityInfo} of accessibility shortcut target.\n     *\n     * @return The activity info.\n     ",
    "links" : [ "android.content.pm.ActivityInfo" ]
  }, {
    "name" : "public ComponentName getComponentName()",
    "returnType" : "ComponentName",
    "comment" : "\n     * The {@link ComponentName} of the accessibility shortcut target.\n     *\n     * @return The component name\n     ",
    "links" : [ "android.content.ComponentName" ]
  }, {
    "name" : "public String loadSummary(@NonNull PackageManager packageManager)",
    "returnType" : "String",
    "comment" : "\n     * The localized summary of the accessibility shortcut target.\n     *\n     * @return The localized summary if available, and {@code null} if a summary\n     * has not been provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String loadDescription(@NonNull PackageManager packageManager)",
    "returnType" : "String",
    "comment" : "\n     * The localized description of the accessibility shortcut target.\n     *\n     * @return The localized description.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAnimatedImageRes()",
    "returnType" : "int",
    "comment" : "\n     * Gets the animated image resource id.\n     *\n     * @return The animated image resource id.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Drawable loadAnimatedImage(@NonNull Context context)",
    "returnType" : "Drawable",
    "comment" : "\n     * The animated image drawable of the accessibility shortcut target.\n     *\n     * @return The animated image drawable, or null if the resource is invalid or the image\n     * exceed the screen size.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String loadHtmlDescription(@NonNull PackageManager packageManager)",
    "returnType" : "String",
    "comment" : "\n     * The localized and restricted html description of the accessibility shortcut target.\n     * It filters the <img> tag which do not meet the custom specification and the <a> tag.\n     *\n     * @return The localized and restricted html description.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSettingsActivityName()",
    "returnType" : "String",
    "comment" : "\n     * The settings activity name.\n     *\n     * @return The settings activity name.\n     ",
    "links" : [ ]
  }, {
    "name" : "private String loadResourceString(@NonNull PackageManager packageManager, @NonNull ActivityInfo activityInfo, int resId)",
    "returnType" : "String",
    "comment" : "\n     * Gets string resource by the given activity and resource id.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG_ACCESSIBILITY_SHORTCUT", "META_DATA", "mComponentName", "mActivityInfo", "mSummaryResId", "mDescriptionResId", "mAnimatedImageRes", "mHtmlDescriptionRes", "mSettingsActivityName" ],
  "methodNames" : [ "public ActivityInfo getActivityInfo()", "public ComponentName getComponentName()", "public String loadSummary(@NonNull PackageManager packageManager)", "public String loadDescription(@NonNull PackageManager packageManager)", "public int getAnimatedImageRes()", "public Drawable loadAnimatedImage(@NonNull Context context)", "public String loadHtmlDescription(@NonNull PackageManager packageManager)", "public String getSettingsActivityName()", "private String loadResourceString(@NonNull PackageManager packageManager, @NonNull ActivityInfo activityInfo, int resId)", "public int hashCode()", "public boolean equals(Object obj)", "public String toString()" ]
}