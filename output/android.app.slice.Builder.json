{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/slice/Slice.java",
  "packageName" : "android.app.slice",
  "className" : "Builder",
  "comment" : "\n     * A Builder used to construct {@link Slice}s\n     ",
  "variables" : [ {
    "name" : "mUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mItems",
    "type" : "ArrayList<SliceItem>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHints",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSpec",
    "type" : "SliceSpec",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setCallerNeeded(boolean callerNeeded)",
    "returnType" : "Builder",
    "comment" : "\n         * Tells the system whether for this slice the return value of\n         * {@link SliceProvider#onBindSlice(Uri, java.util.Set)} may be different depending on\n         * {@link SliceProvider#getCallingPackage()} and should not be cached for multiple\n         * apps.\n         ",
    "links" : [ "android.app.slice.SliceProvider#getCallingPackage()", "android.app.slice.SliceProvider#onBindSlice(Uri" ]
  }, {
    "name" : "public Builder addHints(@SliceHint List<String> hints)",
    "returnType" : "Builder",
    "comment" : "\n         * Add hints to the Slice being constructed\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSpec(SliceSpec spec)",
    "returnType" : "Builder",
    "comment" : "\n         * @deprecated TO BE REMOVED\n         * @removed\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addSubSlice(@NonNull Slice slice, @Nullable @SliceSubtype String subType)",
    "returnType" : "Builder",
    "comment" : "\n         * Add a sub-slice to the slice being constructed\n         * @param subType Optional template-specific type information\n         * @see SliceItem#getSubType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Slice.Builder addAction(@NonNull PendingIntent action, @NonNull Slice s, @Nullable @SliceSubtype String subType)",
    "returnType" : "Slice.Builder",
    "comment" : "\n         * Add an action to the slice being constructed\n         * @param subType Optional template-specific type information\n         * @see SliceItem#getSubType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addText(CharSequence text, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)",
    "returnType" : "Builder",
    "comment" : "\n         * Add text to the slice being constructed\n         * @param subType Optional template-specific type information\n         * @see SliceItem#getSubType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addIcon(Icon icon, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)",
    "returnType" : "Builder",
    "comment" : "\n         * Add an image to the slice being constructed\n         * @param subType Optional template-specific type information\n         * @see SliceItem#getSubType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Slice.Builder addRemoteInput(RemoteInput remoteInput, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)",
    "returnType" : "Slice.Builder",
    "comment" : "\n         * Add remote input to the slice being constructed\n         * @param subType Optional template-specific type information\n         * @see SliceItem#getSubType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addInt(int value, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)",
    "returnType" : "Builder",
    "comment" : "\n         * Add an integer to the slice being constructed\n         * @param subType Optional template-specific type information\n         * @see SliceItem#getSubType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Slice.Builder addTimestamp(long time, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)",
    "returnType" : "Slice.Builder",
    "comment" : "\n         * @deprecated TO BE REMOVED.\n         * @removed\n         ",
    "links" : [ ]
  }, {
    "name" : "public Slice.Builder addLong(long value, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)",
    "returnType" : "Slice.Builder",
    "comment" : "\n         * Add a long to the slice being constructed\n         * @param subType Optional template-specific type information\n         * @see SliceItem#getSubType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Slice.Builder addBundle(Bundle bundle, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)",
    "returnType" : "Slice.Builder",
    "comment" : "\n         * Add a bundle to the slice being constructed.\n         * <p>Expected to be used for support library extension, should not be used for general\n         * development\n         * @param subType Optional template-specific type information\n         * @see SliceItem#getSubType()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Slice build()",
    "returnType" : "Slice",
    "comment" : "\n         * Construct the slice.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mUri", "mItems", "mHints", "mSpec" ],
  "methodNames" : [ "public Builder setCallerNeeded(boolean callerNeeded)", "public Builder addHints(@SliceHint List<String> hints)", "public Builder setSpec(SliceSpec spec)", "public Builder addSubSlice(@NonNull Slice slice, @Nullable @SliceSubtype String subType)", "public Slice.Builder addAction(@NonNull PendingIntent action, @NonNull Slice s, @Nullable @SliceSubtype String subType)", "public Builder addText(CharSequence text, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)", "public Builder addIcon(Icon icon, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)", "public Slice.Builder addRemoteInput(RemoteInput remoteInput, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)", "public Builder addInt(int value, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)", "public Slice.Builder addTimestamp(long time, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)", "public Slice.Builder addLong(long value, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)", "public Slice.Builder addBundle(Bundle bundle, @Nullable @SliceSubtype String subType, @SliceHint List<String> hints)", "public Slice build()" ]
}