{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/VibratorInfo.java",
  "packageName" : "android.os",
  "className" : "Builder",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCapabilities",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedEffects",
    "type" : "SparseBooleanArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedBraking",
    "type" : "SparseBooleanArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedPrimitives",
    "type" : "SparseIntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPrimitiveDelayMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCompositionSizeMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPwlePrimitiveDurationMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPwleSizeMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQFactor",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrequencyProfile",
    "type" : "FrequencyProfile",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setCapabilities(long capabilities)",
    "returnType" : "Builder",
    "comment" : " Configure the vibrator capabilities with a combination of IVibrator.CAP_* values. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSupportedEffects(int... supportedEffects)",
    "returnType" : "Builder",
    "comment" : " Configure the effects supported with {@link android.hardware.vibrator.Effect} values. ",
    "links" : [ "android.hardware.vibrator.Effect" ]
  }, {
    "name" : "public Builder setSupportedBraking(int... supportedBraking)",
    "returnType" : "Builder",
    "comment" : " Configure braking supported with {@link android.hardware.vibrator.Braking} values. ",
    "links" : [ "android.hardware.vibrator.Braking" ]
  }, {
    "name" : "public Builder setPwlePrimitiveDurationMax(int pwlePrimitiveDurationMax)",
    "returnType" : "Builder",
    "comment" : " Configure maximum duration, in milliseconds, of a PWLE primitive. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPwleSizeMax(int pwleSizeMax)",
    "returnType" : "Builder",
    "comment" : " Configure maximum number of primitives supported in a single PWLE composed effect. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSupportedPrimitive(int primitiveId, int duration)",
    "returnType" : "Builder",
    "comment" : " Configure the duration of a {@link android.hardware.vibrator.CompositePrimitive}. ",
    "links" : [ "android.hardware.vibrator.CompositePrimitive" ]
  }, {
    "name" : "public Builder setPrimitiveDelayMax(int primitiveDelayMax)",
    "returnType" : "Builder",
    "comment" : " Configure maximum delay, in milliseconds, supported in a composed effect primitive. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setCompositionSizeMax(int compositionSizeMax)",
    "returnType" : "Builder",
    "comment" : " Configure maximum number of primitives supported in a single composed effect. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setQFactor(float qFactor)",
    "returnType" : "Builder",
    "comment" : " Configure the vibrator quality factor. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setFrequencyProfile(@NonNull FrequencyProfile frequencyProfile)",
    "returnType" : "Builder",
    "comment" : " Configure the vibrator frequency information like resonant frequency and bandwidth. ",
    "links" : [ ]
  }, {
    "name" : "public VibratorInfo build()",
    "returnType" : "VibratorInfo",
    "comment" : " Build the configured {@link VibratorInfo}. ",
    "links" : [ "android.os.VibratorInfo" ]
  }, {
    "name" : "private static SparseBooleanArray toSparseBooleanArray(int[] supportedKeys)",
    "returnType" : "SparseBooleanArray",
    "comment" : "\n         * Create a {@link SparseBooleanArray} from given {@code supportedKeys} where each key is\n         * mapped\n         * to {@code true}.\n         ",
    "links" : [ "android.util.SparseBooleanArray" ]
  } ],
  "methodNames" : [ "public Builder setCapabilities(long capabilities)", "public Builder setSupportedEffects(int... supportedEffects)", "public Builder setSupportedBraking(int... supportedBraking)", "public Builder setPwlePrimitiveDurationMax(int pwlePrimitiveDurationMax)", "public Builder setPwleSizeMax(int pwleSizeMax)", "public Builder setSupportedPrimitive(int primitiveId, int duration)", "public Builder setPrimitiveDelayMax(int primitiveDelayMax)", "public Builder setCompositionSizeMax(int compositionSizeMax)", "public Builder setQFactor(float qFactor)", "public Builder setFrequencyProfile(@NonNull FrequencyProfile frequencyProfile)", "public VibratorInfo build()", "private static SparseBooleanArray toSparseBooleanArray(int[] supportedKeys)" ],
  "variableNames" : [ "mId", "mCapabilities", "mSupportedEffects", "mSupportedBraking", "mSupportedPrimitives", "mPrimitiveDelayMax", "mCompositionSizeMax", "mPwlePrimitiveDurationMax", "mPwleSizeMax", "mQFactor", "mFrequencyProfile" ]
}