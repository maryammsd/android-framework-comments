{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/ImsCallSession.java",
  "packageName" : "android.telephony.ims",
  "className" : "ImsCallSession",
  "comment" : "\n * Provides the call initiation/termination, and media exchange between two IMS endpoints.\n * It directly communicates with IMS service which implements the IMS protocol behavior.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "miSession",
    "type" : "IImsCallSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClosed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "Listener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListenerExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIImsCallSessionListenerProxy",
    "type" : "IImsCallSessionListenerProxy",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final IImsCallSessionListenerProxy getIImsCallSessionListenerProxy()",
    "returnType" : "IImsCallSessionListenerProxy",
    "comment" : "\n     * returns the IImsCallSessionListenerProxy for the ImsCallSession\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Closes this object. This object is not usable after being closed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getCallId()",
    "returnType" : "String",
    "comment" : "\n     * Gets the call ID of the session.\n     *\n     * @return the call ID\n     * If null is returned for getCallId, then that means that the call ID has not been set yet.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setCallId(String callId)",
    "returnType" : "void",
    "comment" : "\n     * Sets the call ID of the session.\n     *\n     * @param callId Call ID of the session, which is transferred from\n     * {@link android.telephony.ims.feature.MmTelFeature#notifyIncomingCall(\n     * ImsCallSessionImplBase, String, Bundle)}\n     ",
    "links" : [ "android.telephony.ims.feature.MmTelFeature#notifyIncomingCall(" ]
  }, {
    "name" : "public ImsCallProfile getCallProfile()",
    "returnType" : "ImsCallProfile",
    "comment" : "\n     * Gets the call profile that this session is associated with\n     *\n     * @return the call profile that this session is associated with\n     ",
    "links" : [ ]
  }, {
    "name" : "public ImsCallProfile getLocalCallProfile()",
    "returnType" : "ImsCallProfile",
    "comment" : "\n     * Gets the local call profile that this session is associated with\n     *\n     * @return the local call profile that this session is associated with\n     ",
    "links" : [ ]
  }, {
    "name" : "public ImsCallProfile getRemoteCallProfile()",
    "returnType" : "ImsCallProfile",
    "comment" : "\n     * Gets the remote call profile that this session is associated with\n     *\n     * @return the remote call profile that this session is associated with\n     ",
    "links" : [ ]
  }, {
    "name" : "public IImsVideoCallProvider getVideoCallProvider()",
    "returnType" : "IImsVideoCallProvider",
    "comment" : "\n     * Gets the video call provider for the session.\n     *\n     * @return The video call provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getProperty(String name)",
    "returnType" : "String",
    "comment" : "\n     * Gets the value associated with the specified property of this session.\n     *\n     * @return the string value associated with the specified property\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getState()",
    "returnType" : "int",
    "comment" : "\n     * Gets the session state.\n     * The value returned must be one of the states in {@link State}.\n     *\n     * @return the session state\n     ",
    "links" : [ "State" ]
  }, {
    "name" : "public boolean isAlive()",
    "returnType" : "boolean",
    "comment" : "\n     * Determines if the {@link ImsCallSession} is currently alive (e.g. not in a terminated or\n     * closed state).\n     *\n     * @return {@code True} if the session is alive.\n     ",
    "links" : [ "com.android.ims.internal.IImsCallSession" ]
  }, {
    "name" : "public IImsCallSession getSession()",
    "returnType" : "IImsCallSession",
    "comment" : "\n     * Gets the native IMS call session.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isInCall()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the session is in call.\n     *\n     * @return true if the session is in call\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setListener(Listener listener, Executor executor)",
    "returnType" : "void",
    "comment" : "\n     * Sets the listener to listen to the session events. A {@link ImsCallSession}\n     * can only hold one listener at a time. Subsequent calls to this method\n     * override the previous listener.\n     *\n     * @param listener to listen to the session events of this object\n     * @param executor an Executor that will execute callbacks\n     ",
    "links" : [ "com.android.ims.internal.IImsCallSession" ]
  }, {
    "name" : "public void setMute(boolean muted)",
    "returnType" : "void",
    "comment" : "\n     * Mutes or unmutes the mic for the active call.\n     *\n     * @param muted true if the call is muted, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public void start(String callee, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Initiates an IMS call with the specified target and call profile.\n     * The session listener is called back upon defined session events.\n     * The method is only valid to call when the session state is in\n     * {@link ImsCallSession.State#IDLE}.\n     *\n     * @param callee dial string to make the call to.  The platform passes the dialed number\n     *               entered by the user as-is.  The {@link ImsService} should ensure that the\n     *               number is formatted in SIP messages appropriately (e.g. using\n     *               {@link android.telephony.PhoneNumberUtils#formatNumberToE164(String, String)}).\n     * @param profile call profile to make the call with the specified service type,\n     *      call type and media information\n     * @see Listener#callSessionStarted, Listener#callSessionStartFailed\n     ",
    "links" : [ "android.telephony.PhoneNumberUtils#formatNumberToE164(String", "ImsCallSession.State#IDLE", "android.telephony.ims.ImsService" ]
  }, {
    "name" : "public void start(String[] participants, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Initiates an IMS conference call with the specified target and call profile.\n     * The session listener is called back upon defined session events.\n     * The method is only valid to call when the session state is in\n     * {@link ImsCallSession.State#IDLE}.\n     *\n     * @param participants participant list to initiate an IMS conference call.  The platform passes\n     *               the dialed numbers entered by the user as-is.  The {@link ImsService} should\n     *               ensure that the number is formatted in SIP messages appropriately (e.g. using\n     *               {@link android.telephony.PhoneNumberUtils#formatNumberToE164(String, String)}).\n     * @param profile call profile to make the call with the specified service type,\n     *      call type and media information\n     * @see Listener#callSessionStarted, Listener#callSessionStartFailed\n     ",
    "links" : [ "android.telephony.PhoneNumberUtils#formatNumberToE164(String", "ImsCallSession.State#IDLE", "android.telephony.ims.ImsService" ]
  }, {
    "name" : "public void accept(int callType, ImsStreamMediaProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Accepts an incoming call or session update.\n     *\n     * @param callType call type specified in {@link ImsCallProfile} to be answered\n     * @param profile stream media profile {@link ImsStreamMediaProfile} to be answered\n     * @see Listener#callSessionStarted\n     ",
    "links" : [ "android.telephony.ims.ImsCallProfile", "android.telephony.ims.ImsStreamMediaProfile" ]
  }, {
    "name" : "public void deflect(String number)",
    "returnType" : "void",
    "comment" : "\n     * Deflects an incoming call.\n     *\n     * @param number number to be deflected to\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reject(int reason)",
    "returnType" : "void",
    "comment" : "\n     * Rejects an incoming call or session update.\n     *\n     * @param reason reason code to reject an incoming call\n     * @see Listener#callSessionStartFailed\n     ",
    "links" : [ ]
  }, {
    "name" : "public void transfer(@NonNull String number, boolean isConfirmationRequired)",
    "returnType" : "void",
    "comment" : "\n     * Transfers an ongoing call.\n     *\n     * @param number number to be transferred to.\n     * @param isConfirmationRequired indicates whether confirmation of the transfer is required.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void transfer(@NonNull ImsCallSession transferToSession)",
    "returnType" : "void",
    "comment" : "\n     * Transfers a call to another ongoing call.\n     *\n     * @param transferToSession the other ImsCallSession to which this session will be transferred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void terminate(int reason)",
    "returnType" : "void",
    "comment" : "\n     * Terminates a call.\n     *\n     * @see Listener#callSessionTerminated\n     ",
    "links" : [ ]
  }, {
    "name" : "public void hold(ImsStreamMediaProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Puts a call on hold. When it succeeds, {@link Listener#callSessionHeld} is called.\n     *\n     * @param profile stream media profile {@link ImsStreamMediaProfile} to hold the call\n     * @see Listener#callSessionHeld, Listener#callSessionHoldFailed\n     ",
    "links" : [ "android.telephony.ims.aidl.IImsCallSessionListener#callSessionHeld", "android.telephony.ims.ImsStreamMediaProfile" ]
  }, {
    "name" : "public void resume(ImsStreamMediaProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Continues a call that's on hold. When it succeeds,\n     * {@link Listener#callSessionResumed} is called.\n     *\n     * @param profile stream media profile {@link ImsStreamMediaProfile} to resume the call\n     * @see Listener#callSessionResumed, Listener#callSessionResumeFailed\n     ",
    "links" : [ "android.telephony.ims.aidl.IImsCallSessionListener#callSessionResumed", "android.telephony.ims.ImsStreamMediaProfile" ]
  }, {
    "name" : "public void merge()",
    "returnType" : "void",
    "comment" : "\n     * Merges the active & hold call. When it succeeds,\n     * {@link Listener#callSessionMergeStarted} is called.\n     *\n     * @see Listener#callSessionMergeStarted , Listener#callSessionMergeFailed\n     ",
    "links" : [ "android.telephony.ims.aidl.IImsCallSessionListener#callSessionMergeStarted" ]
  }, {
    "name" : "public void update(int callType, ImsStreamMediaProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Updates the current call's properties (ex. call mode change: video upgrade / downgrade).\n     *\n     * @param callType call type specified in {@link ImsCallProfile} to be updated\n     * @param profile stream media profile {@link ImsStreamMediaProfile} to be updated\n     * @see Listener#callSessionUpdated, Listener#callSessionUpdateFailed\n     ",
    "links" : [ "android.telephony.ims.ImsCallProfile", "android.telephony.ims.ImsStreamMediaProfile" ]
  }, {
    "name" : "public void extendToConference(String[] participants)",
    "returnType" : "void",
    "comment" : "\n     * Extends this call to the conference call with the specified recipients.\n     *\n     * @param participants list to be invited to the conference call after extending the call\n     * @see Listener#callSessionConferenceExtended\n     * @see Listener#callSessionConferenceExtendFailed\n     ",
    "links" : [ ]
  }, {
    "name" : "public void inviteParticipants(String[] participants)",
    "returnType" : "void",
    "comment" : "\n     * Requests the conference server to invite an additional participants to the conference.\n     *\n     * @param participants list to be invited to the conference call\n     * @see Listener#callSessionInviteParticipantsRequestDelivered\n     * @see Listener#callSessionInviteParticipantsRequestFailed\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeParticipants(String[] participants)",
    "returnType" : "void",
    "comment" : "\n     * Requests the conference server to remove the specified participants from the conference.\n     *\n     * @param participants participant list to be removed from the conference call\n     * @see Listener#callSessionRemoveParticipantsRequestDelivered\n     * @see Listener#callSessionRemoveParticipantsRequestFailed\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sendDtmf(char c, Message result)",
    "returnType" : "void",
    "comment" : "\n     * Sends a DTMF code. According to <a href=\"http://tools.ietf.org/html/rfc2833\">RFC 2833</a>,\n     * event 0 ~ 9 maps to decimal value 0 ~ 9, '*' to 10, '#' to 11, event 'A' ~ 'D' to 12 ~ 15,\n     * and event flash to 16. Currently, event flash is not supported.\n     *\n     * @param c the DTMF to send. '0' ~ '9', 'A' ~ 'D', '*', '#' are valid inputs.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void startDtmf(char c)",
    "returnType" : "void",
    "comment" : "\n     * Starts a DTMF code. According to <a href=\"http://tools.ietf.org/html/rfc2833\">RFC 2833</a>,\n     * event 0 ~ 9 maps to decimal value 0 ~ 9, '*' to 10, '#' to 11, event 'A' ~ 'D' to 12 ~ 15,\n     * and event flash to 16. Currently, event flash is not supported.\n     *\n     * @param c the DTMF to send. '0' ~ '9', 'A' ~ 'D', '*', '#' are valid inputs.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void stopDtmf()",
    "returnType" : "void",
    "comment" : "\n     * Stops a DTMF code.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sendUssd(String ussdMessage)",
    "returnType" : "void",
    "comment" : "\n     * Sends an USSD message.\n     *\n     * @param ussdMessage USSD message to send\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMultiparty()",
    "returnType" : "boolean",
    "comment" : "\n     * Determines if the session is multiparty.\n     *\n     * @return {@code True} if the session is multiparty.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sendRttMessage(String rttMessage)",
    "returnType" : "void",
    "comment" : "\n     * Sends Rtt Message\n     *\n     * @param rttMessage rtt text to be sent\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sendRttModifyRequest(ImsCallProfile to)",
    "returnType" : "void",
    "comment" : "\n     * Sends RTT Upgrade or downgrade request\n     *\n     * @param to Profile with the RTT flag set to the desired value\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sendRttModifyResponse(boolean response)",
    "returnType" : "void",
    "comment" : "\n     * Sends RTT Upgrade response\n     *\n     * @param response : response for upgrade\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sendRtpHeaderExtensions(@NonNull Set<RtpHeaderExtension> rtpHeaderExtensions)",
    "returnType" : "void",
    "comment" : "\n     * Requests that {@code rtpHeaderExtensions} are sent as a header extension with the next\n     * RTP packet sent by the IMS stack.\n     * <p>\n     * The {@link RtpHeaderExtensionType}s negotiated during SDP (Session Description Protocol)\n     * signalling determine the {@link RtpHeaderExtension}s which can be sent using this method.\n     * See RFC8285 for more information.\n     * <p>\n     * By specification, the RTP header extension is an unacknowledged transmission and there is no\n     * guarantee that the header extension will be delivered by the network to the other end of the\n     * call.\n     * @param rtpHeaderExtensions The header extensions to be included in the next RTP header.\n     ",
    "links" : [ "android.telephony.ims.RtpHeaderExtension", "android.telephony.ims.RtpHeaderExtensionType" ]
  }, {
    "name" : "public void callSessionNotifyAnbr(int mediaType, int direction, int bitsPerSecond)",
    "returnType" : "void",
    "comment" : "\n     * Deliver the bitrate for the indicated media type, direction and bitrate to the upper layer.\n     *\n     * @param mediaType MediaType is used to identify media stream such as audio or video.\n     * @param direction Direction of this packet stream (e.g. uplink or downlink).\n     * @param bitsPerSecond This value is the bitrate received from the NW through the Recommended\n     *        bitrate MAC Control Element message and ImsStack converts this value from MAC bitrate\n     *        to audio/video codec bitrate (defined in TS26.114).\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Provides a string representation of the {@link ImsCallSession}.  Primarily intended for\n     * use in log statements.\n     *\n     * @return String representation of session.\n     ",
    "links" : [ "com.android.ims.internal.IImsCallSession" ]
  } ],
  "methodNames" : [ "public final IImsCallSessionListenerProxy getIImsCallSessionListenerProxy()", "public void close()", "public String getCallId()", "public void setCallId(String callId)", "public ImsCallProfile getCallProfile()", "public ImsCallProfile getLocalCallProfile()", "public ImsCallProfile getRemoteCallProfile()", "public IImsVideoCallProvider getVideoCallProvider()", "public String getProperty(String name)", "public int getState()", "public boolean isAlive()", "public IImsCallSession getSession()", "public boolean isInCall()", "public void setListener(Listener listener, Executor executor)", "public void setMute(boolean muted)", "public void start(String callee, ImsCallProfile profile)", "public void start(String[] participants, ImsCallProfile profile)", "public void accept(int callType, ImsStreamMediaProfile profile)", "public void deflect(String number)", "public void reject(int reason)", "public void transfer(@NonNull String number, boolean isConfirmationRequired)", "public void transfer(@NonNull ImsCallSession transferToSession)", "public void terminate(int reason)", "public void hold(ImsStreamMediaProfile profile)", "public void resume(ImsStreamMediaProfile profile)", "public void merge()", "public void update(int callType, ImsStreamMediaProfile profile)", "public void extendToConference(String[] participants)", "public void inviteParticipants(String[] participants)", "public void removeParticipants(String[] participants)", "public void sendDtmf(char c, Message result)", "public void startDtmf(char c)", "public void stopDtmf()", "public void sendUssd(String ussdMessage)", "public boolean isMultiparty()", "public void sendRttMessage(String rttMessage)", "public void sendRttModifyRequest(ImsCallProfile to)", "public void sendRttModifyResponse(boolean response)", "public void sendRtpHeaderExtensions(@NonNull Set<RtpHeaderExtension> rtpHeaderExtensions)", "public void callSessionNotifyAnbr(int mediaType, int direction, int bitsPerSecond)", "public String toString()" ],
  "variableNames" : [ "TAG", "miSession", "mClosed", "mCallId", "mListener", "mListenerExecutor", "mIImsCallSessionListenerProxy" ]
}