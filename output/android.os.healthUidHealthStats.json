{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/health/UidHealthStats.java",
  "packageName" : "android.os.health",
  "className" : "UidHealthStats",
  "comment" : "\n * Keys for {@link HealthStats} returned from\n * {@link SystemHealthManager#takeUidSnapshot(int) SystemHealthManager.takeUidSnapshot(int)},\n * {@link SystemHealthManager#takeMyUidSnapshot() SystemHealthManager.takeMyUidSnapshot()}, and\n * {@link SystemHealthManager#takeUidSnapshots(int[]) SystemHealthManager.takeUidSnapshots(int[])}.\n ",
  "variables" : [ {
    "name" : "MEASUREMENT_REALTIME_BATTERY_MS",
    "type" : "int",
    "comment" : "\n     * How many milliseconds this statistics report covers in wall-clock time while the\n     * device was on battery including both screen-on and screen-off time.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_UPTIME_BATTERY_MS",
    "type" : "int",
    "comment" : "\n     * How many milliseconds this statistics report covers that the CPU was running while the\n     * device was on battery including both screen-on and screen-off time.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_REALTIME_SCREEN_OFF_BATTERY_MS",
    "type" : "int",
    "comment" : "\n     * How many milliseconds this statistics report covers in wall-clock time while the\n     * device was on battery including both screen-on and screen-off time.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_UPTIME_SCREEN_OFF_BATTERY_MS",
    "type" : "int",
    "comment" : "\n     * How many milliseconds this statistics report covers that the CPU was running while the\n     * device was on battery including both screen-on and screen-off time.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMERS_WAKELOCKS_FULL",
    "type" : "int",
    "comment" : "\n     * Key for a TimerStat for the times a\n     * {@link android.os.PowerManager#FULL_WAKE_LOCK full wake lock}\n     * was acquired for this uid.\n     ",
    "links" : [ "android.os.PowerManager#FULL_WAKE_LOCK" ]
  }, {
    "name" : "TIMERS_WAKELOCKS_PARTIAL",
    "type" : "int",
    "comment" : "\n     * Key for a TimerStat for the times a\n     * {@link android.os.PowerManager#PARTIAL_WAKE_LOCK full wake lock}\n     * was acquired for this uid.\n     ",
    "links" : [ "android.os.PowerManager#PARTIAL_WAKE_LOCK" ]
  }, {
    "name" : "TIMERS_WAKELOCKS_WINDOW",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TIMERS_WAKELOCKS_DRAW",
    "type" : "int",
    "comment" : "\n     * Key for a TimerStat for the times a system-defined wakelock was acquired\n     * to allow the application to draw when it otherwise would not be able to\n     * (e.g. on the lock screen or doze screen).\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMERS_SYNCS",
    "type" : "int",
    "comment" : "\n     * Key for a map of Timers for the sync adapter syncs that were done for\n     * this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMERS_JOBS",
    "type" : "int",
    "comment" : "\n     * Key for a map of Timers for the {@link android.app.job.JobScheduler} jobs for\n     * this uid.\n     ",
    "links" : [ "android.app.job.JobScheduler" ]
  }, {
    "name" : "TIMER_GPS_SENSOR",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the applications use of the GPS sensor.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMERS_SENSORS",
    "type" : "int",
    "comment" : "\n     * Key for a map of the sensor usage for this uid. The keys are a\n     * string representation of the handle for the sensor.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATS_PIDS",
    "type" : "int",
    "comment" : "\n     * Key for a HealthStats with {@link PidHealthStats} keys for each of the\n     * currently running processes for this uid.\n     ",
    "links" : [ "PidHealthStats" ]
  }, {
    "name" : "STATS_PROCESSES",
    "type" : "int",
    "comment" : "\n     * Key for a HealthStats with {@link ProcessHealthStats} keys for each of the\n     * named processes for this uid.\n     ",
    "links" : [ "ProcessHealthStats" ]
  }, {
    "name" : "STATS_PACKAGES",
    "type" : "int",
    "comment" : "\n     * Key for a HealthStats with {@link PackageHealthStats} keys for each of the\n     * APKs that share this uid.\n     ",
    "links" : [ "PackageHealthStats" ]
  }, {
    "name" : "MEASUREMENT_WIFI_IDLE_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the wifi controller was\n     * idle but turned on on behalf of this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_RX_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the wifi transmitter was\n     * receiving data for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_TX_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the wifi transmitter was\n     * transmitting data for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_POWER_MAMS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of the estimated number of mA*ms used by this uid\n     * for wifi, that is to say the number of milliseconds of wifi activity\n     * times the mA current during that period.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BLUETOOTH_IDLE_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the bluetooth controller was\n     * idle but turned on on behalf of this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BLUETOOTH_RX_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the bluetooth transmitter was\n     * receiving data for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BLUETOOTH_TX_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the bluetooth transmitter was\n     * transmitting data for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BLUETOOTH_POWER_MAMS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of the estimated number of mA*ms used by this uid\n     * for bluetooth, that is to say the number of milliseconds of activity\n     * times the mA current during that period.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_MOBILE_IDLE_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the mobile radio controller was\n     * idle but turned on on behalf of this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_MOBILE_RX_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the mobile radio transmitter was\n     * receiving data for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_MOBILE_TX_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the mobile radio transmitter was\n     * transmitting data for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_MOBILE_POWER_MAMS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of the estimated number of mA*ms used by this uid\n     * for mobile data, that is to say the number of milliseconds of activity\n     * times the mA current during that period.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_RUNNING_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds the wifi controller was\n     * active on behalf of this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_FULL_LOCK_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds that this uid held a full wifi lock.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_WIFI_SCAN",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of wifi scans done by this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_MULTICAST_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of millseconds that this uid was performing\n     * multicast wifi traffic.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_AUDIO",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of audio playback done by this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_VIDEO",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of video playback done by this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_FLASHLIGHT",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration this uid had the flashlight turned on.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_CAMERA",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration this uid had the camera turned on.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_FOREGROUND_ACTIVITY",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of when an activity from this uid\n     * was the foreground activitiy.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_BLUETOOTH_SCAN",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of when this uid was doing bluetooth scans.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_PROCESS_STATE_TOP_MS",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of when this uid was in the \"top\" process state.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_PROCESS_STATE_FOREGROUND_SERVICE_MS",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of when this uid was in the \"foreground service\"\n     * process state.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_PROCESS_STATE_TOP_SLEEPING_MS",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of when this uid was in the \"top sleeping\"\n     * process state.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_PROCESS_STATE_FOREGROUND_MS",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of when this uid was in the \"foreground\"\n     * process state.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_PROCESS_STATE_BACKGROUND_MS",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of when this uid was in the \"background\"\n     * process state.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_PROCESS_STATE_CACHED_MS",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration of when this uid was in the \"cached\" process\n     * state.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_VIBRATOR",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration this uid had the vibrator turned on.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_OTHER_USER_ACTIVITY_COUNT",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of software-generated user activity events caused\n     * by the UID.  Calls to userActivity() reset the user activity countdown timer and\n     * keep the screen on for the user's preferred screen-on setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BUTTON_USER_ACTIVITY_COUNT",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of user activity events due to physical button presses caused\n     * by the UID.  Calls to userActivity() reset the user activity countdown timer and\n     * keep the screen on for the user's preferred screen-on setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of user activity events due to touch events caused\n     * by the UID.  Calls to userActivity() reset the user activity countdown timer and\n     * keep the screen on for the user's preferred screen-on setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_MOBILE_RX_BYTES",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of bytes received for this uid by the mobile radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_MOBILE_TX_BYTES",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of bytes transmitted for this uid by the mobile radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_RX_BYTES",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of bytes received for this uid by the wifi radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_TX_BYTES",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of bytes transmitted for this uid by the wifi radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BLUETOOTH_RX_BYTES",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of bytes received for this uid by the bluetooth radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BLUETOOTH_TX_BYTES",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of bytes transmitted for this uid by the bluetooth radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_MOBILE_RX_PACKETS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of packets received for this uid by the mobile radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_MOBILE_TX_PACKETS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of packets transmitted for this uid by the mobile radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_RX_PACKETS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of packets received for this uid by the wifi radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_WIFI_TX_PACKETS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of packets transmitted for this uid by the wifi radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BLUETOOTH_RX_PACKETS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of packets received for this uid by the bluetooth radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_BLUETOOTH_TX_PACKETS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of number of packets transmitted for this uid by the bluetooth radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "TIMER_MOBILE_RADIO_ACTIVE",
    "type" : "int",
    "comment" : "\n     * Key for a timer for the count and duration the mobile radio was turned on for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_USER_CPU_TIME_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of the number of milliseconds spent by the CPU running user space\n     * code for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_SYSTEM_CPU_TIME_MS",
    "type" : "int",
    "comment" : "\n     * Key for a measurement of the number of milliseconds spent by the CPU running kernel\n     * code for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "MEASUREMENT_CPU_POWER_MAMS",
    "type" : "int",
    "comment" : "\n     * An estimate of the number of milliamp-microsends used by this uid.\n     *\n     * @deprecated this measurement is vendor-dependent and not reliable.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTANTS",
    "type" : "HealthKeys.Constants",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "MEASUREMENT_REALTIME_BATTERY_MS", "MEASUREMENT_UPTIME_BATTERY_MS", "MEASUREMENT_REALTIME_SCREEN_OFF_BATTERY_MS", "MEASUREMENT_UPTIME_SCREEN_OFF_BATTERY_MS", "TIMERS_WAKELOCKS_FULL", "TIMERS_WAKELOCKS_PARTIAL", "TIMERS_WAKELOCKS_WINDOW", "TIMERS_WAKELOCKS_DRAW", "TIMERS_SYNCS", "TIMERS_JOBS", "TIMER_GPS_SENSOR", "TIMERS_SENSORS", "STATS_PIDS", "STATS_PROCESSES", "STATS_PACKAGES", "MEASUREMENT_WIFI_IDLE_MS", "MEASUREMENT_WIFI_RX_MS", "MEASUREMENT_WIFI_TX_MS", "MEASUREMENT_WIFI_POWER_MAMS", "MEASUREMENT_BLUETOOTH_IDLE_MS", "MEASUREMENT_BLUETOOTH_RX_MS", "MEASUREMENT_BLUETOOTH_TX_MS", "MEASUREMENT_BLUETOOTH_POWER_MAMS", "MEASUREMENT_MOBILE_IDLE_MS", "MEASUREMENT_MOBILE_RX_MS", "MEASUREMENT_MOBILE_TX_MS", "MEASUREMENT_MOBILE_POWER_MAMS", "MEASUREMENT_WIFI_RUNNING_MS", "MEASUREMENT_WIFI_FULL_LOCK_MS", "TIMER_WIFI_SCAN", "MEASUREMENT_WIFI_MULTICAST_MS", "TIMER_AUDIO", "TIMER_VIDEO", "TIMER_FLASHLIGHT", "TIMER_CAMERA", "TIMER_FOREGROUND_ACTIVITY", "TIMER_BLUETOOTH_SCAN", "TIMER_PROCESS_STATE_TOP_MS", "TIMER_PROCESS_STATE_FOREGROUND_SERVICE_MS", "TIMER_PROCESS_STATE_TOP_SLEEPING_MS", "TIMER_PROCESS_STATE_FOREGROUND_MS", "TIMER_PROCESS_STATE_BACKGROUND_MS", "TIMER_PROCESS_STATE_CACHED_MS", "TIMER_VIBRATOR", "MEASUREMENT_OTHER_USER_ACTIVITY_COUNT", "MEASUREMENT_BUTTON_USER_ACTIVITY_COUNT", "MEASUREMENT_TOUCH_USER_ACTIVITY_COUNT", "MEASUREMENT_MOBILE_RX_BYTES", "MEASUREMENT_MOBILE_TX_BYTES", "MEASUREMENT_WIFI_RX_BYTES", "MEASUREMENT_WIFI_TX_BYTES", "MEASUREMENT_BLUETOOTH_RX_BYTES", "MEASUREMENT_BLUETOOTH_TX_BYTES", "MEASUREMENT_MOBILE_RX_PACKETS", "MEASUREMENT_MOBILE_TX_PACKETS", "MEASUREMENT_WIFI_RX_PACKETS", "MEASUREMENT_WIFI_TX_PACKETS", "MEASUREMENT_BLUETOOTH_RX_PACKETS", "MEASUREMENT_BLUETOOTH_TX_PACKETS", "TIMER_MOBILE_RADIO_ACTIVE", "MEASUREMENT_USER_CPU_TIME_MS", "MEASUREMENT_SYSTEM_CPU_TIME_MS", "MEASUREMENT_CPU_POWER_MAMS", "CONSTANTS" ],
  "methodNames" : [ ]
}