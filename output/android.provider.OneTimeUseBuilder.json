{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/OneTimeUseBuilder.java",
  "packageName" : "android.provider",
  "className" : "OneTimeUseBuilder",
  "comment" : "\n * A builder that facilitates prohibiting its use after an instance was created with it.\n *\n * Suggested usage:\n * call {@link #checkNotUsed} in each setter, and {@link #markUsed} in {@link #build}\n *\n * @param <T> Type of object being built\n * @hide\n ",
  "links" : [ "#markUsed", "#checkNotUsed", "#build" ],
  "variables" : [ {
    "name" : "used",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void markUsed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void checkNotUsed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract T build()",
    "returnType" : "T",
    "comment" : "\n     * Builds the instance\n     *\n     * Once this method is called, this builder should no longer be used. Any subsequent calls to a\n     * setter or {@code build()} will throw an exception\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected void markUsed()", "protected void checkNotUsed()", "public abstract T build()" ],
  "variableNames" : [ "used" ]
}