{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/inputmethodservice/SoftInputWindow.java",
  "packageName" : "android.inputmethodservice",
  "className" : "SoftInputWindow",
  "comment" : "\n * A SoftInputWindow is a Dialog that is intended to be used for a top-level input\n * method window.  It will be displayed along the edge of the screen, moving\n * the application user interface away from it so that the focused item is\n * always visible.\n * @hide\n ",
  "variables" : [ {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "Callback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeyEventCallback",
    "type" : "KeyEvent.Callback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDispatcherState",
    "type" : "KeyEvent.DispatcherState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGravity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTakesFocus",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBounds",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setToken(IBinder token)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onWindowFocusChanged(boolean hasFocus)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean dispatchTouchEvent(MotionEvent ev)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setGravity(int gravity)",
    "returnType" : "void",
    "comment" : "\n     * Set which boundary of the screen the DockWindow sticks to.\n     * \n     * @param gravity The boundary of the screen to stick. See {@link\n     *        android.view.Gravity.LEFT}, {@link android.view.Gravity.TOP},\n     *        {@link android.view.Gravity.BOTTOM}, {@link\n     *        android.view.Gravity.RIGHT}.\n     ",
    "links" : [ "android.view.Gravity.TOP", "android.view.Gravity.BOTTOM" ]
  }, {
    "name" : "public int getGravity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateWidthHeight(WindowManager.LayoutParams lp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyDown(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyLongPress(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyUp(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyMultiple(int keyCode, int count, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onBackPressed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void initDockWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void show()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final void dismissForDestroyIfNecessary()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateWindowState(@SoftInputWindowState int newState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String stateToString(@SoftInputWindowState int state)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "DEBUG", "TAG", "mName", "mCallback", "mKeyEventCallback", "mDispatcherState", "mWindowType", "mGravity", "mTakesFocus", "mBounds", "mWindowState" ],
  "methodNames" : [ "public void setToken(IBinder token)", "public void onWindowFocusChanged(boolean hasFocus)", "public boolean dispatchTouchEvent(MotionEvent ev)", "public void setGravity(int gravity)", "public int getGravity()", "private void updateWidthHeight(WindowManager.LayoutParams lp)", "public boolean onKeyDown(int keyCode, KeyEvent event)", "public boolean onKeyLongPress(int keyCode, KeyEvent event)", "public boolean onKeyUp(int keyCode, KeyEvent event)", "public boolean onKeyMultiple(int keyCode, int count, KeyEvent event)", "public void onBackPressed()", "private void initDockWindow()", "public final void show()", " final void dismissForDestroyIfNecessary()", "private void updateWindowState(@SoftInputWindowState int newState)", "private static String stateToString(@SoftInputWindowState int state)" ]
}