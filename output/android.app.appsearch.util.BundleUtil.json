{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/util/BundleUtil.java",
  "packageName" : "android.app.appsearch.util",
  "className" : "BundleUtil",
  "comment" : "\n * Utilities for working with {@link android.os.Bundle}.\n *\n * @hide\n ",
  "links" : [ "android.os.Bundle" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static boolean deepEquals(@Nullable Bundle one, @Nullable Bundle two)",
    "returnType" : "boolean",
    "comment" : "\n     * Deeply checks two bundles are equal or not.\n     *\n     * <p>Two bundles will be considered equal if they contain the same keys, and each value is also\n     * equal. Bundle values are compared using deepEquals.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean bundleValueEquals(@Nullable Object one, @Nullable Object two)",
    "returnType" : "boolean",
    "comment" : "\n     * Deeply checks whether two values in a Bundle are equal or not.\n     *\n     * <p>Values of type Bundle are compared using {@link #deepEquals}.\n     ",
    "links" : [ "#deepEquals" ]
  }, {
    "name" : "public static int deepHashCode(@Nullable Bundle bundle)",
    "returnType" : "int",
    "comment" : "\n     * Calculates the hash code for a bundle.\n     *\n     * <p>The hash code is only effected by the contents in the bundle. Bundles will get consistent\n     * hash code if they have same contents.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Bundle deepCopy(@NonNull Bundle bundle)",
    "returnType" : "Bundle",
    "comment" : "\n     * Deeply clones a Bundle.\n     *\n     * <p>Values which are Bundles, Lists or Arrays are deeply copied themselves.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void putParcelable(@NonNull T parcel, @NonNull Bundle bundle, @NonNull String key)",
    "returnType" : "void",
    "comment" : "\n     * Helper function to serialize a {@link SafeParcelable} in a Bundle.\n     *\n     * <p>Note: {@link Bundle#putParcelableArrayList(String, java.util.ArrayList)} does not preserve\n     * SafeParcelable semantics. Use this method instead.Failure to heed this advice will inevitably\n     * result in unanticipated runtime crash loops.\n     *\n     * <p>See http://shortn/_vLTA1IpXK1\n     *\n     * <p>See http://shortn/_b2QcRB4tpG\n     *\n     * @param parcel the {@link SafeParcelable} to write to the bundle.\n     * @param bundle the bundle containing the key to deserialize from.\n     * @param key the name of the key mapping to the serialized object.\n     ",
    "links" : [ "android.app.appsearch.safeparcel.SafeParcelable", "android.os.Bundle#putParcelableArrayList(String" ]
  }, {
    "name" : "public static T getParcelable(@NonNull Bundle bundle, @NonNull String key, @NonNull Parcelable.Creator<T> safeParcelableCreator)",
    "returnType" : "T",
    "comment" : "\n     * Helper function to deserialize a {@link SafeParcelable} from a Bundle.\n     *\n     * @param bundle the bundle containing the key to deserialize from.\n     * @param key the name of the key mapping to the serialized object.\n     ",
    "links" : [ "android.app.appsearch.safeparcel.SafeParcelable" ]
  } ],
  "methodNames" : [ "public static boolean deepEquals(@Nullable Bundle one, @Nullable Bundle two)", "public static boolean bundleValueEquals(@Nullable Object one, @Nullable Object two)", "public static int deepHashCode(@Nullable Bundle bundle)", "public static Bundle deepCopy(@NonNull Bundle bundle)", "public static void putParcelable(@NonNull T parcel, @NonNull Bundle bundle, @NonNull String key)", "public static T getParcelable(@NonNull Bundle bundle, @NonNull String key, @NonNull Parcelable.Creator<T> safeParcelableCreator)" ],
  "variableNames" : [ ]
}