{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/ContentQueryMap.java",
  "packageName" : "android.content",
  "className" : "ContentQueryMap",
  "comment" : "\n * Caches the contents of a cursor into a Map of String->ContentValues and optionally\n * keeps the cache fresh by registering for updates on the content backing the cursor. The column of\n * the database that is to be used as the key of the map is user-configurable, and the\n * ContentValues contains all columns other than the one that is designated the key.\n * <p>\n * The cursor data is accessed by row key and column name via getValue().\n ",
  "variables" : [ {
    "name" : "mCursor",
    "type" : "Cursor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColumnNames",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeyColumn",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandlerForUpdateNotifications",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeepUpdated",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mValues",
    "type" : "Map<String, ContentValues>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentObserver",
    "type" : "ContentObserver",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDirty",
    "type" : "boolean",
    "comment" : " Set when a cursor change notification is received and is cleared on a call to requery(). ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setKeepUpdated(boolean keepUpdated)",
    "returnType" : "void",
    "comment" : "\n     * Change whether or not the ContentQueryMap will register with the cursor's ContentProvider \n     * for change notifications. If you use a ContentQueryMap in an activity you should call this\n     * with false in onPause(), which means you need to call it with true in onResume()\n     * if want it to be kept updated.\n     * @param keepUpdated if true the ContentQueryMap should be registered with the cursor's\n     * ContentProvider, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public synchronized ContentValues getValues(String rowName)",
    "returnType" : "ContentValues",
    "comment" : "\n     * Access the ContentValues for the row specified by rowName\n     * @param rowName which row to read\n     * @return the ContentValues for the row, or null if the row wasn't present in the cursor\n     ",
    "links" : [ ]
  }, {
    "name" : "public void requery()",
    "returnType" : "void",
    "comment" : " Requeries the cursor and reads the contents into the cache ",
    "links" : [ ]
  }, {
    "name" : "private synchronized void readCursorIntoCache(Cursor cursor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized Map<String, ContentValues> getRows()",
    "returnType" : "Map<String, ContentValues>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mCursor", "mColumnNames", "mKeyColumn", "mHandlerForUpdateNotifications", "mKeepUpdated", "mValues", "mContentObserver", "mDirty" ],
  "methodNames" : [ "public void setKeepUpdated(boolean keepUpdated)", "public synchronized ContentValues getValues(String rowName)", "public void requery()", "private synchronized void readCursorIntoCache(Cursor cursor)", "public synchronized Map<String, ContentValues> getRows()", "public synchronized void close()", "protected void finalize() throws Throwable" ]
}