{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/support/rastermill/FrameSequence.java",
  "packageName" : "android.support.rastermill",
  "className" : "State",
  "comment" : "\n     * Playback state used when moving frames forward in a frame sequence.\n     *\n     * Note that this doesn't require contiguous frames to be rendered, it just stores\n     * information (in the case of gif, a recall buffer) that will be used to construct\n     * frames based upon data recorded before previousFrameNr.\n     *\n     * Note: {@link #destroy()} *must* be called before the object is GC'd to free native resources\n     *\n     * Note: State holds a native ref to its FrameSequence instance, so its FrameSequence should\n     * remain ref'd while it is in use\n     ",
  "variables" : [ {
    "name" : "mNativeState",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getFrame(int frameNr, Bitmap output, int previousFrameNr)",
    "returnType" : "long",
    "comment" : " TODO: consider adding alternate API for drawing into a SurfaceTexture",
    "links" : [ ]
  } ],
  "variableNames" : [ "mNativeState" ],
  "methodNames" : [ "public void destroy()", "public long getFrame(int frameNr, Bitmap output, int previousFrameNr)" ]
}