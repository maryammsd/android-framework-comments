{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inputmethod/InsertModeGesture.java",
  "packageName" : "android.view.inputmethod",
  "className" : "InsertModeGesture",
  "comment" : "\n * A sub-class of {@link HandwritingGesture} for starting an insert mode which inserts a space in\n * the editor to let users hand write freely at the designated insertion point.\n * This class holds the information required for insertion of text in\n * toolkit widgets like {@link TextView}.\n *\n * Once InsertMode gesture is started, it continues until IME calls\n * {@link CancellationSignal#cancel()} and toolkit can receive cancel using\n * {@link CancellationSignal#setOnCancelListener(CancellationSignal.OnCancelListener)} obtained from\n * {@link #getCancellationSignal()}.\n ",
  "links" : [ "android.widget.TextView", "android.view.inputmethod.HandwritingGesture", "android.os.CancellationSignal#cancel()", "android.os.CancellationSignal#setOnCancelListener(CancellationSignal.OnCancelListener)", "#getCancellationSignal()" ],
  "variables" : [ {
    "name" : "mPoint",
    "type" : "PointF",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<InsertModeGesture>",
    "comment" : "\n     * Used to make this class parcelable.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public CancellationSignal getCancellationSignal()",
    "returnType" : "CancellationSignal",
    "comment" : "\n     * Returns the {@link CancellationSignal} associated with finishing this gesture.\n     * Once InsertMode gesture is started, it continues until IME calls\n     * {@link CancellationSignal#cancel()} and toolkit can receive cancel using\n     * {@link CancellationSignal#setOnCancelListener(CancellationSignal.OnCancelListener)}.\n     ",
    "links" : [ "android.os.CancellationSignal", "android.os.CancellationSignal#cancel()", "android.os.CancellationSignal#setOnCancelListener(CancellationSignal.OnCancelListener)" ]
  }, {
    "name" : "public PointF getInsertionPoint()",
    "returnType" : "PointF",
    "comment" : "\n     * Returns the insertion point {@link PointF} (in screen coordinates) where space will be\n     * created for additional text to be inserted.\n     ",
    "links" : [ "android.graphics.PointF" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Used to package this object into a {@link Parcel}.\n     *\n     * @param dest The {@link Parcel} to be written.\n     * @param flags The flags used for parceling.\n     ",
    "links" : [ "android.os.Parcel" ]
  } ],
  "methodNames" : [ "public CancellationSignal getCancellationSignal()", "public PointF getInsertionPoint()", "public int hashCode()", "public boolean equals(Object o)", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "mPoint", "CREATOR" ]
}