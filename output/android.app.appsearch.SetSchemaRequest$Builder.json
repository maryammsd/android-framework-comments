{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/SetSchemaRequest.java",
  "packageName" : "android.app.appsearch",
  "className" : "Builder",
  "comment" : " Builder for {@link SetSchemaRequest} objects. ",
  "links" : [ "android.app.appsearch.SetSchemaRequest" ],
  "variables" : [ {
    "name" : "DEFAULT_VERSION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemas",
    "type" : "ArraySet<AppSearchSchema>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemasNotDisplayedBySystem",
    "type" : "ArraySet<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemasVisibleToPackages",
    "type" : "ArrayMap<String, Set<PackageIdentifier>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemasVisibleToPermissions",
    "type" : "ArrayMap<String, Set<Set<Integer>>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPubliclyVisibleSchemas",
    "type" : "ArrayMap<String, PackageIdentifier>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemaVisibleToConfigs",
    "type" : "ArrayMap<String, Set<SchemaVisibilityConfig>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMigrators",
    "type" : "ArrayMap<String, Migrator>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mForceOverride",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBuilt",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder addSchemas(@NonNull AppSearchSchema... schemas)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds one or more {@link AppSearchSchema} types to the schema.\n         *\n         * <p>An {@link AppSearchSchema} object represents one type of structured data.\n         *\n         * <p>Any documents of these types will be displayed on system UI surfaces by default.\n         ",
    "links" : [ "android.app.appsearch.AppSearchSchema" ]
  }, {
    "name" : "public Builder addSchemas(@NonNull Collection<AppSearchSchema> schemas)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a collection of {@link AppSearchSchema} objects to the schema.\n         *\n         * <p>An {@link AppSearchSchema} object represents one type of structured data.\n         ",
    "links" : [ "android.app.appsearch.AppSearchSchema" ]
  }, {
    "name" : "public Builder setSchemaTypeDisplayedBySystem(@NonNull String schemaType, boolean displayed)",
    "returnType" : "Builder",
    "comment" : " Merged list available from getSchemasNotDisplayedBySystem",
    "links" : [ ]
  }, {
    "name" : "public Builder addRequiredPermissionsForSchemaTypeVisibility(@NonNull String schemaType, @AppSearchSupportedPermission @NonNull Set<Integer> permissions)",
    "returnType" : "Builder",
    "comment" : " Merged list available from getRequiredPermissionsForSchemaTypeVisibility",
    "links" : [ ]
  }, {
    "name" : "public Builder clearRequiredPermissionsForSchemaTypeVisibility(@NonNull String schemaType)",
    "returnType" : "Builder",
    "comment" : " Clears all required permissions combinations for the given schema type. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSchemaTypeVisibilityForPackage(@NonNull String schemaType, boolean visible, @NonNull PackageIdentifier packageIdentifier)",
    "returnType" : "Builder",
    "comment" : " Merged list available from getSchemasVisibleToPackages",
    "links" : [ ]
  }, {
    "name" : "public Builder setPubliclyVisibleSchema(@NonNull String schema, @Nullable PackageIdentifier packageIdentifier)",
    "returnType" : "Builder",
    "comment" : " Merged list available from getPubliclyVisibleSchemas",
    "links" : [ ]
  }, {
    "name" : "public Builder addSchemaTypeVisibleToConfig(@NonNull String schemaType, @NonNull SchemaVisibilityConfig schemaVisibilityConfig)",
    "returnType" : "Builder",
    "comment" : " Merged list available from getSchemasVisibleToConfigs",
    "links" : [ ]
  }, {
    "name" : "public Builder clearSchemaTypeVisibleToConfigs(@NonNull String schemaType)",
    "returnType" : "Builder",
    "comment" : " Clears all visible to {@link SchemaVisibilityConfig} for the given schema type. ",
    "links" : [ "android.app.appsearch.SchemaVisibilityConfig" ]
  }, {
    "name" : "public Builder setMigrator(@NonNull String schemaType, @NonNull Migrator migrator)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the {@link Migrator} associated with the given SchemaType.\n         *\n         * <p>The {@link Migrator} migrates all {@link GenericDocument}s under given schema type\n         * from the current version number stored in AppSearch to the final version set via {@link\n         * #setVersion}.\n         *\n         * <p>A {@link Migrator} will be invoked if the current version number stored in AppSearch\n         * is different from the final version set via {@link #setVersion} and {@link\n         * Migrator#shouldMigrate} returns {@code true}.\n         *\n         * <p>The target schema type of the output {@link GenericDocument} of {@link\n         * Migrator#onUpgrade} or {@link Migrator#onDowngrade} must exist in this {@link\n         * SetSchemaRequest}.\n         *\n         * @param schemaType The schema type to set migrator on.\n         * @param migrator The migrator translates a document from its current version to the final\n         *     version set via {@link #setVersion}.\n         * @see SetSchemaRequest.Builder#setVersion\n         * @see SetSchemaRequest.Builder#addSchemas\n         * @see AppSearchSession#setSchema\n         ",
    "links" : [ "#setVersion", "android.app.appsearch.Migrator#shouldMigrate", "android.app.appsearch.Migrator#onDowngrade", "android.app.appsearch.SetSchemaRequest", "android.app.appsearch.GenericDocument", "android.app.appsearch.Migrator#onUpgrade", "android.app.appsearch.Migrator" ]
  }, {
    "name" : "public Builder setMigrators(@NonNull Map<String, Migrator> migrators)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a Map of {@link Migrator}s.\n         *\n         * <p>The key of the map is the schema type that the {@link Migrator} value applies to.\n         *\n         * <p>The {@link Migrator} migrates all {@link GenericDocument}s under given schema type\n         * from the current version number stored in AppSearch to the final version set via {@link\n         * #setVersion}.\n         *\n         * <p>A {@link Migrator} will be invoked if the current version number stored in AppSearch\n         * is different from the final version set via {@link #setVersion} and {@link\n         * Migrator#shouldMigrate} returns {@code true}.\n         *\n         * <p>The target schema type of the output {@link GenericDocument} of {@link\n         * Migrator#onUpgrade} or {@link Migrator#onDowngrade} must exist in this {@link\n         * SetSchemaRequest}.\n         *\n         * @param migrators A {@link Map} of migrators that translate a document from its current\n         *     version to the final version set via {@link #setVersion}. The key of the map is the\n         *     schema type that the {@link Migrator} value applies to.\n         * @see SetSchemaRequest.Builder#setVersion\n         * @see SetSchemaRequest.Builder#addSchemas\n         * @see AppSearchSession#setSchema\n         ",
    "links" : [ "#setVersion", "android.app.appsearch.Migrator#shouldMigrate", "android.app.appsearch.Migrator#onDowngrade", "android.app.appsearch.SetSchemaRequest", "android.app.appsearch.GenericDocument", "android.app.appsearch.Migrator#onUpgrade", "android.app.appsearch.Migrator", "android.util.ArrayMap" ]
  }, {
    "name" : "public Builder setForceOverride(boolean forceOverride)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether or not to override the current schema in the {@link AppSearchSession}\n         * database.\n         *\n         * <p>Call this method whenever backward incompatible changes need to be made by setting\n         * {@code forceOverride} to {@code true}. As a result, during execution of the setSchema\n         * operation, all documents that are incompatible with the new schema will be deleted and\n         * the new schema will be saved and persisted.\n         *\n         * <p>By default, this is {@code false}.\n         ",
    "links" : [ "android.app.appsearch.AppSearchSession" ]
  }, {
    "name" : "public Builder setVersion(@IntRange(from = 1) int version)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the version number of the overall {@link AppSearchSchema} in the database.\n         *\n         * <p>The {@link AppSearchSession} database can only ever hold documents for one version at\n         * a time.\n         *\n         * <p>Setting a version number that is different from the version number currently stored in\n         * AppSearch will result in AppSearch calling the {@link Migrator}s provided to {@link\n         * AppSearchSession#setSchema} to migrate the documents already in AppSearch from the\n         * previous version to the one set in this request. The version number can be updated\n         * without any other changes to the set of schemas.\n         *\n         * <p>The version number can stay the same, increase, or decrease relative to the current\n         * version number that is already stored in the {@link AppSearchSession} database.\n         *\n         * <p>The version of an empty database will always be 0. You cannot set version to the\n         * {@link SetSchemaRequest}, if it doesn't contains any {@link AppSearchSchema}.\n         *\n         * @param version A positive integer representing the version of the entire set of schemas\n         *     represents the version of the whole schema in the {@link AppSearchSession} database,\n         *     default version is 1.\n         * @throws IllegalArgumentException if the version is negative.\n         * @see AppSearchSession#setSchema\n         * @see Migrator\n         * @see SetSchemaRequest.Builder#setMigrator\n         ",
    "links" : [ "android.app.appsearch.AppSearchSchema", "android.app.appsearch.AppSearchSession#setSchema", "android.app.appsearch.SetSchemaRequest", "android.app.appsearch.AppSearchSession", "android.app.appsearch.Migrator" ]
  }, {
    "name" : "public SetSchemaRequest build()",
    "returnType" : "SetSchemaRequest",
    "comment" : "\n         * Builds a new {@link SetSchemaRequest} object.\n         *\n         * @throws IllegalArgumentException if schema types were referenced, but the corresponding\n         *     {@link AppSearchSchema} type was never added.\n         ",
    "links" : [ "android.app.appsearch.AppSearchSchema", "android.app.appsearch.SetSchemaRequest" ]
  }, {
    "name" : "private void resetIfBuilt()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder addSchemas(@NonNull AppSearchSchema... schemas)", "public Builder addSchemas(@NonNull Collection<AppSearchSchema> schemas)", "public Builder setSchemaTypeDisplayedBySystem(@NonNull String schemaType, boolean displayed)", "public Builder addRequiredPermissionsForSchemaTypeVisibility(@NonNull String schemaType, @AppSearchSupportedPermission @NonNull Set<Integer> permissions)", "public Builder clearRequiredPermissionsForSchemaTypeVisibility(@NonNull String schemaType)", "public Builder setSchemaTypeVisibilityForPackage(@NonNull String schemaType, boolean visible, @NonNull PackageIdentifier packageIdentifier)", "public Builder setPubliclyVisibleSchema(@NonNull String schema, @Nullable PackageIdentifier packageIdentifier)", "public Builder addSchemaTypeVisibleToConfig(@NonNull String schemaType, @NonNull SchemaVisibilityConfig schemaVisibilityConfig)", "public Builder clearSchemaTypeVisibleToConfigs(@NonNull String schemaType)", "public Builder setMigrator(@NonNull String schemaType, @NonNull Migrator migrator)", "public Builder setMigrators(@NonNull Map<String, Migrator> migrators)", "public Builder setForceOverride(boolean forceOverride)", "public Builder setVersion(@IntRange(from = 1) int version)", "public SetSchemaRequest build()", "private void resetIfBuilt()" ],
  "variableNames" : [ "DEFAULT_VERSION", "mSchemas", "mSchemasNotDisplayedBySystem", "mSchemasVisibleToPackages", "mSchemasVisibleToPermissions", "mPubliclyVisibleSchemas", "mSchemaVisibleToConfigs", "mMigrators", "mForceOverride", "mVersion", "mBuilt" ]
}