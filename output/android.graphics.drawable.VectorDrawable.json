{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/drawable/VectorDrawable.java",
  "packageName" : "android.graphics.drawable",
  "className" : "VectorDrawable",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOGTAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SHAPE_CLIP_PATH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SHAPE_GROUP",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SHAPE_PATH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SHAPE_VECTOR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVectorState",
    "type" : "VectorDrawableState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTintFilter",
    "type" : "PorterDuffColorFilter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBlendModeColorFilter",
    "type" : "BlendModeColorFilter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColorFilter",
    "type" : "ColorFilter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMutated",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTargetDensity",
    "type" : "int",
    "comment" : " The density of the display on which this drawable will be rendered. ",
    "links" : [ ]
  }, {
    "name" : "mDpiScaledWidth",
    "type" : "int",
    "comment" : " Therefore, we need to scale the values we got from the getDimension*().",
    "links" : [ ]
  }, {
    "name" : "mDpiScaledHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDpiScaledInsets",
    "type" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDpiScaledDirty",
    "type" : "boolean",
    "comment" : " Whether DPI-scaled width, height, and insets need to be updated. ",
    "links" : [ ]
  }, {
    "name" : "mTmpBounds",
    "type" : "Rect",
    "comment" : " Temp variable, only for saving \"new\" operation at the draw() time.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void updateLocalState(Resources res)",
    "returnType" : "void",
    "comment" : "\n     * Initializes local dynamic properties from state. This should be called\n     * after significant state changes, e.g. from the One True Constructor and\n     * after inflating or applying a theme.\n     *\n     * @param res resources of the context in which the drawable will be\n     *            displayed, or {@code null} to use the constant state defaults\n     ",
    "links" : [ ]
  }, {
    "name" : "public Drawable mutate()",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearMutated()",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : " Object getTargetByName(String name)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ConstantState getConstantState()",
    "returnType" : "ConstantState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void draw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getAlpha()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAlpha(int alpha)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setColorFilter(ColorFilter colorFilter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ColorFilter getColorFilter()",
    "returnType" : "ColorFilter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTintList(ColorStateList tint)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTintBlendMode(@NonNull BlendMode blendMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isStateful()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasFocusStateSpecified()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean onStateChange(int[] stateSet)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateColorFilters(@Nullable BlendMode blendMode, ColorStateList tint)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getOpacity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getIntrinsicWidth()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getIntrinsicHeight()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Insets getOpticalInsets()",
    "returnType" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void computeVectorSize()",
    "returnType" : "void",
    "comment" : "\n     * Update local dimensions to adjust for a target density that may differ\n     * from the source density against which the constant state was loaded.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean canApplyTheme()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void applyTheme(Theme t)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getPixelSize()",
    "returnType" : "float",
    "comment" : "\n     * The size of a pixel when scaled from the intrinsic dimension to the viewport dimension.\n     * This is used to calculate the path animation accuracy.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static VectorDrawable create(Resources resources, int rid)",
    "returnType" : "VectorDrawable",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void inflate(@NonNull Resources r, @NonNull XmlPullParser parser, @NonNull AttributeSet attrs, @Nullable Theme theme) throws XmlPullParserException, IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateStateFromTypedArray(TypedArray a) throws XmlPullParserException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void inflateChildElements(Resources res, XmlPullParser parser, AttributeSet attrs, Theme theme) throws XmlPullParserException, IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getChangingConfigurations()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setAllowCaching(boolean allowCaching)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean needMirroring()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAutoMirrored(boolean mirrored)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAutoMirrored()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getNativeTree()",
    "returnType" : "long",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAntiAlias(boolean aa)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static native int nDraw(long rendererPtr, long canvasWrapperPtr, long colorFilterPtr, Rect bounds, boolean needsMirroring, boolean canReuseCache)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native boolean nGetFullPathProperties(long pathPtr, byte[] properties, int length)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetName(long nodePtr, String name)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native boolean nGetGroupProperties(long groupPtr, float[] properties, int length)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetPathString(long pathPtr, String pathString, int length)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateTree(long rootGroupPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateTreeFromCopy(long treeToCopy, long rootGroupPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetRendererViewportSize(long rendererPtr, float viewportWidth, float viewportHeight)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native boolean nSetRootAlpha(long rendererPtr, float alpha)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetRootAlpha(long rendererPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetAntiAlias(long rendererPtr, boolean aa)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetAllowCaching(long rendererPtr, boolean allowCaching)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateFullPath()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateFullPath(long nativeFullPathPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nUpdateFullPathProperties(long pathPtr, float strokeWidth, int strokeColor, float strokeAlpha, int fillColor, float fillAlpha, float trimPathStart, float trimPathEnd, float trimPathOffset, float strokeMiterLimit, int strokeLineCap, int strokeLineJoin, int fillType)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nUpdateFullPathFillGradient(long pathPtr, long fillGradientPtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nUpdateFullPathStrokeGradient(long pathPtr, long strokeGradientPtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateClipPath()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateClipPath(long clipPathPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateGroup()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateGroup(long groupPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nUpdateGroupProperties(long groupPtr, float rotate, float pivotX, float pivotY, float scaleX, float scaleY, float translateX, float translateY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nAddChild(long groupPtr, long nodePtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetRotation(long groupPtr)",
    "returnType" : "float",
    "comment" : " Setters and getters during animation.",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetRotation(long groupPtr, float rotation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetPivotX(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetPivotX(long groupPtr, float pivotX)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetPivotY(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetPivotY(long groupPtr, float pivotY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetScaleX(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetScaleX(long groupPtr, float scaleX)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetScaleY(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetScaleY(long groupPtr, float scaleY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetTranslateX(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetTranslateX(long groupPtr, float translateX)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetTranslateY(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetTranslateY(long groupPtr, float translateY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetPathData(long pathPtr, long pathDataPtr)",
    "returnType" : "void",
    "comment" : " Setters and getters for VPath during animation.",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetStrokeWidth(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetStrokeWidth(long pathPtr, float width)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int nGetStrokeColor(long pathPtr)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetStrokeColor(long pathPtr, int strokeColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetStrokeAlpha(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetStrokeAlpha(long pathPtr, float alpha)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int nGetFillColor(long pathPtr)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetFillColor(long pathPtr, int fillColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetFillAlpha(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetFillAlpha(long pathPtr, float fillAlpha)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetTrimPathStart(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetTrimPathStart(long pathPtr, float trimPathStart)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetTrimPathEnd(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetTrimPathEnd(long pathPtr, float trimPathEnd)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native float nGetTrimPathOffset(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetTrimPathOffset(long pathPtr, float trimPathOffset)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void updateLocalState(Resources res)", "public Drawable mutate()", "public void clearMutated()", " Object getTargetByName(String name)", "public ConstantState getConstantState()", "public void draw(Canvas canvas)", "public int getAlpha()", "public void setAlpha(int alpha)", "public void setColorFilter(ColorFilter colorFilter)", "public ColorFilter getColorFilter()", "public void setTintList(ColorStateList tint)", "public void setTintBlendMode(@NonNull BlendMode blendMode)", "public boolean isStateful()", "public boolean hasFocusStateSpecified()", "protected boolean onStateChange(int[] stateSet)", "private void updateColorFilters(@Nullable BlendMode blendMode, ColorStateList tint)", "public int getOpacity()", "public int getIntrinsicWidth()", "public int getIntrinsicHeight()", "public Insets getOpticalInsets()", " void computeVectorSize()", "public boolean canApplyTheme()", "public void applyTheme(Theme t)", "public float getPixelSize()", "public static VectorDrawable create(Resources resources, int rid)", "public void inflate(@NonNull Resources r, @NonNull XmlPullParser parser, @NonNull AttributeSet attrs, @Nullable Theme theme) throws XmlPullParserException, IOException", "private void updateStateFromTypedArray(TypedArray a) throws XmlPullParserException", "private void inflateChildElements(Resources res, XmlPullParser parser, AttributeSet attrs, Theme theme) throws XmlPullParserException, IOException", "public int getChangingConfigurations()", " void setAllowCaching(boolean allowCaching)", "private boolean needMirroring()", "public void setAutoMirrored(boolean mirrored)", "public boolean isAutoMirrored()", "public long getNativeTree()", "public void setAntiAlias(boolean aa)", "private static native int nDraw(long rendererPtr, long canvasWrapperPtr, long colorFilterPtr, Rect bounds, boolean needsMirroring, boolean canReuseCache)", "private static native boolean nGetFullPathProperties(long pathPtr, byte[] properties, int length)", "private static native void nSetName(long nodePtr, String name)", "private static native boolean nGetGroupProperties(long groupPtr, float[] properties, int length)", "private static native void nSetPathString(long pathPtr, String pathString, int length)", "private static native long nCreateTree(long rootGroupPtr)", "private static native long nCreateTreeFromCopy(long treeToCopy, long rootGroupPtr)", "private static native void nSetRendererViewportSize(long rendererPtr, float viewportWidth, float viewportHeight)", "private static native boolean nSetRootAlpha(long rendererPtr, float alpha)", "private static native float nGetRootAlpha(long rendererPtr)", "private static native void nSetAntiAlias(long rendererPtr, boolean aa)", "private static native void nSetAllowCaching(long rendererPtr, boolean allowCaching)", "private static native long nCreateFullPath()", "private static native long nCreateFullPath(long nativeFullPathPtr)", "private static native void nUpdateFullPathProperties(long pathPtr, float strokeWidth, int strokeColor, float strokeAlpha, int fillColor, float fillAlpha, float trimPathStart, float trimPathEnd, float trimPathOffset, float strokeMiterLimit, int strokeLineCap, int strokeLineJoin, int fillType)", "private static native void nUpdateFullPathFillGradient(long pathPtr, long fillGradientPtr)", "private static native void nUpdateFullPathStrokeGradient(long pathPtr, long strokeGradientPtr)", "private static native long nCreateClipPath()", "private static native long nCreateClipPath(long clipPathPtr)", "private static native long nCreateGroup()", "private static native long nCreateGroup(long groupPtr)", "private static native void nUpdateGroupProperties(long groupPtr, float rotate, float pivotX, float pivotY, float scaleX, float scaleY, float translateX, float translateY)", "private static native void nAddChild(long groupPtr, long nodePtr)", "private static native float nGetRotation(long groupPtr)", "private static native void nSetRotation(long groupPtr, float rotation)", "private static native float nGetPivotX(long groupPtr)", "private static native void nSetPivotX(long groupPtr, float pivotX)", "private static native float nGetPivotY(long groupPtr)", "private static native void nSetPivotY(long groupPtr, float pivotY)", "private static native float nGetScaleX(long groupPtr)", "private static native void nSetScaleX(long groupPtr, float scaleX)", "private static native float nGetScaleY(long groupPtr)", "private static native void nSetScaleY(long groupPtr, float scaleY)", "private static native float nGetTranslateX(long groupPtr)", "private static native void nSetTranslateX(long groupPtr, float translateX)", "private static native float nGetTranslateY(long groupPtr)", "private static native void nSetTranslateY(long groupPtr, float translateY)", "private static native void nSetPathData(long pathPtr, long pathDataPtr)", "private static native float nGetStrokeWidth(long pathPtr)", "private static native void nSetStrokeWidth(long pathPtr, float width)", "private static native int nGetStrokeColor(long pathPtr)", "private static native void nSetStrokeColor(long pathPtr, int strokeColor)", "private static native float nGetStrokeAlpha(long pathPtr)", "private static native void nSetStrokeAlpha(long pathPtr, float alpha)", "private static native int nGetFillColor(long pathPtr)", "private static native void nSetFillColor(long pathPtr, int fillColor)", "private static native float nGetFillAlpha(long pathPtr)", "private static native void nSetFillAlpha(long pathPtr, float fillAlpha)", "private static native float nGetTrimPathStart(long pathPtr)", "private static native void nSetTrimPathStart(long pathPtr, float trimPathStart)", "private static native float nGetTrimPathEnd(long pathPtr)", "private static native void nSetTrimPathEnd(long pathPtr, float trimPathEnd)", "private static native float nGetTrimPathOffset(long pathPtr)", "private static native void nSetTrimPathOffset(long pathPtr, float trimPathOffset)" ],
  "variableNames" : [ "LOGTAG", "SHAPE_CLIP_PATH", "SHAPE_GROUP", "SHAPE_PATH", "SHAPE_VECTOR", "mVectorState", "mTintFilter", "mBlendModeColorFilter", "mColorFilter", "mMutated", "mTargetDensity", "mDpiScaledWidth", "mDpiScaledHeight", "mDpiScaledInsets", "mDpiScaledDirty", "mTmpBounds" ]
}