{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/utils/StringVector.java",
  "packageName" : "org.apache.xml.utils",
  "className" : "StringVector",
  "comment" : "\n * A very simple table that stores a list of strings, optimized\n * for small lists.\n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_blocksize",
    "type" : "int",
    "comment" : " @serial Size of blocks to allocate           ",
    "links" : [ ]
  }, {
    "name" : "m_map",
    "type" : "String[]",
    "comment" : " @serial Array of strings this contains          ",
    "links" : [ ]
  }, {
    "name" : "m_firstFree",
    "type" : "int",
    "comment" : " @serial Number of strings this contains          ",
    "links" : [ ]
  }, {
    "name" : "m_mapSize",
    "type" : "int",
    "comment" : " @serial Size of the array          ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getLength()",
    "returnType" : "int",
    "comment" : "\n   * Get the length of the list.\n   *\n   * @return Number of strings in the list \n   ",
    "links" : [ ]
  }, {
    "name" : "public final int size()",
    "returnType" : "int",
    "comment" : "\n   * Get the length of the list.\n   *\n   * @return Number of strings in the list\n   ",
    "links" : [ ]
  }, {
    "name" : "public final void addElement(String value)",
    "returnType" : "void",
    "comment" : "\n   * Append a string onto the vector.\n   *\n   * @param value Sting to add to the vector\n   ",
    "links" : [ ]
  }, {
    "name" : "public final String elementAt(int i)",
    "returnType" : "String",
    "comment" : "\n   * Get the nth element.\n   *\n   * @param i Index of string to find\n   *\n   * @return String at given index\n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean contains(String s)",
    "returnType" : "boolean",
    "comment" : "\n   * Tell if the table contains the given string.\n   *\n   * @param s String to look for\n   *\n   * @return True if the string is in this table  \n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean containsIgnoreCase(String s)",
    "returnType" : "boolean",
    "comment" : "\n   * Tell if the table contains the given string. Ignore case.\n   *\n   * @param s String to find\n   *\n   * @return True if the String is in this vector\n   ",
    "links" : [ ]
  }, {
    "name" : "public final void push(String s)",
    "returnType" : "void",
    "comment" : "\n   * Tell if the table contains the given string.\n   *\n   * @param s String to push into the vector\n   ",
    "links" : [ ]
  }, {
    "name" : "public final String pop()",
    "returnType" : "String",
    "comment" : "\n   * Pop the tail of this vector.\n   *\n   * @return The String last added to this vector or null not found.\n   * The string is removed from the vector.\n   ",
    "links" : [ ]
  }, {
    "name" : "public final String peek()",
    "returnType" : "String",
    "comment" : "\n   * Get the string at the tail of this vector without popping.\n   *\n   * @return The string at the tail of this vector.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getLength()", "public final int size()", "public final void addElement(String value)", "public final String elementAt(int i)", "public final boolean contains(String s)", "public final boolean containsIgnoreCase(String s)", "public final void push(String s)", "public final String pop()", "public final String peek()" ],
  "variableNames" : [ "serialVersionUID", "m_blocksize", "m_map", "m_firstFree", "m_mapSize" ]
}