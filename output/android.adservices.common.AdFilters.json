{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/common/AdFilters.java",
  "packageName" : "android.adservices.common",
  "className" : "AdFilters",
  "comment" : "\n * A container class for filters which are associated with an ad.\n *\n * <p>If any of the filters in an {@link AdFilters} instance are not satisfied, the associated ad\n * will not be eligible for ad selection. Filters are optional ad parameters and are not required as\n * part of {@link AdData}.\n ",
  "links" : [ "android.adservices.common.AdData", "android.adservices.common.AdFilters" ],
  "variables" : [ {
    "name" : "FREQUENCY_CAP_FIELD_NAME",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "APP_INSTALL_FIELD_NAME",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mFrequencyCapFilters",
    "type" : "FrequencyCapFilters",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mAppInstallFilters",
    "type" : "AppInstallFilters",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<AdFilters>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public FrequencyCapFilters getFrequencyCapFilters()",
    "returnType" : "FrequencyCapFilters",
    "comment" : "\n     * Gets the {@link FrequencyCapFilters} instance that represents all frequency cap filters for\n     * the ad.\n     *\n     * <p>If {@code null}, there are no frequency cap filters which apply to the ad.\n     ",
    "links" : [ "android.adservices.common.FrequencyCapFilters" ]
  }, {
    "name" : "public AppInstallFilters getAppInstallFilters()",
    "returnType" : "AppInstallFilters",
    "comment" : "\n     * Gets the {@link AppInstallFilters} instance that represents all app install filters for the\n     * ad.\n     *\n     * <p>If {@code null}, there are no app install filters which apply to the ad.\n     ",
    "links" : [ "android.adservices.common.AppInstallFilters" ]
  }, {
    "name" : "public int getSizeInBytes()",
    "returnType" : "int",
    "comment" : "\n     * @return The estimated size of this object, in bytes.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public JSONObject toJson() throws JSONException",
    "returnType" : "JSONObject",
    "comment" : "\n     * A JSON serializer.\n     *\n     * @return A JSON serialization of this object.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static AdFilters fromJson(JSONObject json) throws JSONException",
    "returnType" : "AdFilters",
    "comment" : "\n     * A JSON de-serializer.\n     *\n     * @param json A JSON representation of an {@link AdFilters} object as would be generated by\n     *     {@link #toJson()}.\n     * @return An {@link AdFilters} object generated from the given JSON.\n     * @hide\n     ",
    "links" : [ "#toJson()", "android.adservices.common.AdFilters" ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : " Checks whether the {@link AdFilters} objects represent the same set of filters. ",
    "links" : [ "android.adservices.common.AdFilters" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : " Returns the hash of the {@link AdFilters} object's data. ",
    "links" : [ "android.adservices.common.AdFilters" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public FrequencyCapFilters getFrequencyCapFilters()", "public AppInstallFilters getAppInstallFilters()", "public int getSizeInBytes()", "public JSONObject toJson() throws JSONException", "public static AdFilters fromJson(JSONObject json) throws JSONException", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "FREQUENCY_CAP_FIELD_NAME", "APP_INSTALL_FIELD_NAME", "mFrequencyCapFilters", "mAppInstallFilters", "CREATOR" ]
}