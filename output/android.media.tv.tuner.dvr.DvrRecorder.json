{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/tv/tuner/dvr/DvrRecorder.java",
  "packageName" : "android.media.tv.tuner.dvr",
  "className" : "DvrRecorder",
  "comment" : "\n * Digital Video Record (DVR) recorder class which provides record control on Demux's output buffer.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNativeContext",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "OnRecordStatusChangedListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sInstantId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSegmentId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOverflow",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private native int nativeAttachFilter(Filter filter)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeDetachFilter(Filter filter)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeConfigureDvr(DvrSettings settings)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeStartDvr()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeStopDvr()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeFlushDvr()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeClose()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native void nativeSetFileDescriptor(int fd)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native long nativeWrite(long size)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native long nativeWrite(byte[] bytes, long offset, long size)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setListener(@NonNull Executor executor, @NonNull OnRecordStatusChangedListener listener)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void onRecordStatusChanged(int status)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int attachFilter(@NonNull Filter filter)",
    "returnType" : "int",
    "comment" : "\n     * Attaches a filter to DVR interface for recording.\n     *\n     * <p>There can be multiple filters attached. Attached filters are independent, so the order\n     * doesn't matter.\n     *\n     * @param filter the filter to be attached.\n     * @return result status of the operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int detachFilter(@NonNull Filter filter)",
    "returnType" : "int",
    "comment" : "\n     * Detaches a filter from DVR interface.\n     *\n     * @param filter the filter to be detached.\n     * @return result status of the operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int configure(@NonNull DvrSettings settings)",
    "returnType" : "int",
    "comment" : "\n     * Configures the DVR.\n     *\n     * @param settings the settings of the DVR interface.\n     * @return result status of the operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int start()",
    "returnType" : "int",
    "comment" : "\n     * Starts DVR.\n     *\n     * <p>Starts consuming playback data or producing data for recording.\n     * <p>Does nothing if the filter is stopped or not started.</p>\n     *\n     * @return result status of the operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int stop()",
    "returnType" : "int",
    "comment" : "\n     * Stops DVR.\n     *\n     * <p>Stops consuming playback data or producing data for recording.\n     *\n     * @return result status of the operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int flush()",
    "returnType" : "int",
    "comment" : "\n     * Flushed DVR data.\n     *\n     * <p>The data in DVR buffer is cleared.\n     *\n     * @return result status of the operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Closes the DVR instance to release resources.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setFileDescriptor(@NonNull ParcelFileDescriptor fd)",
    "returnType" : "void",
    "comment" : "\n     * Sets file descriptor to write data.\n     *\n     * <p>When a write operation of the filter object is happening, this method should not be\n     * called.\n     *\n     * @param fd the file descriptor to write data.\n     * @see #write(long)\n     * @see #write(byte[], long, long)\n     ",
    "links" : [ ]
  }, {
    "name" : "public long write(@BytesLong long size)",
    "returnType" : "long",
    "comment" : "\n     * Writes recording data to file.\n     *\n     * @param size the maximum number of bytes to write.\n     * @return the number of bytes written.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long write(@NonNull byte[] bytes, @BytesLong long offset, @BytesLong long size)",
    "returnType" : "long",
    "comment" : "\n     * Writes recording data to buffer.\n     *\n     * @param bytes the byte array stores the data to be written to DVR.\n     * @param offset the index of the first byte in {@code bytes} to be written to DVR.\n     * @param size the maximum number of bytes to write.\n     * @return the number of bytes written.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mNativeContext", "mListener", "mExecutor", "mUserId", "sInstantId", "mSegmentId", "mOverflow" ],
  "methodNames" : [ "private native int nativeAttachFilter(Filter filter)", "private native int nativeDetachFilter(Filter filter)", "private native int nativeConfigureDvr(DvrSettings settings)", "private native int nativeStartDvr()", "private native int nativeStopDvr()", "private native int nativeFlushDvr()", "private native int nativeClose()", "private native void nativeSetFileDescriptor(int fd)", "private native long nativeWrite(long size)", "private native long nativeWrite(byte[] bytes, long offset, long size)", "public void setListener(@NonNull Executor executor, @NonNull OnRecordStatusChangedListener listener)", "private void onRecordStatusChanged(int status)", "public int attachFilter(@NonNull Filter filter)", "public int detachFilter(@NonNull Filter filter)", "public int configure(@NonNull DvrSettings settings)", "public int start()", "public int stop()", "public int flush()", "public void close()", "public void setFileDescriptor(@NonNull ParcelFileDescriptor fd)", "public long write(@BytesLong long size)", "public long write(@NonNull byte[] bytes, @BytesLong long offset, @BytesLong long size)" ]
}