{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/w3c/dom/DOMError.java",
  "packageName" : "org.w3c.dom",
  "className" : "DOMError",
  "comment" : "\n * <code>DOMError</code> is an interface that describes an error.\n * <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.\n * @since DOM Level 3\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SEVERITY_WARNING",
    "type" : "short",
    "comment" : "\n     * The severity of the error described by the <code>DOMError</code> is\n     * warning. A <code>SEVERITY_WARNING</code> will not cause the\n     * processing to stop, unless <code>DOMErrorHandler.handleError()</code>\n     * returns <code>false</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "SEVERITY_ERROR",
    "type" : "short",
    "comment" : "\n     * The severity of the error described by the <code>DOMError</code> is\n     * error. A <code>SEVERITY_ERROR</code> may not cause the processing to\n     * stop if the error can be recovered, unless\n     * <code>DOMErrorHandler.handleError()</code> returns <code>false</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "SEVERITY_FATAL_ERROR",
    "type" : "short",
    "comment" : "\n     * The severity of the error described by the <code>DOMError</code> is\n     * fatal error. A <code>SEVERITY_FATAL_ERROR</code> will cause the\n     * normal processing to stop. The return value of\n     * <code>DOMErrorHandler.handleError()</code> is ignored unless the\n     * implementation chooses to continue, in which case the behavior\n     * becomes undefined.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public short getSeverity()",
    "returnType" : "short",
    "comment" : "\n     * The severity of the error, either <code>SEVERITY_WARNING</code>,\n     * <code>SEVERITY_ERROR</code>, or <code>SEVERITY_FATAL_ERROR</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getMessage()",
    "returnType" : "String",
    "comment" : "\n     * An implementation specific string describing the error that occurred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getType()",
    "returnType" : "String",
    "comment" : "\n     *  A <code>DOMString</code> indicating which related data is expected in\n     * <code>relatedData</code>. Users should refer to the specification of\n     * the error in order to find its <code>DOMString</code> type and\n     * <code>relatedData</code> definitions if any.\n     * <p ><b>Note:</b>  As an example,\n     * <code>Document.normalizeDocument()</code> does generate warnings when\n     * the \"split-cdata-sections\" parameter is in use. Therefore, the method\n     * generates a <code>SEVERITY_WARNING</code> with <code>type</code>\n     * <code>\"cdata-sections-splitted\"</code> and the first\n     * <code>CDATASection</code> node in document order resulting from the\n     * split is returned by the <code>relatedData</code> attribute.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object getRelatedException()",
    "returnType" : "Object",
    "comment" : "\n     * The related platform dependent exception if any.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object getRelatedData()",
    "returnType" : "Object",
    "comment" : "\n     *  The related <code>DOMError.type</code> dependent data if any.\n     ",
    "links" : [ ]
  }, {
    "name" : "public DOMLocator getLocation()",
    "returnType" : "DOMLocator",
    "comment" : "\n     * The location of the error.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public short getSeverity()", "public String getMessage()", "public String getType()", "public Object getRelatedException()", "public Object getRelatedData()", "public DOMLocator getLocation()" ],
  "variableNames" : [ "SEVERITY_WARNING", "SEVERITY_ERROR", "SEVERITY_FATAL_ERROR" ]
}