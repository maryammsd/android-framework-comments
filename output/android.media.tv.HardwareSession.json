{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/TvInputService.java",
  "packageName" : "android.media.tv",
  "className" : "HardwareSession",
  "comment" : "\n     * Base class for a TV input session which represents an external device connected to a\n     * hardware TV input.\n     *\n     * <p>This class is for an input which provides channels for the external set-top box to the\n     * application. Once a TV input returns an implementation of this class on\n     * {@link #onCreateSession(String)}, the framework will create a separate session for\n     * a hardware TV Input (e.g. HDMI 1) and forward the application's surface to the session so\n     * that the user can see the screen of the hardware TV Input when she tunes to a channel from\n     * this TV input. The implementation of this class is expected to change the channel of the\n     * external set-top box via a proprietary protocol when {@link HardwareSession#onTune} is\n     * requested by the application.\n     *\n     * <p>Note that this class is not for inputs for internal hardware like built-in tuner and HDMI\n     * 1.\n     *\n     * @see #onCreateSession(String)\n     ",
  "links" : [ "#onTune", "#onCreateSession(String)" ],
  "variables" : [ {
    "name" : "mHardwareSession",
    "type" : "TvInputManager.Session",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProxySession",
    "type" : "ITvInputSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProxySessionCallback",
    "type" : "ITvInputSessionCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHardwareSessionCallback",
    "type" : "TvInputManager.SessionCallback",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract String getHardwareInputId()",
    "returnType" : "String",
    "comment" : "\n         * Returns the hardware TV input ID the external device is connected to.\n         *\n         * <p>TV input is expected to provide {@link android.R.attr#setupActivity} so that\n         * the application can launch it before using this TV input. The setup activity may let\n         * the user select the hardware TV input to which the external device is connected. The ID\n         * of the selected one should be stored in the TV input so that it can be returned here.\n         ",
    "links" : [ "android.R.attr#setupActivity" ]
  }, {
    "name" : "public final boolean onSetSurface(Surface surface)",
    "returnType" : "boolean",
    "comment" : "\n         * This method will not be called in {@link HardwareSession}. Framework will\n         * forward the application's surface to the hardware TV input.\n         ",
    "links" : [ "HardwareSession" ]
  }, {
    "name" : "public void onHardwareVideoAvailable()",
    "returnType" : "void",
    "comment" : "\n         * Called when the underlying hardware TV input session calls\n         * {@link TvInputService.Session#notifyVideoAvailable()}.\n         ",
    "links" : [ "TvInputService.Session#notifyVideoAvailable()" ]
  }, {
    "name" : "public void onHardwareVideoUnavailable(int reason)",
    "returnType" : "void",
    "comment" : "\n         * Called when the underlying hardware TV input session calls\n         * {@link TvInputService.Session#notifyVideoUnavailable(int)}.\n         *\n         * @param reason The reason that the hardware TV input stopped the playback:\n         * <ul>\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_UNKNOWN}\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_TUNING}\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL}\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_BUFFERING}\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY}\n         * </ul>\n         ",
    "links" : [ "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY", "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL", "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_TUNING", "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_UNKNOWN", "TvInputService.Session#notifyVideoUnavailable(int)", "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_BUFFERING" ]
  }, {
    "name" : " void release()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract String getHardwareInputId()", "public final boolean onSetSurface(Surface surface)", "public void onHardwareVideoAvailable()", "public void onHardwareVideoUnavailable(int reason)", " void release()" ],
  "variableNames" : [ "mHardwareSession", "mProxySession", "mProxySessionCallback", "mServiceHandler", "mHardwareSessionCallback" ]
}