{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/templates/VarNameCollector.java",
  "packageName" : "org.apache.xalan.templates",
  "className" : "VarNameCollector",
  "comment" : "\n * This class visits variable refs in an XPath and collects their QNames.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_refs",
    "type" : "Vector",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "\n\t * Reset the list for a fresh visitation and collection.\n\t ",
    "links" : [ ]
  }, {
    "name" : "public int getVarCount()",
    "returnType" : "int",
    "comment" : "\n\t * Get the number of variable references that were collected.\n\t * @return the size of the list.\n\t ",
    "links" : [ ]
  }, {
    "name" : " boolean doesOccur(QName refName)",
    "returnType" : "boolean",
    "comment" : "\n\t * Tell if the given qualified name occurs in \n\t * the list of qualified names collected.\n\t * \n\t * @param refName Must be a valid qualified name.\n\t * @return true if the list contains the qualified name.\n\t ",
    "links" : [ ]
  }, {
    "name" : "public boolean visitVariableRef(ExpressionOwner owner, Variable var)",
    "returnType" : "boolean",
    "comment" : "\n\t * Visit a variable reference.\n\t * @param owner The owner of the expression, to which the expression can \n\t *              be reset if rewriting takes place.\n\t * @param var The variable reference object.\n\t * @return true if the sub expressions should be traversed.\n\t ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void reset()", "public int getVarCount()", " boolean doesOccur(QName refName)", "public boolean visitVariableRef(ExpressionOwner owner, Variable var)" ],
  "variableNames" : [ "m_refs" ]
}