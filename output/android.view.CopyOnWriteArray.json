{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/ViewTreeObserver.java",
  "packageName" : "android.view",
  "className" : "CopyOnWriteArray",
  "comment" : "\n     * Copy on write array. This array is not thread safe, and only one loop can\n     * iterate over this array at any given time. This class avoids allocations\n     * until a concurrent modification happens.\n     * \n     * Usage:\n     * \n     * CopyOnWriteArray.Access<MyData> access = array.start();\n     * try {\n     *     for (int i = 0; i < access.size(); i++) {\n     *         MyData d = access.get(i);\n     *     }\n     * } finally {\n     *     access.end();\n     * }\n     ",
  "variables" : [ {
    "name" : "mData",
    "type" : "ArrayList<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDataCopy",
    "type" : "ArrayList<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccess",
    "type" : "Access<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStart",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private ArrayList<T> getArray()",
    "returnType" : "ArrayList<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Access<T> start()",
    "returnType" : "Access<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void end()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int size()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void add(T item)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addAll(CopyOnWriteArray<T> array)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void remove(T item)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mData", "mDataCopy", "mAccess", "mStart" ],
  "methodNames" : [ "private ArrayList<T> getArray()", " Access<T> start()", " void end()", " int size()", " void add(T item)", " void addAll(CopyOnWriteArray<T> array)", " void remove(T item)", " void clear()" ]
}