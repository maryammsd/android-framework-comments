{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/contentcapture/ContentCaptureContext.java",
  "packageName" : "android.view.contentcapture",
  "className" : "ContentCaptureContext",
  "comment" : "\n * Context associated with a {@link ContentCaptureSession} - see {@link ContentCaptureManager} for\n * more info.\n ",
  "variables" : [ {
    "name" : "FLAG_DISABLED_BY_APP",
    "type" : "int",
    "comment" : "\n     * Flag used to indicate that the app explicitly disabled content capture for the activity\n     * (using {@link ContentCaptureManager#setContentCaptureEnabled(boolean)}),\n     * in which case the service will just receive activity-level events.\n     *\n     * @hide\n     ",
    "links" : [ "ContentCaptureManager#setContentCaptureEnabled" ]
  }, {
    "name" : "FLAG_DISABLED_BY_FLAG_SECURE",
    "type" : "int",
    "comment" : "\n     * Flag used to indicate that the activity's window is tagged with\n     * {@link android.view.Display#FLAG_SECURE}, in which case the service will just receive\n     * activity-level events.\n     *\n     * @hide\n     ",
    "links" : [ "android.view.Display#FLAG_SECURE" ]
  }, {
    "name" : "FLAG_RECONNECTED",
    "type" : "int",
    "comment" : "\n     * Flag used when the event is sent because the Android System reconnected to the service (for\n     * example, after its process died).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mHasClientContext",
    "type" : "boolean",
    "comment" : "\n     * Flag indicating if this object has the app-provided context (which is set on\n     * {@link ContentCaptureSession#createContentCaptureSession(ContentCaptureContext)}).\n     ",
    "links" : [ "ContentCaptureSession#createContentCaptureSession" ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : " Fields below are set by app on Builder",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "LocusId",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mComponentName",
    "type" : "ComponentName",
    "comment" : " Fields below are set by server when the session starts",
    "links" : [ ]
  }, {
    "name" : "mTaskId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParentSessionId",
    "type" : "int",
    "comment" : " Fields below are set by the service upon \"delivery\" and are not marshalled in the parcel",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ContentCaptureContext>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n     * Gets the (optional) extras set by the app (through {@link Builder#setExtras(Bundle)}).\n     *\n     * <p>It can be used to provide vendor-specific data that can be modified and examined.\n     ",
    "links" : [ "Builder#setExtras" ]
  }, {
    "name" : "public LocusId getLocusId()",
    "returnType" : "LocusId",
    "comment" : "\n     * Gets the context id.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTaskId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the id of the {@link TaskInfo task} associated with this context.\n     *\n     * @hide\n     ",
    "links" : [ "TaskInfo" ]
  }, {
    "name" : "public ComponentName getActivityComponent()",
    "returnType" : "ComponentName",
    "comment" : "\n     * Gets the activity associated with this context, or {@code null} when it is a child session.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public ContentCaptureSessionId getParentSessionId()",
    "returnType" : "ContentCaptureSessionId",
    "comment" : "\n     * Gets the id of the session that originated this session (through\n     * {@link ContentCaptureSession#createContentCaptureSession(ContentCaptureContext)}),\n     * or {@code null} if this is the main session associated with the Activity's {@link Context}.\n     *\n     * @hide\n     ",
    "links" : [ "ContentCaptureSession#createContentCaptureSession", "Context" ]
  }, {
    "name" : "public void setParentSessionId(int parentSessionId)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getDisplayId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the ID of the display associated with this context, as defined by\n     * {G android.hardware.display.DisplayManager#getDisplay(int) DisplayManager.getDisplay()}.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : "\n     * Gets the flags associated with this context.\n     *\n     * @return any combination of {@link #FLAG_DISABLED_BY_FLAG_SECURE},\n     * {@link #FLAG_DISABLED_BY_APP} and {@link #FLAG_RECONNECTED}.\n     *\n     * @hide\n     ",
    "links" : [ "#FLAG_DISABLED_BY_FLAG_SECURE", "#FLAG_DISABLED_BY_APP", "#FLAG_RECONNECTED" ]
  }, {
    "name" : "public static ContentCaptureContext forLocusId(@NonNull String id)",
    "returnType" : "ContentCaptureContext",
    "comment" : "\n     * Helper that creates a {@link ContentCaptureContext} associated with the given {@code id}.\n     ",
    "links" : [ "ContentCaptureContext" ]
  }, {
    "name" : "public void dump(PrintWriter pw)",
    "returnType" : "void",
    "comment" : " TODO(b/111276913): dump to proto as well",
    "links" : [ ]
  }, {
    "name" : "private boolean fromServer()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "FLAG_DISABLED_BY_APP", "FLAG_DISABLED_BY_FLAG_SECURE", "FLAG_RECONNECTED", "mHasClientContext", "mExtras", "mId", "mComponentName", "mTaskId", "mFlags", "mDisplayId", "mParentSessionId", "CREATOR" ],
  "methodNames" : [ "public Bundle getExtras()", "public LocusId getLocusId()", "public int getTaskId()", "public ComponentName getActivityComponent()", "public ContentCaptureSessionId getParentSessionId()", "public void setParentSessionId(int parentSessionId)", "public int getDisplayId()", "public int getFlags()", "public static ContentCaptureContext forLocusId(@NonNull String id)", "public void dump(PrintWriter pw)", "private boolean fromServer()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ]
}