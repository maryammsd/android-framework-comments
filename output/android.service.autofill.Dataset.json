{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/autofill/Dataset.java",
  "packageName" : "android.service.autofill",
  "className" : "Dataset",
  "comment" : "\n * <p>A <code>Dataset</code> object represents a group of fields (key / value pairs) used\n * to autofill parts of a screen.\n *\n * <p>For more information about the role of datasets in the autofill workflow, read\n * <a href=\"/guide/topics/text/autofill-services\">Build autofill services</a> and the\n * <code><a href=\"/reference/android/service/autofill/AutofillService\">AutofillService</a></code>\n * documentation.\n *\n * <a name=\"BasicUsage\"></a>\n * <h3>Basic usage</h3>\n *\n * <p>In its simplest form, a dataset contains one or more fields (comprised of\n * an {@link AutofillId id}, a {@link AutofillValue value}, and an optional filter\n * {@link Pattern regex}); and one or more {@link RemoteViews presentations} for these fields\n * (each field could have its own {@link RemoteViews presentation}, or use the default\n * {@link RemoteViews presentation} associated with the whole dataset).\n *\n * <p>When an autofill service returns datasets in a {@link FillResponse}\n * and the screen input is focused in a view that is present in at least one of these datasets,\n * the Android System displays a UI containing the {@link RemoteViews presentation} of\n * all datasets pairs that have that view's {@link AutofillId}. Then, when the user selects a\n * dataset from the UI, all views in that dataset are autofilled.\n *\n * <p>If both the current Input Method and autofill service supports inline suggestions, the Dataset\n * can be shown by the keyboard as a suggestion. To use this feature, the Dataset should contain\n * an {@link InlinePresentation} representing how the inline suggestion UI will be rendered.\n *\n * <a name=\"Authentication\"></a>\n * <h3>Dataset authentication</h3>\n *\n * <p>In a more sophisticated form, the dataset values can be protected until the user authenticates\n * the dataset&mdash;in that case, when a dataset is selected by the user, the Android System\n * launches an intent set by the service to \"unlock\" the dataset.\n *\n * <p>For example, when a data set contains credit card information (such as number,\n * expiration date, and verification code), you could provide a dataset presentation saying\n * \"Tap to authenticate\". Then when the user taps that option, you would launch an activity asking\n * the user to enter the credit card code, and if the user enters a valid code, you could then\n * \"unlock\" the dataset.\n *\n * <p>You can also use authenticated datasets to offer an interactive UI for the user. For example,\n * if the activity being autofilled is an account creation screen, you could use an authenticated\n * dataset to automatically generate a random password for the user.\n *\n * <p>See {@link Dataset.Builder#setAuthentication(IntentSender)} for more details about the dataset\n * authentication mechanism.\n *\n * <a name=\"Filtering\"></a>\n * <h3>Filtering</h3>\n * <p>The autofill UI automatically changes which values are shown based on value of the view\n * anchoring it, following the rules below:\n * <ol>\n *   <li>If the view's {@link android.view.View#getAutofillValue() autofill value} is not\n * {@link AutofillValue#isText() text} or is empty, all datasets are shown.\n *   <li>Datasets that have a filter regex (set through\n * {@link Dataset.Builder#setValue(AutofillId, AutofillValue, Pattern)} or\n * {@link Dataset.Builder#setValue(AutofillId, AutofillValue, Pattern, RemoteViews)}) and whose\n * regex matches the view's text value converted to lower case are shown.\n *   <li>Datasets that do not require authentication, have a field value that is\n * {@link AutofillValue#isText() text} and whose {@link AutofillValue#getTextValue() value} starts\n * with the lower case value of the view's text are shown.\n *   <li>All other datasets are hidden.\n * </ol>\n *\n ",
  "variables" : [ {
    "name" : "mFieldIds",
    "type" : "ArrayList<AutofillId>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFieldValues",
    "type" : "ArrayList<AutofillValue>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFieldPresentations",
    "type" : "ArrayList<RemoteViews>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFieldInlinePresentations",
    "type" : "ArrayList<InlinePresentation>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFieldFilters",
    "type" : "ArrayList<DatasetFieldFilter>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPresentation",
    "type" : "RemoteViews",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInlinePresentation",
    "type" : "InlinePresentation",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAuthentication",
    "type" : "IntentSender",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Dataset>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ArrayList<AutofillId> getFieldIds()",
    "returnType" : "ArrayList<AutofillId>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public ArrayList<AutofillValue> getFieldValues()",
    "returnType" : "ArrayList<AutofillValue>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews getFieldPresentation(int index)",
    "returnType" : "RemoteViews",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public InlinePresentation getFieldInlinePresentation(int index)",
    "returnType" : "InlinePresentation",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public DatasetFieldFilter getFilter(int index)",
    "returnType" : "DatasetFieldFilter",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public IntentSender getAuthentication()",
    "returnType" : "IntentSender",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getId()",
    "returnType" : "String",
    "comment" : "\n     * Gets the id of this dataset.\n     *\n     * @return The id of this dataset or {@code null} if not set\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mFieldIds", "mFieldValues", "mFieldPresentations", "mFieldInlinePresentations", "mFieldFilters", "mPresentation", "mInlinePresentation", "mAuthentication", "mId", "CREATOR" ],
  "methodNames" : [ "public ArrayList<AutofillId> getFieldIds()", "public ArrayList<AutofillValue> getFieldValues()", "public RemoteViews getFieldPresentation(int index)", "public InlinePresentation getFieldInlinePresentation(int index)", "public DatasetFieldFilter getFilter(int index)", "public IntentSender getAuthentication()", "public boolean isEmpty()", "public String toString()", "public String getId()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ]
}