{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/Trie2.java",
  "packageName" : "android.icu.impl",
  "className" : "CharSequenceIterator",
  "comment" : "\n     * An iterator that operates over an input CharSequence, and for each Unicode code point\n     * in the input returns the associated value from the Trie2.\n     *\n     * The iterator can move forwards or backwards, and can be reset to an arbitrary index.\n     *\n     * Note that Trie2_16 and Trie2_32 subclass Trie2.CharSequenceIterator.  This is done\n     * only for performance reasons.  It does require that any changes made here be propagated\n     * into the corresponding code in the subclasses.\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "text",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "textLength",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "index",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fResults",
    "type" : "Trie2.CharSequenceValues",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void set(int i)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean hasNext()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean hasPrevious()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Trie2.CharSequenceValues next()",
    "returnType" : "Trie2.CharSequenceValues",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Trie2.CharSequenceValues previous()",
    "returnType" : "Trie2.CharSequenceValues",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void remove()",
    "returnType" : "void",
    "comment" : "\n         * Iterator.remove() is not supported by Trie2.CharSequenceIterator.\n         * @throws UnsupportedOperationException Always thrown because this operation is not supported\n         * @see java.util.Iterator#remove()\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void set(int i)", "public final boolean hasNext()", "public final boolean hasPrevious()", "public Trie2.CharSequenceValues next()", "public Trie2.CharSequenceValues previous()", "public void remove()" ],
  "variableNames" : [ "text", "textLength", "index", "fResults" ]
}