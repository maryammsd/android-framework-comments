{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/ondevicepersonalization/EventUrlProvider.java",
  "packageName" : "android.adservices.ondevicepersonalization",
  "className" : "EventUrlProvider",
  "comment" : "\n * Generates event tracking URLs for a request. The service can embed these URLs within the\n * HTML output as needed. When the HTML is rendered within an ODP WebView, ODP will intercept\n * requests to these URLs, call\n * {@code IsolatedWorker#onEvent(EventInput, android.os.OutcomeReceiver)}, and log the returned\n * output in the EVENTS table.\n *\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "sLogger",
    "type" : "LoggerFactory.Logger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ASYNC_TIMEOUT_MS",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDataAccessService",
    "type" : "IDataAccessService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Uri createEventTrackingUrlWithResponse(@NonNull PersistableBundle eventParams, @Nullable byte[] responseData, @Nullable String mimeType)",
    "returnType" : "Uri",
    "comment" : "\n     * Creates an event tracking URL that returns the provided response. Returns HTTP Status\n     * 200 (OK) if the response data is not empty. Returns HTTP Status 204 (No Content) if the\n     * response data is empty.\n     *\n     * @param eventParams The data to be passed to\n     *     {@code IsolatedWorker#onEvent(EventInput, android.os.OutcomeReceiver)}\n     *     when the event occurs.\n     * @param responseData The content to be returned to the WebView when the URL is fetched.\n     * @param mimeType The Mime Type of the URL response.\n     * @return An ODP event URL that can be inserted into a WebView.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Uri createEventTrackingUrlWithRedirect(@NonNull PersistableBundle eventParams, @Nullable Uri destinationUrl)",
    "returnType" : "Uri",
    "comment" : "\n     * Creates an event tracking URL that redirects to the provided destination URL when it is\n     * clicked in an ODP webview.\n     *\n     * @param eventParams The data to be passed to\n     *     {@code IsolatedWorker#onEvent(EventInput, android.os.OutcomeReceiver)}\n     *     when the event occurs\n     * @param destinationUrl The URL to redirect to.\n     * @return An ODP event URL that can be inserted into a WebView.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Uri getUrl(@NonNull Bundle params, int apiName, long startTimeMillis)",
    "returnType" : "Uri",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Uri createEventTrackingUrlWithResponse(@NonNull PersistableBundle eventParams, @Nullable byte[] responseData, @Nullable String mimeType)", "public Uri createEventTrackingUrlWithRedirect(@NonNull PersistableBundle eventParams, @Nullable Uri destinationUrl)", "private Uri getUrl(@NonNull Bundle params, int apiName, long startTimeMillis)" ],
  "variableNames" : [ "sLogger", "TAG", "ASYNC_TIMEOUT_MS", "mDataAccessService" ]
}