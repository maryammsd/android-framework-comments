{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/strictmode/UnsafeIntentLaunchViolation.java",
  "packageName" : "android.os.strictmode",
  "className" : "UnsafeIntentLaunchViolation",
  "comment" : "\n * Violation raised when your app launches an {@link Intent} which originated\n * from outside your app.\n * <p>\n * Violations may indicate security vulnerabilities in the design of your app,\n * where a malicious app could trick you into granting {@link Uri} permissions\n * or launching unexported components. Here are some typical design patterns\n * that can be used to safely resolve these violations:\n * <ul>\n * <li>The ideal approach is to migrate to using a {@link PendingIntent}, which\n * ensures that your launch is performed using the identity of the original\n * creator, completely avoiding the security issues described above.\n * <li>If using a {@link PendingIntent} isn't feasible, an alternative approach\n * is to create a brand new {@link Intent} and carefully copy only specific\n * values from the original {@link Intent} after careful validation.\n * </ul>\n * <p>\n * Note that this <em>may</em> detect false-positives if your app sends itself\n * an {@link Intent} which is first routed through the OS, such as using\n * {@link Intent#createChooser}. In these cases, careful inspection is required\n * to determine if the return point into your app is appropriately protected\n * with a signature permission or marked as unexported. If the return point is\n * not protected, your app is likely vulnerable to malicious apps.\n ",
  "links" : [ "android.app.PendingIntent#createChooser", "android.net.Uri", "android.app.PendingIntent" ],
  "variables" : [ {
    "name" : "mIntent",
    "type" : "Intent",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Intent getIntent()",
    "returnType" : "Intent",
    "comment" : "\n     * Return the {@link Intent} which caused this violation to be raised. Note\n     * that this value is not available if this violation has been serialized\n     * since intents cannot be serialized.\n     ",
    "links" : [ "android.app.PendingIntent" ]
  } ],
  "methodNames" : [ "public Intent getIntent()" ],
  "variableNames" : [ "mIntent" ]
}