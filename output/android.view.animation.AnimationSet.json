{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/animation/AnimationSet.java",
  "packageName" : "android.view.animation",
  "className" : "AnimationSet",
  "comment" : "\n * Represents a group of Animations that should be played together.\n * The transformation of each individual animation are composed\n * together into a single transform.\n * If AnimationSet sets any properties that its children also set\n * (for example, duration or fillBefore), the values of AnimationSet\n * override the child values.\n *\n * <p>The way that AnimationSet inherits behavior from Animation is important to\n * understand. Some of the Animation attributes applied to AnimationSet affect the\n * AnimationSet itself, some are pushed down to the children, and some are ignored,\n * as follows:\n * <ul>\n *     <li>duration, repeatMode, fillBefore, fillAfter: These properties, when set\n *     on an AnimationSet object, will be pushed down to all child animations.</li>\n *     <li>repeatCount, fillEnabled: These properties are ignored for AnimationSet.</li>\n *     <li>startOffset, shareInterpolator: These properties apply to the AnimationSet itself.</li>\n * </ul>\n * Starting with {@link android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH},\n * the behavior of these properties is the same in XML resources and at runtime (prior to that\n * release, the values set in XML were ignored for AnimationSet). That is, calling\n * <code>setDuration(500)</code> on an AnimationSet has the same effect as declaring\n * <code>android:duration=\"500\"</code> in an XML resource for an AnimationSet object.</p>\n ",
  "links" : [ "android.os.Build.VERSION_CODES#ICE_CREAM_SANDWICH" ],
  "variables" : [ {
    "name" : "PROPERTY_FILL_AFTER_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_FILL_BEFORE_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_REPEAT_MODE_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_START_OFFSET_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_SHARE_INTERPOLATOR_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_DURATION_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_MORPH_MATRIX_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPERTY_CHANGE_BOUNDS_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDirty",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasAlpha",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimations",
    "type" : "ArrayList<Animation>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTempTransformation",
    "type" : "Transformation",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastEnd",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStoredOffsets",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected AnimationSet clone() throws CloneNotSupportedException",
    "returnType" : "AnimationSet",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setFlag(int mask, boolean value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void init()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFillAfter(boolean fillAfter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFillBefore(boolean fillBefore)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRepeatMode(int repeatMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setStartOffset(long startOffset)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasAlpha()",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDuration(long durationMillis)",
    "returnType" : "void",
    "comment" : "\n     * <p>Sets the duration of every child animation.</p>\n     *\n     * @param durationMillis the duration of the animation, in milliseconds, for\n     *        every child in this set\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addAnimation(Animation a)",
    "returnType" : "void",
    "comment" : "\n     * Add a child animation to this animation set.\n     * The transforms of the child animations are applied in the order\n     * that they were added\n     * @param a Animation to add.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setStartTime(long startTimeMillis)",
    "returnType" : "void",
    "comment" : "\n     * Sets the start time of this animation and all child animations\n     *\n     * @see android.view.animation.Animation#setStartTime(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getStartTime()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void restrictDuration(long durationMillis)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getDuration()",
    "returnType" : "long",
    "comment" : "\n     * The duration of an AnimationSet is defined to be the\n     * duration of the longest child animation.\n     *\n     * @see android.view.animation.Animation#getDuration()\n     ",
    "links" : [ ]
  }, {
    "name" : "public long computeDurationHint()",
    "returnType" : "long",
    "comment" : "\n     * The duration hint of an animation set is the maximum of the duration\n     * hints of all of its component animations.\n     *\n     * @see android.view.animation.Animation#computeDurationHint\n     ",
    "links" : [ ]
  }, {
    "name" : "public void initializeInvalidateRegion(int left, int top, int right, int bottom)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void getTransformationAt(float interpolatedTime, Transformation t)",
    "returnType" : "void",
    "comment" : "\n     * The transformation of an animation set is the concatenation of all of its\n     * component animations.\n     *\n     * @see android.view.animation.Animation#getTransformationAt\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getTransformation(long currentTime, Transformation t)",
    "returnType" : "boolean",
    "comment" : "\n     * The transformation of an animation set is the concatenation of all of its\n     * component animations.\n     *\n     * @see android.view.animation.Animation#getTransformation\n     ",
    "links" : [ ]
  }, {
    "name" : "public void scaleCurrentDuration(float scale)",
    "returnType" : "void",
    "comment" : "\n     * @see android.view.animation.Animation#scaleCurrentDuration(float)\n     ",
    "links" : [ ]
  }, {
    "name" : "public void initialize(int width, int height, int parentWidth, int parentHeight)",
    "returnType" : "void",
    "comment" : "\n     * @see android.view.animation.Animation#initialize(int, int, int, int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void restoreChildrenStartOffset()",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<Animation> getAnimations()",
    "returnType" : "List<Animation>",
    "comment" : "\n     * @return All the child animations in this AnimationSet. Note that\n     * this may include other AnimationSets, which are not expanded.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean willChangeTransformationMatrix()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean willChangeBounds()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasExtension()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected AnimationSet clone() throws CloneNotSupportedException", "private void setFlag(int mask, boolean value)", "private void init()", "public void setFillAfter(boolean fillAfter)", "public void setFillBefore(boolean fillBefore)", "public void setRepeatMode(int repeatMode)", "public void setStartOffset(long startOffset)", "public boolean hasAlpha()", "public void setDuration(long durationMillis)", "public void addAnimation(Animation a)", "public void setStartTime(long startTimeMillis)", "public long getStartTime()", "public void restrictDuration(long durationMillis)", "public long getDuration()", "public long computeDurationHint()", "public void initializeInvalidateRegion(int left, int top, int right, int bottom)", "public void getTransformationAt(float interpolatedTime, Transformation t)", "public boolean getTransformation(long currentTime, Transformation t)", "public void scaleCurrentDuration(float scale)", "public void initialize(int width, int height, int parentWidth, int parentHeight)", "public void reset()", " void restoreChildrenStartOffset()", "public List<Animation> getAnimations()", "public boolean willChangeTransformationMatrix()", "public boolean willChangeBounds()", "public boolean hasExtension()" ],
  "variableNames" : [ "PROPERTY_FILL_AFTER_MASK", "PROPERTY_FILL_BEFORE_MASK", "PROPERTY_REPEAT_MODE_MASK", "PROPERTY_START_OFFSET_MASK", "PROPERTY_SHARE_INTERPOLATOR_MASK", "PROPERTY_DURATION_MASK", "PROPERTY_MORPH_MATRIX_MASK", "PROPERTY_CHANGE_BOUNDS_MASK", "mFlags", "mDirty", "mHasAlpha", "mAnimations", "mTempTransformation", "mLastEnd", "mStoredOffsets" ]
}