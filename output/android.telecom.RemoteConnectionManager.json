{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/RemoteConnectionManager.java",
  "packageName" : "android.telecom",
  "className" : "RemoteConnectionManager",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mRemoteConnectionServices",
    "type" : "Map<ComponentName, RemoteConnectionService>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOurConnectionServiceImpl",
    "type" : "ConnectionService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void addConnectionService(ComponentName componentName, IConnectionService outgoingConnectionServiceRpc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RemoteConnection createRemoteConnection(PhoneAccountHandle connectionManagerPhoneAccount, ConnectionRequest request, boolean isIncoming)",
    "returnType" : "RemoteConnection",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RemoteConference createRemoteConference(PhoneAccountHandle connectionManagerPhoneAccount, ConnectionRequest request, boolean isIncoming)",
    "returnType" : "RemoteConference",
    "comment" : "\n     * Ask a {@code RemoteConnectionService} to create a {@code RemoteConference}.\n     * @param connectionManagerPhoneAccount See description at\n     * {@link ConnectionService#onCreateOutgoingConnection(PhoneAccountHandle, ConnectionRequest)}.\n     * @param request Details about the incoming conference call.\n     * @param isIncoming {@code true} if it's an incoming conference.\n     * @return\n     ",
    "links" : [ "com.android.internal.telecom.IConnectionService#onCreateOutgoingConnection(PhoneAccountHandle" ]
  }, {
    "name" : "public void conferenceRemoteConnections(RemoteConnection a, RemoteConnection b)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " void addConnectionService(ComponentName componentName, IConnectionService outgoingConnectionServiceRpc)", "public RemoteConnection createRemoteConnection(PhoneAccountHandle connectionManagerPhoneAccount, ConnectionRequest request, boolean isIncoming)", "public RemoteConference createRemoteConference(PhoneAccountHandle connectionManagerPhoneAccount, ConnectionRequest request, boolean isIncoming)", "public void conferenceRemoteConnections(RemoteConnection a, RemoteConnection b)" ],
  "variableNames" : [ "mRemoteConnectionServices", "mOurConnectionServiceImpl" ]
}