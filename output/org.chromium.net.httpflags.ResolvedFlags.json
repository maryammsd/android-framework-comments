{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/httpflags/ResolvedFlags.java",
  "packageName" : "org.chromium.net.httpflags",
  "className" : "ResolvedFlags",
  "comment" : "\n * Holds the effective HTTP flags that apply to a given instance of the Cronet library.\n *\n * <p>Cronet business logic code is expected to use this class to enquire about the HTTP flag values\n * that it should use.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mFlags",
    "type" : "Map<String, Value>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static ResolvedFlags resolve(Flags flags, String appId, String cronetVersion)",
    "returnType" : "ResolvedFlags",
    "comment" : "\n     * Computes effective flag values based on the contents of a {@link Flags} proto.\n     *\n     * <p>This method will resolve {@link FlagValue.ConstrainedValue} filters according to the\n     * other arguments, producing the final values that should apply to the caller.\n     *\n     * <p>Note that a {@link FlagValue} that has no {@link FlagValue.ConstrainedValue} entry, or\n     * where the matching entry has no value set, will not be mentioned at all in the resulting\n     * {@link #flags}.\n     *\n     * @param flags The {@link Flags} proto to extract the flag values from. This would normally be\n     *              the return value of {@link HttpFlagsLoader#load}.\n     * @param appId The App ID for resolving the {@link FlagValue.ConstrainedValue#getAppId} field.\n     *              This would normally be the return value of\n     *              {@link android.content.Context#getPackageName}.\n     * @param cronetVersion The version to use for filtering against the {@link\n     *                      FlagValue.ConstrainedValue#getMinVersion} field.\n     ",
    "links" : [ "org.chromium.net.httpflags.HttpFlagsLoader#load", "FlagValue.ConstrainedValue#getMinVersion", "FlagValue.ConstrainedValue", "Flags", "FlagValue", "FlagValue.ConstrainedValue#getAppId", "#flags", "android.content.Context#getPackageName" ]
  }, {
    "name" : "public Map<String, Value> flags()",
    "returnType" : "Map<String, Value>",
    "comment" : "\n     * @return The effective HTTP flag values, keyed by flag name. Neither keys nor values can be\n     * null. Only flags that have actual values are included in the result.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int[] parseVersionString(String versionString)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static ResolvedFlags resolve(Flags flags, String appId, String cronetVersion)", "public Map<String, Value> flags()", "private static int[] parseVersionString(String versionString)" ],
  "variableNames" : [ "mFlags" ]
}