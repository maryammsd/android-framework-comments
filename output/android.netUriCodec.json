{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/UriCodec.java",
  "packageName" : "android.net",
  "className" : "UriCodec",
  "comment" : "\n * Decodes “application/x-www-form-urlencoded” content.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "INVALID_INPUT_CHARACTER",
    "type" : "char",
    "comment" : "\n     * Character to be output when there's an error decoding an input.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static int hexCharToValue(char c)",
    "returnType" : "int",
    "comment" : "\n     * Interprets a char as hex digits, returning a number from -1 (invalid char) to 15 ('f').\n     ",
    "links" : [ ]
  }, {
    "name" : "private static URISyntaxException unexpectedCharacterException(String uri, String name, char unexpected, int index)",
    "returnType" : "URISyntaxException",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static char getNextCharacter(String uri, int index, int end, String name) throws URISyntaxException",
    "returnType" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String decode(String s, boolean convertPlus, Charset charset, boolean throwOnFailure)",
    "returnType" : "String",
    "comment" : "\n     * Decode a string according to the rules of this decoder.\n     *\n     * - if {@code convertPlus == true} all ‘+’ chars in the decoded output are converted to ‘ ‘\n     *   (white space)\n     * - if {@code throwOnFailure == true}, an {@link IllegalArgumentException} is thrown for\n     *   invalid inputs. Else, U+FFFd is emitted to the output in place of invalid input octets.\n     ",
    "links" : [ "IllegalArgumentException" ]
  }, {
    "name" : "private static void appendDecoded(StringBuilder builder, String s, boolean convertPlus, Charset charset, boolean throwOnFailure)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void flushDecodingByteAccumulator(StringBuilder builder, CharsetDecoder decoder, ByteBuffer byteBuffer, boolean throwOnFailure)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "INVALID_INPUT_CHARACTER" ],
  "methodNames" : [ "private static int hexCharToValue(char c)", "private static URISyntaxException unexpectedCharacterException(String uri, String name, char unexpected, int index)", "private static char getNextCharacter(String uri, int index, int end, String name) throws URISyntaxException", "public static String decode(String s, boolean convertPlus, Charset charset, boolean throwOnFailure)", "private static void appendDecoded(StringBuilder builder, String s, boolean convertPlus, Charset charset, boolean throwOnFailure)", "private static void flushDecodingByteAccumulator(StringBuilder builder, CharsetDecoder decoder, ByteBuffer byteBuffer, boolean throwOnFailure)" ]
}