{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/ContextMenu.java",
  "packageName" : "android.view",
  "className" : "ContextMenu",
  "comment" : "\n * Extension of {@link Menu} for context menus providing functionality to modify\n * the header of the context menu.\n * <p>\n * Context menus do not support item shortcuts and item icons.\n * <p>\n * To show a context menu on long click, most clients will want to call\n * {@link Activity#registerForContextMenu} and override\n * {@link Activity#onCreateContextMenu}.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For information about creating menus, read the\n * <a href=\"{@docRoot}guide/topics/ui/menus.html\">Menus</a> developer guide.</p>\n * </div>\n ",
  "links" : [ "android.app.Activity#registerForContextMenu", "android.app.Activity#onCreateContextMenu", "android.view.Menu" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public ContextMenu setHeaderTitle(@StringRes int titleRes)",
    "returnType" : "ContextMenu",
    "comment" : "\n     * Sets the context menu header's title to the title given in <var>titleRes</var>\n     * resource identifier.\n     * \n     * @param titleRes The string resource identifier used for the title.\n     * @return This ContextMenu so additional setters can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ContextMenu setHeaderTitle(CharSequence title)",
    "returnType" : "ContextMenu",
    "comment" : "\n     * Sets the context menu header's title to the title given in <var>title</var>.\n     * \n     * @param title The character sequence used for the title.\n     * @return This ContextMenu so additional setters can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ContextMenu setHeaderIcon(@DrawableRes int iconRes)",
    "returnType" : "ContextMenu",
    "comment" : "\n     * Sets the context menu header's icon to the icon given in <var>iconRes</var>\n     * resource id.\n     * \n     * @param iconRes The resource identifier used for the icon.\n     * @return This ContextMenu so additional setters can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ContextMenu setHeaderIcon(Drawable icon)",
    "returnType" : "ContextMenu",
    "comment" : "\n     * Sets the context menu header's icon to the icon given in <var>icon</var>\n     * {@link Drawable}.\n     * \n     * @param icon The {@link Drawable} used for the icon.\n     * @return This ContextMenu so additional setters can be called.\n     ",
    "links" : [ "android.graphics.drawable.Drawable" ]
  }, {
    "name" : "public ContextMenu setHeaderView(View view)",
    "returnType" : "ContextMenu",
    "comment" : "\n     * Sets the header of the context menu to the {@link View} given in\n     * <var>view</var>. This replaces the header title and icon (and those\n     * replace this).\n     * \n     * @param view The {@link View} used for the header.\n     * @return This ContextMenu so additional setters can be called.\n     ",
    "links" : [ "android.widget.AdapterView" ]
  }, {
    "name" : "public void clearHeader()",
    "returnType" : "void",
    "comment" : "\n     * Clears the header of the context menu.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ContextMenu setHeaderTitle(@StringRes int titleRes)", "public ContextMenu setHeaderTitle(CharSequence title)", "public ContextMenu setHeaderIcon(@DrawableRes int iconRes)", "public ContextMenu setHeaderIcon(Drawable icon)", "public ContextMenu setHeaderView(View view)", "public void clearHeader()" ],
  "variableNames" : [ ]
}