{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/PathIterator.java",
  "packageName" : "android.graphics",
  "className" : "Segment",
  "comment" : "\n     * This class holds the data for a given segment in a path, as returned by\n     * {@link #next()}.\n     ",
  "links" : [ "#next()" ],
  "variables" : [ {
    "name" : "mVerb",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPoints",
    "type" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConicWeight",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getVerb()",
    "returnType" : "int",
    "comment" : "\n         * The operation for this segment.\n         *\n         * @return the verb which indicates the operation happening in this segment\n         ",
    "links" : [ ]
  }, {
    "name" : "public float[] getPoints()",
    "returnType" : "float[]",
    "comment" : "\n         * The point data for this segment.\n         *\n         * Each two floats represent the data for a single point of that operation.\n         * The number of pairs of floats supplied in the resulting array depends on the verb:\n         * <ul>\n         * <li>{@link #VERB_MOVE}: 1 pair (indices 0 to 1)</li>\n         * <li>{@link #VERB_LINE}: 2 pairs (indices 0 to 3)</li>\n         * <li>{@link #VERB_QUAD}: 3 pairs (indices 0 to 5)</li>\n         * <li>{@link #VERB_CONIC}: 4 pairs (indices 0 to 7), the last pair contains the\n         * conic weight twice</li>\n         * <li>{@link #VERB_CUBIC}: 4 pairs (indices 0 to 7)</li>\n         * <li>{@link #VERB_CLOSE}: 0 pairs</li>\n         * <li>{@link #VERB_DONE}: 0 pairs</li>\n         * </ul>\n         * @return the point data for this segment\n         ",
    "links" : [ "#VERB_CONIC", "#VERB_CLOSE", "#VERB_LINE", "#VERB_MOVE", "#VERB_QUAD", "#VERB_DONE", "#VERB_CUBIC" ]
  }, {
    "name" : "public float getConicWeight()",
    "returnType" : "float",
    "comment" : "\n         * The weight for the conic operation in this segment. If the verb in this segment\n         * is not equal to {@link #VERB_CONIC}, the weight value is undefined.\n         *\n         * @see Path#conicTo(float, float, float, float, float)\n         * @return the weight for the conic operation in this segment, if any\n         ",
    "links" : [ "#VERB_CONIC" ]
  } ],
  "methodNames" : [ "public int getVerb()", "public float[] getPoints()", "public float getConicWeight()" ],
  "variableNames" : [ "mVerb", "mPoints", "mConicWeight" ]
}