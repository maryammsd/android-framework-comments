{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/Spliterator.java",
  "packageName" : "java.util",
  "className" : "OfInt",
  "comment" : "\n     * A Spliterator specialized for {@code int} values.\n     * @since 1.8\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " OfInt trySplit()",
    "returnType" : "OfInt",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean tryAdvance(IntConsumer action)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void forEachRemaining(IntConsumer action)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean tryAdvance(Consumer<? super Integer> action)",
    "returnType" : "boolean",
    "comment" : "\n         * {@inheritDoc}\n         * @implSpec\n         * If the action is an instance of {@code IntConsumer} then it is cast\n         * to {@code IntConsumer} and passed to\n         * {@link #tryAdvance(java.util.function.IntConsumer)}; otherwise\n         * the action is adapted to an instance of {@code IntConsumer}, by\n         * boxing the argument of {@code IntConsumer}, and then passed to\n         * {@link #tryAdvance(java.util.function.IntConsumer)}.\n         ",
    "links" : [ "#tryAdvance(java.util.function.IntConsumer)" ]
  }, {
    "name" : " void forEachRemaining(Consumer<? super Integer> action)",
    "returnType" : "void",
    "comment" : "\n         * {@inheritDoc}\n         * @implSpec\n         * If the action is an instance of {@code IntConsumer} then it is cast\n         * to {@code IntConsumer} and passed to\n         * {@link #forEachRemaining(java.util.function.IntConsumer)}; otherwise\n         * the action is adapted to an instance of {@code IntConsumer}, by\n         * boxing the argument of {@code IntConsumer}, and then passed to\n         * {@link #forEachRemaining(java.util.function.IntConsumer)}.\n         ",
    "links" : [ "#forEachRemaining(java.util.function.IntConsumer)" ]
  } ],
  "methodNames" : [ " OfInt trySplit()", " boolean tryAdvance(IntConsumer action)", " void forEachRemaining(IntConsumer action)", " boolean tryAdvance(Consumer<? super Integer> action)", " void forEachRemaining(Consumer<? super Integer> action)" ],
  "variableNames" : [ ]
}