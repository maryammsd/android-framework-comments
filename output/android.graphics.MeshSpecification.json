{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/MeshSpecification.java",
  "packageName" : "android.graphics",
  "className" : "MeshSpecification",
  "comment" : "\n * Class responsible for holding specifications for {@link Mesh} creations. This class generates a\n * {@link MeshSpecification} via the\n * {@link MeshSpecification#make(Attribute[], int, Varying[], String, String)} method,\n * where multiple parameters to set up the mesh are supplied, including attributes, vertex stride,\n * {@link Varying}, and vertex/fragment shaders. There are also additional methods to provide an\n * optional {@link ColorSpace} as well as an alpha type.\n *\n * For example a vertex shader that leverages a {@link Varying} may look like the following:\n *\n * <pre>\n *        Varyings main(const Attributes attributes) {\n *             Varyings varyings;\n *             varyings.position = attributes.position;\n *             return varyings;\n *        }\n * </pre>\n *\n * The corresponding fragment shader that may consume the varying look like the following:\n *\n * <pre>\n *      float2 main(const Varyings varyings, out float4 color) {\n *             color = vec4(1.0, 0.0, 0.0, 1.0);\n *             return varyings.position;\n *      }\n * </pre>\n *\n * The color returned from this fragment shader is blended with the other parameters that are\n * configured on the Paint object (ex. {@link Paint#setBlendMode(BlendMode)} used to draw the mesh.\n *\n * The position returned in the fragment shader can be consumed by any following fragment shaders in\n * the shader chain.\n *\n * See https://developer.android.com/develop/ui/views/graphics/agsl for more information\n * regarding Android Graphics Shader Language.\n *\n * Note that there are several limitations on various mesh specifications:\n * 1. The max amount of attributes allowed is 8.\n * 2. The offset alignment length is 4 bytes.\n * 2. The max stride length is 1024.\n * 3. The max amount of varyings is 6.\n *\n * These should be kept in mind when generating a mesh specification, as exceeding them will\n * lead to errors.\n ",
  "links" : [ "android.graphics.MeshSpecification#make(Attribute", "android.graphics.Mesh", "android.graphics.MeshSpecification", "android.graphics.Paint#setBlendMode(BlendMode)", "android.graphics.ColorSpace", "Varying" ],
  "variables" : [ {
    "name" : "mNativeMeshSpec",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ALPHA_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * uninitialized.\n     ",
    "links" : [ ]
  }, {
    "name" : "ALPHA_TYPE_OPAQUE",
    "type" : "int",
    "comment" : "\n     * Pixel is opaque.\n     ",
    "links" : [ ]
  }, {
    "name" : "ALPHA_TYPE_PREMULTIPLIED",
    "type" : "int",
    "comment" : "\n     * Pixel components are premultiplied by alpha.\n     ",
    "links" : [ ]
  }, {
    "name" : "ALPHA_TYPE_UNPREMULTIPLIED",
    "type" : "int",
    "comment" : "\n     * Pixel components are independent of alpha.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_FLOAT",
    "type" : "int",
    "comment" : "\n     * Represents one float. Its equivalent shader type is float.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_FLOAT2",
    "type" : "int",
    "comment" : "\n     * Represents two floats. Its equivalent shader type is float2.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_FLOAT3",
    "type" : "int",
    "comment" : "\n     * Represents three floats. Its equivalent shader type is float3.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_FLOAT4",
    "type" : "int",
    "comment" : "\n     * Represents four floats. Its equivalent shader type is float4.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_UBYTE4",
    "type" : "int",
    "comment" : "\n     * Represents four bytes. Its equivalent shader type is half4.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static MeshSpecification make(@SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 8) Attribute[] attributes, @IntRange(from = 1, to = 1024) int vertexStride, @SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 6) Varying[] varyings, @NonNull String vertexShader, @NonNull String fragmentShader)",
    "returnType" : "MeshSpecification",
    "comment" : "\n     * Creates a {@link MeshSpecification} object for use within {@link Mesh}. This uses a default\n     * color space of {@link ColorSpace.Named#SRGB} and alphaType of\n     * {@link #ALPHA_TYPE_PREMULTIPLIED}.\n     *\n     * @param attributes     list of attributes represented by {@link Attribute}. Can hold a max of\n     *                       8.\n     * @param vertexStride   length of vertex stride in bytes. This should be the size of a single\n     *                       vertex' attributes. Max of 1024 is accepted.\n     * @param varyings       List of varyings represented by {@link Varying}. Can hold a max of 6.\n     *                       Note that `position` is provided by default, does not need to be\n     *                       provided in the list, and does not count towards\n     *                       the 6 varyings allowed.\n     * @param vertexShader   vertex shader to be supplied to the mesh. Ensure that the position\n     *                       varying is set within the shader to get proper results.\n     *                       See {@link MeshSpecification} for an example vertex shader\n     *                       implementation\n     * @param fragmentShader fragment shader to be supplied to the mesh.\n     *                       See {@link MeshSpecification} for an example fragment shader\n     *                       implementation\n     * @return {@link MeshSpecification} object for use when creating {@link Mesh}\n     ",
    "links" : [ "Attribute", "android.graphics.MeshSpecification", "android.graphics.Mesh", "#ALPHA_TYPE_PREMULTIPLIED", "ColorSpace.Named#SRGB", "Varying" ]
  }, {
    "name" : "public static MeshSpecification make(@SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 8) Attribute[] attributes, @IntRange(from = 1, to = 1024) int vertexStride, @SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 6) Varying[] varyings, @NonNull String vertexShader, @NonNull String fragmentShader, @NonNull ColorSpace colorSpace)",
    "returnType" : "MeshSpecification",
    "comment" : "\n     * Creates a {@link MeshSpecification} object.  This uses a default alphaType of\n     * {@link #ALPHA_TYPE_PREMULTIPLIED}.\n     *\n     * @param attributes     list of attributes represented by {@link Attribute}. Can hold a max of\n     *                       8.\n     * @param vertexStride   length of vertex stride in bytes. This should be the size of a single\n     *                       vertex' attributes. Max of 1024 is accepted.\n     * @param varyings       List of varyings represented by {@link Varying}. Can hold a max of 6.\n     *                       Note that `position` is provided by default, does not need to be\n     *                       provided in the list, and does not count towards\n     *                       the 6 varyings allowed.\n     * @param vertexShader   vertex shader to be supplied to the mesh. Ensure that the position\n     *                       varying is set within the shader to get proper results.\n     *                       See {@link MeshSpecification} for an example vertex shader\n     *                       implementation\n     * @param fragmentShader fragment shader to be supplied to the mesh.\n     *                       See {@link MeshSpecification} for an example fragment shader\n     *                       implementation\n     * @param colorSpace     {@link ColorSpace} to tell what color space to work in.\n     * @return {@link MeshSpecification} object for use when creating {@link Mesh}\n     ",
    "links" : [ "Attribute", "android.graphics.MeshSpecification", "android.graphics.Mesh", "#ALPHA_TYPE_PREMULTIPLIED", "android.graphics.ColorSpace", "Varying" ]
  }, {
    "name" : "public static MeshSpecification make(@SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 8) Attribute[] attributes, @IntRange(from = 1, to = 1024) int vertexStride, @SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 6) Varying[] varyings, @NonNull String vertexShader, @NonNull String fragmentShader, @NonNull ColorSpace colorSpace, @AlphaType int alphaType)",
    "returnType" : "MeshSpecification",
    "comment" : "\n     * Creates a {@link MeshSpecification} object.\n     *\n     * @param attributes     list of attributes represented by {@link Attribute}. Can hold a max of\n     *                       8.\n     * @param vertexStride   length of vertex stride in bytes. This should be the size of a single\n     *                       vertex' attributes. Max of 1024 is accepted.\n     * @param varyings       List of varyings represented by {@link Varying}. Can hold a max of 6.\n     *                       Note that `position` is provided by default, does not need to be\n     *                       provided in the list, and does not count towards\n     *                       the 6 varyings allowed.\n     * @param vertexShader   vertex shader to be supplied to the mesh. Ensure that the position\n     *                       varying is set within the shader to get proper results.\n     *                       See {@link MeshSpecification} for an example vertex shader\n     *                       implementation\n     * @param fragmentShader fragment shader to be supplied to the mesh.\n     *                       See {@link MeshSpecification} for an example fragment shader\n     *                       implementation\n     * @param colorSpace     {@link ColorSpace} to tell what color space to work in.\n     * @param alphaType      Describes how to interpret the alpha component for a pixel. Must be\n     *                       one of\n     *                       {@link MeshSpecification#ALPHA_TYPE_UNKNOWN},\n     *                       {@link MeshSpecification#ALPHA_TYPE_OPAQUE},\n     *                       {@link MeshSpecification#ALPHA_TYPE_PREMULTIPLIED}, or\n     *                       {@link MeshSpecification#ALPHA_TYPE_UNPREMULTIPLIED}\n     * @return {@link MeshSpecification} object for use when creating {@link Mesh}\n     ",
    "links" : [ "android.graphics.MeshSpecification#ALPHA_TYPE_UNKNOWN", "Attribute", "android.graphics.MeshSpecification", "android.graphics.Mesh", "android.graphics.ColorSpace", "android.graphics.MeshSpecification#ALPHA_TYPE_OPAQUE", "android.graphics.MeshSpecification#ALPHA_TYPE_UNPREMULTIPLIED", "android.graphics.MeshSpecification#ALPHA_TYPE_PREMULTIPLIED", "Varying" ]
  }, {
    "name" : "private static native long nativeGetFinalizer()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nativeMake(Attribute[] attributes, int vertexStride, Varying[] varyings, String vertexShader, String fragmentShader)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nativeMakeWithCS(Attribute[] attributes, int vertexStride, Varying[] varyings, String vertexShader, String fragmentShader, long colorSpace)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nativeMakeWithAlpha(Attribute[] attributes, int vertexStride, Varying[] varyings, String vertexShader, String fragmentShader, long colorSpace, int alphaType)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static MeshSpecification make(@SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 8) Attribute[] attributes, @IntRange(from = 1, to = 1024) int vertexStride, @SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 6) Varying[] varyings, @NonNull String vertexShader, @NonNull String fragmentShader)", "public static MeshSpecification make(@SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 8) Attribute[] attributes, @IntRange(from = 1, to = 1024) int vertexStride, @SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 6) Varying[] varyings, @NonNull String vertexShader, @NonNull String fragmentShader, @NonNull ColorSpace colorSpace)", "public static MeshSpecification make(@SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 8) Attribute[] attributes, @IntRange(from = 1, to = 1024) int vertexStride, @SuppressLint(\"ArrayReturn\") @NonNull @Size(max = 6) Varying[] varyings, @NonNull String vertexShader, @NonNull String fragmentShader, @NonNull ColorSpace colorSpace, @AlphaType int alphaType)", "private static native long nativeGetFinalizer()", "private static native long nativeMake(Attribute[] attributes, int vertexStride, Varying[] varyings, String vertexShader, String fragmentShader)", "private static native long nativeMakeWithCS(Attribute[] attributes, int vertexStride, Varying[] varyings, String vertexShader, String fragmentShader, long colorSpace)", "private static native long nativeMakeWithAlpha(Attribute[] attributes, int vertexStride, Varying[] varyings, String vertexShader, String fragmentShader, long colorSpace, int alphaType)" ],
  "variableNames" : [ "mNativeMeshSpec", "ALPHA_TYPE_UNKNOWN", "ALPHA_TYPE_OPAQUE", "ALPHA_TYPE_PREMULTIPLIED", "ALPHA_TYPE_UNPREMULTIPLIED", "TYPE_FLOAT", "TYPE_FLOAT2", "TYPE_FLOAT3", "TYPE_FLOAT4", "TYPE_UBYTE4" ]
}