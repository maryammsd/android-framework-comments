{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/CallerInfoAsyncQuery.java",
  "packageName" : "android.telecom",
  "className" : "CallerInfoAsyncQuery",
  "comment" : "\n * Helper class to make it easier to run asynchronous caller-id lookup queries.\n * @see CallerInfo\n *\n * {@hide}\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EVENT_NEW_QUERY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EVENT_ADD_LISTENER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EVENT_END_OF_QUEUE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EVENT_EMERGENCY_NUMBER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EVENT_VOICEMAIL_NUMBER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EVENT_GET_GEO_DESCRIPTION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "CallerInfoAsyncQueryHandler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ENABLE_UNKNOWN_NUMBER_GEO_DESCRIPTION",
    "type" : "boolean",
    "comment" : " configured on a per-product basis.)",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static ContentResolver getCurrentProfileContentResolver(Context context)",
    "returnType" : "ContentResolver",
    "comment" : "\n     * @return {@link ContentResolver} for the \"current\" user.\n     ",
    "links" : [ "android.content.ContentResolver" ]
  }, {
    "name" : "public static CallerInfoAsyncQuery startQuery(int token, Context context, Uri contactRef, OnQueryCompleteListener listener, Object cookie)",
    "returnType" : "CallerInfoAsyncQuery",
    "comment" : "\n     * Factory method to start query with a Uri query spec\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerInfoAsyncQuery startQuery(int token, Context context, String number, OnQueryCompleteListener listener, Object cookie)",
    "returnType" : "CallerInfoAsyncQuery",
    "comment" : "\n     * Factory method to start the query based on a number.\n     *\n     * Note: if the number contains an \"@\" character we treat it\n     * as a SIP address, and look it up directly in the Data table\n     * rather than using the PhoneLookup table.\n     * TODO: But eventually we should expose two separate methods, one for\n     * numbers and one for SIP addresses, and then have\n     * PhoneUtils.startGetCallerInfo() decide which one to call based on\n     * the phone type of the incoming connection.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerInfoAsyncQuery startQuery(int token, Context context, String number, OnQueryCompleteListener listener, Object cookie, int subId)",
    "returnType" : "CallerInfoAsyncQuery",
    "comment" : "\n     * Factory method to start the query based on a number with specific subscription.\n     *\n     * Note: if the number contains an \"@\" character we treat it\n     * as a SIP address, and look it up directly in the Data table\n     * rather than using the PhoneLookup table.\n     * TODO: But eventually we should expose two separate methods, one for\n     * numbers and one for SIP addresses, and then have\n     * PhoneUtils.startGetCallerInfo() decide which one to call based on\n     * the phone type of the incoming connection.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addQueryListener(int token, OnQueryCompleteListener listener, Object cookie)",
    "returnType" : "void",
    "comment" : "\n     * Method to add listeners to a currently running query\n     ",
    "links" : [ ]
  }, {
    "name" : "private void allocate(Context context, Uri contactRef)",
    "returnType" : "void",
    "comment" : "\n     * Method to create a new CallerInfoAsyncQueryHandler object, ensuring correct\n     * state of context and uri.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void release()",
    "returnType" : "void",
    "comment" : "\n     * Releases the relevant data.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String sanitizeUriToString(Uri uri)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static ContentResolver getCurrentProfileContentResolver(Context context)", "public static CallerInfoAsyncQuery startQuery(int token, Context context, Uri contactRef, OnQueryCompleteListener listener, Object cookie)", "public static CallerInfoAsyncQuery startQuery(int token, Context context, String number, OnQueryCompleteListener listener, Object cookie)", "public static CallerInfoAsyncQuery startQuery(int token, Context context, String number, OnQueryCompleteListener listener, Object cookie, int subId)", "public void addQueryListener(int token, OnQueryCompleteListener listener, Object cookie)", "private void allocate(Context context, Uri contactRef)", "private void release()", "private static String sanitizeUriToString(Uri uri)" ],
  "variableNames" : [ "DBG", "LOG_TAG", "EVENT_NEW_QUERY", "EVENT_ADD_LISTENER", "EVENT_END_OF_QUEUE", "EVENT_EMERGENCY_NUMBER", "EVENT_VOICEMAIL_NUMBER", "EVENT_GET_GEO_DESCRIPTION", "mHandler", "ENABLE_UNKNOWN_NUMBER_GEO_DESCRIPTION" ]
}