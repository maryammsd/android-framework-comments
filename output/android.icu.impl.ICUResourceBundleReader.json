{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/ICUResourceBundleReader.java",
  "packageName" : "android.icu.impl",
  "className" : "ICUResourceBundleReader",
  "comment" : "\n * This class reads the *.res resource bundle format.\n *\n * For the file format documentation see ICU4C's source/common/uresdata.h file.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DATA_FORMAT",
    "type" : "int",
    "comment" : "\n     * File format version that this class understands.\n     * \"ResB\"\n     ",
    "links" : [ ]
  }, {
    "name" : "IS_ACCEPTABLE",
    "type" : "IsAcceptable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "URES_INDEX_LENGTH",
    "type" : "int",
    "comment" : "\n     * [0] contains the length of indexes[]\n     * which is at most URES_INDEX_TOP of the latest format version\n     *\n     * formatVersion==1: all bits contain the length of indexes[]\n     *   but the length is much less than 0xff;\n     * formatVersion>1:\n     *   only bits  7..0 contain the length of indexes[],\n     *        bits 31..8 are reserved and set to 0\n     * formatVersion>=3:\n     *        bits 31..8 poolStringIndexLimit bits 23..0\n     ",
    "links" : [ ]
  }, {
    "name" : "URES_INDEX_KEYS_TOP",
    "type" : "int",
    "comment" : "\n     * [1] contains the top of the key strings,\n     *     same as the bottom of resources or UTF-16 strings, rounded up\n     ",
    "links" : [ ]
  }, {
    "name" : "URES_INDEX_BUNDLE_TOP",
    "type" : "int",
    "comment" : "\n     * [3] contains the top of the bundle,\n     *     in case it were ever different from [2]\n     ",
    "links" : [ ]
  }, {
    "name" : "URES_INDEX_MAX_TABLE_LENGTH",
    "type" : "int",
    "comment" : " [4] max. length of any table ",
    "links" : [ ]
  }, {
    "name" : "URES_INDEX_ATTRIBUTES",
    "type" : "int",
    "comment" : "\n     * [5] attributes bit set, see URES_ATT_* (new in formatVersion 1.2)\n     *\n     * formatVersion>=3:\n     *   bits 31..16 poolStringIndex16Limit\n     *   bits 15..12 poolStringIndexLimit bits 27..24\n     ",
    "links" : [ ]
  }, {
    "name" : "URES_INDEX_16BIT_TOP",
    "type" : "int",
    "comment" : "\n     * [6] top of the 16-bit units (UTF-16 string v2 UChars, URES_TABLE16, URES_ARRAY16),\n     *     rounded up (new in formatVersion 2.0, ICU 4.4)\n     ",
    "links" : [ ]
  }, {
    "name" : "URES_INDEX_POOL_CHECKSUM",
    "type" : "int",
    "comment" : " [7] checksum of the pool bundle (new in formatVersion 2.0, ICU 4.4) ",
    "links" : [ ]
  }, {
    "name" : "URES_ATT_NO_FALLBACK",
    "type" : "int",
    "comment" : "\n     * Nofallback attribute, attribute bit 0 in indexes[URES_INDEX_ATTRIBUTES].\n     * New in formatVersion 1.2 (ICU 3.6).\n     *\n     * If set, then this resource bundle is a standalone bundle.\n     * If not set, then the bundle participates in locale fallback, eventually\n     * all the way to the root bundle.\n     * If indexes[] is missing or too short, then the attribute cannot be determined\n     * reliably. Dependency checking should ignore such bundles, and loading should\n     * use fallbacks.\n     ",
    "links" : [ ]
  }, {
    "name" : "URES_ATT_IS_POOL_BUNDLE",
    "type" : "int",
    "comment" : "\n     * Attributes for bundles that are, or use, a pool bundle.\n     * A pool bundle provides key strings that are shared among several other bundles\n     * to reduce their total size.\n     * New in formatVersion 2 (ICU 4.4).\n     ",
    "links" : [ ]
  }, {
    "name" : "URES_ATT_USES_POOL_BUNDLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMPTY_16_BIT_UNITS",
    "type" : "CharBuffer",
    "comment" : " read-only",
    "links" : [ ]
  }, {
    "name" : "LARGE_SIZE",
    "type" : "int",
    "comment" : "\n     * Objects with more value bytes are stored in SoftReferences.\n     * Smaller objects (which are not much larger than a SoftReference)\n     * are stored directly, avoiding the overhead of the reference.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dataVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "bytes",
    "type" : "ByteBuffer",
    "comment" : "\n     * Buffer of all of the resource bundle bytes after the header.\n     * (equivalent of C++ pRoot)\n     ",
    "links" : [ ]
  }, {
    "name" : "keyBytes",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "b16BitUnits",
    "type" : "CharBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "poolBundleReader",
    "type" : "ICUResourceBundleReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "rootRes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "localKeyLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "poolStringIndexLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "poolStringIndex16Limit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "noFallback",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "isPoolBundle",
    "type" : "boolean",
    "comment" : " see URES_ATT_NO_FALLBACK ",
    "links" : [ ]
  }, {
    "name" : "usesPoolBundle",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "poolCheckSum",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "resourceCache",
    "type" : "ResourceCache",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CACHE",
    "type" : "ReaderCache",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NULL_READER",
    "type" : "ICUResourceBundleReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "emptyBytes",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "emptyByteBuffer",
    "type" : "ByteBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "emptyChars",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "emptyInts",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "emptyString",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMPTY_ARRAY",
    "type" : "Array",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMPTY_TABLE",
    "type" : "Table",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PUBLIC_TYPES",
    "type" : "int[]",
    "comment" : "\n     * From C++ uresdata.c gPublicTypes[URES_LIMIT].\n     ",
    "links" : [ ]
  }, {
    "name" : "ICU_RESOURCE_SUFFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static ICUResourceBundleReader getReader(String baseName, String localeID, ClassLoader root)",
    "returnType" : "ICUResourceBundleReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void init(ByteBuffer inBytes) throws IOException",
    "returnType" : "void",
    "comment" : " See res_init() in ICU4C/source/common/uresdata.c.",
    "links" : [ ]
  }, {
    "name" : "private int getIndexesInt(int i)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " VersionInfo getVersion()",
    "returnType" : "VersionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int getRootResource()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean getNoFallback()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean getUsesPoolBundle()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int RES_GET_TYPE(int res)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int RES_GET_OFFSET(int res)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getResourceByteOffset(int offset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int RES_GET_INT(int res)",
    "returnType" : "int",
    "comment" : " get signed and unsigned integer values directly from the Resource handle ",
    "links" : [ ]
  }, {
    "name" : " static int RES_GET_UINT(int res)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean URES_IS_ARRAY(int type)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean URES_IS_TABLE(int type)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private char[] getChars(int offset, int count)",
    "returnType" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getInt(int offset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int[] getInts(int offset, int count)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private char[] getTable16KeyOffsets(int offset)",
    "returnType" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private char[] getTableKeyOffsets(int offset)",
    "returnType" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int[] getTable32KeyOffsets(int offset)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String makeKeyStringFromBytes(byte[] keyBytes, int keyOffset)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String getKey16String(int keyOffset)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String getKey32String(int keyOffset)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setKeyFromKey16(int keyOffset, UResource.Key key)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setKeyFromKey32(int keyOffset, UResource.Key key)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int compareKeys(CharSequence key, char keyOffset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int compareKeys32(CharSequence key, int keyOffset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String getStringV2(int res)",
    "returnType" : "String",
    "comment" : "\n     * @return a string from the local bundle's b16BitUnits at the local offset\n     ",
    "links" : [ ]
  }, {
    "name" : "private String makeStringFromBytes(int offset, int length)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String getString(int res)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isNoInheritanceMarker(int res)",
    "returnType" : "boolean",
    "comment" : "\n     * CLDR string value \"∅∅∅\"==\"\\u2205\\u2205\\u2205\" prevents fallback to the parent bundle.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean isStringV2NoInheritanceMarker(int offset)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String getAlias(int res)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " byte[] getBinary(int res, byte[] ba)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ByteBuffer getBinary(int res)",
    "returnType" : "ByteBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int[] getIntVector(int res)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Array getArray(int res)",
    "returnType" : "Array",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Table getTable(int res)",
    "returnType" : "Table",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String getFullName(String baseName, String localeName)",
    "returnType" : "String",
    "comment" : "\n     * Gets the full name of the resource with suffix.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static ICUResourceBundleReader getReader(String baseName, String localeID, ClassLoader root)", "private void init(ByteBuffer inBytes) throws IOException", "private int getIndexesInt(int i)", " VersionInfo getVersion()", " int getRootResource()", " boolean getNoFallback()", " boolean getUsesPoolBundle()", " static int RES_GET_TYPE(int res)", "private static int RES_GET_OFFSET(int res)", "private int getResourceByteOffset(int offset)", " static int RES_GET_INT(int res)", " static int RES_GET_UINT(int res)", " static boolean URES_IS_ARRAY(int type)", " static boolean URES_IS_TABLE(int type)", "private char[] getChars(int offset, int count)", "private int getInt(int offset)", "private int[] getInts(int offset, int count)", "private char[] getTable16KeyOffsets(int offset)", "private char[] getTableKeyOffsets(int offset)", "private int[] getTable32KeyOffsets(int offset)", "private static String makeKeyStringFromBytes(byte[] keyBytes, int keyOffset)", "private String getKey16String(int keyOffset)", "private String getKey32String(int keyOffset)", "private void setKeyFromKey16(int keyOffset, UResource.Key key)", "private void setKeyFromKey32(int keyOffset, UResource.Key key)", "private int compareKeys(CharSequence key, char keyOffset)", "private int compareKeys32(CharSequence key, int keyOffset)", " String getStringV2(int res)", "private String makeStringFromBytes(int offset, int length)", " String getString(int res)", "private boolean isNoInheritanceMarker(int res)", "private boolean isStringV2NoInheritanceMarker(int offset)", " String getAlias(int res)", " byte[] getBinary(int res, byte[] ba)", " ByteBuffer getBinary(int res)", " int[] getIntVector(int res)", " Array getArray(int res)", " Table getTable(int res)", "public static String getFullName(String baseName, String localeName)" ],
  "variableNames" : [ "DATA_FORMAT", "IS_ACCEPTABLE", "URES_INDEX_LENGTH", "URES_INDEX_KEYS_TOP", "URES_INDEX_BUNDLE_TOP", "URES_INDEX_MAX_TABLE_LENGTH", "URES_INDEX_ATTRIBUTES", "URES_INDEX_16BIT_TOP", "URES_INDEX_POOL_CHECKSUM", "URES_ATT_NO_FALLBACK", "URES_ATT_IS_POOL_BUNDLE", "URES_ATT_USES_POOL_BUNDLE", "EMPTY_16_BIT_UNITS", "LARGE_SIZE", "DEBUG", "dataVersion", "bytes", "keyBytes", "b16BitUnits", "poolBundleReader", "rootRes", "localKeyLimit", "poolStringIndexLimit", "poolStringIndex16Limit", "noFallback", "isPoolBundle", "usesPoolBundle", "poolCheckSum", "resourceCache", "CACHE", "NULL_READER", "emptyBytes", "emptyByteBuffer", "emptyChars", "emptyInts", "emptyString", "EMPTY_ARRAY", "EMPTY_TABLE", "PUBLIC_TYPES", "ICU_RESOURCE_SUFFIX" ]
}