{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/TaskFragmentCreationParams.java",
  "packageName" : "android.window",
  "className" : "TaskFragmentCreationParams",
  "comment" : "\n * Data object for options to create TaskFragment with.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mOrganizer",
    "type" : "TaskFragmentOrganizerToken",
    "comment" : " The organizer that will organize this TaskFragment. ",
    "links" : [ ]
  }, {
    "name" : "mFragmentToken",
    "type" : "IBinder",
    "comment" : "\n     * Unique token assigned from the client organizer to identify the {@link TaskFragmentInfo} when\n     * a new TaskFragment is created with this option.\n     ",
    "links" : [ "android.window.TaskFragmentInfo" ]
  }, {
    "name" : "mOwnerToken",
    "type" : "IBinder",
    "comment" : "\n     * Activity token used to identify the leaf Task to create the TaskFragment in. It has to belong\n     * to the same app as the root Activity of the target Task.\n     ",
    "links" : [ ]
  }, {
    "name" : "mInitialRelativeBounds",
    "type" : "Rect",
    "comment" : "\n     * The initial relative bounds of the TaskFragment in parent coordinate.\n     * Fills parent if empty.\n     ",
    "links" : [ ]
  }, {
    "name" : "mWindowingMode",
    "type" : "int",
    "comment" : " The initial windowing mode of the TaskFragment. Inherits from parent if not set. ",
    "links" : [ ]
  }, {
    "name" : "mPairedPrimaryFragmentToken",
    "type" : "IBinder",
    "comment" : "\n     * The fragment token of the paired primary TaskFragment.\n     * When it is set, the new TaskFragment will be positioned right above the paired TaskFragment.\n     * Otherwise, the new TaskFragment will be positioned on the top of the Task by default.\n     *\n     * This is different from {@link WindowContainerTransaction#setAdjacentTaskFragments} as we may\n     * set this when the pair of TaskFragments are stacked, while adjacent is only set on the pair\n     * of TaskFragments that are in split.\n     *\n     * This is needed in case we need to launch a placeholder Activity to split below a transparent\n     * always-expand Activity.\n     *\n     * This should not be used with {@link #mPairedActivityToken}.\n     ",
    "links" : [ "android.window.WindowContainerTransaction#setAdjacentTaskFragments", "#mPairedActivityToken" ]
  }, {
    "name" : "mPairedActivityToken",
    "type" : "IBinder",
    "comment" : "\n     * The Activity token to place the new TaskFragment on top of.\n     * When it is set, the new TaskFragment will be positioned right above the target Activity.\n     * Otherwise, the new TaskFragment will be positioned on the top of the Task by default.\n     *\n     * This is needed in case we need to place an Activity into TaskFragment to launch placeholder\n     * below a transparent always-expand Activity, or when there is another Intent being started in\n     * a TaskFragment above.\n     *\n     * This should not be used with {@link #mPairedPrimaryFragmentToken}.\n     ",
    "links" : [ "#mPairedPrimaryFragmentToken" ]
  }, {
    "name" : "mAllowTransitionWhenEmpty",
    "type" : "boolean",
    "comment" : "\n     * If {@code true}, transitions are allowed even if the TaskFragment is empty. If\n     * {@code false}, transitions will wait until the TaskFragment becomes non-empty or other\n     * conditions are met. Default to {@code false}.\n     ",
    "links" : [ ]
  }, {
    "name" : "mOverrideOrientation",
    "type" : "int",
    "comment" : "\n     * The override orientation for the TaskFragment. This is effective only for a system organizer.\n     * The value is ignored otherwise. Default to {@code SCREEN_ORIENTATION_UNSPECIFIED}.\n     *\n     * @see TaskFragmentOrganizer#registerOrganizer(boolean)\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TaskFragmentCreationParams>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public TaskFragmentOrganizerToken getOrganizer()",
    "returnType" : "TaskFragmentOrganizerToken",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public IBinder getFragmentToken()",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public IBinder getOwnerToken()",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Rect getInitialRelativeBounds()",
    "returnType" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getWindowingMode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public IBinder getPairedPrimaryFragmentToken()",
    "returnType" : "IBinder",
    "comment" : "\n     * TODO(b/232476698): remove the hide with adding CTS for this in next release.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public IBinder getPairedActivityToken()",
    "returnType" : "IBinder",
    "comment" : "\n     * TODO(b/232476698): remove the hide with adding CTS for this in next release.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getAllowTransitionWhenEmpty()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getOverrideOrientation()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public TaskFragmentOrganizerToken getOrganizer()", "public IBinder getFragmentToken()", "public IBinder getOwnerToken()", "public Rect getInitialRelativeBounds()", "public int getWindowingMode()", "public IBinder getPairedPrimaryFragmentToken()", "public IBinder getPairedActivityToken()", "public boolean getAllowTransitionWhenEmpty()", "public int getOverrideOrientation()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public int describeContents()" ],
  "variableNames" : [ "mOrganizer", "mFragmentToken", "mOwnerToken", "mInitialRelativeBounds", "mWindowingMode", "mPairedPrimaryFragmentToken", "mPairedActivityToken", "mAllowTransitionWhenEmpty", "mOverrideOrientation", "CREATOR" ]
}