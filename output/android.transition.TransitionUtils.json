{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/transition/TransitionUtils.java",
  "packageName" : "android.transition",
  "className" : "TransitionUtils",
  "comment" : "\n * Static utility methods for Transitions.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MAX_IMAGE_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static Animator mergeAnimators(Animator animator1, Animator animator2)",
    "returnType" : "Animator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static Transition mergeTransitions(Transition... transitions)",
    "returnType" : "Transition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static View copyViewImage(ViewGroup sceneRoot, View view, View parent)",
    "returnType" : "View",
    "comment" : "\n     * Creates a View using the bitmap copy of <code>view</code>. If <code>view</code> is large,\n     * the copy will use a scaled bitmap of the given view.\n     *\n     * @param sceneRoot The ViewGroup in which the view copy will be displayed.\n     * @param view The view to create a copy of.\n     * @param parent The parent of view.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Bitmap createDrawableBitmap(Drawable drawable, View hostView)",
    "returnType" : "Bitmap",
    "comment" : "\n     * Get a copy of bitmap of given drawable, return null if intrinsic size is zero\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Bitmap createViewBitmap(View view, Matrix matrix, RectF bounds, ViewGroup sceneRoot)",
    "returnType" : "Bitmap",
    "comment" : "\n     * Creates a Bitmap of the given view, using the Matrix matrix to transform to the local\n     * coordinates. <code>matrix</code> will be modified during the bitmap creation.\n     *\n     * <p>If the bitmap is large, it will be scaled uniformly down to at most 1MB size.</p>\n     * @param view The view to create a bitmap for.\n     * @param matrix The matrix converting the view local coordinates to the coordinates that\n     *               the bitmap will be displayed in. <code>matrix</code> will be modified before\n     *               returning.\n     * @param bounds The bounds of the bitmap in the destination coordinate system (where the\n     *               view should be presented. Typically, this is matrix.mapRect(viewBounds);\n     * @param sceneRoot A ViewGroup that is attached to the window to temporarily contain the view\n     *                  if it isn't attached to the window.\n     * @return A bitmap of the given view or null if bounds has no width or height.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static Animator mergeAnimators(Animator animator1, Animator animator2)", "public static Transition mergeTransitions(Transition... transitions)", "public static View copyViewImage(ViewGroup sceneRoot, View view, View parent)", "public static Bitmap createDrawableBitmap(Drawable drawable, View hostView)", "public static Bitmap createViewBitmap(View view, Matrix matrix, RectF bounds, ViewGroup sceneRoot)" ],
  "variableNames" : [ "MAX_IMAGE_SIZE" ]
}