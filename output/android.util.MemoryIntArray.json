{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/MemoryIntArray.java",
  "packageName" : "android.util",
  "className" : "MemoryIntArray",
  "comment" : "\n * This class is an array of integers that is backed by shared memory.\n * It is useful for efficiently sharing state between processes. The\n * write and read operations are guaranteed to not result in read/\n * write memory tear, i.e. they are atomic. However, multiple read/\n * write operations are <strong>not</strong> synchronized between\n * each other.\n * <p>\n * The data structure is designed to have one owner process that can\n * read/write. There may be multiple client processes that can only read.\n * The owner process is the process that created the array. The shared\n * memory is pinned (not reclaimed by the system) until the owning process\n * dies or the data structure is closed. This class is <strong>not</strong>\n * thread safe. You should not interact with an instance of this class\n * once it is closed. If you pass back to the owner process an instance\n * it will be read only even in the owning process.\n * </p>\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCloseGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsOwner",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMemoryAddr",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFd",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<MemoryIntArray>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isWritable()",
    "returnType" : "boolean",
    "comment" : "\n     * @return Gets whether this array is mutable.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int get(int index) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Gets the value at a given index.\n     *\n     * @param index The index.\n     * @return The value at this index.\n     * @throws IOException If an error occurs while accessing the shared memory.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void set(int index, int value) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Sets the value at a given index. This method can be called only if\n     * {@link #isWritable()} returns true which means your process is the\n     * owner.\n     *\n     * @param index The index.\n     * @param value The value to set.\n     * @throws IOException If an error occurs while accessing the shared memory.\n     ",
    "links" : [ "#isWritable()" ]
  }, {
    "name" : "public int size() throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Gets the array size.\n     *\n     * @throws IOException If an error occurs while accessing the shared memory.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Closes the array releasing resources.\n     *\n     * @throws IOException If an error occurs while accessing the shared memory.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isClosed()",
    "returnType" : "boolean",
    "comment" : "\n     * @return Whether this array is closed and shouldn't be used.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void enforceNotClosed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void enforceValidIndex(int index) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void enforceWritable()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeCreate(String name, int size)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native long nativeOpen(int fd, boolean owner)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native void nativeClose(int fd, long memoryAddr, boolean owner)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeGet(int fd, long memoryAddr, int index)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native void nativeSet(int fd, long memoryAddr, int index, int value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int nativeSize(int fd)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int getMaxSize()",
    "returnType" : "int",
    "comment" : "\n     * @return The max array size.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "MAX_SIZE", "mCloseGuard", "mIsOwner", "mMemoryAddr", "mFd", "CREATOR" ],
  "methodNames" : [ "public boolean isWritable()", "public int get(int index) throws IOException", "public void set(int index, int value) throws IOException", "public int size() throws IOException", "public void close() throws IOException", "public boolean isClosed()", "protected void finalize() throws Throwable", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)", "public boolean equals(Object obj)", "public int hashCode()", "private void enforceNotClosed()", "private void enforceValidIndex(int index) throws IOException", "private void enforceWritable()", "private native int nativeCreate(String name, int size)", "private native long nativeOpen(int fd, boolean owner)", "private native void nativeClose(int fd, long memoryAddr, boolean owner)", "private native int nativeGet(int fd, long memoryAddr, int index)", "private native void nativeSet(int fd, long memoryAddr, int index, int value)", "private native int nativeSize(int fd)", "public static int getMaxSize()" ]
}