{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/CarrierConfigManager.java",
  "packageName" : "android.telephony",
  "className" : "Ims",
  "comment" : "\n     * Configs used by the IMS stack.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "KEY_PREFIX",
    "type" : "String",
    "comment" : " Prefix of all Ims.KEY_* constants. ",
    "links" : [ ]
  }, {
    "name" : "KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INT",
    "type" : "String",
    "comment" : "\n         * Delay in milliseconds to turn off wifi when IMS is registered over wifi.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOL",
    "type" : "String",
    "comment" : "\n         * A boolean flag specifying whether or not this carrier requires one IMS registration for\n         * all IMS services (MMTEL and RCS).\n         * <p>\n         * If set to {@code true}, the IMS Service must use one IMS registration for all IMS\n         * services. If set to {@code false}, IMS services may use separate IMS registrations for\n         * MMTEL and RCS.\n         * <p>\n         * The default value for this configuration is {@code false}.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_ENABLE_PRESENCE_PUBLISH_BOOL",
    "type" : "String",
    "comment" : "\n         * A boolean flag specifying whether or not this carrier supports the device notifying the\n         * network of its RCS capabilities using the SIP PUBLISH procedure defined for User\n         * Capability Exchange (UCE). See RCC.71, section 3 for more information.\n         * <p>\n         * If this key's value is set to false, the procedure for RCS contact capability exchange\n         * via SIP SUBSCRIBE/NOTIFY will also be disabled internally, and this key must also be set\n         * to false to ensure apps do not improperly think that capability exchange via SIP PUBLISH\n         * is enabled.\n         * <p> The default value for this key is {@code false}.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_PUBLISH_SERVICE_DESC_FEATURE_TAG_MAP_OVERRIDE_STRING_ARRAY",
    "type" : "String",
    "comment" : "\n         * Each string in this array contains a mapping between the service-id and version portion\n         * of the service-description element and the associated IMS feature tag(s) that are\n         * associated with each element (see RCC.07 Table 7).\n         * <p>\n         * Each string contains 3 parts, which define the mapping between service-description and\n         * feature tag(s) that must be present in the IMS REGISTER for the RCS service to be\n         * published as part of the RCS PUBLISH procedure:\n         * [service-id]|[version]|[desc]|[feature_tag];[feature_tag];...\n         * <ul>\n         *   <li>[service-id]: the service-id element associated with the RCS capability.</li>\n         *   <li>[version]: The version element associated with that service-id</li>\n         *   <li>[desc]: The optional desecription element associated with that service-id</li>\n         *   <li>[feature_tag];[feature_tag]: The list of all feature tags associated with this\n         *       capability that MUST ALL be present in the IMS registration for this this\n         *       capability to be published to the network.</li>\n         * </ul>\n         * <p>\n         * Features managed by the framework will be considered capable when the ImsService reports\n         * that those services are capable via the\n         * {@link MmTelFeature#notifyCapabilitiesStatusChanged(MmTelFeature.MmTelCapabilities)} or\n         * {@link RcsFeature#notifyCapabilitiesStatusChanged(RcsFeature.RcsImsCapabilities)} APIs.\n         * For RCS services not managed by the framework, the capability of these services are\n         * determined by looking at the feature tags associated with the IMS registration using the\n         * {@link ImsRegistrationAttributes} API and mapping them to the service-description map.\n         * <p>\n         * The framework contains a default value of this key, which is based off of RCC.07\n         * specification. Capabilities based of carrier extensions may be added to this list on a\n         * carrier-by-carrier basis as required in order to support additional services in the\n         * PUBLISH. If this list contains a service-id and version that overlaps with the default,\n         * it will override the framework default.\n         * @hide\n         ",
    "links" : [ "android.telephony.ims.feature.MmTelFeature#notifyCapabilitiesStatusChanged(MmTelFeature.MmTelCapabilities)", "android.telephony.ims.ImsRegistrationAttributes", "android.telephony.ims.feature.RcsFeature#notifyCapabilitiesStatusChanged(RcsFeature.RcsImsCapabilities)" ]
  }, {
    "name" : "KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether or not this carrier supports the exchange of phone numbers with\n         * the carrier's RCS presence server in order to retrieve the RCS capabilities of requested\n         * contacts used in the RCS User Capability Exchange (UCE) procedure. See RCC.71, section 3\n         * for more information.\n         * <p>\n         * When presence is supported, the device uses the SIP SUBSCRIBE/NOTIFY procedure internally\n         * to retrieve the requested RCS capabilities. See\n         * {@link android.telephony.ims.RcsUceAdapter} for more information on how RCS capabilities\n         * can be retrieved from the carrier's network.\n         ",
    "links" : [ "android.telephony.ims.RcsUceAdapter" ]
  }, {
    "name" : "KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether or not the carrier expects the RCS UCE service to periodically\n         * refresh the RCS capabilities cache of the user's contacts as well as request the\n         * capabilities of call contacts when the SIM card is first inserted or when a new contact\n         * is added, removed, or modified. This corresponds to the RCC.07 A.19\n         * \"DISABLE INITIAL ADDRESS BOOK SCAN\" parameter.\n         * <p>\n         * If this flag is disabled, the capabilities cache will not be refreshed internally at all\n         * and will only be updated if the cached capabilities are stale when an application\n         * requests them.\n         *\n         * @see RcsUceAdapter#isUceSettingEnabled() more information about this feature and how\n         * it is enabled by the user.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether or not the carrier supports capability exchange with a list of\n         * contacts. When {@code true}, the device will batch together multiple requests and\n         * construct a RLMI document in the SIP SUBSCRIBE request (see RFC 4662). If {@code false},\n         * the request will be split up into one SIP SUBSCRIBE request per contact.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_SUBSCRIBE_RETRY_DURATION_MILLIS_LONG",
    "type" : "String",
    "comment" : "\n         * SIP SUBSCRIBE retry duration used when device doesn't receive a response to SIP\n         * SUBSCRIBE request.\n         * If this value is not defined or defined as negative value, the device does not retry\n         * the SIP SUBSCRIBE.\n         * If the value is 0 then device retries immediately upon timeout.\n         * If the value is > 0 then device waits for configured duration and retries after timeout\n         * is detected\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether or not to use SIP URI when send a presence subscribe.\n         * When {@code true}, the device sets the To and Contact header to be SIP URI using\n         * the TelephonyManager#getIsimDomain\" API.\n         * If {@code false}, the device uses a TEL URI.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_USE_TEL_URI_FOR_PIDF_XML_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether or not to use TEL URI when setting the entity uri field and\n         * contact element of each tuple.\n         *\n         * When {@code true}, the device sets the entity uri field and contact element to be\n         * TEL URI. This is done by first searching for the first TEL URI provided in\n         * p-associated-uri header. If there are no TEL URIs in the p-associated-uri header, we will\n         * convert the first SIP URI provided in the header to a TEL URI. If there are no URIs in\n         * the p-associated-uri header, we will then fall back to using the SIM card to generate the\n         * TEL URI.\n         * If {@code false}, the first URI provided in the p-associated-uri header is used,\n         * independent of the URI scheme. If there are no URIs available from p-associated-uri\n         * header, we will try to generate a SIP URI or TEL URI from the information provided by the\n         * SIM card, depending on the information available.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INT",
    "type" : "String",
    "comment" : "\n         * An integer key associated with the period of time in seconds the non-rcs capability\n         * information of each contact is cached on the device.\n         * <p>\n         * The rcs capability cache expiration sec is managed by\n         * {@code android.telephony.ims.ProvisioningManager} but non-rcs capability is managed by\n         * {@link CarrierConfigManager} since non-rcs capability will be provided via ACS or carrier\n         * config.\n         * <p>\n         * The default value is 2592000 secs (30 days), see RCC.07 Annex A.1.9.\n         ",
    "links" : [ "android.telephony.CarrierConfigManager" ]
  }, {
    "name" : "KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAY",
    "type" : "String",
    "comment" : "\n         * Specifies the RCS feature tag allowed for the carrier.\n         *\n         * <p>The values refer to RCC.07 2.4.4.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_RCS_REQUEST_FORBIDDEN_BY_SIP_489_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether or not carrier forbids device send the RCS request when the\n         * device receive the network response with the SIP code 489 BAD EVENT.\n         * <p>\n         * The default value for this key is {@code false}.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_RCS_REQUEST_RETRY_INTERVAL_MILLIS_LONG",
    "type" : "String",
    "comment" : "\n         * Indicates the interval that SUBSCRIBE requests from applications will be retried at when\n         * the carrier network has responded to a previous request with a forbidden error.\n         * <p>\n         * The default value for this key is 20 minutes.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_T1_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer T1 as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_T2_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer T2 as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_T4_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer T4 as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_B_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer B as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_C_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer C as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_D_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer D as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_F_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer F as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_H_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer H as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_TIMER_J_MILLIS_INT",
    "type" : "String",
    "comment" : " SIP timer J as per 3GPP TS 24.229 Table 7.7.1 ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_SERVER_PORT_NUMBER_INT",
    "type" : "String",
    "comment" : " Specifies the SIP Server default port. ",
    "links" : [ ]
  }, {
    "name" : "KEY_PHONE_CONTEXT_DOMAIN_NAME_STRING",
    "type" : "String",
    "comment" : "\n         * Specify the “phone-context” parameter as defined in\n         * section 7.2A.10 in 3GPP TS 24.229.\n         ",
    "links" : [ ]
  }, {
    "name" : "REQUEST_URI_FORMAT_TEL",
    "type" : "int",
    "comment" : "\n         *  Request URI is of type TEL URI.\n         ",
    "links" : [ ]
  }, {
    "name" : "REQUEST_URI_FORMAT_SIP",
    "type" : "int",
    "comment" : "\n         *  Request URI is of type SIP URI.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_REQUEST_URI_TYPE_INT",
    "type" : "String",
    "comment" : "\n         * Specify whether the request URI is SIP URI\n         * {@link #REQUEST_URI_FORMAT_SIP} or\n         * TEL URI {@link #REQUEST_URI_FORMAT_TEL}.\n         ",
    "links" : [ "#REQUEST_URI_FORMAT_SIP", "#REQUEST_URI_FORMAT_TEL" ]
  }, {
    "name" : "KEY_GRUU_ENABLED_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether Globally Routable User agent (GRUU)\n         * in supported HEADER is included or not.\n         *\n         * <p> Reference: RFC 5627.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether to keep/release IMS PDN in case of\n         * moving to non VOPS area.\n         *\n         * <p>if {@code True}, keep IMS PDN in case of moving to non VOPS area.\n         * if {@code false}, otherwise.\n         ",
    "links" : [ ]
  }, {
    "name" : "PREFERRED_TRANSPORT_UDP",
    "type" : "int",
    "comment" : " Preferred Transport is always UDP. ",
    "links" : [ ]
  }, {
    "name" : "PREFERRED_TRANSPORT_TCP",
    "type" : "int",
    "comment" : " Preferred Transport is always TCP. ",
    "links" : [ ]
  }, {
    "name" : "PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP",
    "type" : "int",
    "comment" : "\n         *  Preferred Transport is both UDP and TCP and selected based\n         *  on MTU size specified in {@link #KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INT}\n         *  and {@link #KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INT}.\n         *\n         *  <p>Default transport is UDP. If message size is larger\n         *  than MTU, then TCP shall be used.\n         ",
    "links" : [ "#KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INT", "#KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INT" ]
  }, {
    "name" : "PREFERRED_TRANSPORT_TLS",
    "type" : "int",
    "comment" : " Preferred Transport is TLS. ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_PREFERRED_TRANSPORT_INT",
    "type" : "String",
    "comment" : "\n         * Specify the preferred transport protocol for SIP messages.\n         *\n         * <p>Possible values are,\n         * {@link #PREFERRED_TRANSPORT_UDP},\n         * {@link #PREFERRED_TRANSPORT_TCP},\n         * {@link #PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP}\n         ",
    "links" : [ "#PREFERRED_TRANSPORT_UDP", "#PREFERRED_TRANSPORT_TCP", "#PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP" ]
  }, {
    "name" : "KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INT",
    "type" : "String",
    "comment" : "\n         * Specify the maximum IPV4 MTU size of SIP message on Cellular.\n         *\n         * <p>If {@link #KEY_SIP_PREFERRED_TRANSPORT_INT} is\n         * {@link #PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP} and SIP message MTU size\n         * is more than this value, then SIP transport will be TCP, else the\n         * SIP transport is UDP.\n         ",
    "links" : [ "#PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP", "#KEY_SIP_PREFERRED_TRANSPORT_INT" ]
  }, {
    "name" : "KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INT",
    "type" : "String",
    "comment" : "\n         * Specify the maximum IPV6 MTU size of SIP message on Cellular.\n         *\n         * <p>If {@link #KEY_SIP_PREFERRED_TRANSPORT_INT} is\n         * {@link #PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP} and SIP message MTU size\n         * is more than this value, then SIP transport will be TCP, else the\n         * SIP transport is UDP.\n         ",
    "links" : [ "#PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP", "#KEY_SIP_PREFERRED_TRANSPORT_INT" ]
  }, {
    "name" : "KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * This config determines whether IMS PDN needs to be enabled\n         * when VOPS support is not available in both home and roaming scenarios.\n         *\n         * <p>This is applicable before IMS PDN is up, to decide whether\n         * IMS PDN needs to be enabled based on VOPS support in home/roaming.\n         *\n         * <p>Possible values are,\n         * {@link #NETWORK_TYPE_HOME},\n         * {@link #NETWORK_TYPE_ROAMING}\n         * An empty array indicates IMS PDN depends on VOPS on both home\n         * and roaming scenarios.\n         ",
    "links" : [ "#NETWORK_TYPE_ROAMING", "#NETWORK_TYPE_HOME" ]
  }, {
    "name" : "KEY_SIP_OVER_IPSEC_ENABLED_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether IPSec enabled for SIP messages.\n         *\n         * <p> Reference: 3GPP TS 33.203 and RFC 3329.\n         ",
    "links" : [ ]
  }, {
    "name" : "IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5",
    "type" : "int",
    "comment" : " IPSec Authentication algorithm is HMAC-MD5. see Annex H of TS 33.203 ",
    "links" : [ ]
  }, {
    "name" : "IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1",
    "type" : "int",
    "comment" : " IPSec Authentication algorithm is HMAC-SHA1. see Annex H of TS 33.203 ",
    "links" : [ ]
  }, {
    "name" : "KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of supported IPSEC Authentication algorithms.\n         *\n         * <p>Possible values are,\n         * {@link #IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5},\n         * {@link #IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1}\n         ",
    "links" : [ "#IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1", "#IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5" ]
  }, {
    "name" : "IPSEC_ENCRYPTION_ALGORITHM_NULL",
    "type" : "int",
    "comment" : " IPSec Encryption algorithm is NULL. see Annex H of TS 33.203 ",
    "links" : [ ]
  }, {
    "name" : "IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBC",
    "type" : "int",
    "comment" : " IPSec Encryption algorithm is DES_EDE3_CBC. see Annex H of TS 33.203 ",
    "links" : [ ]
  }, {
    "name" : "IPSEC_ENCRYPTION_ALGORITHM_AES_CBC",
    "type" : "int",
    "comment" : " IPSec Encryption algorithm is AES_CBC. see Annex H of TS 33.203 ",
    "links" : [ ]
  }, {
    "name" : "KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of supported IPSEC encryption algorithms.\n         *\n         * <p>Possible values are,\n         * {@link #IPSEC_ENCRYPTION_ALGORITHM_NULL},\n         * {@link #IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBC},\n         * {@link #IPSEC_ENCRYPTION_ALGORITHM_AES_CBC}\n         ",
    "links" : [ "#IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBC", "#IPSEC_ENCRYPTION_ALGORITHM_AES_CBC", "#IPSEC_ENCRYPTION_ALGORITHM_NULL" ]
  }, {
    "name" : "KEY_REGISTRATION_EXPIRY_TIMER_SEC_INT",
    "type" : "String",
    "comment" : "\n         * Expiry timer for IMS Registration in seconds.\n         * <p>Reference: RFC 3261 Section 20.19.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INT",
    "type" : "String",
    "comment" : " Registration Retry Base-time as per RFC 5626 Section 4.5. ",
    "links" : [ ]
  }, {
    "name" : "KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INT",
    "type" : "String",
    "comment" : " Registration Retry max-time as per RFC 5626 Section 4.5. ",
    "links" : [ ]
  }, {
    "name" : "KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag indicating whether subscription to registration event package\n         * is supported or not.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INT",
    "type" : "String",
    "comment" : "\n         * Expiry timer for SUBSCRIBE in seconds.\n         * <p>Reference: RFC 3261 Section 20.19.\n         ",
    "links" : [ ]
  }, {
    "name" : "GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI",
    "type" : "int",
    "comment" : "\n         * Indicates geolocation PIDF XML needs to be included for\n         * normal/non-emergency call scenario on WiFi\n         *\n         * <p>Geolocation for normal/non-emergency call should only include\n         * country code.\n         ",
    "links" : [ ]
  }, {
    "name" : "GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI",
    "type" : "int",
    "comment" : "\n         * Indicates geolocation PIDF XML needs to be included for emergency\n         * call scenario on WiFi\n         ",
    "links" : [ ]
  }, {
    "name" : "GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR",
    "type" : "int",
    "comment" : "\n         * Indicates geolocation PIDF XML needs to be included for normal/non-emergency\n         * call scenario on Cellular\n         *\n         * <p>Geolocation for normal/non-emergency call should only include\n         * country code.\n         ",
    "links" : [ ]
  }, {
    "name" : "GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR",
    "type" : "int",
    "comment" : "\n         * Indicates geolocation PIDF XML needs to be included for emergency\n         * call scenario on Cellular\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of cases where geolocation PIDF XML needs to be included in the\n         * SIP REGISTER over WiFi and Cellular.\n         *\n         * <p>Possible values are,\n         * {@link #GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI},\n         * {@link #GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI},\n         * {@link #GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR},\n         * {@link #GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR}\n         *\n         * <p>An empty array indicates geolocation PIDF XML should not be included in\n         * the SIP REGISTER over WiFi and Cellular.\n         ",
    "links" : [ "#GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR", "#GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI", "#GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI", "#GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR" ]
  }, {
    "name" : "KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of cases where geolocation PIDF XML needs to be included in the\n         * SIP INVITE over WiFi and Cellular.\n         *\n         * <p>Possible values are,\n         * {@link #GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI},\n         * {@link #GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI},\n         * {@link #GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR},\n         * {@link #GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR}\n         *\n         * <p>An empty array indicates geolocation PIDF XML should not be included\n         * in the SIP INVITE over WiFi and Cellular.\n         ",
    "links" : [ "#GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR", "#GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI", "#GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI", "#GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR" ]
  }, {
    "name" : "KEY_IMS_USER_AGENT_STRING",
    "type" : "String",
    "comment" : "\n         * Specifies the IMS User Agent in template format.\n         *\n         * <p>Example: #MANUFACTURER#_#MODEL#_Android#AV#_#BUILD#\".\n         * IMS Stack should internally substitute the tokens with the\n         * values from the respective android properties.\n         *\n         * <p>List of allowed tokens and the corresponding android properties are,\n         * <UL>\n         *   <LI>MANUFACTURER : ro.product.manufacturer</LI>\n         *   <LI>MODEL :  ro.product.model</LI>\n         *   <LI>AV : ro.build.version.release\"</LI>\n         *   <LI>BUILD : ro.build.id</LI>\n         * </UL>\n         * <p> Vendor IMS Stack should strip any whitespace characters present\n         * in the android properties values before replacing the token.\n         *\n         * <p> An empty string is invalid as per IR92 section 2.6. This key is\n         * considered invalid if the format is violated. If the key is invalid or\n         * not configured, IMS stack should use internal default values.\n         ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_TYPE_HOME",
    "type" : "int",
    "comment" : " Indicates HOME Network. ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_TYPE_ROAMING",
    "type" : "int",
    "comment" : " Indicates Roaming Network. ",
    "links" : [ ]
  }, {
    "name" : "RTCP_INACTIVITY_ON_HOLD",
    "type" : "int",
    "comment" : "  RTCP inactivity occurred when call is on HOLD. ",
    "links" : [ ]
  }, {
    "name" : "RTCP_INACTIVITY_ON_CONNECTED",
    "type" : "int",
    "comment" : "  RTCP inactivity occurred when call is connected. ",
    "links" : [ ]
  }, {
    "name" : "RTP_INACTIVITY_ON_CONNECTED",
    "type" : "int",
    "comment" : "  RTP inactivity occurred when call is connected. ",
    "links" : [ ]
  }, {
    "name" : "E911_RTCP_INACTIVITY_ON_CONNECTED",
    "type" : "int",
    "comment" : "  E911 RTCP inactivity occurred when call is connected. ",
    "links" : [ ]
  }, {
    "name" : "E911_RTP_INACTIVITY_ON_CONNECTED",
    "type" : "int",
    "comment" : "  E911 RTP inactivity occurred when call is connected. ",
    "links" : [ ]
  }, {
    "name" : "KEY_SUPPORTED_RATS_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of different RAT technologies on which IMS\n         * is supported.\n         *\n         * <p>Possible values are,\n         * {@link AccessNetworkConstants.AccessNetworkType#NGRAN}\n         * {@link AccessNetworkConstants.AccessNetworkType#EUTRAN}\n         * {@link AccessNetworkConstants.AccessNetworkType#IWLAN}\n         * {@link AccessNetworkConstants.AccessNetworkType#UTRAN}\n         * {@link AccessNetworkConstants.AccessNetworkType#GERAN}\n         ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#EUTRAN", "AccessNetworkConstants.AccessNetworkType#NGRAN", "AccessNetworkConstants.AccessNetworkType#UTRAN", "AccessNetworkConstants.AccessNetworkType#IWLAN", "AccessNetworkConstants.AccessNetworkType#GERAN" ]
  }, {
    "name" : "KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLE",
    "type" : "String",
    "comment" : "\n         * A bundle which specifies the MMTEL capability and registration technology\n         * that requires provisioning. If a tuple is not present, the\n         * framework will not require that the tuple requires provisioning before\n         * enabling the capability.\n         * <p> Possible keys in this bundle are\n         * <ul>\n         *     <li>{@link #KEY_CAPABILITY_TYPE_VOICE_INT_ARRAY}</li>\n         *     <li>{@link #KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAY}</li>\n         *     <li>{@link #KEY_CAPABILITY_TYPE_UT_INT_ARRAY}</li>\n         *     <li>{@link #KEY_CAPABILITY_TYPE_SMS_INT_ARRAY}</li>\n         *     <li>{@link #KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAY}</li>\n         * </ul>\n         * <p> The values are defined as {@code REGISTRATION_TECH_*} constants in\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase}.\n         *\n         * changing mmtel_requires_provisioning_bundle requires changes to\n         * carrier_volte_provisioning_required_bool and vice versa\n         * {@link Ims#KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOL}\n         ",
    "links" : [ "#KEY_CAPABILITY_TYPE_SMS_INT_ARRAY", "#KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAY", "#KEY_CAPABILITY_TYPE_VOICE_INT_ARRAY", "#KEY_CAPABILITY_TYPE_UT_INT_ARRAY", "android.telephony.ims.stub.ImsRegistrationImplBase", "#KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAY", "#KEY_CARRIER_VOLTE_PROVISIONING_REQUIRED_BOOL" ]
  }, {
    "name" : "KEY_CAPABILITY_TYPE_VOICE_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of different RAT technologies on which Provisioning for Voice calling (IR.92)\n         * is supported.\n         * <p>Possible values are,\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR}\n         * @see MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE\n         ",
    "links" : [ "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE" ]
  }, {
    "name" : "KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of different RAT technologies on which Provisioning for Video Telephony (IR.94)\n         * is supported.\n         * <p>Possible values are,\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR}\n         * @see MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO\n         ",
    "links" : [ "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE" ]
  }, {
    "name" : "KEY_CAPABILITY_TYPE_UT_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of different RAT technologies on which Provisioning for XCAP over Ut for\n         * supplementary services. (IR.92) is supported.\n         * <p>Possible values are,\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR}\n         * @see MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_UT\n         ",
    "links" : [ "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE" ]
  }, {
    "name" : "KEY_CAPABILITY_TYPE_SMS_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of different RAT technologies on which Provisioning for SMS (IR.92) is supported.\n         * <p>Possible values are,\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR}\n         * @see MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_SMS\n         ",
    "links" : [ "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE" ]
  }, {
    "name" : "KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * List of different RAT technologies on which Provisioning for Call Composer\n         * (section 2.4 of RCC.20) is supported.\n         * <p>Possible values are,\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR}\n         * @see MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_CALL_COMPOSER\n         ",
    "links" : [ "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE" ]
  }, {
    "name" : "KEY_RCS_REQUIRES_PROVISIONING_BUNDLE",
    "type" : "String",
    "comment" : "\n         * A bundle which specifies the RCS capability and registration technology\n         * that requires provisioning. If a tuple is not present, the\n         * framework will not require that the tuple requires provisioning before\n         * enabling the capability.\n         * <p> Possible keys in this bundle are\n         * <ul>\n         *     <li>{@link #KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAY}</li>\n         *     <li>{@link #KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAY}</li>\n         * </ul>\n         * <p> The values are defined as {@code REGISTRATION_TECH_*} constants in\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase}.\n         ",
    "links" : [ "#KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAY", "#KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAY", "android.telephony.ims.stub.ImsRegistrationImplBase" ]
  }, {
    "name" : "KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * This carrier supports User Capability Exchange using SIP OPTIONS as defined by the\n         * framework. If set, the RcsFeature should support capability exchange using SIP OPTIONS.\n         * If not set, this RcsFeature should not service capability requests.\n         * <p>Possible values are,\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR}\n         ",
    "links" : [ "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE" ]
  }, {
    "name" : "KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * This carrier supports User Capability Exchange using a presence server as defined by the\n         * framework. If set, the RcsFeature should support capability exchange using a presence\n         * server. If not set, this RcsFeature should not publish capabilities or service capability\n         * requests using presence.\n         * <p>Possible values are,\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM}\n         * {@link android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR}\n         ",
    "links" : [ "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_NR", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_IWLAN", "android.telephony.ims.stub.ImsRegistrationImplBase#REGISTRATION_TECH_LTE" ]
  }, {
    "name" : "KEY_NR_SA_DISABLE_POLICY_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the policy for disabling NR SA mode. Default value is\n         *{@link #SA_DISABLE_POLICY_NONE}.\n         * The value set as below:\n         * <ul>\n         * <li>0: {@link #SA_DISABLE_POLICY_NONE }</li>\n         * <li>1: {@link #SA_DISABLE_POLICY_WFC_ESTABLISHED }</li>\n         * <li>2: {@link #SA_DISABLE_POLICY_WFC_ESTABLISHED_WHEN_VONR_DISABLED  }</li>\n         * <li>3: {@link #SA_DISABLE_POLICY_VOWIFI_REGISTERED  }</li>\n         * </ul>\n         * @hide\n         ",
    "links" : [ "#SA_DISABLE_POLICY_WFC_ESTABLISHED", "#SA_DISABLE_POLICY_VOWIFI_REGISTERED", "#SA_DISABLE_POLICY_WFC_ESTABLISHED_WHEN_VONR_DISABLED", "#SA_DISABLE_POLICY_NONE" ]
  }, {
    "name" : "NR_SA_DISABLE_POLICY_NONE",
    "type" : "int",
    "comment" : "\n         * Do not disables NR SA mode.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NR_SA_DISABLE_POLICY_WFC_ESTABLISHED",
    "type" : "int",
    "comment" : "\n         * Disables NR SA mode when VoWiFi call is established in order to improve the delay or\n         * voice mute when the handover from ePDG to NR is not supported in UE or network.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NR_SA_DISABLE_POLICY_WFC_ESTABLISHED_WHEN_VONR_DISABLED",
    "type" : "int",
    "comment" : "\n         * Disables NR SA mode when VoWiFi call is established when VoNR is disabled in order to\n         * improve the delay or voice mute when the handover from ePDG to NR is not supported\n         * in UE or network.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NR_SA_DISABLE_POLICY_VOWIFI_REGISTERED",
    "type" : "int",
    "comment" : "\n         * Disables NR SA mode when IMS is registered over WiFi in order to improve the delay or\n         * voice mute when the handover from ePDG to NR is not supported in UE or network.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_ALLOW_NON_GLOBAL_PHONE_NUMBER_FORMAT_BOOL",
    "type" : "String",
    "comment" : "\n         * This specifies whether the carrier support the global number format or not.\n         * {@link SubscriptionManager#getPhoneNumber(int)},\n         * {@link SubscriptionManager#getPhoneNumber(int, int)} with\n         * {@link SubscriptionManager#PHONE_NUMBER_SOURCE_IMS}\n         * In order to provide the phone number to the APIs, the framework extracts the phone\n         * number from the message received from the carrier server. If the carrier does not use\n         * global number format, the framework could not provide phone number.\n         * <p>\n         * If not set or set to false value, the framework handle only global number format URI.\n         * @hide\n         ",
    "links" : [ "android.telephony.SubscriptionManager#PHONE_NUMBER_SOURCE_IMS", "android.telephony.SubscriptionManager#getPhoneNumber(int)", "android.telephony.SubscriptionManager#getPhoneNumber(int" ]
  } ],
  "methods" : [ {
    "name" : "private static PersistableBundle getDefaults()",
    "returnType" : "PersistableBundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static PersistableBundle getDefaults()" ],
  "variableNames" : [ "KEY_PREFIX", "KEY_WIFI_OFF_DEFERRING_TIME_MILLIS_INT", "KEY_IMS_SINGLE_REGISTRATION_REQUIRED_BOOL", "KEY_ENABLE_PRESENCE_PUBLISH_BOOL", "KEY_PUBLISH_SERVICE_DESC_FEATURE_TAG_MAP_OVERRIDE_STRING_ARRAY", "KEY_ENABLE_PRESENCE_CAPABILITY_EXCHANGE_BOOL", "KEY_RCS_BULK_CAPABILITY_EXCHANGE_BOOL", "KEY_ENABLE_PRESENCE_GROUP_SUBSCRIBE_BOOL", "KEY_SUBSCRIBE_RETRY_DURATION_MILLIS_LONG", "KEY_USE_SIP_URI_FOR_PRESENCE_SUBSCRIBE_BOOL", "KEY_USE_TEL_URI_FOR_PIDF_XML_BOOL", "KEY_NON_RCS_CAPABILITIES_CACHE_EXPIRATION_SEC_INT", "KEY_RCS_FEATURE_TAG_ALLOWED_STRING_ARRAY", "KEY_RCS_REQUEST_FORBIDDEN_BY_SIP_489_BOOL", "KEY_RCS_REQUEST_RETRY_INTERVAL_MILLIS_LONG", "KEY_SIP_TIMER_T1_MILLIS_INT", "KEY_SIP_TIMER_T2_MILLIS_INT", "KEY_SIP_TIMER_T4_MILLIS_INT", "KEY_SIP_TIMER_B_MILLIS_INT", "KEY_SIP_TIMER_C_MILLIS_INT", "KEY_SIP_TIMER_D_MILLIS_INT", "KEY_SIP_TIMER_F_MILLIS_INT", "KEY_SIP_TIMER_H_MILLIS_INT", "KEY_SIP_TIMER_J_MILLIS_INT", "KEY_SIP_SERVER_PORT_NUMBER_INT", "KEY_PHONE_CONTEXT_DOMAIN_NAME_STRING", "REQUEST_URI_FORMAT_TEL", "REQUEST_URI_FORMAT_SIP", "KEY_REQUEST_URI_TYPE_INT", "KEY_GRUU_ENABLED_BOOL", "KEY_KEEP_PDN_UP_IN_NO_VOPS_BOOL", "PREFERRED_TRANSPORT_UDP", "PREFERRED_TRANSPORT_TCP", "PREFERRED_TRANSPORT_DYNAMIC_UDP_TCP", "PREFERRED_TRANSPORT_TLS", "KEY_SIP_PREFERRED_TRANSPORT_INT", "KEY_IPV4_SIP_MTU_SIZE_CELLULAR_INT", "KEY_IPV6_SIP_MTU_SIZE_CELLULAR_INT", "KEY_IMS_PDN_ENABLED_IN_NO_VOPS_SUPPORT_INT_ARRAY", "KEY_SIP_OVER_IPSEC_ENABLED_BOOL", "IPSEC_AUTHENTICATION_ALGORITHM_HMAC_MD5", "IPSEC_AUTHENTICATION_ALGORITHM_HMAC_SHA1", "KEY_IPSEC_AUTHENTICATION_ALGORITHMS_INT_ARRAY", "IPSEC_ENCRYPTION_ALGORITHM_NULL", "IPSEC_ENCRYPTION_ALGORITHM_DES_EDE3_CBC", "IPSEC_ENCRYPTION_ALGORITHM_AES_CBC", "KEY_IPSEC_ENCRYPTION_ALGORITHMS_INT_ARRAY", "KEY_REGISTRATION_EXPIRY_TIMER_SEC_INT", "KEY_REGISTRATION_RETRY_BASE_TIMER_MILLIS_INT", "KEY_REGISTRATION_RETRY_MAX_TIMER_MILLIS_INT", "KEY_REGISTRATION_EVENT_PACKAGE_SUPPORTED_BOOL", "KEY_REGISTRATION_SUBSCRIBE_EXPIRY_TIMER_SEC_INT", "GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_WIFI", "GEOLOCATION_PIDF_FOR_EMERGENCY_ON_WIFI", "GEOLOCATION_PIDF_FOR_NON_EMERGENCY_ON_CELLULAR", "GEOLOCATION_PIDF_FOR_EMERGENCY_ON_CELLULAR", "KEY_GEOLOCATION_PIDF_IN_SIP_REGISTER_SUPPORT_INT_ARRAY", "KEY_GEOLOCATION_PIDF_IN_SIP_INVITE_SUPPORT_INT_ARRAY", "KEY_IMS_USER_AGENT_STRING", "NETWORK_TYPE_HOME", "NETWORK_TYPE_ROAMING", "RTCP_INACTIVITY_ON_HOLD", "RTCP_INACTIVITY_ON_CONNECTED", "RTP_INACTIVITY_ON_CONNECTED", "E911_RTCP_INACTIVITY_ON_CONNECTED", "E911_RTP_INACTIVITY_ON_CONNECTED", "KEY_SUPPORTED_RATS_INT_ARRAY", "KEY_MMTEL_REQUIRES_PROVISIONING_BUNDLE", "KEY_CAPABILITY_TYPE_VOICE_INT_ARRAY", "KEY_CAPABILITY_TYPE_VIDEO_INT_ARRAY", "KEY_CAPABILITY_TYPE_UT_INT_ARRAY", "KEY_CAPABILITY_TYPE_SMS_INT_ARRAY", "KEY_CAPABILITY_TYPE_CALL_COMPOSER_INT_ARRAY", "KEY_RCS_REQUIRES_PROVISIONING_BUNDLE", "KEY_CAPABILITY_TYPE_OPTIONS_UCE_INT_ARRAY", "KEY_CAPABILITY_TYPE_PRESENCE_UCE_INT_ARRAY", "KEY_NR_SA_DISABLE_POLICY_INT", "NR_SA_DISABLE_POLICY_NONE", "NR_SA_DISABLE_POLICY_WFC_ESTABLISHED", "NR_SA_DISABLE_POLICY_WFC_ESTABLISHED_WHEN_VONR_DISABLED", "NR_SA_DISABLE_POLICY_VOWIFI_REGISTERED", "KEY_ALLOW_NON_GLOBAL_PHONE_NUMBER_FORMAT_BOOL" ]
}