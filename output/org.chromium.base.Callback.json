{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/Callback.java",
  "packageName" : "org.chromium.base",
  "className" : "Callback",
  "comment" : "\n * A simple single-argument callback to handle the result of a computation.\n *\n * @param <T> The type of the computation's result.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onResult(T result)",
    "returnType" : "void",
    "comment" : " Invoked with the result of a computation. ",
    "links" : [ ]
  }, {
    "name" : " Runnable bind(T result)",
    "returnType" : "Runnable",
    "comment" : "\n     * Returns a Runnable that will invoke the callback with the given value.\n     *\n     * For example, instead of:\n     *     mView.post(() -> myCallback.onResult(result));\n     * Avoid creating an inner class via:\n     *     mView.post(myCallback.bind(result));\n     ",
    "links" : [ ]
  }, {
    "name" : " static void runNullSafe(@Nullable Callback<T> callback, @Nullable T object)",
    "returnType" : "void",
    "comment" : "\n     * Runs a callback checking if the callback may be null.\n     *\n     * <p>Can be used as syntactic sugar for: if (callback != null) callback.onResult(object);\n     *\n     * @param callback The {@link Callback} to run.\n     * @param object The payload to provide to the callback (may be null).\n     ",
    "links" : [ "org.chromium.base.Callback" ]
  } ],
  "methodNames" : [ " void onResult(T result)", " Runnable bind(T result)", " static void runNullSafe(@Nullable Callback<T> callback, @Nullable T object)" ],
  "variableNames" : [ ]
}