{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/translation/TranslationManager.java",
  "packageName" : "android.view.translation",
  "className" : "TranslationManager",
  "comment" : "\n * The {@link TranslationManager} class provides ways for apps to integrate and use the\n * translation framework.\n *\n * <p>The TranslationManager manages {@link Translator}s and help bridge client calls to\n * the server translation service </p>\n ",
  "links" : [ "android.view.translation.Translator", "android.view.translation.TranslationManager" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYNC_CALLS_TIMEOUT_MS",
    "type" : "int",
    "comment" : "\n     * Timeout for calls to system_server, default 1 minute.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_SYNC_CALL_SUCCESS",
    "type" : "int",
    "comment" : "\n     * The result code from result receiver success.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_SYNC_CALL_FAIL",
    "type" : "int",
    "comment" : "\n     * The result code from result receiver fail.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_CAPABILITIES",
    "type" : "String",
    "comment" : "\n     * Name of the extra used to pass the translation capabilities.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mTranslationCapabilityUpdateListeners",
    "type" : "ArrayMap<Pair<Integer, Integer>, ArrayList<PendingIntent>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCapabilityCallbacks",
    "type" : "Map<Consumer<TranslationCapability>, IRemoteCallback>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ID_GENERATOR",
    "type" : "SecureRandom",
    "comment" : " TODO(b/158778794): make the session ids truly globally unique across processes",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "ITranslationManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTranslatorIds",
    "type" : "IntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sAvailableRequestId",
    "type" : "AtomicInteger",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void createOnDeviceTranslator(@NonNull TranslationContext translationContext, @NonNull @CallbackExecutor Executor executor, @NonNull Consumer<Translator> callback)",
    "returnType" : "void",
    "comment" : "\n     * Creates an on-device Translator for natural language translation.\n     *\n     * <p>In Android 12, this method provided the same cached Translator object when given the\n     * same TranslationContext object. Do not use a Translator destroyed elsewhere as this will\n     * cause an exception on Android 12.\n     *\n     * <p>In later versions, this method never returns a cached Translator.\n     *\n     * @param translationContext {@link TranslationContext} containing the specs for creating the\n     *                                                     Translator.\n     * @param executor Executor to run callback operations\n     * @param callback {@link Consumer} to receive the translator. A {@code null} value is returned\n     *                                 if the service could not create the translator.\n     ",
    "links" : [ "java.util.function.Consumer", "android.view.translation.TranslationContext" ]
  }, {
    "name" : "public Translator createOnDeviceTranslator(@NonNull TranslationContext translationContext)",
    "returnType" : "Translator",
    "comment" : "\n     * Creates an on-device Translator for natural language translation.\n     *\n     * <p><strong>NOTE: </strong>Call on a worker thread.\n     *\n     * @removed use {@link #createOnDeviceTranslator(TranslationContext, Executor, Consumer)}\n     * instead.\n     *\n     * @param translationContext {@link TranslationContext} containing the specs for creating the\n     *                                                     Translator.\n     ",
    "links" : [ "#createOnDeviceTranslator(TranslationContext", "android.view.translation.TranslationContext" ]
  }, {
    "name" : "public Translator createTranslator(@NonNull TranslationContext translationContext)",
    "returnType" : "Translator",
    "comment" : " @removed Use {@link #createOnDeviceTranslator(TranslationContext)} ",
    "links" : [ "#createOnDeviceTranslator(TranslationContext)" ]
  }, {
    "name" : "public Set<TranslationCapability> getOnDeviceTranslationCapabilities(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat)",
    "returnType" : "Set<TranslationCapability>",
    "comment" : "\n     * Returns a set of {@link TranslationCapability}s describing the capabilities for on-device\n     * {@link Translator}s.\n     *\n     * <p>These translation capabilities contains a source and target {@link TranslationSpec}\n     * representing the data expected for both ends of translation process. The capabilities\n     * provides the information and limitations for generating a {@link TranslationContext}.\n     * The context object can then be used by\n     * {@link #createOnDeviceTranslator(TranslationContext, Executor, Consumer)} to obtain a\n     * {@link Translator} for translations.</p>\n     *\n     * <p><strong>NOTE: </strong>Call on a worker thread.\n     *\n     * @param sourceFormat data format for the input data to be translated.\n     * @param targetFormat data format for the expected translated output data.\n     * @return A set of {@link TranslationCapability}s.\n     ",
    "links" : [ "android.view.translation.TranslationSpec", "android.view.translation.Translator", "#createOnDeviceTranslator(TranslationContext", "android.view.translation.TranslationCapability", "android.view.translation.TranslationContext" ]
  }, {
    "name" : "public Set<TranslationCapability> getTranslationCapabilities(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat)",
    "returnType" : "Set<TranslationCapability>",
    "comment" : " @removed Use {@link #getOnDeviceTranslationCapabilities(int, int)} ",
    "links" : [ "#getOnDeviceTranslationCapabilities(int" ]
  }, {
    "name" : "public void addOnDeviceTranslationCapabilityUpdateListener(@NonNull @CallbackExecutor Executor executor, @NonNull Consumer<TranslationCapability> capabilityListener)",
    "returnType" : "void",
    "comment" : "\n     * Adds a {@link TranslationCapability} Consumer to listen for updates on states of on-device\n     * {@link TranslationCapability}s.\n     *\n     * @param capabilityListener a {@link TranslationCapability} Consumer to receive the updated\n     * {@link TranslationCapability} from the on-device translation service.\n     ",
    "links" : [ "android.view.translation.TranslationCapability" ]
  }, {
    "name" : "public void addOnDeviceTranslationCapabilityUpdateListener(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat, @NonNull PendingIntent pendingIntent)",
    "returnType" : "void",
    "comment" : "\n     * @removed Use {@link TranslationManager#addOnDeviceTranslationCapabilityUpdateListener(\n     * java.util.concurrent.Executor, java.util.function.Consumer)}\n     ",
    "links" : [ "android.view.translation.TranslationManager#addOnDeviceTranslationCapabilityUpdateListener(" ]
  }, {
    "name" : "public void addTranslationCapabilityUpdateListener(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat, @NonNull PendingIntent pendingIntent)",
    "returnType" : "void",
    "comment" : "\n     * @removed Use {@link TranslationManager#addOnDeviceTranslationCapabilityUpdateListener(\n     * java.util.concurrent.Executor, java.util.function.Consumer)}\n     ",
    "links" : [ "android.view.translation.TranslationManager#addOnDeviceTranslationCapabilityUpdateListener(" ]
  }, {
    "name" : "public void removeOnDeviceTranslationCapabilityUpdateListener(@NonNull Consumer<TranslationCapability> capabilityListener)",
    "returnType" : "void",
    "comment" : "\n     * Removes a {@link TranslationCapability} Consumer to listen for updates on states of\n     * on-device {@link TranslationCapability}s.\n     *\n     * @param capabilityListener the {@link TranslationCapability} Consumer to unregister\n     ",
    "links" : [ "android.view.translation.TranslationCapability" ]
  }, {
    "name" : "public void removeOnDeviceTranslationCapabilityUpdateListener(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat, @NonNull PendingIntent pendingIntent)",
    "returnType" : "void",
    "comment" : "\n     * @removed Use {@link #removeOnDeviceTranslationCapabilityUpdateListener(\n     * java.util.function.Consumer)}.\n     ",
    "links" : [ "#removeOnDeviceTranslationCapabilityUpdateListener(" ]
  }, {
    "name" : "public void removeTranslationCapabilityUpdateListener(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat, @NonNull PendingIntent pendingIntent)",
    "returnType" : "void",
    "comment" : "\n     * @removed Use {@link #removeOnDeviceTranslationCapabilityUpdateListener(\n     * java.util.function.Consumer)}.\n     ",
    "links" : [ "#removeOnDeviceTranslationCapabilityUpdateListener(" ]
  }, {
    "name" : "public PendingIntent getOnDeviceTranslationSettingsActivityIntent()",
    "returnType" : "PendingIntent",
    "comment" : "\n     * Returns an immutable PendingIntent which can be used to launch an activity to view/edit\n     * on-device translation settings.\n     *\n     * @return An immutable PendingIntent or {@code null} if one of reason met:\n     * <ul>\n     *     <li>Device manufacturer (OEM) does not provide TranslationService.</li>\n     *     <li>The TranslationService doesn't provide the Settings.</li>\n     * </ul>\n     *",
    "links" : [ ]
  }, {
    "name" : "public PendingIntent getTranslationSettingsActivityIntent()",
    "returnType" : "PendingIntent",
    "comment" : " @removed Use {@link #getOnDeviceTranslationSettingsActivityIntent()} ",
    "links" : [ "#getOnDeviceTranslationSettingsActivityIntent()" ]
  }, {
    "name" : " void removeTranslator(int id)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " AtomicInteger getAvailableRequestId()",
    "returnType" : "AtomicInteger",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void createOnDeviceTranslator(@NonNull TranslationContext translationContext, @NonNull @CallbackExecutor Executor executor, @NonNull Consumer<Translator> callback)", "public Translator createOnDeviceTranslator(@NonNull TranslationContext translationContext)", "public Translator createTranslator(@NonNull TranslationContext translationContext)", "public Set<TranslationCapability> getOnDeviceTranslationCapabilities(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat)", "public Set<TranslationCapability> getTranslationCapabilities(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat)", "public void addOnDeviceTranslationCapabilityUpdateListener(@NonNull @CallbackExecutor Executor executor, @NonNull Consumer<TranslationCapability> capabilityListener)", "public void addOnDeviceTranslationCapabilityUpdateListener(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat, @NonNull PendingIntent pendingIntent)", "public void addTranslationCapabilityUpdateListener(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat, @NonNull PendingIntent pendingIntent)", "public void removeOnDeviceTranslationCapabilityUpdateListener(@NonNull Consumer<TranslationCapability> capabilityListener)", "public void removeOnDeviceTranslationCapabilityUpdateListener(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat, @NonNull PendingIntent pendingIntent)", "public void removeTranslationCapabilityUpdateListener(@TranslationSpec.DataFormat int sourceFormat, @TranslationSpec.DataFormat int targetFormat, @NonNull PendingIntent pendingIntent)", "public PendingIntent getOnDeviceTranslationSettingsActivityIntent()", "public PendingIntent getTranslationSettingsActivityIntent()", " void removeTranslator(int id)", " AtomicInteger getAvailableRequestId()" ],
  "variableNames" : [ "TAG", "SYNC_CALLS_TIMEOUT_MS", "STATUS_SYNC_CALL_SUCCESS", "STATUS_SYNC_CALL_FAIL", "EXTRA_CAPABILITIES", "mTranslationCapabilityUpdateListeners", "mCapabilityCallbacks", "ID_GENERATOR", "mLock", "mContext", "mService", "mTranslatorIds", "mHandler", "sAvailableRequestId" ]
}