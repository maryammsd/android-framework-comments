{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/math/BigDecimal.java",
  "packageName" : "android.icu.math",
  "className" : "BigDecimal",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "ZERO",
    "type" : "android.icu.math.BigDecimal",
    "comment" : " use long as we",
    "links" : [ ]
  }, {
    "name" : "ONE",
    "type" : "android.icu.math.BigDecimal",
    "comment" : " use long as we",
    "links" : [ ]
  }, {
    "name" : "TEN",
    "type" : "android.icu.math.BigDecimal",
    "comment" : "\n     * The <code>BigDecimal</code> constant \"10\".\n     *\n     * @see #ONE\n     * @see #ZERO\n     ",
    "links" : [ ]
  }, {
    "name" : "ROUND_CEILING",
    "type" : "int",
    "comment" : "\n     * Rounding mode to round to a more positive number.\n     *\n     * @see MathContext#ROUND_CEILING\n     ",
    "links" : [ ]
  }, {
    "name" : "ROUND_DOWN",
    "type" : "int",
    "comment" : "\n     * Rounding mode to round towards zero.\n     *\n     * @see MathContext#ROUND_DOWN\n     ",
    "links" : [ ]
  }, {
    "name" : "ROUND_FLOOR",
    "type" : "int",
    "comment" : "\n     * Rounding mode to round to a more negative number.\n     *\n     * @see MathContext#ROUND_FLOOR\n     ",
    "links" : [ ]
  }, {
    "name" : "ROUND_HALF_DOWN",
    "type" : "int",
    "comment" : "\n     * Rounding mode to round to nearest neighbor, where an equidistant value is rounded down.\n     *\n     * @see MathContext#ROUND_HALF_DOWN\n     ",
    "links" : [ ]
  }, {
    "name" : "ROUND_HALF_EVEN",
    "type" : "int",
    "comment" : "\n     * Rounding mode to round to nearest neighbor, where an equidistant value is rounded to the nearest even neighbor.\n     *\n     * @see MathContext#ROUND_HALF_EVEN\n     ",
    "links" : [ ]
  }, {
    "name" : "ROUND_HALF_UP",
    "type" : "int",
    "comment" : "\n     * Rounding mode to round to nearest neighbor, where an equidistant value is rounded up.\n     *\n     * @see MathContext#ROUND_HALF_UP\n     ",
    "links" : [ ]
  }, {
    "name" : "ROUND_UNNECESSARY",
    "type" : "int",
    "comment" : "\n     * Rounding mode to assert that no rounding is necessary.\n     *\n     * @see MathContext#ROUND_UNNECESSARY\n     ",
    "links" : [ ]
  }, {
    "name" : "ROUND_UP",
    "type" : "int",
    "comment" : "\n     * Rounding mode to round away from zero.\n     *\n     * @see MathContext#ROUND_UP\n     ",
    "links" : [ ]
  }, {
    "name" : "ispos",
    "type" : "byte",
    "comment" : " ind: indicates positive (must be 1)",
    "links" : [ ]
  }, {
    "name" : "iszero",
    "type" : "byte",
    "comment" : " ind: indicates zero (must be 0)",
    "links" : [ ]
  }, {
    "name" : "isneg",
    "type" : "byte",
    "comment" : " ind: indicates negative (must be -1)",
    "links" : [ ]
  }, {
    "name" : "MinExp",
    "type" : "int",
    "comment" : " minimum exponent allowed",
    "links" : [ ]
  }, {
    "name" : "MaxExp",
    "type" : "int",
    "comment" : " maximum exponent allowed",
    "links" : [ ]
  }, {
    "name" : "MinArg",
    "type" : "int",
    "comment" : " minimum argument integer",
    "links" : [ ]
  }, {
    "name" : "MaxArg",
    "type" : "int",
    "comment" : " maximum argument integer",
    "links" : [ ]
  }, {
    "name" : "plainMC",
    "type" : "android.icu.math.MathContext",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : " Serialization version",
    "links" : [ ]
  }, {
    "name" : "bytecar",
    "type" : "byte[]",
    "comment" : " carry/borrow array",
    "links" : [ ]
  }, {
    "name" : "bytedig",
    "type" : "byte[]",
    "comment" : " next digit array",
    "links" : [ ]
  }, {
    "name" : "ind",
    "type" : "byte",
    "comment" : " assumed undefined",
    "links" : [ ]
  }, {
    "name" : "form",
    "type" : "byte",
    "comment" : " assumed PLAIN",
    "links" : [ ]
  }, {
    "name" : "mant",
    "type" : "byte[]",
    "comment" : " assumed null",
    "links" : [ ]
  }, {
    "name" : "exp",
    "type" : "int",
    "comment" : "\n     * The exponent.\n     * <p>\n     * For fixed point arithmetic, scale is <code>-exp</code>, and can apply to zero.\n     *\n     * Note that this property can have a value less than MinExp when the mantissa has more than one digit.\n     *\n     * @serial\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public android.icu.math.BigDecimal abs()",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal abs(android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal add(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal add(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int compareTo(android.icu.math.BigDecimal rhs)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int compareTo(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal divide(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal divide(android.icu.math.BigDecimal rhs, int round)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal divide(android.icu.math.BigDecimal rhs, int scale, int round)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal divide(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal divideInteger(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal divideInteger(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal max(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal max(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal min(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal min(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal multiply(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal multiply(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal negate()",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal negate(android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal plus()",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal plus(android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal pow(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal pow(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal remainder(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal remainder(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal subtract(android.icu.math.BigDecimal rhs)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal subtract(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte byteValueExact()",
    "returnType" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public double doubleValue()",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(java.lang.Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float floatValue()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public java.lang.String format(int before, int after)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public java.lang.String format(int before, int after, int explaces, int exdigits, int exformint, int exround)",
    "returnType" : "java.lang.String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int intValue()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int intValueExact()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long longValue()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long longValueExact()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal movePointLeft(int n)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal movePointRight(int n)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int scale()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal setScale(int scale)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.icu.math.BigDecimal setScale(int scale, int round)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public short shortValueExact()",
    "returnType" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int signum()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public java.math.BigDecimal toBigDecimal()",
    "returnType" : "java.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public java.math.BigInteger toBigInteger()",
    "returnType" : "java.math.BigInteger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public java.math.BigInteger toBigIntegerExact()",
    "returnType" : "java.math.BigInteger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public char[] toCharArray()",
    "returnType" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public java.lang.String toString()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public java.math.BigInteger unscaledValue()",
    "returnType" : "java.math.BigInteger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static android.icu.math.BigDecimal valueOf(double dub)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static android.icu.math.BigDecimal valueOf(long lint)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static android.icu.math.BigDecimal valueOf(long lint, int scale)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private char[] layout()",
    "returnType" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int intcheck(int min, int max)",
    "returnType" : "int",
    "comment" : " [currently only used by pow]",
    "links" : [ ]
  }, {
    "name" : "private android.icu.math.BigDecimal dodivide(char code, android.icu.math.BigDecimal rhs, android.icu.math.MathContext set, int scale)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void bad(char[] s)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void badarg(java.lang.String name, int pos, java.lang.String value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static final byte[] extend(byte[] inarr, int newlen)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static final byte[] byteaddsub(byte[] a, int avlen, byte[] b, int bvlen, int m, boolean reuse)",
    "returnType" : "byte[]",
    "comment" : " 1999.12.22 -- special case m=-1, also drop 0 special case",
    "links" : [ ]
  }, {
    "name" : "private static final byte[] diginit()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static final android.icu.math.BigDecimal clone(android.icu.math.BigDecimal dec)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void checkdigits(android.icu.math.BigDecimal rhs, int dig)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private android.icu.math.BigDecimal round(android.icu.math.MathContext set)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private android.icu.math.BigDecimal round(int len, int mode)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static final boolean allzero(byte[] array, int start)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private android.icu.math.BigDecimal finish(android.icu.math.MathContext set, boolean strip)",
    "returnType" : "android.icu.math.BigDecimal",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public android.icu.math.BigDecimal abs()", "public android.icu.math.BigDecimal abs(android.icu.math.MathContext set)", "public android.icu.math.BigDecimal add(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal add(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public int compareTo(android.icu.math.BigDecimal rhs)", "public int compareTo(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public android.icu.math.BigDecimal divide(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal divide(android.icu.math.BigDecimal rhs, int round)", "public android.icu.math.BigDecimal divide(android.icu.math.BigDecimal rhs, int scale, int round)", "public android.icu.math.BigDecimal divide(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public android.icu.math.BigDecimal divideInteger(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal divideInteger(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public android.icu.math.BigDecimal max(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal max(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public android.icu.math.BigDecimal min(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal min(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public android.icu.math.BigDecimal multiply(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal multiply(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public android.icu.math.BigDecimal negate()", "public android.icu.math.BigDecimal negate(android.icu.math.MathContext set)", "public android.icu.math.BigDecimal plus()", "public android.icu.math.BigDecimal plus(android.icu.math.MathContext set)", "public android.icu.math.BigDecimal pow(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal pow(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public android.icu.math.BigDecimal remainder(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal remainder(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public android.icu.math.BigDecimal subtract(android.icu.math.BigDecimal rhs)", "public android.icu.math.BigDecimal subtract(android.icu.math.BigDecimal rhs, android.icu.math.MathContext set)", "public byte byteValueExact()", "public double doubleValue()", "public boolean equals(java.lang.Object obj)", "public float floatValue()", "public java.lang.String format(int before, int after)", "public java.lang.String format(int before, int after, int explaces, int exdigits, int exformint, int exround)", "public int hashCode()", "public int intValue()", "public int intValueExact()", "public long longValue()", "public long longValueExact()", "public android.icu.math.BigDecimal movePointLeft(int n)", "public android.icu.math.BigDecimal movePointRight(int n)", "public int scale()", "public android.icu.math.BigDecimal setScale(int scale)", "public android.icu.math.BigDecimal setScale(int scale, int round)", "public short shortValueExact()", "public int signum()", "public java.math.BigDecimal toBigDecimal()", "public java.math.BigInteger toBigInteger()", "public java.math.BigInteger toBigIntegerExact()", "public char[] toCharArray()", "public java.lang.String toString()", "public java.math.BigInteger unscaledValue()", "public static android.icu.math.BigDecimal valueOf(double dub)", "public static android.icu.math.BigDecimal valueOf(long lint)", "public static android.icu.math.BigDecimal valueOf(long lint, int scale)", "private char[] layout()", "private int intcheck(int min, int max)", "private android.icu.math.BigDecimal dodivide(char code, android.icu.math.BigDecimal rhs, android.icu.math.MathContext set, int scale)", "private void bad(char[] s)", "private void badarg(java.lang.String name, int pos, java.lang.String value)", "private static final byte[] extend(byte[] inarr, int newlen)", "private static final byte[] byteaddsub(byte[] a, int avlen, byte[] b, int bvlen, int m, boolean reuse)", "private static final byte[] diginit()", "private static final android.icu.math.BigDecimal clone(android.icu.math.BigDecimal dec)", "private void checkdigits(android.icu.math.BigDecimal rhs, int dig)", "private android.icu.math.BigDecimal round(android.icu.math.MathContext set)", "private android.icu.math.BigDecimal round(int len, int mode)", "private static final boolean allzero(byte[] array, int start)", "private android.icu.math.BigDecimal finish(android.icu.math.MathContext set, boolean strip)" ],
  "variableNames" : [ "ZERO", "ONE", "TEN", "ROUND_CEILING", "ROUND_DOWN", "ROUND_FLOOR", "ROUND_HALF_DOWN", "ROUND_HALF_EVEN", "ROUND_HALF_UP", "ROUND_UNNECESSARY", "ROUND_UP", "ispos", "iszero", "isneg", "MinExp", "MaxExp", "MinArg", "MaxArg", "plainMC", "serialVersionUID", "bytecar", "bytedig", "ind", "form", "mant", "exp" ]
}