{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/fingerprint/FingerprintManager.java",
  "packageName" : "android.hardware.fingerprint",
  "className" : "EnrollmentCallback",
  "comment" : "\n     * Callback structure provided to {@link FingerprintManager#enroll(byte[], CancellationSignal,\n     * int, EnrollmentCallback)} must provide an implementation of this for listening to\n     * fingerprint events.\n     *\n     * @hide\n     ",
  "links" : [ "android.hardware.fingerprint.FingerprintManager#enroll(byte" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onEnrollmentError(int errMsgId, CharSequence errString)",
    "returnType" : "void",
    "comment" : "\n         * Called when an unrecoverable error has been encountered and the operation is complete.\n         * No further callbacks will be made on this object.\n         * @param errMsgId An integer identifying the error message\n         * @param errString A human-readable error string that can be shown in UI\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onEnrollmentHelp(int helpMsgId, CharSequence helpString)",
    "returnType" : "void",
    "comment" : "\n         * Called when a recoverable error has been encountered during enrollment. The help\n         * string is provided to give the user guidance for what went wrong, such as\n         * \"Sensor dirty, please clean it\" or what they need to do next, such as\n         * \"Touch sensor again.\"\n         * @param helpMsgId An integer identifying the error message\n         * @param helpString A human-readable string that can be shown in UI\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onEnrollmentProgress(int remaining)",
    "returnType" : "void",
    "comment" : "\n         * Called as each enrollment step progresses. Enrollment is considered complete when\n         * remaining reaches 0. This function will not be called if enrollment fails. See\n         * {@link EnrollmentCallback#onEnrollmentError(int, CharSequence)}\n         * @param remaining The number of remaining steps\n         ",
    "links" : [ "#onEnrollmentError(int" ]
  }, {
    "name" : "public void onAcquired(boolean isAcquiredGood)",
    "returnType" : "void",
    "comment" : "\n         * Called when a fingerprint image has been acquired.\n         * @param isAcquiredGood whether the fingerprint image was good.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onUdfpsPointerDown(int sensorId)",
    "returnType" : "void",
    "comment" : "\n         * Called when a pointer down event has occurred.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onUdfpsPointerUp(int sensorId)",
    "returnType" : "void",
    "comment" : "\n         * Called when a pointer up event has occurred.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onUdfpsOverlayShown()",
    "returnType" : "void",
    "comment" : "\n         * Called when udfps overlay is shown.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onEnrollmentError(int errMsgId, CharSequence errString)", "public void onEnrollmentHelp(int helpMsgId, CharSequence helpString)", "public void onEnrollmentProgress(int remaining)", "public void onAcquired(boolean isAcquiredGood)", "public void onUdfpsPointerDown(int sensorId)", "public void onUdfpsPointerUp(int sensorId)", "public void onUdfpsOverlayShown()" ],
  "variableNames" : [ ]
}