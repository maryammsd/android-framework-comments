{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/file/attribute/FileOwnerAttributeView.java",
  "packageName" : "java.nio.file.attribute",
  "className" : "FileOwnerAttributeView",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " String name()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the attribute view. Attribute views of this type\n     * have the name {@code \"owner\"}.\n     ",
    "links" : [ ]
  }, {
    "name" : " UserPrincipal getOwner() throws IOException",
    "returnType" : "UserPrincipal",
    "comment" : "\n     * Read the file owner.\n     *\n     * <p> It is implementation specific if the file owner can be a {@link\n     * GroupPrincipal group}.\n     *\n     * @return  the file owner\n     *\n     * @throws  IOException\n     *          if an I/O error occurs\n     * @throws  SecurityException\n     *          In the case of the default provider, a security manager is\n     *          installed, and it denies {@link\n     *          RuntimePermission}{@code (\"accessUserInformation\")} or its\n     *          {@link SecurityManager#checkRead(String) checkRead} method\n     *          denies read access to the file.\n     ",
    "links" : [ "#checkRead(String)", "RuntimePermission", "java.nio.file.attribute.GroupPrincipal" ]
  }, {
    "name" : " void setOwner(UserPrincipal owner) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Updates the file owner.\n     *\n     * <p> It is implementation specific if the file owner can be a {@link\n     * GroupPrincipal group}. To ensure consistent and correct behavior\n     * across platforms it is recommended that this method should only be used\n     * to set the file owner to a user principal that is not a group.\n     *\n     * @param   owner\n     *          the new file owner\n     *\n     * @throws  IOException\n     *          if an I/O error occurs, or the {@code owner} parameter is a\n     *          group and this implementation does not support setting the owner\n     *          to a group\n     * @throws  SecurityException\n     *          In the case of the default provider, a security manager is\n     *          installed, and it denies {@link\n     *          RuntimePermission}{@code (\"accessUserInformation\")} or its\n     *          {@link SecurityManager#checkWrite(String) checkWrite} method\n     *          denies write access to the file.\n     ",
    "links" : [ "RuntimePermission", "java.nio.file.attribute.GroupPrincipal", "#checkWrite(String)" ]
  } ],
  "methodNames" : [ " String name()", " UserPrincipal getOwner() throws IOException", " void setOwner(UserPrincipal owner) throws IOException" ],
  "variableNames" : [ ]
}