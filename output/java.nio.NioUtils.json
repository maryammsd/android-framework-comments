{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/NioUtils.java",
  "packageName" : "java.nio",
  "className" : "NioUtils",
  "comment" : "\n * @hide internal use only\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static void freeDirectBuffer(ByteBuffer buffer)",
    "returnType" : "void",
    "comment" : "\n     * Frees {@link DirectByteBuffer} running associated {@link sun.misc.Cleaner Cleaner}.\n     *\n     * @param buffer to free with associated {@code Cleaner}\n     *\n     * @hide\n     ",
    "links" : [ "java.nio.DirectByteBuffer", "sun.misc.Cleaner" ]
  }, {
    "name" : "public static FileDescriptor getFD(FileChannel fc)",
    "returnType" : "FileDescriptor",
    "comment" : "\n     * Returns the int file descriptor from within the given FileChannel 'fc'.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static FileChannel newFileChannel(Closeable ioObject, FileDescriptor fd, int mode)",
    "returnType" : "FileChannel",
    "comment" : "\n     * Helps bridge between io and nio. This method is kept only for the hidden API access.\n     * art/build/boot/hiddenapi/hiddenapi-max-target-o-low-priority.txt\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static byte[] unsafeArray(ByteBuffer b)",
    "returnType" : "byte[]",
    "comment" : "\n     * Exposes the array backing a non-direct {@link java.nio.ByteBuffer ByteBuffer}, even if\n     * the {@link java.nio.ByteBuffer ByteBuffer} is read-only.\n     * Normally, attempting to access the array backing a read-only buffer throws.\n     *\n     * @param b  {@link java.nio.ByteBuffer ByteBuffer} to access its backing array.\n     * @return   buffer's underlying array.\n     *\n     * @hide\n     ",
    "links" : [ "java.nio.ByteBuffer" ]
  }, {
    "name" : "public static int unsafeArrayOffset(ByteBuffer b)",
    "returnType" : "int",
    "comment" : "\n     * Exposes the array offset for the array backing a non-direct {@link java.nio.ByteBuffer ByteBuffer},\n     * even if the {@link java.nio.ByteBuffer ByteBuffer} is read-only.\n     *\n     * @param b  {@link java.nio.ByteBuffer ByteBuffer} to access its backing array offset.\n     * @return   buffer's underlying array data offset.\n     *\n     * @hide\n     ",
    "links" : [ "java.nio.ByteBuffer" ]
  } ],
  "methodNames" : [ "public static void freeDirectBuffer(ByteBuffer buffer)", "public static FileDescriptor getFD(FileChannel fc)", "public static FileChannel newFileChannel(Closeable ioObject, FileDescriptor fd, int mode)", "public static byte[] unsafeArray(ByteBuffer b)", "public static int unsafeArrayOffset(ByteBuffer b)" ],
  "variableNames" : [ ]
}