{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/impl/CaptureCallback.java",
  "packageName" : "android.hardware.camera2.impl",
  "className" : "CaptureCallback",
  "comment" : "\n * <p>An internal callback for tracking the progress of a {@link CaptureRequest}\n * submitted to the camera device.</p>\n ",
  "links" : [ "android.hardware.camera2.CaptureRequest" ],
  "variables" : [ {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "CameraCaptureSession.CaptureCallback",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Executor getExecutor()",
    "returnType" : "Executor",
    "comment" : "\n     * Retrieve callback executor\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public CameraCaptureSession.CaptureCallback getSessionCallback()",
    "returnType" : "CameraCaptureSession.CaptureCallback",
    "comment" : "\n     * Retrieve capture callback\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCaptureStarted(CameraDevice camera, CaptureRequest request, long timestamp, long frameNumber)",
    "returnType" : "void",
    "comment" : "\n     * This method is called when the camera device has started capturing\n     * the output image for the request, at the beginning of image exposure.\n     *\n     * @see android.media.MediaActionSound\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onReadoutStarted(CameraDevice camera, CaptureRequest request, long timestamp, long frameNumber)",
    "returnType" : "void",
    "comment" : "\n     * This method is called when the camera device has started reading out the output\n     * image for the request, at the beginning of the sensor image readout.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCapturePartial(CameraDevice camera, CaptureRequest request, CaptureResult result)",
    "returnType" : "void",
    "comment" : "\n     * This method is called when some results from an image capture are\n     * available.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCaptureProgressed(CameraDevice camera, CaptureRequest request, CaptureResult partialResult)",
    "returnType" : "void",
    "comment" : "\n     * This method is called when an image capture makes partial forward progress; some\n     * (but not all) results from an image capture are available.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCaptureCompleted(CameraDevice camera, CaptureRequest request, TotalCaptureResult result)",
    "returnType" : "void",
    "comment" : "\n     * This method is called when an image capture has fully completed and all the\n     * result metadata is available.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCaptureFailed(CameraDevice camera, CaptureRequest request, CaptureFailure failure)",
    "returnType" : "void",
    "comment" : "\n     * This method is called instead of {@link #onCaptureCompleted} when the\n     * camera device failed to produce a {@link CaptureResult} for the\n     * request.\n     ",
    "links" : [ "#onCaptureCompleted", "android.hardware.camera2.CaptureResult" ]
  }, {
    "name" : "public abstract void onCaptureSequenceCompleted(CameraDevice camera, int sequenceId, long frameNumber)",
    "returnType" : "void",
    "comment" : "\n     * This method is called independently of the others in CaptureCallback,\n     * when a capture sequence finishes and all {@link CaptureResult}\n     * or {@link CaptureFailure} for it have been returned via this callback.\n     ",
    "links" : [ "android.hardware.camera2.CaptureResult", "android.hardware.camera2.CaptureFailure" ]
  }, {
    "name" : "public abstract void onCaptureSequenceAborted(CameraDevice camera, int sequenceId)",
    "returnType" : "void",
    "comment" : "\n     * This method is called independently of the others in CaptureCallback,\n     * when a capture sequence aborts before any {@link CaptureResult}\n     * or {@link CaptureFailure} for it have been returned via this callback.\n     ",
    "links" : [ "android.hardware.camera2.CaptureResult", "android.hardware.camera2.CaptureFailure" ]
  }, {
    "name" : "public abstract void onCaptureBufferLost(CameraDevice camera, CaptureRequest request, Surface target, long frameNumber)",
    "returnType" : "void",
    "comment" : "\n     * This method is called independently of the others in CaptureCallback, if an output buffer\n     * is dropped for a particular capture request.\n     *\n     * Loss of metadata is communicated via onCaptureFailed, independently of any buffer loss.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Executor getExecutor()", "public CameraCaptureSession.CaptureCallback getSessionCallback()", "public abstract void onCaptureStarted(CameraDevice camera, CaptureRequest request, long timestamp, long frameNumber)", "public abstract void onReadoutStarted(CameraDevice camera, CaptureRequest request, long timestamp, long frameNumber)", "public abstract void onCapturePartial(CameraDevice camera, CaptureRequest request, CaptureResult result)", "public abstract void onCaptureProgressed(CameraDevice camera, CaptureRequest request, CaptureResult partialResult)", "public abstract void onCaptureCompleted(CameraDevice camera, CaptureRequest request, TotalCaptureResult result)", "public abstract void onCaptureFailed(CameraDevice camera, CaptureRequest request, CaptureFailure failure)", "public abstract void onCaptureSequenceCompleted(CameraDevice camera, int sequenceId, long frameNumber)", "public abstract void onCaptureSequenceAborted(CameraDevice camera, int sequenceId)", "public abstract void onCaptureBufferLost(CameraDevice camera, CaptureRequest request, Surface target, long frameNumber)" ],
  "variableNames" : [ "mExecutor", "mCallback" ]
}