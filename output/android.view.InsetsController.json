{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/InsetsController.java",
  "packageName" : "android.view",
  "className" : "InsetsController",
  "comment" : "\n * Implements {@link WindowInsetsController} on the client.\n * @hide\n ",
  "links" : [ "android.view.WindowInsetsController" ],
  "variables" : [ {
    "name" : "mTypesBeingCancelled",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_DURATION_MOVE_IN_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_DURATION_MOVE_OUT_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_DURATION_FADE_IN_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_DURATION_FADE_OUT_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_DURATION_RESIZE",
    "type" : "int",
    "comment" : " Visible for WindowManagerWrapper ",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_DELAY_DIM_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_DURATION_SYNC_IME_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_DURATION_UNSYNC_IME_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PENDING_CONTROL_TIMEOUT_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYSTEM_BARS_INSETS_INTERPOLATOR",
    "type" : "Interpolator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYSTEM_BARS_ALPHA_INTERPOLATOR",
    "type" : "Interpolator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYSTEM_BARS_DIM_INTERPOLATOR",
    "type" : "Interpolator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYNC_IME_INTERPOLATOR",
    "type" : "Interpolator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LINEAR_OUT_SLOW_IN_INTERPOLATOR",
    "type" : "Interpolator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FAST_OUT_LINEAR_IN_INTERPOLATOR",
    "type" : "Interpolator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESIZE_INTERPOLATOR",
    "type" : "Interpolator",
    "comment" : " Visible for WindowManagerWrapper ",
    "links" : [ ]
  }, {
    "name" : "FLOATING_IME_BOTTOM_INSET_DP",
    "type" : "int",
    "comment" : " The amount IME will move up/down when animating in floating mode. ",
    "links" : [ ]
  }, {
    "name" : "ID_CAPTION_BAR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WARN",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LAYOUT_INSETS_DURING_ANIMATION_SHOWN",
    "type" : "int",
    "comment" : "\n     * Layout mode during insets animation: The views should be laid out as if the changing inset\n     * types are fully shown. Before starting the animation, {@link View#onApplyWindowInsets} will\n     * be called as if the changing insets types are shown, which will result in the views being\n     * laid out as if the insets are fully shown.\n     ",
    "links" : [ "android.view.View#onApplyWindowInsets" ]
  }, {
    "name" : "LAYOUT_INSETS_DURING_ANIMATION_HIDDEN",
    "type" : "int",
    "comment" : "\n     * Layout mode during insets animation: The views should be laid out as if the changing inset\n     * types are fully hidden. Before starting the animation, {@link View#onApplyWindowInsets} will\n     * be called as if the changing insets types are hidden, which will result in the views being\n     * laid out as if the insets are fully hidden.\n     ",
    "links" : [ "android.view.View#onApplyWindowInsets" ]
  }, {
    "name" : "ANIMATION_TYPE_NONE",
    "type" : "int",
    "comment" : " Not running an animation. ",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_TYPE_SHOW",
    "type" : "int",
    "comment" : " Running animation will show insets ",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_TYPE_HIDE",
    "type" : "int",
    "comment" : " Running animation will hide insets ",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_TYPE_USER",
    "type" : "int",
    "comment" : " Running animation is controlled by user via {@link #controlWindowInsetsAnimation} ",
    "links" : [ "#controlWindowInsetsAnimation" ]
  }, {
    "name" : "ANIMATION_TYPE_RESIZE",
    "type" : "int",
    "comment" : " Running animation will resize insets ",
    "links" : [ ]
  }, {
    "name" : "sEvaluator",
    "type" : "TypeEvaluator<Insets>",
    "comment" : "\n     * Translation animation evaluator.\n     ",
    "links" : [ ]
  }, {
    "name" : "mLoggingListener",
    "type" : "WindowInsetsAnimationControlListener",
    "comment" : " Logging listener. ",
    "links" : [ ]
  }, {
    "name" : "mJankContext",
    "type" : "InputMethodJankContext",
    "comment" : " Context for {@link android.view.inputmethod.ImeTracker.ImeJankTracker} to monitor jank. ",
    "links" : [ "android.view.inputmethod.ImeTracker.ImeJankTracker" ]
  }, {
    "name" : "mState",
    "type" : "InsetsState",
    "comment" : " The local state ",
    "links" : [ ]
  }, {
    "name" : "mLastDispatchedState",
    "type" : "InsetsState",
    "comment" : " The state dispatched from server ",
    "links" : [ ]
  }, {
    "name" : "mFrame",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConsumerCreator",
    "type" : "TriFunction<InsetsController, Integer, Integer, InsetsSourceConsumer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSourceConsumers",
    "type" : "SparseArray<InsetsSourceConsumer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImeSourceConsumer",
    "type" : "InsetsSourceConsumer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHost",
    "type" : "Host",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmpControlArray",
    "type" : "SparseArray<InsetsSourceControl>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRunningAnimations",
    "type" : "ArrayList<RunningAnimation>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastInsets",
    "type" : "WindowInsets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimCallbackScheduled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimCallback",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingImeControlRequest",
    "type" : "PendingControlRequest",
    "comment" : " Pending control request that is waiting on IME to be ready to be shown ",
    "links" : [ ]
  }, {
    "name" : "mWindowType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastLegacySoftInputMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastLegacyWindowFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastLegacySystemUiFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastActivityType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartingAnimation",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCaptionInsetsHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImeCaptionBarInsetsHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimationsDisabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCompatSysUiVisibilityStaled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppearanceControlled",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppearanceFromResource",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBehaviorControlled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsPredictiveBackImeHideAnimInProgress",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingControlTimeout",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControllableInsetsChangedListeners",
    "type" : "ArrayList<OnControllableInsetsChangedListener>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastStartedAnimTypes",
    "type" : "int",
    "comment" : " Set of inset types for which an animation was started since last resetting this field ",
    "links" : [ ]
  }, {
    "name" : "mExistingTypes",
    "type" : "int",
    "comment" : " Set of inset types which are existing ",
    "links" : [ ]
  }, {
    "name" : "mVisibleTypes",
    "type" : "int",
    "comment" : " Set of inset types which are visible ",
    "links" : [ ]
  }, {
    "name" : "mRequestedVisibleTypes",
    "type" : "int",
    "comment" : " Set of inset types which are requested visible ",
    "links" : [ ]
  }, {
    "name" : "mReportedRequestedVisibleTypes",
    "type" : "int",
    "comment" : " Set of inset types which are requested visible which are reported to the host ",
    "links" : [ ]
  }, {
    "name" : "mControllableTypes",
    "type" : "int",
    "comment" : " Set of inset types that we have controls of ",
    "links" : [ ]
  }, {
    "name" : "mInvokeControllableInsetsChangedListeners",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRemoveGoneSources",
    "type" : "InsetsState.OnTraverseCallbacks",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartResizingAnimationIfNeeded",
    "type" : "InsetsState.OnTraverseCallbacks",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onFrameChanged(Rect frame)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InsetsState getState()",
    "returnType" : "InsetsState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getRequestedVisibleTypes()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InsetsState getLastDispatchedState()",
    "returnType" : "InsetsState",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onStateChanged(InsetsState state)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateState(InsetsState newState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WindowInsets calculateInsets(boolean isScreenRound, int windowType, int activityType, int legacySoftInputMode, int legacyWindowFlags, int legacySystemUiFlags)",
    "returnType" : "WindowInsets",
    "comment" : "\n     * @see InsetsState#calculateInsets(Rect, InsetsState, boolean, int, int, int, int, int,\n     *      android.util.SparseIntArray)\n     ",
    "links" : [ ]
  }, {
    "name" : "public Insets calculateVisibleInsets(int windowType, int activityType, @SoftInputModeFlags int softInputMode, int windowFlags)",
    "returnType" : "Insets",
    "comment" : "\n     * @see InsetsState#calculateVisibleInsets(Rect, int, int, int, int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onControlsChanged(InsetsSourceControl[] activeControls)",
    "returnType" : "void",
    "comment" : "\n     * Called when the server has dispatched us a new set of inset controls.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setPredictiveBackImeHideAnimInProgress(boolean isInProgress)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isPredictiveBackImeHideAnimInProgress()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void show(@InsetsType int types)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void show(@InsetsType int types, boolean fromIme, @Nullable ImeTracker.Token statsToken)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handlePendingControlRequest(@Nullable ImeTracker.Token statsToken)",
    "returnType" : "void",
    "comment" : "\n     * Handle the {@link #mPendingImeControlRequest} when:\n     * <ul>\n     *     <li> The IME insets is ready to show.\n     *     <li> The IME insets has being requested invisible.\n     * </ul>\n     ",
    "links" : [ "#mPendingImeControlRequest" ]
  }, {
    "name" : "public void hide(@InsetsType int types)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void hide(@InsetsType int types, boolean fromIme, @Nullable ImeTracker.Token statsToken)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void controlWindowInsetsAnimation(@InsetsType int types, long durationMillis, @Nullable Interpolator interpolator, @Nullable CancellationSignal cancellationSignal, @NonNull WindowInsetsAnimationControlListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void controlWindowInsetsAnimation(@InsetsType int types, @Nullable CancellationSignal cancellationSignal, WindowInsetsAnimationControlListener listener, boolean fromIme, long durationMs, @Nullable Interpolator interpolator, @AnimationType int animationType, boolean fromPredictiveBack)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void controlAnimationUnchecked(@InsetsType int types, @Nullable CancellationSignal cancellationSignal, WindowInsetsAnimationControlListener listener, @Nullable Rect frame, boolean fromIme, long durationMs, Interpolator interpolator, @AnimationType int animationType, @LayoutInsetsDuringAnimation int layoutInsetsDuringAnimation, boolean useInsetsAnimationThread, @Nullable ImeTracker.Token statsToken)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void controlAnimationUncheckedInner(@InsetsType int types, @Nullable CancellationSignal cancellationSignal, WindowInsetsAnimationControlListener listener, @Nullable Rect frame, boolean fromIme, long durationMs, Interpolator interpolator, @AnimationType int animationType, @LayoutInsetsDuringAnimation int layoutInsetsDuringAnimation, boolean useInsetsAnimationThread, @Nullable ImeTracker.Token statsToken)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void releaseControls(SparseArray<InsetsSourceControl> controls)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSystemDrivenInsetsAnimationLoggingListener(@Nullable WindowInsetsAnimationControlListener listener)",
    "returnType" : "void",
    "comment" : " TODO(b/242962223): Make this setter restrictive.",
    "links" : [ ]
  }, {
    "name" : "private Pair<Integer, Boolean> collectSourceControls(boolean fromIme, @InsetsType int types, SparseArray<InsetsSourceControl> controls, @AnimationType int animationType, @Nullable ImeTracker.Token statsToken)",
    "returnType" : "Pair<Integer, Boolean>",
    "comment" : "\n     * @return Pair of (types ready to animate, IME ready to animate).\n     ",
    "links" : [ ]
  }, {
    "name" : "private int getLayoutInsetsDuringAnimationMode(@InsetsType int types, boolean fromPredictiveBack)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void cancelExistingControllers(@InsetsType int types)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void abortPendingImeControlRequest()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyFinished(InsetsAnimationControlRunner runner, boolean shown)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void applySurfaceParams(final SyncRtSurfaceTransactionApplier.SurfaceParams... params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void notifyControlRevoked(InsetsSourceConsumer consumer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void cancelAnimation(InsetsAnimationControlRunner control, boolean invokeCallback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onAnimationStateChanged(@InsetsType int types, boolean running)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void applyLocalVisibilityOverride()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InsetsSourceConsumer getSourceConsumer(int id, int type)",
    "returnType" : "InsetsSourceConsumer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InsetsSourceConsumer getImeSourceConsumer()",
    "returnType" : "InsetsSourceConsumer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void notifyVisibilityChanged()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateCompatSysUiVisibility()",
    "returnType" : "void",
    "comment" : "\n     * @see ViewRootImpl#updateCompatSysUiVisibility(int, int, int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onWindowFocusGained(boolean hasViewFocused)",
    "returnType" : "void",
    "comment" : "\n     * Called when current window gains focus.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onWindowFocusLost()",
    "returnType" : "void",
    "comment" : "\n     * Called when current window loses focus.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAnimationType(@InsetsType int type)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRequestedVisibleTypes(@InsetsType int visibleTypes, @InsetsType int mask)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void reportRequestedVisibleTypes()",
    "returnType" : "void",
    "comment" : "\n     * Called when finishing setting requested visible types or finishing setting controls.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void applyAnimation(@InsetsType final int types, boolean show, boolean fromIme, @Nullable ImeTracker.Token statsToken)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void applyAnimation(@InsetsType final int types, boolean show, boolean fromIme, boolean skipAnim, @Nullable ImeTracker.Token statsToken)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancelExistingAnimations()",
    "returnType" : "void",
    "comment" : "\n     * Cancel on-going animation to show/hide {@link InsetsType}.\n     ",
    "links" : [ "android.view.WindowInsets.Type.InsetsType" ]
  }, {
    "name" : " void dump(String prefix, PrintWriter pw)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void dumpDebug(ProtoOutputStream proto, long fieldId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startAnimation(T runner, WindowInsetsAnimationControlListener listener, int types, WindowInsetsAnimation animation, Bounds bounds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dispatchAnimationEnd(WindowInsetsAnimation animation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void scheduleApplyChangeInsets(InsetsAnimationControlRunner runner)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSystemBarsAppearance(@Appearance int appearance, @Appearance int mask)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSystemBarsAppearanceFromResource(@Appearance int appearance, @Appearance int mask)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSystemBarsAppearance()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getAppearanceControlled()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setImeCaptionBarInsetsHeight(int height)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSystemBarsBehavior(@Behavior int behavior)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSystemBarsBehavior()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isBehaviorControlled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAnimationsDisabled(boolean disable)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int calculateControllableTypes()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int invokeControllableInsetsChangedListeners()",
    "returnType" : "int",
    "comment" : "\n     * @return The types that are now animating due to a listener invoking control/show/hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addOnControllableInsetsChangedListener(OnControllableInsetsChangedListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeOnControllableInsetsChangedListener(OnControllableInsetsChangedListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void releaseSurfaceControlFromRt(SurfaceControl sc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void reportPerceptible(@InsetsType int types, boolean perceptible)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Host getHost()",
    "returnType" : "Host",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onFrameChanged(Rect frame)", "public InsetsState getState()", "public int getRequestedVisibleTypes()", "public InsetsState getLastDispatchedState()", "public boolean onStateChanged(InsetsState state)", "private void updateState(InsetsState newState)", "public WindowInsets calculateInsets(boolean isScreenRound, int windowType, int activityType, int legacySoftInputMode, int legacyWindowFlags, int legacySystemUiFlags)", "public Insets calculateVisibleInsets(int windowType, int activityType, @SoftInputModeFlags int softInputMode, int windowFlags)", "public void onControlsChanged(InsetsSourceControl[] activeControls)", "public void setPredictiveBackImeHideAnimInProgress(boolean isInProgress)", " boolean isPredictiveBackImeHideAnimInProgress()", "public void show(@InsetsType int types)", "public void show(@InsetsType int types, boolean fromIme, @Nullable ImeTracker.Token statsToken)", "private void handlePendingControlRequest(@Nullable ImeTracker.Token statsToken)", "public void hide(@InsetsType int types)", "public void hide(@InsetsType int types, boolean fromIme, @Nullable ImeTracker.Token statsToken)", "public void controlWindowInsetsAnimation(@InsetsType int types, long durationMillis, @Nullable Interpolator interpolator, @Nullable CancellationSignal cancellationSignal, @NonNull WindowInsetsAnimationControlListener listener)", "public void controlWindowInsetsAnimation(@InsetsType int types, @Nullable CancellationSignal cancellationSignal, WindowInsetsAnimationControlListener listener, boolean fromIme, long durationMs, @Nullable Interpolator interpolator, @AnimationType int animationType, boolean fromPredictiveBack)", "private void controlAnimationUnchecked(@InsetsType int types, @Nullable CancellationSignal cancellationSignal, WindowInsetsAnimationControlListener listener, @Nullable Rect frame, boolean fromIme, long durationMs, Interpolator interpolator, @AnimationType int animationType, @LayoutInsetsDuringAnimation int layoutInsetsDuringAnimation, boolean useInsetsAnimationThread, @Nullable ImeTracker.Token statsToken)", "private void controlAnimationUncheckedInner(@InsetsType int types, @Nullable CancellationSignal cancellationSignal, WindowInsetsAnimationControlListener listener, @Nullable Rect frame, boolean fromIme, long durationMs, Interpolator interpolator, @AnimationType int animationType, @LayoutInsetsDuringAnimation int layoutInsetsDuringAnimation, boolean useInsetsAnimationThread, @Nullable ImeTracker.Token statsToken)", " static void releaseControls(SparseArray<InsetsSourceControl> controls)", "public void setSystemDrivenInsetsAnimationLoggingListener(@Nullable WindowInsetsAnimationControlListener listener)", "private Pair<Integer, Boolean> collectSourceControls(boolean fromIme, @InsetsType int types, SparseArray<InsetsSourceControl> controls, @AnimationType int animationType, @Nullable ImeTracker.Token statsToken)", "private int getLayoutInsetsDuringAnimationMode(@InsetsType int types, boolean fromPredictiveBack)", "private void cancelExistingControllers(@InsetsType int types)", "private void abortPendingImeControlRequest()", "public void notifyFinished(InsetsAnimationControlRunner runner, boolean shown)", "public void applySurfaceParams(final SyncRtSurfaceTransactionApplier.SurfaceParams... params)", " void notifyControlRevoked(InsetsSourceConsumer consumer)", "private void cancelAnimation(InsetsAnimationControlRunner control, boolean invokeCallback)", " void onAnimationStateChanged(@InsetsType int types, boolean running)", "private void applyLocalVisibilityOverride()", "public InsetsSourceConsumer getSourceConsumer(int id, int type)", "public InsetsSourceConsumer getImeSourceConsumer()", " void notifyVisibilityChanged()", "public void updateCompatSysUiVisibility()", "public void onWindowFocusGained(boolean hasViewFocused)", "public void onWindowFocusLost()", "public int getAnimationType(@InsetsType int type)", "public void setRequestedVisibleTypes(@InsetsType int visibleTypes, @InsetsType int mask)", "private void reportRequestedVisibleTypes()", "public void applyAnimation(@InsetsType final int types, boolean show, boolean fromIme, @Nullable ImeTracker.Token statsToken)", "public void applyAnimation(@InsetsType final int types, boolean show, boolean fromIme, boolean skipAnim, @Nullable ImeTracker.Token statsToken)", "public void cancelExistingAnimations()", " void dump(String prefix, PrintWriter pw)", " void dumpDebug(ProtoOutputStream proto, long fieldId)", "public void startAnimation(T runner, WindowInsetsAnimationControlListener listener, int types, WindowInsetsAnimation animation, Bounds bounds)", "public void dispatchAnimationEnd(WindowInsetsAnimation animation)", "public void scheduleApplyChangeInsets(InsetsAnimationControlRunner runner)", "public void setSystemBarsAppearance(@Appearance int appearance, @Appearance int mask)", "public void setSystemBarsAppearanceFromResource(@Appearance int appearance, @Appearance int mask)", "public int getSystemBarsAppearance()", "public int getAppearanceControlled()", "public void setImeCaptionBarInsetsHeight(int height)", "public void setSystemBarsBehavior(@Behavior int behavior)", "public int getSystemBarsBehavior()", "public boolean isBehaviorControlled()", "public void setAnimationsDisabled(boolean disable)", "private int calculateControllableTypes()", "private int invokeControllableInsetsChangedListeners()", "public void addOnControllableInsetsChangedListener(OnControllableInsetsChangedListener listener)", "public void removeOnControllableInsetsChangedListener(OnControllableInsetsChangedListener listener)", "public void releaseSurfaceControlFromRt(SurfaceControl sc)", "public void reportPerceptible(@InsetsType int types, boolean perceptible)", "public Host getHost()" ],
  "variableNames" : [ "mTypesBeingCancelled", "TAG", "ANIMATION_DURATION_MOVE_IN_MS", "ANIMATION_DURATION_MOVE_OUT_MS", "ANIMATION_DURATION_FADE_IN_MS", "ANIMATION_DURATION_FADE_OUT_MS", "ANIMATION_DURATION_RESIZE", "ANIMATION_DELAY_DIM_MS", "ANIMATION_DURATION_SYNC_IME_MS", "ANIMATION_DURATION_UNSYNC_IME_MS", "PENDING_CONTROL_TIMEOUT_MS", "SYSTEM_BARS_INSETS_INTERPOLATOR", "SYSTEM_BARS_ALPHA_INTERPOLATOR", "SYSTEM_BARS_DIM_INTERPOLATOR", "SYNC_IME_INTERPOLATOR", "LINEAR_OUT_SLOW_IN_INTERPOLATOR", "FAST_OUT_LINEAR_IN_INTERPOLATOR", "RESIZE_INTERPOLATOR", "FLOATING_IME_BOTTOM_INSET_DP", "ID_CAPTION_BAR", "DEBUG", "WARN", "LAYOUT_INSETS_DURING_ANIMATION_SHOWN", "LAYOUT_INSETS_DURING_ANIMATION_HIDDEN", "ANIMATION_TYPE_NONE", "ANIMATION_TYPE_SHOW", "ANIMATION_TYPE_HIDE", "ANIMATION_TYPE_USER", "ANIMATION_TYPE_RESIZE", "sEvaluator", "mLoggingListener", "mJankContext", "mState", "mLastDispatchedState", "mFrame", "mConsumerCreator", "mSourceConsumers", "mImeSourceConsumer", "mHost", "mHandler", "mTmpControlArray", "mRunningAnimations", "mLastInsets", "mAnimCallbackScheduled", "mAnimCallback", "mPendingImeControlRequest", "mWindowType", "mLastLegacySoftInputMode", "mLastLegacyWindowFlags", "mLastLegacySystemUiFlags", "mLastActivityType", "mStartingAnimation", "mCaptionInsetsHeight", "mImeCaptionBarInsetsHeight", "mAnimationsDisabled", "mCompatSysUiVisibilityStaled", "mAppearanceControlled", "mAppearanceFromResource", "mBehaviorControlled", "mIsPredictiveBackImeHideAnimInProgress", "mPendingControlTimeout", "mControllableInsetsChangedListeners", "mLastStartedAnimTypes", "mExistingTypes", "mVisibleTypes", "mRequestedVisibleTypes", "mReportedRequestedVisibleTypes", "mControllableTypes", "mInvokeControllableInsetsChangedListeners", "mRemoveGoneSources", "mStartResizingAnimationIfNeeded" ]
}