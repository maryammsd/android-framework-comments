{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/DateNumberFormat.java",
  "packageName" : "android.icu.impl",
  "className" : "DateNumberFormat",
  "comment" : "\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "digits",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "zeroDigit",
    "type" : "char",
    "comment" : " For backwards compatibility",
    "links" : [ ]
  }, {
    "name" : "minusSign",
    "type" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "positiveOnly",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DECIMAL_BUF_SIZE",
    "type" : "int",
    "comment" : " 20 digits is good enough to store Long.MAX_VALUE",
    "links" : [ ]
  }, {
    "name" : "decimalBuf",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CACHE",
    "type" : "SimpleCache<ULocale, char[]>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "maxIntDigits",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "minIntDigits",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PARSE_THRESHOLD",
    "type" : "long",
    "comment" : " (Long.MAX_VALUE / 10) - 1",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void initialize(ULocale loc, String digitString, String nsName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMaximumIntegerDigits(int newValue)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaximumIntegerDigits()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMinimumIntegerDigits(int newValue)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMinimumIntegerDigits()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setParsePositiveOnly(boolean isPositiveOnly)",
    "returnType" : "void",
    "comment" : " For supporting SimpleDateFormat.parseInt ",
    "links" : [ ]
  }, {
    "name" : "public char getZeroDigit()",
    "returnType" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setZeroDigit(char zero)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public char[] getDigits()",
    "returnType" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos)",
    "returnType" : "StringBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuffer format(long numberL, StringBuffer toAppendTo, FieldPosition pos)",
    "returnType" : "StringBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuffer format(BigInteger number, StringBuffer toAppendTo, FieldPosition pos)",
    "returnType" : "StringBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuffer format(java.math.BigDecimal number, StringBuffer toAppendTo, FieldPosition pos)",
    "returnType" : "StringBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuffer format(BigDecimal number, StringBuffer toAppendTo, FieldPosition pos)",
    "returnType" : "StringBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Number parse(String text, ParsePosition parsePosition)",
    "returnType" : "Number",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void initialize(ULocale loc, String digitString, String nsName)", "public void setMaximumIntegerDigits(int newValue)", "public int getMaximumIntegerDigits()", "public void setMinimumIntegerDigits(int newValue)", "public int getMinimumIntegerDigits()", "public void setParsePositiveOnly(boolean isPositiveOnly)", "public char getZeroDigit()", "public void setZeroDigit(char zero)", "public char[] getDigits()", "public StringBuffer format(double number, StringBuffer toAppendTo, FieldPosition pos)", "public StringBuffer format(long numberL, StringBuffer toAppendTo, FieldPosition pos)", "public StringBuffer format(BigInteger number, StringBuffer toAppendTo, FieldPosition pos)", "public StringBuffer format(java.math.BigDecimal number, StringBuffer toAppendTo, FieldPosition pos)", "public StringBuffer format(BigDecimal number, StringBuffer toAppendTo, FieldPosition pos)", "public Number parse(String text, ParsePosition parsePosition)", "public boolean equals(Object obj)", "public int hashCode()", "private void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException", "public Object clone()" ],
  "variableNames" : [ "serialVersionUID", "digits", "zeroDigit", "minusSign", "positiveOnly", "DECIMAL_BUF_SIZE", "decimalBuf", "CACHE", "maxIntDigits", "minIntDigits", "PARSE_THRESHOLD" ]
}