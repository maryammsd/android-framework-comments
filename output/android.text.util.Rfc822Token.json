{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/util/Rfc822Token.java",
  "packageName" : "android.text.util",
  "className" : "Rfc822Token",
  "comment" : "\n * This class stores an RFC 822-like name, address, and comment,\n * and provides methods to convert them to quoted strings.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAddress",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mComment",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name part.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getAddress()",
    "returnType" : "String",
    "comment" : "\n     * Returns the address part.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getComment()",
    "returnType" : "String",
    "comment" : "\n     * Returns the comment part.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setName(@Nullable String name)",
    "returnType" : "void",
    "comment" : "\n     * Changes the name to the specified name.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAddress(@Nullable String address)",
    "returnType" : "void",
    "comment" : "\n     * Changes the address to the specified address.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setComment(@Nullable String comment)",
    "returnType" : "void",
    "comment" : "\n     * Changes the comment to the specified comment.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name (with quoting added if necessary),\n     * the comment (in parentheses), and the address (in angle brackets).\n     * This should be suitable for inclusion in an RFC 822 address list.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String quoteNameIfNecessary(String name)",
    "returnType" : "String",
    "comment" : "\n     * Returns the name, conservatively quoting it if there are any\n     * characters that are likely to cause trouble outside of a\n     * quoted string, or returning it literally if it seems safe.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String quoteName(String name)",
    "returnType" : "String",
    "comment" : "\n     * Returns the name, with internal backslashes and quotation marks\n     * preceded by backslashes.  The outer quote marks themselves are not\n     * added by this method.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String quoteComment(String comment)",
    "returnType" : "String",
    "comment" : "\n     * Returns the comment, with internal backslashes and parentheses\n     * preceded by backslashes.  The outer parentheses themselves are\n     * not added by this method.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean stringEquals(String a, String b)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getName()", "public String getAddress()", "public String getComment()", "public void setName(@Nullable String name)", "public void setAddress(@Nullable String address)", "public void setComment(@Nullable String comment)", "public String toString()", "public static String quoteNameIfNecessary(String name)", "public static String quoteName(String name)", "public static String quoteComment(String comment)", "public int hashCode()", "private static boolean stringEquals(String a, String b)", "public boolean equals(@Nullable Object o)" ],
  "variableNames" : [ "mName", "mAddress", "mComment" ]
}