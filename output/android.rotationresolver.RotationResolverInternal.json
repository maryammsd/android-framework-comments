{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/rotationresolver/RotationResolverInternal.java",
  "packageName" : "android.rotationresolver",
  "className" : "RotationResolverInternal",
  "comment" : "\n * Internal service for resolving screen rotation.\n *\n * @hide Only for use within the system server.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract boolean isRotationResolverSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if rotation resolver service is supported on the current device.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void resolveRotation(@NonNull RotationResolverCallbackInternal callback, String packageName, @Surface.Rotation int proposedRotation, @Surface.Rotation int currentRotation, @DurationMillisLong long timeoutMillis, @NonNull CancellationSignal cancellationSignal)",
    "returnType" : "void",
    "comment" : "\n     * Queries the appropriate screen orientation.\n     *\n     * <p> The screen rotation that's proposed by the system may not be accurate enough. This method\n     * is available for the system to request a screen rotation resolution from the {@link\n     * RotationResolverService}, which can intelligently determine the appropriate screen rotation\n     * based on various sensors.\n     *\n     * @param callback the callback that will be called when the result is computed or an\n     *                 error is captured. {@link RotationResolverCallbackInternal}\n     * @param packageName the package name of the fore ground activity.\n     * @param proposedRotation the screen rotation that is proposed by the system.\n     * @param currentRotation the current screen rotation.\n     * @param timeoutMillis the timeout in millisecond for the query. If the query doesn't get\n     *                      fulfilled within this amount of time. It will be discarded and the\n     *                      callback will receive a failure result code {@link\n     *                      RotationResolverService#ROTATION_RESULT_FAILURE_TIMED_OUT}.\n     * @param cancellationSignal a cancellation signal that notifies the rotation resolver manger\n     ",
    "links" : [ "android.service.rotationresolver.RotationResolverService", "RotationResolverCallbackInternal", "android.service.rotationresolver.RotationResolverService#ROTATION_RESULT_FAILURE_TIMED_OUT" ]
  } ],
  "methodNames" : [ "public abstract boolean isRotationResolverSupported()", "public abstract void resolveRotation(@NonNull RotationResolverCallbackInternal callback, String packageName, @Surface.Rotation int proposedRotation, @Surface.Rotation int currentRotation, @DurationMillisLong long timeoutMillis, @NonNull CancellationSignal cancellationSignal)" ],
  "variableNames" : [ ]
}