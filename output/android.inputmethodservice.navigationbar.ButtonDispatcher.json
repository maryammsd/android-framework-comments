{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/inputmethodservice/navigationbar/ButtonDispatcher.java",
  "packageName" : "android.inputmethodservice.navigationbar",
  "className" : "ButtonDispatcher",
  "comment" : "\n * Dispatches common view calls to multiple views.  This is used to handle\n * multiples of the same nav bar icon appearing.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "FADE_DURATION_IN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FADE_DURATION_OUT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LINEAR",
    "type" : "Interpolator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mViews",
    "type" : "ArrayList<View>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClickListener",
    "type" : "View.OnClickListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTouchListener",
    "type" : "View.OnTouchListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLongClickListener",
    "type" : "View.OnLongClickListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnHoverListener",
    "type" : "View.OnHoverListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLongClickable",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAlpha",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDarkIntensity",
    "type" : "Float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVisibility",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDelayTouchFeedback",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImageDrawable",
    "type" : "KeyButtonDrawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentView",
    "type" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFadeAnimator",
    "type" : "ValueAnimator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccessibilityDelegate",
    "type" : "AccessibilityDelegate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAlphaListener",
    "type" : "ValueAnimator.AnimatorUpdateListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFadeListener",
    "type" : "AnimatorListenerAdapter",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addView(View view)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getVisibility()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isVisible()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getAlpha()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public KeyButtonDrawable getImageDrawable()",
    "returnType" : "KeyButtonDrawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setImageDrawable(KeyButtonDrawable drawable)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setVisibility(int visibility)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAlpha(float alpha)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAlpha(float alpha, boolean animate)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAlpha(float alpha, boolean animate, long duration)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAlpha(float alpha, boolean animate, boolean cancelAnimator)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAlpha(float alpha, boolean animate, long duration, boolean cancelAnimator)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDarkIntensity(float darkIntensity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDelayTouchFeedback(boolean delay)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOnClickListener(View.OnClickListener clickListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOnTouchListener(View.OnTouchListener touchListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setLongClickable(boolean isLongClickable)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOnLongClickListener(View.OnLongClickListener longClickListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOnHoverListener(View.OnHoverListener hoverListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAccessibilityDelegate(AccessibilityDelegate delegate)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTranslation(int x, int y, int z)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ArrayList<View> getViews()",
    "returnType" : "ArrayList<View>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View getCurrentView()",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCurrentView(View currentView)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDestroy()",
    "returnType" : "void",
    "comment" : "\n     * Executes when button is detached from window.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void clear()", "public void addView(View view)", "public int getId()", "public int getVisibility()", "public boolean isVisible()", "public float getAlpha()", "public KeyButtonDrawable getImageDrawable()", "public void setImageDrawable(KeyButtonDrawable drawable)", "public void setVisibility(int visibility)", "public void setAlpha(float alpha)", "public void setAlpha(float alpha, boolean animate)", "public void setAlpha(float alpha, boolean animate, long duration)", "public void setAlpha(float alpha, boolean animate, boolean cancelAnimator)", "public void setAlpha(float alpha, boolean animate, long duration, boolean cancelAnimator)", "public void setDarkIntensity(float darkIntensity)", "public void setDelayTouchFeedback(boolean delay)", "public void setOnClickListener(View.OnClickListener clickListener)", "public void setOnTouchListener(View.OnTouchListener touchListener)", "public void setLongClickable(boolean isLongClickable)", "public void setOnLongClickListener(View.OnLongClickListener longClickListener)", "public void setOnHoverListener(View.OnHoverListener hoverListener)", "public void setAccessibilityDelegate(AccessibilityDelegate delegate)", "public void setTranslation(int x, int y, int z)", "public ArrayList<View> getViews()", "public View getCurrentView()", "public void setCurrentView(View currentView)", "public void onDestroy()" ],
  "variableNames" : [ "FADE_DURATION_IN", "FADE_DURATION_OUT", "LINEAR", "mViews", "mId", "mClickListener", "mTouchListener", "mLongClickListener", "mOnHoverListener", "mLongClickable", "mAlpha", "mDarkIntensity", "mVisibility", "mDelayTouchFeedback", "mImageDrawable", "mCurrentView", "mFadeAnimator", "mAccessibilityDelegate", "mAlphaListener", "mFadeListener" ]
}