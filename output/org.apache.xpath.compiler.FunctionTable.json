{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/compiler/FunctionTable.java",
  "packageName" : "org.apache.xpath.compiler",
  "className" : "FunctionTable",
  "comment" : "\n * The function table for XPath.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "FUNC_CURRENT",
    "type" : "int",
    "comment" : " The 'current()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_LAST",
    "type" : "int",
    "comment" : " The 'last()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_POSITION",
    "type" : "int",
    "comment" : " The 'position()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_COUNT",
    "type" : "int",
    "comment" : " The 'count()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_ID",
    "type" : "int",
    "comment" : " The 'id()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_KEY",
    "type" : "int",
    "comment" : " The 'key()' id (XSLT). ",
    "links" : [ ]
  }, {
    "name" : "FUNC_LOCAL_PART",
    "type" : "int",
    "comment" : " The 'local-name()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_NAMESPACE",
    "type" : "int",
    "comment" : " The 'namespace-uri()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_QNAME",
    "type" : "int",
    "comment" : " The 'name()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_GENERATE_ID",
    "type" : "int",
    "comment" : " The 'generate-id()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_NOT",
    "type" : "int",
    "comment" : " The 'not()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_TRUE",
    "type" : "int",
    "comment" : " The 'true()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_FALSE",
    "type" : "int",
    "comment" : " The 'false()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_BOOLEAN",
    "type" : "int",
    "comment" : " The 'boolean()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_NUMBER",
    "type" : "int",
    "comment" : " The 'number()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_FLOOR",
    "type" : "int",
    "comment" : " The 'floor()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_CEILING",
    "type" : "int",
    "comment" : " The 'ceiling()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_ROUND",
    "type" : "int",
    "comment" : " The 'round()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_SUM",
    "type" : "int",
    "comment" : " The 'sum()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_STRING",
    "type" : "int",
    "comment" : " The 'string()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_STARTS_WITH",
    "type" : "int",
    "comment" : " The 'starts-with()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_CONTAINS",
    "type" : "int",
    "comment" : " The 'contains()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_SUBSTRING_BEFORE",
    "type" : "int",
    "comment" : " The 'substring-before()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_SUBSTRING_AFTER",
    "type" : "int",
    "comment" : " The 'substring-after()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_NORMALIZE_SPACE",
    "type" : "int",
    "comment" : " The 'normalize-space()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_TRANSLATE",
    "type" : "int",
    "comment" : " The 'translate()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_CONCAT",
    "type" : "int",
    "comment" : " The 'concat()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_SUBSTRING",
    "type" : "int",
    "comment" : " The 'substring()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_STRING_LENGTH",
    "type" : "int",
    "comment" : " The 'string-length()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_SYSTEM_PROPERTY",
    "type" : "int",
    "comment" : " The 'system-property()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_LANG",
    "type" : "int",
    "comment" : " The 'lang()' id. ",
    "links" : [ ]
  }, {
    "name" : "FUNC_EXT_FUNCTION_AVAILABLE",
    "type" : "int",
    "comment" : " The 'function-available()' id (XSLT). ",
    "links" : [ ]
  }, {
    "name" : "FUNC_EXT_ELEM_AVAILABLE",
    "type" : "int",
    "comment" : " The 'element-available()' id (XSLT). ",
    "links" : [ ]
  }, {
    "name" : "FUNC_UNPARSED_ENTITY_URI",
    "type" : "int",
    "comment" : " The 'unparsed-entity-uri()' id (XSLT). ",
    "links" : [ ]
  }, {
    "name" : "FUNC_DOCLOCATION",
    "type" : "int",
    "comment" : " The 'document-location()' id (Proprietary). ",
    "links" : [ ]
  }, {
    "name" : "m_functions",
    "type" : "Class[]",
    "comment" : "\n   * The function table.\n   ",
    "links" : [ ]
  }, {
    "name" : "m_functionID",
    "type" : "HashMap",
    "comment" : " Table of function name to function ID associations. ",
    "links" : [ ]
  }, {
    "name" : "m_functions_customer",
    "type" : "Class[]",
    "comment" : "\n   * The function table contains customized functions\n   ",
    "links" : [ ]
  }, {
    "name" : "m_functionID_customer",
    "type" : "HashMap",
    "comment" : "\n   * Table of function name to function ID associations for customized functions\n   ",
    "links" : [ ]
  }, {
    "name" : "NUM_BUILT_IN_FUNCS",
    "type" : "int",
    "comment" : "\n   * Number of built in functions.  Be sure to update this as\n   * built-in functions are added.\n   ",
    "links" : [ ]
  }, {
    "name" : "NUM_ALLOWABLE_ADDINS",
    "type" : "int",
    "comment" : "\n   * Number of built-in functions that may be added.\n   ",
    "links" : [ ]
  }, {
    "name" : "m_funcNextFreeIndex",
    "type" : "int",
    "comment" : "\n   * The index to the next free function index.\n   ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " String getFunctionName(int funcID)",
    "returnType" : "String",
    "comment" : "\n   * Return the name of the a function in the static table. Needed to avoid\n   * making the table publicly available.\n   ",
    "links" : [ ]
  }, {
    "name" : " Function getFunction(int which) throws javax.xml.transform.TransformerException",
    "returnType" : "Function",
    "comment" : "\n   * Obtain a new Function object from a function ID.\n   *\n   * @param which  The function ID, which may correspond to one of the FUNC_XXX \n   *    values found in {@link org.apache.xpath.compiler.FunctionTable}, but may \n   *    be a value installed by an external module. \n   *\n   * @return a a new Function instance.\n   *\n   * @throws javax.xml.transform.TransformerException if ClassNotFoundException, \n   *    IllegalAccessException, or InstantiationException is thrown.\n   ",
    "links" : [ "org.apache.xpath.compiler.FunctionTable" ]
  }, {
    "name" : " Object getFunctionID(String key)",
    "returnType" : "Object",
    "comment" : "\n   * Obtain a function ID from a given function name\n   * @param key the function name in a java.lang.String format.\n   * @return a function ID, which may correspond to one of the FUNC_XXX values\n   * found in {@link org.apache.xpath.compiler.FunctionTable}, but may be a \n   * value installed by an external module.\n   ",
    "links" : [ "org.apache.xpath.compiler.FunctionTable" ]
  }, {
    "name" : "public int installFunction(String name, Class func)",
    "returnType" : "int",
    "comment" : "\n   * Install a built-in function.\n   * @param name The unqualified name of the function, must not be null\n   * @param func A Implementation of an XPath Function object.\n   * @return the position of the function in the internal index.\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean functionAvailable(String methName)",
    "returnType" : "boolean",
    "comment" : "\n   * Tell if a built-in, non-namespaced function is available.\n   *\n   * @param methName The local name of the function.\n   *\n   * @return True if the function can be executed.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ " String getFunctionName(int funcID)", " Function getFunction(int which) throws javax.xml.transform.TransformerException", " Object getFunctionID(String key)", "public int installFunction(String name, Class func)", "public boolean functionAvailable(String methName)" ],
  "variableNames" : [ "FUNC_CURRENT", "FUNC_LAST", "FUNC_POSITION", "FUNC_COUNT", "FUNC_ID", "FUNC_KEY", "FUNC_LOCAL_PART", "FUNC_NAMESPACE", "FUNC_QNAME", "FUNC_GENERATE_ID", "FUNC_NOT", "FUNC_TRUE", "FUNC_FALSE", "FUNC_BOOLEAN", "FUNC_NUMBER", "FUNC_FLOOR", "FUNC_CEILING", "FUNC_ROUND", "FUNC_SUM", "FUNC_STRING", "FUNC_STARTS_WITH", "FUNC_CONTAINS", "FUNC_SUBSTRING_BEFORE", "FUNC_SUBSTRING_AFTER", "FUNC_NORMALIZE_SPACE", "FUNC_TRANSLATE", "FUNC_CONCAT", "FUNC_SUBSTRING", "FUNC_STRING_LENGTH", "FUNC_SYSTEM_PROPERTY", "FUNC_LANG", "FUNC_EXT_FUNCTION_AVAILABLE", "FUNC_EXT_ELEM_AVAILABLE", "FUNC_UNPARSED_ENTITY_URI", "FUNC_DOCLOCATION", "m_functions", "m_functionID", "m_functions_customer", "m_functionID_customer", "NUM_BUILT_IN_FUNCS", "NUM_ALLOWABLE_ADDINS", "m_funcNextFreeIndex" ]
}