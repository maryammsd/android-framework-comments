{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/usb/UsbConfiguration.java",
  "packageName" : "android.hardware.usb",
  "className" : "UsbConfiguration",
  "comment" : "\n * A class representing a configuration on a {@link UsbDevice}.\n * A USB configuration can have one or more interfaces, each one providing a different\n * piece of functionality, separate from the other interfaces.\n * An interface will have one or more {@link UsbEndpoint}s, which are the\n * channels by which the host transfers data with the device.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For more information about communicating with USB hardware, read the\n * <a href=\"{@docRoot}guide/topics/usb/index.html\">USB</a> developer guide.</p>\n * </div>\n ",
  "variables" : [ {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAttributes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxPower",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterfaces",
    "type" : "Parcelable[]",
    "comment" : " All interfaces for this config, only null during creation ",
    "links" : [ ]
  }, {
    "name" : "ATTR_SELF_POWERED",
    "type" : "int",
    "comment" : "\n     * Mask for \"self-powered\" bit in the configuration's attributes.\n     ",
    "links" : [ ]
  }, {
    "name" : "ATTR_REMOTE_WAKEUP",
    "type" : "int",
    "comment" : "\n     * Mask for \"remote wakeup\" bit in the configuration's attributes.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<UsbConfiguration>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "\n     * Returns the configuration's ID field.\n     * This is an integer that uniquely identifies the configuration on the device.\n     *\n     * @return the configuration's ID\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the configuration's name.\n     *\n     * @return the configuration's name, or {@code null} if the property could not be read\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSelfPowered()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns the self-powered attribute value configuration's attributes field.\n     * This attribute indicates that the device has a power source other than the USB connection.\n     *\n     * @return the configuration's self-powered attribute\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isRemoteWakeup()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns the remote-wakeup attribute value configuration's attributes field.\n     * This attributes that the device may signal the host to wake from suspend.\n     *\n     * @return the configuration's remote-wakeup attribute\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAttributes()",
    "returnType" : "int",
    "comment" : "\n     * Returns the attributes of this configuration\n     *\n     * @return the configuration's attributes\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxPower()",
    "returnType" : "int",
    "comment" : "\n     * Returns the configuration's max power consumption, in milliamps.\n     *\n     * @return the configuration's max power\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceCount()",
    "returnType" : "int",
    "comment" : "\n     * Returns the number of {@link UsbInterface}s this configuration contains.\n     *\n     * @return the number of endpoints\n     ",
    "links" : [ "UsbInterface" ]
  }, {
    "name" : "public UsbInterface getInterface(int index)",
    "returnType" : "UsbInterface",
    "comment" : "\n     * Returns the {@link UsbInterface} at the given index.\n     *\n     * @return the interface\n     ",
    "links" : [ "UsbInterface" ]
  }, {
    "name" : "public void setInterfaces(@NonNull Parcelable[] interfaces)",
    "returnType" : "void",
    "comment" : "\n     * Only used by UsbService implementation\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mId", "mName", "mAttributes", "mMaxPower", "mInterfaces", "ATTR_SELF_POWERED", "ATTR_REMOTE_WAKEUP", "CREATOR" ],
  "methodNames" : [ "public int getId()", "public String getName()", "public boolean isSelfPowered()", "public boolean isRemoteWakeup()", "public int getAttributes()", "public int getMaxPower()", "public int getInterfaceCount()", "public UsbInterface getInterface(int index)", "public void setInterfaces(@NonNull Parcelable[] interfaces)", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ]
}