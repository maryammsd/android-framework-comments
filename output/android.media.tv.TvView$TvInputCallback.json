{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/TvView.java",
  "packageName" : "android.media.tv",
  "className" : "TvInputCallback",
  "comment" : "\n     * Callback used to receive various status updates on the {@link TvView}.\n     ",
  "links" : [ "android.media.tv.TvView" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onConnectionFailed(String inputId)",
    "returnType" : "void",
    "comment" : "\n         * This is invoked when an error occurred while establishing a connection to the underlying\n         * TV input.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onDisconnected(String inputId)",
    "returnType" : "void",
    "comment" : "\n         * This is invoked when the existing connection to the underlying TV input is lost.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onChannelRetuned(String inputId, Uri channelUri)",
    "returnType" : "void",
    "comment" : "\n         * This is invoked when the channel of this TvView is changed by the underlying TV input\n         * without any {@link TvView#tune} request.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param channelUri The URI of a channel.\n         ",
    "links" : [ "android.media.tv.TvView#tune" ]
  }, {
    "name" : "public void onAudioPresentationsChanged(@NonNull String inputId, @NonNull List<AudioPresentation> audioPresentations)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the audio presentation information has been changed.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param audioPresentations A list of updated audio presentation information.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onAudioPresentationSelected(@NonNull String inputId, int presentationId, int programId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when audio presentation selection has changed.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param presentationId The ID of the audio presentation selected.\n         * @param programId The ID of the program providing the selected audio presentation.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTracksChanged(String inputId, List<TvTrackInfo> tracks)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the track information has been changed.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param tracks A list which includes track information.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTrackSelected(String inputId, int type, String trackId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when there is a change on the selected tracks.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param type The type of the track selected. The type can be\n         *            {@link TvTrackInfo#TYPE_AUDIO}, {@link TvTrackInfo#TYPE_VIDEO} or\n         *            {@link TvTrackInfo#TYPE_SUBTITLE}.\n         * @param trackId The ID of the track selected.\n         ",
    "links" : [ "android.media.tv.TvTrackInfo#TYPE_VIDEO", "android.media.tv.TvTrackInfo#TYPE_SUBTITLE", "android.media.tv.TvTrackInfo#TYPE_AUDIO" ]
  }, {
    "name" : "public void onVideoSizeChanged(String inputId, int width, int height)",
    "returnType" : "void",
    "comment" : "\n         * This is invoked when the video size has been changed. It is also called when the first\n         * time video size information becomes available after this view is tuned to a specific\n         * channel.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param width The width of the video.\n         * @param height The height of the video.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onVideoAvailable(String inputId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the video is available, so the TV input starts the playback.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onVideoUnavailable(String inputId, @TvInputManager.VideoUnavailableReason int reason)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the video is not available, so the TV input stops the playback.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param reason The reason why the TV input stopped the playback:\n         * <ul>\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_UNKNOWN}\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_TUNING}\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL}\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_BUFFERING}\n         * <li>{@link TvInputManager#VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY}\n         * </ul>\n         ",
    "links" : [ "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_AUDIO_ONLY", "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_WEAK_SIGNAL", "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_TUNING", "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_UNKNOWN", "android.media.tv.TvInputManager#VIDEO_UNAVAILABLE_REASON_BUFFERING" ]
  }, {
    "name" : "public void onContentAllowed(String inputId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the current program content turns out to be allowed to watch since\n         * its content rating is not blocked by parental controls.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onContentBlocked(String inputId, TvContentRating rating)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the current program content turns out to be not allowed to watch\n         * since its content rating is blocked by parental controls.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param rating The content rating of the blocked program.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onEvent(String inputId, String eventType, Bundle eventArgs)",
    "returnType" : "void",
    "comment" : "\n         * This is invoked when a custom event from the bound TV input is sent to this view.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param eventType The type of the event.\n         * @param eventArgs Optional arguments of the event.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTimeShiftStatusChanged(String inputId, @TvInputManager.TimeShiftStatus int status)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the time shift status is changed.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param status The current time shift status. Should be one of the followings.\n         * <ul>\n         * <li>{@link TvInputManager#TIME_SHIFT_STATUS_UNSUPPORTED}\n         * <li>{@link TvInputManager#TIME_SHIFT_STATUS_UNAVAILABLE}\n         * <li>{@link TvInputManager#TIME_SHIFT_STATUS_AVAILABLE}\n         * </ul>\n         ",
    "links" : [ "android.media.tv.TvInputManager#TIME_SHIFT_STATUS_UNSUPPORTED", "android.media.tv.TvInputManager#TIME_SHIFT_STATUS_AVAILABLE", "android.media.tv.TvInputManager#TIME_SHIFT_STATUS_UNAVAILABLE" ]
  }, {
    "name" : "public void onAitInfoUpdated(@NonNull String inputId, @NonNull AitInfo aitInfo)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the AIT (Application Information Table) info has been updated.\n         *\n         * @param aitInfo The current AIT info.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onSignalStrengthUpdated(@NonNull String inputId, @TvInputManager.SignalStrength int strength)",
    "returnType" : "void",
    "comment" : "\n         * This is called when signal strength is updated.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param strength The current signal strength.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onCueingMessageAvailability(@NonNull String inputId, boolean available)",
    "returnType" : "void",
    "comment" : "\n         * This is called when cueing message becomes available or unavailable.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param available The current availability of cueing message. {@code true} if cueing\n         *                  message is available; {@code false} if it becomes unavailable.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTimeShiftMode(@NonNull String inputId, @TvInputManager.TimeShiftMode int mode)",
    "returnType" : "void",
    "comment" : "\n         * This is called when time shift mode is set or updated.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param mode The current time shift mode. The value is one of the following:\n         * {@link TvInputManager#TIME_SHIFT_MODE_OFF}, {@link TvInputManager#TIME_SHIFT_MODE_LOCAL},\n         * {@link TvInputManager#TIME_SHIFT_MODE_NETWORK},\n         * {@link TvInputManager#TIME_SHIFT_MODE_AUTO}.\n         ",
    "links" : [ "android.media.tv.TvInputManager#TIME_SHIFT_MODE_AUTO", "android.media.tv.TvInputManager#TIME_SHIFT_MODE_OFF", "android.media.tv.TvInputManager#TIME_SHIFT_MODE_NETWORK", "android.media.tv.TvInputManager#TIME_SHIFT_MODE_LOCAL" ]
  }, {
    "name" : "public void onAvailableSpeeds(@NonNull String inputId, @NonNull float[] speeds)",
    "returnType" : "void",
    "comment" : "\n         * This is called when time-shifting is enabled to inform the available speeds.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param speeds An ordered array of playback speeds, expressed as values relative to the\n         *               normal playback speed (1.0), at which the current content can be played as\n         *               a time-shifted broadcast. This is an empty array if the supported playback\n         *               speeds are unknown or the video/broadcast is not in time shift mode. If\n         *               currently in time shift mode, this array will normally include at least\n         *               the values 1.0 (normal speed) and 0.0 (paused).\n         * @see PlaybackParams#getSpeed()\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTuned(@NonNull String inputId, @NonNull Uri channelUri)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the session has been tuned to the given channel.\n         *\n         * @param channelUri The URI of a channel.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTvMessage(@NonNull String inputId, @TvInputManager.TvMessageType int type, @NonNull Bundle data)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a new TV Message has been received.\n         *\n         * @param inputId The ID of the TV input bound to this view.\n         * @param type The type of message received, such as\n         *             {@link TvInputManager#TV_MESSAGE_TYPE_WATERMARK}\n         * @param data The raw data of the message. The bundle keys are:\n         *             {@link TvInputManager#TV_MESSAGE_KEY_STREAM_ID},\n         *             {@link TvInputManager#TV_MESSAGE_KEY_GROUP_ID},\n         *             {@link TvInputManager#TV_MESSAGE_KEY_SUBTYPE},\n         *             {@link TvInputManager#TV_MESSAGE_KEY_RAW_DATA}.\n         *             See {@link TvInputManager#TV_MESSAGE_KEY_SUBTYPE} for more information on\n         *             how to parse this data.\n         ",
    "links" : [ "android.media.tv.TvInputManager#TV_MESSAGE_KEY_GROUP_ID", "android.media.tv.TvInputManager#TV_MESSAGE_KEY_STREAM_ID", "android.media.tv.TvInputManager#TV_MESSAGE_TYPE_WATERMARK", "android.media.tv.TvInputManager#TV_MESSAGE_KEY_SUBTYPE", "android.media.tv.TvInputManager#TV_MESSAGE_KEY_RAW_DATA" ]
  }, {
    "name" : "public void onVideoFreezeUpdated(@NonNull String inputId, boolean isFrozen)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the video freeze status is updated.\n         *\n         * @see #setVideoFrozen(boolean)\n         * @param inputId The ID of the TV input bound to this view.\n         * @param isFrozen Whether or not the video is currently frozen on the las\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onConnectionFailed(String inputId)", "public void onDisconnected(String inputId)", "public void onChannelRetuned(String inputId, Uri channelUri)", "public void onAudioPresentationsChanged(@NonNull String inputId, @NonNull List<AudioPresentation> audioPresentations)", "public void onAudioPresentationSelected(@NonNull String inputId, int presentationId, int programId)", "public void onTracksChanged(String inputId, List<TvTrackInfo> tracks)", "public void onTrackSelected(String inputId, int type, String trackId)", "public void onVideoSizeChanged(String inputId, int width, int height)", "public void onVideoAvailable(String inputId)", "public void onVideoUnavailable(String inputId, @TvInputManager.VideoUnavailableReason int reason)", "public void onContentAllowed(String inputId)", "public void onContentBlocked(String inputId, TvContentRating rating)", "public void onEvent(String inputId, String eventType, Bundle eventArgs)", "public void onTimeShiftStatusChanged(String inputId, @TvInputManager.TimeShiftStatus int status)", "public void onAitInfoUpdated(@NonNull String inputId, @NonNull AitInfo aitInfo)", "public void onSignalStrengthUpdated(@NonNull String inputId, @TvInputManager.SignalStrength int strength)", "public void onCueingMessageAvailability(@NonNull String inputId, boolean available)", "public void onTimeShiftMode(@NonNull String inputId, @TvInputManager.TimeShiftMode int mode)", "public void onAvailableSpeeds(@NonNull String inputId, @NonNull float[] speeds)", "public void onTuned(@NonNull String inputId, @NonNull Uri channelUri)", "public void onTvMessage(@NonNull String inputId, @TvInputManager.TvMessageType int type, @NonNull Bundle data)", "public void onVideoFreezeUpdated(@NonNull String inputId, boolean isFrozen)" ],
  "variableNames" : [ ]
}