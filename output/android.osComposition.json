{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/VibrationEffect.java",
  "packageName" : "android.os",
  "className" : "Composition",
  "comment" : "\n     * A composition of haptic primitives that, when combined, create a single haptic effect.\n     *\n     * @see VibrationEffect#startComposition()\n     ",
  "variables" : [ {
    "name" : "PRIMITIVE_NOOP",
    "type" : "int",
    "comment" : "\n         * No haptic effect. Used to generate extended delays between primitives.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIMITIVE_CLICK",
    "type" : "int",
    "comment" : "\n         * This effect should produce a sharp, crisp click sensation.\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIMITIVE_THUD",
    "type" : "int",
    "comment" : "\n         * A haptic effect that simulates downwards movement with gravity. Often\n         * followed by extra energy of hitting and reverberation to augment\n         * physicality.\n         *\n         * @hide Not confident enough to expose publicly yet\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIMITIVE_SPIN",
    "type" : "int",
    "comment" : "\n         * A haptic effect that simulates spinning momentum.\n         *\n         * @hide Not confident enough to expose publicly yet\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIMITIVE_QUICK_RISE",
    "type" : "int",
    "comment" : "\n         * A haptic effect that simulates quick upward movement against gravity.\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIMITIVE_SLOW_RISE",
    "type" : "int",
    "comment" : "\n         * A haptic effect that simulates slow upward movement against gravity.\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIMITIVE_QUICK_FALL",
    "type" : "int",
    "comment" : "\n         * A haptic effect that simulates quick downwards movement with gravity.\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIMITIVE_TICK",
    "type" : "int",
    "comment" : " Internally this maps to the HAL constant CompositePrimitive::LIGHT_TICK",
    "links" : [ ]
  }, {
    "name" : "mEffects",
    "type" : "ArrayList<PrimitiveEffect>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Composition addPrimitive(@Primitive int primitiveId)",
    "returnType" : "Composition",
    "comment" : "\n         * Add a haptic primitive to the end of the current composition.\n         *\n         * Similar to {@link #addPrimitive(int, float, int)}, but with no delay and a\n         * default scale applied.\n         *\n         * @param primitiveId The primitive to add\n         *\n         * @return The {@link Composition} object to enable adding multiple primitives in one chain.\n         ",
    "links" : [ "#addPrimitive", "Composition" ]
  }, {
    "name" : "public Composition addPrimitive(@Primitive int primitiveId, @FloatRange(from = 0f, to = 1f) float scale)",
    "returnType" : "Composition",
    "comment" : "\n         * Add a haptic primitive to the end of the current composition.\n         *\n         * Similar to {@link #addPrimitive(int, float, int)}, but with no delay.\n         *\n         * @param primitiveId The primitive to add\n         * @param scale The scale to apply to the intensity of the primitive.\n         *\n         * @return The {@link Composition} object to enable adding multiple primitives in one chain.\n         ",
    "links" : [ "#addPrimitive", "Composition" ]
  }, {
    "name" : "public Composition addPrimitive(@Primitive int primitiveId, @FloatRange(from = 0f, to = 1f) float scale, @IntRange(from = 0) int delay)",
    "returnType" : "Composition",
    "comment" : "\n         * Add a haptic primitive to the end of the current composition.\n         *\n         * @param primitiveId The primitive to add\n         * @param scale The scale to apply to the intensity of the primitive.\n         * @param delay The amount of time, in milliseconds, to wait between playing the prior\n         *              primitive and this one\n         * @return The {@link Composition} object to enable adding multiple primitives in one chain.\n         ",
    "links" : [ "Composition" ]
  }, {
    "name" : "public VibrationEffect compose()",
    "returnType" : "VibrationEffect",
    "comment" : "\n         * Compose all of the added primitives together into a single {@link VibrationEffect}.\n         *\n         * The {@link Composition} object is still valid after this call, so you can continue adding\n         * more primitives to it and generating more {@link VibrationEffect}s by calling this method\n         * again.\n         *\n         * @return The {@link VibrationEffect} resulting from the composition of the primitives.\n         ",
    "links" : [ "VibrationEffect", "Composition", "VibrationEffect", "VibrationEffect" ]
  }, {
    "name" : " static int checkPrimitive(int primitiveId)",
    "returnType" : "int",
    "comment" : "\n         * @throws IllegalArgumentException throws if the primitive ID is not within the valid range\n         * @hide\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "public static String primitiveToString(@Primitive int id)",
    "returnType" : "String",
    "comment" : "\n         * Convert the primitive ID to a human readable string for debugging\n         * @param id The ID to convert\n         * @return The ID in a human readable format.\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "PRIMITIVE_NOOP", "PRIMITIVE_CLICK", "PRIMITIVE_THUD", "PRIMITIVE_SPIN", "PRIMITIVE_QUICK_RISE", "PRIMITIVE_SLOW_RISE", "PRIMITIVE_QUICK_FALL", "PRIMITIVE_TICK", "mEffects" ],
  "methodNames" : [ "public Composition addPrimitive(@Primitive int primitiveId)", "public Composition addPrimitive(@Primitive int primitiveId, @FloatRange(from = 0f, to = 1f) float scale)", "public Composition addPrimitive(@Primitive int primitiveId, @FloatRange(from = 0f, to = 1f) float scale, @IntRange(from = 0) int delay)", "public VibrationEffect compose()", " static int checkPrimitive(int primitiveId)", "public static String primitiveToString(@Primitive int id)" ]
}