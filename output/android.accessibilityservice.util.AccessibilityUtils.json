{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/accessibilityservice/util/AccessibilityUtils.java",
  "packageName" : "android.accessibilityservice.util",
  "className" : "AccessibilityUtils",
  "comment" : "\n * Collection of utilities for accessibility service.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "IMG_PREFIX",
    "type" : "String",
    "comment" : " prefix rule. e.g. <img src=\"R.drawable.fileName\"/>",
    "links" : [ ]
  }, {
    "name" : "ANCHOR_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UNSUPPORTED_TAG_LIST",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static String getFilteredHtmlText(@NonNull String text)",
    "returnType" : "String",
    "comment" : "\n     * Gets the filtered html string for\n     * {@link android.accessibilityservice.AccessibilityServiceInfo} and\n     * {@link android.accessibilityservice.AccessibilityShortcutInfo}. It filters\n     * the <img> tag which do not meet the custom specification and the <a> tag.\n     *\n     * @param text the target text is html format.\n     * @return the filtered html string.\n     ",
    "links" : [ "android.accessibilityservice.AccessibilityServiceInfo", "android.accessibilityservice.AccessibilityShortcutInfo" ]
  }, {
    "name" : "public static Drawable loadSafeAnimatedImage(@NonNull Context context, @NonNull ApplicationInfo applicationInfo, @StringRes int resId)",
    "returnType" : "Drawable",
    "comment" : "\n     * Loads the animated image for\n     * {@link android.accessibilityservice.AccessibilityServiceInfo} and\n     * {@link android.accessibilityservice.AccessibilityShortcutInfo}. It checks the resource\n     * whether to exceed the screen size.\n     *\n     * @param context the current context.\n     * @param applicationInfo the current application.\n     * @param resId the animated image resource id.\n     * @return the animated image which is safe.\n     ",
    "links" : [ "android.accessibilityservice.AccessibilityServiceInfo", "android.accessibilityservice.AccessibilityShortcutInfo" ]
  }, {
    "name" : "private static int getScreenWidthPixels(@NonNull Context context)",
    "returnType" : "int",
    "comment" : "\n     * Gets the width of the screen.\n     *\n     * @param context the current context.\n     * @return the width of the screen in term of pixels.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int getScreenHeightPixels(@NonNull Context context)",
    "returnType" : "int",
    "comment" : "\n     * Gets the height of the screen.\n     *\n     * @param context the current context.\n     * @return the height of the screen in term of pixels.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "IMG_PREFIX", "ANCHOR_TAG", "UNSUPPORTED_TAG_LIST" ],
  "methodNames" : [ "public static String getFilteredHtmlText(@NonNull String text)", "public static Drawable loadSafeAnimatedImage(@NonNull Context context, @NonNull ApplicationInfo applicationInfo, @StringRes int resId)", "private static int getScreenWidthPixels(@NonNull Context context)", "private static int getScreenHeightPixels(@NonNull Context context)" ]
}