{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/autofill/MyAutofillService.java",
  "packageName" : "android.view.autofill",
  "className" : "MyAutofillService",
  "comment" : "\n * An {@link AutofillService} implementation whose replies can be programmed by the test case.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TIMEOUT_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PACKAGE_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "COMPONENT_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sFillRequests",
    "type" : "BlockingQueue<FillRequest>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCannedResponses",
    "type" : "BlockingQueue<CannedResponse>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static void resetStaticState()",
    "returnType" : "void",
    "comment" : "\n     * Resets the static state associated with the service.\n     ",
    "links" : [ ]
  }, {
    "name" : " static void setEnabled(boolean enabled)",
    "returnType" : "void",
    "comment" : "\n     * Sets whether the service is enabled or not - when disabled, calls to\n     * {@link #onFillRequest(FillRequest, CancellationSignal, FillCallback)} will be ignored.\n     ",
    "links" : [ "#onFillRequest(FillRequest" ]
  }, {
    "name" : " static FillRequest getLastFillRequest()",
    "returnType" : "FillRequest",
    "comment" : "\n     * Gets the the last {@link FillRequest} passed to\n     * {@link #onFillRequest(FillRequest, CancellationSignal, FillCallback)} or throws an\n     * exception if that method was not called.\n     ",
    "links" : [ "android.service.autofill.FillRequest", "#onFillRequest(FillRequest" ]
  }, {
    "name" : "public void onFillRequest(FillRequest request, CancellationSignal cancellationSignal, FillCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleRequest(FillRequest request, FillCallback callback) throws Exception",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSaveRequest(SaveRequest request, SaveCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static CannedResponse.Builder newCannedResponse()",
    "returnType" : "CannedResponse.Builder",
    "comment" : "\n     * Sets the expected canned {@link FillResponse} for the next\n     * {@link AutofillService#onFillRequest(FillRequest, CancellationSignal, FillCallback)}.\n     ",
    "links" : [ "android.service.autofill.FillResponse", "android.service.autofill.AutofillService#onFillRequest(FillRequest" ]
  }, {
    "name" : "private void onError(@NonNull String msg, @NonNull FillCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void onError(@NonNull String msg, @NonNull Exception e, @NonNull FillCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static RemoteViews newDatasetPresentation(@NonNull CharSequence text)",
    "returnType" : "RemoteViews",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "TIMEOUT_MS", "PACKAGE_NAME", "COMPONENT_NAME", "sFillRequests", "sCannedResponses", "sEnabled" ],
  "methodNames" : [ " static void resetStaticState()", " static void setEnabled(boolean enabled)", " static FillRequest getLastFillRequest()", "public void onFillRequest(FillRequest request, CancellationSignal cancellationSignal, FillCallback callback)", "private void handleRequest(FillRequest request, FillCallback callback) throws Exception", "public void onSaveRequest(SaveRequest request, SaveCallback callback)", " static CannedResponse.Builder newCannedResponse()", "private void onError(@NonNull String msg, @NonNull FillCallback callback)", "private void onError(@NonNull String msg, @NonNull Exception e, @NonNull FillCallback callback)", "private static RemoteViews newDatasetPresentation(@NonNull CharSequence text)" ]
}