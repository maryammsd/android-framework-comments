{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/impl/CronetUrlRequestContext.java",
  "packageName" : "org.chromium.net.impl",
  "className" : "Natives",
  "comment" : " Native methods are implemented in cronet_url_request_context_adapter.cc.",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " long createRequestContextConfig(byte[] serializedRequestContextConfigOptions)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addQuicHint(long urlRequestContextConfig, String host, int port, int alternatePort)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addPkp(long urlRequestContextConfig, String host, byte[][] hashes, boolean includeSubdomains, long expirationTime)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long createRequestContextAdapter(long urlRequestContextConfig)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " byte[] getHistogramDeltas()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void destroy(long nativePtr, CronetUrlRequestContext caller)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean startNetLogToFile(long nativePtr, CronetUrlRequestContext caller, String fileName, boolean logAll)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void startNetLogToDisk(long nativePtr, CronetUrlRequestContext caller, String dirPath, boolean logAll, int maxSize)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void stopNetLog(long nativePtr, CronetUrlRequestContext caller)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void initRequestContextOnInitThread(long nativePtr, CronetUrlRequestContext caller)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void configureNetworkQualityEstimatorForTesting(long nativePtr, CronetUrlRequestContext caller, boolean useLocalHostRequests, boolean useSmallerResponses, boolean disableOfflineCheck)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void provideRTTObservations(long nativePtr, CronetUrlRequestContext caller, boolean should)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void provideThroughputObservations(long nativePtr, CronetUrlRequestContext caller, boolean should)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean getEnableTelemetry(long nativePtr, CronetUrlRequestContext caller)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " long createRequestContextConfig(byte[] serializedRequestContextConfigOptions)", " void addQuicHint(long urlRequestContextConfig, String host, int port, int alternatePort)", " void addPkp(long urlRequestContextConfig, String host, byte[][] hashes, boolean includeSubdomains, long expirationTime)", " long createRequestContextAdapter(long urlRequestContextConfig)", " byte[] getHistogramDeltas()", " void destroy(long nativePtr, CronetUrlRequestContext caller)", " boolean startNetLogToFile(long nativePtr, CronetUrlRequestContext caller, String fileName, boolean logAll)", " void startNetLogToDisk(long nativePtr, CronetUrlRequestContext caller, String dirPath, boolean logAll, int maxSize)", " void stopNetLog(long nativePtr, CronetUrlRequestContext caller)", " void initRequestContextOnInitThread(long nativePtr, CronetUrlRequestContext caller)", " void configureNetworkQualityEstimatorForTesting(long nativePtr, CronetUrlRequestContext caller, boolean useLocalHostRequests, boolean useSmallerResponses, boolean disableOfflineCheck)", " void provideRTTObservations(long nativePtr, CronetUrlRequestContext caller, boolean should)", " void provideThroughputObservations(long nativePtr, CronetUrlRequestContext caller, boolean should)", " boolean getEnableTelemetry(long nativePtr, CronetUrlRequestContext caller)" ],
  "variableNames" : [ ]
}