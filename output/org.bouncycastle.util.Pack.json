{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/bouncycastle/util/Pack.java",
  "packageName" : "org.bouncycastle.util",
  "className" : "Pack",
  "comment" : "\n * Utility methods for converting byte arrays into ints and longs, and back again.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static short bigEndianToShort(byte[] bs, int off)",
    "returnType" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int bigEndianToInt(byte[] bs, int off)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void bigEndianToInt(byte[] bs, int off, int[] ns)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void bigEndianToInt(byte[] bs, int off, int[] ns, int nsOff, int nsLen)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] intToBigEndian(int n)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void intToBigEndian(int n, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] intToBigEndian(int[] ns)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void intToBigEndian(int[] ns, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void intToBigEndian(int[] ns, int nsOff, int nsLen, byte[] bs, int bsOff)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static long bigEndianToLong(byte[] bs, int off)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void bigEndianToLong(byte[] bs, int off, long[] ns)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void bigEndianToLong(byte[] bs, int bsOff, long[] ns, int nsOff, int nsLen)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] longToBigEndian(long n)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void longToBigEndian(long n, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] longToBigEndian(long[] ns)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void longToBigEndian(long[] ns, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void longToBigEndian(long[] ns, int nsOff, int nsLen, byte[] bs, int bsOff)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void longToBigEndian(long value, byte[] bs, int off, int bytes)",
    "returnType" : "void",
    "comment" : "\n     * @param value The number\n     * @param bs    The target.\n     * @param off   Position in target to start.\n     * @param bytes number of bytes to write.\n     * \n     * @deprecated Will be removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static short littleEndianToShort(byte[] bs, int off)",
    "returnType" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int littleEndianToInt(byte[] bs, int off)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void littleEndianToInt(byte[] bs, int off, int[] ns)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void littleEndianToInt(byte[] bs, int bOff, int[] ns, int nOff, int count)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int[] littleEndianToInt(byte[] bs, int off, int count)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] shortToLittleEndian(short n)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void shortToLittleEndian(short n, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] shortToBigEndian(short n)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void shortToBigEndian(short n, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] intToLittleEndian(int n)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void intToLittleEndian(int n, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] intToLittleEndian(int[] ns)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void intToLittleEndian(int[] ns, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void intToLittleEndian(int[] ns, int nsOff, int nsLen, byte[] bs, int bsOff)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static long littleEndianToLong(byte[] bs, int off)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void littleEndianToLong(byte[] bs, int off, long[] ns)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void littleEndianToLong(byte[] bs, int bsOff, long[] ns, int nsOff, int nsLen)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] longToLittleEndian(long n)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void longToLittleEndian(long n, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] longToLittleEndian(long[] ns)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void longToLittleEndian(long[] ns, byte[] bs, int off)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void longToLittleEndian(long[] ns, int nsOff, int nsLen, byte[] bs, int bsOff)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static short bigEndianToShort(byte[] bs, int off)", "public static int bigEndianToInt(byte[] bs, int off)", "public static void bigEndianToInt(byte[] bs, int off, int[] ns)", "public static void bigEndianToInt(byte[] bs, int off, int[] ns, int nsOff, int nsLen)", "public static byte[] intToBigEndian(int n)", "public static void intToBigEndian(int n, byte[] bs, int off)", "public static byte[] intToBigEndian(int[] ns)", "public static void intToBigEndian(int[] ns, byte[] bs, int off)", "public static void intToBigEndian(int[] ns, int nsOff, int nsLen, byte[] bs, int bsOff)", "public static long bigEndianToLong(byte[] bs, int off)", "public static void bigEndianToLong(byte[] bs, int off, long[] ns)", "public static void bigEndianToLong(byte[] bs, int bsOff, long[] ns, int nsOff, int nsLen)", "public static byte[] longToBigEndian(long n)", "public static void longToBigEndian(long n, byte[] bs, int off)", "public static byte[] longToBigEndian(long[] ns)", "public static void longToBigEndian(long[] ns, byte[] bs, int off)", "public static void longToBigEndian(long[] ns, int nsOff, int nsLen, byte[] bs, int bsOff)", "public static void longToBigEndian(long value, byte[] bs, int off, int bytes)", "public static short littleEndianToShort(byte[] bs, int off)", "public static int littleEndianToInt(byte[] bs, int off)", "public static void littleEndianToInt(byte[] bs, int off, int[] ns)", "public static void littleEndianToInt(byte[] bs, int bOff, int[] ns, int nOff, int count)", "public static int[] littleEndianToInt(byte[] bs, int off, int count)", "public static byte[] shortToLittleEndian(short n)", "public static void shortToLittleEndian(short n, byte[] bs, int off)", "public static byte[] shortToBigEndian(short n)", "public static void shortToBigEndian(short n, byte[] bs, int off)", "public static byte[] intToLittleEndian(int n)", "public static void intToLittleEndian(int n, byte[] bs, int off)", "public static byte[] intToLittleEndian(int[] ns)", "public static void intToLittleEndian(int[] ns, byte[] bs, int off)", "public static void intToLittleEndian(int[] ns, int nsOff, int nsLen, byte[] bs, int bsOff)", "public static long littleEndianToLong(byte[] bs, int off)", "public static void littleEndianToLong(byte[] bs, int off, long[] ns)", "public static void littleEndianToLong(byte[] bs, int bsOff, long[] ns, int nsOff, int nsLen)", "public static byte[] longToLittleEndian(long n)", "public static void longToLittleEndian(long n, byte[] bs, int off)", "public static byte[] longToLittleEndian(long[] ns)", "public static void longToLittleEndian(long[] ns, byte[] bs, int off)", "public static void longToLittleEndian(long[] ns, int nsOff, int nsLen, byte[] bs, int bsOff)" ],
  "variableNames" : [ ]
}