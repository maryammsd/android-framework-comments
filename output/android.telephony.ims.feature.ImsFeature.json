{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/feature/ImsFeature.java",
  "packageName" : "android.telephony.ims.feature",
  "className" : "ImsFeature",
  "comment" : "\n * Base class for all IMS features that are supported by the framework. Use a concrete subclass\n * of {@link ImsFeature}, such as {@link MmTelFeature} or {@link RcsFeature}.\n *\n * @hide\n ",
  "links" : [ "android.telephony.ims.feature.ImsFeature", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.feature.MmTelFeature" ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FEATURE_INVALID",
    "type" : "int",
    "comment" : "\n     * Invalid feature value\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_EMERGENCY_MMTEL",
    "type" : "int",
    "comment" : "\n     * This feature supports emergency calling over MMTEL. If defined, the framework will try to\n     * place an emergency call over IMS first. If it is not defined, the framework will only use\n     * CSFB for emergency calling.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_MMTEL",
    "type" : "int",
    "comment" : "\n     * This feature supports the MMTEL feature.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_RCS",
    "type" : "int",
    "comment" : "\n     * This feature supports the RCS feature.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_MAX",
    "type" : "int",
    "comment" : "\n     * Total number of features defined\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_LOG_MAP",
    "type" : "Map<Integer, String>",
    "comment" : "\n     * Used for logging purposes.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n     * This {@link ImsFeature}'s state is unavailable and should not be communicated with. This will\n     * remove all bindings back to the framework. Any attempt to communicate with the framework\n     * during this time will result in an {@link IllegalStateException}.\n     * @hide\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature", "IllegalStateException" ]
  }, {
    "name" : "STATE_INITIALIZING",
    "type" : "int",
    "comment" : "\n     * This {@link ImsFeature} state is initializing and should not be communicated with. This will\n     * remove all bindings back to the framework. Any attempt to communicate with the framework\n     * during this time will result in an {@link IllegalStateException}.\n     * @hide\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature", "IllegalStateException" ]
  }, {
    "name" : "STATE_READY",
    "type" : "int",
    "comment" : "\n     * This {@link ImsFeature} is ready for communication. Do not attempt to call framework methods\n     * until {@see #onFeatureReady()} is called.\n     * @hide\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature" ]
  }, {
    "name" : "STATE_LOG_MAP",
    "type" : "Map<Integer, String>",
    "comment" : "\n     * Used for logging purposes.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_ERROR_GENERIC",
    "type" : "int",
    "comment" : "\n     * The capability was unable to be changed.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_SUCCESS",
    "type" : "int",
    "comment" : "\n     * The capability was able to be changed.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mStatusCallbacks",
    "type" : "RemoteCallbackListExt<IImsFeatureStatusCallback>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSlotId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCapabilityCallbacks",
    "type" : "RemoteCallbackListExt<IImsCapabilityCallback>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCapabilityStatus",
    "type" : "Capabilities",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void initialize(Context context, int slotId)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public final int getSlotIndex()",
    "returnType" : "int",
    "comment" : "\n     * @return The SIM slot index associated with this ImsFeature.\n     *\n     * @see SubscriptionManager#getSubscriptionId(int) for more information on getting the\n     * subscription ID associated with this slot.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFeatureState()",
    "returnType" : "int",
    "comment" : "\n     * @return The current state of the ImsFeature, set previously by {@link #setFeatureState(int)}\n     * or {@link #STATE_UNAVAILABLE} if it has not been updated  yet.\n     * @hide\n     ",
    "links" : [ "#setFeatureState(int)", "#STATE_UNAVAILABLE" ]
  }, {
    "name" : "public final void setFeatureState(@ImsState int state)",
    "returnType" : "void",
    "comment" : "\n     * Set the state of the ImsFeature. The state is used as a signal to the framework to start or\n     * stop communication, depending on the state sent.\n     * @param state The ImsFeature's state, defined as {@link #STATE_UNAVAILABLE},\n     * {@link #STATE_INITIALIZING}, or {@link #STATE_READY}.\n     * @hide\n     ",
    "links" : [ "#STATE_INITIALIZING", "#STATE_UNAVAILABLE", "#STATE_READY" ]
  }, {
    "name" : "public void addImsFeatureStatusCallback(@NonNull IImsFeatureStatusCallback c)",
    "returnType" : "void",
    "comment" : "\n     * Not final for testing, but shouldn't be extended!\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeImsFeatureStatusCallback(@NonNull IImsFeatureStatusCallback c)",
    "returnType" : "void",
    "comment" : "\n     * Not final for testing, but shouldn't be extended!\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private void notifyFeatureState(@ImsState int state)",
    "returnType" : "void",
    "comment" : "\n     * Internal method called by ImsFeature when setFeatureState has changed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void addCapabilityCallback(IImsCapabilityCallback c)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : " final void removeCapabilityCallback(IImsCapabilityCallback c)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : " final void queryCapabilityConfigurationInternal(int capability, int radioTech, IImsCapabilityCallback c)",
    "returnType" : "void",
    "comment" : "@hide",
    "links" : [ ]
  }, {
    "name" : "public Capabilities queryCapabilityStatus()",
    "returnType" : "Capabilities",
    "comment" : "\n     * @return the cached capabilities status for this feature.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void requestChangeEnabledCapabilities(CapabilityChangeRequest request, IImsCapabilityCallback c)",
    "returnType" : "void",
    "comment" : "\n     * Called internally to request the change of enabled capabilities.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected final void notifyCapabilitiesStatusChanged(Capabilities caps)",
    "returnType" : "void",
    "comment" : "\n     * Called by the ImsFeature when the capabilities status has changed.\n     *\n     * @param caps the new {@link Capabilities} status of the {@link ImsFeature}.\n     *\n     * @hide\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature", "Capabilities" ]
  }, {
    "name" : "public abstract boolean queryCapabilityConfiguration(int capability, int radioTech)",
    "returnType" : "boolean",
    "comment" : "\n     * Provides the ImsFeature with the ability to return the framework Capability Configuration\n     * for a provided Capability. If the framework calls {@link #changeEnabledCapabilities} and\n     * includes a capability A to enable or disable, this method should return the correct enabled\n     * status for capability A.\n     * @param capability The capability that we are querying the configuration for.\n     * @return true if the capability is enabled, false otherwise.\n     * @hide\n     ",
    "links" : [ "#changeEnabledCapabilities" ]
  }, {
    "name" : "public abstract void changeEnabledCapabilities(CapabilityChangeRequest request, CapabilityCallbackProxy c)",
    "returnType" : "void",
    "comment" : "\n     * Features should override this method to receive Capability preference change requests from\n     * the framework using the provided {@link CapabilityChangeRequest}. If any of the capabilities\n     * in the {@link CapabilityChangeRequest} are not able to be completed due to an error,\n     * {@link CapabilityCallbackProxy#onChangeCapabilityConfigurationError} should be called for\n     * each failed capability.\n     *\n     * @param request A {@link CapabilityChangeRequest} containing requested capabilities to\n     *     enable/disable.\n     * @param c A {@link CapabilityCallbackProxy}, which will be used to call back to the framework\n     * setting a subset of these capabilities fail, using\n     * {@link CapabilityCallbackProxy#onChangeCapabilityConfigurationError}.\n     ",
    "links" : [ "CapabilityCallbackProxy", "#onChangeCapabilityConfigurationError", "android.telephony.ims.feature.CapabilityChangeRequest" ]
  }, {
    "name" : "public abstract void onFeatureRemoved()",
    "returnType" : "void",
    "comment" : "\n     * Called when the framework is removing this feature and it needs to be cleaned up.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onFeatureReady()",
    "returnType" : "void",
    "comment" : "\n     * Called after this ImsFeature has been initialized and has been set to the\n     * {@link ImsState#STATE_READY} state.\n     * <p>\n     * Any attempt by this feature to access the framework before this method is called will return\n     * with an {@link IllegalStateException}.\n     * The IMS provider should use this method to trigger registration for this feature on the IMS\n     * network, if needed.\n     ",
    "links" : [ "IllegalStateException", "#STATE_READY" ]
  }, {
    "name" : "protected abstract IInterface getBinder()",
    "returnType" : "IInterface",
    "comment" : "\n     * @return Binder instance that the framework will use to communicate with this feature.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void initialize(Context context, int slotId)", "public final int getSlotIndex()", "public int getFeatureState()", "public final void setFeatureState(@ImsState int state)", "public void addImsFeatureStatusCallback(@NonNull IImsFeatureStatusCallback c)", "public void removeImsFeatureStatusCallback(@NonNull IImsFeatureStatusCallback c)", "private void notifyFeatureState(@ImsState int state)", "public final void addCapabilityCallback(IImsCapabilityCallback c)", " final void removeCapabilityCallback(IImsCapabilityCallback c)", " final void queryCapabilityConfigurationInternal(int capability, int radioTech, IImsCapabilityCallback c)", "public Capabilities queryCapabilityStatus()", "public final void requestChangeEnabledCapabilities(CapabilityChangeRequest request, IImsCapabilityCallback c)", "protected final void notifyCapabilitiesStatusChanged(Capabilities caps)", "public abstract boolean queryCapabilityConfiguration(int capability, int radioTech)", "public abstract void changeEnabledCapabilities(CapabilityChangeRequest request, CapabilityCallbackProxy c)", "public abstract void onFeatureRemoved()", "public abstract void onFeatureReady()", "protected abstract IInterface getBinder()" ],
  "variableNames" : [ "LOG_TAG", "FEATURE_INVALID", "FEATURE_EMERGENCY_MMTEL", "FEATURE_MMTEL", "FEATURE_RCS", "FEATURE_MAX", "FEATURE_LOG_MAP", "STATE_UNAVAILABLE", "STATE_INITIALIZING", "STATE_READY", "STATE_LOG_MAP", "CAPABILITY_ERROR_GENERIC", "CAPABILITY_SUCCESS", "mContext", "mLock", "mStatusCallbacks", "mState", "mSlotId", "mCapabilityCallbacks", "mCapabilityStatus" ]
}