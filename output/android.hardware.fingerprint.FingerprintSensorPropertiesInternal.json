{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/fingerprint/FingerprintSensorPropertiesInternal.java",
  "packageName" : "android.hardware.fingerprint",
  "className" : "FingerprintSensorPropertiesInternal",
  "comment" : "\n * Container for fingerprint sensor properties.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "sensorType",
    "type" : "int",
    "comment" : "\n     * See {@link FingerprintSensorProperties.SensorType}.\n     ",
    "links" : [ "FingerprintSensorProperties.SensorType" ]
  }, {
    "name" : "halControlsIllumination",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSensorLocations",
    "type" : "List<SensorLocationInternal>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<FingerprintSensorPropertiesInternal>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAnyUdfpsType()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAnySidefpsType()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns if sensor type is side-FPS\n     * @return true if sensor is side-fps, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public SensorLocationInternal getLocation()",
    "returnType" : "SensorLocationInternal",
    "comment" : "\n     * Get the default location.\n     *\n     * Use this method when the sensor's relationship to the displays on the device do not\n     * matter.\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public SensorLocationInternal getLocation(String displayId)",
    "returnType" : "SensorLocationInternal",
    "comment" : "\n     * Get the location of a sensor relative to a physical display layout.\n     *\n     * @param displayId stable display id\n     * @return location or null if none is specified\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<SensorLocationInternal> getAllLocations()",
    "returnType" : "List<SensorLocationInternal>",
    "comment" : "\n     * Gets all locations relative to all supported display layouts.\n     * @return supported locations\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean isAnyUdfpsType()", "public boolean isAnySidefpsType()", "public SensorLocationInternal getLocation()", "public SensorLocationInternal getLocation(String displayId)", "public List<SensorLocationInternal> getAllLocations()", "public String toString()" ],
  "variableNames" : [ "sensorType", "halControlsIllumination", "mSensorLocations", "CREATOR" ]
}