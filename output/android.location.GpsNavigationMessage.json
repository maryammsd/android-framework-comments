{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GpsNavigationMessage.java",
  "packageName" : "android.location",
  "className" : "GpsNavigationMessage",
  "comment" : "\n * A class containing a GPS satellite Navigation Message.\n *\n * @deprecated use {@link GnssNavigationMessage} instead.\n *\n * @hide\n ",
  "links" : [ "android.location.GnssNavigationMessage" ],
  "variables" : [ {
    "name" : "EMPTY_ARRAY",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_UNKNOWN",
    "type" : "byte",
    "comment" : "\n     * The type of the navigation message is not available or unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_L1CA",
    "type" : "byte",
    "comment" : "\n     * The Navigation Message is of type L1 C/A.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_L2CNAV",
    "type" : "byte",
    "comment" : "\n     * The Navigation Message is of type L1-CNAV.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_L5CNAV",
    "type" : "byte",
    "comment" : "\n     * The Navigation Message is of type L5-CNAV.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_CNAV2",
    "type" : "byte",
    "comment" : "\n     * The Navigation Message is of type CNAV-2.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_UNKNOWN",
    "type" : "short",
    "comment" : "\n     * The Navigation Message Status is 'unknown'.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_PARITY_PASSED",
    "type" : "short",
    "comment" : "\n     * The Navigation Message was received without any parity error in its navigation words.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_PARITY_REBUILT",
    "type" : "short",
    "comment" : "\n     * The Navigation Message was received with words that failed parity check, but the receiver was\n     * able to correct those words.\n     ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPrn",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageId",
    "type" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubmessageId",
    "type" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatus",
    "type" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<GpsNavigationMessage>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void set(GpsNavigationMessage navigationMessage)",
    "returnType" : "void",
    "comment" : "\n     * Sets all contents to the values stored in the provided object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "\n     * Resets all the contents to its original state.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte getType()",
    "returnType" : "byte",
    "comment" : "\n     * Gets the type of the navigation message contained in the object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setType(byte value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the type of the navigation message.\n     ",
    "links" : [ ]
  }, {
    "name" : "private String getTypeString()",
    "returnType" : "String",
    "comment" : "\n     * Gets a string representation of the 'type'.\n     * For internal and logging use only.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte getPrn()",
    "returnType" : "byte",
    "comment" : "\n     * Gets the Pseudo-random number.\n     * Range: [1, 32].\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setPrn(byte value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the Pseud-random number.\n     ",
    "links" : [ ]
  }, {
    "name" : "public short getMessageId()",
    "returnType" : "short",
    "comment" : "\n     * Gets the Message Identifier.\n     * It provides an index so the complete Navigation Message can be assembled. i.e. for L1 C/A\n     * subframe 4 and 5, this value corresponds to the 'frame id' of the navigation message.\n     * Subframe 1, 2, 3 does not contain a 'frame id' and this might be reported as -1.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMessageId(short value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the Message Identifier.\n     ",
    "links" : [ ]
  }, {
    "name" : "public short getSubmessageId()",
    "returnType" : "short",
    "comment" : "\n     * Gets the Sub-message Identifier.\n     * If required by {@link #getType()}, this value contains a sub-index within the current message\n     * (or frame) that is being transmitted. i.e. for L1 C/A the sub-message identifier corresponds\n     * to the sub-frame Id of the navigation message.\n     ",
    "links" : [ "#getType()" ]
  }, {
    "name" : "public void setSubmessageId(short value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the Sub-message identifier.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getData()",
    "returnType" : "byte[]",
    "comment" : "\n     * Gets the data associated with the Navigation Message.\n     * The bytes (or words) specified using big endian format (MSB first).\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setData(byte[] value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the data associated with the Navigation Message.\n     ",
    "links" : [ ]
  }, {
    "name" : "public short getStatus()",
    "returnType" : "short",
    "comment" : "\n     * Gets the Status of the navigation message contained in the object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setStatus(short value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the status of the navigation message.\n     ",
    "links" : [ ]
  }, {
    "name" : "private String getStatusString()",
    "returnType" : "String",
    "comment" : "\n     * Gets a string representation of the 'status'.\n     * For internal and logging use only.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void initialize()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void set(GpsNavigationMessage navigationMessage)", "public void reset()", "public byte getType()", "public void setType(byte value)", "private String getTypeString()", "public byte getPrn()", "public void setPrn(byte value)", "public short getMessageId()", "public void setMessageId(short value)", "public short getSubmessageId()", "public void setSubmessageId(short value)", "public byte[] getData()", "public void setData(byte[] value)", "public short getStatus()", "public void setStatus(short value)", "private String getStatusString()", "public void writeToParcel(Parcel parcel, int flags)", "public int describeContents()", "public String toString()", "private void initialize()" ],
  "variableNames" : [ "EMPTY_ARRAY", "TYPE_UNKNOWN", "TYPE_L1CA", "TYPE_L2CNAV", "TYPE_L5CNAV", "TYPE_CNAV2", "STATUS_UNKNOWN", "STATUS_PARITY_PASSED", "STATUS_PARITY_REBUILT", "mType", "mPrn", "mMessageId", "mSubmessageId", "mData", "mStatus", "CREATOR" ]
}