{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/nsd/OffloadServiceInfo.java",
  "packageName" : "android.net.nsd",
  "className" : "OffloadServiceInfo",
  "comment" : "\n * The OffloadServiceInfo class contains all the necessary information the OffloadEngine needs to\n * know about how to offload an mDns service. The OffloadServiceInfo is keyed on\n * {@link OffloadServiceInfo.Key} which is a (serviceName, serviceType) pair.\n *\n * @hide\n ",
  "links" : [ "OffloadServiceInfo.Key" ],
  "variables" : [ {
    "name" : "mKey",
    "type" : "Key",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHostname",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubtypes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOffloadPayload",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPriority",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOffloadType",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<OffloadServiceInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Key getKey()",
    "returnType" : "Key",
    "comment" : "\n     * Get the {@link Key}.\n     ",
    "links" : [ "Key" ]
  }, {
    "name" : "public String getHostname()",
    "returnType" : "String",
    "comment" : "\n     * Get the host name. (e.g. \"Android.local\" )\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<String> getSubtypes()",
    "returnType" : "List<String>",
    "comment" : "\n     * Get the service subtypes. (e.g. [\"_ann\"] )\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getOffloadPayload()",
    "returnType" : "byte[]",
    "comment" : "\n     * Get the raw udp payload that the OffloadEngine can use to directly reply the incoming query.\n     * <p>\n     * It is null if the OffloadEngine can not handle transmit. The packet must be sent as-is when\n     * replying to query.\n     ",
    "links" : [ ]
  }, {
    "name" : "public OffloadServiceInfo withOffloadPayload(@NonNull byte[] offloadPayload)",
    "returnType" : "OffloadServiceInfo",
    "comment" : "\n     * Create a new OffloadServiceInfo with payload updated.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getOffloadType()",
    "returnType" : "long",
    "comment" : "\n     * Get the offloadType.\n     * <p>\n     * For example, if the {@link com.android.server.NsdService} requests the OffloadEngine to both\n     * filter the mDNS queries and replies, the {@link #mOffloadType} =\n     * ({@link OffloadEngine#OFFLOAD_TYPE_FILTER_QUERIES} |\n     * {@link OffloadEngine#OFFLOAD_TYPE_FILTER_REPLIES}).\n     ",
    "links" : [ "android.net.nsd.OffloadEngine#OFFLOAD_TYPE_FILTER_QUERIES", "android.net.nsd.OffloadEngine#OFFLOAD_TYPE_FILTER_REPLIES", "com.android.server.NsdService", "#mOffloadType" ]
  }, {
    "name" : "public int getPriority()",
    "returnType" : "int",
    "comment" : "\n     * Get the priority for the OffloadServiceInfo.\n     * <p>\n     * When OffloadEngine don't have enough resource\n     * (e.g. not enough memory) to offload all the OffloadServiceInfo. The OffloadServiceInfo\n     * having lower priority values should be handled by the OffloadEngine first.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Only for debug purpose, the string can be long as the raw packet is dump in the string.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public Key getKey()", "public String getHostname()", "public List<String> getSubtypes()", "public byte[] getOffloadPayload()", "public OffloadServiceInfo withOffloadPayload(@NonNull byte[] offloadPayload)", "public long getOffloadType()", "public int getPriority()", "public String toString()", "public boolean equals(Object o)", "public int hashCode()" ],
  "variableNames" : [ "mKey", "mHostname", "mSubtypes", "mOffloadPayload", "mPriority", "mOffloadType", "CREATOR" ]
}