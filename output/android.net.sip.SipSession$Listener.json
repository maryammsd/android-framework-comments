{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/sip/SipSession.java",
  "packageName" : "android.net.sip",
  "className" : "Listener",
  "comment" : "\n     * Listener for events relating to a SIP session, such as when a session is being registered\n     * (\"on registering\") or a call is outgoing (\"on calling\").\n     * <p>Many of these events are also received by {@link SipAudioCall.Listener}.</p>\n     ",
  "links" : [ "SipAudioCall.Listener" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onCalling(SipSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when an INVITE request is sent to initiate a new call.\n         *\n         * @param session the session object that carries out the transaction\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onRinging(SipSession session, SipProfile caller, String sessionDescription)",
    "returnType" : "void",
    "comment" : "\n         * Called when an INVITE request is received.\n         *\n         * @param session the session object that carries out the transaction\n         * @param caller the SIP profile of the caller\n         * @param sessionDescription the caller's session description\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onRingingBack(SipSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when a RINGING response is received for the INVITE request sent\n         *\n         * @param session the session object that carries out the transaction\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onCallEstablished(SipSession session, String sessionDescription)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is established.\n         *\n         * @param session the session object that is associated with the dialog\n         * @param sessionDescription the peer's session description\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onCallEnded(SipSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session is terminated.\n         *\n         * @param session the session object that is associated with the dialog\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onCallBusy(SipSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when the peer is busy during session initialization.\n         *\n         * @param session the session object that carries out the transaction\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onCallTransferring(SipSession newSession, String sessionDescription)",
    "returnType" : "void",
    "comment" : "\n         * Called when the call is being transferred to a new one.\n         *\n         * @hide\n         * @param newSession the new session that the call will be transferred to\n         * @param sessionDescription the new peer's session description\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onError(SipSession session, int errorCode, String errorMessage)",
    "returnType" : "void",
    "comment" : "\n         * Called when an error occurs during session initialization and\n         * termination.\n         *\n         * @param session the session object that carries out the transaction\n         * @param errorCode error code defined in {@link SipErrorCode}\n         * @param errorMessage error message\n         ",
    "links" : [ "android.net.sip.SipErrorCode" ]
  }, {
    "name" : "public void onCallChangeFailed(SipSession session, int errorCode, String errorMessage)",
    "returnType" : "void",
    "comment" : "\n         * Called when an error occurs during session modification negotiation.\n         *\n         * @param session the session object that carries out the transaction\n         * @param errorCode error code defined in {@link SipErrorCode}\n         * @param errorMessage error message\n         ",
    "links" : [ "android.net.sip.SipErrorCode" ]
  }, {
    "name" : "public void onRegistering(SipSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when a registration request is sent.\n         *\n         * @param session the session object that carries out the transaction\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onRegistrationDone(SipSession session, int duration)",
    "returnType" : "void",
    "comment" : "\n         * Called when registration is successfully done.\n         *\n         * @param session the session object that carries out the transaction\n         * @param duration duration in second before the registration expires\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onRegistrationFailed(SipSession session, int errorCode, String errorMessage)",
    "returnType" : "void",
    "comment" : "\n         * Called when the registration fails.\n         *\n         * @param session the session object that carries out the transaction\n         * @param errorCode error code defined in {@link SipErrorCode}\n         * @param errorMessage error message\n         ",
    "links" : [ "android.net.sip.SipErrorCode" ]
  }, {
    "name" : "public void onRegistrationTimeout(SipSession session)",
    "returnType" : "void",
    "comment" : "\n         * Called when the registration gets timed out.\n         *\n         * @param session the session object that carries out the transaction\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onCalling(SipSession session)", "public void onRinging(SipSession session, SipProfile caller, String sessionDescription)", "public void onRingingBack(SipSession session)", "public void onCallEstablished(SipSession session, String sessionDescription)", "public void onCallEnded(SipSession session)", "public void onCallBusy(SipSession session)", "public void onCallTransferring(SipSession newSession, String sessionDescription)", "public void onError(SipSession session, int errorCode, String errorMessage)", "public void onCallChangeFailed(SipSession session, int errorCode, String errorMessage)", "public void onRegistering(SipSession session)", "public void onRegistrationDone(SipSession session, int duration)", "public void onRegistrationFailed(SipSession session, int errorCode, String errorMessage)", "public void onRegistrationTimeout(SipSession session)" ],
  "variableNames" : [ ]
}