{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/InetAddresses.java",
  "packageName" : "android.net",
  "className" : "InetAddresses",
  "comment" : "\n * Utility methods for {@link InetAddress} implementations.\n ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static boolean isNumericAddress(@NonNull String address)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks to see if the {@code address} is a numeric address (such as {@code \"192.0.2.1\"} or\n     * {@code \"2001:db8::1:2\"}).\n     *\n     * <p>A numeric address is either an IPv4 address containing exactly 4 decimal numbers or an\n     * IPv6 numeric address. IPv4 addresses that consist of either hexadecimal or octal digits or\n     * do not have exactly 4 numbers are not treated as numeric.\n     *\n     * <p>This method will never do a DNS lookup.\n     *\n     * @param address the address to parse.\n     * @return true if the supplied address is numeric, false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static InetAddress parseNumericAddress(@NonNull String address)",
    "returnType" : "InetAddress",
    "comment" : "\n     * Returns an InetAddress corresponding to the given numeric address (such\n     * as {@code \"192.168.0.1\"} or {@code \"2001:4860:800d::68\"}).\n     *\n     * <p>See {@link #isNumericAddress(String)} (String)} for a definition as to what constitutes a\n     * numeric address.\n     *\n     * <p>This method will never do a DNS lookup.\n     *\n     * @param address the address to parse, must be numeric.\n     * @return an {@link InetAddress} instance corresponding to the address.\n     * @throws IllegalArgumentException if {@code address} is not a numeric address.\n     ",
    "links" : [ "#isNumericAddress", "InetAddress" ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public static boolean isNumericAddress(@NonNull String address)", "public static InetAddress parseNumericAddress(@NonNull String address)" ]
}