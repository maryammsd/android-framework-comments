{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceInfo.java",
  "packageName" : "android.net.wifi.p2p.nsd",
  "className" : "WifiP2pDnsSdServiceInfo",
  "comment" : "\n * A class for storing Bonjour service information that is advertised\n * over a Wi-Fi peer-to-peer setup.\n *\n * {@see android.net.wifi.p2p.WifiP2pManager#addLocalService}\n * {@see android.net.wifi.p2p.WifiP2pManager#removeLocalService}\n * {@see WifiP2pServiceInfo}\n * {@see WifiP2pUpnpServiceInfo}\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "VERSION_1",
    "type" : "int",
    "comment" : "\n     * Bonjour version 1.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DNS_TYPE_PTR",
    "type" : "int",
    "comment" : "\n     * Pointer record.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DNS_TYPE_TXT",
    "type" : "int",
    "comment" : "\n     * Text record.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "sVmPacket",
    "type" : "Map<String, String>",
    "comment" : "\n     * virtual memory packet.\n     * see E.3 of the Wi-Fi Direct technical specification for the detail.<br>\n     * Key: domain name Value: pointer address.<br>\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static WifiP2pDnsSdServiceInfo newInstance(String instanceName, String serviceType, Map<String, String> txtMap)",
    "returnType" : "WifiP2pDnsSdServiceInfo",
    "comment" : "\n     * Create a Bonjour service information object.\n     *\n     * @param instanceName instance name.<br>\n     *  e.g) \"MyPrinter\"\n     * @param serviceType service type.<br>\n     *  e.g) \"_ipp._tcp\"\n     * @param txtMap TXT record with key/value pair in a map confirming to format defined at\n     * http://files.dns-sd.org/draft-cheshire-dnsext-dns-sd.txt\n     * @return Bonjour service information object\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String createPtrServiceQuery(String instanceName, String serviceType)",
    "returnType" : "String",
    "comment" : "\n     * Create wpa_supplicant service query for PTR record.\n     *\n     * @param instanceName instance name.<br>\n     *  e.g) \"MyPrinter\"\n     * @param serviceType service type.<br>\n     *  e.g) \"_ipp._tcp\"\n     * @return wpa_supplicant service query.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String createTxtServiceQuery(String instanceName, String serviceType, DnsSdTxtRecord txtRecord)",
    "returnType" : "String",
    "comment" : "\n     * Create wpa_supplicant service query for TXT record.\n     *\n     * @param instanceName instance name.<br>\n     *  e.g) \"MyPrinter\"\n     * @param serviceType service type.<br>\n     *  e.g) \"_ipp._tcp\"\n     * @param txtRecord TXT record.<br>\n     * @return wpa_supplicant service query.\n     ",
    "links" : [ ]
  }, {
    "name" : " static String createRequest(String dnsName, int dnsType, int version)",
    "returnType" : "String",
    "comment" : "\n     * Create bonjour service discovery request.\n     *\n     * @param dnsName dns name\n     * @param dnsType dns type\n     * @param version version number\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String compressDnsName(String dnsName)",
    "returnType" : "String",
    "comment" : "\n     * Compress DNS data.\n     *\n     * see E.3 of the Wi-Fi Direct technical specification for the detail.\n     *\n     * @param dnsName dns name\n     * @return compressed dns name\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static WifiP2pDnsSdServiceInfo newInstance(String instanceName, String serviceType, Map<String, String> txtMap)", "private static String createPtrServiceQuery(String instanceName, String serviceType)", "private static String createTxtServiceQuery(String instanceName, String serviceType, DnsSdTxtRecord txtRecord)", " static String createRequest(String dnsName, int dnsType, int version)", "private static String compressDnsName(String dnsName)" ],
  "variableNames" : [ "VERSION_1", "DNS_TYPE_PTR", "DNS_TYPE_TXT", "sVmPacket" ]
}