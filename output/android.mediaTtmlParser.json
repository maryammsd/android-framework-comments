{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/TtmlRenderer.java",
  "packageName" : "android.media",
  "className" : "TtmlParser",
  "comment" : "\n * A simple TTML parser (http://www.w3.org/TR/ttaf1-dfxp/) which supports DFXP\n * presentation profile.\n * <p>\n * Supported features in this parser are:\n * <ul>\n * <li>content\n * <li>core\n * <li>presentation\n * <li>profile\n * <li>structure\n * <li>time-offset\n * <li>timing\n * <li>tickRate\n * <li>time-clock-with-frames\n * <li>time-clock\n * <li>time-offset-with-frames\n * <li>time-offset-with-ticks\n * </ul>\n * </p>\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_FRAMERATE",
    "type" : "int",
    "comment" : " TODO: read and apply the following attributes if specified.",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_SUBFRAMERATE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_TICKRATE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParser",
    "type" : "XmlPullParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "TtmlNodeListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentRunId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void parse(String ttmlText, long runId) throws XmlPullParserException, IOException",
    "returnType" : "void",
    "comment" : "\n     * Parse TTML data. Once this is called, all the previous data are\n     * reset and it starts parsing for the given text.\n     *\n     * @param ttmlText TTML text to parse.\n     * @throws XmlPullParserException\n     * @throws IOException\n     ",
    "links" : [ ]
  }, {
    "name" : "private void loadParser(String ttmlFragment) throws XmlPullParserException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void extractAttribute(XmlPullParser parser, int i, StringBuilder out)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void parseTtml() throws XmlPullParserException, IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private TtmlNode parseNode(TtmlNode parent) throws XmlPullParserException, IOException",
    "returnType" : "TtmlNode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isEndOfDoc() throws XmlPullParserException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isSupportedTag(String tag)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DEFAULT_FRAMERATE", "DEFAULT_SUBFRAMERATE", "DEFAULT_TICKRATE", "mParser", "mListener", "mCurrentRunId" ],
  "methodNames" : [ "public void parse(String ttmlText, long runId) throws XmlPullParserException, IOException", "private void loadParser(String ttmlFragment) throws XmlPullParserException", "private void extractAttribute(XmlPullParser parser, int i, StringBuilder out)", "private void parseTtml() throws XmlPullParserException, IOException", "private TtmlNode parseNode(TtmlNode parent) throws XmlPullParserException, IOException", "private boolean isEndOfDoc() throws XmlPullParserException", "private static boolean isSupportedTag(String tag)" ]
}