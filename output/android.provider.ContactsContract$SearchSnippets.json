{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "SearchSnippets",
  "comment" : "\n     * Additional column returned by\n     * {@link ContactsContract.Contacts#CONTENT_FILTER_URI Contacts.CONTENT_FILTER_URI} explaining\n     * why the filter matched the contact. This column will contain extracts from the contact's\n     * constituent {@link Data Data} items, formatted in a way that indicates the section of the\n     * snippet that matched the filter.\n     *\n     * <p>\n     * The following example searches for all contacts that match the query \"presi\" and requests\n     * the snippet column as well.\n     * <pre>\n     * Builder builder = Contacts.CONTENT_FILTER_URI.buildUpon();\n     * builder.appendPath(\"presi\");\n     * // Defer snippeting to the client side if possible, for performance reasons.\n     * builder.appendQueryParameter(SearchSnippets.DEFERRED_SNIPPETING_KEY,\"1\");\n     *\n     * Cursor cursor = getContentResolver().query(builder.build());\n     *\n     * Bundle extras = cursor.getExtras();\n     * if (extras.getBoolean(ContactsContract.DEFERRED_SNIPPETING)) {\n     *     // Do our own snippet formatting.\n     *     // For a contact with the email address (president@organization.com), the snippet\n     *     // column will contain the string \"president@organization.com\".\n     * } else {\n     *     // The snippet has already been pre-formatted, we can display it as is.\n     *     // For a contact with the email address (president@organization.com), the snippet\n     *     // column will contain the string \"[presi]dent@organization.com\".\n     * }\n     * </pre>\n     * </p>\n     ",
  "links" : [ "ContactsContract.Contacts#CONTENT_FILTER_URI", "Data" ],
  "variables" : [ {
    "name" : "SNIPPET",
    "type" : "String",
    "comment" : "\n         * The search snippet constructed by SQLite snippeting functionality.\n         * <p>\n         * The snippet may contain (parts of) several data elements belonging to the contact,\n         * with the matching parts optionally surrounded by special characters that indicate the\n         * start and end of matching text.\n         *\n         * For example, if a contact has an address \"123 Main Street\", using a filter \"mai\" would\n         * return the formatted snippet \"123 [Mai]n street\".\n         *\n         * @see <a href=\"http://www.sqlite.org/fts3.html#snippet\">\n         *         http://www.sqlite.org/fts3.html#snippet</a>\n         ",
    "links" : [ ]
  }, {
    "name" : "SNIPPET_ARGS_PARAM_KEY",
    "type" : "String",
    "comment" : "\n         * Comma-separated parameters for the generation of the snippet:\n         * <ul>\n         * <li>The \"start match\" text. Default is '['</li>\n         * <li>The \"end match\" text. Default is ']'</li>\n         * <li>The \"ellipsis\" text. Default is \"...\"</li>\n         * <li>Maximum number of tokens to include in the snippet. Can be either\n         * a positive or a negative number: A positive number indicates how many\n         * tokens can be returned in total. A negative number indicates how many\n         * tokens can be returned per occurrence of the search terms.</li>\n         * </ul>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFERRED_SNIPPETING_KEY",
    "type" : "String",
    "comment" : "\n         * The key to ask the provider to defer the formatting of the snippet to the client if\n         * possible, for performance reasons.\n         * A value of 1 indicates true, 0 indicates false. False is the default.\n         * When a cursor is returned to the client, it should check for an extra with the name\n         * {@link ContactsContract#DEFERRED_SNIPPETING} in the cursor. If it exists, the client\n         * should do its own formatting of the snippet. If it doesn't exist, the snippet column\n         * in the cursor should already contain a formatted snippet.\n         ",
    "links" : [ "android.provider.ContactsContract#DEFERRED_SNIPPETING" ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "SNIPPET", "SNIPPET_ARGS_PARAM_KEY", "DEFERRED_SNIPPETING_KEY" ]
}