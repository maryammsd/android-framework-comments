{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/interfaces/XECPrivateKey.java",
  "packageName" : "java.security.interfaces",
  "className" : "XECPrivateKey",
  "comment" : "\n * An interface for an elliptic curve private key as defined by RFC 7748.\n * These keys are distinct from the keys represented by {@code ECPrivateKey},\n * and they are intended for use with algorithms based on RFC 7748 such as the\n * XDH {@code KeyAgreement} algorithm.\n *\n * An XEC private key is an encoded scalar value as described in RFC 7748.\n * The decoding procedure defined in this RFC includes an operation that forces\n * certain bits of the key to either 1 or 0. This operation is known as\n * \"pruning\" or \"clamping\" the private key. Arrays returned by this interface\n * are unpruned, and implementations will need to prune the array before\n * using it in any numerical operations.\n *\n * @since 11\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " Optional<byte[]> getScalar()",
    "returnType" : "Optional<byte[]>",
    "comment" : "\n     * Get the scalar value encoded as an unpruned byte array. A new copy of\n     * the array is returned each time this method is called.\n     *\n     * @return the unpruned encoded scalar value, or an empty Optional if the\n     *     scalar cannot be extracted (e.g. if the provider is a hardware token\n     *     and the private key is not allowed to leave the crypto boundary).\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " Optional<byte[]> getScalar()" ],
  "variableNames" : [ ]
}