{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/BytesTrieBuilder.java",
  "packageName" : "android.icu.util",
  "className" : "BytesTrieBuilder",
  "comment" : "\n * Builder class for BytesTrie.\n *\n * <p>This class is not intended for public subclassing.\n *\n * @author Markus W. Scherer\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "intBytes",
    "type" : "byte[]",
    "comment" : " For writeValueAndFinal() and writeDeltaTo().",
    "links" : [ ]
  }, {
    "name" : "bytes",
    "type" : "byte[]",
    "comment" : " Grows from the back: bytesLength measures from the end of the buffer!",
    "links" : [ ]
  }, {
    "name" : "bytesLength",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public BytesTrieBuilder add(byte[] sequence, int length, int value)",
    "returnType" : "BytesTrieBuilder",
    "comment" : "\n     * Adds a (byte sequence, value) pair.\n     * The byte sequence must be unique.\n     * Bytes 0..length-1 will be copied; the builder does not keep\n     * a reference to the input array.\n     * @param sequence The array that contains the byte sequence, starting at index 0.\n     * @param length The length of the byte sequence.\n     * @param value The value associated with this byte sequence.\n     * @return this\n     ",
    "links" : [ ]
  }, {
    "name" : "public BytesTrie build(StringTrieBuilder.Option buildOption)",
    "returnType" : "BytesTrie",
    "comment" : "\n     * Builds a BytesTrie for the add()ed data.\n     * Once built, no further data can be add()ed until clear() is called.\n     *\n     * <p>A BytesTrie cannot be empty. At least one (byte sequence, value) pair\n     * must have been add()ed.\n     *\n     * <p>Multiple calls to build() or buildByteBuffer() return tries or buffers\n     * which share the builder's byte array, without rebuilding.\n     * <em>The byte array must not be modified via the buildByteBuffer() result object.</em>\n     * After clear() has been called, a new array will be used.\n     * @param buildOption Build option, see StringTrieBuilder.Option.\n     * @return A new BytesTrie for the add()ed data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ByteBuffer buildByteBuffer(StringTrieBuilder.Option buildOption)",
    "returnType" : "ByteBuffer",
    "comment" : "\n     * Builds a BytesTrie for the add()ed data and byte-serializes it.\n     * Once built, no further data can be add()ed until clear() is called.\n     *\n     * <p>A BytesTrie cannot be empty. At least one (byte sequence, value) pair\n     * must have been add()ed.\n     *\n     * <p>Multiple calls to build() or buildByteBuffer() return tries or buffers\n     * which share the builder's byte array, without rebuilding.\n     * <em>Do not modify the bytes in the buffer!</em>\n     * After clear() has been called, a new array will be used.\n     *\n     * <p>The serialized BytesTrie is accessible via the buffer's\n     * array()/arrayOffset()+position() or remaining()/get(byte[]) etc.\n     * @param buildOption Build option, see StringTrieBuilder.Option.\n     * @return A ByteBuffer with the byte-serialized BytesTrie for the add()ed data.\n     *         The buffer is not read-only and array() can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void buildBytes(StringTrieBuilder.Option buildOption)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public BytesTrieBuilder clear()",
    "returnType" : "BytesTrieBuilder",
    "comment" : "\n     * Removes all (byte sequence, value) pairs.\n     * New data can then be add()ed and a new trie can be built.\n     * @return this\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean matchNodesCanHaveValues()",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int getMaxBranchLinearSubNodeLength()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int getMinLinearMatch()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int getMaxLinearMatchLength()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private void ensureCapacity(int length)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int write(int b)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int write(int offset, int length)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private int write(byte[] b, int length)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int writeValueAndFinal(int i, boolean isFinal)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int writeValueAndType(boolean hasValue, int value, int node)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int writeDeltaTo(int jumpTarget)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final int internalEncodeDelta(int i, byte[] intBytes)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public BytesTrieBuilder add(byte[] sequence, int length, int value)", "public BytesTrie build(StringTrieBuilder.Option buildOption)", "public ByteBuffer buildByteBuffer(StringTrieBuilder.Option buildOption)", "private void buildBytes(StringTrieBuilder.Option buildOption)", "public BytesTrieBuilder clear()", "protected boolean matchNodesCanHaveValues()", "protected int getMaxBranchLinearSubNodeLength()", "protected int getMinLinearMatch()", "protected int getMaxLinearMatchLength()", "private void ensureCapacity(int length)", "protected int write(int b)", "protected int write(int offset, int length)", "private int write(byte[] b, int length)", "protected int writeValueAndFinal(int i, boolean isFinal)", "protected int writeValueAndType(boolean hasValue, int value, int node)", "protected int writeDeltaTo(int jumpTarget)", "public static final int internalEncodeDelta(int i, byte[] intBytes)" ],
  "variableNames" : [ "intBytes", "bytes", "bytesLength" ]
}