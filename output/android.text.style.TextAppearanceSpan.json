{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/text/style/TextAppearanceSpan.java",
  "packageName" : "android.text.style",
  "className" : "TextAppearanceSpan",
  "comment" : "\n * Sets the text appearance using the given\n * {@link android.R.styleable#TextAppearance TextAppearance} attributes.\n * By default {@link TextAppearanceSpan} only changes the specified attributes in XML.\n * {@link android.R.styleable#TextAppearance_textColorHighlight textColorHighlight},\n * {@link android.R.styleable#TextAppearance_textColorHint textColorHint},\n * {@link android.R.styleable#TextAppearance_textAllCaps textAllCaps} and\n * {@link android.R.styleable#TextAppearance_fallbackLineSpacing fallbackLineSpacing}\n * are not supported by {@link TextAppearanceSpan}.\n *\n * {@see android.widget.TextView#setTextAppearance(int)}\n *\n * @attr ref android.R.styleable#TextAppearance_fontFamily\n * @attr ref android.R.styleable#TextAppearance_textColor\n * @attr ref android.R.styleable#TextAppearance_textColorLink\n * @attr ref android.R.styleable#TextAppearance_textFontWeight\n * @attr ref android.R.styleable#TextAppearance_textSize\n * @attr ref android.R.styleable#TextAppearance_textStyle\n * @attr ref android.R.styleable#TextAppearance_typeface\n * @attr ref android.R.styleable#TextAppearance_shadowColor\n * @attr ref android.R.styleable#TextAppearance_shadowDx\n * @attr ref android.R.styleable#TextAppearance_shadowDy\n * @attr ref android.R.styleable#TextAppearance_shadowRadius\n * @attr ref android.R.styleable#TextAppearance_elegantTextHeight\n * @attr ref android.R.styleable#TextAppearance_letterSpacing\n * @attr ref android.R.styleable#TextAppearance_fontFeatureSettings\n * @attr ref android.R.styleable#TextAppearance_fontVariationSettings\n *\n ",
  "variables" : [ {
    "name" : "mFamilyName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStyle",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextColor",
    "type" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextColorLink",
    "type" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTypeface",
    "type" : "Typeface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextFontWeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextLocales",
    "type" : "LocaleList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShadowRadius",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShadowDx",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShadowDy",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShadowColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasElegantTextHeight",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElegantTextHeight",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasLetterSpacing",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLetterSpacing",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFontFeatureSettings",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFontVariationSettings",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getSpanTypeId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeIdInternal()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcelInternal(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String getFamily()",
    "returnType" : "String",
    "comment" : "\n     * Returns the typeface family specified by this span, or <code>null</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ColorStateList getTextColor()",
    "returnType" : "ColorStateList",
    "comment" : "\n     * Returns the text color specified by this span, or <code>null</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ColorStateList getLinkTextColor()",
    "returnType" : "ColorStateList",
    "comment" : "\n     * Returns the link color specified by this span, or <code>null</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTextSize()",
    "returnType" : "int",
    "comment" : "\n     * Returns the text size specified by this span, or <code>-1</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTextStyle()",
    "returnType" : "int",
    "comment" : "\n     * Returns the text style specified by this span, or <code>0</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTextFontWeight()",
    "returnType" : "int",
    "comment" : "\n     * Returns the text font weight specified by this span, or <code>-1</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public LocaleList getTextLocales()",
    "returnType" : "LocaleList",
    "comment" : "\n     * Returns the {@link android.os.LocaleList} specified by this span, or <code>null</code>\n     * if it does not specify one.\n     ",
    "links" : [ "android.os.LocaleList" ]
  }, {
    "name" : "public Typeface getTypeface()",
    "returnType" : "Typeface",
    "comment" : "\n     * Returns the typeface specified by this span, or <code>null</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getShadowColor()",
    "returnType" : "int",
    "comment" : "\n     * Returns the color of the text shadow specified by this span, or <code>0</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getShadowDx()",
    "returnType" : "float",
    "comment" : "\n     * Returns the horizontal offset of the text shadow specified by this span, or <code>0.0f</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getShadowDy()",
    "returnType" : "float",
    "comment" : "\n     * Returns the vertical offset of the text shadow specified by this span, or <code>0.0f</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getShadowRadius()",
    "returnType" : "float",
    "comment" : "\n     * Returns the blur radius of the text shadow specified by this span, or <code>0.0f</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFontFeatureSettings()",
    "returnType" : "String",
    "comment" : "\n     * Returns the font feature settings specified by this span, or <code>null</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFontVariationSettings()",
    "returnType" : "String",
    "comment" : "\n     * Returns the font variation settings specified by this span, or <code>null</code>\n     * if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isElegantTextHeight()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns the value of elegant height metrics flag specified by this span,\n     * or <code>false</code> if it does not specify one.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void updateDrawState(TextPaint ds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateMeasureState(TextPaint ds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mFamilyName", "mStyle", "mTextSize", "mTextColor", "mTextColorLink", "mTypeface", "mTextFontWeight", "mTextLocales", "mShadowRadius", "mShadowDx", "mShadowDy", "mShadowColor", "mHasElegantTextHeight", "mElegantTextHeight", "mHasLetterSpacing", "mLetterSpacing", "mFontFeatureSettings", "mFontVariationSettings" ],
  "methodNames" : [ "public int getSpanTypeId()", "public int getSpanTypeIdInternal()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void writeToParcelInternal(Parcel dest, int flags)", "public String getFamily()", "public ColorStateList getTextColor()", "public ColorStateList getLinkTextColor()", "public int getTextSize()", "public int getTextStyle()", "public int getTextFontWeight()", "public LocaleList getTextLocales()", "public Typeface getTypeface()", "public int getShadowColor()", "public float getShadowDx()", "public float getShadowDy()", "public float getShadowRadius()", "public String getFontFeatureSettings()", "public String getFontVariationSettings()", "public boolean isElegantTextHeight()", "public void updateDrawState(TextPaint ds)", "public void updateMeasureState(TextPaint ds)" ]
}