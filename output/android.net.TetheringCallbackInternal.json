{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/TetheringManager.java",
  "packageName" : "android.net",
  "className" : "TetheringCallbackInternal",
  "comment" : "",
  "variables" : [ {
    "name" : "mError",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWaitForCallback",
    "type" : "ConditionVariable",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onCallbackStarted(TetheringCallbackStartedParcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onCallbackStopped(int errorCode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onUpstreamChanged(Network network)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onConfigurationChanged(TetheringConfigurationParcel config)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onTetherStatesChanged(TetherStatesParcel states)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onTetherClientsChanged(List<TetheredClient> clients)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onOffloadStatusChanged(int status)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void waitForStarted()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mError", "mWaitForCallback" ],
  "methodNames" : [ "public void onCallbackStarted(TetheringCallbackStartedParcel parcel)", "public void onCallbackStopped(int errorCode)", "public void onUpstreamChanged(Network network)", "public void onConfigurationChanged(TetheringConfigurationParcel config)", "public void onTetherStatesChanged(TetherStatesParcel states)", "public void onTetherClientsChanged(List<TetheredClient> clients)", "public void onOffloadStatusChanged(int status)", "public void waitForStarted()" ]
}