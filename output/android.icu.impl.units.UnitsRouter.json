{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/units/UnitsRouter.java",
  "packageName" : "android.icu.impl.units",
  "className" : "UnitsRouter",
  "comment" : "\n * {@code UnitsRouter} responsible for converting from a single unit (such as {@code meter} or\n * {@code meter-per-second}) to one of the complex units based on the limits.\n * For example:\n * if the input is {@code meter} and the output as following\n * {{@code foot+inch}, limit: 3.0}\n * {{@code inch}     , limit: no value (-inf)}\n * Thus means if the input in {@code meter} is greater than or equal to {@code 3.0 feet},\n * the output will be in {@code foot+inch}, otherwise, the output will be in {@code inch}.\n * <p>\n * NOTE:\n * the output units and their limits MUST BE in order, for example, if the output units, from the\n * previous example, are the following:\n * {{@code inch}     , limit: no value (-inf)}\n * {{@code foot+inch}, limit: 3.0}\n * IN THIS CASE THE OUTPUT WILL BE ALWAYS IN {@code inch}.\n * <p>\n * NOTE:\n * the output units and their limits will be extracted from the units preferences database by knowing\n * the followings:\n * - input unit\n * - locale\n * - usage\n * <p>\n * DESIGN:\n * {@code UnitRouter} uses internally {@code ComplexUnitConverter} in order to convert the input\n * units to the desired complex units and to check the limit too.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "outputUnits_",
    "type" : "ArrayList<MeasureUnit>",
    "comment" : " construct a the list from data in converterPreferences_ instead?",
    "links" : [ ]
  }, {
    "name" : "converterPreferences_",
    "type" : "ArrayList<ConverterPreference>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public RouteResult route(BigDecimal quantity, MicroProps micros)",
    "returnType" : "RouteResult",
    "comment" : " If micros.rounder is a BogusRounder, this function replaces it with a valid one. ",
    "links" : [ ]
  }, {
    "name" : "private static Precision parseSkeletonToPrecision(String precisionSkeleton)",
    "returnType" : "Precision",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<MeasureUnit> getOutputUnits()",
    "returnType" : "List<MeasureUnit>",
    "comment" : "\n     * Returns the list of possible output units, i.e. the full set of\n     * preferences, for the localized, usage-specific unit preferences.\n     * <p>\n     * The returned pointer should be valid for the lifetime of the\n     * UnitsRouter instance.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public RouteResult route(BigDecimal quantity, MicroProps micros)", "private static Precision parseSkeletonToPrecision(String precisionSkeleton)", "public List<MeasureUnit> getOutputUnits()" ],
  "variableNames" : [ "outputUnits_", "converterPreferences_" ]
}