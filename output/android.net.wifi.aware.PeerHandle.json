{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/aware/PeerHandle.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "PeerHandle",
  "comment" : "\n * Opaque object used to represent a Wi-Fi Aware peer. Obtained from discovery sessions in\n * {@link DiscoverySessionCallback#onServiceDiscovered(PeerHandle, byte[], java.util.List)} or\n * received messages in {@link DiscoverySessionCallback#onMessageReceived(PeerHandle, byte[])}, and\n * used when sending messages e,g, {@link DiscoverySession#sendMessage(PeerHandle, int, byte[])},\n * or when configuring a network link to a peer, e.g.\n * {@link DiscoverySession#createNetworkSpecifierOpen(PeerHandle)} or\n * {@link DiscoverySession#createNetworkSpecifierPassphrase(PeerHandle, String)}.\n * <p>\n * Note that while a {@code PeerHandle} can be used to track a particular peer (i.e. you can compare\n * the values received from subsequent messages) - it is good practice not to rely on it. Instead\n * use an application level peer identifier encoded in the message,\n * {@link DiscoverySession#sendMessage(PeerHandle, int, byte[])}, and/or in the Publish\n * configuration's service-specific information field,\n * {@link PublishConfig.Builder#setServiceSpecificInfo(byte[])}, or match filter,\n * {@link PublishConfig.Builder#setMatchFilter(java.util.List)}.\n * <p>A parcelable handle object is available with {@link ParcelablePeerHandle}.\n ",
  "variables" : [ {
    "name" : "peerId",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "peerId" ],
  "methodNames" : [ "public boolean equals(Object o)", "public int hashCode()" ]
}