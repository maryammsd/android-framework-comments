{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/WebViewDatabase.java",
  "packageName" : "android.webkit",
  "className" : "WebViewDatabase",
  "comment" : "\n * This class allows developers to determine whether any WebView used in the\n * application has stored any of the following types of browsing data and\n * to clear any such stored data for all WebViews in the application.\n * <ul>\n *  <li>Username/password pairs for web forms</li>\n *  <li>HTTP authentication username/password pairs</li>\n *  <li>Data entered into text fields (e.g. for autocomplete suggestions)</li>\n * </ul>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOGTAG",
    "type" : "String",
    "comment" : "\n     * @hide Since API level {@link android.os.Build.VERSION_CODES#JELLY_BEAN_MR1}\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#JELLY_BEAN_MR1" ]
  } ],
  "methods" : [ {
    "name" : "public static WebViewDatabase getInstance(Context context)",
    "returnType" : "WebViewDatabase",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean hasUsernamePassword()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether there are any saved username/password pairs for web forms.\n     * Note that these are unrelated to HTTP authentication credentials.\n     *\n     * @return {@code true} if there are any saved username/password pairs\n     * @see WebView#savePassword\n     * @see #clearUsernamePassword\n     * @deprecated Saving passwords in WebView will not be supported in future versions.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void clearUsernamePassword()",
    "returnType" : "void",
    "comment" : "\n     * Clears any saved username/password pairs for web forms.\n     * Note that these are unrelated to HTTP authentication credentials.\n     *\n     * @see WebView#savePassword\n     * @see #hasUsernamePassword\n     * @deprecated Saving passwords in WebView will not be supported in future versions.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean hasHttpAuthUsernamePassword()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether there are any saved credentials for HTTP authentication.\n     *\n     * @return whether there are any saved credentials\n     * @see #getHttpAuthUsernamePassword\n     * @see #setHttpAuthUsernamePassword\n     * @see #clearHttpAuthUsernamePassword\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void clearHttpAuthUsernamePassword()",
    "returnType" : "void",
    "comment" : "\n     * Clears any saved credentials for HTTP authentication. This method only clears the username\n     * and password stored in WebViewDatabase instance. The username and password are not read from\n     * the {@link WebViewDatabase} during {@link WebViewClient#onReceivedHttpAuthRequest}. It is up\n     * to the app to do this or not.\n     * <p>\n     * The username and password used for http authentication might be cached in the network stack\n     * itself, and are not cleared when this method is called.  WebView does not provide a special\n     * mechanism to clear HTTP authentication for implementing client logout. The client logout\n     * mechanism should be implemented by the Web site designer (such as server sending a HTTP 401\n     * for invalidating credentials).\n     *\n     * @see #getHttpAuthUsernamePassword\n     * @see #setHttpAuthUsernamePassword\n     * @see #hasHttpAuthUsernamePassword\n     ",
    "links" : [ "android.webkit.WebViewClient#onReceivedHttpAuthRequest", "android.webkit.WebViewDatabase" ]
  }, {
    "name" : "public abstract void setHttpAuthUsernamePassword(String host, String realm, String username, String password)",
    "returnType" : "void",
    "comment" : "\n     * Stores HTTP authentication credentials for a given host and realm to the {@link WebViewDatabase}\n     * instance.\n     * <p>\n     * To use HTTP authentication, the embedder application has to implement\n     * {@link WebViewClient#onReceivedHttpAuthRequest}, and call {@link HttpAuthHandler#proceed}\n     * with the correct username and password.\n     * <p>\n     * The embedder app can get the username and password any way it chooses, and does not have to\n     * use {@link WebViewDatabase}.\n     * <p>\n     * Notes:\n     * <li>\n     * {@link WebViewDatabase} is provided only as a convenience to store and retrieve http\n     * authentication credentials. WebView does not read from it during HTTP authentication.\n     * </li>\n     * <li>\n     * WebView does not provide a special mechanism to clear HTTP authentication credentials for\n     * implementing client logout. The client logout mechanism should be implemented by the Web site\n     * designer (such as server sending a HTTP 401 for invalidating credentials).\n     * </li>\n     *\n     * @param host the host to which the credentials apply\n     * @param realm the realm to which the credentials apply\n     * @param username the username\n     * @param password the password\n     * @see #getHttpAuthUsernamePassword\n     * @see #hasHttpAuthUsernamePassword\n     * @see #clearHttpAuthUsernamePassword\n     ",
    "links" : [ "android.webkit.WebViewClient#onReceivedHttpAuthRequest", "android.webkit.WebViewDatabase", "android.webkit.HttpAuthHandler#proceed" ]
  }, {
    "name" : "public abstract String[] getHttpAuthUsernamePassword(String host, String realm)",
    "returnType" : "String[]",
    "comment" : "\n     * Retrieves HTTP authentication credentials for a given host and realm from the {@link\n     * WebViewDatabase} instance.\n     *\n     * @param host the host to which the credentials apply\n     * @param realm the realm to which the credentials apply\n     * @return the credentials as a String array, if found. The first element\n     *         is the username and the second element is the password. {@code null} if\n     *         no credentials are found.\n     * @see #setHttpAuthUsernamePassword\n     * @see #hasHttpAuthUsernamePassword\n     * @see #clearHttpAuthUsernamePassword\n     ",
    "links" : [ "android.webkit.WebViewDatabase" ]
  }, {
    "name" : "public abstract boolean hasFormData()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether there is any saved data for web forms.\n     *\n     * @return whether there is any saved data for web forms\n     * @see #clearFormData\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void clearFormData()",
    "returnType" : "void",
    "comment" : "\n     * Clears any saved data for web forms.\n     *\n     * @see #hasFormData\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static WebViewDatabase getInstance(Context context)", "public abstract boolean hasUsernamePassword()", "public abstract void clearUsernamePassword()", "public abstract boolean hasHttpAuthUsernamePassword()", "public abstract void clearHttpAuthUsernamePassword()", "public abstract void setHttpAuthUsernamePassword(String host, String realm, String username, String password)", "public abstract String[] getHttpAuthUsernamePassword(String host, String realm)", "public abstract boolean hasFormData()", "public abstract void clearFormData()" ],
  "variableNames" : [ "LOGTAG" ]
}