{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/PackageManagerUtils.java",
  "packageName" : "org.chromium.base",
  "className" : "PackageManagerUtils",
  "comment" : " This class provides Android PackageManager related utility methods. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BROWSER_INTENT",
    "type" : "Intent",
    "comment" : " https://cs.android.com/android/_/android/platform/packages/modules/Permission/+/android12-release:PermissionController/src/com/android/permissioncontroller/role/model/BrowserRoleBehavior.java;drc=86fa7d5dfa43f66b170f93ade4f59b9a770be32f;l=50",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static ResolveInfo resolveActivity(Intent intent, int flags)",
    "returnType" : "ResolveInfo",
    "comment" : "\n     * Retrieve information about the Activity that will handle the given Intent.\n     *\n     * Note: This function is expensive on KK and below and should not be called from main thread\n     * when avoidable.\n     *\n     * @param intent Intent to resolve.\n     * @param flags The PackageManager flags to pass to resolveActivity().\n     * @return       ResolveInfo of the Activity that will handle the Intent, or null if it failed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static List<ResolveInfo> queryIntentActivities(Intent intent, int flags)",
    "returnType" : "List<ResolveInfo>",
    "comment" : "\n     * Get the list of component name of activities which can resolve |intent|.  If the request\n     * fails, an empty list will be returned.\n     *\n     * See {@link PackageManager#queryIntentActivities(Intent, int)}\n     ",
    "links" : [ "android.content.pm.PackageManager#queryIntentActivities(Intent" ]
  }, {
    "name" : "public static boolean canResolveActivity(Intent intent, int flags)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if the given Intent can be resolved by any Activities on the system.\n     *\n     * See {@link PackageManagerUtils#queryIntentActivities(Intent, int)}\n     ",
    "links" : [ "org.chromium.base.PackageManagerUtils#queryIntentActivities(Intent" ]
  }, {
    "name" : "public static boolean canResolveActivity(Intent intent)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if the given Intent can be resolved by any Activities on the system.\n     *\n     * See {@link PackageManagerUtils#canResolveActivity(Intent, int)}\n     ",
    "links" : [ "org.chromium.base.PackageManagerUtils#canResolveActivity(Intent" ]
  }, {
    "name" : "public static Intent getQueryInstalledHomeLaunchersIntent()",
    "returnType" : "Intent",
    "comment" : "\n     * @return Intent to query a list of installed home launchers.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ResolveInfo resolveDefaultWebBrowserActivity()",
    "returnType" : "ResolveInfo",
    "comment" : "\n     * @return Default ResolveInfo to handle a VIEW intent for a url.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static List<ResolveInfo> queryAllWebBrowsersInfo()",
    "returnType" : "List<ResolveInfo>",
    "comment" : "\n     * @return The list of names of web browser applications available in the system. A browser\n     *         may appear twice if it has multiple intent handlers.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static List<ResolveInfo> queryAllLaunchersInfo()",
    "returnType" : "List<ResolveInfo>",
    "comment" : "\n     * @return The list of names of system launcher applications available in the system.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void handleExpectedExceptionsOrRethrow(RuntimeException e, Intent intent)",
    "returnType" : "void",
    "comment" : " See https://crbug.com/700505 and https://crbug.com/369574.",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static ResolveInfo resolveActivity(Intent intent, int flags)", "public static List<ResolveInfo> queryIntentActivities(Intent intent, int flags)", "public static boolean canResolveActivity(Intent intent, int flags)", "public static boolean canResolveActivity(Intent intent)", "public static Intent getQueryInstalledHomeLaunchersIntent()", "public static ResolveInfo resolveDefaultWebBrowserActivity()", "public static List<ResolveInfo> queryAllWebBrowsersInfo()", "public static List<ResolveInfo> queryAllLaunchersInfo()", "private static void handleExpectedExceptionsOrRethrow(RuntimeException e, Intent intent)" ],
  "variableNames" : [ "TAG", "BROWSER_INTENT" ]
}