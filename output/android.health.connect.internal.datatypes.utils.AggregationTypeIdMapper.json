{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/health/connect/internal/datatypes/utils/AggregationTypeIdMapper.java",
  "packageName" : "android.health.connect.internal.datatypes.utils",
  "className" : "AggregationTypeIdMapper",
  "comment" : "\n * Creates and maintains a map of {@link AggregationType.AggregationTypeIdentifier} to {@link\n * AggregationType} and its result creator {@link AggregationResultCreator}\n *\n * @hide\n ",
  "links" : [ "AggregationResultCreator", "android.health.connect.datatypes.AggregationType", "AggregationType.AggregationTypeIdentifier" ],
  "variables" : [ {
    "name" : "sAggregationTypeIdMapper",
    "type" : "AggregationTypeIdMapper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIdToAggregateResult",
    "type" : "Map<Integer, AggregationResultCreator>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIdDataAggregationTypeMap",
    "type" : "Map<Integer, AggregationType<?>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDataAggregationTypeIdMap",
    "type" : "Map<AggregationType<?>, Integer>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static synchronized AggregationTypeIdMapper getInstance()",
    "returnType" : "AggregationTypeIdMapper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public AggregateResult<?> getAggregateResultFor(@AggregationType.AggregationTypeIdentifier.Id int id, @NonNull Parcel parcel)",
    "returnType" : "AggregateResult<?>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public AggregationType<?> getAggregationTypeFor(@AggregationType.AggregationTypeIdentifier.Id int id)",
    "returnType" : "AggregationType<?>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getIdFor(AggregationType<?> aggregationType)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Long> getLongResult(long result)",
    "returnType" : "AggregateResult<Long>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Double> getDoubleResult(double result)",
    "returnType" : "AggregateResult<Double>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Energy> getEnergyResult(double result)",
    "returnType" : "AggregateResult<Energy>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Power> getPowerResult(double result)",
    "returnType" : "AggregateResult<Power>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<TemperatureDelta> getTemperatureDeltaResult(double result)",
    "returnType" : "AggregateResult<TemperatureDelta>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Pressure> getPressureResult(double result)",
    "returnType" : "AggregateResult<Pressure>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Length> getLengthResult(double result)",
    "returnType" : "AggregateResult<Length>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Volume> getVolumeResult(double result)",
    "returnType" : "AggregateResult<Volume>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Mass> getMassResult(double result)",
    "returnType" : "AggregateResult<Mass>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private AggregateResult<Velocity> getVelocityResult(double result)",
    "returnType" : "AggregateResult<Velocity>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addLongIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addDoubleIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addEnergyIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addPowerIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addTemperatureDeltaIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addPressureIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addLengthIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addVolumeIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addMassIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addVelocityIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void populateIdDataAggregationType(AggregationType<?> aggregationType)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static synchronized AggregationTypeIdMapper getInstance()", "public AggregateResult<?> getAggregateResultFor(@AggregationType.AggregationTypeIdentifier.Id int id, @NonNull Parcel parcel)", "public AggregationType<?> getAggregationTypeFor(@AggregationType.AggregationTypeIdentifier.Id int id)", "public int getIdFor(AggregationType<?> aggregationType)", "private AggregateResult<Long> getLongResult(long result)", "private AggregateResult<Double> getDoubleResult(double result)", "private AggregateResult<Energy> getEnergyResult(double result)", "private AggregateResult<Power> getPowerResult(double result)", "private AggregateResult<TemperatureDelta> getTemperatureDeltaResult(double result)", "private AggregateResult<Pressure> getPressureResult(double result)", "private AggregateResult<Length> getLengthResult(double result)", "private AggregateResult<Volume> getVolumeResult(double result)", "private AggregateResult<Mass> getMassResult(double result)", "private AggregateResult<Velocity> getVelocityResult(double result)", "private void addLongIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addDoubleIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addEnergyIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addPowerIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addTemperatureDeltaIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addPressureIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addLengthIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addVolumeIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addMassIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void addVelocityIdsToAggregateResultMap(@NonNull List<AggregationType<?>> aggregationTypeList)", "private void populateIdDataAggregationType(AggregationType<?> aggregationType)" ],
  "variableNames" : [ "sAggregationTypeIdMapper", "mIdToAggregateResult", "mIdDataAggregationTypeMap", "mDataAggregationTypeIdMap" ]
}