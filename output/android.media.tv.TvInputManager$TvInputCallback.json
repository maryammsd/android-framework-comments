{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/TvInputManager.java",
  "packageName" : "android.media.tv",
  "className" : "TvInputCallback",
  "comment" : "\n     * Callback used to monitor status of the TV inputs.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onInputStateChanged(String inputId, @InputState int state)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the state of a given TV input is changed.\n         *\n         * @param inputId The ID of the TV input.\n         * @param state State of the TV input. The value is one of the following:\n         * <ul>\n         * <li>{@link TvInputManager#INPUT_STATE_CONNECTED}\n         * <li>{@link TvInputManager#INPUT_STATE_CONNECTED_STANDBY}\n         * <li>{@link TvInputManager#INPUT_STATE_DISCONNECTED}\n         * </ul>\n         ",
    "links" : [ "android.media.tv.TvInputManager#INPUT_STATE_CONNECTED_STANDBY", "android.media.tv.TvInputManager#INPUT_STATE_DISCONNECTED", "android.media.tv.TvInputManager#INPUT_STATE_CONNECTED" ]
  }, {
    "name" : "public void onInputAdded(String inputId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a TV input is added to the system.\n         *\n         * <p>Normally it happens when the user installs a new TV input package that implements\n         * {@link TvInputService} interface.\n         *\n         * @param inputId The ID of the TV input.\n         ",
    "links" : [ "android.media.tv.TvInputService" ]
  }, {
    "name" : "public void onInputRemoved(String inputId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a TV input is removed from the system.\n         *\n         * <p>Normally it happens when the user uninstalls the previously installed TV input\n         * package.\n         *\n         * @param inputId The ID of the TV input.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onInputUpdated(String inputId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when a TV input is updated on the system.\n         *\n         * <p>Normally it happens when a previously installed TV input package is re-installed or\n         * the media on which a newer version of the package exists becomes available/unavailable.\n         *\n         * @param inputId The ID of the TV input.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTvInputInfoUpdated(TvInputInfo inputInfo)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the information about an existing TV input has been updated.\n         *\n         * <p>Because the system automatically creates a <code>TvInputInfo</code> object for each TV\n         * input based on the information collected from the <code>AndroidManifest.xml</code>, this\n         * method is only called back when such information has changed dynamically.\n         *\n         * @param inputInfo The <code>TvInputInfo</code> object that contains new information.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onCurrentTunedInfosUpdated(@NonNull List<TunedInfo> tunedInfos)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the information about current tuned information has been updated.\n         *\n         * @param tunedInfos a list of {@link TunedInfo} objects of new tuned information.\n         * @hide\n         ",
    "links" : [ "android.media.tv.TunedInfo" ]
  } ],
  "methodNames" : [ "public void onInputStateChanged(String inputId, @InputState int state)", "public void onInputAdded(String inputId)", "public void onInputRemoved(String inputId)", "public void onInputUpdated(String inputId)", "public void onTvInputInfoUpdated(TvInputInfo inputInfo)", "public void onCurrentTunedInfosUpdated(@NonNull List<TunedInfo> tunedInfos)" ],
  "variableNames" : [ ]
}