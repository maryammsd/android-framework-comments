{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssNavigationMessage.java",
  "packageName" : "android.location",
  "className" : "GnssNavigationMessage",
  "comment" : "\n * A class containing a GNSS satellite Navigation Message.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "EMPTY_ARRAY",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_UNKNOWN",
    "type" : "int",
    "comment" : " Message type unknown ",
    "links" : [ ]
  }, {
    "name" : "TYPE_GPS_L1CA",
    "type" : "int",
    "comment" : " GPS L1 C/A message contained in the structure.  ",
    "links" : [ ]
  }, {
    "name" : "TYPE_GPS_L2CNAV",
    "type" : "int",
    "comment" : " GPS L2-CNAV message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_GPS_L5CNAV",
    "type" : "int",
    "comment" : " GPS L5-CNAV message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_GPS_CNAV2",
    "type" : "int",
    "comment" : " GPS CNAV-2 message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_SBS",
    "type" : "int",
    "comment" : " SBAS message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_GLO_L1CA",
    "type" : "int",
    "comment" : " Glonass L1 CA message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_QZS_L1CA",
    "type" : "int",
    "comment" : " QZSS L1 C/A message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_BDS_D1",
    "type" : "int",
    "comment" : " Beidou D1 message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_BDS_D2",
    "type" : "int",
    "comment" : " Beidou D2 message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_BDS_CNAV1",
    "type" : "int",
    "comment" : " Beidou CNAV1 message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_BDS_CNAV2",
    "type" : "int",
    "comment" : " Beidou CNAV2 message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_GAL_I",
    "type" : "int",
    "comment" : " Galileo I/NAV message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_GAL_F",
    "type" : "int",
    "comment" : " Galileo F/NAV message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_IRN_L5CA",
    "type" : "int",
    "comment" : "\n     * NavIC L5 C/A message contained in the structure.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_IRN_L5",
    "type" : "int",
    "comment" : " NavIC L5 message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_IRN_L1",
    "type" : "int",
    "comment" : " NavIC L1 message contained in the structure. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * The Navigation Message Status is 'unknown'.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_PARITY_PASSED",
    "type" : "int",
    "comment" : "\n     * The Navigation Message was received without any parity error in its navigation words.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_PARITY_REBUILT",
    "type" : "int",
    "comment" : "\n     * The Navigation Message was received with words that failed parity check, but the receiver was\n     * able to correct those words.\n     ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSvid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubmessageId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<GnssNavigationMessage>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void set(GnssNavigationMessage navigationMessage)",
    "returnType" : "void",
    "comment" : "\n     * Sets all contents to the values stored in the provided object.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "\n     * Resets all the contents to its original state.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * Gets the type of the navigation message contained in the object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setType(@GnssNavigationMessageType int value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the type of the navigation message.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private String getTypeString()",
    "returnType" : "String",
    "comment" : "\n     * Gets a string representation of the 'type'.\n     * For internal and logging use only.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSvid()",
    "returnType" : "int",
    "comment" : "\n     * Gets the satellite ID.\n     *\n     * <p>Range varies by constellation.  See definition at {@code GnssStatus#getSvid(int)}\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSvid(@IntRange(from = 1, to = 200) int value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the satellite ID.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMessageId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the Message identifier.\n     *\n     * <p>This provides an index to help with complete Navigation Message assembly. Similar\n     * identifiers within the data bits themselves often supplement this information, in ways even\n     * more specific to each message type; see the relevant satellite constellation ICDs for\n     * details.\n     *\n     * <ul>\n     * <li> For GPS L1 C/A subframe 4 and 5, this value corresponds to the 'frame id' of the\n     * navigation message, in the range of 1-25 (Subframe 1, 2, 3 does not contain a 'frame id' and\n     * this value can be set to -1.)</li>\n     * <li> For Glonass L1 C/A, this refers to the frame ID, in the range of 1-5.</li>\n     * <li> For BeiDou D1, this refers to the frame number in the range of 1-24</li>\n     * <li> For Beidou D2, this refers to the frame number, in the range of 1-120</li>\n     * <li> For Galileo F/NAV nominal frame structure, this refers to the subframe number, in the\n     * range of 1-12</li>\n     * <li> For Galileo I/NAV nominal frame structure, this refers to the subframe number in the\n     * range of 1-24</li>\n     * <li> For SBAS and Beidou CNAV2, this is unused and can be set to -1.</li>\n     * <li> For QZSS L1 C/A subframe 4 and 5, this value corresponds to the 'frame id' of the\n     * navigation message, in the range of 1-25 (Subframe 1, 2, 3 does not contain a 'frame id' and\n     * this value can be set to -1.)</li>\n     * <li> For Beidou CNAV1 this refers to the page type number in the range of 1-63.</li>\n     * <li> For NavIC L5 subframe 3 and 4, this value corresponds to the Message Id of the\n     * navigation message, in the range of 1-63. (Subframe 1 and 2 does not contain a message type\n     * id and this value can be set to -1.)</li>\n     * <li> For NavIC L1 subframe 3, this value corresponds to the Message Id of the navigation\n     * message, in the range of 1-63. (Subframe 1 and 2 does not contain a message type id and this\n     * value can be set to -1.)</li>\n     * </ul>\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMessageId(@IntRange(from = -1, to = 120) int value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the Message Identifier.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSubmessageId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the sub-message identifier, relevant to the {@link #getType()} of the message.\n     *\n     * <ul>\n     * <li> For GPS L1 C/A, BeiDou D1 &amp; BeiDou D2, the submessage id corresponds to the subframe\n     * number of the navigation message, in the range of 1-5.</li>\n     * <li>For Glonass L1 C/A, this refers to the String number, in the range from 1-15</li>\n     * <li>For Galileo F/NAV, this refers to the page type in the range 1-6</li>\n     * <li>For Galileo I/NAV, this refers to the word type in the range 1-10+</li>\n     * <li>For Galileo in particular, the type information embedded within the data bits may be even\n     * more useful in interpretation, than the nominal page and word types provided in this\n     * field.</li>\n     * <li> For SBAS, the submessage id corresponds to the message type, in the range 1-63.</li>\n     * <li> For Beidou CNAV1, the submessage id corresponds to the subframe number of the\n     * navigation message, in the range of 1-3.</li>\n     * <li> For Beidou CNAV2, the submessage id corresponds to the message type, in the range\n     * 1-63.</li>\n     * <li> For NavIC L5, the submessage id corresponds to the subframe number of the navigation\n     * message, in the range of 1-4.</li>\n     * <li> For NavIC L1, the submessage id corresponds to the subframe number of the navigation\n     * message, in the range of 1-3.</li>\n     * </ul>\n     ",
    "links" : [ "#getType()" ]
  }, {
    "name" : "public void setSubmessageId(@IntRange(from = 1) int value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the Sub-message identifier.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getData()",
    "returnType" : "byte[]",
    "comment" : "\n     * Gets the data of the reported GNSS message.\n     *\n     * <p>The bytes (or words) specified using big endian format (MSB first).\n     *\n     * <ul>\n     * <li>For GPS L1 C/A, NavIC L5, Beidou D1 &amp; Beidou D2, each subframe contains 10\n     * 30-bit words. Each word (30 bits) should be fit into the last 30 bits in a 4-byte word (skip\n     * B31 and B32), with MSB first, for a total of 40 bytes, covering a time period of 6, 6, and\n     * 0.6 seconds, respectively.</li>\n     * <li>For Glonass L1 C/A, each string contains 85 data bits, including the checksum.  These\n     * bits should be fit into 11 bytes, with MSB first (skip B86-B88), covering a time period of 2\n     * seconds.</li>\n     * <li>For Galileo F/NAV, each word consists of 238-bit (sync &amp; tail symbols excluded). Each\n     * word should be fit into 30-bytes, with MSB first (skip B239, B240), covering a time period of\n     * 10 seconds.</li>\n     * <li>For Galileo I/NAV, each page contains 2 page parts, even and odd, with a total of 2x114 =\n     * 228 bits, (sync &amp; tail excluded) that should be fit into 29 bytes, with MSB first (skip\n     * B229-B232).</li>\n     * <li>For SBAS, each block consists of 250 data bits, that should be fit into 32 bytes.  MSB\n     * first (skip B251-B256).</li>\n     * <li>For Beidou CNAV1, subframe #1 consists of 14 data bits, that should be fit into 2\n     * bytes. MSB first (skip B15-B16).  subframe #2 consists of 600 bits that should be fit into\n     * 75 bytes. subframe #3 consists of 264 data bits that should be fit into 33 bytes.</li>\n     * <li>For Beidou CNAV2, each subframe consists of 288 data bits, that should be fit into 36\n     * bytes.</li>\n     * <li> For NavIC L1, subframe #1 consists of 9 data bits that should be fit into 2 bytes (skip\n     * B10-B16). subframe #2 consists of 600 bits that should be fit into 75 bytes. subframe #3\n     * consists of 274 data bits that should be fit into 35 bytes (skip B275-B280).</li>\n     * </ul>\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setData(byte[] value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the data associated with the Navigation Message.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getStatus()",
    "returnType" : "int",
    "comment" : "\n     * Gets the Status of the navigation message contained in the object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setStatus(@GnssNavigationMessageStatus int value)",
    "returnType" : "void",
    "comment" : "\n     * Sets the status of the navigation message.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private String getStatusString()",
    "returnType" : "String",
    "comment" : "\n     * Gets a string representation of the 'status'.\n     * For internal and logging use only.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void initialize()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void set(GnssNavigationMessage navigationMessage)", "public void reset()", "public int getType()", "public void setType(@GnssNavigationMessageType int value)", "private String getTypeString()", "public int getSvid()", "public void setSvid(@IntRange(from = 1, to = 200) int value)", "public int getMessageId()", "public void setMessageId(@IntRange(from = -1, to = 120) int value)", "public int getSubmessageId()", "public void setSubmessageId(@IntRange(from = 1) int value)", "public byte[] getData()", "public void setData(byte[] value)", "public int getStatus()", "public void setStatus(@GnssNavigationMessageStatus int value)", "private String getStatusString()", "public void writeToParcel(Parcel parcel, int flags)", "public int describeContents()", "public String toString()", "private void initialize()" ],
  "variableNames" : [ "EMPTY_ARRAY", "TYPE_UNKNOWN", "TYPE_GPS_L1CA", "TYPE_GPS_L2CNAV", "TYPE_GPS_L5CNAV", "TYPE_GPS_CNAV2", "TYPE_SBS", "TYPE_GLO_L1CA", "TYPE_QZS_L1CA", "TYPE_BDS_D1", "TYPE_BDS_D2", "TYPE_BDS_CNAV1", "TYPE_BDS_CNAV2", "TYPE_GAL_I", "TYPE_GAL_F", "TYPE_IRN_L5CA", "TYPE_IRN_L5", "TYPE_IRN_L1", "STATUS_UNKNOWN", "STATUS_PARITY_PASSED", "STATUS_PARITY_REBUILT", "mType", "mSvid", "mMessageId", "mSubmessageId", "mData", "mStatus", "CREATOR" ]
}