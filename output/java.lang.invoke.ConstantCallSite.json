{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/invoke/ConstantCallSite.java",
  "packageName" : "java.lang.invoke",
  "className" : "ConstantCallSite",
  "comment" : "\n * A {@code ConstantCallSite} is a {@link CallSite} whose target is permanent, and can never be changed.\n * An {@code invokedynamic} instruction linked to a {@code ConstantCallSite} is permanently\n * bound to the call site's target.\n * @author John Rose, JSR 292 EG\n * @since 1.7\n ",
  "links" : [ "java.lang.invoke.CallSite" ],
  "variables" : [ {
    "name" : "isFrozen",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final MethodHandle getTarget()",
    "returnType" : "MethodHandle",
    "comment" : "\n     * Returns the target method of the call site, which behaves\n     * like a {@code final} field of the {@code ConstantCallSite}.\n     * That is, the target is always the original value passed\n     * to the constructor call which created this instance.\n     *\n     * @return the immutable linkage state of this call site, a constant method handle\n     * @throws IllegalStateException if the {@code ConstantCallSite} constructor has not completed\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void setTarget(MethodHandle ignore)",
    "returnType" : "void",
    "comment" : "\n     * Always throws an {@link UnsupportedOperationException}.\n     * This kind of call site cannot change its target.\n     * @param ignore a new target proposed for the call site, which is ignored\n     * @throws UnsupportedOperationException because this kind of call site cannot change its target\n     ",
    "links" : [ "UnsupportedOperationException" ]
  }, {
    "name" : "public final MethodHandle dynamicInvoker()",
    "returnType" : "MethodHandle",
    "comment" : "\n     * Returns this call site's permanent target.\n     * Since that target will never change, this is a correct implementation\n     * of {@link CallSite#dynamicInvoker CallSite.dynamicInvoker}.\n     * @return the immutable linkage state of this call site, a constant method handle\n     * @throws IllegalStateException if the {@code ConstantCallSite} constructor has not completed\n     ",
    "links" : [ "java.lang.invoke.CallSite#dynamicInvoker" ]
  } ],
  "methodNames" : [ "public final MethodHandle getTarget()", "public final void setTarget(MethodHandle ignore)", "public final MethodHandle dynamicInvoker()" ],
  "variableNames" : [ "isFrozen" ]
}