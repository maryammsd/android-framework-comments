{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/HapticScrollFeedbackProvider.java",
  "packageName" : "android.view",
  "className" : "HapticScrollFeedbackProvider",
  "comment" : "\n * {@link ScrollFeedbackProvider} that performs haptic feedback when scrolling.\n *\n * <p>Each scrolling widget should have its own instance of this class to ensure that scroll state\n * is isolated.\n *\n * <p>Check {@link ScrollFeedbackProvider} for details on the arguments that should be passed to the\n * methods in this class. To check if your input device ID, source, and motion axis are valid for\n * haptic feedback, you can use the\n * {@link ViewConfiguration#isHapticScrollFeedbackEnabled(int, int, int)} API.\n *\n * @hide\n ",
  "links" : [ "android.view.ViewConfiguration#isHapticScrollFeedbackEnabled(int", "android.view.ScrollFeedbackProvider" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TICK_INTERVAL_NO_TICK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INITIAL_END_OF_LIST_HAPTICS_ENABLED",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mView",
    "type" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mViewConfig",
    "type" : "ViewConfiguration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisabledIfViewPlaysScrollHaptics",
    "type" : "boolean",
    "comment" : "\n     * Flag to disable the logic in this class if the View-based scroll haptics implementation is\n     * enabled. If {@code false}, this class will continue to run despite the View's scroll\n     * haptics implementation being enabled. This value should be set to {@code true} when this\n     * class is directly used by the View class.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDeviceId",
    "type" : "int",
    "comment" : " The ID of the {link @InputDevice} that caused the latest scroll event. ",
    "links" : [ ]
  }, {
    "name" : "mAxis",
    "type" : "int",
    "comment" : " The axis on which the latest scroll event happened. ",
    "links" : [ ]
  }, {
    "name" : "mSource",
    "type" : "int",
    "comment" : " The {@link InputDevice} source from which the latest scroll event happened. ",
    "links" : [ "android.view.InputDevice" ]
  }, {
    "name" : "mTickIntervalPixels",
    "type" : "int",
    "comment" : " The tick interval corresponding to the current InputDevice/source/axis. ",
    "links" : [ ]
  }, {
    "name" : "mTotalScrollPixels",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCanPlayLimitFeedback",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHapticScrollFeedbackEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onScrollProgress(int inputDeviceId, int source, int axis, int deltaInPixels)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onScrollLimit(int inputDeviceId, int source, int axis, boolean isStart)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSnapToItem(int inputDeviceId, int source, int axis)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void maybeUpdateCurrentConfig(int deviceId, int source, int axis)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateTickIntervals(int deviceId, int source, int axis)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onScrollProgress(int inputDeviceId, int source, int axis, int deltaInPixels)", "public void onScrollLimit(int inputDeviceId, int source, int axis, boolean isStart)", "public void onSnapToItem(int inputDeviceId, int source, int axis)", "private void maybeUpdateCurrentConfig(int deviceId, int source, int axis)", "private void updateTickIntervals(int deviceId, int source, int axis)" ],
  "variableNames" : [ "TAG", "TICK_INTERVAL_NO_TICK", "INITIAL_END_OF_LIST_HAPTICS_ENABLED", "mView", "mViewConfig", "mDisabledIfViewPlaysScrollHaptics", "mDeviceId", "mAxis", "mSource", "mTickIntervalPixels", "mTotalScrollPixels", "mCanPlayLimitFeedback", "mHapticScrollFeedbackEnabled" ]
}