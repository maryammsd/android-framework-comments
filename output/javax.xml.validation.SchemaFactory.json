{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/validation/SchemaFactory.java",
  "packageName" : "javax.xml.validation",
  "className" : "SchemaFactory",
  "comment" : "\n * Factory that creates {@link Schema} objects&#x2E; Entry-point to\n * the validation API.\n *\n * <p>\n * {@link SchemaFactory} is a schema compiler. It reads external\n * representations of schemas and prepares them for validation.\n *\n * <p>\n * The {@link SchemaFactory} class is not thread-safe. In other words,\n * it is the application's responsibility to ensure that at most\n * one thread is using a {@link SchemaFactory} object at any\n * given moment. Implementations are encouraged to mark methods\n * as <tt>synchronized</tt> to protect themselves from broken clients.\n *\n * <p>\n * {@link SchemaFactory} is not re-entrant. While one of the\n * <code>newSchema</code> methods is being invoked, applications\n * may not attempt to recursively invoke the <code>newSchema</code> method,\n * even from the same thread.\n *\n * <h2><a name=\"schemaLanguage\"></a>Schema Language</h2>\n * <p>\n * This spec uses a namespace URI to designate a schema language.\n * The following table shows the values defined by this specification.\n * <p>\n * To be compliant with the spec, the implementation\n * is only required to support W3C XML Schema 1.0. However,\n * if it chooses to support other schema languages listed here,\n * it must conform to the relevant behaviors described in this spec.\n *\n * <p>\n * Schema languages not listed here are expected to\n * introduce their own URIs to represent themselves.\n * The {@link SchemaFactory} class is capable of locating other\n * implementations for other schema languages at run-time.\n *\n * <p>\n * Note that because the XML DTD is strongly tied to the parsing process\n * and has a significant effect on the parsing process, it is impossible\n * to define the DTD validation as a process independent from parsing.\n * For this reason, this specification does not define the semantics for\n * the XML DTD. This doesn't prohibit implementers from implementing it\n * in a way they see fit, but <em>users are warned that any DTD\n * validation implemented on this interface necessarily deviate from\n * the XML DTD semantics as defined in the XML 1.0</em>.\n *\n * <table border=\"1\" cellpadding=\"2\">\n *   <thead>\n *     <tr>\n *       <th>value</th>\n *       <th>language</th>\n *     </tr>\n *   </thead>\n *   <tbody>\n *     <tr>\n *       <td>{@link javax.xml.XMLConstants#W3C_XML_SCHEMA_NS_URI} (\"<code>http://www.w3.org/2001/XMLSchema</code>\")</td>\n *       <td><a href=\"http://www.w3.org/TR/xmlschema-1\">W3C XML Schema 1.0</a></td>\n *     </tr>\n *     <tr>\n *       <td>{@link javax.xml.XMLConstants#RELAXNG_NS_URI} (\"<code>http://relaxng.org/ns/structure/1.0</code>\")</td>\n *       <td><a href=\"http://www.relaxng.org/\">RELAX NG 1.0</a></td>\n *     </tr>\n *   </tbody>\n * </table>\n *\n * @author  <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>\n * @version $Revision: 884952 $, $Date: 2009-11-27 10:55:08 -0800 (Fri, 27 Nov 2009) $\n * @since 1.5\n ",
  "links" : [ "javax.xml.validation.SchemaFactory", "javax.xml.XMLConstants#W3C_XML_SCHEMA_NS_URI", "javax.xml.XMLConstants#RELAXNG_NS_URI", "javax.xml.validation.Schema" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static SchemaFactory newInstance(String schemaLanguage)",
    "returnType" : "SchemaFactory",
    "comment" : "\n     * <p>Lookup an implementation of the <code>SchemaFactory</code> that supports the specified\n     * schema language and return it.</p>\n     *\n     * <p>To find a <code>SchemaFactory</code> object for a given schema language,\n     * this method looks the following places in the following order\n     * where \"the class loader\" refers to the context class loader:</p>\n     * <ol>\n     *  <li>\n     *     If the system property\n     *     <code>\"javax.xml.validation.SchemaFactory:<i>schemaLanguage</i>\"</code>\n     *     is present (where <i>schemaLanguage</i> is the parameter\n     *     to this method), then its value is read\n     *     as a class name. The method will try to\n     *     create a new instance of this class by using the class loader,\n     *     and returns it if it is successfully created.\n     *   </li>\n     *   <li>\n     *     <code>$java.home/lib/jaxp.properties</code> is read and\n     *     the value associated with the key being the system property above\n     *     is looked for. If present, the value is processed just like above.\n     *   </li>\n     *   <li>\n     *     <p>The class loader is asked for service provider provider-configuration files matching\n     *     <code>javax.xml.validation.SchemaFactory</code> in the resource directory META-INF/services.\n     *     See the JAR File Specification for file format and parsing rules.\n     *     Each potential service provider is required to implement the method:</p>\n     *     <pre>\n     *        {@link #isSchemaLanguageSupported(String schemaLanguage)}\n     *     </pre>\n     *     The first service provider found in class loader order that supports the specified schema language is returned.\n     *   </li>\n     *   <li>\n     *     Platform default <code>SchemaFactory</code> is located\n     *     in a implementation specific way. There must be a platform default\n     *     <code>SchemaFactory</code> for W3C XML Schema.\n     *   </li>\n     * </ol>\n     *\n     * <p>If everything fails, {@link IllegalArgumentException} will be thrown.</p>\n     *\n     * <p><strong>Tip for Trouble-shooting:</strong></p>\n     * <p>See {@link java.util.Properties#load(java.io.InputStream)} for\n     * exactly how a property file is parsed. In particular, colons ':'\n     * need to be escaped in a property file, so make sure schema language\n     * URIs are properly escaped in it. For example:</p>\n     * <pre>\n     * http\\://www.w3.org/2001/XMLSchema=org.acme.foo.XSSchemaFactory\n     * </pre>\n     *\n     * @param schemaLanguage\n     *      Specifies the schema language which the returned\n     *      SchemaFactory will understand. See\n     *      <a href=\"#schemaLanguage\">the list of available\n     *      schema languages</a> for the possible values.\n     *\n     * @return New instance of a <code>SchemaFactory</code>\n     *\n     * @throws IllegalArgumentException\n     *      If no implementation of the schema language is available.\n     *\n     * @throws NullPointerException\n     *      If the <tt>schemaLanguage</tt> parameter is null.\n     ",
    "links" : [ "#isSchemaLanguageSupported(String", "java.util.Properties#load(java.io.InputStream)", "IllegalArgumentException" ]
  }, {
    "name" : "public static SchemaFactory newInstance(String schemaLanguage, String factoryClassName, ClassLoader classLoader)",
    "returnType" : "SchemaFactory",
    "comment" : "\n     * Returns an instance of the named implementation of {@code SchemaFactory}.\n     *\n     * @throws IllegalArgumentException if {@code factoryClassName} is not available, cannot be\n     *     instantiated, or doesn't support {@code schemaLanguage}.\n     * @since 1.6\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean isSchemaLanguageSupported(String schemaLanguage)",
    "returnType" : "boolean",
    "comment" : "\n     * <p>Is specified schema supported by this <code>SchemaFactory</code>?</p>\n     *\n     * @param schemaLanguage Specifies the schema language which the returned <code>SchemaFactory</code> will understand.\n     *    <code>schemaLanguage</code> must specify a <a href=\"#schemaLanguage\">valid</a> schema language.\n     *\n     * @return <code>true</code> if <code>SchemaFactory</code> supports <code>schemaLanguage</code>, else <code>false</code>.\n     *\n     * @throws NullPointerException If <code>schemaLanguage</code> is <code>null</code>.\n     * @throws IllegalArgumentException If <code>schemaLanguage.length() == 0</code>\n     *   or <code>schemaLanguage</code> does not specify a <a href=\"#schemaLanguage\">valid</a> schema language.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getFeature(String name) throws SAXNotRecognizedException, SAXNotSupportedException",
    "returnType" : "boolean",
    "comment" : "\n     * Look up the value of a feature flag.\n     *\n     * <p>The feature name is any fully-qualified URI.  It is\n     * possible for a {@link SchemaFactory} to recognize a feature name but\n     * temporarily be unable to return its value.\n     *\n     * <p>Implementers are free (and encouraged) to invent their own features,\n     * using names built on their own URIs.</p>\n     *\n     * @param name The feature name, which is a non-null fully-qualified URI.\n     * @return The current value of the feature (true or false).\n     * @exception org.xml.sax.SAXNotRecognizedException If the feature\n     *            value can't be assigned or retrieved.\n     * @exception org.xml.sax.SAXNotSupportedException When the\n     *            {@link SchemaFactory} recognizes the feature name but\n     *            cannot determine its value at this time.\n     * @exception NullPointerException\n     *              if the name parameter is null.\n     * @see #setFeature(String, boolean)\n     ",
    "links" : [ "javax.xml.validation.SchemaFactory" ]
  }, {
    "name" : "public void setFeature(String name, boolean value) throws SAXNotRecognizedException, SAXNotSupportedException",
    "returnType" : "void",
    "comment" : "\n     * Set the value of a feature flag.\n     *\n     * <p>\n     * Feature can be used to control the way a {@link SchemaFactory}\n     * parses schemas, although {@link SchemaFactory}s are not required\n     * to recognize any specific feature names.</p>\n     *\n     * <p>The feature name is any fully-qualified URI.  It is\n     * possible for a {@link SchemaFactory} to expose a feature value but\n     * to be unable to change the current value.</p>\n     *\n     * <p>All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.\n     * When the feature is:</p>\n     * <ul>\n     *   <li>\n     *     <code>true</code>: the implementation will limit XML processing to conform to implementation limits.\n     *     Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources.\n     *     If XML processing is limited for security reasons, it will be reported via a call to the registered\n     *     {@link ErrorHandler#fatalError(org.xml.sax.SAXParseException)}.\n     *     See {@link  #setErrorHandler(ErrorHandler errorHandler)}.\n     *   </li>\n     *   <li>\n     *     <code>false</code>: the implementation will processing XML according to the XML specifications without\n     *     regard to possible implementation limits.\n     *   </li>\n     * </ul>\n     *\n     * @param name The feature name, which is a non-null fully-qualified URI.\n     * @param value The requested value of the feature (true or false).\n     *\n     * @exception org.xml.sax.SAXNotRecognizedException If the feature\n     *            value can't be assigned or retrieved.\n     * @exception org.xml.sax.SAXNotSupportedException When the\n     *            {@link SchemaFactory} recognizes the feature name but\n     *            cannot set the requested value.\n     * @exception NullPointerException\n     *              if the name parameter is null.\n     *\n     * @see #getFeature(String)\n     ",
    "links" : [ "javax.xml.validation.SchemaFactory", "org.xml.sax.ErrorHandler#fatalError(org.xml.sax.SAXParseException)", "#setErrorHandler(ErrorHandler", "javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING" ]
  }, {
    "name" : "public void setProperty(String name, Object object) throws SAXNotRecognizedException, SAXNotSupportedException",
    "returnType" : "void",
    "comment" : "\n     * Set the value of a property.\n     *\n     * <p>The property name is any fully-qualified URI.  It is\n     * possible for a {@link SchemaFactory} to recognize a property name but\n     * to be unable to change the current value.</p>\n     *\n     * <p>{@link SchemaFactory}s are not required to recognize setting\n     * any specific property names.</p>\n     *\n     * @param name The property name, which is a non-null fully-qualified URI.\n     * @param object The requested value for the property.\n     * @exception org.xml.sax.SAXNotRecognizedException If the property\n     *            value can't be assigned or retrieved.\n     * @exception org.xml.sax.SAXNotSupportedException When the\n     *            {@link SchemaFactory} recognizes the property name but\n     *            cannot set the requested value.\n     * @exception NullPointerException\n     *              if the name parameter is null.\n     ",
    "links" : [ "javax.xml.validation.SchemaFactory" ]
  }, {
    "name" : "public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException",
    "returnType" : "Object",
    "comment" : "\n     * Look up the value of a property.\n     *\n     * <p>The property name is any fully-qualified URI.  It is\n     * possible for a {@link SchemaFactory} to recognize a property name but\n     * temporarily be unable to return its value.</p>\n     *\n     * <p>{@link SchemaFactory}s are not required to recognize any specific\n     * property names.</p>\n     *\n     * <p>Implementers are free (and encouraged) to invent their own properties,\n     * using names built on their own URIs.</p>\n     *\n     * @param name The property name, which is a non-null fully-qualified URI.\n     * @return The current value of the property.\n     * @exception org.xml.sax.SAXNotRecognizedException If the property\n     *            value can't be assigned or retrieved.\n     * @exception org.xml.sax.SAXNotSupportedException When the\n     *            XMLReader recognizes the property name but\n     *            cannot determine its value at this time.\n     * @exception NullPointerException\n     *              if the name parameter is null.\n     * @see #setProperty(String, Object)\n     ",
    "links" : [ "javax.xml.validation.SchemaFactory" ]
  }, {
    "name" : "public abstract void setErrorHandler(ErrorHandler errorHandler)",
    "returnType" : "void",
    "comment" : "\n     * Sets the {@link ErrorHandler} to receive errors encountered\n     * during the <code>newSchema</code> method invocation.\n     *\n     * <p>\n     * Error handler can be used to customize the error handling process\n     * during schema parsing. When an {@link ErrorHandler} is set,\n     * errors found during the parsing of schemas will be first sent\n     * to the {@link ErrorHandler}.\n     *\n     * <p>\n     * The error handler can abort the parsing of a schema immediately\n     * by throwing {@link SAXException} from the handler. Or for example\n     * it can print an error to the screen and try to continue the\n     * processing by returning normally from the {@link ErrorHandler}\n     *\n     * <p>\n     * If any {@link Throwable} (or instances of its derived classes)\n     * is thrown from an {@link ErrorHandler},\n     * the caller of the <code>newSchema</code> method will be thrown\n     * the same {@link Throwable} object.\n     *\n     * <p>\n     * {@link SchemaFactory} is not allowed to\n     * throw {@link SAXException} without first reporting it to\n     * {@link ErrorHandler}.\n     *\n     * <p>\n     * Applications can call this method even during a {@link Schema}\n     * is being parsed.\n     *\n     * <p>\n     * When the {@link ErrorHandler} is null, the implementation will\n     * behave as if the following {@link ErrorHandler} is set:\n     * <pre>\n     * class DraconianErrorHandler implements {@link ErrorHandler} {\n     *     public void fatalError( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {\n     *         throw e;\n     *     }\n     *     public void error( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {\n     *         throw e;\n     *     }\n     *     public void warning( {@link org.xml.sax.SAXParseException} e ) throws {@link SAXException} {\n     *         // noop\n     *     }\n     * }\n     * </pre>\n     *\n     * <p>\n     * When a new {@link SchemaFactory} object is created, initially\n     * this field is set to null. This field will <em>NOT</em> be\n     * inherited to {@link Schema}s, {@link Validator}s, or\n     * {@link ValidatorHandler}s that are created from this {@link SchemaFactory}.\n     *\n     *\n     * @param   errorHandler\n     *      A new error handler to be set. This parameter can be null.\n     ",
    "links" : [ "org.xml.sax.ErrorHandler", "org.xml.sax.SAXParseException", "javax.xml.validation.SchemaFactory", "javax.xml.validation.ValidatorHandler", "org.xml.sax.SAXException", "Throwable", "javax.xml.validation.Validator", "javax.xml.validation.Schema" ]
  }, {
    "name" : "public abstract ErrorHandler getErrorHandler()",
    "returnType" : "ErrorHandler",
    "comment" : "\n     * Gets the current {@link ErrorHandler} set to this {@link SchemaFactory}.\n     *\n     * @return\n     *      This method returns the object that was last set through\n     *      the {@link #setErrorHandler(ErrorHandler)} method, or null\n     *      if that method has never been called since this {@link SchemaFactory}\n     *      has created.\n     *\n     * @see #setErrorHandler(ErrorHandler)\n     ",
    "links" : [ "org.xml.sax.ErrorHandler", "javax.xml.validation.SchemaFactory", "#setErrorHandler(ErrorHandler)" ]
  }, {
    "name" : "public abstract void setResourceResolver(LSResourceResolver resourceResolver)",
    "returnType" : "void",
    "comment" : "\n     * Sets the {@link LSResourceResolver} to customize\n     * resource resolution when parsing schemas.\n     *\n     * <p>\n     * {@link SchemaFactory} uses a {@link LSResourceResolver}\n     * when it needs to locate external resources while parsing schemas,\n     * although exactly what constitutes \"locating external resources\" is\n     * up to each schema language. For example, for W3C XML Schema,\n     * this includes files <tt>&lt;include></tt>d or <tt>&lt;import></tt>ed,\n     * and DTD referenced from schema files, etc.\n     *\n     * <p>\n     * Applications can call this method even during a {@link Schema}\n     * is being parsed.\n     *\n     * <p>\n     * When the {@link LSResourceResolver} is null, the implementation will\n     * behave as if the following {@link LSResourceResolver} is set:\n     * <pre>\n     * class DumbDOMResourceResolver implements {@link LSResourceResolver} {\n     *     public {@link org.w3c.dom.ls.LSInput} resolveResource(\n     *         String publicId, String systemId, String baseURI) {\n     *\n     *         return null; // always return null\n     *     }\n     * }\n     * </pre>\n     *\n     * <p>\n     * If a {@link LSResourceResolver} throws a {@link RuntimeException}\n     *  (or instances of its derived classes),\n     * then the {@link SchemaFactory} will abort the parsing and\n     * the caller of the <code>newSchema</code> method will receive\n     * the same {@link RuntimeException}.\n     *\n     * <p>\n     * When a new {@link SchemaFactory} object is created, initially\n     * this field is set to null.  This field will <em>NOT</em> be\n     * inherited to {@link Schema}s, {@link Validator}s, or\n     * {@link ValidatorHandler}s that are created from this {@link SchemaFactory}.\n     *\n     * @param   resourceResolver\n     *      A new resource resolver to be set. This parameter can be null.\n     ",
    "links" : [ "javax.xml.validation.SchemaFactory", "RuntimeException", "javax.xml.validation.ValidatorHandler", "org.w3c.dom.ls.LSResourceResolver", "org.w3c.dom.ls.LSInput", "javax.xml.validation.Validator", "javax.xml.validation.Schema" ]
  }, {
    "name" : "public abstract LSResourceResolver getResourceResolver()",
    "returnType" : "LSResourceResolver",
    "comment" : "\n     * Gets the current {@link LSResourceResolver} set to this {@link SchemaFactory}.\n     *\n     * @return\n     *      This method returns the object that was last set through\n     *      the {@link #setResourceResolver(LSResourceResolver)} method, or null\n     *      if that method has never been called since this {@link SchemaFactory}\n     *      has created.\n     *\n     * @see #setErrorHandler(ErrorHandler)\n     ",
    "links" : [ "javax.xml.validation.SchemaFactory", "#setResourceResolver(LSResourceResolver)", "org.w3c.dom.ls.LSResourceResolver" ]
  }, {
    "name" : "public Schema newSchema(Source schema) throws SAXException",
    "returnType" : "Schema",
    "comment" : "\n     * <p>Parses the specified source as a schema and returns it as a schema.</p>\n     *\n     * <p>This is a convenience method for {@link #newSchema(Source[] schemas)}.</p>\n     *\n     * @param schema Source that represents a schema.\n     *\n     * @return New <code>Schema</code> from parsing <code>schema</code>.\n     *\n     * @throws SAXException If a SAX error occurs during parsing.\n     * @throws NullPointerException if <tt>schema</tt> is null.\n     ",
    "links" : [ "#newSchema(Source" ]
  }, {
    "name" : "public Schema newSchema(File schema) throws SAXException",
    "returnType" : "Schema",
    "comment" : "\n     * <p>Parses the specified <code>File</code> as a schema and returns it as a <code>Schema</code>.</p>\n     *\n     * <p>This is a convenience method for {@link #newSchema(Source schema)}.</p>\n     *\n     * @param schema File that represents a schema.\n     *\n     * @return New <code>Schema</code> from parsing <code>schema</code>.\n     *\n     * @throws SAXException If a SAX error occurs during parsing.\n     * @throws NullPointerException if <tt>schema</tt> is null.\n     ",
    "links" : [ "#newSchema(Source" ]
  }, {
    "name" : "public Schema newSchema(URL schema) throws SAXException",
    "returnType" : "Schema",
    "comment" : "\n     * <p>Parses the specified <code>URL</code> as a schema and returns it as a <code>Schema</code>.</p>\n     *\n     * <p>This is a convenience method for {@link #newSchema(Source schema)}.</p>\n     *\n     * @param schema <code>URL</code> that represents a schema.\n     *\n     * @return New <code>Schema</code> from parsing <code>schema</code>.\n     *\n     * @throws SAXException If a SAX error occurs during parsing.\n     * @throws NullPointerException if <tt>schema</tt> is null.\n     ",
    "links" : [ "#newSchema(Source" ]
  }, {
    "name" : "public abstract Schema newSchema(Source[] schemas) throws SAXException",
    "returnType" : "Schema",
    "comment" : "\n     * Parses the specified source(s) as a schema and returns it as a schema.\n     *\n     * <p>\n     * The callee will read all the {@link Source}s and combine them into a\n     * single schema. The exact semantics of the combination depends on the schema\n     * language that this {@link SchemaFactory} object is created for.\n     *\n     * <p>\n     * When an {@link ErrorHandler} is set, the callee will report all the errors\n     * found in sources to the handler. If the handler throws an exception, it will\n     * abort the schema compilation and the same exception will be thrown from\n     * this method. Also, after an error is reported to a handler, the callee is allowed\n     * to abort the further processing by throwing it. If an error handler is not set,\n     * the callee will throw the first error it finds in the sources.\n     *\n     * <h2>W3C XML Schema 1.0</h2>\n     * <p>\n     * The resulting schema contains components from the specified sources.\n     * The same result would be achieved if all these sources were\n     * imported, using appropriate values for schemaLocation and namespace,\n     * into a single schema document with a different targetNamespace\n     * and no components of its own, if the import elements were given\n     * in the same order as the sources.  Section 4.2.3 of the XML Schema\n     * recommendation describes the options processors have in this\n     * regard.  While a processor should be consistent in its treatment of\n     * JAXP schema sources and XML Schema imports, the behavior between\n     * JAXP-compliant parsers may vary; in particular, parsers may choose\n     * to ignore all but the first &lt;import> for a given namespace,\n     * regardless of information provided in schemaLocation.\n     *\n     * <p>\n     * If the parsed set of schemas includes error(s) as\n     * specified in the section 5.1 of the XML Schema spec, then\n     * the error must be reported to the {@link ErrorHandler}.\n     *\n     * <h2>RELAX NG</h2>\n     *\n     * <p>For RELAX NG, this method must throw {@link UnsupportedOperationException}\n     * if <tt>schemas.length!=1</tt>.\n     *\n     *\n     * @param schemas\n     *      inputs to be parsed. {@link SchemaFactory} is required\n     *      to recognize {@link StreamSource},\n     *      {@link javax.xml.transform.sax.SAXSource},\n     *      and {@link javax.xml.transform.dom.DOMSource}.\n     *\n     * @return\n     *      Always return a non-null valid {@link Schema} object.\n     *      Note that when an error has been reported, there is no\n     *      guarantee that the returned {@link Schema} object is\n     *      meaningful.\n     *\n     * @throws SAXException\n     *      If an error is found during processing the specified inputs.\n     *      When an {@link ErrorHandler} is set, errors are reported to\n     *      there first. See {@link #setErrorHandler(ErrorHandler)}.\n     * @throws NullPointerException\n     *      If the <code>schemas</code> parameter itself is null or\n     *      any item in the array is null.\n     * @throws IllegalArgumentException\n     *      If any item in the array is not recognized by this method.\n     * @throws UnsupportedOperationException\n     *      If the schema language doesn't support this operation.\n     ",
    "links" : [ "javax.xml.transform.dom.DOMSource", "org.xml.sax.ErrorHandler", "javax.xml.transform.sax.SAXSource", "javax.xml.validation.SchemaFactory", "#setErrorHandler(ErrorHandler)", "javax.xml.transform.stream.StreamSource", "javax.xml.transform.Source", "javax.xml.validation.Schema", "UnsupportedOperationException" ]
  }, {
    "name" : "public abstract Schema newSchema() throws SAXException",
    "returnType" : "Schema",
    "comment" : "\n     * Creates a special {@link Schema} object.\n     *\n     * <p>\n     * The exact semantics of the returned {@link Schema} object depends\n     * on the schema language that this {@link SchemaFactory} is created\n     * for.\n     *\n     * <p>\n     * Also, implementations are allowed to use implementation-specific\n     * property/feature to alter the semantics of this method.\n     *\n     *\n     * <h2>W3C XML Schema 1.0</h2>\n     * <p>\n     * For XML Schema, this method creates a {@link Schema} object that\n     * performs validation by using location hints specified in documents.\n     *\n     * <p>\n     * The returned {@link Schema} object assumes that if documents\n     * refer to the same URL in the schema location hints,\n     * they will always resolve to the same schema document. This\n     * assumption allows implementations to reuse parsed results of\n     * schema documents so that multiple validations against the same\n     * schema will run faster.\n     *\n     * <p>\n     * Note that the use of schema location hints introduces a\n     * vulnerability to denial-of-service attacks.\n     *\n     *\n     * <h2>RELAX NG</h2>\n     * <p>\n     * RELAX NG does not support this operation.\n     *\n     * @return\n     *      Always return non-null valid {@link Schema} object.\n     *\n     * @throws UnsupportedOperationException\n     *      If this operation is not supported by the callee.\n     * @throws SAXException\n     *      If this operation is supported but failed for some reason.\n     ",
    "links" : [ "javax.xml.validation.SchemaFactory", "javax.xml.validation.Schema" ]
  } ],
  "methodNames" : [ "public static SchemaFactory newInstance(String schemaLanguage)", "public static SchemaFactory newInstance(String schemaLanguage, String factoryClassName, ClassLoader classLoader)", "public abstract boolean isSchemaLanguageSupported(String schemaLanguage)", "public boolean getFeature(String name) throws SAXNotRecognizedException, SAXNotSupportedException", "public void setFeature(String name, boolean value) throws SAXNotRecognizedException, SAXNotSupportedException", "public void setProperty(String name, Object object) throws SAXNotRecognizedException, SAXNotSupportedException", "public Object getProperty(String name) throws SAXNotRecognizedException, SAXNotSupportedException", "public abstract void setErrorHandler(ErrorHandler errorHandler)", "public abstract ErrorHandler getErrorHandler()", "public abstract void setResourceResolver(LSResourceResolver resourceResolver)", "public abstract LSResourceResolver getResourceResolver()", "public Schema newSchema(Source schema) throws SAXException", "public Schema newSchema(File schema) throws SAXException", "public Schema newSchema(URL schema) throws SAXException", "public abstract Schema newSchema(Source[] schemas) throws SAXException", "public abstract Schema newSchema() throws SAXException" ],
  "variableNames" : [ ]
}