{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/backup/BackupTransport.java",
  "packageName" : "android.app.backup",
  "className" : "TransportImpl",
  "comment" : "\n     * Bridge between the actual IBackupTransport implementation and the stable API.  If the\n     * binder interface needs to change, we use this layer to translate so that we can\n     * (if appropriate) decouple those framework-side changes from the BackupTransport\n     * implementations.\n     ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public String name() throws RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Intent configurationIntent() throws RemoteException",
    "returnType" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String currentDestinationString() throws RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Intent dataManagementIntent()",
    "returnType" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence dataManagementIntentLabel()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String transportDirName() throws RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long requestBackupTime() throws RemoteException",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int initializeDevice() throws RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int performBackup(PackageInfo packageInfo, ParcelFileDescriptor inFd, int flags) throws RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int clearBackupData(PackageInfo packageInfo) throws RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int finishBackup() throws RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RestoreSet[] getAvailableRestoreSets() throws RemoteException",
    "returnType" : "RestoreSet[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getCurrentRestoreSet() throws RemoteException",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int startRestore(long token, PackageInfo[] packages) throws RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RestoreDescription nextRestorePackage() throws RemoteException",
    "returnType" : "RestoreDescription",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getRestoreData(ParcelFileDescriptor outFd) throws RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishRestore() throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long requestFullBackupTime() throws RemoteException",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int performFullBackup(PackageInfo targetPackage, ParcelFileDescriptor socket, int flags) throws RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int checkFullBackupSize(long size)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int sendBackupData(int numBytes) throws RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancelFullBackup() throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAppEligibleForBackup(PackageInfo targetPackage, boolean isFullBackup) throws RemoteException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getBackupQuota(String packageName, boolean isFullBackup)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getTransportFlags()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getNextFullRestoreDataChunk(ParcelFileDescriptor socket)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int abortFullRestore()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public String name() throws RemoteException", "public Intent configurationIntent() throws RemoteException", "public String currentDestinationString() throws RemoteException", "public Intent dataManagementIntent()", "public CharSequence dataManagementIntentLabel()", "public String transportDirName() throws RemoteException", "public long requestBackupTime() throws RemoteException", "public int initializeDevice() throws RemoteException", "public int performBackup(PackageInfo packageInfo, ParcelFileDescriptor inFd, int flags) throws RemoteException", "public int clearBackupData(PackageInfo packageInfo) throws RemoteException", "public int finishBackup() throws RemoteException", "public RestoreSet[] getAvailableRestoreSets() throws RemoteException", "public long getCurrentRestoreSet() throws RemoteException", "public int startRestore(long token, PackageInfo[] packages) throws RemoteException", "public RestoreDescription nextRestorePackage() throws RemoteException", "public int getRestoreData(ParcelFileDescriptor outFd) throws RemoteException", "public void finishRestore() throws RemoteException", "public long requestFullBackupTime() throws RemoteException", "public int performFullBackup(PackageInfo targetPackage, ParcelFileDescriptor socket, int flags) throws RemoteException", "public int checkFullBackupSize(long size)", "public int sendBackupData(int numBytes) throws RemoteException", "public void cancelFullBackup() throws RemoteException", "public boolean isAppEligibleForBackup(PackageInfo targetPackage, boolean isFullBackup) throws RemoteException", "public long getBackupQuota(String packageName, boolean isFullBackup)", "public int getTransportFlags()", "public int getNextFullRestoreDataChunk(ParcelFileDescriptor socket)", "public int abortFullRestore()" ]
}