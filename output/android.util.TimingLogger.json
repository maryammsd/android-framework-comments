{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/util/TimingLogger.java",
  "packageName" : "android.util",
  "className" : "TimingLogger",
  "comment" : "\n * A utility class to help log timings splits throughout a method call.\n * Typical usage is:\n *\n * <pre>\n *     TimingLogger timings = new TimingLogger(TAG, \"methodA\");\n *     // ... do some work A ...\n *     timings.addSplit(\"work A\");\n *     // ... do some work B ...\n *     timings.addSplit(\"work B\");\n *     // ... do some work C ...\n *     timings.addSplit(\"work C\");\n *     timings.dumpToLog();\n * </pre>\n *\n * <p>The dumpToLog call would add the following to the log:</p>\n *\n * <pre>\n *     D/TAG     ( 3459): methodA: begin\n *     D/TAG     ( 3459): methodA:      9 ms, work A\n *     D/TAG     ( 3459): methodA:      1 ms, work B\n *     D/TAG     ( 3459): methodA:      6 ms, work C\n *     D/TAG     ( 3459): methodA: end, 16 ms\n * </pre>\n *\n * @deprecated Use {@link android.os.Trace}, or\n *   <a href=\"https://developer.android.com/studio/profile/benchmark\">Android Studio</a>. In\n *   general, milliseconds is the wrong granularity for method-level tracing. Rounding errors\n *   can overemphasize cheap operations, or underemphasize repeated operations. This timing\n *   system also does not take CPU scheduling or frequency into account.\n ",
  "links" : [ "android.os.Trace" ],
  "variables" : [ {
    "name" : "mTag",
    "type" : "String",
    "comment" : "\n     * The Log tag to use for checking Log.isLoggable and for\n     * logging the timings.\n     ",
    "links" : [ ]
  }, {
    "name" : "mLabel",
    "type" : "String",
    "comment" : " A label to be included in every log. ",
    "links" : [ ]
  }, {
    "name" : "mDisabled",
    "type" : "boolean",
    "comment" : " Used to track whether Log.isLoggable was enabled at reset time. ",
    "links" : [ ]
  }, {
    "name" : "mSplits",
    "type" : "ArrayList<Long>",
    "comment" : " Stores the time of each split. ",
    "links" : [ ]
  }, {
    "name" : "mSplitLabels",
    "type" : "ArrayList<String>",
    "comment" : " Stores the labels for each split. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void reset(String tag, String label)",
    "returnType" : "void",
    "comment" : "\n     * Clear and initialize a TimingLogger object that will log using\n     * the specific tag. If the Log.isLoggable is not enabled to at\n     * least the Log.VERBOSE level for that tag at creation time then\n     * the addSplit and dumpToLog call will do nothing.\n     * @param tag the log tag to use while logging the timings\n     * @param label a string to be displayed with each log\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "\n     * Clear and initialize a TimingLogger object that will log using\n     * the tag and label that was specified previously, either via\n     * the constructor or a call to reset(tag, label). If the\n     * Log.isLoggable is not enabled to at least the Log.VERBOSE\n     * level for that tag at creation time then the addSplit and\n     * dumpToLog call will do nothing.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addSplit(String splitLabel)",
    "returnType" : "void",
    "comment" : "\n     * Add a split for the current time, labeled with splitLabel. If\n     * Log.isLoggable was not enabled to at least the Log.VERBOSE for\n     * the specified tag at construction or reset() time then this\n     * call does nothing.\n     * @param splitLabel a label to associate with this split.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void dumpToLog()",
    "returnType" : "void",
    "comment" : "\n     * Dumps the timings to the log using Log.d(). If Log.isLoggable was\n     * not enabled to at least the Log.VERBOSE for the specified tag at\n     * construction or reset() time then this call does nothing.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void reset(String tag, String label)", "public void reset()", "public void addSplit(String splitLabel)", "public void dumpToLog()" ],
  "variableNames" : [ "mTag", "mLabel", "mDisabled", "mSplits", "mSplitLabels" ]
}