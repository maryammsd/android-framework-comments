{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/compat/ApiHelperForM.java",
  "packageName" : "org.chromium.base.compat",
  "className" : "ApiHelperForM",
  "comment" : "\n * Utility class to use new APIs that were added in M (API level 23). These need to exist in a\n * separate class so that Android framework can successfully verify classes without\n * encountering the new APIs.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static void onPageCommitVisible(WebViewClient webViewClient, WebView webView, String url)",
    "returnType" : "void",
    "comment" : " See {@link WebViewClient#onPageCommitVisible(WebView, String)}, which was added in M. ",
    "links" : [ "android.webkit.WebViewClient#onPageCommitVisible(WebView" ]
  }, {
    "name" : "public static boolean isProcess64Bit()",
    "returnType" : "boolean",
    "comment" : " See {@link Process#is64Bit()}. ",
    "links" : [ "android.os.Process#is64Bit()" ]
  }, {
    "name" : "public static Network getBoundNetworkForProcess(ConnectivityManager connectivityManager)",
    "returnType" : "Network",
    "comment" : " See {@link ConnectivityManager#getBoundNetworkForProcess() } ",
    "links" : [ "android.net.ConnectivityManager#getBoundNetworkForProcess()" ]
  }, {
    "name" : "public static long getNetworkHandle(Network network)",
    "returnType" : "long",
    "comment" : " See {@link Network#getNetworkHandle() } ",
    "links" : [ "android.net.Network#getNetworkHandle()" ]
  }, {
    "name" : "public static Network getActiveNetwork(ConnectivityManager connectivityManager)",
    "returnType" : "Network",
    "comment" : " See @{link ConnectivityManager#getActiveNetwork() } ",
    "links" : [ ]
  }, {
    "name" : "public static NetworkInfo getNetworkInfo(ConnectivityManager connectivityManager, Network network)",
    "returnType" : "NetworkInfo",
    "comment" : " See @{link ConnectivityManager#getNetworkInfo(Network) } ",
    "links" : [ ]
  }, {
    "name" : "public static void requestActivityPermissions(Activity activity, String[] permissions, int requestCode)",
    "returnType" : "void",
    "comment" : " See {@link Activity#requestPermissions(String[], int)}. ",
    "links" : [ "android.app.Activity#requestPermissions(String" ]
  }, {
    "name" : "public static boolean shouldShowRequestPermissionRationale(Activity activity, String permission)",
    "returnType" : "boolean",
    "comment" : " See {@link Activity#shouldShowRequestPermissionRationale(String)}. ",
    "links" : [ "android.app.Activity#shouldShowRequestPermissionRationale(String)" ]
  }, {
    "name" : "public static boolean isPermissionRevokedByPolicy(Activity activity, String permission)",
    "returnType" : "boolean",
    "comment" : " See {@link PackageManager#isPermissionRevokedByPolicy(String, String)}. ",
    "links" : [ "#isPermissionRevokedByPolicy(String" ]
  }, {
    "name" : "public static boolean isCleartextTrafficPermitted()",
    "returnType" : "boolean",
    "comment" : " See {@link NetworkSecurityPolicy#isCleartextTrafficPermitted()}. ",
    "links" : [ "android.security.NetworkSecurityPolicy#isCleartextTrafficPermitted()" ]
  }, {
    "name" : "public static boolean isSystemUser(UserManager userManager)",
    "returnType" : "boolean",
    "comment" : " See {@link UserManager#isSystemUser()}. ",
    "links" : [ "android.os.UserManager#isSystemUser()" ]
  }, {
    "name" : "public static void invalidateContentRectOnActionMode(ActionMode actionMode)",
    "returnType" : "void",
    "comment" : "\n     * See {@link ActionMode#invalidateContentRect()}.\n     *\n     * @param actionMode\n     ",
    "links" : [ "android.view.ActionMode#invalidateContentRect()" ]
  }, {
    "name" : "public static void onWindowFocusChangedOnActionMode(ActionMode actionMode, boolean gainFocus)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int getActionModeType(ActionMode actionMode)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static long getDefaultActionModeHideDuration()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void hideActionMode(ActionMode actionMode, long duration)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int getPendingIntentImmutableFlag()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void reportNetworkConnectivity(ConnectivityManager connectivityManager, Network network, boolean hasConnectivity)",
    "returnType" : "void",
    "comment" : " See {@link ConnectivityManager#reportNetworkConnectivity(Network, boolean)}. ",
    "links" : [ "android.net.ConnectivityManager#reportNetworkConnectivity(Network" ]
  }, {
    "name" : "public static int getActionButton(MotionEvent event)",
    "returnType" : "int",
    "comment" : " See {@link MotionEvent#getActionButton() }. ",
    "links" : [ "android.view.MotionEvent#getActionButton()" ]
  }, {
    "name" : "public static int getModePhysicalWidth(Display.Mode mode)",
    "returnType" : "int",
    "comment" : " See {@link Display.Mode#getPhysicalWidth() }. ",
    "links" : [ "Display.Mode#getPhysicalWidth()" ]
  }, {
    "name" : "public static int getModePhysicalHeight(Display.Mode mode)",
    "returnType" : "int",
    "comment" : " See {@link Display.Mode#getPhysicalHeight() }. ",
    "links" : [ "Display.Mode#getPhysicalHeight()" ]
  }, {
    "name" : "public static Icon createIconWithBitmap(Bitmap bitmap)",
    "returnType" : "Icon",
    "comment" : " See {@link Icon#createWithBitmap(Bitmap) }. ",
    "links" : [ "android.graphics.drawable.Icon#createWithBitmap(Bitmap)" ]
  }, {
    "name" : "public static boolean isDeviceIdleMode(PowerManager powerManager)",
    "returnType" : "boolean",
    "comment" : " See {@link PowerManager#isDeviceIdleMode() }. ",
    "links" : [ "android.os.PowerManager#isDeviceIdleMode()" ]
  }, {
    "name" : "public static T getSystemService(Context context, Class<T> serviceClass)",
    "returnType" : "T",
    "comment" : " See {@link Context#getSystemService(Class<T>)}. ",
    "links" : [ "android.content.Context#getSystemService(Class" ]
  } ],
  "methodNames" : [ "public static void onPageCommitVisible(WebViewClient webViewClient, WebView webView, String url)", "public static boolean isProcess64Bit()", "public static Network getBoundNetworkForProcess(ConnectivityManager connectivityManager)", "public static long getNetworkHandle(Network network)", "public static Network getActiveNetwork(ConnectivityManager connectivityManager)", "public static NetworkInfo getNetworkInfo(ConnectivityManager connectivityManager, Network network)", "public static void requestActivityPermissions(Activity activity, String[] permissions, int requestCode)", "public static boolean shouldShowRequestPermissionRationale(Activity activity, String permission)", "public static boolean isPermissionRevokedByPolicy(Activity activity, String permission)", "public static boolean isCleartextTrafficPermitted()", "public static boolean isSystemUser(UserManager userManager)", "public static void invalidateContentRectOnActionMode(ActionMode actionMode)", "public static void onWindowFocusChangedOnActionMode(ActionMode actionMode, boolean gainFocus)", "public static int getActionModeType(ActionMode actionMode)", "public static long getDefaultActionModeHideDuration()", "public static void hideActionMode(ActionMode actionMode, long duration)", "public static int getPendingIntentImmutableFlag()", "public static void reportNetworkConnectivity(ConnectivityManager connectivityManager, Network network, boolean hasConnectivity)", "public static int getActionButton(MotionEvent event)", "public static int getModePhysicalWidth(Display.Mode mode)", "public static int getModePhysicalHeight(Display.Mode mode)", "public static Icon createIconWithBitmap(Bitmap bitmap)", "public static boolean isDeviceIdleMode(PowerManager powerManager)", "public static T getSystemService(Context context, Class<T> serviceClass)" ],
  "variableNames" : [ ]
}