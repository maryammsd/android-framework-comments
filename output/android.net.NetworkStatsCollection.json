{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/NetworkStatsCollection.java",
  "packageName" : "android.net",
  "className" : "NetworkStatsCollection",
  "comment" : "\n * Collection of {@link NetworkStatsHistory}, stored based on combined key of\n * {@link NetworkIdentitySet}, UID, set, and tag. Knows how to persist itself.\n *\n * @hide\n ",
  "links" : [ "android.net.NetworkIdentitySet", "android.net.NetworkStatsHistory" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FILE_MAGIC",
    "type" : "int",
    "comment" : " File header magic number: \"ANET\" ",
    "links" : [ ]
  }, {
    "name" : "VERSION_NETWORK_INIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VERSION_UID_INIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VERSION_UID_WITH_IDENT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VERSION_UID_WITH_TAG",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VERSION_UID_WITH_SET",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VERSION_UNIFIED_INIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStats",
    "type" : "ArrayMap<Key, NetworkStatsHistory>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBucketDurationMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEndMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalBytes",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDirty",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUseFastDataInput",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getStartMillis()",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getFirstAtomicBucketMillis()",
    "returnType" : "long",
    "comment" : "\n     * Return first atomic bucket in this collection, which is more conservative\n     * than {@link #mStartMillis}.\n     * @hide\n     ",
    "links" : [ "#mStartMillis" ]
  }, {
    "name" : "public long getEndMillis()",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalBytes()",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isDirty()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void clearDirty()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long roundUp(long time)",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long roundDown(long time)",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int[] getRelevantUids(@NetworkStatsAccess.Level int accessLevel)",
    "returnType" : "int[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int[] getRelevantUids(@NetworkStatsAccess.Level int accessLevel, final int callerUid)",
    "returnType" : "int[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public NetworkStatsHistory getHistory(NetworkTemplate template, SubscriptionPlan augmentPlan, int uid, int set, int tag, int fields, long start, long end, @NetworkStatsAccess.Level int accessLevel, int callerUid)",
    "returnType" : "NetworkStatsHistory",
    "comment" : "\n     * Combine all {@link NetworkStatsHistory} in this collection which match\n     * the requested parameters.\n     * @hide\n     ",
    "links" : [ "android.net.NetworkStatsHistory" ]
  }, {
    "name" : "public NetworkStats getSummary(NetworkTemplate template, long start, long end, @NetworkStatsAccess.Level int accessLevel, int callerUid)",
    "returnType" : "NetworkStats",
    "comment" : "\n     * Summarize all {@link NetworkStatsHistory} in this collection which match\n     * the requested parameters across the requested range.\n     *\n     * @param template - a predicate for filtering netstats.\n     * @param start - start of the range, timestamp in milliseconds since the epoch.\n     * @param end - end of the range, timestamp in milliseconds since the epoch.\n     * @param accessLevel - caller access level.\n     * @param callerUid - caller UID.\n     * @hide\n     ",
    "links" : [ "android.net.NetworkStatsHistory" ]
  }, {
    "name" : "public void recordData(NetworkIdentitySet ident, int uid, int set, int tag, long start, long end, NetworkStats.Entry entry)",
    "returnType" : "void",
    "comment" : "\n     * Record given {@link android.net.NetworkStats.Entry} into this collection.\n     * @hide\n     ",
    "links" : [ "android.net.NetworkStats.Entry" ]
  }, {
    "name" : "public void recordHistory(@NonNull Key key, @NonNull NetworkStatsHistory history)",
    "returnType" : "void",
    "comment" : "\n     * Record given {@link NetworkStatsHistory} into this collection.\n     *\n     * @hide\n     ",
    "links" : [ "android.net.NetworkStatsHistory" ]
  }, {
    "name" : "public void recordCollection(@NonNull NetworkStatsCollection another)",
    "returnType" : "void",
    "comment" : "\n     * Record all {@link NetworkStatsHistory} contained in the given collection\n     * into this collection.\n     *\n     * @hide\n     ",
    "links" : [ "android.net.NetworkStatsHistory" ]
  }, {
    "name" : "private NetworkStatsHistory findOrCreateHistory(NetworkIdentitySet ident, int uid, int set, int tag)",
    "returnType" : "NetworkStatsHistory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void read(InputStream in) throws IOException",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void read(DataInput in) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void write(OutputStream out) throws IOException",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void write(DataOutput out) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void readLegacyNetwork(File file) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Read legacy network summary statistics file format into the collection,\n     * See {@code NetworkStatsService#maybeUpgradeLegacyStatsLocked}.\n     *\n     * @deprecated\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void readLegacyUid(File file, boolean onlyTags) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Read legacy Uid statistics file format into the collection,\n     * See {@code NetworkStatsService#maybeUpgradeLegacyStatsLocked}.\n     *\n     * @deprecated\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeUids(int[] uids)",
    "returnType" : "void",
    "comment" : "\n     * Remove any {@link NetworkStatsHistory} attributed to the requested UID,\n     * moving any {@link NetworkStats#TAG_NONE} series to\n     * {@link TrafficStats#UID_REMOVED}.\n     * @hide\n     ",
    "links" : [ "android.net.NetworkStats#TAG_NONE", "android.net.TrafficStats#UID_REMOVED", "android.net.NetworkStatsHistory" ]
  }, {
    "name" : "public void removeHistoryBefore(long cutoffMillis)",
    "returnType" : "void",
    "comment" : "\n     * Remove histories which contains or is before the cutoff timestamp.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private void noteRecordedHistory(long startMillis, long endMillis, long totalBytes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int estimateBuckets()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ArrayList<Key> getSortedKeys()",
    "returnType" : "ArrayList<Key>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(IndentingPrintWriter pw)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void dumpDebug(ProtoOutputStream proto, long tag)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void dumpCheckin(PrintWriter pw, long start, long end)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void dumpCheckin(PrintWriter pw, long start, long end, NetworkTemplate groupTemplate, String groupPrefix)",
    "returnType" : "void",
    "comment" : "\n     * Dump all contained stats that match requested parameters, but group\n     * together all matching {@link NetworkTemplate} under a single prefix.\n     ",
    "links" : [ "android.net.NetworkTemplate" ]
  }, {
    "name" : "private static boolean templateMatches(NetworkTemplate template, NetworkIdentitySet identSet)",
    "returnType" : "boolean",
    "comment" : "\n     * Test if given {@link NetworkTemplate} matches any {@link NetworkIdentity}\n     * in the given {@link NetworkIdentitySet}.\n     ",
    "links" : [ "android.net.NetworkIdentitySet", "android.net.NetworkTemplate", "android.net.NetworkIdentity" ]
  }, {
    "name" : "public Map<Key, NetworkStatsHistory> getEntries()",
    "returnType" : "Map<Key, NetworkStatsHistory>",
    "comment" : "\n     * Get the all historical stats of the collection {@link NetworkStatsCollection}.\n     *\n     * @return All {@link NetworkStatsHistory} in this collection.\n     ",
    "links" : [ "android.net.NetworkStatsHistory", "android.net.NetworkStatsCollection" ]
  }, {
    "name" : "private static String str(NetworkStatsCollection.Key key)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean couldKeyChangeOnImport(NetworkStatsCollection.Key key)",
    "returnType" : "boolean",
    "comment" : " bytes check still need to pass.",
    "links" : [ ]
  }, {
    "name" : "public static String compareStats(NetworkStatsCollection migrated, NetworkStatsCollection legacy, boolean allowKeyChange)",
    "returnType" : "String",
    "comment" : "\n     * Compare two {@link NetworkStatsCollection} instances and returning a human-readable\n     * string description of difference for debugging purpose.\n     *\n     * @hide\n     ",
    "links" : [ "android.net.NetworkStatsCollection" ]
  } ],
  "methodNames" : [ "public void clear()", "public void reset()", "public long getStartMillis()", "public long getFirstAtomicBucketMillis()", "public long getEndMillis()", "public long getTotalBytes()", "public boolean isDirty()", "public void clearDirty()", "public boolean isEmpty()", "public long roundUp(long time)", "public long roundDown(long time)", "public int[] getRelevantUids(@NetworkStatsAccess.Level int accessLevel)", "public int[] getRelevantUids(@NetworkStatsAccess.Level int accessLevel, final int callerUid)", "public NetworkStatsHistory getHistory(NetworkTemplate template, SubscriptionPlan augmentPlan, int uid, int set, int tag, int fields, long start, long end, @NetworkStatsAccess.Level int accessLevel, int callerUid)", "public NetworkStats getSummary(NetworkTemplate template, long start, long end, @NetworkStatsAccess.Level int accessLevel, int callerUid)", "public void recordData(NetworkIdentitySet ident, int uid, int set, int tag, long start, long end, NetworkStats.Entry entry)", "public void recordHistory(@NonNull Key key, @NonNull NetworkStatsHistory history)", "public void recordCollection(@NonNull NetworkStatsCollection another)", "private NetworkStatsHistory findOrCreateHistory(NetworkIdentitySet ident, int uid, int set, int tag)", "public void read(InputStream in) throws IOException", "private void read(DataInput in) throws IOException", "public void write(OutputStream out) throws IOException", "private void write(DataOutput out) throws IOException", "public void readLegacyNetwork(File file) throws IOException", "public void readLegacyUid(File file, boolean onlyTags) throws IOException", "public void removeUids(int[] uids)", "public void removeHistoryBefore(long cutoffMillis)", "private void noteRecordedHistory(long startMillis, long endMillis, long totalBytes)", "private int estimateBuckets()", "private ArrayList<Key> getSortedKeys()", "public void dump(IndentingPrintWriter pw)", "public void dumpDebug(ProtoOutputStream proto, long tag)", "public void dumpCheckin(PrintWriter pw, long start, long end)", "private void dumpCheckin(PrintWriter pw, long start, long end, NetworkTemplate groupTemplate, String groupPrefix)", "private static boolean templateMatches(NetworkTemplate template, NetworkIdentitySet identSet)", "public Map<Key, NetworkStatsHistory> getEntries()", "private static String str(NetworkStatsCollection.Key key)", "private static boolean couldKeyChangeOnImport(NetworkStatsCollection.Key key)", "public static String compareStats(NetworkStatsCollection migrated, NetworkStatsCollection legacy, boolean allowKeyChange)" ],
  "variableNames" : [ "TAG", "FILE_MAGIC", "VERSION_NETWORK_INIT", "VERSION_UID_INIT", "VERSION_UID_WITH_IDENT", "VERSION_UID_WITH_TAG", "VERSION_UID_WITH_SET", "VERSION_UNIFIED_INIT", "mStats", "mBucketDurationMillis", "mStartMillis", "mEndMillis", "mTotalBytes", "mDirty", "mUseFastDataInput" ]
}