{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/sip/SipProfile.java",
  "packageName" : "android.net.sip",
  "className" : "SipProfile",
  "comment" : "\n * Defines a SIP profile, including a SIP account, domain and server information.\n * <p>You can create a {@link SipProfile} using {@link\n * SipProfile.Builder}. You can also retrieve one from a {@link SipSession}, using {@link\n * SipSession#getLocalProfile} and {@link SipSession#getPeerProfile}.</p>\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For more information about using SIP, read the\n * <a href=\"{@docRoot}guide/topics/network/sip.html\">Session Initiation Protocol</a>\n * developer guide.</p>\n * </div>\n ",
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_PORT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TCP",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UDP",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAddress",
    "type" : "Address",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProxyAddress",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPassword",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDomain",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProtocol",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProfileName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAuthUserName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPort",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSendKeepAlive",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoRegistration",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallingUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SipProfile>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SipURI getUri()",
    "returnType" : "SipURI",
    "comment" : "\n     * Gets the SIP URI of this profile.\n     *\n     * @return the SIP URI of this profile\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getUriString()",
    "returnType" : "String",
    "comment" : "\n     * Gets the SIP URI string of this profile.\n     *\n     * @return the SIP URI string of this profile\n     ",
    "links" : [ ]
  }, {
    "name" : "public Address getSipAddress()",
    "returnType" : "Address",
    "comment" : "\n     * Gets the SIP address of this profile.\n     *\n     * @return the SIP address of this profile\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDisplayName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the display name of the user.\n     *\n     * @return the display name of the user\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getUserName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the username.\n     *\n     * @return the username\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getAuthUserName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the username for authentication. If it is null, then the username\n     * is used in authentication instead.\n     *\n     * @return the authentication username\n     * @see #getUserName\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPassword()",
    "returnType" : "String",
    "comment" : "\n     * Gets the password.\n     *\n     * @return the password\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSipDomain()",
    "returnType" : "String",
    "comment" : "\n     * Gets the SIP domain.\n     *\n     * @return the SIP domain\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPort()",
    "returnType" : "int",
    "comment" : "\n     * Gets the port number of the SIP server.\n     *\n     * @return the port number of the SIP server\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getProtocol()",
    "returnType" : "String",
    "comment" : "\n     * Gets the protocol used to connect to the server.\n     *\n     * @return the protocol\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getProxyAddress()",
    "returnType" : "String",
    "comment" : "\n     * Gets the network address of the server outbound proxy.\n     *\n     * @return the network address of the server outbound proxy\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getProfileName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the (user-defined) name of the profile.\n     *\n     * @return name of the profile\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getSendKeepAlive()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets the flag of 'Sending keep-alive'.\n     *\n     * @return the flag of sending SIP keep-alive messages.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getAutoRegistration()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets the flag of 'Auto Registration'.\n     *\n     * @return the flag of registering the profile automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setCallingUid(int uid)",
    "returnType" : "void",
    "comment" : "\n     * Sets the calling process's Uid in the sip service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCallingUid()",
    "returnType" : "int",
    "comment" : "\n     * Gets the calling process's Uid in the sip settings.\n     *\n     * @return the calling process's Uid in the sip settings.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private Object readResolve() throws ObjectStreamException",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "serialVersionUID", "DEFAULT_PORT", "TCP", "UDP", "mAddress", "mProxyAddress", "mPassword", "mDomain", "mProtocol", "mProfileName", "mAuthUserName", "mPort", "mSendKeepAlive", "mAutoRegistration", "mCallingUid", "CREATOR" ],
  "methodNames" : [ "public void writeToParcel(Parcel out, int flags)", "public int describeContents()", "public SipURI getUri()", "public String getUriString()", "public Address getSipAddress()", "public String getDisplayName()", "public String getUserName()", "public String getAuthUserName()", "public String getPassword()", "public String getSipDomain()", "public int getPort()", "public String getProtocol()", "public String getProxyAddress()", "public String getProfileName()", "public boolean getSendKeepAlive()", "public boolean getAutoRegistration()", "public void setCallingUid(int uid)", "public int getCallingUid()", "private Object readResolve() throws ObjectStreamException" ]
}