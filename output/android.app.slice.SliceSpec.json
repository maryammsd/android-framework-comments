{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/slice/SliceSpec.java",
  "packageName" : "android.app.slice",
  "className" : "SliceSpec",
  "comment" : "\n * Class describing the structure of the data contained within a slice.\n * <p>\n * A data version contains a string which describes the type of structure\n * and a revision which denotes this specific implementation. Revisions are expected\n * to be backwards compatible and monotonically increasing. Meaning if a\n * SliceSpec has the same type and an equal or lesser revision,\n * it is expected to be compatible.\n * <p>\n * Apps rendering slices will provide a list of supported versions to the OS which\n * will also be given to the app. Apps should only return a {@link Slice} with a\n * {@link SliceSpec} that one of the supported {@link SliceSpec}s provided\n * {@link #canRender}.\n *\n * @see Slice\n * @see SliceProvider#onBindSlice(Uri, Set)\n * @deprecated Slice framework has been deprecated, it will not receive any updates from\n *          {@link android.os.Build.VANILLA_ICE_CREAM} and forward. If you are looking for a\n *          framework that sends displayable data from one app to another, consider using\n *          {@link android.app.appsearch.AppSearchManager}.\n ",
  "links" : [ "android.app.slice.SliceSpec", "#canRender", "android.app.slice.Slice", "android.os.Build.VANILLA_ICE_CREAM", "android.app.appsearch.AppSearchManager" ],
  "variables" : [ {
    "name" : "mType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRevision",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SliceSpec>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getType()",
    "returnType" : "String",
    "comment" : "\n     * Gets the type of the version.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRevision()",
    "returnType" : "int",
    "comment" : "\n     * Gets the revision of the version.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean canRender(@NonNull SliceSpec candidate)",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates that this spec can be used to render the specified spec.\n     * <p>\n     * Rendering support is not bi-directional (e.g. Spec v3 can render\n     * Spec v2, but Spec v2 cannot render Spec v3).\n     *\n     * @param candidate candidate format of data.\n     * @return true if versions are compatible.\n     * @see androidx.slice.widget.SliceView\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public String getType()", "public int getRevision()", "public boolean canRender(@NonNull SliceSpec candidate)", "public boolean equals(@Nullable Object obj)", "public String toString()" ],
  "variableNames" : [ "mType", "mRevision", "CREATOR" ]
}