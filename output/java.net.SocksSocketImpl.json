{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/net/SocksSocketImpl.java",
  "packageName" : "java.net",
  "className" : "SocksSocketImpl",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "server",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "serverPort",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "external_address",
    "type" : "InetSocketAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "useV4",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cmdsock",
    "type" : "Socket",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cmdIn",
    "type" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cmdOut",
    "type" : "OutputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "applicationSetProxy",
    "type" : "boolean",
    "comment" : " true if the Proxy has been set programatically ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void setV4()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private synchronized void privilegedConnect(final String host, final int port, final int timeout) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void superConnectServer(String host, int port, int timeout) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int remainingMillis(long deadlineMillis) throws IOException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int readSocksReply(InputStream in, byte[] data) throws IOException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int readSocksReply(InputStream in, byte[] data, long deadlineMillis) throws IOException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean authenticate(byte method, InputStream in, BufferedOutputStream out) throws IOException",
    "returnType" : "boolean",
    "comment" : "\n     * Provides the authentication machanism required by the proxy.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean authenticate(byte method, InputStream in, BufferedOutputStream out, long deadlineMillis) throws IOException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void connectV4(InputStream in, OutputStream out, InetSocketAddress endpoint, long deadlineMillis) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void connect(SocketAddress endpoint, int timeout) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Connects the Socks Socket to the specified endpoint. It will first\n     * connect to the SOCKS proxy and negotiate the access. If the proxy\n     * grants the connections, then the connect is successful and all\n     * further traffic will go to the \"real\" endpoint.\n     *\n     * @param   endpoint        the {@code SocketAddress} to connect to.\n     * @param   timeout         the timeout value in milliseconds\n     * @throws  IOException     if the connection can't be established.\n     * @throws  SecurityException if there is a security manager and it\n     *                          doesn't allow the connection\n     * @throws  IllegalArgumentException if endpoint is null or a\n     *          SocketAddress subclass not supported by this socket\n     ",
    "links" : [ ]
  }, {
    "name" : "protected InetAddress getInetAddress()",
    "returnType" : "InetAddress",
    "comment" : "\n     * Returns the value of this socket's {@code address} field.\n     *\n     * @return  the value of this socket's {@code address} field.\n     * @see     java.net.SocketImpl#address\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int getPort()",
    "returnType" : "int",
    "comment" : "\n     * Returns the value of this socket's {@code port} field.\n     *\n     * @return  the value of this socket's {@code port} field.\n     * @see     java.net.SocketImpl#port\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int getLocalPort()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void close() throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String getUserName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " void setV4()", "private synchronized void privilegedConnect(final String host, final int port, final int timeout) throws IOException", "private void superConnectServer(String host, int port, int timeout) throws IOException", "private static int remainingMillis(long deadlineMillis) throws IOException", "private int readSocksReply(InputStream in, byte[] data) throws IOException", "private int readSocksReply(InputStream in, byte[] data, long deadlineMillis) throws IOException", "private boolean authenticate(byte method, InputStream in, BufferedOutputStream out) throws IOException", "private boolean authenticate(byte method, InputStream in, BufferedOutputStream out, long deadlineMillis) throws IOException", "private void connectV4(InputStream in, OutputStream out, InetSocketAddress endpoint, long deadlineMillis) throws IOException", "protected void connect(SocketAddress endpoint, int timeout) throws IOException", "protected InetAddress getInetAddress()", "protected int getPort()", "protected int getLocalPort()", "protected void close() throws IOException", "private String getUserName()" ],
  "variableNames" : [ "server", "serverPort", "external_address", "useV4", "cmdsock", "cmdIn", "cmdOut", "applicationSetProxy" ]
}