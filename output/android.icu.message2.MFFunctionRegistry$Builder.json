{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/message2/MFFunctionRegistry.java",
  "packageName" : "android.icu.message2",
  "className" : "Builder",
  "comment" : "\n     * A {@code Builder} used to build instances of {@link MFFunctionRegistry}.\n     *\n     * @deprecated This API is for technology preview only.\n     * @hide Only a subset of ICU is exposed in Android\n     * @hide draft / provisional / internal are hidden on Android\n     ",
  "links" : [ "android.icu.message2.MFFunctionRegistry" ],
  "variables" : [ {
    "name" : "formattersMap",
    "type" : "Map<String, FormatterFactory>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "selectorsMap",
    "type" : "Map<String, SelectorFactory>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "classToFormatter",
    "type" : "Map<Class<?>, String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder addAll(MFFunctionRegistry functionRegistry)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds all the mapping from another registry to this one.\n         *\n         * @param functionRegistry the registry to copy from.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setFormatter(String formatterName, FormatterFactory formatterFactory)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a mapping from a formatter name to a {@link FormatterFactory}.\n         *\n         * @param formatterName the function name (as used in the MessageFormat 2 syntax).\n         * @param formatterFactory the factory that handles the name.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ "android.icu.message2.FormatterFactory" ]
  }, {
    "name" : "public Builder removeFormatter(String formatterName)",
    "returnType" : "Builder",
    "comment" : "\n         * Remove the formatter associated with the name.\n         *\n         * @param formatterName the name of the formatter to remove.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearFormatters()",
    "returnType" : "Builder",
    "comment" : "\n         * Remove all the formatter mappings.\n         *\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDefaultFormatterNameForType(Class<?> clazz, String formatterName)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a mapping from a type to format to a {@link FormatterFactory} formatter name.\n         *\n         * @param clazz the class of the type to format.\n         * @param formatterName the formatter name (as used in the MessageFormat 2 syntax).\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ "android.icu.message2.FormatterFactory" ]
  }, {
    "name" : "public Builder removeDefaultFormatterNameForType(Class<?> clazz)",
    "returnType" : "Builder",
    "comment" : "\n         * Remove the function name associated with the class.\n         *\n         * @param clazz the class to remove the mapping for.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearDefaultFormatterNames()",
    "returnType" : "Builder",
    "comment" : "\n         * Remove all the class to formatter-names mappings.\n         *\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSelector(String selectorName, SelectorFactory selectorFactory)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a mapping from a selector name to a {@link SelectorFactory}.\n         *\n         * @param selectorName the function name (as used in the MessageFormat 2 syntax).\n         * @param selectorFactory the factory that handles the name.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ "android.icu.message2.SelectorFactory" ]
  }, {
    "name" : "public Builder removeSelector(String selectorName)",
    "returnType" : "Builder",
    "comment" : "\n         * Remove the selector associated with the name.\n         *\n         * @param selectorName the name of the selector to remove.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearSelectors()",
    "returnType" : "Builder",
    "comment" : "\n         * Remove all the selector mappings.\n         *\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public MFFunctionRegistry build()",
    "returnType" : "MFFunctionRegistry",
    "comment" : "\n         * Builds an instance of {@link MFFunctionRegistry}.\n         *\n         * @return the function registry created.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ "android.icu.message2.MFFunctionRegistry" ]
  } ],
  "methodNames" : [ "public Builder addAll(MFFunctionRegistry functionRegistry)", "public Builder setFormatter(String formatterName, FormatterFactory formatterFactory)", "public Builder removeFormatter(String formatterName)", "public Builder clearFormatters()", "public Builder setDefaultFormatterNameForType(Class<?> clazz, String formatterName)", "public Builder removeDefaultFormatterNameForType(Class<?> clazz)", "public Builder clearDefaultFormatterNames()", "public Builder setSelector(String selectorName, SelectorFactory selectorFactory)", "public Builder removeSelector(String selectorName)", "public Builder clearSelectors()", "public MFFunctionRegistry build()" ],
  "variableNames" : [ "formattersMap", "selectorsMap", "classToFormatter" ]
}