{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/UriRelativeFilterGroup.java",
  "packageName" : "android.content",
  "className" : "UriRelativeFilterGroup",
  "comment" : "\n * An intent data matching group based on a URI's relative reference which\n * includes the path, query and fragment.  The group is only considered as\n * matching if <em>all</em> UriRelativeFilters in the group match.  Each\n * UriRelativeFilter defines a matching rule for a URI path, query or fragment.\n * A group must contain one or more UriRelativeFilters to match but does not need to\n * contain UriRelativeFilters for all existing parts of a URI to match.\n *\n * <p>For example, given a URI that contains path, query and fragment parts,\n * a group containing only a path filter will match the URI if the path\n * filter matches the URI path.  If the group contains a path and query\n * filter, then the group will only match if both path and query filters\n * match.  If a URI contains only a path with no query or fragment then a\n * group can only match if it contains only a matching path filter. If the\n * group also contained additional query or fragment filters then it will\n * not match.</p>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ALLOW_STR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "URI_RELATIVE_FILTER_GROUP_STR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ACTION_ALLOW",
    "type" : "int",
    "comment" : "\n     * Value to indicate that the group match is allowed.\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_BLOCK",
    "type" : "int",
    "comment" : "\n     * Value to indicate that the group match is blocked.\n     ",
    "links" : [ ]
  }, {
    "name" : "mAction",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUriRelativeFilters",
    "type" : "ArraySet<UriRelativeFilter>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean matchGroupsToUri(List<UriRelativeFilterGroup> groups, Uri uri)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static List<UriRelativeFilterGroup> parcelsToGroups(@Nullable List<UriRelativeFilterGroupParcel> parcels)",
    "returnType" : "List<UriRelativeFilterGroup>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static List<UriRelativeFilterGroupParcel> groupsToParcels(@Nullable List<UriRelativeFilterGroup> groups)",
    "returnType" : "List<UriRelativeFilterGroupParcel>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getAction()",
    "returnType" : "int",
    "comment" : "\n     * Return {@link UriRelativeFilterGroup#ACTION_ALLOW} if a URI is allowed when matched\n     * and {@link UriRelativeFilterGroup#ACTION_BLOCK} if a URI is blacked when matched.\n     ",
    "links" : [ "android.content.UriRelativeFilterGroup#ACTION_ALLOW", "android.content.UriRelativeFilterGroup#ACTION_BLOCK" ]
  }, {
    "name" : "public void addUriRelativeFilter(@NonNull UriRelativeFilter uriRelativeFilter)",
    "returnType" : "void",
    "comment" : "\n     * Add a filter to the group.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Collection<UriRelativeFilter> getUriRelativeFilters()",
    "returnType" : "Collection<UriRelativeFilter>",
    "comment" : "\n     * Returns a unmodifiable view of the UriRelativeFilters list in this group.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean matchData(@NonNull Uri data)",
    "returnType" : "boolean",
    "comment" : "\n     * Match all URI filter in this group against {@link Intent#getData()}.\n     *\n     * @param data The full data string to match against, as supplied in\n     *             Intent.data.\n     * @return true if all filters match.\n     ",
    "links" : [ "android.content.Intent#getData()" ]
  }, {
    "name" : "public void dumpDebug(ProtoOutputStream proto, long fieldId)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void writeToXml(XmlSerializer serializer) throws IOException",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public UriRelativeFilterGroupParcel toParcel()",
    "returnType" : "UriRelativeFilterGroupParcel",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static boolean matchGroupsToUri(List<UriRelativeFilterGroup> groups, Uri uri)", "public static List<UriRelativeFilterGroup> parcelsToGroups(@Nullable List<UriRelativeFilterGroupParcel> parcels)", "public static List<UriRelativeFilterGroupParcel> groupsToParcels(@Nullable List<UriRelativeFilterGroup> groups)", "public int getAction()", "public void addUriRelativeFilter(@NonNull UriRelativeFilter uriRelativeFilter)", "public Collection<UriRelativeFilter> getUriRelativeFilters()", "public boolean matchData(@NonNull Uri data)", "public void dumpDebug(ProtoOutputStream proto, long fieldId)", "public void writeToXml(XmlSerializer serializer) throws IOException", "public String toString()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public UriRelativeFilterGroupParcel toParcel()" ],
  "variableNames" : [ "ALLOW_STR", "URI_RELATIVE_FILTER_GROUP_STR", "ACTION_ALLOW", "ACTION_BLOCK", "mAction", "mUriRelativeFilters" ]
}