{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/vcn/VcnGatewayConnectionConfig.java",
  "packageName" : "android.net.vcn",
  "className" : "VcnGatewayConnectionConfig",
  "comment" : "\n * This class represents a configuration for a connection to a Virtual Carrier Network gateway.\n *\n * <p>Each VcnGatewayConnectionConfig represents a single logical connection to a carrier gateway,\n * and may provide one or more telephony services (as represented by network capabilities). Each\n * gateway is expected to provide mobility for a given session as the device roams across {@link\n * Network}s.\n *\n * <p>A VCN connection based on this configuration will be brought up dynamically based on device\n * settings, and filed NetworkRequests. Underlying Networks must provide INTERNET connectivity, and\n * must be part of the subscription group under which this configuration is registered (see {@link\n * VcnManager#setVcnConfig}).\n *\n * <p>As an abstraction of a cellular network, services that can be provided by a VCN network are\n * limited to services provided by cellular networks:\n *\n * <ul>\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_MMS}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_SUPL}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_DUN}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_FOTA}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_IMS}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_CBS}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_IA}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_RCS}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_XCAP}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_EIMS}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_INTERNET}\n *   <li>{@link NetworkCapabilities#NET_CAPABILITY_MCX}\n * </ul>\n ",
  "links" : [ "android.net.NetworkCapabilities#NET_CAPABILITY_RCS", "android.net.NetworkCapabilities#NET_CAPABILITY_MCX", "android.net.NetworkCapabilities#NET_CAPABILITY_EIMS", "android.net.NetworkCapabilities#NET_CAPABILITY_DUN", "android.net.Network", "android.net.NetworkCapabilities#NET_CAPABILITY_FOTA", "android.net.NetworkCapabilities#NET_CAPABILITY_CBS", "android.net.NetworkCapabilities#NET_CAPABILITY_IA", "android.net.NetworkCapabilities#NET_CAPABILITY_MMS", "android.net.NetworkCapabilities#NET_CAPABILITY_IMS", "android.net.NetworkCapabilities#NET_CAPABILITY_XCAP", "android.net.NetworkCapabilities#NET_CAPABILITY_SUPL", "android.net.NetworkCapabilities#NET_CAPABILITY_INTERNET", "android.net.vcn.VcnManager#setVcnConfig" ],
  "variables" : [ {
    "name" : "MIN_UDP_PORT_4500_NAT_TIMEOUT_UNSET",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MIN_UDP_PORT_4500_NAT_TIMEOUT_SECONDS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MIN_MTU_V6",
    "type" : "int",
    "comment" : " TODO: Use MIN_MTU_V6 once it is public, @hide",
    "links" : [ ]
  }, {
    "name" : "ALLOWED_CAPABILITIES",
    "type" : "Set<Integer>",
    "comment" : "\n     * The set of allowed capabilities for exposed capabilities.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "VCN_GATEWAY_OPTION_ENABLE_DATA_STALL_RECOVERY_WITH_MOBILITY",
    "type" : "int",
    "comment" : "\n     * Perform mobility update to attempt recovery from suspected data stalls.\n     *\n     * <p>If set, the gateway connection will monitor the data stall detection of the VCN network.\n     * When there is a suspected data stall, the gateway connection will attempt recovery by\n     * performing a mobility update on the underlying IKE session.\n     ",
    "links" : [ ]
  }, {
    "name" : "ALLOWED_GATEWAY_OPTIONS",
    "type" : "Set<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MAX_MTU",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_RETRY_INTERVAL_COUNT",
    "type" : "int",
    "comment" : "\n     * The maximum number of retry intervals that may be specified.\n     *\n     * <p>Limited to ensure an upper bound on config sizes.\n     ",
    "links" : [ ]
  }, {
    "name" : "MINIMUM_REPEATING_RETRY_INTERVAL_MS",
    "type" : "long",
    "comment" : "\n     * The minimum allowable repeating retry interval\n     *\n     * <p>To ensure the device is not constantly being woken up, this retry interval MUST be greater\n     * than this value.\n     *\n     * @see {@link Builder#setRetryIntervalsMillis()}\n     ",
    "links" : [ "#setRetryIntervalsMillis()" ]
  }, {
    "name" : "DEFAULT_RETRY_INTERVALS_MS",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_UNDERLYING_NETWORK_TEMPLATES",
    "type" : "List<VcnUnderlyingNetworkTemplate>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "GATEWAY_CONNECTION_NAME_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGatewayConnectionName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TUNNEL_CONNECTION_PARAMS_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTunnelConnectionParams",
    "type" : "IkeTunnelConnectionParams",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXPOSED_CAPABILITIES_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExposedCapabilities",
    "type" : "SortedSet<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UNDERLYING_NETWORK_TEMPLATES_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mUnderlyingNetworkTemplates",
    "type" : "List<VcnUnderlyingNetworkTemplate>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_MTU_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxMtu",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RETRY_INTERVAL_MS_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRetryIntervalsMs",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_UDP_PORT_4500_NAT_TIMEOUT_SECONDS_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinUdpPort4500NatTimeoutSeconds",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "IS_SAFE_MODE_DISABLED_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSafeModeDisabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GATEWAY_OPTIONS_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGatewayOptions",
    "type" : "Set<Integer>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void validate()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkValidCapability(int capability)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void validateRetryInterval(@Nullable long[] retryIntervalsMs)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void validateNetworkTemplateList(List<VcnUnderlyingNetworkTemplate> networkPriorityRules)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void validateGatewayOption(int option)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getGatewayConnectionName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the configured Gateway Connection name.\n     *\n     * <p>This name is used by the configuring apps to distinguish between\n     * VcnGatewayConnectionConfigs configured on a single {@link VcnConfig}. This will be used as\n     * the identifier in VcnStatusCallback invocations.\n     *\n     * @see VcnManager.VcnStatusCallback#onGatewayConnectionError\n     ",
    "links" : [ "android.net.vcn.VcnConfig" ]
  }, {
    "name" : "public IkeTunnelConnectionParams getTunnelConnectionParams()",
    "returnType" : "IkeTunnelConnectionParams",
    "comment" : "\n     * Returns tunnel connection parameters.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getExposedCapabilities()",
    "returnType" : "int[]",
    "comment" : "\n     * Returns all exposed capabilities.\n     *\n     * <p>The returned integer-value capabilities will not contain duplicates, and will be sorted in\n     * ascending numerical order.\n     *\n     * @see Builder#addExposedCapability(int)\n     * @see Builder#removeExposedCapability(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<Integer> getAllExposedCapabilities()",
    "returnType" : "Set<Integer>",
    "comment" : "\n     * Returns all exposed capabilities.\n     *\n     * <p>Left to prevent the need to make major changes while changes are actively in flight.\n     *\n     * @deprecated use getExposedCapabilities() instead\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<VcnUnderlyingNetworkTemplate> getVcnUnderlyingNetworkPriorities()",
    "returnType" : "List<VcnUnderlyingNetworkTemplate>",
    "comment" : "\n     * Retrieve the VcnUnderlyingNetworkTemplate list, or a default list if it is not configured.\n     *\n     * @see Builder#setVcnUnderlyingNetworkPriorities(List)\n     ",
    "links" : [ ]
  }, {
    "name" : "public long[] getRetryIntervalsMillis()",
    "returnType" : "long[]",
    "comment" : "\n     * Retrieves the configured retry intervals.\n     *\n     * @see Builder#setRetryIntervalsMillis(long[])\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxMtu()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the maximum MTU allowed for this Gateway Connection.\n     *\n     * @see Builder#setMaxMtu(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMinUdpPort4500NatTimeoutSeconds()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the maximum supported IKEv2/IPsec NATT keepalive timeout.\n     *\n     * @see Builder#setMinUdpPort4500NatTimeoutSeconds(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSafeModeEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether safe mode is enabled\n     *\n     * @see Builder#setSafeModeEnabled(boolean)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasGatewayOption(@VcnGatewayOption int option)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the given VCN gateway option is enabled.\n     *\n     * @param option the option to check.\n     * @throws IllegalArgumentException if the provided option is invalid.\n     * @see Builder#addGatewayOption(int)\n     * @see Builder#removeGatewayOption(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public PersistableBundle toPersistableBundle()",
    "returnType" : "PersistableBundle",
    "comment" : "\n     * Converts this config to a PersistableBundle.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void validate()", "private static void checkValidCapability(int capability)", "private static void validateRetryInterval(@Nullable long[] retryIntervalsMs)", "private static void validateNetworkTemplateList(List<VcnUnderlyingNetworkTemplate> networkPriorityRules)", "private static void validateGatewayOption(int option)", "public String getGatewayConnectionName()", "public IkeTunnelConnectionParams getTunnelConnectionParams()", "public int[] getExposedCapabilities()", "public Set<Integer> getAllExposedCapabilities()", "public List<VcnUnderlyingNetworkTemplate> getVcnUnderlyingNetworkPriorities()", "public long[] getRetryIntervalsMillis()", "public int getMaxMtu()", "public int getMinUdpPort4500NatTimeoutSeconds()", "public boolean isSafeModeEnabled()", "public boolean hasGatewayOption(@VcnGatewayOption int option)", "public PersistableBundle toPersistableBundle()", "public int hashCode()", "public boolean equals(@Nullable Object other)" ],
  "variableNames" : [ "MIN_UDP_PORT_4500_NAT_TIMEOUT_UNSET", "MIN_UDP_PORT_4500_NAT_TIMEOUT_SECONDS", "MIN_MTU_V6", "ALLOWED_CAPABILITIES", "VCN_GATEWAY_OPTION_ENABLE_DATA_STALL_RECOVERY_WITH_MOBILITY", "ALLOWED_GATEWAY_OPTIONS", "DEFAULT_MAX_MTU", "MAX_RETRY_INTERVAL_COUNT", "MINIMUM_REPEATING_RETRY_INTERVAL_MS", "DEFAULT_RETRY_INTERVALS_MS", "DEFAULT_UNDERLYING_NETWORK_TEMPLATES", "GATEWAY_CONNECTION_NAME_KEY", "mGatewayConnectionName", "TUNNEL_CONNECTION_PARAMS_KEY", "mTunnelConnectionParams", "EXPOSED_CAPABILITIES_KEY", "mExposedCapabilities", "UNDERLYING_NETWORK_TEMPLATES_KEY", "mUnderlyingNetworkTemplates", "MAX_MTU_KEY", "mMaxMtu", "RETRY_INTERVAL_MS_KEY", "mRetryIntervalsMs", "MIN_UDP_PORT_4500_NAT_TIMEOUT_SECONDS_KEY", "mMinUdpPort4500NatTimeoutSeconds", "IS_SAFE_MODE_DISABLED_KEY", "mIsSafeModeDisabled", "GATEWAY_OPTIONS_KEY", "mGatewayOptions" ]
}