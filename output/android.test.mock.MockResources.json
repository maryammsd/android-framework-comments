{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/test/mock/MockResources.java",
  "packageName" : "android.test.mock",
  "className" : "MockResources",
  "comment" : "\n * A mock {@link android.content.res.Resources} class. All methods are non-functional and throw\n * {@link java.lang.UnsupportedOperationException}. Override it to provide the operations that you\n * need.\n *\n * @deprecated Use a mocking framework like <a href=\"https://github.com/mockito/mockito\">Mockito</a>.\n * New tests should be written using the\n * <a href=\"{@docRoot}tools/testing-support-library/index.html\">Android Testing Support Library</a>.\n ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void updateConfiguration(Configuration config, DisplayMetrics metrics)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getText(int id) throws NotFoundException",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getQuantityText(int id, int quantity) throws NotFoundException",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getString(int id) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getString(int id, Object... formatArgs) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getQuantityString(int id, int quantity, Object... formatArgs) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getQuantityString(int id, int quantity) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getText(int id, CharSequence def)",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence[] getTextArray(int id) throws NotFoundException",
    "returnType" : "CharSequence[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String[] getStringArray(int id) throws NotFoundException",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getIntArray(int id) throws NotFoundException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TypedArray obtainTypedArray(int id) throws NotFoundException",
    "returnType" : "TypedArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getDimension(int id) throws NotFoundException",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getDimensionPixelOffset(int id) throws NotFoundException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getDimensionPixelSize(int id) throws NotFoundException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Drawable getDrawable(int id) throws NotFoundException",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Movie getMovie(int id) throws NotFoundException",
    "returnType" : "Movie",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getColor(int id) throws NotFoundException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ColorStateList getColorStateList(int id) throws NotFoundException",
    "returnType" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInteger(int id) throws NotFoundException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public XmlResourceParser getLayout(int id) throws NotFoundException",
    "returnType" : "XmlResourceParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public XmlResourceParser getAnimation(int id) throws NotFoundException",
    "returnType" : "XmlResourceParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public XmlResourceParser getXml(int id) throws NotFoundException",
    "returnType" : "XmlResourceParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InputStream openRawResource(int id) throws NotFoundException",
    "returnType" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public AssetFileDescriptor openRawResourceFd(int id) throws NotFoundException",
    "returnType" : "AssetFileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getValue(int id, TypedValue outValue, boolean resolveRefs) throws NotFoundException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getValue(String name, TypedValue outValue, boolean resolveRefs) throws NotFoundException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TypedArray obtainAttributes(AttributeSet set, int[] attrs)",
    "returnType" : "TypedArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public DisplayMetrics getDisplayMetrics()",
    "returnType" : "DisplayMetrics",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Configuration getConfiguration()",
    "returnType" : "Configuration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getIdentifier(String name, String defType, String defPackage)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getResourceName(int resid) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getResourcePackageName(int resid) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getResourceTypeName(int resid) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getResourceEntryName(int resid) throws NotFoundException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public void updateConfiguration(Configuration config, DisplayMetrics metrics)", "public CharSequence getText(int id) throws NotFoundException", "public CharSequence getQuantityText(int id, int quantity) throws NotFoundException", "public String getString(int id) throws NotFoundException", "public String getString(int id, Object... formatArgs) throws NotFoundException", "public String getQuantityString(int id, int quantity, Object... formatArgs) throws NotFoundException", "public String getQuantityString(int id, int quantity) throws NotFoundException", "public CharSequence getText(int id, CharSequence def)", "public CharSequence[] getTextArray(int id) throws NotFoundException", "public String[] getStringArray(int id) throws NotFoundException", "public int[] getIntArray(int id) throws NotFoundException", "public TypedArray obtainTypedArray(int id) throws NotFoundException", "public float getDimension(int id) throws NotFoundException", "public int getDimensionPixelOffset(int id) throws NotFoundException", "public int getDimensionPixelSize(int id) throws NotFoundException", "public Drawable getDrawable(int id) throws NotFoundException", "public Movie getMovie(int id) throws NotFoundException", "public int getColor(int id) throws NotFoundException", "public ColorStateList getColorStateList(int id) throws NotFoundException", "public int getInteger(int id) throws NotFoundException", "public XmlResourceParser getLayout(int id) throws NotFoundException", "public XmlResourceParser getAnimation(int id) throws NotFoundException", "public XmlResourceParser getXml(int id) throws NotFoundException", "public InputStream openRawResource(int id) throws NotFoundException", "public AssetFileDescriptor openRawResourceFd(int id) throws NotFoundException", "public void getValue(int id, TypedValue outValue, boolean resolveRefs) throws NotFoundException", "public void getValue(String name, TypedValue outValue, boolean resolveRefs) throws NotFoundException", "public TypedArray obtainAttributes(AttributeSet set, int[] attrs)", "public DisplayMetrics getDisplayMetrics()", "public Configuration getConfiguration()", "public int getIdentifier(String name, String defType, String defPackage)", "public String getResourceName(int resid) throws NotFoundException", "public String getResourcePackageName(int resid) throws NotFoundException", "public String getResourceTypeName(int resid) throws NotFoundException", "public String getResourceEntryName(int resid) throws NotFoundException" ]
}