{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/inputmethodservice/AbstractInputMethodService.java",
  "packageName" : "android.inputmethodservice",
  "className" : "AbstractInputMethodSessionImpl",
  "comment" : "\n     * Base class for derived classes to implement their {@link InputMethodSession}\n     * interface.  This takes care of basic maintenance of the session,\n     * but most behavior must be implemented in a derived class.\n     ",
  "links" : [ "android.view.inputmethod.InputMethodSession" ],
  "variables" : [ {
    "name" : "mEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRevoked",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isEnabled()",
    "returnType" : "boolean",
    "comment" : "\n         * Check whether this session has been enabled by the system.  If not\n         * enabled, you should not execute any calls on to it.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isRevoked()",
    "returnType" : "boolean",
    "comment" : "\n         * Check whether this session has been revoked by the system.  Revoked\n         * session is also always disabled, so there is generally no need to\n         * explicitly check for this.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setEnabled(boolean enabled)",
    "returnType" : "void",
    "comment" : "\n         * Change the enabled state of the session.  This only works if the\n         * session has not been revoked.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void revokeSelf()",
    "returnType" : "void",
    "comment" : "\n         * Revoke the session from the client.  This disabled the session, and\n         * prevents it from ever being enabled again.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void dispatchKeyEvent(int seq, KeyEvent event, EventCallback callback)",
    "returnType" : "void",
    "comment" : "\n         * Take care of dispatching incoming key events to the appropriate\n         * callbacks on the service, and tell the client when this is done.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void dispatchTrackballEvent(int seq, MotionEvent event, EventCallback callback)",
    "returnType" : "void",
    "comment" : "\n         * Take care of dispatching incoming trackball events to the appropriate\n         * callbacks on the service, and tell the client when this is done.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void dispatchGenericMotionEvent(int seq, MotionEvent event, EventCallback callback)",
    "returnType" : "void",
    "comment" : "\n         * Take care of dispatching incoming generic motion events to the appropriate\n         * callbacks on the service, and tell the client when this is done.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isEnabled()", "public boolean isRevoked()", "public void setEnabled(boolean enabled)", "public void revokeSelf()", "public void dispatchKeyEvent(int seq, KeyEvent event, EventCallback callback)", "public void dispatchTrackballEvent(int seq, MotionEvent event, EventCallback callback)", "public void dispatchGenericMotionEvent(int seq, MotionEvent event, EventCallback callback)" ],
  "variableNames" : [ "mEnabled", "mRevoked" ]
}