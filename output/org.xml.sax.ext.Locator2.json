{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/xml/sax/ext/Locator2.java",
  "packageName" : "org.xml.sax.ext",
  "className" : "Locator2",
  "comment" : "\n * SAX2 extension to augment the entity information provided\n * though a {@link Locator}.\n * If an implementation supports this extension, the Locator\n * provided in {@link org.xml.sax.ContentHandler#setDocumentLocator\n * ContentHandler.setDocumentLocator() } will implement this\n * interface, and the\n * <em>http://xml.org/sax/features/use-locator2</em> feature\n * flag will have the value <em>true</em>.\n *\n * <blockquote>\n * <em>This module, both source code and documentation, is in the\n * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n * </blockquote>\n *\n * <p> XMLReader implementations are not required to support this\n * information, and it is not part of core-only SAX2 distributions.</p>\n *\n * @since SAX 2.0 (extensions 1.1 alpha)\n * @author David Brownell\n * @version TBS\n ",
  "links" : [ "org.xml.sax.ContentHandler#setDocumentLocatorContentHandler.setDocumentLocator()", "org.xml.sax.Locator" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public String getXMLVersion()",
    "returnType" : "String",
    "comment" : "\n     * Returns the version of XML used for the entity.  This will\n     * normally be the identifier from the current entity's\n     * <em>&lt;?xml&nbsp;version='...'&nbsp;...?&gt;</em> declaration,\n     * or be defaulted by the parser.\n     *\n     * @return Identifier for the XML version being used to interpret\n     * the entity's text, or null if that information is not yet\n     * available in the current parsing state.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getEncoding()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the character encoding for the entity.\n     * If the encoding was declared externally (for example, in a MIME\n     * Content-Type header), that will be the name returned.  Else if there\n     * was an <em>&lt;?xml&nbsp;...encoding='...'?&gt;</em> declaration at\n     * the start of the document, that encoding name will be returned.\n     * Otherwise the encoding will been inferred (normally to be UTF-8, or\n     * some UTF-16 variant), and that inferred name will be returned.\n     *\n     * <p>When an {@link org.xml.sax.InputSource InputSource} is used\n     * to provide an entity's character stream, this method returns the\n     * encoding provided in that input stream.\n     *\n     * <p> Note that some recent W3C specifications require that text\n     * in some encodings be normalized, using Unicode Normalization\n     * Form C, before processing.  Such normalization must be performed\n     * by applications, and would normally be triggered based on the\n     * value returned by this method.\n     *\n     * <p> Encoding names may be those used by the underlying JVM,\n     * and comparisons should be case-insensitive.\n     *\n     * @return Name of the character encoding being used to interpret\n     * * the entity's text, or null if this was not provided for a *\n     * character stream passed through an InputSource or is otherwise\n     * not yet available in the current parsing state.\n     ",
    "links" : [ "org.xml.sax.InputSource" ]
  } ],
  "methodNames" : [ "public String getXMLVersion()", "public String getEncoding()" ],
  "variableNames" : [ ]
}