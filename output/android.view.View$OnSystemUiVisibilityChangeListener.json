{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/View.java",
  "packageName" : "android.view",
  "className" : "OnSystemUiVisibilityChangeListener",
  "comment" : "\n     * Interface definition for a callback to be invoked when the status bar changes\n     * visibility.  This reports <strong>global</strong> changes to the system UI\n     * state, not what the application is requesting.\n     *\n     * @see View#setOnSystemUiVisibilityChangeListener(android.view.View.OnSystemUiVisibilityChangeListener)\n     *\n     * @deprecated Use {@link WindowInsets#isVisible(int)} to find out about system bar visibilities\n     * by setting a {@link OnApplyWindowInsetsListener} on this view.\n     ",
  "links" : [ "OnApplyWindowInsetsListener", "android.view.WindowInsets#isVisible(int)" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onSystemUiVisibilityChange(int visibility)",
    "returnType" : "void",
    "comment" : "\n         * Called when the status bar changes visibility because of a call to\n         * {@link View#setSystemUiVisibility(int)}.\n         *\n         * @param visibility  Bitwise-or of flags {@link #SYSTEM_UI_FLAG_LOW_PROFILE},\n         * {@link #SYSTEM_UI_FLAG_HIDE_NAVIGATION}, and {@link #SYSTEM_UI_FLAG_FULLSCREEN}.\n         * This tells you the <strong>global</strong> state of these UI visibility\n         * flags, not what your app is currently applying.\n         ",
    "links" : [ "android.view.View#setSystemUiVisibility(int)", "#SYSTEM_UI_FLAG_LOW_PROFILE", "#SYSTEM_UI_FLAG_FULLSCREEN", "#SYSTEM_UI_FLAG_HIDE_NAVIGATION" ]
  } ],
  "methodNames" : [ "public void onSystemUiVisibilityChange(int visibility)" ],
  "variableNames" : [ ]
}