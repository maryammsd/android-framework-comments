{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/session/MediaController.java",
  "packageName" : "android.media.session",
  "className" : "PlaybackInfo",
  "comment" : "\n     * Holds information about the current playback and how audio is handled for\n     * this session.\n     ",
  "variables" : [ {
    "name" : "PLAYBACK_TYPE_LOCAL",
    "type" : "int",
    "comment" : "\n         * The session uses local playback.\n         ",
    "links" : [ ]
  }, {
    "name" : "PLAYBACK_TYPE_REMOTE",
    "type" : "int",
    "comment" : "\n         * The session uses remote playback.\n         ",
    "links" : [ ]
  }, {
    "name" : "mVolumeType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolumeControl",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxVolume",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentVolume",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioAttrs",
    "type" : "AudioAttributes",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolumeControlId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<PlaybackInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getPlaybackType()",
    "returnType" : "int",
    "comment" : "\n         * Get the type of playback which affects volume handling. One of:\n         * <ul>\n         * <li>{@link #PLAYBACK_TYPE_LOCAL}</li>\n         * <li>{@link #PLAYBACK_TYPE_REMOTE}</li>\n         * </ul>\n         *\n         * @return The type of playback this session is using.\n         ",
    "links" : [ "#PLAYBACK_TYPE_LOCAL", "#PLAYBACK_TYPE_REMOTE" ]
  }, {
    "name" : "public int getVolumeControl()",
    "returnType" : "int",
    "comment" : "\n         * Get the type of volume control that can be used. One of:\n         * <ul>\n         * <li>{@link VolumeProvider#VOLUME_CONTROL_ABSOLUTE}</li>\n         * <li>{@link VolumeProvider#VOLUME_CONTROL_RELATIVE}</li>\n         * <li>{@link VolumeProvider#VOLUME_CONTROL_FIXED}</li>\n         * </ul>\n         *\n         * @return The type of volume control that may be used with this\n         *         session.\n         ",
    "links" : [ "VolumeProvider#VOLUME_CONTROL_ABSOLUTE", "VolumeProvider#VOLUME_CONTROL_RELATIVE", "VolumeProvider#VOLUME_CONTROL_FIXED" ]
  }, {
    "name" : "public int getMaxVolume()",
    "returnType" : "int",
    "comment" : "\n         * Get the maximum volume that may be set for this session.\n         *\n         * @return The maximum allowed volume where this session is playing.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getCurrentVolume()",
    "returnType" : "int",
    "comment" : "\n         * Get the current volume for this session.\n         *\n         * @return The current volume where this session is playing.\n         ",
    "links" : [ ]
  }, {
    "name" : "public AudioAttributes getAudioAttributes()",
    "returnType" : "AudioAttributes",
    "comment" : "\n         * Get the audio attributes for this session. The attributes will affect\n         * volume handling for the session. When the volume type is\n         * {@link PlaybackInfo#PLAYBACK_TYPE_REMOTE} these may be ignored by the\n         * remote volume handler.\n         *\n         * @return The attributes for this session.\n         ",
    "links" : [ "PlaybackInfo#PLAYBACK_TYPE_REMOTE" ]
  }, {
    "name" : "public String getVolumeControlId()",
    "returnType" : "String",
    "comment" : "\n         * Gets the volume control ID for this session. It can be used to identify which\n         * volume provider is used by the session.\n         * <p>\n         * When the session starts to use {@link #PLAYBACK_TYPE_REMOTE remote volume handling},\n         * a volume provider should be set and it may set the volume control ID of the provider\n         * if the session wants to inform which volume provider is used.\n         * It can be {@code null} if the session didn't set the volume control ID or it uses\n         * {@link #PLAYBACK_TYPE_LOCAL local playback}.\n         * </p>\n         *\n         * @return the volume control ID for this session or {@code null} if it uses local playback\n         * or not set.\n         * @see VolumeProvider#getVolumeControlId()\n         ",
    "links" : [ "#PLAYBACK_TYPE_REMOTE", "#PLAYBACK_TYPE_LOCAL" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "PLAYBACK_TYPE_LOCAL", "PLAYBACK_TYPE_REMOTE", "mVolumeType", "mVolumeControl", "mMaxVolume", "mCurrentVolume", "mAudioAttrs", "mVolumeControlId", "CREATOR" ],
  "methodNames" : [ "public int getPlaybackType()", "public int getVolumeControl()", "public int getMaxVolume()", "public int getCurrentVolume()", "public AudioAttributes getAudioAttributes()", "public String getVolumeControlId()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ]
}