{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/Observer.java",
  "packageName" : "java.util",
  "className" : "Observer",
  "comment" : "\n * A class can implement the {@code Observer} interface when it\n * wants to be informed of changes in observable objects.\n *\n * @author  Chris Warth\n * @see     java.util.Observable\n * @since   1.0\n *\n * @deprecated\n * This interface has been deprecated. See the {@link Observable}\n * class for further information.\n ",
  "links" : [ "java.util.Observable" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void update(Observable o, Object arg)",
    "returnType" : "void",
    "comment" : "\n     * This method is called whenever the observed object is changed. An\n     * application calls an {@code Observable} object's\n     * {@code notifyObservers} method to have all the object's\n     * observers notified of the change.\n     *\n     * @param   o     the observable object.\n     * @param   arg   an argument passed to the {@code notifyObservers}\n     *                 method.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void update(Observable o, Object arg)" ],
  "variableNames" : [ ]
}