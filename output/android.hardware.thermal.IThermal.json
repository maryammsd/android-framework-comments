{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/thermal/IThermal.java",
  "packageName" : "android.hardware.thermal",
  "className" : "IThermal",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "VERSION",
    "type" : "int",
    "comment" : "\n   * The version of this interface that the caller is built against.\n   * This might be different from what {@link #getInterfaceVersion()\n   * getInterfaceVersion} returns as that is the version of the interface\n   * that the remote object is implementing.\n   ",
    "links" : [ "#getInterfaceVersion()" ]
  }, {
    "name" : "HASH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public android.hardware.thermal.CoolingDevice[] getCoolingDevices() throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.CoolingDevice[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.CoolingDevice[] getCoolingDevicesWithType(int type) throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.CoolingDevice[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.Temperature[] getTemperatures() throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.Temperature[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.Temperature[] getTemperaturesWithType(int type) throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.Temperature[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.TemperatureThreshold[] getTemperatureThresholds() throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.TemperatureThreshold[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.TemperatureThreshold[] getTemperatureThresholdsWithType(int type) throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.TemperatureThreshold[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerThermalChangedCallback(android.hardware.thermal.IThermalChangedCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerThermalChangedCallbackWithType(android.hardware.thermal.IThermalChangedCallback callback, int type) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterThermalChangedCallback(android.hardware.thermal.IThermalChangedCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerCoolingDeviceChangedCallbackWithType(android.hardware.thermal.ICoolingDeviceChangedCallback callback, int type) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterCoolingDeviceChangedCallback(android.hardware.thermal.ICoolingDeviceChangedCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceVersion() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getInterfaceHash() throws android.os.RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public android.hardware.thermal.CoolingDevice[] getCoolingDevices() throws android.os.RemoteException", "public android.hardware.thermal.CoolingDevice[] getCoolingDevicesWithType(int type) throws android.os.RemoteException", "public android.hardware.thermal.Temperature[] getTemperatures() throws android.os.RemoteException", "public android.hardware.thermal.Temperature[] getTemperaturesWithType(int type) throws android.os.RemoteException", "public android.hardware.thermal.TemperatureThreshold[] getTemperatureThresholds() throws android.os.RemoteException", "public android.hardware.thermal.TemperatureThreshold[] getTemperatureThresholdsWithType(int type) throws android.os.RemoteException", "public void registerThermalChangedCallback(android.hardware.thermal.IThermalChangedCallback callback) throws android.os.RemoteException", "public void registerThermalChangedCallbackWithType(android.hardware.thermal.IThermalChangedCallback callback, int type) throws android.os.RemoteException", "public void unregisterThermalChangedCallback(android.hardware.thermal.IThermalChangedCallback callback) throws android.os.RemoteException", "public void registerCoolingDeviceChangedCallbackWithType(android.hardware.thermal.ICoolingDeviceChangedCallback callback, int type) throws android.os.RemoteException", "public void unregisterCoolingDeviceChangedCallback(android.hardware.thermal.ICoolingDeviceChangedCallback callback) throws android.os.RemoteException", "public int getInterfaceVersion() throws android.os.RemoteException", "public String getInterfaceHash() throws android.os.RemoteException" ],
  "variableNames" : [ "VERSION", "HASH", "DESCRIPTOR" ]
}