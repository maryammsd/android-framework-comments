{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/WifiUsabilityStatsEntry.java",
  "packageName" : "android.net.wifi",
  "className" : "WifiUsabilityStatsEntry",
  "comment" : "\n * This class makes a subset of\n * com.android.server.wifi.nano.WifiMetricsProto.WifiUsabilityStatsEntry parcelable.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "PROBE_STATUS_UNKNOWN",
    "type" : "int",
    "comment" : " Link probe status is unknown ",
    "links" : [ ]
  }, {
    "name" : "PROBE_STATUS_NO_PROBE",
    "type" : "int",
    "comment" : " Link probe is not triggered ",
    "links" : [ ]
  }, {
    "name" : "PROBE_STATUS_SUCCESS",
    "type" : "int",
    "comment" : " Link probe is triggered and the result is success ",
    "links" : [ ]
  }, {
    "name" : "PROBE_STATUS_FAILURE",
    "type" : "int",
    "comment" : " Link probe is triggered and the result is failure ",
    "links" : [ ]
  }, {
    "name" : "mTimeStampMillis",
    "type" : "long",
    "comment" : " Absolute milliseconds from device boot when these stats were sampled ",
    "links" : [ ]
  }, {
    "name" : "mRssi",
    "type" : "int",
    "comment" : " The RSSI (in dBm) at the sample time ",
    "links" : [ ]
  }, {
    "name" : "mLinkSpeedMbps",
    "type" : "int",
    "comment" : " Link speed at the sample time in Mbps ",
    "links" : [ ]
  }, {
    "name" : "mTotalTxSuccess",
    "type" : "long",
    "comment" : " The total number of tx success counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalTxRetries",
    "type" : "long",
    "comment" : " The total number of MPDU data packet retries counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalTxBad",
    "type" : "long",
    "comment" : " The total number of tx bad counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalRxSuccess",
    "type" : "long",
    "comment" : " The total number of rx success counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalRadioOnTimeMillis",
    "type" : "long",
    "comment" : " The total time the wifi radio is on in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalRadioTxTimeMillis",
    "type" : "long",
    "comment" : " The total time the wifi radio is doing tx in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalRadioRxTimeMillis",
    "type" : "long",
    "comment" : " The total time the wifi radio is doing rx in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalScanTimeMillis",
    "type" : "long",
    "comment" : " The total time spent on all types of scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalNanScanTimeMillis",
    "type" : "long",
    "comment" : " The total time spent on nan scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalBackgroundScanTimeMillis",
    "type" : "long",
    "comment" : " The total time spent on background scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalRoamScanTimeMillis",
    "type" : "long",
    "comment" : " The total time spent on roam scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalPnoScanTimeMillis",
    "type" : "long",
    "comment" : " The total time spent on pno scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalHotspot2ScanTimeMillis",
    "type" : "long",
    "comment" : " The total time spent on hotspot2.0 scans and GAS exchange in ms counted from the last radio\n     * chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalCcaBusyFreqTimeMillis",
    "type" : "long",
    "comment" : " The total time CCA is on busy status on the current frequency in ms counted from the last\n     * radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalRadioOnFreqTimeMillis",
    "type" : "long",
    "comment" : " The total radio on time on the current frequency from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mTotalBeaconRx",
    "type" : "long",
    "comment" : " The total number of beacons received from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "mProbeStatusSinceLastUpdate",
    "type" : "int",
    "comment" : " The status of link probe since last stats update ",
    "links" : [ ]
  }, {
    "name" : "mProbeElapsedTimeSinceLastUpdateMillis",
    "type" : "int",
    "comment" : " The elapsed time of the most recent link probe since last stats update ",
    "links" : [ ]
  }, {
    "name" : "mProbeMcsRateSinceLastUpdate",
    "type" : "int",
    "comment" : " The MCS rate of the most recent link probe since last stats update ",
    "links" : [ ]
  }, {
    "name" : "mRxLinkSpeedMbps",
    "type" : "int",
    "comment" : " Rx link speed at the sample time in Mbps ",
    "links" : [ ]
  }, {
    "name" : "mCellularDataNetworkType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCellularSignalStrengthDbm",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCellularSignalStrengthDb",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSameRegisteredCell",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WifiUsabilityStatsEntry>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "public long getTimeStampMillis()",
    "returnType" : "long",
    "comment" : " Absolute milliseconds from device boot when these stats were sampled ",
    "links" : [ ]
  }, {
    "name" : "public int getRssi()",
    "returnType" : "int",
    "comment" : " The RSSI (in dBm) at the sample time ",
    "links" : [ ]
  }, {
    "name" : "public int getLinkSpeedMbps()",
    "returnType" : "int",
    "comment" : " Link speed at the sample time in Mbps ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalTxSuccess()",
    "returnType" : "long",
    "comment" : " The total number of tx success counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalTxRetries()",
    "returnType" : "long",
    "comment" : " The total number of MPDU data packet retries counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalTxBad()",
    "returnType" : "long",
    "comment" : " The total number of tx bad counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRxSuccess()",
    "returnType" : "long",
    "comment" : " The total number of rx success counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRadioOnTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time the wifi radio is on in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRadioTxTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time the wifi radio is doing tx in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRadioRxTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time the wifi radio is doing rx in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on all types of scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalNanScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on nan scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalBackgroundScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on background scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRoamScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on roam scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalPnoScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on pno scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalHotspot2ScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on hotspot2.0 scans and GAS exchange in ms counted from the last radio\n     * chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalCcaBusyFreqTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time CCA is on busy status on the current frequency in ms counted from the last\n     * radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRadioOnFreqTimeMillis()",
    "returnType" : "long",
    "comment" : " The total radio on time on the current frequency from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalBeaconRx()",
    "returnType" : "long",
    "comment" : " The total number of beacons received from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public int getProbeStatusSinceLastUpdate()",
    "returnType" : "int",
    "comment" : " The status of link probe since last stats update ",
    "links" : [ ]
  }, {
    "name" : "public int getProbeElapsedTimeSinceLastUpdateMillis()",
    "returnType" : "int",
    "comment" : " The elapsed time of the most recent link probe since last stats update ",
    "links" : [ ]
  }, {
    "name" : "public int getProbeMcsRateSinceLastUpdate()",
    "returnType" : "int",
    "comment" : " The MCS rate of the most recent link probe since last stats update ",
    "links" : [ ]
  }, {
    "name" : "public int getRxLinkSpeedMbps()",
    "returnType" : "int",
    "comment" : " Rx link speed at the sample time in Mbps ",
    "links" : [ ]
  }, {
    "name" : "public int getCellularDataNetworkType()",
    "returnType" : "int",
    "comment" : " Cellular data network type currently in use on the device for data transmission ",
    "links" : [ ]
  }, {
    "name" : "public int getCellularSignalStrengthDbm()",
    "returnType" : "int",
    "comment" : "\n     * Cellular signal strength in dBm, NR: CsiRsrp, LTE: Rsrp, WCDMA/TDSCDMA: Rscp,\n     * CDMA: Rssi, EVDO: Rssi, GSM: Rssi\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCellularSignalStrengthDb()",
    "returnType" : "int",
    "comment" : "\n     * Cellular signal strength in dB, NR: CsiSinr, LTE: Rsrq, WCDMA: EcNo, TDSCDMA: invalid,\n     * CDMA: Ecio, EVDO: SNR, GSM: invalid\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSameRegisteredCell()",
    "returnType" : "boolean",
    "comment" : " Whether the primary registered cell of current entry is same as that of previous entry ",
    "links" : [ ]
  } ],
  "variableNames" : [ "PROBE_STATUS_UNKNOWN", "PROBE_STATUS_NO_PROBE", "PROBE_STATUS_SUCCESS", "PROBE_STATUS_FAILURE", "mTimeStampMillis", "mRssi", "mLinkSpeedMbps", "mTotalTxSuccess", "mTotalTxRetries", "mTotalTxBad", "mTotalRxSuccess", "mTotalRadioOnTimeMillis", "mTotalRadioTxTimeMillis", "mTotalRadioRxTimeMillis", "mTotalScanTimeMillis", "mTotalNanScanTimeMillis", "mTotalBackgroundScanTimeMillis", "mTotalRoamScanTimeMillis", "mTotalPnoScanTimeMillis", "mTotalHotspot2ScanTimeMillis", "mTotalCcaBusyFreqTimeMillis", "mTotalRadioOnFreqTimeMillis", "mTotalBeaconRx", "mProbeStatusSinceLastUpdate", "mProbeElapsedTimeSinceLastUpdateMillis", "mProbeMcsRateSinceLastUpdate", "mRxLinkSpeedMbps", "mCellularDataNetworkType", "mCellularSignalStrengthDbm", "mCellularSignalStrengthDb", "mIsSameRegisteredCell", "CREATOR" ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public long getTimeStampMillis()", "public int getRssi()", "public int getLinkSpeedMbps()", "public long getTotalTxSuccess()", "public long getTotalTxRetries()", "public long getTotalTxBad()", "public long getTotalRxSuccess()", "public long getTotalRadioOnTimeMillis()", "public long getTotalRadioTxTimeMillis()", "public long getTotalRadioRxTimeMillis()", "public long getTotalScanTimeMillis()", "public long getTotalNanScanTimeMillis()", "public long getTotalBackgroundScanTimeMillis()", "public long getTotalRoamScanTimeMillis()", "public long getTotalPnoScanTimeMillis()", "public long getTotalHotspot2ScanTimeMillis()", "public long getTotalCcaBusyFreqTimeMillis()", "public long getTotalRadioOnFreqTimeMillis()", "public long getTotalBeaconRx()", "public int getProbeStatusSinceLastUpdate()", "public int getProbeElapsedTimeSinceLastUpdateMillis()", "public int getProbeMcsRateSinceLastUpdate()", "public int getRxLinkSpeedMbps()", "public int getCellularDataNetworkType()", "public int getCellularSignalStrengthDbm()", "public int getCellularSignalStrengthDb()", "public boolean isSameRegisteredCell()" ]
}