{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/backup/RestoreSession.java",
  "packageName" : "android.app.backup",
  "className" : "RestoreSession",
  "comment" : "\n * Interface for managing a restore session.\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "IRestoreSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mObserver",
    "type" : "RestoreObserverWrapper",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getAvailableRestoreSets(RestoreObserver observer, BackupManagerMonitor monitor)",
    "returnType" : "int",
    "comment" : "\n     * Ask the current transport what the available restore sets are.\n     *\n     * @param observer a RestoreObserver object whose restoreSetsAvailable() method will\n     *   be called on the application's main thread in order to supply the results of\n     *   the restore set lookup by the backup transport.  This parameter must not be\n     *   null.\n     * @param monitor a BackupManagerMonitor object will supply data about important events.\n     * @return Zero on success, nonzero on error.  The observer's restoreSetsAvailable()\n     *   method will only be called if this method returned zero.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAvailableRestoreSets(RestoreObserver observer)",
    "returnType" : "int",
    "comment" : "\n     * Ask the current transport what the available restore sets are.\n     *\n     * @param observer a RestoreObserver object whose restoreSetsAvailable() method will\n     *   be called on the application's main thread in order to supply the results of\n     *   the restore set lookup by the backup transport.  This parameter must not be\n     *   null.\n     * @return Zero on success, nonzero on error.  The observer's restoreSetsAvailable()\n     *   method will only be called if this method returned zero.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int restoreAll(long token, RestoreObserver observer, BackupManagerMonitor monitor)",
    "returnType" : "int",
    "comment" : "\n     * Restore the given set onto the device, replacing the current data of any app\n     * contained in the restore set with the data previously backed up.\n     *\n     * <p>Callers must hold the android.permission.BACKUP permission to use this method.\n     *\n     * @return Zero on success; nonzero on error.  The observer will only receive\n     *   progress callbacks if this method returned zero.\n     * @param token The token from {@link #getAvailableRestoreSets()} corresponding to\n     *   the restore set that should be used.\n     * @param observer If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     * @param monitor If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     ",
    "links" : [ "#getAvailableRestoreSets()" ]
  }, {
    "name" : "public int restoreAll(long token, RestoreObserver observer)",
    "returnType" : "int",
    "comment" : "\n     * Restore the given set onto the device, replacing the current data of any app\n     * contained in the restore set with the data previously backed up.\n     *\n     * <p>Callers must hold the android.permission.BACKUP permission to use this method.\n     *\n     * @return Zero on success; nonzero on error.  The observer will only receive\n     *   progress callbacks if this method returned zero.\n     * @param token The token from {@link #getAvailableRestoreSets()} corresponding to\n     *   the restore set that should be used.\n     * @param observer If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     ",
    "links" : [ "#getAvailableRestoreSets()" ]
  }, {
    "name" : "public int restorePackages(long token, @Nullable RestoreObserver observer, @NonNull Set<String> packages, @Nullable BackupManagerMonitor monitor)",
    "returnType" : "int",
    "comment" : "\n     * Restore select packages from the given set onto the device, replacing the\n     * current data of any app contained in the set with the data previously\n     * backed up.\n     *\n     * <p>Callers must hold the android.permission.BACKUP permission to use this method.\n     *\n     * @return Zero on success, nonzero on error. The observer will only receive\n     *   progress callbacks if this method returned zero.\n     * @param token The token from {@link getAvailableRestoreSets()} corresponding to\n     *   the restore set that should be used.\n     * @param observer If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     * @param packages The set of packages for which to attempt a restore.  Regardless of\n     *   the contents of the actual back-end dataset named by {@code token}, only\n     *   applications mentioned in this list will have their data restored.\n     * @param monitor If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation containing detailed information on any\n     *   failures or important decisions made by {@link BackupManager}.\n     ",
    "links" : [ "android.app.backup.BackupManager", "getAvailableRestoreSets()" ]
  }, {
    "name" : "public int restorePackages(long token, @Nullable RestoreObserver observer, @NonNull Set<String> packages)",
    "returnType" : "int",
    "comment" : "\n     * Restore select packages from the given set onto the device, replacing the\n     * current data of any app contained in the set with the data previously\n     * backed up.\n     *\n     * <p>Callers must hold the android.permission.BACKUP permission to use this method.\n     *\n     * @return Zero on success, nonzero on error. The observer will only receive\n     *   progress callbacks if this method returned zero.\n     * @param token The token from {@link getAvailableRestoreSets()} corresponding to\n     *   the restore set that should be used.\n     * @param observer If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     * @param packages The set of packages for which to attempt a restore.  Regardless of\n     *   the contents of the actual back-end dataset named by {@code token}, only\n     *   applications mentioned in this list will have their data restored.\n     ",
    "links" : [ "getAvailableRestoreSets()" ]
  }, {
    "name" : "public int restoreSome(long token, RestoreObserver observer, BackupManagerMonitor monitor, String[] packages)",
    "returnType" : "int",
    "comment" : "\n     * Restore select packages from the given set onto the device, replacing the\n     * current data of any app contained in the set with the data previously\n     * backed up.\n     *\n     * <p>Callers must hold the android.permission.BACKUP permission to use this method.\n     *\n     * @return Zero on success, nonzero on error. The observer will only receive\n     *   progress callbacks if this method returned zero.\n     * @param token The token from {@link getAvailableRestoreSets()} corresponding to\n     *   the restore set that should be used.\n     * @param observer If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     * @param monitor If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     * @param packages The set of packages for which to attempt a restore.  Regardless of\n     *   the contents of the actual back-end dataset named by {@code token}, only\n     *   applications mentioned in this list will have their data restored.\n     *\n     * @deprecated use {@link RestoreSession#restorePackages(long, RestoreObserver,\n     *   BackupManagerMonitor, Set)} instead.\n     * @removed\n     ",
    "links" : [ "android.app.backup.RestoreSession#restorePackages(long", "getAvailableRestoreSets()" ]
  }, {
    "name" : "public int restoreSome(long token, RestoreObserver observer, String[] packages)",
    "returnType" : "int",
    "comment" : "\n     * Restore select packages from the given set onto the device, replacing the\n     * current data of any app contained in the set with the data previously\n     * backed up.\n     *\n     * <p>Callers must hold the android.permission.BACKUP permission to use this method.\n     *\n     * @return Zero on success, nonzero on error. The observer will only receive\n     *   progress callbacks if this method returned zero.\n     * @param token The token from {@link getAvailableRestoreSets()} corresponding to\n     *   the restore set that should be used.\n     * @param observer If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     * @param packages The set of packages for which to attempt a restore.  Regardless of\n     *   the contents of the actual back-end dataset named by {@code token}, only\n     *   applications mentioned in this list will have their data restored.\n     *\n     * @deprecated use {@link RestoreSession#restorePackages(long, RestoreObserver, Set)}\n     *   instead.\n     * @removed\n     ",
    "links" : [ "android.app.backup.RestoreSession#restorePackages(long", "getAvailableRestoreSets()" ]
  }, {
    "name" : "public int restorePackage(String packageName, RestoreObserver observer, BackupManagerMonitor monitor)",
    "returnType" : "int",
    "comment" : "\n     * Restore a single application from backup.  The data will be restored from the\n     * current backup dataset if the given package has stored data there, or from\n     * the dataset used during the last full device setup operation if the current\n     * backup dataset has no matching data.  If no backup data exists for this package\n     * in either source, a nonzero value will be returned.\n     *\n     * <p class=\"caution\">Note: Unlike other restore operations, this method doesn't terminate the\n     * application after the restore. The application continues running to receive the\n     * {@link RestoreObserver} callbacks on the {@code observer} argument.\n     *\n     * @return Zero on success; nonzero on error.  The observer will only receive\n     *   progress callbacks if this method returned zero.\n     * @param packageName The name of the package whose data to restore.  If this is\n     *   not the name of the caller's own package, then the android.permission.BACKUP\n     *   permission must be held.\n     * @param observer If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     *\n     * @param monitor If non-null, this binder points to an object that will receive\n     *   event callbacks during the restore operation.\n     ",
    "links" : [ "android.app.backup.RestoreObserver" ]
  }, {
    "name" : "public int restorePackage(String packageName, RestoreObserver observer)",
    "returnType" : "int",
    "comment" : "\n     * Restore a single application from backup.  The data will be restored from the\n     * current backup dataset if the given package has stored data there, or from\n     * the dataset used during the last full device setup operation if the current\n     * backup dataset has no matching data.  If no backup data exists for this package\n     * in either source, a nonzero value will be returned.\n     *\n     * @return Zero on success; nonzero on error.  The observer will only receive\n     *   progress callbacks if this method returned zero.\n     * @param packageName The name of the package whose data to restore.  If this is\n     *   not the name of the caller's own package, then the android.permission.BACKUP\n     *   permission must be held.\n     * @param observer If non-null, this binder points to an object that will receive\n     *   progress callbacks during the restore operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void endRestoreSession()",
    "returnType" : "void",
    "comment" : "\n     * End this restore session.  After this method is called, the RestoreSession\n     * object is no longer valid.\n     *\n     * <p><b>Note:</b> The caller <i>must</i> invoke this method to end the restore session,\n     *   even if {@link #restorePackage(String, RestoreObserver)} failed.\n     ",
    "links" : [ "#restorePackage(String" ]
  } ],
  "variableNames" : [ "TAG", "mContext", "mBinder", "mObserver" ],
  "methodNames" : [ "public int getAvailableRestoreSets(RestoreObserver observer, BackupManagerMonitor monitor)", "public int getAvailableRestoreSets(RestoreObserver observer)", "public int restoreAll(long token, RestoreObserver observer, BackupManagerMonitor monitor)", "public int restoreAll(long token, RestoreObserver observer)", "public int restorePackages(long token, @Nullable RestoreObserver observer, @NonNull Set<String> packages, @Nullable BackupManagerMonitor monitor)", "public int restorePackages(long token, @Nullable RestoreObserver observer, @NonNull Set<String> packages)", "public int restoreSome(long token, RestoreObserver observer, BackupManagerMonitor monitor, String[] packages)", "public int restoreSome(long token, RestoreObserver observer, String[] packages)", "public int restorePackage(String packageName, RestoreObserver observer, BackupManagerMonitor monitor)", "public int restorePackage(String packageName, RestoreObserver observer)", "public void endRestoreSession()" ]
}