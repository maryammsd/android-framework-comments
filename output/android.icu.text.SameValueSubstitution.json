{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/NFSubstitution.java",
  "packageName" : "android.icu.text",
  "className" : "SameValueSubstitution",
  "comment" : "\n * A substitution that passes the value passed to it through unchanged.\n * Represented by == in rule descriptions.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public long transformNumber(long number)",
    "returnType" : "long",
    "comment" : "\n     * Returns \"number\" unchanged.\n     * @return \"number\"\n     ",
    "links" : [ ]
  }, {
    "name" : "public double transformNumber(double number)",
    "returnType" : "double",
    "comment" : "\n     * Returns \"number\" unchanged.\n     * @return \"number\"\n     ",
    "links" : [ ]
  }, {
    "name" : "public double composeRuleValue(double newRuleValue, double oldRuleValue)",
    "returnType" : "double",
    "comment" : "\n     * Returns newRuleValue and ignores oldRuleValue. (The value we got\n     * matching the substitution supersedes the value of the rule\n     * that owns the substitution.)\n     * @param newRuleValue The value resulting from matching the substitution\n     * @param oldRuleValue The value of the rule containing the\n     * substitution.\n     * @return newRuleValue\n     ",
    "links" : [ ]
  }, {
    "name" : "public double calcUpperBound(double oldUpperBound)",
    "returnType" : "double",
    "comment" : "\n     * SameValueSubstitution doesn't change the upper bound.\n     * @param oldUpperBound The current upper bound.\n     * @return oldUpperBound\n     ",
    "links" : [ ]
  }, {
    "name" : " char tokenChar()",
    "returnType" : "char",
    "comment" : "\n     * The token character for a SameValueSubstitution is =.\n     * @return '='\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public long transformNumber(long number)", "public double transformNumber(double number)", "public double composeRuleValue(double newRuleValue, double oldRuleValue)", "public double calcUpperBound(double oldUpperBound)", " char tokenChar()" ],
  "variableNames" : [ ]
}