{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/invoke/Transformers.java",
  "packageName" : "java.lang.invoke",
  "className" : "Loop",
  "comment" : " Implements {@code MethodHandles.loop}. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "inits",
    "type" : "MethodHandle[]",
    "comment" : " Loop variable initialization methods. ",
    "links" : [ ]
  }, {
    "name" : "steps",
    "type" : "MethodHandle[]",
    "comment" : " Loop variable step methods. ",
    "links" : [ ]
  }, {
    "name" : "preds",
    "type" : "MethodHandle[]",
    "comment" : " Loop variable predicate methods. ",
    "links" : [ ]
  }, {
    "name" : "finis",
    "type" : "MethodHandle[]",
    "comment" : " Loop return value calculating methods. ",
    "links" : [ ]
  }, {
    "name" : "loopVarsType",
    "type" : "MethodType",
    "comment" : " Synthetic method type for frame used to hold loop variables. ",
    "links" : [ ]
  }, {
    "name" : "loopVarsRange",
    "type" : "Range",
    "comment" : " Range of loop variables in the frame used for loop variables. ",
    "links" : [ ]
  }, {
    "name" : "suffixRange",
    "type" : "Range",
    "comment" : " Range of suffix variables in the caller frame. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void transform(EmulatedStackFrame callerFrame) throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static MethodType deduceLoopVarsType(final MethodHandle[] inits)",
    "returnType" : "MethodType",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void init(final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame, final StackFrameWriter loopVarsWriter) throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private EmulatedStackFrame prepareFrame(final MethodType mt, final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame)",
    "returnType" : "EmulatedStackFrame",
    "comment" : "\n         * Creates a frame for invoking a method of specified type.\n         *\n         * The frame arguments are the loop variables followed by the arguments provided to the\n         * loop MethodHandle.\n         *\n         * @param mt the type of the method to be invoked.\n         * @param callerFrame the frame invoking the loop MethodHandle.\n         * @param loopVarsFrame the frame holding loop variables.\n         * @return an EmulatedStackFrame initialized with the required arguments.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void doStep(final MethodHandle step, final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame, final StackFrameWriter loopVarsWriter) throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean doPredicate(final MethodHandle pred, final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame) throws Throwable",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void doFinish(final MethodHandle fini, final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame) throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void transform(EmulatedStackFrame callerFrame) throws Throwable", "private static MethodType deduceLoopVarsType(final MethodHandle[] inits)", "private void init(final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame, final StackFrameWriter loopVarsWriter) throws Throwable", "private EmulatedStackFrame prepareFrame(final MethodType mt, final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame)", "private void doStep(final MethodHandle step, final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame, final StackFrameWriter loopVarsWriter) throws Throwable", "private boolean doPredicate(final MethodHandle pred, final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame) throws Throwable", "private void doFinish(final MethodHandle fini, final EmulatedStackFrame callerFrame, final EmulatedStackFrame loopVarsFrame) throws Throwable" ],
  "variableNames" : [ "inits", "steps", "preds", "finis", "loopVarsType", "loopVarsRange", "suffixRange" ]
}