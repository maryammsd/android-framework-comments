{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/zip/CheckedInputStream.java",
  "packageName" : "java.util.zip",
  "className" : "CheckedInputStream",
  "comment" : "\n * An input stream that also maintains a checksum of the data being read.\n * The checksum can then be used to verify the integrity of the input data.\n *\n * @see         Checksum\n * @author      David Connelly\n * @since 1.1\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "cksum",
    "type" : "Checksum",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int read() throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Reads a byte. Will block if no input is available.\n     * @return the byte read, or -1 if the end of the stream is reached.\n     * @throws    IOException if an I/O error has occurred\n     ",
    "links" : [ ]
  }, {
    "name" : "public int read(byte[] buf, int off, int len) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Reads into an array of bytes. If {@code len} is not zero, the method\n     * blocks until some input is available; otherwise, no\n     * bytes are read and {@code 0} is returned.\n     * @param buf the buffer into which the data is read\n     * @param off the start offset in the destination array {@code b}\n     * @param len the maximum number of bytes read\n     * @return    the actual number of bytes read, or -1 if the end\n     *            of the stream is reached.\n     * @throws     NullPointerException If {@code buf} is {@code null}.\n     * @throws     IndexOutOfBoundsException If {@code off} is negative,\n     * {@code len} is negative, or {@code len} is greater than\n     * {@code buf.length - off}\n     * @throws    IOException if an I/O error has occurred\n     ",
    "links" : [ ]
  }, {
    "name" : "public long skip(long n) throws IOException",
    "returnType" : "long",
    "comment" : "\n     * Skips specified number of bytes of input.\n     * @param n the number of bytes to skip\n     * @return the actual number of bytes skipped\n     * @throws    IOException if an I/O error has occurred\n     ",
    "links" : [ ]
  }, {
    "name" : "public Checksum getChecksum()",
    "returnType" : "Checksum",
    "comment" : "\n     * Returns the Checksum for this input stream.\n     * @return the Checksum value\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int read() throws IOException", "public int read(byte[] buf, int off, int len) throws IOException", "public long skip(long n) throws IOException", "public Checksum getChecksum()" ],
  "variableNames" : [ "cksum" ]
}