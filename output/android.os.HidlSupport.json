{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/HidlSupport.java",
  "packageName" : "android.os",
  "className" : "HidlSupport",
  "comment" : " @hide ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static boolean deepEquals(Object lft, Object rgt)",
    "returnType" : "boolean",
    "comment" : "\n     * Similar to Objects.deepEquals, but also take care of lists.\n     * Two objects of HIDL types are considered equal if:\n     * 1. Both null\n     * 2. Both non-null, and of the same class, and:\n     * 2.1 Both are primitive arrays / enum arrays, elements are equal using == check\n     * 2.2 Both are object arrays, elements are checked recursively\n     * 2.3 Both are Lists, elements are checked recursively\n     * 2.4 (If both are collections other than lists or maps, throw an error)\n     * 2.5 lft.equals(rgt) returns true\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int deepHashCode(Object o)",
    "returnType" : "int",
    "comment" : "\n     * Similar to Arrays.deepHashCode, but also take care of lists.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void throwErrorIfUnsupportedType(Object o)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static int primitiveArrayHashCode(Object o)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static boolean interfacesEqual(IHwInterface lft, Object rgt)",
    "returnType" : "boolean",
    "comment" : "\n     * Test that two interfaces are equal. This is the Java equivalent to C++\n     * interfacesEqual function.\n     * This essentially calls .equals on the internal binder objects (via Binder()).\n     * - If both interfaces are proxies, asBinder() returns a {@link HwRemoteBinder}\n     *   object, and they are compared in {@link HwRemoteBinder#equals}.\n     * - If both interfaces are stubs, asBinder() returns the object itself. By default,\n     *   auto-generated IFoo.Stub does not override equals(), but an implementation can\n     *   optionally override it, and {@code interfacesEqual} will use it here.\n     * @hide\n     ",
    "links" : [ "android.os.HwRemoteBinder#equals", "android.os.HwRemoteBinder" ]
  }, {
    "name" : "public static native int getPidIfSharable()",
    "returnType" : "int",
    "comment" : "\n     * Return PID of process only if on a non-user build. For debugging purposes.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public static boolean deepEquals(Object lft, Object rgt)", "public static int deepHashCode(Object o)", "private static void throwErrorIfUnsupportedType(Object o)", "private static int primitiveArrayHashCode(Object o)", "public static boolean interfacesEqual(IHwInterface lft, Object rgt)", "public static native int getPidIfSharable()" ]
}