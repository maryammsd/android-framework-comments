{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/autofill/AutofillClientController.java",
  "packageName" : "android.view.autofill",
  "className" : "AutofillClientController",
  "comment" : "\n * A controller to manage the autofill requests for the {@link Activity}.\n *\n * @hide\n ",
  "links" : [ "android.app.Activity" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LAST_AUTOFILL_ID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AUTOFILL_RESET_NEEDED",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AUTO_FILL_AUTH_WHO_PREFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DUMPABLE_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastAutofillId",
    "type" : "int",
    "comment" : " The last autofill id that was returned from {@link #getNextAutofillId()} ",
    "links" : [ "#getNextAutofillId()" ]
  }, {
    "name" : "mActivity",
    "type" : "Activity",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutofillManager",
    "type" : "AutofillManager",
    "comment" : " The autofill manager. Always access via {@link #getAutofillManager()}. ",
    "links" : [ "#getAutofillManager()" ]
  }, {
    "name" : "mAutofillPopupWindow",
    "type" : "AutofillPopupWindow",
    "comment" : " The autofill dropdown fill ui. ",
    "links" : [ ]
  }, {
    "name" : "mAutoFillResetNeeded",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoFillIgnoreFirstResumePause",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private AutofillManager getAutofillManager()",
    "returnType" : "AutofillManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onActivityAttached(Application application)",
    "returnType" : "void",
    "comment" : "\n     * Called when the Activity is attached.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onActivityCreated(@NonNull Bundle savedInstanceState)",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#onCreate(Bundle)} is called.\n     ",
    "links" : [ "android.app.Activity#onCreate(Bundle)" ]
  }, {
    "name" : "public void onActivityStarted()",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#onStart()} is called.\n     ",
    "links" : [ "android.app.Activity#onStart()" ]
  }, {
    "name" : "public void onActivityResumed()",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#onResume()} is called.\n     ",
    "links" : [ "android.app.Activity#onResume()" ]
  }, {
    "name" : "public void onActivityPerformResume(boolean followedByPause)",
    "returnType" : "void",
    "comment" : "\n     * Called when the Activity is performing resume.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onActivityPaused()",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#onPause()} is called.\n     ",
    "links" : [ "android.app.Activity#onPause()" ]
  }, {
    "name" : "public void onActivityStopped(Intent intent, boolean changingConfigurations)",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#onStop()} is called.\n     ",
    "links" : [ "android.app.Activity#onStop()" ]
  }, {
    "name" : "public void onActivityDestroyed()",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#onDestroy()} is called.\n     ",
    "links" : [ "android.app.Activity#onDestroy()" ]
  }, {
    "name" : "public void onSaveInstanceState(Bundle outState)",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#onSaveInstanceState(Bundle)} is called.\n     ",
    "links" : [ "android.app.Activity#onSaveInstanceState(Bundle)" ]
  }, {
    "name" : "public void onActivityFinish(Intent intent)",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#finish()} is called.\n     ",
    "links" : [ "android.app.Activity#finish()" ]
  }, {
    "name" : "public void onActivityBackPressed(Intent intent)",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#onBackPressed()} is called.\n     ",
    "links" : [ "android.app.Activity#onBackPressed()" ]
  }, {
    "name" : "public void onDispatchActivityResult(int requestCode, int resultCode, Intent data)",
    "returnType" : "void",
    "comment" : "\n     * Called when the Activity is dispatching the result.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onStartActivity(Intent startIntent, Intent cachedIntent)",
    "returnType" : "void",
    "comment" : "\n     * Called when the {@link Activity#startActivity(Intent, Bundle)} is called.\n     ",
    "links" : [ "android.app.Activity#startActivity(Intent" ]
  }, {
    "name" : "public void restoreAutofillSaveUi(Intent intent)",
    "returnType" : "void",
    "comment" : "\n     * Restore the autofill save ui.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void enableAutofillCompatibilityIfNeeded()",
    "returnType" : "void",
    "comment" : "\n     * Enable autofill compatibility mode for the Activity if the compatibility mode is enabled\n     * for the package.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDumpableName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(PrintWriter writer, String[] args)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getNextAutofillId()",
    "returnType" : "int",
    "comment" : "\n     * Returns the next autofill ID that is unique in the activity\n     *\n     * <p>All IDs will be bigger than {@link View#LAST_APP_AUTOFILL_ID}. All IDs returned\n     * will be unique.\n     ",
    "links" : [ "android.view.View#LAST_APP_AUTOFILL_ID" ]
  }, {
    "name" : "public AutofillId autofillClientGetNextAutofillId()",
    "returnType" : "AutofillId",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean autofillClientIsCompatibilityModeEnabled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean autofillClientIsVisibleForAutofill()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ComponentName autofillClientGetComponentName()",
    "returnType" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public IBinder autofillClientGetActivityToken()",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean[] autofillClientGetViewVisibility(AutofillId[] autofillIds)",
    "returnType" : "boolean[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View autofillClientFindViewByAccessibilityIdTraversal(int viewId, int windowId)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View autofillClientFindViewByAutofillIdTraversal(AutofillId autofillId)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View[] autofillClientFindViewsByAutofillIdTraversal(AutofillId[] autofillIds)",
    "returnType" : "View[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean autofillClientIsFillUiShowing()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean autofillClientRequestHideFillUi()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean autofillClientRequestShowFillUi(@NonNull View anchor, int width, int height, @Nullable Rect anchorBounds, IAutofillWindowPresenter presenter)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void autofillClientDispatchUnhandledKey(View anchor, KeyEvent keyEvent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isDisablingEnterExitEventForAutofill()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void autofillClientResetableStateAvailable()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void autofillClientRunOnUiThread(Runnable action)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void autofillClientAuthenticate(int authenticationId, IntentSender intent, Intent fillInIntent, boolean authenticateInline)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private AutofillManager getAutofillManager()", "public void onActivityAttached(Application application)", "public void onActivityCreated(@NonNull Bundle savedInstanceState)", "public void onActivityStarted()", "public void onActivityResumed()", "public void onActivityPerformResume(boolean followedByPause)", "public void onActivityPaused()", "public void onActivityStopped(Intent intent, boolean changingConfigurations)", "public void onActivityDestroyed()", "public void onSaveInstanceState(Bundle outState)", "public void onActivityFinish(Intent intent)", "public void onActivityBackPressed(Intent intent)", "public void onDispatchActivityResult(int requestCode, int resultCode, Intent data)", "public void onStartActivity(Intent startIntent, Intent cachedIntent)", "public void restoreAutofillSaveUi(Intent intent)", "public void enableAutofillCompatibilityIfNeeded()", "public String getDumpableName()", "public void dump(PrintWriter writer, String[] args)", "public int getNextAutofillId()", "public AutofillId autofillClientGetNextAutofillId()", "public boolean autofillClientIsCompatibilityModeEnabled()", "public boolean autofillClientIsVisibleForAutofill()", "public ComponentName autofillClientGetComponentName()", "public IBinder autofillClientGetActivityToken()", "public boolean[] autofillClientGetViewVisibility(AutofillId[] autofillIds)", "public View autofillClientFindViewByAccessibilityIdTraversal(int viewId, int windowId)", "public View autofillClientFindViewByAutofillIdTraversal(AutofillId autofillId)", "public View[] autofillClientFindViewsByAutofillIdTraversal(AutofillId[] autofillIds)", "public boolean autofillClientIsFillUiShowing()", "public boolean autofillClientRequestHideFillUi()", "public boolean autofillClientRequestShowFillUi(@NonNull View anchor, int width, int height, @Nullable Rect anchorBounds, IAutofillWindowPresenter presenter)", "public void autofillClientDispatchUnhandledKey(View anchor, KeyEvent keyEvent)", "public boolean isDisablingEnterExitEventForAutofill()", "public void autofillClientResetableStateAvailable()", "public void autofillClientRunOnUiThread(Runnable action)", "public void autofillClientAuthenticate(int authenticationId, IntentSender intent, Intent fillInIntent, boolean authenticateInline)" ],
  "variableNames" : [ "TAG", "LOG_TAG", "DEBUG", "LAST_AUTOFILL_ID", "AUTOFILL_RESET_NEEDED", "AUTO_FILL_AUTH_WHO_PREFIX", "DUMPABLE_NAME", "mLastAutofillId", "mActivity", "mAutofillManager", "mAutofillPopupWindow", "mAutoFillResetNeeded", "mAutoFillIgnoreFirstResumePause" ]
}