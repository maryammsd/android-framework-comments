{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/impl/CameraInjectionSessionImpl.java",
  "packageName" : "android.hardware.camera2.impl",
  "className" : "CameraInjectionSessionImpl",
  "comment" : "\n * The class inherits CameraInjectionSession. Use CameraManager#injectCamera to instantiate.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "CameraInjectionCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInjectionStatusCallback",
    "type" : "CameraInjectionSession.InjectionStatusCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterfaceLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInjectionSession",
    "type" : "ICameraInjectionSession",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void binderDied()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CameraInjectionCallback getCallback()",
    "returnType" : "CameraInjectionCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRemoteInjectionSession(ICameraInjectionSession injectionSession)",
    "returnType" : "void",
    "comment" : "\n     * Set remote injection session, which triggers initial onInjectionSucceeded callbacks.\n     *\n     * <p>This function may post onInjectionError if remoteInjectionSession dies\n     * during injecting.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onInjectionError(final int errorCode)",
    "returnType" : "void",
    "comment" : "\n     * The method called when the injection camera has encountered a serious error.\n     *\n     * @param errorCode The error code.\n     * @see #ERROR_INJECTION_SESSION\n     * @see #ERROR_INJECTION_SERVICE\n     * @see #ERROR_INJECTION_UNSUPPORTED\n     ",
    "links" : [ ]
  }, {
    "name" : "private void scheduleNotifyError(final int errorCode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void notifyError(final int errorCode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void close()", "protected void finalize() throws Throwable", "public void binderDied()", "public CameraInjectionCallback getCallback()", "public void setRemoteInjectionSession(ICameraInjectionSession injectionSession)", "public void onInjectionError(final int errorCode)", "private void scheduleNotifyError(final int errorCode)", "private void notifyError(final int errorCode)" ],
  "variableNames" : [ "TAG", "mCallback", "mInjectionStatusCallback", "mExecutor", "mInterfaceLock", "mInjectionSession" ]
}