{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/PackageTagsList.java",
  "packageName" : "android.os",
  "className" : "Builder",
  "comment" : "\n     * Builder class for {@link PackageTagsList}.\n     ",
  "links" : [ "android.os.PackageTagsList" ],
  "variables" : [ {
    "name" : "mPackageTags",
    "type" : "ArrayMap<String, ArraySet<String>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder add(@NonNull String packageName)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds all attribution tags under the specified package to the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder add(@NonNull String packageName, @Nullable String attributionTag)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds the specified package and attribution tag to the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder add(@NonNull String packageName, @NonNull Collection<String> attributionTags)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds the specified package and set of attribution tags to the builder.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder add(@NonNull PackageTagsList packageTagsList)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds the specified {@link PackageTagsList} to the builder.\n         ",
    "links" : [ "android.os.PackageTagsList" ]
  }, {
    "name" : "public Builder add(@NonNull Map<String, ? extends Set<String>> packageTagsMap)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds the given map of package to attribution tags to the builder. An empty set of\n         * attribution tags is interpreted to imply all attribution tags under that package.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder remove(@NonNull String packageName)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes all attribution tags under the specified package from the builder.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder remove(@NonNull String packageName, @Nullable String attributionTag)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes the specified package and attribution tag from the builder if and only if the\n         * specified attribution tag is listed explicitly under the package. If the package contains\n         * all possible attribution tags, then nothing will be removed.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder remove(@NonNull String packageName, @NonNull Collection<String> attributionTags)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes the specified package and set of attribution tags from the builder if and only if\n         * the specified set of attribution tags are listed explicitly under the package. If the\n         * package contains all possible attribution tags, then nothing will be removed.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder remove(@NonNull PackageTagsList packageTagsList)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes the specified {@link PackageTagsList} from the builder. If a package contains all\n         * possible attribution tags, it will only be removed if the package in the removed\n         * {@link PackageTagsList} also contains all possible attribution tags.\n         *\n         * @hide\n         ",
    "links" : [ "android.os.PackageTagsList" ]
  }, {
    "name" : "public Builder remove(@NonNull Map<String, ? extends Set<String>> packageTagsMap)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes the given map of package to attribution tags to the builder. An empty set of\n         * attribution tags is interpreted to imply all attribution tags under that package. If a\n         * package contains all possible attribution tags, it will only be removed if the package in\n         * the removed map also contains all possible attribution tags.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clear()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public PackageTagsList build()",
    "returnType" : "PackageTagsList",
    "comment" : "\n         * Constructs a new {@link PackageTagsList}.\n         ",
    "links" : [ "android.os.PackageTagsList" ]
  }, {
    "name" : "private static ArrayMap<String, ArraySet<String>> copy(ArrayMap<String, ArraySet<String>> value)",
    "returnType" : "ArrayMap<String, ArraySet<String>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder add(@NonNull String packageName)", "public Builder add(@NonNull String packageName, @Nullable String attributionTag)", "public Builder add(@NonNull String packageName, @NonNull Collection<String> attributionTags)", "public Builder add(@NonNull PackageTagsList packageTagsList)", "public Builder add(@NonNull Map<String, ? extends Set<String>> packageTagsMap)", "public Builder remove(@NonNull String packageName)", "public Builder remove(@NonNull String packageName, @Nullable String attributionTag)", "public Builder remove(@NonNull String packageName, @NonNull Collection<String> attributionTags)", "public Builder remove(@NonNull PackageTagsList packageTagsList)", "public Builder remove(@NonNull Map<String, ? extends Set<String>> packageTagsMap)", "public Builder clear()", "public PackageTagsList build()", "private static ArrayMap<String, ArraySet<String>> copy(ArrayMap<String, ArraySet<String>> value)" ],
  "variableNames" : [ "mPackageTags" ]
}