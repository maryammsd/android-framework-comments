{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/DynamicLayout.java",
  "packageName" : "android.text",
  "className" : "ChangeWatcher",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mLayout",
    "type" : "WeakReference<DynamicLayout>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransformedTextUpdate",
    "type" : "OffsetMapping.TextUpdate",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void reflow(CharSequence s, int where, int before, int after)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void beforeTextChanged(CharSequence s, int where, int before, int after)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onTextChanged(CharSequence s, int where, int before, int after)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void afterTextChanged(Editable s)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void transformAndReflow(Spannable s, int start, int end)",
    "returnType" : "void",
    "comment" : "\n         * Reflow the {@link DynamicLayout} at the given range from {@code start} to the\n         * {@code end}.\n         * If the display text in this {@link DynamicLayout} is a {@link OffsetMapping} instance\n         * (which means it's also a transformed text), it will transform the given range first and\n         * then reflow.\n         ",
    "links" : [ "android.text.DynamicLayout", "android.text.method.OffsetMapping" ]
  }, {
    "name" : "public void onSpanAdded(Spannable s, Object o, int start, int end)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSpanRemoved(Spannable s, Object o, int start, int end)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSpanChanged(Spannable s, Object o, int start, int end, int nstart, int nend)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void reflow(CharSequence s, int where, int before, int after)", "public void beforeTextChanged(CharSequence s, int where, int before, int after)", "public void onTextChanged(CharSequence s, int where, int before, int after)", "public void afterTextChanged(Editable s)", "private void transformAndReflow(Spannable s, int start, int end)", "public void onSpanAdded(Spannable s, Object o, int start, int end)", "public void onSpanRemoved(Spannable s, Object o, int start, int end)", "public void onSpanChanged(Spannable s, Object o, int start, int end, int nstart, int nend)" ],
  "variableNames" : [ "mLayout", "mTransformedTextUpdate" ]
}