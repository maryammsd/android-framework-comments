{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaTranscodingManager.java",
  "packageName" : "android.media",
  "className" : "TranscodingSession",
  "comment" : "\n     * Handle to an enqueued transcoding operation. An instance of this class represents a single\n     * enqueued transcoding operation. The caller can use that instance to query the status or\n     * progress, and to get the result once the operation has completed.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STATUS_PENDING",
    "type" : "int",
    "comment" : " The session is enqueued but not yet running. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_RUNNING",
    "type" : "int",
    "comment" : " The session is currently running. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_FINISHED",
    "type" : "int",
    "comment" : " The session is finished. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_PAUSED",
    "type" : "int",
    "comment" : " The session is paused. ",
    "links" : [ ]
  }, {
    "name" : "RESULT_NONE",
    "type" : "int",
    "comment" : " The session does not have a result yet. ",
    "links" : [ ]
  }, {
    "name" : "RESULT_SUCCESS",
    "type" : "int",
    "comment" : " The session completed successfully. ",
    "links" : [ ]
  }, {
    "name" : "RESULT_ERROR",
    "type" : "int",
    "comment" : " The session encountered an error while running. ",
    "links" : [ ]
  }, {
    "name" : "RESULT_CANCELED",
    "type" : "int",
    "comment" : " The session was canceled by the caller. ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NONE",
    "type" : "int",
    "comment" : "\n         * Constant indicating that no error occurred.\n         ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DROPPED_BY_SERVICE",
    "type" : "int",
    "comment" : "\n         * Constant indicating that the session is dropped by Transcoding service due to hitting\n         * the limit, e.g. too many back to back transcoding happen in a short time frame.\n         ",
    "links" : [ ]
  }, {
    "name" : "ERROR_SERVICE_DIED",
    "type" : "int",
    "comment" : "\n         * Constant indicating the backing transcoding service is died. Client should enqueue the\n         * the request again.\n         ",
    "links" : [ ]
  }, {
    "name" : "mManager",
    "type" : "MediaTranscodingManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListenerExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "OnTranscodingFinishedListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : " Lock for internal state.",
    "links" : [ ]
  }, {
    "name" : "mProgressUpdateExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgressUpdateListener",
    "type" : "OnProgressUpdateListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgress",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgressUpdateInterval",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResult",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mErrorCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasRetried",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequest",
    "type" : "TranscodingRequest",
    "comment" : " The original request that associated with this session.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setOnProgressUpdateListener(@NonNull @CallbackExecutor Executor executor, @NonNull OnProgressUpdateListener listener)",
    "returnType" : "void",
    "comment" : "\n         * Set a progress listener.\n         * @param executor The executor on which listener will be invoked.\n         * @param listener The progress listener.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void clearOnProgressUpdateListener()",
    "returnType" : "void",
    "comment" : " Removes the progress listener if any. ",
    "links" : [ ]
  }, {
    "name" : "private void updateStatusAndResult(@Status int sessionStatus, @Result int sessionResult, @TranscodingSessionErrorCode int errorCode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getErrorCode()",
    "returnType" : "int",
    "comment" : "\n         * Retrieve the error code associated with the RESULT_ERROR.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean retry()",
    "returnType" : "boolean",
    "comment" : "\n         * Resubmit the transcoding session to the service.\n         * Note that only the session that fails or gets cancelled could be retried and each session\n         * could be retried only once. After that, Client need to enqueue a new request if they want\n         * to try again.\n         *\n         * @return true if successfully resubmit the job to service. False otherwise.\n         * @throws UnsupportedOperationException if the retry could not be fulfilled.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "private boolean retryInternal(boolean setHasRetried)",
    "returnType" : "boolean",
    "comment" : " TODO(hkuang): Add more test for it.",
    "links" : [ ]
  }, {
    "name" : "public void cancel()",
    "returnType" : "void",
    "comment" : "\n         * Cancels the transcoding session and notify the listener.\n         * If the session happened to finish before being canceled this call is effectively a no-op\n         * and will not update the result in that case.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getProgress()",
    "returnType" : "int",
    "comment" : "\n         * Gets the progress of the transcoding session. The progress is between 0 and 100, where 0\n         * means that the session has not yet started and 100 means that it is finished. For the\n         * cancelled session, the progress will be the last updated progress before it is cancelled.\n         * @return The progress.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getStatus()",
    "returnType" : "int",
    "comment" : "\n         * Gets the status of the transcoding session.\n         * @return The status.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean addClientUid(int uid)",
    "returnType" : "boolean",
    "comment" : "\n         * Adds a client uid that is also waiting for this transcoding session.\n         * <p>\n         * Only privilege caller with android.permission.WRITE_MEDIA_STORAGE could add the\n         * uid. Note that the permission check happens on the service side upon starting the\n         * transcoding. If the client does not have the permission, the transcoding will fail.\n         * @param uid  the additional client uid to be added.\n         * @return true if successfully added, false otherwise.\n         ",
    "links" : [ ]
  }, {
    "name" : "public List<Integer> getClientUids()",
    "returnType" : "List<Integer>",
    "comment" : "\n         * Query all the client that waiting for this transcoding session\n         * @return a list containing all the client uids.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSessionId()",
    "returnType" : "int",
    "comment" : "\n         * Gets sessionId of the transcoding session.\n         * @return session id.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getResult()",
    "returnType" : "int",
    "comment" : "\n         * Gets the result of the transcoding session.\n         * @return The result.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateProgress(int newProgress)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateStatus(int newStatus)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setOnProgressUpdateListener(@NonNull @CallbackExecutor Executor executor, @NonNull OnProgressUpdateListener listener)", "public void clearOnProgressUpdateListener()", "private void updateStatusAndResult(@Status int sessionStatus, @Result int sessionResult, @TranscodingSessionErrorCode int errorCode)", "public int getErrorCode()", "public boolean retry()", "private boolean retryInternal(boolean setHasRetried)", "public void cancel()", "public int getProgress()", "public int getStatus()", "public boolean addClientUid(int uid)", "public List<Integer> getClientUids()", "public int getSessionId()", "public int getResult()", "public String toString()", "private void updateProgress(int newProgress)", "private void updateStatus(int newStatus)" ],
  "variableNames" : [ "STATUS_PENDING", "STATUS_RUNNING", "STATUS_FINISHED", "STATUS_PAUSED", "RESULT_NONE", "RESULT_SUCCESS", "RESULT_ERROR", "RESULT_CANCELED", "ERROR_NONE", "ERROR_DROPPED_BY_SERVICE", "ERROR_SERVICE_DIED", "mManager", "mListenerExecutor", "mListener", "mSessionId", "mLock", "mProgressUpdateExecutor", "mProgressUpdateListener", "mProgress", "mProgressUpdateInterval", "mStatus", "mResult", "mErrorCode", "mHasRetried", "mRequest" ]
}