{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/TaskFragmentParentInfo.java",
  "packageName" : "android.window",
  "className" : "TaskFragmentParentInfo",
  "comment" : "\n * The information about the parent Task of a particular TaskFragment.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mConfiguration",
    "type" : "Configuration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVisible",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasDirectActivity",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDecorSurface",
    "type" : "SurfaceControl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TaskFragmentParentInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Configuration getConfiguration()",
    "returnType" : "Configuration",
    "comment" : "\n     * The {@link Configuration} of the parent Task\n     *\n     * @hide\n     ",
    "links" : [ "android.app.WindowConfiguration" ]
  }, {
    "name" : "public int getDisplayId()",
    "returnType" : "int",
    "comment" : "\n     * The display ID of the parent Task. {@link android.view.Display#INVALID_DISPLAY} means the\n     * Task is detached from previously associated display.\n     *\n     * @hide\n     ",
    "links" : [ "android.view.Display#INVALID_DISPLAY" ]
  }, {
    "name" : "public boolean isVisible()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether the parent Task is visible or not\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasDirectActivity()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether the parent Task has any direct child activity, which is not embedded in any\n     * TaskFragment, or not.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equalsForTaskFragmentOrganizer(@Nullable TaskFragmentParentInfo that)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if the parameters which are important for task fragment\n     * organizers are equal between this {@link TaskFragmentParentInfo} and {@code that}.\n     * Note that this method is usually called with\n     * {@link com.android.server.wm.WindowOrganizerController#configurationsAreEqualForOrganizer(\n     * Configuration, Configuration)} to determine if this {@link TaskFragmentParentInfo} should\n     * be dispatched to the client.\n     *\n     * @hide\n     ",
    "links" : [ "android.window.TaskFragmentParentInfo", "com.android.server.wm.WindowOrganizerController#configurationsAreEqualForOrganizer(" ]
  }, {
    "name" : "public SurfaceControl getDecorSurface()",
    "returnType" : "SurfaceControl",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private int getWindowingMode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates that whether this {@link TaskFragmentParentInfo} equals to {@code obj}.\n     * Note that {@link #equalsForTaskFragmentOrganizer(TaskFragmentParentInfo)} should be used\n     * for most cases because not all {@link Configuration} properties are interested for\n     * {@link TaskFragmentOrganizer}.\n     ",
    "links" : [ "android.window.TaskFragmentParentInfo", "#equalsForTaskFragmentOrganizer(TaskFragmentParentInfo)", "android.app.WindowConfiguration", "android.window.TaskFragmentOrganizer" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Configuration getConfiguration()", "public int getDisplayId()", "public boolean isVisible()", "public boolean hasDirectActivity()", "public boolean equalsForTaskFragmentOrganizer(@Nullable TaskFragmentParentInfo that)", "public SurfaceControl getDecorSurface()", "private int getWindowingMode()", "public String toString()", "public boolean equals(Object obj)", "public int hashCode()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()" ],
  "variableNames" : [ "mConfiguration", "mDisplayId", "mVisible", "mHasDirectActivity", "mDecorSurface", "CREATOR" ]
}