{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/StatsEvent.java",
  "packageName" : "android.util",
  "className" : "Builder",
  "comment" : "\n     * Builder for constructing a StatsEvent object.\n     *\n     * <p>This class defines and encapsulates the socket encoding for the buffer.\n     * The write methods must be called in the same order as the order of fields in the\n     * atom definition.</p>\n     *\n     * <p>setAtomId() can be called anytime before build().</p>\n     *\n     * <p>Example:</p>\n     * <pre>\n     *     // Atom definition.\n     *     message MyAtom {\n     *         optional int32 field1 = 1;\n     *         optional int64 field2 = 2;\n     *         optional string field3 = 3 [(annotation1) = true];\n     *     }\n     *\n     *     // StatsEvent construction for pushed event.\n     *     StatsEvent.newBuilder()\n     *     StatsEvent statsEvent = StatsEvent.newBuilder()\n     *         .setAtomId(atomId)\n     *         .writeInt(3) // field1\n     *         .writeLong(8L) // field2\n     *         .writeString(\"foo\") // field 3\n     *         .addBooleanAnnotation(annotation1Id, true)\n     *         .usePooledBuffer()\n     *         .build();\n     *\n     *     // StatsEvent construction for pulled event.\n     *     StatsEvent.newBuilder()\n     *     StatsEvent statsEvent = StatsEvent.newBuilder()\n     *         .setAtomId(atomId)\n     *         .writeInt(3) // field1\n     *         .writeLong(8L) // field2\n     *         .writeString(\"foo\") // field 3\n     *         .addBooleanAnnotation(annotation1Id, true)\n     *         .build();\n     * </pre>\n     *",
  "variables" : [ {
    "name" : "POS_NUM_ELEMENTS",
    "type" : "int",
    "comment" : " Fixed positions.",
    "links" : [ ]
  }, {
    "name" : "POS_TIMESTAMP_NS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "POS_ATOM_ID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBuffer",
    "type" : "Buffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimestampNs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAtomId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentAnnotationCount",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPos",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPosLastField",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastType",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumElements",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mErrorMask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUsePooledBuffer",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setAtomId(final int atomId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the atom id for this StatsEvent.\n         *\n         * This should be called immediately after StatsEvent.newBuilder()\n         * and should only be called once.\n         * Not calling setAtomId will result in ERROR_NO_ATOM_ID.\n         * Calling setAtomId out of order will result in ERROR_ATOM_ID_INVALID_POSITION.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder writeBoolean(final boolean value)",
    "returnType" : "Builder",
    "comment" : "\n         * Write a boolean field to this StatsEvent.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder writeInt(final int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Write an integer field to this StatsEvent.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder writeLong(final long value)",
    "returnType" : "Builder",
    "comment" : "\n         * Write a long field to this StatsEvent.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder writeFloat(final float value)",
    "returnType" : "Builder",
    "comment" : "\n         * Write a float field to this StatsEvent.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder writeString(@NonNull final String value)",
    "returnType" : "Builder",
    "comment" : "\n         * Write a String field to this StatsEvent.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder writeByteArray(@NonNull final byte[] value)",
    "returnType" : "Builder",
    "comment" : "\n         * Write a byte array field to this StatsEvent.\n         *",
    "links" : [ ]
  }, {
    "name" : "private void writeByteArray(@NonNull final byte[] value, final byte typeId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Builder writeAttributionChain(@NonNull final int[] uids, @NonNull final String[] tags)",
    "returnType" : "Builder",
    "comment" : "\n         * Write an attribution chain field to this StatsEvent.\n         *\n         * The sizes of uids and tags must be equal. The AttributionNode at position i is\n         * made up of uids[i] and tags[i].\n         *\n         * @param uids array of uids in the attribution nodes.\n         * @param tags array of tags in the attribution nodes.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder writeKeyValuePairs(@Nullable final SparseIntArray intMap, @Nullable final SparseLongArray longMap, @Nullable final SparseArray<String> stringMap, @Nullable final SparseArray<Float> floatMap)",
    "returnType" : "Builder",
    "comment" : "\n         * Write KeyValuePairsAtom entries to this StatsEvent.\n         *\n         * @param intMap Integer key-value pairs.\n         * @param longMap Long key-value pairs.\n         * @param stringMap String key-value pairs.\n         * @param floatMap Float key-value pairs.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder addBooleanAnnotation(final byte annotationId, final boolean value)",
    "returnType" : "Builder",
    "comment" : "\n         * Write a boolean annotation for the last field written.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder addIntAnnotation(final byte annotationId, final int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Write an integer annotation for the last field written.\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder usePooledBuffer()",
    "returnType" : "Builder",
    "comment" : "\n         * Indicates to reuse Buffer's byte array as the underlying payload in StatsEvent.\n         * This should be called for pushed events to reduce memory allocations and garbage\n         * collections.\n         *",
    "links" : [ ]
  }, {
    "name" : "public StatsEvent build()",
    "returnType" : "StatsEvent",
    "comment" : "\n         * Builds a StatsEvent object with values entered in this Builder.\n         *",
    "links" : [ ]
  }, {
    "name" : "private void writeTypeId(final byte typeId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void writeAnnotationCount()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static byte[] stringToBytes(@Nullable final String value)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "POS_NUM_ELEMENTS", "POS_TIMESTAMP_NS", "POS_ATOM_ID", "mBuffer", "mTimestampNs", "mAtomId", "mCurrentAnnotationCount", "mPos", "mPosLastField", "mLastType", "mNumElements", "mErrorMask", "mUsePooledBuffer" ],
  "methodNames" : [ "public Builder setAtomId(final int atomId)", "public Builder writeBoolean(final boolean value)", "public Builder writeInt(final int value)", "public Builder writeLong(final long value)", "public Builder writeFloat(final float value)", "public Builder writeString(@NonNull final String value)", "public Builder writeByteArray(@NonNull final byte[] value)", "private void writeByteArray(@NonNull final byte[] value, final byte typeId)", "public Builder writeAttributionChain(@NonNull final int[] uids, @NonNull final String[] tags)", "public Builder writeKeyValuePairs(@Nullable final SparseIntArray intMap, @Nullable final SparseLongArray longMap, @Nullable final SparseArray<String> stringMap, @Nullable final SparseArray<Float> floatMap)", "public Builder addBooleanAnnotation(final byte annotationId, final boolean value)", "public Builder addIntAnnotation(final byte annotationId, final int value)", "public Builder usePooledBuffer()", "public StatsEvent build()", "private void writeTypeId(final byte typeId)", "private void writeAnnotationCount()", "private static byte[] stringToBytes(@Nullable final String value)" ]
}