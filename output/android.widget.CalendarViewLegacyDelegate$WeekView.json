{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/CalendarViewLegacyDelegate.java",
  "packageName" : "android.widget",
  "className" : "WeekView",
  "comment" : "\n     * <p>\n     * This is a dynamic view for drawing a single week. It can be configured to\n     * display the week number, start the week on a given day, or show a reduced\n     * number of days. It is intended for use as a single view within a\n     * ListView. See {@link WeeksAdapter} for usage.\n     * </p>\n     ",
  "links" : [ "WeeksAdapter" ],
  "variables" : [ {
    "name" : "mTempRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDrawPaint",
    "type" : "Paint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMonthNumDrawPaint",
    "type" : "Paint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDayNumbers",
    "type" : "String[]",
    "comment" : " Cache the number strings so we don't have to recompute them each time",
    "links" : [ ]
  }, {
    "name" : "mFocusDay",
    "type" : "boolean[]",
    "comment" : " Quick lookup for checking which days are in the focus month",
    "links" : [ ]
  }, {
    "name" : "mHasFocusedDay",
    "type" : "boolean",
    "comment" : " Whether this view has a focused day.",
    "links" : [ ]
  }, {
    "name" : "mHasUnfocusedDay",
    "type" : "boolean",
    "comment" : " Whether this view has only focused days.",
    "links" : [ ]
  }, {
    "name" : "mFirstDay",
    "type" : "Calendar",
    "comment" : " The first day displayed by this item",
    "links" : [ ]
  }, {
    "name" : "mMonthOfFirstWeekDay",
    "type" : "int",
    "comment" : " The month of the first day in this week",
    "links" : [ ]
  }, {
    "name" : "mLastWeekDayMonth",
    "type" : "int",
    "comment" : " The month of the last day in this week",
    "links" : [ ]
  }, {
    "name" : "mWeek",
    "type" : "int",
    "comment" : " 1st, 1900",
    "links" : [ ]
  }, {
    "name" : "mWidth",
    "type" : "int",
    "comment" : " Quick reference to the width of this view, matches parent",
    "links" : [ ]
  }, {
    "name" : "mHeight",
    "type" : "int",
    "comment" : " The height this view should draw at in pixels, set by height param",
    "links" : [ ]
  }, {
    "name" : "mHasSelectedDay",
    "type" : "boolean",
    "comment" : " If this view contains the selected day",
    "links" : [ ]
  }, {
    "name" : "mSelectedDay",
    "type" : "int",
    "comment" : " Which day is selected [0-6] or -1 if no day is selected",
    "links" : [ ]
  }, {
    "name" : "mNumCells",
    "type" : "int",
    "comment" : " The number of days + a spot for week number if it is displayed",
    "links" : [ ]
  }, {
    "name" : "mSelectedLeft",
    "type" : "int",
    "comment" : " The left edge of the selected day",
    "links" : [ ]
  }, {
    "name" : "mSelectedRight",
    "type" : "int",
    "comment" : " The right edge of the selected day",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void init(int weekNumber, int selectedWeekDay, int focusedMonth)",
    "returnType" : "void",
    "comment" : "\n         * Initializes this week view.\n         *\n         * @param weekNumber The number of the week this view represents. The\n         *            week number is a zero based index of the weeks since\n         *            {@link android.widget.CalendarView#getMinDate()}.\n         * @param selectedWeekDay The selected day of the week from 0 to 6, -1 if no\n         *            selected day.\n         * @param focusedMonth The month that is currently in focus i.e.\n         *            highlighted.\n         ",
    "links" : [ "android.widget.CalendarView#getMinDate()" ]
  }, {
    "name" : "private void initializePaints()",
    "returnType" : "void",
    "comment" : "\n         * Initialize the paint instances.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMonthOfFirstWeekDay()",
    "returnType" : "int",
    "comment" : "\n         * Returns the month of the first day in this week.\n         *\n         * @return The month the first day of this view is in.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMonthOfLastWeekDay()",
    "returnType" : "int",
    "comment" : "\n         * Returns the month of the last day in this week\n         *\n         * @return The month the last day of this view is in\n         ",
    "links" : [ ]
  }, {
    "name" : "public Calendar getFirstDay()",
    "returnType" : "Calendar",
    "comment" : "\n         * Returns the first day in this view.\n         *\n         * @return The first day in the view.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean getDayFromLocation(float x, Calendar outCalendar)",
    "returnType" : "boolean",
    "comment" : "\n         * Calculates the day that the given x position is in, accounting for\n         * week number.\n         *\n         * @param x The x position of the touch event.\n         * @return True if a day was found for the given location.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean getBoundsForDate(Calendar date, Rect outBounds)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onDraw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void drawBackground(Canvas canvas)",
    "returnType" : "void",
    "comment" : "\n         * This draws the selection highlight if a day is selected in this week.\n         *\n         * @param canvas The canvas to draw on\n         ",
    "links" : [ ]
  }, {
    "name" : "private void drawWeekNumbersAndDates(Canvas canvas)",
    "returnType" : "void",
    "comment" : "\n         * Draws the week and month day numbers for this week.\n         *\n         * @param canvas The canvas to draw on\n         ",
    "links" : [ ]
  }, {
    "name" : "private void drawWeekSeparators(Canvas canvas)",
    "returnType" : "void",
    "comment" : "\n         * Draws a horizontal line for separating the weeks.\n         *\n         * @param canvas The canvas to draw on.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void drawSelectedDateVerticalBars(Canvas canvas)",
    "returnType" : "void",
    "comment" : "\n         * Draws the selected date bars if this week has a selected day.\n         *\n         * @param canvas The canvas to draw on\n         ",
    "links" : [ ]
  }, {
    "name" : "protected void onSizeChanged(int w, int h, int oldw, int oldh)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateSelectionPositions()",
    "returnType" : "void",
    "comment" : "\n         * This calculates the positions for the selected day lines.\n         ",
    "links" : [ ]
  }, {
    "name" : "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void init(int weekNumber, int selectedWeekDay, int focusedMonth)", "private void initializePaints()", "public int getMonthOfFirstWeekDay()", "public int getMonthOfLastWeekDay()", "public Calendar getFirstDay()", "public boolean getDayFromLocation(float x, Calendar outCalendar)", "public boolean getBoundsForDate(Calendar date, Rect outBounds)", "protected void onDraw(Canvas canvas)", "private void drawBackground(Canvas canvas)", "private void drawWeekNumbersAndDates(Canvas canvas)", "private void drawWeekSeparators(Canvas canvas)", "private void drawSelectedDateVerticalBars(Canvas canvas)", "protected void onSizeChanged(int w, int h, int oldw, int oldh)", "private void updateSelectionPositions()", "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)" ],
  "variableNames" : [ "mTempRect", "mDrawPaint", "mMonthNumDrawPaint", "mDayNumbers", "mFocusDay", "mHasFocusedDay", "mHasUnfocusedDay", "mFirstDay", "mMonthOfFirstWeekDay", "mLastWeekDayMonth", "mWeek", "mWidth", "mHeight", "mHasSelectedDay", "mSelectedDay", "mNumCells", "mSelectedLeft", "mSelectedRight" ]
}