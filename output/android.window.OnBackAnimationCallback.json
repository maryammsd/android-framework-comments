{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/OnBackAnimationCallback.java",
  "packageName" : "android.window",
  "className" : "OnBackAnimationCallback",
  "comment" : "\n * Interface for applications to register back animation callbacks along their custom back\n * handling.\n * <p>\n * This allows the client to customize various back behaviors by overriding the corresponding\n * callback methods.\n * <p>\n * Callback instances can be added to and removed from {@link OnBackInvokedDispatcher}, which\n * is held at window level and accessible through {@link Activity#getOnBackInvokedDispatcher()},\n * {@link Dialog#getOnBackInvokedDispatcher()}, {@link Window#getOnBackInvokedDispatcher()}\n * and {@link View#findOnBackInvokedDispatcher()}.\n * <p>\n * When back is triggered, callbacks on the in-focus window are invoked in reverse order in which\n * they are added within the same priority. Between different priorities, callbacks with higher\n * priority are invoked first.\n * <p>\n * @see OnBackInvokedCallback\n ",
  "links" : [ "android.app.Dialog#getOnBackInvokedDispatcher()", "android.window.OnBackInvokedDispatcher", "android.view.View#findOnBackInvokedDispatcher()", "android.view.Window#getOnBackInvokedDispatcher()", "android.app.Activity#getOnBackInvokedDispatcher()" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onBackStarted(@NonNull BackEvent backEvent)",
    "returnType" : "void",
    "comment" : "\n     * Called when a back gesture has been started, or back button has been pressed down.\n     *\n     * @param backEvent The {@link BackEvent} containing information about the touch or\n     *                  button press.\n     * @see BackEvent\n     ",
    "links" : [ "android.window.BackEvent" ]
  }, {
    "name" : " void onBackProgressed(@NonNull BackEvent backEvent)",
    "returnType" : "void",
    "comment" : "\n     * Called when a back gesture progresses.\n     *\n     * @param backEvent An {@link BackEvent} object describing the progress event.\n     *\n     * @see BackEvent\n     ",
    "links" : [ "android.window.BackEvent" ]
  }, {
    "name" : " void onBackCancelled()",
    "returnType" : "void",
    "comment" : "\n     * Called when a back gesture or back button press has been cancelled.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onBackStarted(@NonNull BackEvent backEvent)", " void onBackProgressed(@NonNull BackEvent backEvent)", " void onBackCancelled()" ],
  "variableNames" : [ ]
}