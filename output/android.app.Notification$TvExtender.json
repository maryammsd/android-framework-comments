{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/Notification.java",
  "packageName" : "android.app",
  "className" : "TvExtender",
  "comment" : "\n     * <p>Helper class to add Android TV extensions to notifications. To create a notification\n     * with a TV extension:\n     *\n     * <ol>\n     *  <li>Create an {@link Notification.Builder}, setting any desired properties.\n     *  <li>Create a {@link TvExtender}.\n     *  <li>Set TV-specific properties using the {@code set} methods of\n     *  {@link TvExtender}.\n     *  <li>Call {@link Notification.Builder#extend(Notification.Extender)}\n     *  to apply the extension to a notification.\n     * </ol>\n     *\n     * <pre class=\"prettyprint\">\n     * Notification notification = new Notification.Builder(context)\n     *         ...\n     *         .extend(new TvExtender()\n     *                 .set*(...))\n     *         .build();\n     * </pre>\n     *\n     * <p>TV extensions can be accessed on an existing notification by using the\n     * {@code TvExtender(Notification)} constructor, and then using the {@code get} methods\n     * to access values.\n     ",
  "links" : [ "Notification.Builder", "Notification.Builder#extend(Notification.Extender)", "TvExtender" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_TV_EXTENDER",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_FLAGS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_CONTENT_INTENT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_DELETE_INTENT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_CHANNEL_ID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_SUPPRESS_SHOW_OVER_APPS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FLAG_AVAILABLE_ON_TV",
    "type" : "int",
    "comment" : " Flags bitwise-ored to mFlags",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeleteIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuppressShowOverApps",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Notification.Builder extend(@NonNull Notification.Builder builder)",
    "returnType" : "Notification.Builder",
    "comment" : "\n         * Apply a TV extension to a notification that is being built. This is typically called by\n         * the {@link Notification.Builder#extend(Notification.Extender)}\n         * method of {@link Notification.Builder}.\n         ",
    "links" : [ "Notification.Builder", "Notification.Builder#extend(Notification.Extender)" ]
  }, {
    "name" : "public boolean isAvailableOnTv()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if this notification should be shown on TV. This method returns true\n         * if the notification was extended with a TvExtender.\n         ",
    "links" : [ ]
  }, {
    "name" : "public TvExtender setChannel(String channelId)",
    "returnType" : "TvExtender",
    "comment" : "\n         * Specifies the channel the notification should be delivered on when shown on TV.\n         * It can be different from the channel that the notification is delivered to when\n         * posting on a non-TV device. Prefer to use {@link setChannelId(String)}.\n         *\n         * @hide\n         ",
    "links" : [ "setChannelId(String)" ]
  }, {
    "name" : "public TvExtender setChannelId(@Nullable String channelId)",
    "returnType" : "TvExtender",
    "comment" : "\n         * Specifies the channel the notification should be delivered on when shown on TV.\n         * It can be different from the channel that the notification is delivered to when\n         * posting on a non-TV device.\n         *\n         * @return this object for method chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getChannel()",
    "returnType" : "String",
    "comment" : "\n         * @removed\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getChannelId()",
    "returnType" : "String",
    "comment" : "\n         * Returns the id of the channel this notification posts to on TV.\n         ",
    "links" : [ ]
  }, {
    "name" : "public TvExtender setContentIntent(@Nullable PendingIntent intent)",
    "returnType" : "TvExtender",
    "comment" : "\n         * Supplies a {@link PendingIntent} to be sent when the notification is selected on TV.\n         * If provided, it is used instead of the content intent specified\n         * at the level of Notification.\n         *\n         * @param intent the {@link PendingIntent} for the associated notification content\n         * @return this object for method chaining\n         ",
    "links" : [ "android.app.PendingIntent" ]
  }, {
    "name" : "public PendingIntent getContentIntent()",
    "returnType" : "PendingIntent",
    "comment" : "\n         * Returns the TV-specific content intent.  If this method returns null, the\n         * main content intent on the notification should be used.\n         *\n         * @see Notification#contentIntent\n         ",
    "links" : [ ]
  }, {
    "name" : "public TvExtender setDeleteIntent(@Nullable PendingIntent intent)",
    "returnType" : "TvExtender",
    "comment" : "\n         * Supplies a {@link PendingIntent} to send when the notification is cleared explicitly\n         * by the user on TV.  If provided, it is used instead of the delete intent specified\n         * at the level of Notification.\n         *\n         * @param intent the {@link PendingIntent} for the associated notification deletion\n         * @return this object for method chaining\n         ",
    "links" : [ "android.app.PendingIntent" ]
  }, {
    "name" : "public PendingIntent getDeleteIntent()",
    "returnType" : "PendingIntent",
    "comment" : "\n         * Returns the TV-specific delete intent.  If this method returns null, the\n         * main delete intent on the notification should be used.\n         *\n         * @see Notification#deleteIntent\n         ",
    "links" : [ ]
  }, {
    "name" : "public TvExtender setSuppressShowOverApps(boolean suppress)",
    "returnType" : "TvExtender",
    "comment" : "\n         * Specifies whether this notification should suppress showing a message over top of apps\n         * outside of the launcher.\n         *\n         * @param suppress whether the notification should suppress showing over apps.\n         * @return this object for method chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean getSuppressShowOverApps()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if this notification should not show messages over top of apps\n         * outside of the launcher.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSuppressShowOverApps()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if this notification should not show messages over top of apps\n         * outside of the launcher.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void visitUris(@NonNull Consumer<Uri> visitor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Notification.Builder extend(@NonNull Notification.Builder builder)", "public boolean isAvailableOnTv()", "public TvExtender setChannel(String channelId)", "public TvExtender setChannelId(@Nullable String channelId)", "public String getChannel()", "public String getChannelId()", "public TvExtender setContentIntent(@Nullable PendingIntent intent)", "public PendingIntent getContentIntent()", "public TvExtender setDeleteIntent(@Nullable PendingIntent intent)", "public PendingIntent getDeleteIntent()", "public TvExtender setSuppressShowOverApps(boolean suppress)", "public boolean getSuppressShowOverApps()", "public boolean isSuppressShowOverApps()", "private void visitUris(@NonNull Consumer<Uri> visitor)" ],
  "variableNames" : [ "TAG", "EXTRA_TV_EXTENDER", "EXTRA_FLAGS", "EXTRA_CONTENT_INTENT", "EXTRA_DELETE_INTENT", "EXTRA_CHANNEL_ID", "EXTRA_SUPPRESS_SHOW_OVER_APPS", "FLAG_AVAILABLE_ON_TV", "mFlags", "mChannelId", "mContentIntent", "mDeleteIntent", "mSuppressShowOverApps" ]
}