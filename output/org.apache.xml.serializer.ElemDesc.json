{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/serializer/ElemDesc.java",
  "packageName" : "org.apache.xml.serializer",
  "className" : "ElemDesc",
  "comment" : "\n * This class has a series of flags (bit values) that describe an HTML element\n * <p>\n * This class is not a public API.\n * It is public because it is used outside of this package.\n * \n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_flags",
    "type" : "int",
    "comment" : " Bit flags to tell about this element type. ",
    "links" : [ ]
  }, {
    "name" : "m_attrs",
    "type" : "StringToIntTable",
    "comment" : "\n     * Table of attribute names to integers, which contain bit flags telling about\n     *  the attributes.\n     ",
    "links" : [ ]
  }, {
    "name" : "EMPTY",
    "type" : "int",
    "comment" : " Bit position if this element type is empty. ",
    "links" : [ ]
  }, {
    "name" : "FLOW",
    "type" : "int",
    "comment" : " Bit position if this element type is a flow. ",
    "links" : [ ]
  }, {
    "name" : "BLOCK",
    "type" : "int",
    "comment" : " Bit position if this element type is a block. ",
    "links" : [ ]
  }, {
    "name" : "BLOCKFORM",
    "type" : "int",
    "comment" : " Bit position if this element type is a block form. ",
    "links" : [ ]
  }, {
    "name" : "BLOCKFORMFIELDSET",
    "type" : "int",
    "comment" : " Bit position if this element type is a block form field set. ",
    "links" : [ ]
  }, {
    "name" : "CDATA",
    "type" : "int",
    "comment" : " Bit position if this element type is CDATA. ",
    "links" : [ ]
  }, {
    "name" : "PCDATA",
    "type" : "int",
    "comment" : " Bit position if this element type is PCDATA. ",
    "links" : [ ]
  }, {
    "name" : "RAW",
    "type" : "int",
    "comment" : " Bit position if this element type is should be raw characters. ",
    "links" : [ ]
  }, {
    "name" : "INLINE",
    "type" : "int",
    "comment" : " Bit position if this element type should be inlined. ",
    "links" : [ ]
  }, {
    "name" : "INLINEA",
    "type" : "int",
    "comment" : " Bit position if this element type is INLINEA. ",
    "links" : [ ]
  }, {
    "name" : "INLINELABEL",
    "type" : "int",
    "comment" : " Bit position if this element type is an inline label. ",
    "links" : [ ]
  }, {
    "name" : "FONTSTYLE",
    "type" : "int",
    "comment" : " Bit position if this element type is a font style. ",
    "links" : [ ]
  }, {
    "name" : "PHRASE",
    "type" : "int",
    "comment" : " Bit position if this element type is a phrase. ",
    "links" : [ ]
  }, {
    "name" : "FORMCTRL",
    "type" : "int",
    "comment" : " Bit position if this element type is a form control. ",
    "links" : [ ]
  }, {
    "name" : "SPECIAL",
    "type" : "int",
    "comment" : " Bit position if this element type is ???. ",
    "links" : [ ]
  }, {
    "name" : "ASPECIAL",
    "type" : "int",
    "comment" : " Bit position if this element type is ???. ",
    "links" : [ ]
  }, {
    "name" : "HEADMISC",
    "type" : "int",
    "comment" : " Bit position if this element type is an odd header element. ",
    "links" : [ ]
  }, {
    "name" : "HEAD",
    "type" : "int",
    "comment" : " Bit position if this element type is a head element (i.e. H1, H2, etc.) ",
    "links" : [ ]
  }, {
    "name" : "LIST",
    "type" : "int",
    "comment" : " Bit position if this element type is a list. ",
    "links" : [ ]
  }, {
    "name" : "PREFORMATTED",
    "type" : "int",
    "comment" : " Bit position if this element type is a preformatted type. ",
    "links" : [ ]
  }, {
    "name" : "WHITESPACESENSITIVE",
    "type" : "int",
    "comment" : " Bit position if this element type is whitespace sensitive. ",
    "links" : [ ]
  }, {
    "name" : "HEADELEM",
    "type" : "int",
    "comment" : " Bit position if this element type is a header element (i.e. HEAD). ",
    "links" : [ ]
  }, {
    "name" : "HTMLELEM",
    "type" : "int",
    "comment" : " Bit position if this element is the \"HTML\" element ",
    "links" : [ ]
  }, {
    "name" : "ATTRURL",
    "type" : "int",
    "comment" : " Bit position if this attribute type is a URL. ",
    "links" : [ ]
  }, {
    "name" : "ATTREMPTY",
    "type" : "int",
    "comment" : " Bit position if this attribute type is an empty type. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private boolean is(int flags)",
    "returnType" : "boolean",
    "comment" : "\n     * Tell if this element type has the basic bit properties that are passed\n     * as an argument.\n     *\n     * @param flags Bit flags that describe the basic properties of interest.\n     *\n     * @return true if any of the flag bits are true.\n     ",
    "links" : [ ]
  }, {
    "name" : " int getFlags()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setAttr(String name, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Set an attribute name and it's bit properties.\n     *\n     *\n     * @param name non-null name of attribute, in upper case.\n     * @param flags flag bits.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAttrFlagSet(String name, int flags)",
    "returnType" : "boolean",
    "comment" : "\n     * Tell if any of the bits of interest are set for a named attribute type.\n     *\n     * @param name non-null reference to attribute name, in any case.\n     * @param flags flag mask.\n     *\n     * @return true if any of the flags are set for the named attribute.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private boolean is(int flags)", " int getFlags()", " void setAttr(String name, int flags)", "public boolean isAttrFlagSet(String name, int flags)" ],
  "variableNames" : [ "m_flags", "m_attrs", "EMPTY", "FLOW", "BLOCK", "BLOCKFORM", "BLOCKFORMFIELDSET", "CDATA", "PCDATA", "RAW", "INLINE", "INLINEA", "INLINELABEL", "FONTSTYLE", "PHRASE", "FORMCTRL", "SPECIAL", "ASPECIAL", "HEADMISC", "HEAD", "LIST", "PREFORMATTED", "WHITESPACESENSITIVE", "HEADELEM", "HTMLELEM", "ATTRURL", "ATTREMPTY" ]
}