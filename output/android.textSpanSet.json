{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/text/SpanSet.java",
  "packageName" : "android.text",
  "className" : "SpanSet",
  "comment" : "\n * A cached set of spans. Caches the result of {@link Spanned#getSpans(int, int, Class)} and then\n * provides faster access to {@link Spanned#nextSpanTransition(int, int, Class)}.\n *\n * Fields are left public for a convenient direct access.\n *\n * Note that empty spans are ignored by this class.\n * @hide\n ",
  "variables" : [ {
    "name" : "classType",
    "type" : "Class<? extends E>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "numberOfSpans",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "spans",
    "type" : "E[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "spanStarts",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "spanEnds",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "spanFlags",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void init(Spanned spanned, int start, int limit)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasSpansIntersecting(int start, int end)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if there are spans intersecting the given interval.\n     * @param end must be strictly greater than start\n     ",
    "links" : [ ]
  }, {
    "name" : " int getNextTransition(int start, int limit)",
    "returnType" : "int",
    "comment" : "\n     * Similar to {@link Spanned#nextSpanTransition(int, int, Class)}\n     ",
    "links" : [ "Spanned#nextSpanTransition" ]
  }, {
    "name" : "public void recycle()",
    "returnType" : "void",
    "comment" : "\n     * Removes all internal references to the spans to avoid memory leaks.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "classType", "numberOfSpans", "spans", "spanStarts", "spanEnds", "spanFlags" ],
  "methodNames" : [ "public void init(Spanned spanned, int start, int limit)", "public boolean hasSpansIntersecting(int start, int end)", " int getNextTransition(int start, int limit)", "public void recycle()" ]
}