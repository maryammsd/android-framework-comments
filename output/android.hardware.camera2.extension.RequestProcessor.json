{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/extension/RequestProcessor.java",
  "packageName" : "android.hardware.camera2.extension",
  "className" : "RequestProcessor",
  "comment" : "\n * An Interface to execute Camera2 capture requests.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestProcessor",
    "type" : "IRequestProcessorImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVendorId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int submit(@NonNull Request request, @NonNull Executor executor, @NonNull RequestCallback callback) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "\n     * Submit a capture request.\n     * @param request  Capture request to queued in the Camera2 session\n     * @param executor the executor which will be used for\n     *                 invoking the callbacks\n     * @param callback Request callback implementation\n     * @return the id of the capture sequence\n     ",
    "links" : [ ]
  }, {
    "name" : "public int submitBurst(@NonNull List<Request> requests, @NonNull Executor executor, @NonNull RequestCallback callback) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "\n     * Submits a list of requests.\n     * @param requests List of capture requests to be queued in the\n     *                 Camera2 session\n     * @param executor the executor which will be used for\n     *                 invoking the callbacks\n     * @param callback Request callback implementation\n     * @return the id of the capture sequence\n     ",
    "links" : [ ]
  }, {
    "name" : "public int setRepeating(@NonNull Request request, @NonNull Executor executor, @NonNull RequestCallback callback) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "\n     * Set a repeating request.\n     * @param request  Repeating capture request to be se in the\n     *                 Camera2 session\n     * @param executor the executor which will be used for\n     *                 invoking the callbacks\n     * @param callback Request callback implementation\n     * @return the id of the capture sequence\n     ",
    "links" : [ ]
  }, {
    "name" : "public void abortCaptures()",
    "returnType" : "void",
    "comment" : "\n     * Abort all ongoing capture requests.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void stopRepeating()",
    "returnType" : "void",
    "comment" : "\n     * Stop the current repeating request.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int submit(@NonNull Request request, @NonNull Executor executor, @NonNull RequestCallback callback) throws CameraAccessException", "public int submitBurst(@NonNull List<Request> requests, @NonNull Executor executor, @NonNull RequestCallback callback) throws CameraAccessException", "public int setRepeating(@NonNull Request request, @NonNull Executor executor, @NonNull RequestCallback callback) throws CameraAccessException", "public void abortCaptures()", "public void stopRepeating()" ],
  "variableNames" : [ "TAG", "mRequestProcessor", "mVendorId" ]
}