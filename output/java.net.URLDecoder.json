{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/net/URLDecoder.java",
  "packageName" : "java.net",
  "className" : "URLDecoder",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "dfltEncName",
    "type" : "String",
    "comment" : " The platform default encoding",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static String decode(String s)",
    "returnType" : "String",
    "comment" : "\n     * Decodes a {@code x-www-form-urlencoded} string.\n     * The platform's default encoding is used to determine what characters\n     * are represented by any consecutive sequences of the form\n     * \"<i>{@code %xy}</i>\".\n     * @param s the {@code String} to decode\n     * @deprecated The resulting string may vary depending on the platform's\n     *          default encoding. Instead, use the decode(String,String) method\n     *          to specify the encoding.\n     * @return the newly decoded {@code String}\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String decode(String s, String enc) throws UnsupportedEncodingException",
    "returnType" : "String",
    "comment" : "\n     * Decodes an {@code application/x-www-form-urlencoded} string using\n     * a specific encoding scheme.\n     *\n     * <p>\n     * This method behaves the same as {@linkplain String decode(String s, Charset charset)}\n     * except that it will {@linkplain java.nio.charset.Charset#forName look up the charset}\n     * using the given encoding name.\n     *\n     * @implNote This implementation will throw an {@link java.lang.IllegalArgumentException}\n     * when illegal strings are encountered.\n     *\n     * @param s the {@code String} to decode\n     * @param enc   The name of a supported\n     *    <a href=\"../lang/package-summary.html#charenc\">character\n     *    encoding</a>.\n     * @return the newly decoded {@code String}\n     * @throws UnsupportedEncodingException\n     *             If character encoding needs to be consulted, but\n     *             named character encoding is not supported\n     * @see URLEncoder#encode(java.lang.String, java.lang.String)\n     * @since 1.4\n     ",
    "links" : [ "java.lang.IllegalArgumentException" ]
  }, {
    "name" : "public static String decode(String s, Charset charset)",
    "returnType" : "String",
    "comment" : "\n     * Decodes an {@code application/x-www-form-urlencoded} string using\n     * a specific {@linkplain java.nio.charset.Charset Charset}.\n     * The supplied charset is used to determine\n     * what characters are represented by any consecutive sequences of the\n     * form \"<i>{@code %xy}</i>\".\n     * <p>\n     * <em><strong>Note:</strong> The <a href=\n     * \"http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars\">\n     * World Wide Web Consortium Recommendation</a> states that\n     * UTF-8 should be used. Not doing so may introduce\n     * incompatibilities.</em>\n     *\n     * @implNote This implementation will throw an {@link java.lang.IllegalArgumentException}\n     * when illegal strings are encountered.\n     *\n     * @param s the {@code String} to decode\n     * @param charset the given charset\n     * @return the newly decoded {@code String}\n     * @throws NullPointerException if {@code s} or {@code charset} is {@code null}\n     * @throws IllegalArgumentException if the implementation encounters illegal\n     * characters\n     * @see URLEncoder#encode(java.lang.String, java.nio.charset.Charset)\n     * @since 10\n     ",
    "links" : [ "java.lang.IllegalArgumentException" ]
  }, {
    "name" : "private static boolean isValidHexChar(char c)",
    "returnType" : "boolean",
    "comment" : " BEGIN Android-added: App compat. Forbid non-hex chars after '%'.",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static String decode(String s)", "public static String decode(String s, String enc) throws UnsupportedEncodingException", "public static String decode(String s, Charset charset)", "private static boolean isValidHexChar(char c)" ],
  "variableNames" : [ "dfltEncName" ]
}