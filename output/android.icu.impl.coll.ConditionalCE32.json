{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/coll/CollationDataBuilder.java",
  "packageName" : "android.icu.impl.coll",
  "className" : "ConditionalCE32",
  "comment" : "\n     * Build-time context and CE32 for a code point.\n     * If a code point has contextual mappings, then the default (no-context) mapping\n     * and all conditional mappings are stored in a singly-linked list\n     * of ConditionalCE32, sorted by context strings.\n     *\n     * Context strings sort by prefix length, then by prefix, then by contraction suffix.\n     * Context strings must be unique and in ascending order.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "context",
    "type" : "String",
    "comment" : "\n         * \"\\0\" for the first entry for any code point, with its default CE32.\n         *\n         * Otherwise one unit with the length of the prefix string,\n         * then the prefix string, then the contraction suffix.\n         ",
    "links" : [ ]
  }, {
    "name" : "ce32",
    "type" : "int",
    "comment" : "\n         * CE32 for the code point and its context.\n         * Can be special (e.g., for an expansion) but not contextual (prefix or contraction tag).\n         ",
    "links" : [ ]
  }, {
    "name" : "defaultCE32",
    "type" : "int",
    "comment" : "\n         * Default CE32 for all contexts with this same prefix.\n         * Initially NO_CE32. Set only while building runtime data structures,\n         * and only on one of the nodes of a sub-list with the same prefix.\n         ",
    "links" : [ ]
  }, {
    "name" : "builtCE32",
    "type" : "int",
    "comment" : "\n         * CE32 for the built contexts.\n         * When fetching CEs from the builder, the contexts are built into their runtime form\n         * so that the normal collation implementation can process them.\n         * The result is cached in the list head. It is reset when the contexts are modified.\n         * All of these builtCE32 are invalidated by clearContexts(),\n         * via incrementing the contextsEra.\n         ",
    "links" : [ ]
  }, {
    "name" : "era",
    "type" : "int",
    "comment" : "\n         * The \"era\" of building intermediate contexts when the above builtCE32 was set.\n         * When the array of cached, temporary contexts overflows, then clearContexts()\n         * removes them all and invalidates the builtCE32 that used to point to built tries.\n         ",
    "links" : [ ]
  }, {
    "name" : "next",
    "type" : "int",
    "comment" : "\n         * Index of the next ConditionalCE32.\n         * Negative for the end of the list.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " boolean hasContext()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int prefixLength()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " boolean hasContext()", " int prefixLength()" ],
  "variableNames" : [ "context", "ce32", "defaultCE32", "builtCE32", "era", "next" ]
}