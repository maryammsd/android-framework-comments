{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/LinkedTransferQueue.java",
  "packageName" : "java.util.concurrent",
  "className" : "Itr",
  "comment" : "\n     * Weakly-consistent iterator.\n     *\n     * Lazily updated ancestor is expected to be amortized O(1) remove(),\n     * but O(n) in the worst case, when lastRet is concurrently deleted.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "nextNode",
    "type" : "Node",
    "comment" : " next node to return item for",
    "links" : [ ]
  }, {
    "name" : "nextItem",
    "type" : "E",
    "comment" : " the corresponding item",
    "links" : [ ]
  }, {
    "name" : "lastRet",
    "type" : "Node",
    "comment" : " last returned node, to support remove",
    "links" : [ ]
  }, {
    "name" : "ancestor",
    "type" : "Node",
    "comment" : " Helps unlink lastRet on remove()",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void advance(Node pred)",
    "returnType" : "void",
    "comment" : "\n         * Moves to next node after pred, or first node if pred null.\n         ",
    "links" : [ ]
  }, {
    "name" : "public final boolean hasNext()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final E next()",
    "returnType" : "E",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forEachRemaining(Consumer<? super E> action)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void remove()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void advance(Node pred)", "public final boolean hasNext()", "public final E next()", "public void forEachRemaining(Consumer<? super E> action)", "public final void remove()" ],
  "variableNames" : [ "nextNode", "nextItem", "lastRet", "ancestor" ]
}