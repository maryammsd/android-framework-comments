{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/credentials/selection/GetCredentialProviderInfo.java",
  "packageName" : "android.credentials.selection",
  "className" : "GetCredentialProviderInfo",
  "comment" : "\n * Information pertaining to a specific provider during the given\n * {@link android.credentials.CredentialManager#getCredential(Context, GetCredentialRequest,\n * CancellationSignal, Executor, OutcomeReceiver)} or\n * {@link android.credentials.CredentialManager#getCredential(Context,\n * PrepareGetCredentialResponse.PendingGetCredentialHandle, CancellationSignal, Executor,\n * OutcomeReceiver)} flow.\n *\n * This includes provider metadata and its credential creation options for display purposes.\n *\n * The selection UI should render all options (from\n * {@link GetCredentialProviderInfo#getRemoteEntry()},\n * {@link GetCredentialProviderInfo#getCredentialEntries()}, and\n * {@link GetCredentialProviderInfo#getActionChips()}) offered by this provider while clearly\n * associated them with the given provider using the provider icon, label, etc. derived from\n * {@link GetCredentialProviderInfo#getProviderName()}.\n *\n * @hide\n ",
  "links" : [ "android.credentials.CredentialManager#getCredential(Context", "android.credentials.selection.GetCredentialProviderInfo#getProviderName()", "android.credentials.selection.GetCredentialProviderInfo#getActionChips()", "android.credentials.selection.GetCredentialProviderInfo#getRemoteEntry()", "android.credentials.selection.GetCredentialProviderInfo#getCredentialEntries()" ],
  "variables" : [ {
    "name" : "mProviderName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCredentialEntries",
    "type" : "List<Entry>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActionChips",
    "type" : "List<Entry>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAuthenticationEntries",
    "type" : "List<AuthenticationEntry>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRemoteEntry",
    "type" : "Entry",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getProviderName()",
    "returnType" : "String",
    "comment" : " Returns the fully-qualified provider (component or package) name. ",
    "links" : [ ]
  }, {
    "name" : "public List<Entry> getCredentialEntries()",
    "returnType" : "List<Entry>",
    "comment" : " Returns the display information for all the candidate credentials this provider has. ",
    "links" : [ ]
  }, {
    "name" : "public List<Entry> getActionChips()",
    "returnType" : "List<Entry>",
    "comment" : "\n     * Returns a list of actions defined by the provider that intent into the provider's app for\n     * specific user actions, each of which should eventually lead to an actual credential.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<AuthenticationEntry> getAuthenticationEntries()",
    "returnType" : "List<AuthenticationEntry>",
    "comment" : "\n     * Returns a list of authentication actions that each intents into a provider authentication\n     * activity.\n     *\n     * When the authentication activity succeeds, the provider will return a list of actual\n     * credential candidates to render. However, the UI should not attempt to parse the result\n     * itself, but rather send the result back to the system service, which will then process the\n     * new candidates and relaunch the UI with updated display data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Entry getRemoteEntry()",
    "returnType" : "Entry",
    "comment" : "\n     * Returns the remote credential retrieval option, if any.\n     *\n     * Notice that only one system configured provider can set this option, and when set to\n     * non-null, it means that the system service has already validated the provider's eligibility.\n     * A null value means no remote entry should be displayed for this provider.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getProviderName()", "public List<Entry> getCredentialEntries()", "public List<Entry> getActionChips()", "public List<AuthenticationEntry> getAuthenticationEntries()", "public Entry getRemoteEntry()" ],
  "variableNames" : [ "mProviderName", "mCredentialEntries", "mActionChips", "mAuthenticationEntries", "mRemoteEntry" ]
}