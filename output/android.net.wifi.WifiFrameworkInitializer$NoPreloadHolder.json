{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/WifiFrameworkInitializer.java",
  "packageName" : "android.net.wifi",
  "className" : "NoPreloadHolder",
  "comment" : "\n     * A class implementing the lazy holder idiom: the unique static instance\n     * of {@link #INSTANCE} is instantiated in a thread-safe way (guaranteed by\n     * the language specs) the first time that NoPreloadHolder is referenced in getInstanceLooper().\n     *\n     * This is necessary because we can't spawn a new thread in {@link #registerServiceWrappers()}.\n     * {@link #registerServiceWrappers()} is called during the Zygote phase, which disallows\n     * spawning new threads. Naming the class \"NoPreloadHolder\" ensures that the classloader will\n     * not preload this class, inadvertently spawning the thread too early.\n     ",
  "links" : [ "#registerServiceWrappers()", "#INSTANCE" ],
  "variables" : [ {
    "name" : "INSTANCE",
    "type" : "HandlerThread",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static HandlerThread createInstance()",
    "returnType" : "HandlerThread",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static HandlerThread createInstance()" ],
  "variableNames" : [ "INSTANCE" ]
}