{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/credentials/CredentialOption.java",
  "packageName" : "android.credentials",
  "className" : "Builder",
  "comment" : " A builder for {@link CredentialOption}. ",
  "links" : [ "android.credentials.CredentialOption" ],
  "variables" : [ {
    "name" : "mType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCredentialRetrievalData",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCandidateQueryData",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSystemProviderRequired",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowedProviders",
    "type" : "ArraySet<ComponentName>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setIsSystemProviderRequired(boolean isSystemProviderRequired)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a true/false value corresponding to whether this option must be serviced by\n         * system credentials providers only.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addAllowedProvider(@NonNull ComponentName allowedProvider)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a provider {@link ComponentName} to be queried while gathering credentials from\n         * credential providers on the device.\n         *\n         * If no candidate providers are specified, all user configured and system credential\n         * providers will be queried in the candidate query phase.\n         *\n         * If an invalid component name is provided, or a service corresponding to the\n         * component name does not exist on the device, that component name is ignored.\n         * If all component names are invalid, or not present on the device, no providers\n         * are queried and no credentials are retrieved.\n         *\n         * @throws NullPointerException If {@code allowedProvider} is null\n         ",
    "links" : [ "android.content.ComponentName" ]
  }, {
    "name" : "public Builder setAllowedProviders(@NonNull Set<ComponentName> allowedProviders)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a set of provider {@link ComponentName} to be queried while gathering credentials\n         * from credential providers on the device.\n         *\n         * If no candidate providers are specified, all user configured and system credential\n         * providers will be queried in the candidate query phase.\n         *\n         * If an invalid component name is provided, or a service corresponding to the\n         * component name does not exist on the device, that component name is ignored.\n         * If all component names are invalid, or not present on the device, no providers\n         * are queried and no credentials are retrieved.\n         *\n         * @throws NullPointerException If {@code allowedProviders} is null, or any of its\n         * elements are null.\n         ",
    "links" : [ "android.content.ComponentName" ]
  }, {
    "name" : "public CredentialOption build()",
    "returnType" : "CredentialOption",
    "comment" : "\n         * Builds a {@link CredentialOption}.\n         ",
    "links" : [ "android.credentials.CredentialOption" ]
  } ],
  "methodNames" : [ "public Builder setIsSystemProviderRequired(boolean isSystemProviderRequired)", "public Builder addAllowedProvider(@NonNull ComponentName allowedProvider)", "public Builder setAllowedProviders(@NonNull Set<ComponentName> allowedProviders)", "public CredentialOption build()" ],
  "variableNames" : [ "mType", "mCredentialRetrievalData", "mCandidateQueryData", "mIsSystemProviderRequired", "mAllowedProviders" ]
}