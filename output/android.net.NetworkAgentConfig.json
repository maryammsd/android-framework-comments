{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/NetworkAgentConfig.java",
  "packageName" : "android.net",
  "className" : "NetworkAgentConfig",
  "comment" : "\n * Allows a network transport to provide the system with policy and configuration information about\n * a particular network when registering a {@link NetworkAgent}. This information cannot change once the agent is registered.\n *\n * @hide\n ",
  "links" : [ "android.net.NetworkAgent" ],
  "variables" : [ {
    "name" : "allowBypass",
    "type" : "boolean",
    "comment" : "\n     * If the {@link Network} is a VPN, whether apps are allowed to bypass the\n     * VPN. This is set by a {@link VpnService} and used by\n     * {@link ConnectivityManager} when creating a VPN.\n     *\n     * @hide\n     ",
    "links" : [ "android.net.ConnectivityManager", "android.net.VpnService", "android.net.Network" ]
  }, {
    "name" : "explicitlySelected",
    "type" : "boolean",
    "comment" : "\n     * Set if the network was manually/explicitly connected to by the user either from settings\n     * or a 3rd party app.  For example, turning on cell data is not explicit but tapping on a wifi\n     * ap in the wifi settings to trigger a connection is explicit.  A 3rd party app asking to\n     * connect to a particular access point is also explicit, though this may change in the future\n     * as we want apps to use the multinetwork apis.\n     * TODO : this is a bad name, because it sounds like the user just tapped on the network.\n     * It's not necessarily the case ; auto-reconnection to WiFi has this true for example.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "acceptUnvalidated",
    "type" : "boolean",
    "comment" : "\n     * Set if the user desires to use this network even if it is unvalidated. This field has meaning\n     * only if {@link explicitlySelected} is true. If it is, this field must also be set to the\n     * appropriate value based on previous user choice.\n     *\n     * TODO : rename this field to match its accessor\n     * @hide\n     ",
    "links" : [ "explicitlySelected" ]
  }, {
    "name" : "acceptPartialConnectivity",
    "type" : "boolean",
    "comment" : "\n     * Whether the user explicitly set that this network should be validated even if presence of\n     * only partial internet connectivity.\n     *\n     * TODO : rename this field to match its accessor\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "provisioningNotificationDisabled",
    "type" : "boolean",
    "comment" : "\n     * Set to avoid surfacing the \"Sign in to network\" notification.\n     * if carrier receivers/apps are registered to handle the carrier-specific provisioning\n     * procedure, a carrier specific provisioning notification will be placed.\n     * only one notification should be displayed. This field is set based on\n     * which notification should be used for provisioning.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "subscriberId",
    "type" : "String",
    "comment" : "\n     * For mobile networks, this is the subscriber ID (such as IMSI).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "skip464xlat",
    "type" : "boolean",
    "comment" : "\n     * Set to skip 464xlat. This means the device will treat the network as IPv6-only and\n     * will not attempt to detect a NAT64 via RFC 7050 DNS lookups.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "legacyType",
    "type" : "int",
    "comment" : "\n     * The legacy type of this network agent, or TYPE_NONE if unset.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "legacySubType",
    "type" : "int",
    "comment" : "\n     * The legacy Sub type of this network agent, or TYPE_NONE if unset.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "hasShownBroken",
    "type" : "boolean",
    "comment" : "\n     * Set to true if the PRIVATE_DNS_BROKEN notification has shown for this network.\n     * Reset this bit when private DNS mode is changed from strict mode to opportunistic/off mode.\n     *\n     * This is not parceled, because it would not make sense. It's also ignored by the\n     * equals() and hashcode() methods.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "legacyTypeName",
    "type" : "String",
    "comment" : "\n     * The name of the legacy network type. It's a free-form string used in logging.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "legacySubTypeName",
    "type" : "String",
    "comment" : "\n     * The name of the legacy Sub network type. It's a free-form string.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mLegacyExtraInfo",
    "type" : "String",
    "comment" : "\n     * The legacy extra info of the agent. The extra info should only be :\n     * <ul>\n     *   <li>For cellular agents, the APN name.</li>\n     *   <li>For ethernet agents, the interface name.</li>\n     * </ul>\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "excludeLocalRouteVpn",
    "type" : "boolean",
    "comment" : "\n     * If the {@link Network} is a VPN, whether the local traffic is exempted from the VPN.\n     * @hide\n     ",
    "links" : [ "android.net.Network" ]
  }, {
    "name" : "mVpnRequiresValidation",
    "type" : "boolean",
    "comment" : "\n     * Whether network validation should be performed for this VPN network.\n     * @see #isVpnValidationRequired\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<NetworkAgentConfig>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isExplicitlySelected()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether this network was explicitly selected by the user.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBypassableVpn()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether this VPN connection can be bypassed by the apps.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isUnvalidatedConnectivityAcceptable()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether the system should accept this network even if it doesn't validate.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isPartialConnectivityAcceptable()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether the system should validate this network even if it only offers partial\n     *     Internet connectivity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isProvisioningNotificationEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     *\n     * @return whether the sign in to network notification is enabled by this configuration.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSubscriberId()",
    "returnType" : "String",
    "comment" : "\n     * @return the subscriber ID, or null if none.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isNat64DetectionEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether NAT64 prefix detection is enabled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLegacyType()",
    "returnType" : "int",
    "comment" : "\n     * @return the legacy type\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getLegacyTypeName()",
    "returnType" : "String",
    "comment" : "\n     * @return the name of the legacy network type. It's a free-form string used in logging.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getLegacyExtraInfo()",
    "returnType" : "String",
    "comment" : "\n     * The legacy extra info of the agent.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean areLocalRoutesExcludedForVpn()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether local traffic is excluded from the VPN network.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isVpnValidationRequired()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether network validation should be performed for this VPN network.\n     *\n     * If this network isn't a VPN this should always be {@code false}, and will be ignored\n     * if set.\n     * If this network is a VPN, false means this network should always be considered validated;\n     * true means it follows the same validation semantics as general internet networks.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(final Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isExplicitlySelected()", "public boolean isBypassableVpn()", "public boolean isUnvalidatedConnectivityAcceptable()", "public boolean isPartialConnectivityAcceptable()", "public boolean isProvisioningNotificationEnabled()", "public String getSubscriberId()", "public boolean isNat64DetectionEnabled()", "public int getLegacyType()", "public String getLegacyTypeName()", "public String getLegacyExtraInfo()", "public boolean areLocalRoutesExcludedForVpn()", "public boolean isVpnValidationRequired()", "public boolean equals(final Object o)", "public int hashCode()", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)" ],
  "variableNames" : [ "allowBypass", "explicitlySelected", "acceptUnvalidated", "acceptPartialConnectivity", "provisioningNotificationDisabled", "subscriberId", "skip464xlat", "legacyType", "legacySubType", "hasShownBroken", "legacyTypeName", "legacySubTypeName", "mLegacyExtraInfo", "excludeLocalRouteVpn", "mVpnRequiresValidation", "CREATOR" ]
}