{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/inputmethodservice/navigationbar/NavigationBarView.java",
  "packageName" : "android.inputmethodservice.navigationbar",
  "className" : "NavigationBarView",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FAST_OUT_SLOW_IN",
    "type" : "Interpolator",
    "comment" : " Copied from com.android.systemui.animation.Interpolators#FAST_OUT_SLOW_IN",
    "links" : [ ]
  }, {
    "name" : "mCurrentView",
    "type" : "View",
    "comment" : " The current view is always mHorizontal.",
    "links" : [ ]
  }, {
    "name" : "mHorizontal",
    "type" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentRotation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisabledFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNavigationIconHints",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNavBarMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBackIcon",
    "type" : "KeyButtonDrawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImeSwitcherIcon",
    "type" : "KeyButtonDrawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLightContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLightIconColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDarkIconColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeadZone",
    "type" : "android.inputmethodservice.navigationbar.DeadZone",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeadZoneConsuming",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mButtonDispatchers",
    "type" : "SparseArray<ButtonDispatcher>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfiguration",
    "type" : "Configuration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmpLastConfiguration",
    "type" : "Configuration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNavigationInflaterView",
    "type" : "NavigationBarInflaterView",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean onInterceptTouchEvent(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTouchEvent(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean shouldDeadZoneConsumeTouchEvents(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View getCurrentView()",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forEachView(Consumer<View> consumer)",
    "returnType" : "void",
    "comment" : "\n     * Applies {@code consumer} to each of the nav bar views.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ButtonDispatcher getBackButton()",
    "returnType" : "ButtonDispatcher",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ButtonDispatcher getImeSwitchButton()",
    "returnType" : "ButtonDispatcher",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ButtonDispatcher getHomeHandle()",
    "returnType" : "ButtonDispatcher",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SparseArray<ButtonDispatcher> getButtonDispatchers()",
    "returnType" : "SparseArray<ButtonDispatcher>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void reloadNavIcons()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateIcons(Configuration oldConfig)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private KeyButtonDrawable getBackDrawable()",
    "returnType" : "KeyButtonDrawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean isGesturalMode(int mode)",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether this nav bar mode is edge to edge\n     ",
    "links" : [ ]
  }, {
    "name" : "private void orientBackButton(KeyButtonDrawable drawable)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private KeyButtonDrawable getDrawable(@DrawableRes int icon)",
    "returnType" : "KeyButtonDrawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setLayoutDirection(int layoutDirection)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setNavigationIconHints(int hints)",
    "returnType" : "void",
    "comment" : "\n     * Updates the navigation icons based on {@code hints}.\n     *\n     * @param hints bit flags defined in {@link StatusBarManager}.\n     ",
    "links" : [ "android.app.StatusBarManager" ]
  }, {
    "name" : "private void updateNavButtonIcons()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Display getContextDisplay()",
    "returnType" : "Display",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onFinishInflate()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onDraw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateOrientationViews()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateCurrentView()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void resetViews()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void reorient()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onConfigurationChanged(Configuration newConfig)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onAttachedToWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onDetachedFromWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDarkIntensity(@FloatRange(from = 0.0f, to = 1.0f) float intensity)",
    "returnType" : "void",
    "comment" : "\n     * Updates the dark intensity.\n     *\n     * @param intensity The intensity of darkness from {@code 0.0f} to {@code 1.0f}.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean onInterceptTouchEvent(MotionEvent event)", "public boolean onTouchEvent(MotionEvent event)", "private boolean shouldDeadZoneConsumeTouchEvents(MotionEvent event)", "public View getCurrentView()", "public void forEachView(Consumer<View> consumer)", "public ButtonDispatcher getBackButton()", "public ButtonDispatcher getImeSwitchButton()", "public ButtonDispatcher getHomeHandle()", "public SparseArray<ButtonDispatcher> getButtonDispatchers()", "private void reloadNavIcons()", "private void updateIcons(Configuration oldConfig)", "private KeyButtonDrawable getBackDrawable()", "public static boolean isGesturalMode(int mode)", "private void orientBackButton(KeyButtonDrawable drawable)", "private KeyButtonDrawable getDrawable(@DrawableRes int icon)", "public void setLayoutDirection(int layoutDirection)", "public void setNavigationIconHints(int hints)", "private void updateNavButtonIcons()", "private Display getContextDisplay()", "public void onFinishInflate()", "protected void onDraw(Canvas canvas)", "private void updateOrientationViews()", "private void updateCurrentView()", "private void resetViews()", "private void reorient()", "protected void onConfigurationChanged(Configuration newConfig)", "protected void onAttachedToWindow()", "protected void onDetachedFromWindow()", "public void setDarkIntensity(@FloatRange(from = 0.0f, to = 1.0f) float intensity)" ],
  "variableNames" : [ "DEBUG", "TAG", "FAST_OUT_SLOW_IN", "mCurrentView", "mHorizontal", "mCurrentRotation", "mDisabledFlags", "mNavigationIconHints", "mNavBarMode", "mBackIcon", "mImeSwitcherIcon", "mLightContext", "mLightIconColor", "mDarkIconColor", "mDeadZone", "mDeadZoneConsuming", "mButtonDispatchers", "mConfiguration", "mTmpLastConfiguration", "mNavigationInflaterView" ]
}