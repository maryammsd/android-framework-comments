{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/time/format/DateTimePrintContext.java",
  "packageName" : "java.time.format",
  "className" : "DateTimePrintContext",
  "comment" : "\n * Context object used during date and time printing.\n * <p>\n * This class provides a single wrapper to items used in the format.\n *\n * @implSpec\n * This class is a mutable context intended for use from a single thread.\n * Usage of the class is thread-safe within standard printing as the framework creates\n * a new instance of the class for each format and printing is single-threaded.\n *\n * @since 1.8\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "temporal",
    "type" : "TemporalAccessor",
    "comment" : "\n     * The temporal being output.\n     ",
    "links" : [ ]
  }, {
    "name" : "formatter",
    "type" : "DateTimeFormatter",
    "comment" : "\n     * The formatter, not null.\n     ",
    "links" : [ ]
  }, {
    "name" : "optional",
    "type" : "int",
    "comment" : "\n     * Whether the current formatter is optional.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static TemporalAccessor adjust(final TemporalAccessor temporal, DateTimeFormatter formatter)",
    "returnType" : "TemporalAccessor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " TemporalAccessor getTemporal()",
    "returnType" : "TemporalAccessor",
    "comment" : "\n     * Gets the temporal object being output.\n     *\n     * @return the temporal object, not null\n     ",
    "links" : [ ]
  }, {
    "name" : " Locale getLocale()",
    "returnType" : "Locale",
    "comment" : "\n     * Gets the locale.\n     * <p>\n     * This locale is used to control localization in the format output except\n     * where localization is controlled by the DecimalStyle.\n     *\n     * @return the locale, not null\n     ",
    "links" : [ ]
  }, {
    "name" : " DecimalStyle getDecimalStyle()",
    "returnType" : "DecimalStyle",
    "comment" : "\n     * Gets the DecimalStyle.\n     * <p>\n     * The DecimalStyle controls the localization of numeric output.\n     *\n     * @return the DecimalStyle, not null\n     ",
    "links" : [ ]
  }, {
    "name" : " void startOptional()",
    "returnType" : "void",
    "comment" : "\n     * Starts the printing of an optional segment of the input.\n     ",
    "links" : [ ]
  }, {
    "name" : " void endOptional()",
    "returnType" : "void",
    "comment" : "\n     * Ends the printing of an optional segment of the input.\n     ",
    "links" : [ ]
  }, {
    "name" : " R getValue(TemporalQuery<R> query)",
    "returnType" : "R",
    "comment" : "\n     * Gets a value using a query.\n     *\n     * @param query  the query to use, not null\n     * @return the result, null if not found and optional is true\n     * @throws DateTimeException if the type is not available and the section is not optional\n     ",
    "links" : [ ]
  }, {
    "name" : " Long getValue(TemporalField field)",
    "returnType" : "Long",
    "comment" : "\n     * Gets the value of the specified field.\n     * <p>\n     * This will return the value for the specified field.\n     *\n     * @param field  the field to find, not null\n     * @return the value, null if not found and optional is true\n     * @throws DateTimeException if the field is not available and the section is not optional\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a string version of the context for debugging.\n     *\n     * @return a string representation of the context, not null\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static TemporalAccessor adjust(final TemporalAccessor temporal, DateTimeFormatter formatter)", " TemporalAccessor getTemporal()", " Locale getLocale()", " DecimalStyle getDecimalStyle()", " void startOptional()", " void endOptional()", " R getValue(TemporalQuery<R> query)", " Long getValue(TemporalField field)", "public String toString()" ],
  "variableNames" : [ "temporal", "formatter", "optional" ]
}