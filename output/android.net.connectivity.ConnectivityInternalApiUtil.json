{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/connectivity/ConnectivityInternalApiUtil.java",
  "packageName" : "android.net.connectivity",
  "className" : "ConnectivityInternalApiUtil",
  "comment" : "\n * Utility providing limited access to module-internal APIs which are only available on Android T+,\n * as this class is only in the bootclasspath on T+ as part of framework-connectivity.\n *\n * R+ module components like Tethering cannot depend on all hidden symbols from\n * framework-connectivity. They only have access to stable API stubs where newer APIs can be\n * accessed after an API level check (enforced by the linter), or to limited hidden symbols in this\n * class which is also annotated with @RequiresApi (so API level checks are also enforced by the\n * linter).\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static IBinder getCompanionDeviceManagerProxyService(Context ctx)",
    "returnType" : "IBinder",
    "comment" : "\n     * Get a service binder token for\n     * {@link com.android.server.connectivity.wear.CompanionDeviceManagerProxyService}.\n     ",
    "links" : [ "com.android.server.connectivity.wear.CompanionDeviceManagerProxyService" ]
  }, {
    "name" : "public static RoutingCoordinatorManager getRoutingCoordinatorManager(Context ctx)",
    "returnType" : "RoutingCoordinatorManager",
    "comment" : "\n     * Obtain a routing coordinator manager from a context, possibly cross-module.\n     * @param ctx the context\n     * @return an instance of the coordinator manager\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static IBinder getCompanionDeviceManagerProxyService(Context ctx)", "public static RoutingCoordinatorManager getRoutingCoordinatorManager(Context ctx)" ],
  "variableNames" : [ ]
}