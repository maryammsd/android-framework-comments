{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/IntStream.java",
  "packageName" : "java.util.stream",
  "className" : "Builder",
  "comment" : "\n     * A mutable builder for an {@code IntStream}.\n     *\n     * <p>A stream builder has a lifecycle, which starts in a building\n     * phase, during which elements can be added, and then transitions to a built\n     * phase, after which elements may not be added.  The built phase\n     * begins when the {@link #build()} method is called, which creates an\n     * ordered stream whose elements are the elements that were added to the\n     * stream builder, in the order they were added.\n     *\n     * @see IntStream#builder()\n     * @since 1.8\n     ",
  "links" : [ "#build()" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void accept(int t)",
    "returnType" : "void",
    "comment" : "\n         * Adds an element to the stream being built.\n         *\n         * @throws IllegalStateException if the builder has already transitioned\n         * to the built state\n         ",
    "links" : [ ]
  }, {
    "name" : " Builder add(int t)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds an element to the stream being built.\n         *\n         * @implSpec\n         * The default implementation behaves as if:\n         * <pre>{@code\n         *     accept(t)\n         *     return this;\n         * }</pre>\n         *\n         * @param t the element to add\n         * @return {@code this} builder\n         * @throws IllegalStateException if the builder has already transitioned\n         * to the built state\n         ",
    "links" : [ ]
  }, {
    "name" : " IntStream build()",
    "returnType" : "IntStream",
    "comment" : "\n         * Builds the stream, transitioning this builder to the built state.\n         * An {@code IllegalStateException} is thrown if there are further\n         * attempts to operate on the builder after it has entered the built\n         * state.\n         *\n         * @return the built stream\n         * @throws IllegalStateException if the builder has already transitioned to\n         * the built state\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void accept(int t)", " Builder add(int t)", " IntStream build()" ],
  "variableNames" : [ ]
}