{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/zip/CheckedOutputStream.java",
  "packageName" : "java.util.zip",
  "className" : "CheckedOutputStream",
  "comment" : "\n * An output stream that also maintains a checksum of the data being\n * written. The checksum can then be used to verify the integrity of\n * the output data.\n *\n * @see         Checksum\n * @author      David Connelly\n * @since 1.1\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "cksum",
    "type" : "Checksum",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void write(int b) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes a byte. Will block until the byte is actually written.\n     * @param b the byte to be written\n     * @throws    IOException if an I/O error has occurred\n     ",
    "links" : [ ]
  }, {
    "name" : "public void write(byte[] b, int off, int len) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes an array of bytes. Will block until the bytes are\n     * actually written.\n     * @param b the data to be written\n     * @param off the start offset of the data\n     * @param len the number of bytes to be written\n     * @throws    IOException if an I/O error has occurred\n     ",
    "links" : [ ]
  }, {
    "name" : "public Checksum getChecksum()",
    "returnType" : "Checksum",
    "comment" : "\n     * Returns the Checksum for this output stream.\n     * @return the Checksum\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void write(int b) throws IOException", "public void write(byte[] b, int off, int len) throws IOException", "public Checksum getChecksum()" ],
  "variableNames" : [ "cksum" ]
}