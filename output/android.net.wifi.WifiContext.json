{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/WifiContext.java",
  "packageName" : "android.net.wifi",
  "className" : "WifiContext",
  "comment" : "\n * Wrapper for context to override getResources method. Resources for wifi mainline jar needs to be\n * fetched from the resources APK.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ACTION_RESOURCES_APK",
    "type" : "String",
    "comment" : " Intent action that is used to identify ServiceWifiResources.apk ",
    "links" : [ ]
  }, {
    "name" : "ACTION_WIFI_DIALOG_APK",
    "type" : "String",
    "comment" : " Intent action that is used to identify WifiDialog.apk ",
    "links" : [ ]
  }, {
    "name" : "SERVICE_WIFI_PACKAGE_NAME",
    "type" : "String",
    "comment" : " Since service-wifi runs within system_server, its package name is \"android\". ",
    "links" : [ ]
  }, {
    "name" : "mWifiOverlayApkPkgName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWifiDialogApkPkgName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWifiAssetsFromApk",
    "type" : "AssetManager",
    "comment" : " Cached resources from the resources APK.",
    "links" : [ ]
  }, {
    "name" : "mWifiResourcesFromApk",
    "type" : "Resources",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWifiThemeFromApk",
    "type" : "Resources.Theme",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResourcesApkContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWifiStringResourceWrapperSparseArray",
    "type" : "SparseArray<WifiStringResourceWrapper>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getWifiOverlayApkPkgName()",
    "returnType" : "String",
    "comment" : " Get the package name of ServiceWifiResources.apk ",
    "links" : [ ]
  }, {
    "name" : "public String getWifiDialogApkPkgName()",
    "returnType" : "String",
    "comment" : " Get the package name of WifiDialog.apk ",
    "links" : [ ]
  }, {
    "name" : "private String getApkPkgNameForAction(@NonNull String action, UserHandle userHandle)",
    "returnType" : "String",
    "comment" : " Gets the package name of the apk responding to the given intent action ",
    "links" : [ ]
  }, {
    "name" : "public Context getResourcesApkContext()",
    "returnType" : "Context",
    "comment" : " Get the Resource APK context ",
    "links" : [ ]
  }, {
    "name" : "public AssetManager getAssets()",
    "returnType" : "AssetManager",
    "comment" : "\n     * Retrieve assets held in the wifi resources APK.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Resources getResources()",
    "returnType" : "Resources",
    "comment" : "\n     * Retrieve resources held in the wifi resources APK.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Resources.Theme getTheme()",
    "returnType" : "Resources.Theme",
    "comment" : "\n     * Retrieve theme held in the wifi resources APK.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getServiceWifiPackageName()",
    "returnType" : "String",
    "comment" : " Get the package name that service-wifi runs under. ",
    "links" : [ ]
  }, {
    "name" : "public void resetResourceCache()",
    "returnType" : "void",
    "comment" : "\n     * Reset the resource cache which will cause it to be reloaded next time it is accessed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public WifiStringResourceWrapper getStringResourceWrapper(int subId, int carrierId)",
    "returnType" : "WifiStringResourceWrapper",
    "comment" : "\n     * Returns an instance of WifiStringResourceWrapper with the given subId and carrierId.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getWifiOverlayApkPkgName()", "public String getWifiDialogApkPkgName()", "private String getApkPkgNameForAction(@NonNull String action, UserHandle userHandle)", "public Context getResourcesApkContext()", "public AssetManager getAssets()", "public Resources getResources()", "public Resources.Theme getTheme()", "public String getServiceWifiPackageName()", "public void resetResourceCache()", "public WifiStringResourceWrapper getStringResourceWrapper(int subId, int carrierId)" ],
  "variableNames" : [ "TAG", "ACTION_RESOURCES_APK", "ACTION_WIFI_DIALOG_APK", "SERVICE_WIFI_PACKAGE_NAME", "mWifiOverlayApkPkgName", "mWifiDialogApkPkgName", "mWifiAssetsFromApk", "mWifiResourcesFromApk", "mWifiThemeFromApk", "mResourcesApkContext", "mWifiStringResourceWrapperSparseArray" ]
}