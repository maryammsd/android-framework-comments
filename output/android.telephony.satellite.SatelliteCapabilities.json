{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/satellite/SatelliteCapabilities.java",
  "packageName" : "android.telephony.satellite",
  "className" : "SatelliteCapabilities",
  "comment" : "\n * SatelliteCapabilities is used to represent the capabilities of the satellite service\n * received from satellite modem.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mSupportedRadioTechnologies",
    "type" : "Set<Integer>",
    "comment" : "\n     * List of technologies supported by the satellite modem.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsPointingRequired",
    "type" : "boolean",
    "comment" : "\n     * Whether UE needs to point to a satellite to send and receive data.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMaxBytesPerOutgoingDatagram",
    "type" : "int",
    "comment" : "\n     * The maximum number of bytes per datagram that can be sent over satellite.\n     ",
    "links" : [ ]
  }, {
    "name" : "mAntennaPositionMap",
    "type" : "Map<Integer, AntennaPosition>",
    "comment" : "\n     * Antenna Position received from satellite modem which gives information about antenna\n     * direction to be used with satellite communication and suggested device hold positions.\n     * Map key: {@link SatelliteManager.DeviceHoldPosition} value: AntennaPosition\n     ",
    "links" : [ "SatelliteManager.DeviceHoldPosition" ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SatelliteCapabilities>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Set<Integer> getSupportedRadioTechnologies()",
    "returnType" : "Set<Integer>",
    "comment" : "\n     * @return The list of technologies supported by the satellite modem.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isPointingRequired()",
    "returnType" : "boolean",
    "comment" : "\n     * Get whether UE needs to point to a satellite to send and receive data.\n     *\n     * @return {@code true} if UE needs to point to a satellite to send and receive data and\n     *         {@code false} otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxBytesPerOutgoingDatagram()",
    "returnType" : "int",
    "comment" : "\n     * The maximum number of bytes per datagram that can be sent over satellite.\n     *\n     * @return The maximum number of bytes per datagram that can be sent over satellite.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<Integer, AntennaPosition> getAntennaPositionMap()",
    "returnType" : "Map<Integer, AntennaPosition>",
    "comment" : "\n     * Antenna Position received from satellite modem which gives information about antenna\n     * direction to be used with satellite communication and suggested device hold positions.\n     * @return Map key: {@link SatelliteManager.DeviceHoldPosition} value: AntennaPosition\n     ",
    "links" : [ "SatelliteManager.DeviceHoldPosition" ]
  }, {
    "name" : "private void readFromParcel(Parcel in)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)", "public String toString()", "public boolean equals(Object o)", "public int hashCode()", "public Set<Integer> getSupportedRadioTechnologies()", "public boolean isPointingRequired()", "public int getMaxBytesPerOutgoingDatagram()", "public Map<Integer, AntennaPosition> getAntennaPositionMap()", "private void readFromParcel(Parcel in)" ],
  "variableNames" : [ "mSupportedRadioTechnologies", "mIsPointingRequired", "mMaxBytesPerOutgoingDatagram", "mAntennaPositionMap", "CREATOR" ]
}