{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "PinnedPositions",
  "comment" : "\n     * <p>\n     * Contact-specific information about whether or not a contact has been pinned by the user\n     * at a particular position within the system contact application's user interface.\n     * </p>\n     *\n     * <p>\n     * This pinning information can be used by individual applications to customize how\n     * they order particular pinned contacts. For example, a Dialer application could\n     * use pinned information to order user-pinned contacts in a top row of favorites.\n     * </p>\n     *\n     * <p>\n     * It is possible for two or more contacts to occupy the same pinned position (due\n     * to aggregation and sync), so this pinning information should be used on a best-effort\n     * basis to order contacts in-application rather than an absolute guide on where a contact\n     * should be positioned. Contacts returned by the ContactsProvider will not be ordered based\n     * on this information, so it is up to the client application to reorder these contacts within\n     * their own UI adhering to (or ignoring as appropriate) information stored in the pinned\n     * column.\n     * </p>\n     *\n     * <p>\n     * By default, unpinned contacts will have a pinned position of\n     * {@link PinnedPositions#UNPINNED}. Client-provided pinned positions can be positive\n     * integers that are greater than 1.\n     * </p>\n     ",
  "links" : [ "#UNPINNED" ],
  "variables" : [ {
    "name" : "UNDEMOTE_METHOD",
    "type" : "String",
    "comment" : "\n         * The method to invoke in order to undemote a formerly demoted contact. The contact id of\n         * the contact must be provided as an argument. If the contact was not previously demoted,\n         * nothing will be done.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "UNPINNED",
    "type" : "int",
    "comment" : "\n         * Default value for the pinned position of an unpinned contact.\n         ",
    "links" : [ ]
  }, {
    "name" : "DEMOTED",
    "type" : "int",
    "comment" : "\n         * Value of pinned position for a contact that a user has indicated should be considered\n         * of the lowest priority. It is up to the client application to determine how to present\n         * such a contact - for example all the way at the bottom of a contact list, or simply\n         * just hidden from view.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void undemote(ContentResolver contentResolver, long contactId)",
    "returnType" : "void",
    "comment" : "\n         * Undemotes a formerly demoted contact. If the contact was not previously demoted, nothing\n         * will be done.\n         *\n         * @param contentResolver to perform the undemote operation on.\n         * @param contactId the id of the contact to undemote.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static void pin(ContentResolver contentResolver, long contactId, int pinnedPosition)",
    "returnType" : "void",
    "comment" : "\n         * Pins a contact at a provided position, or unpins a contact.\n         *\n         * @param contentResolver to perform the pinning operation on.\n         * @param pinnedPosition the position to pin the contact at. To unpin a contact, use\n         *         {@link PinnedPositions#UNPINNED}.\n         ",
    "links" : [ "#UNPINNED" ]
  } ],
  "methodNames" : [ "public static void undemote(ContentResolver contentResolver, long contactId)", "public static void pin(ContentResolver contentResolver, long contactId, int pinnedPosition)" ],
  "variableNames" : [ "UNDEMOTE_METHOD", "UNPINNED", "DEMOTED" ]
}