{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/health/HealthStatsWriter.java",
  "packageName" : "android.os.health",
  "className" : "HealthStatsWriter",
  "comment" : "\n * Class to write the health stats data into a parcel, so it can then be\n * retrieved via a {@link HealthStats} object.\n *\n * There is an attempt to keep this class as low overhead as possible, for\n * example storing an int[] and a long[] instead of a TimerStat[].\n *\n * @hide\n ",
  "links" : [ "android.os.health.HealthStats" ],
  "variables" : [ {
    "name" : "mConstants",
    "type" : "HealthKeys.Constants",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimerFields",
    "type" : "boolean[]",
    "comment" : " TimerStat fields",
    "links" : [ ]
  }, {
    "name" : "mTimerCounts",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimerTimes",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMeasurementFields",
    "type" : "boolean[]",
    "comment" : " Measurement fields",
    "links" : [ ]
  }, {
    "name" : "mMeasurementValues",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatsValues",
    "type" : "ArrayMap<String, HealthStatsWriter>[]",
    "comment" : " Stats fields",
    "links" : [ ]
  }, {
    "name" : "mTimersValues",
    "type" : "ArrayMap<String, TimerStat>[]",
    "comment" : " Timers fields",
    "links" : [ ]
  }, {
    "name" : "mMeasurementsValues",
    "type" : "ArrayMap<String, Long>[]",
    "comment" : " Measurements fields",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void addTimer(int timerId, int count, long time)",
    "returnType" : "void",
    "comment" : "\n     * Add a timer for the given key.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addMeasurement(int measurementId, long value)",
    "returnType" : "void",
    "comment" : "\n     * Add a measurement for the given key.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addStats(int key, String name, HealthStatsWriter value)",
    "returnType" : "void",
    "comment" : "\n     * Add a recursive HealthStats object for the given key and string name. The value\n     * is stored as a HealthStatsWriter until this object is written to a parcel, so\n     * don't attempt to reuse the HealthStatsWriter.\n     *\n     * The value field should not be null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addTimers(int key, String name, TimerStat value)",
    "returnType" : "void",
    "comment" : "\n     * Add a TimerStat for the given key and string name.\n     *\n     * The value field should not be null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addMeasurements(int key, String name, long value)",
    "returnType" : "void",
    "comment" : "\n     * Add a measurement for the given key and string name.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void flattenToParcel(Parcel out)",
    "returnType" : "void",
    "comment" : "\n     * Flattens the data in this HealthStatsWriter to the Parcel format\n     * that can be unparceled into a HealthStat.\n     * @more\n     * (Called flattenToParcel because this HealthStatsWriter itself is\n     * not parcelable and we don't flatten all the business about the\n     * HealthKeys.Constants, only the values that were actually supplied)\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int countBooleanArray(boolean[] fields)",
    "returnType" : "int",
    "comment" : "\n     * Count how many of the fields have been set.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int countObjectArray(T[] fields)",
    "returnType" : "int",
    "comment" : "\n     * Count how many of the fields have been set.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void writeHealthStatsWriterMap(Parcel out, ArrayMap<String, HealthStatsWriter> map)",
    "returnType" : "void",
    "comment" : "\n     * Write a map of String to HealthStatsWriter to the Parcel.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void writeParcelableMap(Parcel out, ArrayMap<String, T> map)",
    "returnType" : "void",
    "comment" : "\n     * Write a map of String to Parcelables to the Parcel.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void writeLongsMap(Parcel out, ArrayMap<String, Long> map)",
    "returnType" : "void",
    "comment" : "\n     * Write a map of String to Longs to the Parcel.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void addTimer(int timerId, int count, long time)", "public void addMeasurement(int measurementId, long value)", "public void addStats(int key, String name, HealthStatsWriter value)", "public void addTimers(int key, String name, TimerStat value)", "public void addMeasurements(int key, String name, long value)", "public void flattenToParcel(Parcel out)", "private static int countBooleanArray(boolean[] fields)", "private static int countObjectArray(T[] fields)", "private static void writeHealthStatsWriterMap(Parcel out, ArrayMap<String, HealthStatsWriter> map)", "private static void writeParcelableMap(Parcel out, ArrayMap<String, T> map)", "private static void writeLongsMap(Parcel out, ArrayMap<String, Long> map)" ],
  "variableNames" : [ "mConstants", "mTimerFields", "mTimerCounts", "mTimerTimes", "mMeasurementFields", "mMeasurementValues", "mStatsValues", "mTimersValues", "mMeasurementsValues" ]
}