{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/PooledStringWriter.java",
  "packageName" : "android.os",
  "className" : "PooledStringWriter",
  "comment" : "\n * Helper class for writing pooled strings into a Parcel.  It must be used\n * in conjunction with {@link android.os.PooledStringReader}.  This really needs\n * to be pushed in to Parcel itself, but doing that is...  complicated.\n * @hide\n ",
  "variables" : [ {
    "name" : "mOut",
    "type" : "Parcel",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPool",
    "type" : "HashMap<String, Integer>",
    "comment" : "\n     * Book-keeping for writing pooled string objects, mapping strings we have\n     * written so far to their index in the pool.  We deliberately use HashMap\n     * here since performance is critical, we expect to be doing lots of adds to\n     * it, and it is only a temporary object so its overall memory footprint is\n     * not a signifciant issue.\n     ",
    "links" : [ ]
  }, {
    "name" : "mStart",
    "type" : "int",
    "comment" : "\n     * Book-keeping for writing pooling string objects, indicating where we\n     * started writing the pool, which is where we need to ultimately store\n     * how many strings are in the pool.\n     ",
    "links" : [ ]
  }, {
    "name" : "mNext",
    "type" : "int",
    "comment" : "\n     * Next available index in the pool.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeString(String str)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getStringCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finish()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mOut", "mPool", "mStart", "mNext" ],
  "methodNames" : [ "public void writeString(String str)", "public int getStringCount()", "public void finish()" ]
}