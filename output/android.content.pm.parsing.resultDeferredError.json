{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/pm/parsing/result/ParseInput.java",
  "packageName" : "android.content.pm.parsing.result",
  "className" : "DeferredError",
  "comment" : "\n     * Errors encountered during parsing may rely on the targetSDK version of the application to\n     * determine whether or not to fail. These are passed into {@link #deferError(String, long)}\n     * when encountered, and the implementation will handle how to defer the errors until the\n     * targetSdkVersion is known and sent to {@link #enableDeferredError(String, int)}.\n     *\n     * All of these must be marked {@link ChangeId}, as that is the mechanism used to check if the\n     * error must be propagated. This framework also allows developers to pre-disable specific\n     * checks if they wish to target a newer SDK version in a development environment without\n     * having to migrate their entire app to validate on a newer platform.\n     ",
  "variables" : [ {
    "name" : "MISSING_APP_TAG",
    "type" : "long",
    "comment" : "\n         * Missing an \"application\" or \"instrumentation\" tag.\n         ",
    "links" : [ ]
  }, {
    "name" : "EMPTY_INTENT_ACTION_CATEGORY",
    "type" : "long",
    "comment" : "\n         * An intent filter's actor or category is an empty string. A bug in the platform before R\n         * allowed this to pass through without an error. This does not include cases when the\n         * attribute is null/missing, as that has always been a failure.\n         ",
    "links" : [ ]
  }, {
    "name" : "RESOURCES_ARSC_COMPRESSED",
    "type" : "long",
    "comment" : "\n         * The {@code resources.arsc} of one of the APKs being installed is compressed or not\n         * aligned on a 4-byte boundary. Resource tables that cannot be memory mapped exert excess\n         * memory pressure on the system and drastically slow down construction of\n         * {@link android.content.res.Resources} objects.\n         ",
    "links" : [ "android.content.res.Resources" ]
  } ],
  "methods" : [ {
    "name" : "public static int getTargetSdkForChange(long changeId)",
    "returnType" : "int",
    "comment" : "\n         * TODO(chiuwinson): This is required because PackageManager#getPackageArchiveInfo\n         *   cannot read the targetSdk info from the changeId because it requires the\n         *   READ_COMPAT_CHANGE_CONFIG which cannot be obtained automatically without entering the\n         *   server process. This should be removed once an alternative is found, or if the API\n         *   is removed.\n         * @return the targetSdk that this change is gated on (> check), or -1 if disabled\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "MISSING_APP_TAG", "EMPTY_INTENT_ACTION_CATEGORY", "RESOURCES_ARSC_COMPRESSED" ],
  "methodNames" : [ "public static int getTargetSdkForChange(long changeId)" ]
}