{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/VelocityTracker.java",
  "packageName" : "android.view",
  "className" : "Estimator",
  "comment" : "\n     * An estimator for the movements of a pointer based on a polynomial model.\n     *\n     * The last recorded position of the pointer is at time zero seconds.\n     * Past estimated positions are at negative times and future estimated positions\n     * are at positive times.\n     *\n     * First coefficient is position (in pixels), second is velocity (in pixels per second),\n     * third is acceleration (in pixels per second squared).\n     *\n     * @hide For internal use only.  Not a final API.\n     ",
  "variables" : [ {
    "name" : "MAX_DEGREE",
    "type" : "int",
    "comment" : " Must match VelocityTracker::Estimator::MAX_DEGREE",
    "links" : [ ]
  }, {
    "name" : "xCoeff",
    "type" : "float[]",
    "comment" : "\n         * Polynomial coefficients describing motion in X.\n         ",
    "links" : [ ]
  }, {
    "name" : "yCoeff",
    "type" : "float[]",
    "comment" : "\n         * Polynomial coefficients describing motion in Y.\n         ",
    "links" : [ ]
  }, {
    "name" : "degree",
    "type" : "int",
    "comment" : "\n         * Polynomial degree, or zero if only position information is available.\n         ",
    "links" : [ ]
  }, {
    "name" : "confidence",
    "type" : "float",
    "comment" : "\n         * Confidence (coefficient of determination), between 0 (no fit) and 1 (perfect fit).\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public float estimateX(float time)",
    "returnType" : "float",
    "comment" : "\n         * Gets an estimate of the X position of the pointer at the specified time point.\n         * @param time The time point in seconds, 0 is the last recorded time.\n         * @return The estimated X coordinate.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float estimateY(float time)",
    "returnType" : "float",
    "comment" : "\n         * Gets an estimate of the Y position of the pointer at the specified time point.\n         * @param time The time point in seconds, 0 is the last recorded time.\n         * @return The estimated Y coordinate.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getXCoeff(int index)",
    "returnType" : "float",
    "comment" : "\n         * Gets the X coefficient with the specified index.\n         * @param index The index of the coefficient to return.\n         * @return The X coefficient, or 0 if the index is greater than the degree.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getYCoeff(int index)",
    "returnType" : "float",
    "comment" : "\n         * Gets the Y coefficient with the specified index.\n         * @param index The index of the coefficient to return.\n         * @return The Y coefficient, or 0 if the index is greater than the degree.\n         ",
    "links" : [ ]
  }, {
    "name" : "private float estimate(float time, float[] c)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "MAX_DEGREE", "xCoeff", "yCoeff", "degree", "confidence" ],
  "methodNames" : [ "public float estimateX(float time)", "public float estimateY(float time)", "public float getXCoeff(int index)", "public float getYCoeff(int index)", "private float estimate(float time, float[] c)" ]
}