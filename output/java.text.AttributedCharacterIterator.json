{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/text/AttributedCharacterIterator.java",
  "packageName" : "java.text",
  "className" : "AttributedCharacterIterator",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public int getRunStart()",
    "returnType" : "int",
    "comment" : "\n     * Returns the index of the first character of the run\n     * with respect to all attributes containing the current character.\n     *\n     * <p>Any contiguous text segments having the same attributes (the\n     * same set of attribute/value pairs) are treated as separate runs\n     * if the attributes have been given to those text segments separately.\n     *\n     * @return the index of the first character of the run\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRunStart(Attribute attribute)",
    "returnType" : "int",
    "comment" : "\n     * Returns the index of the first character of the run\n     * with respect to the given {@code attribute} containing the current character.\n     *\n     * @param attribute the desired attribute.\n     * @return the index of the first character of the run\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRunStart(Set<? extends Attribute> attributes)",
    "returnType" : "int",
    "comment" : "\n     * Returns the index of the first character of the run\n     * with respect to the given {@code attributes} containing the current character.\n     *\n     * @param attributes a set of the desired attributes.\n     * @return the index of the first character of the run\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRunLimit()",
    "returnType" : "int",
    "comment" : "\n     * Returns the index of the first character following the run\n     * with respect to all attributes containing the current character.\n     *\n     * <p>Any contiguous text segments having the same attributes (the\n     * same set of attribute/value pairs) are treated as separate runs\n     * if the attributes have been given to those text segments separately.\n     *\n     * @return the index of the first character following the run\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRunLimit(Attribute attribute)",
    "returnType" : "int",
    "comment" : "\n     * Returns the index of the first character following the run\n     * with respect to the given {@code attribute} containing the current character.\n     *\n     * @param attribute the desired attribute\n     * @return the index of the first character following the run\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRunLimit(Set<? extends Attribute> attributes)",
    "returnType" : "int",
    "comment" : "\n     * Returns the index of the first character following the run\n     * with respect to the given {@code attributes} containing the current character.\n     *\n     * @param attributes a set of the desired attributes\n     * @return the index of the first character following the run\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<Attribute, Object> getAttributes()",
    "returnType" : "Map<Attribute, Object>",
    "comment" : "\n     * Returns a map with the attributes defined on the current\n     * character.\n     *\n     * @return a map with the attributes defined on the current character\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object getAttribute(Attribute attribute)",
    "returnType" : "Object",
    "comment" : "\n     * Returns the value of the named {@code attribute} for the current character.\n     * Returns {@code null} if the {@code attribute} is not defined.\n     *\n     * @param attribute the desired attribute\n     * @return the value of the named {@code attribute} or {@code null}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<Attribute> getAllAttributeKeys()",
    "returnType" : "Set<Attribute>",
    "comment" : "\n     * Returns the keys of all attributes defined on the\n     * iterator's text range. The set is empty if no\n     * attributes are defined.\n     *\n     * @return the keys of all attributes\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getRunStart()", "public int getRunStart(Attribute attribute)", "public int getRunStart(Set<? extends Attribute> attributes)", "public int getRunLimit()", "public int getRunLimit(Attribute attribute)", "public int getRunLimit(Set<? extends Attribute> attributes)", "public Map<Attribute, Object> getAttributes()", "public Object getAttribute(Attribute attribute)", "public Set<Attribute> getAllAttributeKeys()" ],
  "variableNames" : [ ]
}