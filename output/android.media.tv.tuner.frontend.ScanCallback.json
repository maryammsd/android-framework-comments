{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/tuner/frontend/ScanCallback.java",
  "packageName" : "android.media.tv.tuner.frontend",
  "className" : "ScanCallback",
  "comment" : "\n * Scan callback.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onLocked()",
    "returnType" : "void",
    "comment" : "\n     * Scan locked the signal.\n     *\n     * It can also be notified after signal is locked if the signal attributes transmission\n     * parameter of the signal is changed (e.g., Modulation).\n     ",
    "links" : [ ]
  }, {
    "name" : " void onUnlocked()",
    "returnType" : "void",
    "comment" : " Scan unlocked the signal. ",
    "links" : [ ]
  }, {
    "name" : " void onScanStopped()",
    "returnType" : "void",
    "comment" : " Scan stopped. ",
    "links" : [ ]
  }, {
    "name" : " void onProgress(@IntRange(from = 0, to = 100) int percent)",
    "returnType" : "void",
    "comment" : " scan progress percent (0..100) ",
    "links" : [ ]
  }, {
    "name" : " void onFrequenciesReported(@NonNull int[] frequencies)",
    "returnType" : "void",
    "comment" : "\n     * @deprecated Use {@link #onFrequenciesLongReported(long[])}\n     ",
    "links" : [ "#onFrequenciesLongReported(long" ]
  }, {
    "name" : " void onFrequenciesLongReported(@NonNull long[] frequencies)",
    "returnType" : "void",
    "comment" : " Signal frequencies in Hertz ",
    "links" : [ ]
  }, {
    "name" : " void onSymbolRatesReported(@NonNull int[] rate)",
    "returnType" : "void",
    "comment" : " Symbols per second ",
    "links" : [ ]
  }, {
    "name" : " void onPlpIdsReported(@NonNull int[] plpIds)",
    "returnType" : "void",
    "comment" : " Locked Plp Ids for DVBT2 frontend. ",
    "links" : [ ]
  }, {
    "name" : " void onGroupIdsReported(@NonNull int[] groupIds)",
    "returnType" : "void",
    "comment" : " Locked group Ids for DVBT2 frontend. ",
    "links" : [ ]
  }, {
    "name" : " void onInputStreamIdsReported(@NonNull int[] inputStreamIds)",
    "returnType" : "void",
    "comment" : " Stream Ids. ",
    "links" : [ ]
  }, {
    "name" : " void onDvbsStandardReported(@DvbsFrontendSettings.Standard int dvbsStandard)",
    "returnType" : "void",
    "comment" : " Locked signal standard for DVBS. ",
    "links" : [ ]
  }, {
    "name" : " void onDvbtStandardReported(@DvbtFrontendSettings.Standard int dvbtStandard)",
    "returnType" : "void",
    "comment" : " Locked signal standard. for DVBT ",
    "links" : [ ]
  }, {
    "name" : " void onAnalogSifStandardReported(@AnalogFrontendSettings.SifStandard int sif)",
    "returnType" : "void",
    "comment" : " Locked signal SIF standard for Analog. ",
    "links" : [ ]
  }, {
    "name" : " void onAtsc3PlpInfosReported(@NonNull Atsc3PlpInfo[] atsc3PlpInfos)",
    "returnType" : "void",
    "comment" : " PLP status in a tuned frequency band for ATSC3 frontend. ",
    "links" : [ ]
  }, {
    "name" : " void onHierarchyReported(@DvbtFrontendSettings.Hierarchy int hierarchy)",
    "returnType" : "void",
    "comment" : " Frontend hierarchy. ",
    "links" : [ ]
  }, {
    "name" : " void onSignalTypeReported(@AnalogFrontendSettings.SignalType int signalType)",
    "returnType" : "void",
    "comment" : " Frontend signal type. ",
    "links" : [ ]
  }, {
    "name" : " void onModulationReported(@FrontendStatus.FrontendModulation int modulation)",
    "returnType" : "void",
    "comment" : " Frontend modulation reported. ",
    "links" : [ ]
  }, {
    "name" : " void onPriorityReported(boolean isHighPriority)",
    "returnType" : "void",
    "comment" : " Frontend scan message priority reported. ",
    "links" : [ ]
  }, {
    "name" : " void onDvbcAnnexReported(@DvbcFrontendSettings.Annex int dvbcAnnex)",
    "returnType" : "void",
    "comment" : " DVBC Frontend Annex reported. ",
    "links" : [ ]
  }, {
    "name" : " void onDvbtCellIdsReported(@NonNull int[] dvbtCellIds)",
    "returnType" : "void",
    "comment" : " DVBT Frontend Cell Ids reported. ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onLocked()", " void onUnlocked()", " void onScanStopped()", " void onProgress(@IntRange(from = 0, to = 100) int percent)", " void onFrequenciesReported(@NonNull int[] frequencies)", " void onFrequenciesLongReported(@NonNull long[] frequencies)", " void onSymbolRatesReported(@NonNull int[] rate)", " void onPlpIdsReported(@NonNull int[] plpIds)", " void onGroupIdsReported(@NonNull int[] groupIds)", " void onInputStreamIdsReported(@NonNull int[] inputStreamIds)", " void onDvbsStandardReported(@DvbsFrontendSettings.Standard int dvbsStandard)", " void onDvbtStandardReported(@DvbtFrontendSettings.Standard int dvbtStandard)", " void onAnalogSifStandardReported(@AnalogFrontendSettings.SifStandard int sif)", " void onAtsc3PlpInfosReported(@NonNull Atsc3PlpInfo[] atsc3PlpInfos)", " void onHierarchyReported(@DvbtFrontendSettings.Hierarchy int hierarchy)", " void onSignalTypeReported(@AnalogFrontendSettings.SignalType int signalType)", " void onModulationReported(@FrontendStatus.FrontendModulation int modulation)", " void onPriorityReported(boolean isHighPriority)", " void onDvbcAnnexReported(@DvbcFrontendSettings.Annex int dvbcAnnex)", " void onDvbtCellIdsReported(@NonNull int[] dvbtCellIds)" ],
  "variableNames" : [ ]
}