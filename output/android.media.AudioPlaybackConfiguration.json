{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/AudioPlaybackConfiguration.java",
  "packageName" : "android.media",
  "className" : "AudioPlaybackConfiguration",
  "comment" : "\n * The AudioPlaybackConfiguration class collects the information describing an audio playback\n * session.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PLAYER_PIID_INVALID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_UPID_INVALID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * @hide\n     * An unknown type of player\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_JAM_AUDIOTRACK",
    "type" : "int",
    "comment" : "\n     * @hide\n     * Player backed by a java android.media.AudioTrack player\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_JAM_MEDIAPLAYER",
    "type" : "int",
    "comment" : "\n     * @hide\n     * Player backed by a java android.media.MediaPlayer player\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_JAM_SOUNDPOOL",
    "type" : "int",
    "comment" : "\n     * @hide\n     * Player backed by a java android.media.SoundPool player\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_SLES_AUDIOPLAYER_BUFFERQUEUE",
    "type" : "int",
    "comment" : "\n     * @hide\n     * Player backed by a C OpenSL ES AudioPlayer player with a BufferQueue source\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_SLES_AUDIOPLAYER_URI_FD",
    "type" : "int",
    "comment" : "\n     * @hide\n     * Player backed by a C OpenSL ES AudioPlayer player with a URI or FD source\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_AAUDIO",
    "type" : "int",
    "comment" : " TODO unhide for SystemApi, update getPlayerType()",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_HW_SOURCE",
    "type" : "int",
    "comment" : " TODO unhide for SystemApi, update getPlayerType()",
    "links" : [ ]
  }, {
    "name" : "PLAYER_TYPE_EXTERNAL_PROXY",
    "type" : "int",
    "comment" : " TODO unhide for SystemApi, update getPlayerType()",
    "links" : [ ]
  }, {
    "name" : "PLAYER_STATE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * @hide\n     * An unknown player state\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_STATE_RELEASED",
    "type" : "int",
    "comment" : "\n     * @hide\n     * The resources of the player have been released, it cannot play anymore\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_STATE_IDLE",
    "type" : "int",
    "comment" : "\n     * @hide\n     * The state of a player when it's created\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_STATE_STARTED",
    "type" : "int",
    "comment" : "\n     * @hide\n     * The state of a player that is actively playing\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_STATE_PAUSED",
    "type" : "int",
    "comment" : "\n     * @hide\n     * The state of a player where playback is paused\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYER_STATE_STOPPED",
    "type" : "int",
    "comment" : "\n     * @hide\n     * The state of a player where playback is stopped\n     ",
    "links" : [ ]
  }, {
    "name" : "mPlayerIId",
    "type" : "int",
    "comment" : " immutable data",
    "links" : [ ]
  }, {
    "name" : "mPlayerType",
    "type" : "int",
    "comment" : " not final due to anonymization step",
    "links" : [ ]
  }, {
    "name" : "mClientUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientPid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIPlayerShell",
    "type" : "IPlayerShell",
    "comment" : " the IPlayer reference and death monitor",
    "links" : [ ]
  }, {
    "name" : "mPlayerState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlayerAttr",
    "type" : "AudioAttributes",
    "comment" : " never null",
    "links" : [ ]
  }, {
    "name" : "sPlayerDeathMonitor",
    "type" : "PlayerDeathMonitor",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AudioPlaybackConfiguration>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void init()",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static AudioPlaybackConfiguration anonymizedCopy(AudioPlaybackConfiguration in)",
    "returnType" : "AudioPlaybackConfiguration",
    "comment" : "\n     * @hide\n     * Creates a copy of the playback configuration that is stripped of any data enabling\n     * identification of which application it is associated with (\"anonymized\").\n     * @param toSanitize\n     ",
    "links" : [ ]
  }, {
    "name" : "public AudioAttributes getAudioAttributes()",
    "returnType" : "AudioAttributes",
    "comment" : "\n     * Return the {@link AudioAttributes} of the corresponding player.\n     * @return the audio attributes of the player\n     ",
    "links" : [ "android.media.AudioAttributes" ]
  }, {
    "name" : "public int getClientUid()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * Return the uid of the client application that created this player.\n     * @return the uid of the client\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getClientPid()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * Return the pid of the client application that created this player.\n     * @return the pid of the client\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPlayerType()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * Return the type of player linked to this configuration. The return value is one of\n     * {@link #PLAYER_TYPE_JAM_AUDIOTRACK}, {@link #PLAYER_TYPE_JAM_MEDIAPLAYER},\n     * {@link #PLAYER_TYPE_JAM_SOUNDPOOL}, {@link #PLAYER_TYPE_SLES_AUDIOPLAYER_BUFFERQUEUE},\n     * {@link #PLAYER_TYPE_SLES_AUDIOPLAYER_URI_FD}, or {@link #PLAYER_TYPE_UNKNOWN}.\n     * <br>Note that player types not exposed in the system API will be represented as\n     * {@link #PLAYER_TYPE_UNKNOWN}.\n     * @return the type of the player.\n     ",
    "links" : [ "#PLAYER_TYPE_JAM_SOUNDPOOL", "#PLAYER_TYPE_SLES_AUDIOPLAYER_BUFFERQUEUE", "#PLAYER_TYPE_JAM_AUDIOTRACK", "#PLAYER_TYPE_UNKNOWN", "#PLAYER_TYPE_JAM_MEDIAPLAYER", "#PLAYER_TYPE_SLES_AUDIOPLAYER_URI_FD" ]
  }, {
    "name" : "public int getPlayerState()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * Return the current state of the player linked to this configuration. The return value is one\n     * of {@link #PLAYER_STATE_IDLE}, {@link #PLAYER_STATE_PAUSED}, {@link #PLAYER_STATE_STARTED},\n     * {@link #PLAYER_STATE_STOPPED}, {@link #PLAYER_STATE_RELEASED} or\n     * {@link #PLAYER_STATE_UNKNOWN}.\n     * @return the state of the player.\n     ",
    "links" : [ "#PLAYER_STATE_STARTED", "#PLAYER_STATE_UNKNOWN", "#PLAYER_STATE_PAUSED", "#PLAYER_STATE_RELEASED", "#PLAYER_STATE_STOPPED", "#PLAYER_STATE_IDLE" ]
  }, {
    "name" : "public int getPlayerInterfaceId()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     * Return an identifier unique for the lifetime of the player.\n     * @return a player interface identifier\n     ",
    "links" : [ ]
  }, {
    "name" : "public PlayerProxy getPlayerProxy()",
    "returnType" : "PlayerProxy",
    "comment" : "\n     * @hide\n     * Return a proxy for the player associated with this playback configuration\n     * @return a proxy player\n     ",
    "links" : [ ]
  }, {
    "name" : " IPlayer getIPlayer()",
    "returnType" : "IPlayer",
    "comment" : "\n     * @hide\n     * @return the IPlayer interface for the associated player\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean handleAudioAttributesEvent(@NonNull AudioAttributes attr)",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     * Handle a change of audio attributes\n     * @param attr\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean handleStateEvent(int event)",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     * Handle a player state change\n     * @param event\n     * @return true if the state changed, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "private void playerDied()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isActive()",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     * Returns true if the player is considered \"active\", i.e. actively playing, and thus\n     * in a state that should make it considered for the list public (sanitized) active playback\n     * configurations\n     * @return true if active\n     ",
    "links" : [ ]
  }, {
    "name" : "public void dump(PrintWriter pw)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     * For AudioService dump\n     * @param pw\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String toLogFriendlyPlayerType(int type)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static String toLogFriendlyPlayerState(int state)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DEBUG", "PLAYER_PIID_INVALID", "PLAYER_UPID_INVALID", "PLAYER_TYPE_UNKNOWN", "PLAYER_TYPE_JAM_AUDIOTRACK", "PLAYER_TYPE_JAM_MEDIAPLAYER", "PLAYER_TYPE_JAM_SOUNDPOOL", "PLAYER_TYPE_SLES_AUDIOPLAYER_BUFFERQUEUE", "PLAYER_TYPE_SLES_AUDIOPLAYER_URI_FD", "PLAYER_TYPE_AAUDIO", "PLAYER_TYPE_HW_SOURCE", "PLAYER_TYPE_EXTERNAL_PROXY", "PLAYER_STATE_UNKNOWN", "PLAYER_STATE_RELEASED", "PLAYER_STATE_IDLE", "PLAYER_STATE_STARTED", "PLAYER_STATE_PAUSED", "PLAYER_STATE_STOPPED", "mPlayerIId", "mPlayerType", "mClientUid", "mClientPid", "mIPlayerShell", "mPlayerState", "mPlayerAttr", "sPlayerDeathMonitor", "CREATOR" ],
  "methodNames" : [ "public void init()", "public static AudioPlaybackConfiguration anonymizedCopy(AudioPlaybackConfiguration in)", "public AudioAttributes getAudioAttributes()", "public int getClientUid()", "public int getClientPid()", "public int getPlayerType()", "public int getPlayerState()", "public int getPlayerInterfaceId()", "public PlayerProxy getPlayerProxy()", " IPlayer getIPlayer()", "public boolean handleAudioAttributesEvent(@NonNull AudioAttributes attr)", "public boolean handleStateEvent(int event)", "private void playerDied()", "public boolean isActive()", "public void dump(PrintWriter pw)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(Object o)", "public String toString()", "public static String toLogFriendlyPlayerType(int type)", "public static String toLogFriendlyPlayerState(int state)" ]
}