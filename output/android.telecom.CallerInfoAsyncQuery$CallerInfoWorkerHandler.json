{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/CallerInfoAsyncQuery.java",
  "packageName" : "android.telecom",
  "className" : "CallerInfoWorkerHandler",
  "comment" : "\n         * Our own query worker thread.\n         *\n         * This thread handles the messages enqueued in the looper.  The normal sequence\n         * of events is that a new query shows up in the looper queue, followed by 0 or\n         * more add listener requests, and then an end request.  Of course, these requests\n         * can be interlaced with requests from other tokens, but is irrelevant to this\n         * handler since the handler has no state.\n         *\n         * Note that we depend on the queue to keep things in order; in other words, the\n         * looper queue must be FIFO with respect to input from the synchronous startQuery\n         * calls and output to this handleMessage call.\n         *\n         * This use of the queue is required because CallerInfo objects may be accessed\n         * multiple times before the query is complete.  All accesses (listeners) must be\n         * queued up and informed in order when the query is complete.\n         ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void handleMessage(Message msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleGeoDescription(Message msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void handleMessage(Message msg)", "private void handleGeoDescription(Message msg)" ],
  "variableNames" : [ ]
}