{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/EscapeTransliterator.java",
  "packageName" : "android.icu.text",
  "className" : "EscapeTransliterator",
  "comment" : "\n * A transliterator that converts Unicode characters to an escape\n * form.  Examples of escape forms are \"U+4E01\" and \"&#x10FFFF;\".\n * Escape forms have a prefix and suffix, either of which may be\n * empty, a radix, typically 16 or 10, a minimum digit count,\n * typically 1, 4, or 8, and a boolean that specifies whether\n * supplemental characters are handled as 32-bit code points or as two\n * 16-bit code units.  Most escape forms handle 32-bit code points,\n * but some, such as the Java form, intentionally break them into two\n * surrogate pairs, for backward compatibility.\n *\n * <p>Some escape forms actually have two different patterns, one for\n * BMP characters (0..FFFF) and one for supplements (>FFFF).  To\n * handle this, a second EscapeTransliterator may be defined that\n * specifies the pattern to be produced for supplementals.  An example\n * of a form that requires this is the C form, which uses \"\\\\uFFFF\"\n * for BMP characters and \"\\\\U0010FFFF\" for supplementals.\n *\n * <p>This class is package private.  It registers several standard\n * variants with the system which are then accessed via their IDs.\n *\n * @author Alan Liu\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "prefix",
    "type" : "String",
    "comment" : "\n     * The prefix of the escape form; may be empty, but usually isn't.\n     * May not be null.\n     ",
    "links" : [ ]
  }, {
    "name" : "suffix",
    "type" : "String",
    "comment" : "\n     * The prefix of the escape form; often empty.  May not be null.\n     ",
    "links" : [ ]
  }, {
    "name" : "radix",
    "type" : "int",
    "comment" : "\n     * The radix to display the number in.  Typically 16 or 10.  Must\n     * be in the range 2 to 36.\n     ",
    "links" : [ ]
  }, {
    "name" : "minDigits",
    "type" : "int",
    "comment" : "\n     * The minimum number of digits.  Typically 1, 4, or 8.  Values\n     * less than 1 are equivalent to 1.\n     ",
    "links" : [ ]
  }, {
    "name" : "grokSupplementals",
    "type" : "boolean",
    "comment" : "\n     * If true, supplementals are handled as 32-bit code points.  If\n     * false, they are handled as two 16-bit code units.\n     ",
    "links" : [ ]
  }, {
    "name" : "supplementalHandler",
    "type" : "EscapeTransliterator",
    "comment" : "\n     * The form to be used for supplementals.  If this is null then\n     * the same form is used for BMP characters and supplementals.  If\n     * this is not null and if grokSupplementals is true then the\n     * prefix, suffix, radix, and minDigits of this object are used\n     * for supplementals.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static void register()",
    "returnType" : "void",
    "comment" : "\n     * Registers standard variants with the system.  Called by\n     * Transliterator during initialization.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void handleTransliterate(Replaceable text, Position pos, boolean incremental)",
    "returnType" : "void",
    "comment" : "\n     * Implements {@link Transliterator#handleTransliterate}.\n     ",
    "links" : [ "android.icu.text.Transliterator#handleTransliterate" ]
  }, {
    "name" : "public void addSourceTargetSet(UnicodeSet inputFilter, UnicodeSet sourceSet, UnicodeSet targetSet)",
    "returnType" : "void",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.Transliterator#addSourceTargetSet(android.icu.text.UnicodeSet, android.icu.text.UnicodeSet, android.icu.text.UnicodeSet)\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static void register()", "protected void handleTransliterate(Replaceable text, Position pos, boolean incremental)", "public void addSourceTargetSet(UnicodeSet inputFilter, UnicodeSet sourceSet, UnicodeSet targetSet)" ],
  "variableNames" : [ "prefix", "suffix", "radix", "minDigits", "grokSupplementals", "supplementalHandler" ]
}