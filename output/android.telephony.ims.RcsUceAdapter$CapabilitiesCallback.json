{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/RcsUceAdapter.java",
  "packageName" : "android.telephony.ims",
  "className" : "CapabilitiesCallback",
  "comment" : "\n     * A callback for the response to a UCE request. The method\n     * {@link CapabilitiesCallback#onCapabilitiesReceived} will be called zero or more times as the\n     * capabilities are fetched from multiple sources, both cached on the device and on the network.\n     * <p>\n     * This request will take a varying amount of time depending on if the contacts requested are\n     * cached or if it requires a network query. The timeout time of these requests can vary\n     * depending on the network, however in poor cases it could take up to a minute for a request\n     * to timeout. In that time, only a subset of capabilities may have been retrieved.\n     * <p>\n     * After {@link CapabilitiesCallback#onComplete} or {@link CapabilitiesCallback#onError} has\n     * been called, the reference to this callback will be discarded on the service side.\n     * @see #requestCapabilities(Collection, Executor, CapabilitiesCallback)\n     * @hide\n     ",
  "links" : [ "#onError", "#onComplete", "#onCapabilitiesReceived" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onCapabilitiesReceived(@NonNull List<RcsContactUceCapability> contactCapabilities)",
    "returnType" : "void",
    "comment" : "\n         * The pending capability request has completed successfully for one or more of the\n         * requested contacts.\n         * This may be called one or more times before the request is fully completed, as\n         * capabilities may need to be fetched from multiple sources both on device and on the\n         * network. Once the capabilities of all the requested contacts have been received,\n         * {@link #onComplete()} will be called. If there was an error during the capability\n         * exchange process, {@link #onError(int, long)} will be called instead.\n         * @param contactCapabilities List of capabilities associated with each contact requested.\n         ",
    "links" : [ "#onComplete()", "#onError(int" ]
  }, {
    "name" : " void onComplete()",
    "returnType" : "void",
    "comment" : "\n         * Called when the pending request has completed successfully due to all requested contacts\n         * information being delivered. The callback {@link #onCapabilitiesReceived(List)} will be\n         * called one or more times and will contain the contacts in the request that the device has\n         * received capabilities for.\n         *\n         * @see #onComplete(SipDetails) onComplete(SipDetails) provides more information related to\n         * the underlying SIP transaction used to perform the capabilities exchange. Either this\n         * method or the alternate method should be implemented to determine when the request has\n         * completed successfully.\n         ",
    "links" : [ "#onCapabilitiesReceived(List)" ]
  }, {
    "name" : " void onError(@ErrorCode int errorCode, long retryIntervalMillis)",
    "returnType" : "void",
    "comment" : "\n         * The pending request has resulted in an error and may need to be retried, depending on the\n         * error code.\n         * @param errorCode The reason for the framework being unable to process the request.\n         * @param retryIntervalMillis The time in milliseconds the requesting application should\n         * wait before retrying, if non-zero.\n         *\n         * @see #onError(int, long, SipDetails) onError(int, long, SipDetails) provides more\n         * information related to the underlying SIP transaction that resulted in an error. Either\n         * this method or the alternative method should be implemented to determine when the\n         * request has completed with an error.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onComplete(@Nullable SipDetails details)",
    "returnType" : "void",
    "comment" : "\n         * Called when the pending request has completed successfully due to all requested contacts\n         * information being delivered. The callback {@link #onCapabilitiesReceived(List)} will be\n         * called one or more times and will contain the contacts in the request that the device has\n         * received capabilities for.\n         *\n         * This method contains more information about the underlying SIP transaction if it exists.\n         * If this information is not needed, {@link #onComplete()} can be implemented\n         * instead.\n         *\n         * @param details The SIP information related to this request if the device supports\n         *                supplying this information. This parameter will be {@code null} if this\n         *                information is not available.\n         ",
    "links" : [ "#onComplete()", "#onCapabilitiesReceived(List)" ]
  }, {
    "name" : " void onError(@ErrorCode int errorCode, long retryIntervalMillis, @Nullable SipDetails details)",
    "returnType" : "void",
    "comment" : "\n         * The pending request has resulted in an error and may need to be retried, depending on the\n         * error code.\n         *\n         * This method contains more information about the underlying SIP transaction if it exists.\n         * If this information is not needed, {@link #onError(int, long)} can be implemented\n         * instead.\n         * @param errorCode The reason for the framework being unable to process the request.\n         * @param retryIntervalMillis The time in milliseconds the requesting application should\n         * wait before retrying, if non-zero.\n         * @param details The SIP information related to this request if the device supports\n         *                supplying this information. This parameter will be {@code null} if this\n         *                information is not available.\n         ",
    "links" : [ "#onError(int" ]
  } ],
  "methodNames" : [ " void onCapabilitiesReceived(@NonNull List<RcsContactUceCapability> contactCapabilities)", " void onComplete()", " void onError(@ErrorCode int errorCode, long retryIntervalMillis)", " void onComplete(@Nullable SipDetails details)", " void onError(@ErrorCode int errorCode, long retryIntervalMillis, @Nullable SipDetails details)" ],
  "variableNames" : [ ]
}