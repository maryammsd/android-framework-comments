{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/bluetooth/le/ScanSettings.java",
  "packageName" : "android.bluetooth.le",
  "className" : "ScanSettings",
  "comment" : "\n * Bluetooth LE scan settings are passed to {@link BluetoothLeScanner#startScan} to define the\n * parameters for the scan.\n ",
  "variables" : [ {
    "name" : "SCAN_MODE_OPPORTUNISTIC",
    "type" : "int",
    "comment" : "\n     * A special Bluetooth LE scan mode. Applications using this scan mode will passively listen for\n     * other scan results without starting BLE scans themselves.\n     ",
    "links" : [ ]
  }, {
    "name" : "SCAN_MODE_LOW_POWER",
    "type" : "int",
    "comment" : "\n     * Perform Bluetooth LE scan in low power mode. This is the default scan mode as it consumes the\n     * least power. This mode is enforced if the scanning application is not in foreground.\n     ",
    "links" : [ ]
  }, {
    "name" : "SCAN_MODE_BALANCED",
    "type" : "int",
    "comment" : "\n     * Perform Bluetooth LE scan in balanced power mode. Scan results are returned at a rate that\n     * provides a good trade-off between scan frequency and power consumption.\n     ",
    "links" : [ ]
  }, {
    "name" : "SCAN_MODE_LOW_LATENCY",
    "type" : "int",
    "comment" : "\n     * Scan using highest duty cycle. It's recommended to only use this mode when the application is\n     * running in the foreground.\n     ",
    "links" : [ ]
  }, {
    "name" : "CALLBACK_TYPE_ALL_MATCHES",
    "type" : "int",
    "comment" : "\n     * Trigger a callback for every Bluetooth advertisement found that matches the filter criteria.\n     * If no filter is active, all advertisement packets are reported.\n     ",
    "links" : [ ]
  }, {
    "name" : "CALLBACK_TYPE_FIRST_MATCH",
    "type" : "int",
    "comment" : "\n     * A result callback is only triggered for the first advertisement packet received that matches\n     * the filter criteria.\n     ",
    "links" : [ ]
  }, {
    "name" : "CALLBACK_TYPE_MATCH_LOST",
    "type" : "int",
    "comment" : "\n     * Receive a callback when advertisements are no longer received from a device that has been\n     * previously reported by a first match callback.\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_NUM_ONE_ADVERTISEMENT",
    "type" : "int",
    "comment" : "\n     * Match one advertisement per filter\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_NUM_FEW_ADVERTISEMENT",
    "type" : "int",
    "comment" : "\n     * Match few advertisement per filter, depends on current capability and availibility of\n     * the resources in hw\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_NUM_MAX_ADVERTISEMENT",
    "type" : "int",
    "comment" : "\n     * Match as many advertisement per filter as hw could allow, depends on current\n     * capability and availibility of the resources in hw\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_MODE_AGGRESSIVE",
    "type" : "int",
    "comment" : "\n     * In Aggressive mode, hw will determine a match sooner even with feeble signal strength\n     * and few number of sightings/match in a duration.\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_MODE_STICKY",
    "type" : "int",
    "comment" : "\n     * For sticky mode, higher threshold of signal strength and sightings is required\n     * before reporting by hw\n     ",
    "links" : [ ]
  }, {
    "name" : "SCAN_RESULT_TYPE_FULL",
    "type" : "int",
    "comment" : "\n     * Request full scan results which contain the device, rssi, advertising data, scan response\n     * as well as the scan timestamp.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "SCAN_RESULT_TYPE_ABBREVIATED",
    "type" : "int",
    "comment" : "\n     * Request abbreviated scan results which contain the device, rssi and scan timestamp.\n     * <p>\n     * <b>Note:</b> It is possible for an application to get more scan results than it asked for, if\n     * there are multiple apps using this type.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "PHY_LE_ALL_SUPPORTED",
    "type" : "int",
    "comment" : "\n     * Use all supported PHYs for scanning.\n     * This will check the controller capabilities, and start\n     * the scan on 1Mbit and LE Coded PHYs if supported, or on\n     * the 1Mbit PHY only.\n     ",
    "links" : [ ]
  }, {
    "name" : "mScanMode",
    "type" : "int",
    "comment" : " Bluetooth LE scan mode.",
    "links" : [ ]
  }, {
    "name" : "mCallbackType",
    "type" : "int",
    "comment" : " Bluetooth LE scan callback type",
    "links" : [ ]
  }, {
    "name" : "mScanResultType",
    "type" : "int",
    "comment" : " Bluetooth LE scan result type",
    "links" : [ ]
  }, {
    "name" : "mReportDelayMillis",
    "type" : "long",
    "comment" : " Time of delay for reporting the scan result",
    "links" : [ ]
  }, {
    "name" : "mMatchMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumOfMatchesPerFilter",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLegacy",
    "type" : "boolean",
    "comment" : " Include only legacy advertising results",
    "links" : [ ]
  }, {
    "name" : "mPhy",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ScanSettings>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getScanMode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCallbackType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getScanResultType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMatchMode()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNumOfMatches()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getLegacy()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether only legacy advertisements will be returned.\n     * Legacy advertisements include advertisements as specified\n     * by the Bluetooth core specification 4.2 and below.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPhy()",
    "returnType" : "int",
    "comment" : "\n     * Returns the physical layer used during a scan.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getReportDelayMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns report delay timestamp based on the device clock.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "SCAN_MODE_OPPORTUNISTIC", "SCAN_MODE_LOW_POWER", "SCAN_MODE_BALANCED", "SCAN_MODE_LOW_LATENCY", "CALLBACK_TYPE_ALL_MATCHES", "CALLBACK_TYPE_FIRST_MATCH", "CALLBACK_TYPE_MATCH_LOST", "MATCH_NUM_ONE_ADVERTISEMENT", "MATCH_NUM_FEW_ADVERTISEMENT", "MATCH_NUM_MAX_ADVERTISEMENT", "MATCH_MODE_AGGRESSIVE", "MATCH_MODE_STICKY", "SCAN_RESULT_TYPE_FULL", "SCAN_RESULT_TYPE_ABBREVIATED", "PHY_LE_ALL_SUPPORTED", "mScanMode", "mCallbackType", "mScanResultType", "mReportDelayMillis", "mMatchMode", "mNumOfMatchesPerFilter", "mLegacy", "mPhy", "CREATOR" ],
  "methodNames" : [ "public int getScanMode()", "public int getCallbackType()", "public int getScanResultType()", "public int getMatchMode()", "public int getNumOfMatches()", "public boolean getLegacy()", "public int getPhy()", "public long getReportDelayMillis()", "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()" ]
}