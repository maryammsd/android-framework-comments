{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/spec/XECPrivateKeySpec.java",
  "packageName" : "java.security.spec",
  "className" : "XECPrivateKeySpec",
  "comment" : "\n * A class representing elliptic curve private keys as defined in RFC 7748,\n * including the curve and other algorithm parameters. The private key is\n * represented as an encoded scalar value. The decoding procedure defined in\n * the RFC includes an operation that forces certain bits of the key to either\n * 1 or 0. This operation is known as \"pruning\" or \"clamping\" the private key.\n * All arrays in this spec are unpruned, and implementations will need to prune\n * the array before using it in any numerical operations.\n *\n * @since 11\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "params",
    "type" : "AlgorithmParameterSpec",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "scalar",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public AlgorithmParameterSpec getParams()",
    "returnType" : "AlgorithmParameterSpec",
    "comment" : "\n     * Get the algorithm parameters that define the curve and other settings.\n     *\n     * @return the algorithm parameters\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getScalar()",
    "returnType" : "byte[]",
    "comment" : "\n     * Get the scalar value encoded as an unpruned byte array. A new copy of\n     * the array is returned each time this method is called.\n     *\n     * @return the unpruned encoded scalar value\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public AlgorithmParameterSpec getParams()", "public byte[] getScalar()" ],
  "variableNames" : [ "params", "scalar" ]
}