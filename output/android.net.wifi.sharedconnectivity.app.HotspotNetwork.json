{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/sharedconnectivity/app/HotspotNetwork.java",
  "packageName" : "android.net.wifi.sharedconnectivity.app",
  "className" : "HotspotNetwork",
  "comment" : "\n * A data class representing a hotspot network.\n * This class is used in IPC calls between the implementer of {@link SharedConnectivityService} and\n * the consumers of {@link com.android.wifitrackerlib}.\n *\n * @hide\n ",
  "links" : [ "android.net.wifi.sharedconnectivity.service.SharedConnectivityService", "com.android.wifitrackerlib" ],
  "variables" : [ {
    "name" : "NETWORK_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Remote device is connected to the internet via an unknown connection.\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_TYPE_CELLULAR",
    "type" : "int",
    "comment" : "\n     * Remote device is connected to the internet via a cellular connection.\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_TYPE_WIFI",
    "type" : "int",
    "comment" : "\n     * Remote device is connected to the internet via a Wi-Fi connection.\n     ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_TYPE_ETHERNET",
    "type" : "int",
    "comment" : "\n     * Remote device is connected to the internet via an ethernet connection.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDeviceId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkProviderInfo",
    "type" : "NetworkProviderInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHotspotSsid",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHotspotBssid",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHotspotSecurityTypes",
    "type" : "ArraySet<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<HotspotNetwork>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static void validate(long deviceId, @NetworkType int networkType, String networkName, NetworkProviderInfo networkProviderInfo)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getDeviceId()",
    "returnType" : "long",
    "comment" : "\n     * Gets the remote device ID.\n     *\n     * @return Returns the locally unique ID for this Hotspot network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public NetworkProviderInfo getNetworkProviderInfo()",
    "returnType" : "NetworkProviderInfo",
    "comment" : "\n     * Gets information about the device providing connectivity.\n     *\n     * @return Returns the information of the device providing the Hotspot network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getHostNetworkType()",
    "returnType" : "int",
    "comment" : "\n     * Gets the network type that the remote device is connected to.\n     *\n     * @return Returns the network type as represented by IntDef {@link NetworkType}.\n     ",
    "links" : [ "NetworkType" ]
  }, {
    "name" : "public String getNetworkName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the display name of the network the remote device is connected to.\n     *\n     * @return Returns the network display name. (e.g. \"Google Fi\", \"Hotel WiFi\", \"Ethernet\")\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getHotspotSsid()",
    "returnType" : "String",
    "comment" : "\n     * Gets the hotspot SSID being broadcast by the remote device, or null if hotspot is off.\n     *\n     * @return Returns the SSID of the hotspot. Surrounded by double quotes if UTF-8.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getHotspotBssid()",
    "returnType" : "String",
    "comment" : "\n     * Gets the hotspot BSSID being broadcast by the remote device, or null if hotspot is off.\n     *\n     * @return Returns the BSSID of the hotspot.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<Integer> getHotspotSecurityTypes()",
    "returnType" : "Set<Integer>",
    "comment" : "\n     * Gets the hotspot security types supported by the remote device.\n     *\n     * @return Returns a set of the security types supported by the hotspot.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n     * Gets the extras Bundle.\n     *\n     * @return Returns a Bundle object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static HotspotNetwork readFromParcel(@NonNull Parcel in)",
    "returnType" : "HotspotNetwork",
    "comment" : "\n     * Creates a {@link HotspotNetwork} object from a parcel.\n     *\n     * @hide\n     ",
    "links" : [ "android.net.wifi.sharedconnectivity.app.HotspotNetwork" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static void validate(long deviceId, @NetworkType int networkType, String networkName, NetworkProviderInfo networkProviderInfo)", "public long getDeviceId()", "public NetworkProviderInfo getNetworkProviderInfo()", "public int getHostNetworkType()", "public String getNetworkName()", "public String getHotspotSsid()", "public String getHotspotBssid()", "public Set<Integer> getHotspotSecurityTypes()", "public Bundle getExtras()", "public boolean equals(Object obj)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public static HotspotNetwork readFromParcel(@NonNull Parcel in)", "public String toString()" ],
  "variableNames" : [ "NETWORK_TYPE_UNKNOWN", "NETWORK_TYPE_CELLULAR", "NETWORK_TYPE_WIFI", "NETWORK_TYPE_ETHERNET", "mDeviceId", "mNetworkProviderInfo", "mNetworkType", "mNetworkName", "mHotspotSsid", "mHotspotBssid", "mHotspotSecurityTypes", "mExtras", "CREATOR" ]
}