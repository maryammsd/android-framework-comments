{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/widget/SimpleExpandableListAdapter.java",
  "packageName" : "android.widget",
  "className" : "SimpleExpandableListAdapter",
  "comment" : "\n * An easy adapter to map static data to group and child views defined in an XML\n * file. You can separately specify the data backing the group as a List of\n * Maps. Each entry in the ArrayList corresponds to one group in the expandable\n * list. The Maps contain the data for each row. You also specify an XML file\n * that defines the views used to display a group, and a mapping from keys in\n * the Map to specific views. This process is similar for a child, except it is\n * one-level deeper so the data backing is specified as a List<List<Map>>,\n * where the first List corresponds to the group of the child, the second List\n * corresponds to the position of the child within the group, and finally the\n * Map holds the data for that particular child.\n ",
  "variables" : [ {
    "name" : "mGroupData",
    "type" : "List<? extends Map<String, ?>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExpandedGroupLayout",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCollapsedGroupLayout",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGroupFrom",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGroupTo",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChildData",
    "type" : "List<? extends List<? extends Map<String, ?>>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChildLayout",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastChildLayout",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChildFrom",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChildTo",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInflater",
    "type" : "LayoutInflater",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Object getChild(int groupPosition, int childPosition)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getChildId(int groupPosition, int childPosition)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View newChildView(boolean isLastChild, ViewGroup parent)",
    "returnType" : "View",
    "comment" : "\n     * Instantiates a new View for a child.\n     * @param isLastChild Whether the child is the last child within its group.\n     * @param parent The eventual parent of this new View.\n     * @return A new child View\n     ",
    "links" : [ ]
  }, {
    "name" : "private void bindView(View view, Map<String, ?> data, String[] from, int[] to)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getChildrenCount(int groupPosition)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object getGroup(int groupPosition)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getGroupCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getGroupId(int groupPosition)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View newGroupView(boolean isExpanded, ViewGroup parent)",
    "returnType" : "View",
    "comment" : "\n     * Instantiates a new View for a group.\n     * @param isExpanded Whether the group is currently expanded.\n     * @param parent The eventual parent of this new View.\n     * @return A new group View\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isChildSelectable(int groupPosition, int childPosition)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasStableIds()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mGroupData", "mExpandedGroupLayout", "mCollapsedGroupLayout", "mGroupFrom", "mGroupTo", "mChildData", "mChildLayout", "mLastChildLayout", "mChildFrom", "mChildTo", "mInflater" ],
  "methodNames" : [ "public Object getChild(int groupPosition, int childPosition)", "public long getChildId(int groupPosition, int childPosition)", "public View getChildView(int groupPosition, int childPosition, boolean isLastChild, View convertView, ViewGroup parent)", "public View newChildView(boolean isLastChild, ViewGroup parent)", "private void bindView(View view, Map<String, ?> data, String[] from, int[] to)", "public int getChildrenCount(int groupPosition)", "public Object getGroup(int groupPosition)", "public int getGroupCount()", "public long getGroupId(int groupPosition)", "public View getGroupView(int groupPosition, boolean isExpanded, View convertView, ViewGroup parent)", "public View newGroupView(boolean isExpanded, ViewGroup parent)", "public boolean isChildSelectable(int groupPosition, int childPosition)", "public boolean hasStableIds()" ]
}