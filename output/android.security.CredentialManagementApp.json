{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/CredentialManagementApp.java",
  "packageName" : "android.security",
  "className" : "CredentialManagementApp",
  "comment" : "\n * The credential management app has the ability to manage the user's KeyChain credentials on\n * unmanaged devices. {@link KeyChain#createManageCredentialsIntent} should be used by an app to\n * request to become the credential management app. The user must approve this request before the\n * app can manage the user's credentials.\n * <p>\n * Note: there can only be one credential management on the device. If another app requests to\n * become the credential management app and the user approves, then the existing credential\n * management app will no longer be able to manage credentials.\n * <p>\n * The requesting credential management app should include its authentication policy in the\n * requesting intent. The authentication policy declares which certificates should be used for a\n * given list of apps and URIs.\n *\n * @hide\n * @see AppUriAuthenticationPolicy\n ",
  "links" : [ "android.security.KeyChain#createManageCredentialsIntent" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KEY_PACKAGE_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "\n     * The credential management app's package name\n     ",
    "links" : [ ]
  }, {
    "name" : "mAuthenticationPolicy",
    "type" : "AppUriAuthenticationPolicy",
    "comment" : "\n     * The mappings from an app and list of URIs to a list of aliases, which will be used for\n     * authentication.\n     * <p>\n     * appPackageName -> uri -> alias\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the package name of the credential management app.\n     ",
    "links" : [ ]
  }, {
    "name" : "public AppUriAuthenticationPolicy getAuthenticationPolicy()",
    "returnType" : "AppUriAuthenticationPolicy",
    "comment" : "\n     * Returns the authentication policy of the credential management app.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAuthenticationPolicy(@Nullable AppUriAuthenticationPolicy authenticationPolicy)",
    "returnType" : "void",
    "comment" : "\n     * Sets the authentication policy of the credential management app.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CredentialManagementApp readFromXml(@NonNull XmlPullParser parser)",
    "returnType" : "CredentialManagementApp",
    "comment" : "\n     * Restore a previously saved {@link CredentialManagementApp} from XML.\n     ",
    "links" : [ "android.security.CredentialManagementApp" ]
  }, {
    "name" : "public void writeToXml(@NonNull XmlSerializer out) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Save the {@link CredentialManagementApp} to XML.\n     ",
    "links" : [ "android.security.CredentialManagementApp" ]
  } ],
  "methodNames" : [ "public String getPackageName()", "public AppUriAuthenticationPolicy getAuthenticationPolicy()", "public void setAuthenticationPolicy(@Nullable AppUriAuthenticationPolicy authenticationPolicy)", "public static CredentialManagementApp readFromXml(@NonNull XmlPullParser parser)", "public void writeToXml(@NonNull XmlSerializer out) throws IOException" ],
  "variableNames" : [ "TAG", "KEY_PACKAGE_NAME", "mPackageName", "mAuthenticationPolicy" ]
}