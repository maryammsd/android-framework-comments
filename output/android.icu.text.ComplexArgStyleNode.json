{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/MessagePatternUtil.java",
  "packageName" : "android.icu.text",
  "className" : "ComplexArgStyleNode",
  "comment" : "\n     * A Node representing details of the argument style of a complex argument.\n     * (Which is a choice/plural/select argument which selects among nested messages.)\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "argType",
    "type" : "MessagePattern.ArgType",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "offset",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "explicitOffset",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "list",
    "type" : "List<VariantNode>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public MessagePattern.ArgType getArgType()",
    "returnType" : "MessagePattern.ArgType",
    "comment" : "\n         * @return the argument type (same as getArgType() on the parent ArgNode)\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasExplicitOffset()",
    "returnType" : "boolean",
    "comment" : "\n         * @return true if this is a plural style with an explicit offset\n         ",
    "links" : [ ]
  }, {
    "name" : "public double getOffset()",
    "returnType" : "double",
    "comment" : "\n         * @return the plural offset, or 0 if this is not a plural style or\n         *         the offset is explicitly or implicitly 0\n         ",
    "links" : [ ]
  }, {
    "name" : "public List<VariantNode> getVariants()",
    "returnType" : "List<VariantNode>",
    "comment" : "\n         * @return the list of variants: the nested messages with their selection criteria\n         ",
    "links" : [ ]
  }, {
    "name" : "public VariantNode getVariantsByType(List<VariantNode> numericVariants, List<VariantNode> keywordVariants)",
    "returnType" : "VariantNode",
    "comment" : "\n         * Separates the variants by type.\n         * Intended for use with plural and select argument styles,\n         * not useful for choice argument styles.\n         *\n         * <p>Both parameters are used only for output, and are first cleared.\n         * @param numericVariants Variants with numeric-value selectors (if any) are added here.\n         *        Can be null for a select argument style.\n         * @param keywordVariants Variants with keyword selectors, except \"other\", are added here.\n         *        For a plural argument, if this list is empty after the call, then\n         *        all variants except \"other\" have explicit values\n         *        and PluralRules need not be called.\n         * @return the \"other\" variant (the first one if there are several),\n         *         null if none (choice style)\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n         * {@inheritDoc}\n         ",
    "links" : [ ]
  }, {
    "name" : "private void addVariant(VariantNode variant)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ComplexArgStyleNode freeze()",
    "returnType" : "ComplexArgStyleNode",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public MessagePattern.ArgType getArgType()", "public boolean hasExplicitOffset()", "public double getOffset()", "public List<VariantNode> getVariants()", "public VariantNode getVariantsByType(List<VariantNode> numericVariants, List<VariantNode> keywordVariants)", "public String toString()", "private void addVariant(VariantNode variant)", "private ComplexArgStyleNode freeze()" ],
  "variableNames" : [ "argType", "offset", "explicitOffset", "list" ]
}