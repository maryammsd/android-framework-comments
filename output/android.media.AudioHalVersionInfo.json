{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/AudioHalVersionInfo.java",
  "packageName" : "android.media",
  "className" : "AudioHalVersionInfo",
  "comment" : "\n * Defines the audio HAL version.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "AUDIO_HAL_TYPE_HIDL",
    "type" : "int",
    "comment" : "\n     * Indicate the audio HAL is implemented with HIDL (HAL interface definition language).\n     *\n     * @see <a href=\"https://source.android.com/docs/core/architecture/hidl/\">HIDL</a>\n     *     <p>The value of AUDIO_HAL_TYPE_HIDL should match the value of {@link\n     *     android.media.AudioHalVersion.Type#HIDL}.\n     ",
    "links" : [ "android.media.AudioHalVersion.Type#HIDL" ]
  }, {
    "name" : "AUDIO_HAL_TYPE_AIDL",
    "type" : "int",
    "comment" : "\n     * Indicate the audio HAL is implemented with AIDL (Android Interface Definition Language).\n     *\n     * @see <a href=\"https://source.android.com/docs/core/architecture/aidl/\">AIDL</a>\n     *     <p>The value of AUDIO_HAL_TYPE_AIDL should match the value of {@link\n     *     android.media.AudioHalVersion.Type#AIDL}.\n     ",
    "links" : [ "android.media.AudioHalVersion.Type#AIDL" ]
  }, {
    "name" : "AIDL_1_0",
    "type" : "AudioHalVersionInfo",
    "comment" : " AudioHalVersionInfo object of all valid Audio HAL versions. ",
    "links" : [ ]
  }, {
    "name" : "HIDL_7_1",
    "type" : "AudioHalVersionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HIDL_7_0",
    "type" : "AudioHalVersionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HIDL_6_0",
    "type" : "AudioHalVersionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HIDL_5_0",
    "type" : "AudioHalVersionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HIDL_4_0",
    "type" : "AudioHalVersionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HIDL_2_0",
    "type" : "AudioHalVersionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VERSIONS",
    "type" : "List<AudioHalVersionInfo>",
    "comment" : "\n     * List of all valid Audio HAL versions. This list need to be in sync with sAudioHALVersions\n     * defined in frameworks/av/media/libaudiohal/FactoryHal.cpp.\n     *\n     * Note: update {@link android.media.audio.cts.AudioHalVersionInfoTest} CTS accordingly if\n     * there is a change to supported versions.\n     ",
    "links" : [ "android.media.audio.cts.AudioHalVersionInfoTest" ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHalVersion",
    "type" : "AudioHalVersion",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AudioHalVersionInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getHalType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMajorVersion()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMinorVersion()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String typeToString(@AudioHalType int type)",
    "returnType" : "String",
    "comment" : " String representative of AudioHalVersion.Type ",
    "links" : [ ]
  }, {
    "name" : "private static String toString(@AudioHalType int type, int major, int minor)",
    "returnType" : "String",
    "comment" : " String representative of type, major and minor ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " String representative of this (AudioHalVersionInfo) object ",
    "links" : [ ]
  }, {
    "name" : "public int compareTo(@NonNull AudioHalVersionInfo other)",
    "returnType" : "int",
    "comment" : "\n     * Compare two HAL versions by comparing their index in VERSIONS.\n     *\n     * <p>Normally all AudioHalVersionInfo object to compare should exist in the VERSIONS list. If\n     * both candidates exist in the VERSIONS list, smaller index means newer. Any candidate not\n     * exist in the VERSIONS list will be considered to be oldest version.\n     *\n     * @return 0 if the HAL version is the same as the other HAL version. Positive if the HAL\n     *     version is newer than the other HAL version. Negative if the HAL version is older than\n     *     the other version.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull android.os.Parcel out, int flag)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getHalType()", "public int getMajorVersion()", "public int getMinorVersion()", "private static String typeToString(@AudioHalType int type)", "private static String toString(@AudioHalType int type, int major, int minor)", "public String toString()", "public int compareTo(@NonNull AudioHalVersionInfo other)", "public int describeContents()", "public void writeToParcel(@NonNull android.os.Parcel out, int flag)" ],
  "variableNames" : [ "AUDIO_HAL_TYPE_HIDL", "AUDIO_HAL_TYPE_AIDL", "AIDL_1_0", "HIDL_7_1", "HIDL_7_0", "HIDL_6_0", "HIDL_5_0", "HIDL_4_0", "HIDL_2_0", "VERSIONS", "TAG", "mHalVersion", "CREATOR" ]
}