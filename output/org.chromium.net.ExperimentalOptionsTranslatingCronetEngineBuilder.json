{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/ExperimentalOptionsTranslatingCronetEngineBuilder.java",
  "packageName" : "org.chromium.net",
  "className" : "ExperimentalOptionsTranslatingCronetEngineBuilder",
  "comment" : "\n * An implementation of ICronetEngineBuilder which handles translation of configuration options to\n * json-based experimental options, if necessary.\n *\n * <p>{@hide internal class}\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SUPPORTED_OPTIONS",
    "type" : "Set<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParsedExperimentalOptions",
    "type" : "JSONObject",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExperimentalOptionsPatches",
    "type" : "List<ExperimentalOptionsPatch>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDelegate",
    "type" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ICronetEngineBuilder setQuicOptions(QuicOptions options)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setDnsOptions(DnsOptions options)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setConnectionMigrationOptions(ConnectionMigrationOptions options)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setExperimentalOptions(String options)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected Set<Integer> getSupportedConfigOptions()",
    "returnType" : "Set<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ExperimentalCronetEngine build()",
    "returnType" : "ExperimentalCronetEngine",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static JSONObject parseExperimentalOptions(String jsonString)",
    "returnType" : "JSONObject",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static JSONObject createDefaultIfAbsent(JSONObject jsonObject, String key)",
    "returnType" : "JSONObject",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder getDelegate()",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder addPublicKeyPins(String hostName, Set<byte[]> pinsSha256, boolean includeSubdomains, Date expirationDate)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : " Delegating-only methods",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder addQuicHint(String host, int port, int alternatePort)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enableHttp2(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enableHttpCache(int cacheMode, long maxSize)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enablePublicKeyPinningBypassForLocalTrustAnchors(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enableQuic(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enableSdch(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enableBrotli(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setLibraryLoader(CronetEngine.Builder.LibraryLoader loader)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setStoragePath(String value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setUserAgent(String userAgent)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getDefaultUserAgent()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enableNetworkQualityEstimator(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setThreadPriority(int priority)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ICronetEngineBuilder setQuicOptions(QuicOptions options)", "public ICronetEngineBuilder setDnsOptions(DnsOptions options)", "public ICronetEngineBuilder setConnectionMigrationOptions(ConnectionMigrationOptions options)", "public ICronetEngineBuilder setExperimentalOptions(String options)", "protected Set<Integer> getSupportedConfigOptions()", "public ExperimentalCronetEngine build()", "private static JSONObject parseExperimentalOptions(String jsonString)", "private static JSONObject createDefaultIfAbsent(JSONObject jsonObject, String key)", "public ICronetEngineBuilder getDelegate()", "public ICronetEngineBuilder addPublicKeyPins(String hostName, Set<byte[]> pinsSha256, boolean includeSubdomains, Date expirationDate)", "public ICronetEngineBuilder addQuicHint(String host, int port, int alternatePort)", "public ICronetEngineBuilder enableHttp2(boolean value)", "public ICronetEngineBuilder enableHttpCache(int cacheMode, long maxSize)", "public ICronetEngineBuilder enablePublicKeyPinningBypassForLocalTrustAnchors(boolean value)", "public ICronetEngineBuilder enableQuic(boolean value)", "public ICronetEngineBuilder enableSdch(boolean value)", "public ICronetEngineBuilder enableBrotli(boolean value)", "public ICronetEngineBuilder setLibraryLoader(CronetEngine.Builder.LibraryLoader loader)", "public ICronetEngineBuilder setStoragePath(String value)", "public ICronetEngineBuilder setUserAgent(String userAgent)", "public String getDefaultUserAgent()", "public ICronetEngineBuilder enableNetworkQualityEstimator(boolean value)", "public ICronetEngineBuilder setThreadPriority(int priority)" ],
  "variableNames" : [ "SUPPORTED_OPTIONS", "mParsedExperimentalOptions", "mExperimentalOptionsPatches", "mDelegate" ]
}