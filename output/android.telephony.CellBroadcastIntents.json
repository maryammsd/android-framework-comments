{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/CellBroadcastIntents.java",
  "packageName" : "android.telephony",
  "className" : "CellBroadcastIntents",
  "comment" : "\n * A static helper class used to send Intents with prepopulated flags.\n * <p>\n * This is intended to be used by the CellBroadcastService and does nothing if the caller does not\n * have permission to broadcast {@link Telephony.Sms.Intents.SMS_CB_RECEIVED_ACTION}.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_MESSAGE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ACTION_AREA_INFO_UPDATED",
    "type" : "String",
    "comment" : "\n     * Broadcast intent action for notifying area information has been updated. The information\n     * can be retrieved by {@link CellBroadcastService#getCellBroadcastAreaInfo(int)}. The\n     * associated SIM slot index of updated area information can be retrieved through the extra\n     * {@link SubscriptionManager#EXTRA_SLOT_INDEX}.\n     *\n     * @see SubscriptionManager#EXTRA_SLOT_INDEX\n     ",
    "links" : [ "android.telephony.SubscriptionManager#EXTRA_SLOT_INDEX", "android.telephony.CellBroadcastService#getCellBroadcastAreaInfo(int)" ]
  } ],
  "methods" : [ {
    "name" : "public static void sendSmsCbReceivedBroadcast(@NonNull Context context, @Nullable UserHandle user, @NonNull SmsCbMessage smsCbMessage, @Nullable BroadcastReceiver resultReceiver, @Nullable Handler scheduler, int initialCode, int slotIndex)",
    "returnType" : "void",
    "comment" : "\n     * Broadcasts an SMS_CB_RECEIVED_ACTION intent which can be received by background\n     * BroadcastReceivers. This is only intended to be used by the CellBroadcastService and will\n     * do nothing if the caller does not have permission to broadcast\n     * {@link Telephony.Sms.Intents.SMS_CB_RECEIVED_ACTION}.\n     *\n     * @param context            The context from which to send the broadcast\n     * @param user               The user from which to send the broadcast\n     * @param smsCbMessage       The SmsCbMessage to include with the intent\n     * @param resultReceiver     Your own BroadcastReceiver to treat as the final receiver of the\n     *                           broadcast.\n     * @param scheduler          A custom Handler with which to schedule the resultReceiver\n     *                           callback; if null it will be scheduled in the Context's main\n     *                           thread.\n     * @param initialCode        An initial value for the result code.  Often Activity.RESULT_OK.\n     * @param slotIndex          The slot index to include in the intent\n     ",
    "links" : [ "Telephony.Sms.Intents.SMS_CB_RECEIVED_ACTION" ]
  }, {
    "name" : "private static void putPhoneIdAndSubIdExtra(Context context, Intent intent, int phoneId)",
    "returnType" : "void",
    "comment" : "\n     * Put the phone ID and sub ID into an intent as extras.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int getSubIdForPhone(Context context, int phoneId)",
    "returnType" : "int",
    "comment" : "\n     * Get the subscription ID for a phone ID, or INVALID_SUBSCRIPTION_ID if the phone does not\n     * have an active sub\n     * @param phoneId the phoneId to use\n     * @return the associated sub id\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "EXTRA_MESSAGE", "ACTION_AREA_INFO_UPDATED" ],
  "methodNames" : [ "public static void sendSmsCbReceivedBroadcast(@NonNull Context context, @Nullable UserHandle user, @NonNull SmsCbMessage smsCbMessage, @Nullable BroadcastReceiver resultReceiver, @Nullable Handler scheduler, int initialCode, int slotIndex)", "private static void putPhoneIdAndSubIdExtra(Context context, Intent intent, int phoneId)", "private static int getSubIdForPhone(Context context, int phoneId)" ]
}