{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/LegacySensorManager.java",
  "packageName" : "android.hardware",
  "className" : "LegacyListener",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mValues",
    "type" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTarget",
    "type" : "SensorListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSensors",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mYawfilter",
    "type" : "LmsFilter",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " boolean registerSensor(int legacyType)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean unregisterSensor(int legacyType)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean hasSensors()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean hasOrientationSensor(int sensors)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAccuracyChanged(Sensor sensor, int accuracy)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSensorChanged(SensorEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void mapSensorDataToWindow(int sensor, float[] values, int orientation)",
    "returnType" : "void",
    "comment" : "\n         * Helper function to convert the specified sensor's data to the windows's\n         * coordinate space from the device's coordinate space.\n         *\n         * output: 3,4,5: values in the old API format\n         *         0,1,2: transformed values in the old API format\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "private static int getLegacySensorType(int type)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " boolean registerSensor(int legacyType)", " boolean unregisterSensor(int legacyType)", " boolean hasSensors()", "private static boolean hasOrientationSensor(int sensors)", "public void onAccuracyChanged(Sensor sensor, int accuracy)", "public void onSensorChanged(SensorEvent event)", "private void mapSensorDataToWindow(int sensor, float[] values, int orientation)", "private static int getLegacySensorType(int type)" ],
  "variableNames" : [ "mValues", "mTarget", "mSensors", "mYawfilter" ]
}