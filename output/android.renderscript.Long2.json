{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/renderscript/Long2.java",
  "packageName" : "android.renderscript",
  "className" : "Long2",
  "comment" : "\n * Vector version of the basic long type.\n * Provides two long fields packed.\n *\n * @deprecated Renderscript has been deprecated in API level 31. Please refer to the <a\n * href=\"https://developer.android.com/guide/topics/renderscript/migration-guide\">migration\n * guide</a> for the proposed alternatives.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "x",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "y",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void add(Long2 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 add(Long2 a, Long2 b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void add(long value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 add(Long2 a, long b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sub(Long2 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 sub(Long2 a, Long2 b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sub(long value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 sub(Long2 a, long b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mul(Long2 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 mul(Long2 a, Long2 b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mul(long value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 mul(Long2 a, long b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void div(Long2 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 div(Long2 a, Long2 b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void div(long value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 div(Long2 a, long b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mod(Long2 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector Modulo\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 mod(Long2 a, Long2 b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector Modulo\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mod(long value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector Modulo\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Long2 mod(Long2 a, long b)",
    "returnType" : "Long2",
    "comment" : " @hide\n     * Vector Modulo\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public long length()",
    "returnType" : "long",
    "comment" : " @hide\n     * get vector length\n     *\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void negate()",
    "returnType" : "void",
    "comment" : " @hide\n     * set vector negate\n     ",
    "links" : [ ]
  }, {
    "name" : "public long dotProduct(Long2 a)",
    "returnType" : "long",
    "comment" : " @hide\n     * Vector dot Product\n     *\n     * @param a\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long dotProduct(Long2 a, Long2 b)",
    "returnType" : "long",
    "comment" : " @hide\n     * Vector dot Product\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addMultiple(Long2 a, long factor)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add Multiple\n     *\n     * @param a\n     * @param factor\n     ",
    "links" : [ ]
  }, {
    "name" : "public void set(Long2 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * set vector value by Long2\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setValues(long a, long b)",
    "returnType" : "void",
    "comment" : " @hide\n     * set the vector field value by Long\n     *\n     * @param a\n     * @param b\n     ",
    "links" : [ ]
  }, {
    "name" : "public long elementSum()",
    "returnType" : "long",
    "comment" : " @hide\n     * return the element sum of vector\n     *\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public long get(int i)",
    "returnType" : "long",
    "comment" : " @hide\n     * get the vector field value by index\n     *\n     * @param i\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAt(int i, long value)",
    "returnType" : "void",
    "comment" : " @hide\n     * set the vector field value by index\n     *\n     * @param i\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addAt(int i, long value)",
    "returnType" : "void",
    "comment" : " @hide\n     * add the vector field value by index\n     *\n     * @param i\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public void copyTo(long[] data, int offset)",
    "returnType" : "void",
    "comment" : " @hide\n     * copy the vector to long array\n     *\n     * @param data\n     * @param offset\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void add(Long2 a)", "public static Long2 add(Long2 a, Long2 b)", "public void add(long value)", "public static Long2 add(Long2 a, long b)", "public void sub(Long2 a)", "public static Long2 sub(Long2 a, Long2 b)", "public void sub(long value)", "public static Long2 sub(Long2 a, long b)", "public void mul(Long2 a)", "public static Long2 mul(Long2 a, Long2 b)", "public void mul(long value)", "public static Long2 mul(Long2 a, long b)", "public void div(Long2 a)", "public static Long2 div(Long2 a, Long2 b)", "public void div(long value)", "public static Long2 div(Long2 a, long b)", "public void mod(Long2 a)", "public static Long2 mod(Long2 a, Long2 b)", "public void mod(long value)", "public static Long2 mod(Long2 a, long b)", "public long length()", "public void negate()", "public long dotProduct(Long2 a)", "public static long dotProduct(Long2 a, Long2 b)", "public void addMultiple(Long2 a, long factor)", "public void set(Long2 a)", "public void setValues(long a, long b)", "public long elementSum()", "public long get(int i)", "public void setAt(int i, long value)", "public void addAt(int i, long value)", "public void copyTo(long[] data, int offset)" ],
  "variableNames" : [ "x", "y" ]
}