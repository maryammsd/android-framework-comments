{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothLeCall.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothLeCall",
  "comment" : "\n * Representation of Call\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STATE_INCOMING",
    "type" : "int",
    "comment" : "\n     * A remote party is calling (incoming call).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_DIALING",
    "type" : "int",
    "comment" : "\n     * The process to call the remote party has started but the remote party is not being alerted\n     * (outgoing call).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_ALERTING",
    "type" : "int",
    "comment" : "\n     * A remote party is being alerted (outgoing call).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_ACTIVE",
    "type" : "int",
    "comment" : "\n     * The call is in an active conversation.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_LOCALLY_HELD",
    "type" : "int",
    "comment" : "\n     * The call is connected but held locally. “Locally Held” implies that either the server or the\n     * client can affect the state.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_REMOTELY_HELD",
    "type" : "int",
    "comment" : "\n     * The call is connected but held remotely. “Remotely Held” means that the state is controlled\n     * by the remote party of a call.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_LOCALLY_AND_REMOTELY_HELD",
    "type" : "int",
    "comment" : "\n     * The call is connected but held both locally and remotely.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_OUTGOING_CALL",
    "type" : "int",
    "comment" : "\n     * Whether the call direction is outgoing.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_WITHHELD_BY_SERVER",
    "type" : "int",
    "comment" : "\n     * Whether the call URI and Friendly Name are withheld by server.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_WITHHELD_BY_NETWORK",
    "type" : "int",
    "comment" : "\n     * Whether the call URI and Friendly Name are withheld by network.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mUuid",
    "type" : "UUID",
    "comment" : " Unique UUID that identifies this call ",
    "links" : [ ]
  }, {
    "name" : "mUri",
    "type" : "String",
    "comment" : " Remote Caller URI ",
    "links" : [ ]
  }, {
    "name" : "mFriendlyName",
    "type" : "String",
    "comment" : " Caller friendly name ",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "int",
    "comment" : " Call state ",
    "links" : [ ]
  }, {
    "name" : "mCallFlags",
    "type" : "int",
    "comment" : " Call flags ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<BluetoothLeCall>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a string representation of this BluetoothLeCall.\n     *\n     * <p>Currently this is the UUID.\n     *\n     * @return string representation of this BluetoothLeCall\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public UUID getUuid()",
    "returnType" : "UUID",
    "comment" : "\n     * Returns an UUID of this BluetoothLeCall.\n     *\n     * <p>An UUID is unique identifier of a BluetoothLeCall.\n     *\n     * @return UUID of this BluetoothLeCall\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getUri()",
    "returnType" : "String",
    "comment" : "\n     * Returns a URI of the remote party of this BluetoothLeCall.\n     *\n     * @return string representation of this BluetoothLeCall\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFriendlyName()",
    "returnType" : "String",
    "comment" : "\n     * Returns a friendly name of the call.\n     *\n     * @return friendly name representation of this BluetoothLeCall\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getState()",
    "returnType" : "int",
    "comment" : "\n     * Returns the call state.\n     *\n     * @return the state of this BluetoothLeCall\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCallFlags()",
    "returnType" : "int",
    "comment" : "\n     * Returns the call flags.\n     *\n     * @return call flags\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isIncomingCall()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether the call direction is incoming.\n     *\n     * @return true if incoming call, false otherwise\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean equals(Object o)", "public int hashCode()", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)", "public UUID getUuid()", "public String getUri()", "public String getFriendlyName()", "public int getState()", "public int getCallFlags()", "public boolean isIncomingCall()" ],
  "variableNames" : [ "STATE_INCOMING", "STATE_DIALING", "STATE_ALERTING", "STATE_ACTIVE", "STATE_LOCALLY_HELD", "STATE_REMOTELY_HELD", "STATE_LOCALLY_AND_REMOTELY_HELD", "FLAG_OUTGOING_CALL", "FLAG_WITHHELD_BY_SERVER", "FLAG_WITHHELD_BY_NETWORK", "mUuid", "mUri", "mFriendlyName", "mState", "mCallFlags", "CREATOR" ]
}