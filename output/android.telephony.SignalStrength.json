{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/SignalStrength.java",
  "packageName" : "android.telephony",
  "className" : "SignalStrength",
  "comment" : "\n * Contains phone signal strength related information.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SIGNAL_STRENGTH_NONE_OR_UNKNOWN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SIGNAL_STRENGTH_POOR",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SIGNAL_STRENGTH_MODERATE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SIGNAL_STRENGTH_GOOD",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SIGNAL_STRENGTH_GREAT",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "NUM_SIGNAL_STRENGTH_BINS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "INVALID",
    "type" : "int",
    "comment" : "\n     * Indicates the invalid measures of signal strength.\n     *\n     * For example, this can be returned by {@link #getEvdoDbm()} or {@link #getCdmaDbm()}\n     ",
    "links" : [ "#getCdmaDbm()", "#getEvdoDbm()" ]
  }, {
    "name" : "mTimestampMillis",
    "type" : "long",
    "comment" : " Effectively final. Timestamp is set during construction of SignalStrength",
    "links" : [ ]
  }, {
    "name" : "mLteAsPrimaryInNrNsa",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCdma",
    "type" : "CellSignalStrengthCdma",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGsm",
    "type" : "CellSignalStrengthGsm",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWcdma",
    "type" : "CellSignalStrengthWcdma",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTdscdma",
    "type" : "CellSignalStrengthTdscdma",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLte",
    "type" : "CellSignalStrengthLte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNr",
    "type" : "CellSignalStrengthNr",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SignalStrength>",
    "comment" : "\n     * {@link Parcelable.Creator}\n     *\n     ",
    "links" : [ "Parcelable.Creator" ]
  } ],
  "methods" : [ {
    "name" : "private CellSignalStrength getPrimary()",
    "returnType" : "CellSignalStrength",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<CellSignalStrength> getCellSignalStrengths()",
    "returnType" : "List<CellSignalStrength>",
    "comment" : "\n     * Returns a List of CellSignalStrength Components of this SignalStrength Report.\n     *\n     * Use this API to access underlying\n     * {@link android.telephony.CellSignalStrength CellSignalStrength} objects that provide more\n     * granular information about the SignalStrength report. Only valid (non-empty)\n     * CellSignalStrengths will be returned. The order of any returned elements is not guaranteed,\n     * and the list may contain more than one instance of a CellSignalStrength type.\n     *\n     * @return a List of CellSignalStrength or an empty List if there are no valid measurements.\n     *\n     * @see android.telephony.CellSignalStrength\n     * @see android.telephony.CellSignalStrengthNr\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.CellSignalStrengthTdscdma\n     * @see android.telephony.CellSignalStrengthWcdma\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.CellSignalStrengthGsm\n     ",
    "links" : [ "android.telephony.CellSignalStrength" ]
  }, {
    "name" : "public List<T> getCellSignalStrengths(@NonNull Class<T> clazz)",
    "returnType" : "List<T>",
    "comment" : "\n     * Returns a List of CellSignalStrength Components of this SignalStrength Report.\n     *\n     * Use this API to access underlying\n     * {@link android.telephony.CellSignalStrength CellSignalStrength} objects that provide more\n     * granular information about the SignalStrength report. Only valid (non-empty)\n     * CellSignalStrengths will be returned. The order of any returned elements is not guaranteed,\n     * and the list may contain more than one instance of a CellSignalStrength type.\n     *\n     * @param clazz a class type that extends\n     *        {@link android.telephony.CellSignalStrength CellSignalStrength} to filter possible\n     *        return values.\n     * @return a List of CellSignalStrength or an empty List if there are no valid measurements.\n     *\n     * @see android.telephony.CellSignalStrength\n     * @see android.telephony.CellSignalStrengthNr\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.CellSignalStrengthTdscdma\n     * @see android.telephony.CellSignalStrengthWcdma\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.CellSignalStrengthGsm\n     ",
    "links" : [ "android.telephony.CellSignalStrength" ]
  }, {
    "name" : "public void updateLevel(PersistableBundle cc, ServiceState ss)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "protected void copyFrom(SignalStrength s)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "\n     * {@link Parcelable#writeToParcel}\n     ",
    "links" : [ "android.os.Parcelable#writeToParcel" ]
  }, {
    "name" : "public long getTimestampMillis()",
    "returnType" : "long",
    "comment" : "\n     * @return timestamp in milliseconds since boot for {@link SignalStrength}.\n     * This timestamp reports the approximate time that the signal was measured and reported\n     * by the modem. It can be used to compare the recency of {@link SignalStrength} instances.\n     ",
    "links" : [ "android.telephony.SignalStrength" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * {@link Parcelable#describeContents}\n     ",
    "links" : [ "android.os.Parcelable#describeContents" ]
  }, {
    "name" : "public int getGsmSignalStrength()",
    "returnType" : "int",
    "comment" : "\n     * Get the GSM RSSI in ASU.\n     *\n     * Asu is calculated based on 3GPP RSRP. Refer to 3GPP 27.007 (Ver 10.3.0) Sec 8.69\n     *\n     * @return RSSI in ASU 0..31, 99, or UNAVAILABLE\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthGsm#getAsuLevel}.\n     * @see android.telephony.CellSignalStrengthGsm\n     * @see android.telephony.SignalStrength#getCellSignalStrengths\n     ",
    "links" : [ "android.telephony.CellSignalStrengthGsm#getAsuLevel" ]
  }, {
    "name" : "public int getGsmBitErrorRate()",
    "returnType" : "int",
    "comment" : "\n     * Get the GSM bit error rate (0-7, 99) as defined in TS 27.007 8.5\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthGsm#getBitErrorRate}.\n     *\n     * @see android.telephony.CellSignalStrengthGsm\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     ",
    "links" : [ "android.telephony.CellSignalStrengthGsm#getBitErrorRate" ]
  }, {
    "name" : "public int getCdmaDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the CDMA RSSI value in dBm\n     *\n     * @return the CDMA RSSI value or {@link #INVALID} if invalid\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getCdmaDbm}.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     ",
    "links" : [ "#INVALID", "android.telephony.CellSignalStrengthCdma#getCdmaDbm" ]
  }, {
    "name" : "public int getCdmaEcio()",
    "returnType" : "int",
    "comment" : "\n     * Get the CDMA Ec/Io value in dB*10\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getCdmaEcio}.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     ",
    "links" : [ "android.telephony.CellSignalStrengthCdma#getCdmaEcio" ]
  }, {
    "name" : "public int getEvdoDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the EVDO RSSI value in dBm\n     *\n     * @return the EVDO RSSI value or {@link #INVALID} if invalid\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getEvdoDbm}.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     ",
    "links" : [ "#INVALID", "android.telephony.CellSignalStrengthCdma#getEvdoDbm" ]
  }, {
    "name" : "public int getEvdoEcio()",
    "returnType" : "int",
    "comment" : "\n     * Get the EVDO Ec/Io value in dB*10\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getEvdoEcio}.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     ",
    "links" : [ "android.telephony.CellSignalStrengthCdma#getEvdoEcio" ]
  }, {
    "name" : "public int getEvdoSnr()",
    "returnType" : "int",
    "comment" : "\n     * Get the signal to noise ratio. Valid values are 0-8. 8 is the highest.\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getEvdoSnr}.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     ",
    "links" : [ "android.telephony.CellSignalStrengthCdma#getEvdoSnr" ]
  }, {
    "name" : "public int getLteSignalStrength()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthLte#getRssi}.\n     *\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthLte#getRssi" ]
  }, {
    "name" : "public int getLteRsrp()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthLte#getRsrp}.\n     *\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthLte#getRsrp" ]
  }, {
    "name" : "public int getLteRsrq()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthLte#getRsrq}.\n     *\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthLte#getRsrq" ]
  }, {
    "name" : "public int getLteRssnr()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthLte#getRssnr}.\n     *\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthLte#getRssnr" ]
  }, {
    "name" : "public int getLteCqi()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthLte#getCqi}.\n     *\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthLte#getCqi" ]
  }, {
    "name" : "public int getLevel()",
    "returnType" : "int",
    "comment" : "\n     * Retrieve an abstract level value for the overall signal strength.\n     *\n     * @return a single integer from 0 to 4 representing the general signal quality.\n     *     This may take into account many different radio technology inputs.\n     *     0 represents very poor signal strength\n     *     while 4 represents a very strong signal strength.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the signal level as an asu value with a range dependent on the underlying technology.\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrength#getAsuLevel}. Because the levels vary by technology,\n     *             this method is misleading and should not be used.\n     * @see android.telephony.CellSignalStrength\n     * @see android.telephony.SignalStrength#getCellSignalStrengths\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrength#getAsuLevel" ]
  }, {
    "name" : "public int getDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the signal strength as dBm\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrength#getDbm()}. Because the levels vary by technology,\n     *             this method is misleading and should not be used.\n     * @see android.telephony.CellSignalStrength\n     * @see android.telephony.SignalStrength#getCellSignalStrengths\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrength#getDbm()" ]
  }, {
    "name" : "public int getGsmDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get Gsm signal strength as dBm\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthGsm#getDbm}.\n     *\n     * @see android.telephony.CellSignalStrengthGsm\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthGsm#getDbm" ]
  }, {
    "name" : "public int getGsmLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get gsm as level 0..4\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthGsm#getLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthGsm\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthGsm#getLevel" ]
  }, {
    "name" : "public int getGsmAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the gsm signal level as an asu value between 0..31, 99 is unknown\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthGsm#getAsuLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthGsm\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthGsm#getAsuLevel" ]
  }, {
    "name" : "public int getCdmaLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get cdma as level 0..4\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthCdma#getLevel" ]
  }, {
    "name" : "public int getCdmaAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the cdma signal level as an asu value between 0..31, 99 is unknown\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getAsuLevel}. Since there is no definition of\n     *             ASU for CDMA, the resultant value is Android-specific and is not recommended\n     *             for use.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthCdma#getAsuLevel" ]
  }, {
    "name" : "public int getEvdoLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get Evdo as level 0..4\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getEvdoLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthCdma#getEvdoLevel" ]
  }, {
    "name" : "public int getEvdoAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the evdo signal level as an asu value between 0..31, 99 is unknown\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthCdma#getEvdoAsuLevel}. Since there is no definition of\n     *             ASU for EvDO, the resultant value is Android-specific and is not recommended\n     *             for use.\n     *\n     * @see android.telephony.CellSignalStrengthCdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthCdma#getEvdoAsuLevel" ]
  }, {
    "name" : "public int getLteDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get LTE as dBm\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthLte#getDbm}.\n     *\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthLte#getDbm" ]
  }, {
    "name" : "public int getLteLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get LTE as level 0..4\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthLte#getLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthLte#getLevel" ]
  }, {
    "name" : "public int getLteAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the LTE signal level as an asu value between 0..97, 99 is unknown\n     * Asu is calculated based on 3GPP RSRP. Refer to 3GPP 27.007 (Ver 10.3.0) Sec 8.69\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthLte#getAsuLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthLte\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthLte#getAsuLevel" ]
  }, {
    "name" : "public boolean isGsm()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if this is for GSM\n     *\n     * @deprecated This method returns true if there are any 3gpp type SignalStrength elements in\n     *             this SignalStrength report or if the report contains no valid SignalStrength\n     *             information. Instead callers should use\n     *             {@link android.telephony.SignalStrength#getCellSignalStrengths\n     *             getCellSignalStrengths()} to determine which types of information are contained\n     *             in the SignalStrength report.\n     ",
    "links" : [ "android.telephony.SignalStrength#getCellSignalStrengthsgetCellSignalStrengths()" ]
  }, {
    "name" : "public int getTdScdmaDbm()",
    "returnType" : "int",
    "comment" : "\n     * @return get TD-SCDMA dBm\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthTdscdma#getDbm}.\n     *\n     * @see android.telephony.CellSignalStrengthTdscdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthTdscdma#getDbm" ]
  }, {
    "name" : "public int getTdScdmaLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get TD-SCDMA as level 0..4\n     * Range : 25 to 120\n     * INT_MAX: 0x7FFFFFFF denotes invalid value\n     * Reference: 3GPP TS 25.123, section 9.1.1.1\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthTdscdma#getLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthTdscdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthTdscdma#getLevel" ]
  }, {
    "name" : "public int getTdScdmaAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the TD-SCDMA signal level as an asu value.\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthTdscdma#getAsuLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthTdscdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthTdscdma#getAsuLevel" ]
  }, {
    "name" : "public int getWcdmaRscp()",
    "returnType" : "int",
    "comment" : "\n     * Gets WCDMA RSCP as a dBm value between -120 and -24, as defined in TS 27.007 8.69.\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthWcdma#getRscp}.\n     *\n     * @see android.telephony.CellSignalStrengthWcdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthWcdma#getRscp" ]
  }, {
    "name" : "public int getWcdmaAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the WCDMA signal level as an ASU value between 0-96, 255 is unknown\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthWcdma#getAsuLevel}.\n     *\n     * @see android.telephony.CellSignalStrengthWcdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthWcdma#getAsuLevel" ]
  }, {
    "name" : "public int getWcdmaDbm()",
    "returnType" : "int",
    "comment" : "\n     * Gets WCDMA signal strength as a dBm value between -120 and -24, as defined in TS 27.007 8.69.\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthWcdma#getDbm}.\n     *\n     * @see android.telephony.CellSignalStrengthWcdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthWcdma#getDbm" ]
  }, {
    "name" : "public int getWcdmaLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get WCDMA as level 0..4\n     *\n     * @deprecated this information should be retrieved from\n     *             {@link CellSignalStrengthWcdma#getDbm}.\n     *\n     * @see android.telephony.CellSignalStrengthWcdma\n     * @see android.telephony.SignalStrength#getCellSignalStrengths()\n     * @hide\n     ",
    "links" : [ "android.telephony.CellSignalStrengthWcdma#getDbm" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * @return hash code\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if the signal strengths are the same\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * @return string representation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void fillInNotifierBundle(Bundle m)",
    "returnType" : "void",
    "comment" : "\n     * Set intent notifier Bundle based on SignalStrength\n     *\n     * @param m intent notifier Bundle\n     *\n     * @deprecated this method relies on non-stable implementation details, and full access to\n     *             internal storage is available via {@link #getCellSignalStrengths()}.\n     * @hide\n     ",
    "links" : [ "#getCellSignalStrengths()" ]
  }, {
    "name" : "private static void log(String s)",
    "returnType" : "void",
    "comment" : "\n     * log warning\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void loge(String s)",
    "returnType" : "void",
    "comment" : "\n     * log error\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private CellSignalStrength getPrimary()", "public List<CellSignalStrength> getCellSignalStrengths()", "public List<T> getCellSignalStrengths(@NonNull Class<T> clazz)", "public void updateLevel(PersistableBundle cc, ServiceState ss)", "protected void copyFrom(SignalStrength s)", "public void writeToParcel(Parcel out, int flags)", "public long getTimestampMillis()", "public int describeContents()", "public int getGsmSignalStrength()", "public int getGsmBitErrorRate()", "public int getCdmaDbm()", "public int getCdmaEcio()", "public int getEvdoDbm()", "public int getEvdoEcio()", "public int getEvdoSnr()", "public int getLteSignalStrength()", "public int getLteRsrp()", "public int getLteRsrq()", "public int getLteRssnr()", "public int getLteCqi()", "public int getLevel()", "public int getAsuLevel()", "public int getDbm()", "public int getGsmDbm()", "public int getGsmLevel()", "public int getGsmAsuLevel()", "public int getCdmaLevel()", "public int getCdmaAsuLevel()", "public int getEvdoLevel()", "public int getEvdoAsuLevel()", "public int getLteDbm()", "public int getLteLevel()", "public int getLteAsuLevel()", "public boolean isGsm()", "public int getTdScdmaDbm()", "public int getTdScdmaLevel()", "public int getTdScdmaAsuLevel()", "public int getWcdmaRscp()", "public int getWcdmaAsuLevel()", "public int getWcdmaDbm()", "public int getWcdmaLevel()", "public int hashCode()", "public boolean equals(Object o)", "public String toString()", "public void fillInNotifierBundle(Bundle m)", "private static void log(String s)", "private static void loge(String s)" ],
  "variableNames" : [ "LOG_TAG", "DBG", "SIGNAL_STRENGTH_NONE_OR_UNKNOWN", "SIGNAL_STRENGTH_POOR", "SIGNAL_STRENGTH_MODERATE", "SIGNAL_STRENGTH_GOOD", "SIGNAL_STRENGTH_GREAT", "NUM_SIGNAL_STRENGTH_BINS", "INVALID", "mTimestampMillis", "mLteAsPrimaryInNrNsa", "mCdma", "mGsm", "mWcdma", "mTdscdma", "mLte", "mNr", "CREATOR" ]
}