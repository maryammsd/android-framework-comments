{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/PictureInPictureParams.java",
  "packageName" : "android.app",
  "className" : "PictureInPictureParams",
  "comment" : "\n * Represents a set of parameters used to initialize and update an Activity in picture-in-picture\n * mode.\n ",
  "variables" : [ {
    "name" : "mAspectRatio",
    "type" : "Rational",
    "comment" : "\n     * The expected aspect ratio of the picture-in-picture.\n     ",
    "links" : [ ]
  }, {
    "name" : "mUserActions",
    "type" : "List<RemoteAction>",
    "comment" : "\n     * The set of actions that are associated with this activity when in picture-in-picture.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSourceRectHint",
    "type" : "Rect",
    "comment" : "\n     * The source bounds hint used when entering picture-in-picture, relative to the window bounds.\n     * We can use this internally for the transition into picture-in-picture to ensure that a\n     * particular source rect is visible throughout the whole transition.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<PictureInPictureParams>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void copyOnlySet(PictureInPictureParams otherArgs)",
    "returnType" : "void",
    "comment" : "\n     * Copies the set parameters from the other picture-in-picture args.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getAspectRatio()",
    "returnType" : "float",
    "comment" : "\n     * @return the aspect ratio. If none is set, return 0.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Rational getAspectRatioRational()",
    "returnType" : "Rational",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasSetAspectRatio()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether the aspect ratio is set.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<RemoteAction> getActions()",
    "returnType" : "List<RemoteAction>",
    "comment" : "\n     * @return the set of user actions.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasSetActions()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether the user actions are set.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void truncateActions(int size)",
    "returnType" : "void",
    "comment" : "\n     * Truncates the set of actions to the given {@param size}.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Rect getSourceRectHint()",
    "returnType" : "Rect",
    "comment" : "\n     * @return the source rect hint\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasSourceBoundsHint()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether there are launch bounds set\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean empty()",
    "returnType" : "boolean",
    "comment" : "\n     * @return True if no parameters are set\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mAspectRatio", "mUserActions", "mSourceRectHint", "CREATOR" ],
  "methodNames" : [ "public void copyOnlySet(PictureInPictureParams otherArgs)", "public float getAspectRatio()", "public Rational getAspectRatioRational()", "public boolean hasSetAspectRatio()", "public List<RemoteAction> getActions()", "public boolean hasSetActions()", "public void truncateActions(int size)", "public Rect getSourceRectHint()", "public boolean hasSourceBoundsHint()", "public boolean empty()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)" ]
}