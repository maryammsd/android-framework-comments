{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/PhoneAccount.java",
  "packageName" : "android.telecom",
  "className" : "Builder",
  "comment" : "\n     * Helper class for creating a {@link PhoneAccount}.\n     ",
  "links" : [ "android.telecom.PhoneAccount" ],
  "variables" : [ {
    "name" : "mAccountHandle",
    "type" : "PhoneAccountHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAddress",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubscriptionAddress",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCapabilities",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedAudioRoutes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHighlightColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLabel",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShortDescription",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedUriSchemes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGroupId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSimultaneousCallingRestriction",
    "type" : "Set<PhoneAccountHandle>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setLabel(CharSequence label)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the label. See {@link PhoneAccount#getLabel()}.\n         * <p>\n         * Note: Each CharSequence or String field is limited to 256 characters. This check is\n         * enforced when registering the PhoneAccount via\n         * {@link TelecomManager#registerPhoneAccount(PhoneAccount)} and will cause an\n         * {@link IllegalArgumentException} to be thrown if the character field limit is over 256.\n         *\n         * @param label The label of the phone account.\n         * @return The builder.\n         * @hide\n         ",
    "links" : [ "android.telecom.TelecomManager#registerPhoneAccount(PhoneAccount)", "android.telecom.PhoneAccount#getLabel()", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setAddress(Uri value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the address. See {@link PhoneAccount#getAddress}.\n         * <p>\n         * Note: The entire URI value is limited to 256 characters. This check is\n         * enforced when registering the PhoneAccount via\n         * {@link TelecomManager#registerPhoneAccount(PhoneAccount)} and will cause an\n         * {@link IllegalArgumentException} to be thrown if URI is over 256.\n         *\n         * @param value The address of the phone account.\n         * @return The builder.\n         ",
    "links" : [ "android.telecom.PhoneAccount#getAddress", "android.telecom.TelecomManager#registerPhoneAccount(PhoneAccount)", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setSubscriptionAddress(Uri value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the subscription address. See {@link PhoneAccount#getSubscriptionAddress}.\n         *\n         * @param value The subscription address.\n         * @return The builder.\n         ",
    "links" : [ "android.telecom.PhoneAccount#getSubscriptionAddress" ]
  }, {
    "name" : "public Builder setCapabilities(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the capabilities. See {@link PhoneAccount#getCapabilities}.\n         *\n         * @param value The capabilities to set.\n         * @return The builder.\n         ",
    "links" : [ "android.telecom.PhoneAccount#getCapabilities" ]
  }, {
    "name" : "public Builder setIcon(Icon icon)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the icon. See {@link PhoneAccount#getIcon}.\n         * <p>\n         * Note: An {@link IllegalArgumentException} if the Icon cannot be written to memory.\n         * This check is enforced when registering the PhoneAccount via\n         * {@link TelecomManager#registerPhoneAccount(PhoneAccount)}\n         *\n         * @param icon The icon to set.\n         ",
    "links" : [ "android.telecom.PhoneAccount#getIcon", "android.telecom.TelecomManager#registerPhoneAccount(PhoneAccount)", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setHighlightColor(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the highlight color. See {@link PhoneAccount#getHighlightColor}.\n         *\n         * @param value The highlight color.\n         * @return The builder.\n         ",
    "links" : [ "android.telecom.PhoneAccount#getHighlightColor" ]
  }, {
    "name" : "public Builder setShortDescription(CharSequence value)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the short description. See {@link PhoneAccount#getShortDescription}.\n         * <p>\n         * Note: Each CharSequence or String field is limited to 256 characters. This check is\n         * enforced when registering the PhoneAccount via\n         * {@link TelecomManager#registerPhoneAccount(PhoneAccount)} and will cause an\n         * {@link IllegalArgumentException} to be thrown if the character field limit is over 256.\n         *\n         * @param value The short description.\n         * @return The builder.\n         ",
    "links" : [ "android.telecom.TelecomManager#registerPhoneAccount(PhoneAccount)", "android.telecom.PhoneAccount#getShortDescription", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder addSupportedUriScheme(String uriScheme)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies an additional URI scheme supported by the {@link PhoneAccount}.\n         *\n         * <p>\n         * Each URI scheme is limited to 256 characters.  Adding a scheme over 256 characters will\n         * cause an {@link IllegalArgumentException} to be thrown when the account is registered.\n         *\n         * @param uriScheme The URI scheme.\n         * @return The builder.\n         ",
    "links" : [ "android.telecom.PhoneAccount", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setSupportedUriSchemes(List<String> uriSchemes)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies the URI schemes supported by the {@link PhoneAccount}.\n         *\n         * <p>\n         * A max of 10 URI schemes can be added per account.  Additionally, each URI scheme is\n         * limited to 256 characters. Adding more than 10 URI schemes or 256 characters on any\n         * scheme will cause an {@link IllegalArgumentException} to be thrown when the account\n         * is registered.\n         *\n         * @param uriSchemes The URI schemes.\n         * @return The builder.\n         ",
    "links" : [ "android.telecom.PhoneAccount", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setExtras(Bundle extras)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies the extras associated with the {@link PhoneAccount}.\n         * <p>\n         * {@code PhoneAccount}s only support extra values of type: {@link String}, {@link Integer},\n         * and {@link Boolean}.  Extras which are not of these types are ignored.\n         * <p>\n         * Note: Each Bundle (Key, Value) String field is limited to 256 characters. Additionally,\n         * the bundle is limited to 100 (Key, Value) pairs total.  This check is\n         * enforced when registering the PhoneAccount via\n         * {@link TelecomManager#registerPhoneAccount(PhoneAccount)} and will cause an\n         * {@link IllegalArgumentException} to be thrown if the character field limit is over 256\n         * or more than 100 (Key, Value) pairs are in the Bundle.\n         *\n         * @param extras\n         * @return\n         ",
    "links" : [ "Integer", "android.telecom.TelecomManager#registerPhoneAccount(PhoneAccount)", "android.telecom.PhoneAccount", "String", "Boolean", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setIsEnabled(boolean isEnabled)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the enabled state of the phone account.\n         *\n         * @param isEnabled The enabled state.\n         * @return The builder.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setGroupId(@NonNull String groupId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the group Id of the {@link PhoneAccount}. When a new {@link PhoneAccount} is\n         * registered to Telecom, it will replace another {@link PhoneAccount} that is already\n         * registered in Telecom and take on the current user defaults and enabled status. There can\n         * only be one {@link PhoneAccount} with a non-empty group number registered to Telecom at a\n         * time. By default, there is no group Id for a {@link PhoneAccount} (an empty String). Only\n         * grouped {@link PhoneAccount}s with the same {@link ConnectionService} can be replaced.\n         * <p>\n         * Note: This is an API specific to the Telephony stack; the group Id will be ignored for\n         * callers not holding the correct permission.\n         * <p>\n         * Additionally, each CharSequence or String field is limited to 256 characters.\n         * This check is enforced when registering the PhoneAccount via\n         * {@link TelecomManager#registerPhoneAccount(PhoneAccount)} and will cause an\n         * {@link IllegalArgumentException} to be thrown if the character field limit is over 256.\n         *\n         * @param groupId The group Id of the {@link PhoneAccount} that will replace any other\n         * registered {@link PhoneAccount} in Telecom with the same Group Id.\n         * @return The builder\n         * @hide\n         ",
    "links" : [ "android.telecom.TelecomManager#registerPhoneAccount(PhoneAccount)", "android.telecom.PhoneAccount", "android.telecom.ConnectionService", "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setSupportedAudioRoutes(int routes)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the audio routes supported by this {@link PhoneAccount}.\n         *\n         * @param routes bit mask of available routes.\n         * @return The builder.\n         * @hide\n         ",
    "links" : [ "android.telecom.PhoneAccount" ]
  }, {
    "name" : "public Builder setSimultaneousCallingRestriction(@NonNull Set<PhoneAccountHandle> handles)",
    "returnType" : "Builder",
    "comment" : "\n         * Restricts the ability of this {@link PhoneAccount} to ONLY support simultaneous calling\n         * with the other {@link PhoneAccountHandle}s in this Set.\n         * <p>\n         * If two or more {@link PhoneAccount}s support calling simultaneously, it means that\n         * Telecom allows the user to place additional outgoing calls and receive additional\n         * incoming calls using other {@link PhoneAccount}s while this PhoneAccount also has one or\n         * more active calls.\n         * <p>\n         * If this setter method is never called or cleared using\n         * {@link #clearSimultaneousCallingRestriction()}, there is no restriction and all\n         * {@link PhoneAccount}s registered to Telecom by this package support simultaneous calling.\n         * If this setter is called and set as an empty Set, then this {@link PhoneAccount} does\n         * not support simultaneous calling with any other {@link PhoneAccount}s registered by the\n         * same application.\n         * <p>\n         * Note: Simultaneous calling restrictions can only be placed on {@link PhoneAccount}s that\n         * were registered by the same application. Simultaneous calling across applications is\n         * always possible as long as the {@link Connection} supports hold. If a\n         * {@link PhoneAccountHandle} is included here and the package name doesn't match this\n         * application's package name, {@link TelecomManager#registerPhoneAccount(PhoneAccount)}\n         * will throw a {@link SecurityException}.\n         *\n         * @param handles The other {@link PhoneAccountHandle}s that support calling simultaneously\n         * with this one. Use {@link #clearSimultaneousCallingRestriction()} to remove the\n         * restriction and allow simultaneous calling to be supported across all\n         * {@link PhoneAccount}s registered by this package.\n         * @return The Builder used to set up the new PhoneAccount.\n         ",
    "links" : [ "android.telecom.PhoneAccountHandle", "android.telecom.TelecomManager#registerPhoneAccount(PhoneAccount)", "android.telecom.PhoneAccount", "SecurityException", "android.telecom.Connection", "#clearSimultaneousCallingRestriction()" ]
  }, {
    "name" : "public Builder clearSimultaneousCallingRestriction()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears a previously set simultaneous calling restriction set when\n         * {@link PhoneAccount.Builder#Builder(PhoneAccount)} is used to create a new PhoneAccount\n         * from an existing one.\n         *\n         * @return The Builder used to set up the new PhoneAccount.\n         * @see #setSimultaneousCallingRestriction(Set)\n         ",
    "links" : [ "PhoneAccount.Builder#Builder(PhoneAccount)" ]
  }, {
    "name" : "public PhoneAccount build()",
    "returnType" : "PhoneAccount",
    "comment" : "\n         * Creates an instance of a {@link PhoneAccount} based on the current builder settings.\n         *\n         * @return The {@link PhoneAccount}.\n         ",
    "links" : [ "android.telecom.PhoneAccount" ]
  } ],
  "methodNames" : [ "public Builder setLabel(CharSequence label)", "public Builder setAddress(Uri value)", "public Builder setSubscriptionAddress(Uri value)", "public Builder setCapabilities(int value)", "public Builder setIcon(Icon icon)", "public Builder setHighlightColor(int value)", "public Builder setShortDescription(CharSequence value)", "public Builder addSupportedUriScheme(String uriScheme)", "public Builder setSupportedUriSchemes(List<String> uriSchemes)", "public Builder setExtras(Bundle extras)", "public Builder setIsEnabled(boolean isEnabled)", "public Builder setGroupId(@NonNull String groupId)", "public Builder setSupportedAudioRoutes(int routes)", "public Builder setSimultaneousCallingRestriction(@NonNull Set<PhoneAccountHandle> handles)", "public Builder clearSimultaneousCallingRestriction()", "public PhoneAccount build()" ],
  "variableNames" : [ "mAccountHandle", "mAddress", "mSubscriptionAddress", "mCapabilities", "mSupportedAudioRoutes", "mHighlightColor", "mLabel", "mShortDescription", "mSupportedUriSchemes", "mIcon", "mExtras", "mIsEnabled", "mGroupId", "mSimultaneousCallingRestriction" ]
}