{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/WifiManager.java",
  "packageName" : "android.net.wifi",
  "className" : "SoftApCallback",
  "comment" : "\n     * Base class for soft AP callback. Should be extended by applications and set when calling\n     * {@link WifiManager#registerSoftApCallback(Executor, SoftApCallback)}.\n     *\n     * @hide\n     ",
  "links" : [ "android.net.wifi.WifiManager#registerSoftApCallback(Executor" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onStateChanged(@WifiApState int state, @SapStartFailure int failureReason)",
    "returnType" : "void",
    "comment" : "\n         * Called when soft AP state changes.\n         *\n         * @param state         the new AP state. One of {@link #WIFI_AP_STATE_DISABLED},\n         *                      {@link #WIFI_AP_STATE_DISABLING}, {@link #WIFI_AP_STATE_ENABLED},\n         *                      {@link #WIFI_AP_STATE_ENABLING}, {@link #WIFI_AP_STATE_FAILED}\n         * @param failureReason reason when in failed state. One of\n         *                      {@link #SAP_START_FAILURE_GENERAL},\n         *                      {@link #SAP_START_FAILURE_NO_CHANNEL},\n         *                      {@link #SAP_START_FAILURE_UNSUPPORTED_CONFIGURATION},\n         *                      {@link #SAP_START_FAILURE_USER_REJECTED}\n         ",
    "links" : [ "#WIFI_AP_STATE_DISABLING", "#SAP_START_FAILURE_GENERAL", "#WIFI_AP_STATE_ENABLED", "#WIFI_AP_STATE_FAILED", "#SAP_START_FAILURE_NO_CHANNEL", "#WIFI_AP_STATE_DISABLED", "#WIFI_AP_STATE_ENABLING", "#SAP_START_FAILURE_UNSUPPORTED_CONFIGURATION", "#SAP_START_FAILURE_USER_REJECTED" ]
  }, {
    "name" : " void onStateChanged(@NonNull SoftApState state)",
    "returnType" : "void",
    "comment" : "\n         * Called when soft AP state changes.\n         * <p>\n         * This provides the same state and failure reason as {@link #onStateChanged(int, int)}, but\n         * also provides extra information such as interface name and TetheringRequest in order to\n         * replace usage of the WIFI_AP_STATE_CHANGED_ACTION broadcast. If this method is overridden\n         * then {@link #onStateChanged(int, int)} will no longer be called.\n         *\n         * @param state the new state.\n         ",
    "links" : [ "#onStateChanged(int" ]
  }, {
    "name" : " void onConnectedClientsChanged(@NonNull List<WifiClient> clients)",
    "returnType" : "void",
    "comment" : "\n         * Called when the connected clients to soft AP changes.\n         *\n         * @param clients the currently connected clients\n         *\n         * @deprecated This API is deprecated.\n         * Use {@link #onConnectedClientsChanged(SoftApInfo, List<WifiClient>)} instead.\n         ",
    "links" : [ "#onConnectedClientsChanged(SoftApInfo" ]
  }, {
    "name" : " void onConnectedClientsChanged(@NonNull SoftApInfo info, @NonNull List<WifiClient> clients)",
    "returnType" : "void",
    "comment" : "\n         * Called when the connected clients for a soft AP instance change.\n         *\n         * When the Soft AP is configured in single AP mode, this callback is invoked\n         * with the same {@link SoftApInfo} for all connected clients changes.\n         * When the Soft AP is configured as multiple Soft AP instances (using\n         * {@link SoftApConfiguration.Builder#setBands(int[])} or\n         * {@link SoftApConfiguration.Builder#setChannels(android.util.SparseIntArray)}), this\n         * callback is invoked with the corresponding {@link SoftApInfo} for the instance in which\n         * the connected clients changed.\n         *\n         * @param info The {@link SoftApInfo} of the AP.\n         * @param clients The currently connected clients on the AP instance specified by\n         *                {@code info}.\n         ",
    "links" : [ "SoftApConfiguration.Builder#setChannels(android.util.SparseIntArray)", "SoftApConfiguration.Builder#setBands(int", "android.net.wifi.SoftApInfo" ]
  }, {
    "name" : " void onInfoChanged(@NonNull SoftApInfo softApInfo)",
    "returnType" : "void",
    "comment" : "\n         * Called when the Soft AP information changes.\n         *\n         * Note: this API remains valid only when the Soft AP is configured as a single AP -\n         * not as multiple Soft APs (which are bridged to each other). When multiple Soft APs are\n         * configured (using {@link SoftApConfiguration.Builder#setBands(int[])} or\n         * {@link SoftApConfiguration.Builder#setChannels(android.util.SparseIntArray)})\n         * this callback will not be triggered -  use the\n         * {@link #onInfoChanged(List<SoftApInfo>)} callback in that case.\n         *\n         * @param softApInfo is the Soft AP information. {@link SoftApInfo}\n         *\n         * @deprecated This API is deprecated. Use {@link #onInfoChanged(List<SoftApInfo>)}\n         * instead.\n         ",
    "links" : [ "SoftApConfiguration.Builder#setChannels(android.util.SparseIntArray)", "SoftApConfiguration.Builder#setBands(int", "#onInfoChanged(List", "android.net.wifi.SoftApInfo" ]
  }, {
    "name" : " void onInfoChanged(@NonNull List<SoftApInfo> softApInfoList)",
    "returnType" : "void",
    "comment" : "\n         * Called when the Soft AP information changes.\n         *\n         * Returns information on all configured Soft AP instances. The number of the elements in\n         * the list depends on Soft AP configuration and state:\n         * <ul>\n         * <li>An empty list will be returned when the Soft AP is disabled.\n         * <li>One information element will be returned in the list when the Soft AP is configured\n         *     as a single AP or when a single Soft AP remains active.\n         * <li>Two information elements will be returned in the list when the multiple Soft APs are\n         *     configured and are active.\n         *     (configured using {@link SoftApConfiguration.Builder#setBands(int[])} or\n         *     {@link SoftApConfiguration.Builder#setChannels(android.util.SparseIntArray)}).\n         * </ul>\n         *\n         * Note: When multiple Soft AP instances are configured, one of the Soft APs may\n         * be shut down independently of the other by the framework. This can happen if no devices\n         * are connected to it for some duration. In that case, one information element will be\n         * returned.\n         *\n         * See {@link #isBridgedApConcurrencySupported()} for support info of multiple (bridged) AP.\n         *\n         * @param softApInfoList is the list of the Soft AP information elements -\n         *        {@link SoftApInfo}.\n         ",
    "links" : [ "SoftApConfiguration.Builder#setChannels(android.util.SparseIntArray)", "SoftApConfiguration.Builder#setBands(int", "android.net.wifi.SoftApInfo", "#isBridgedApConcurrencySupported()" ]
  }, {
    "name" : " void onCapabilityChanged(@NonNull SoftApCapability softApCapability)",
    "returnType" : "void",
    "comment" : "\n         * Called when capability of Soft AP changes.\n         *\n         * @param softApCapability is the Soft AP capability. {@link SoftApCapability}\n         ",
    "links" : [ "android.net.wifi.SoftApCapability" ]
  }, {
    "name" : " void onBlockedClientConnecting(@NonNull WifiClient client, @SapClientBlockedReason int blockedReason)",
    "returnType" : "void",
    "comment" : "\n         * Called when client trying to connect but device blocked the client with specific reason.\n         *\n         * Can be used to ask user to update client to allowed list or blocked list\n         * when reason is {@link SAP_CLIENT_BLOCK_REASON_CODE_BLOCKED_BY_USER}, or\n         * indicate the block due to maximum supported client number limitation when reason is\n         * {@link SAP_CLIENT_BLOCK_REASON_CODE_NO_MORE_STAS}.\n         *\n         * @param client the currently blocked client.\n         * @param blockedReason one of blocked reason from {@link SapClientBlockedReason}\n         ",
    "links" : [ "SAP_CLIENT_BLOCK_REASON_CODE_BLOCKED_BY_USER", "SapClientBlockedReason", "SAP_CLIENT_BLOCK_REASON_CODE_NO_MORE_STAS" ]
  } ],
  "methodNames" : [ " void onStateChanged(@WifiApState int state, @SapStartFailure int failureReason)", " void onStateChanged(@NonNull SoftApState state)", " void onConnectedClientsChanged(@NonNull List<WifiClient> clients)", " void onConnectedClientsChanged(@NonNull SoftApInfo info, @NonNull List<WifiClient> clients)", " void onInfoChanged(@NonNull SoftApInfo softApInfo)", " void onInfoChanged(@NonNull List<SoftApInfo> softApInfoList)", " void onCapabilityChanged(@NonNull SoftApCapability softApCapability)", " void onBlockedClientConnecting(@NonNull WifiClient client, @SapClientBlockedReason int blockedReason)" ],
  "variableNames" : [ ]
}