{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/fonts/SystemFonts.java",
  "packageName" : "android.graphics.fonts",
  "className" : "SystemFonts",
  "comment" : "\n * Provides the system font configurations.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FONTS_XML",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LEGACY_FONTS_XML",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYSTEM_FONT_DIR",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "OEM_XML",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OEM_FONT_DIR",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "LOCK",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sAvailableFonts",
    "type" : "Set<Font>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Set<Font> getAvailableFonts()",
    "returnType" : "Set<Font>",
    "comment" : "\n     * Returns all available font files in the system.\n     *\n     * @return a set of system fonts\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void resetAvailableFonts()",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static ByteBuffer mmap(@NonNull String fullPath)",
    "returnType" : "ByteBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int resolveVarFamilyType(@NonNull FontConfig.FontFamily xmlFamily, @Nullable String familyName)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static void pushFamilyToFallback(@NonNull FontConfig.FontFamily xmlFamily, @NonNull ArrayMap<String, NativeFamilyListSet> fallbackMap, @NonNull Map<String, ByteBuffer> cache)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static FontFamily createFontFamily(@NonNull List<FontConfig.Font> fonts, @NonNull String languageTags, @FontConfig.FontFamily.Variant int variant, int varFamilyType, boolean isDefaultFallback, @NonNull Map<String, ByteBuffer> cache)",
    "returnType" : "FontFamily",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void appendNamedFamilyList(@NonNull FontConfig.NamedFamilyList namedFamilyList, @NonNull ArrayMap<String, ByteBuffer> bufferCache, @NonNull ArrayMap<String, NativeFamilyListSet> fallbackListMap)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static FontConfig getSystemFontConfig(@Nullable Map<String, File> updatableFontMap, long lastModifiedDate, int configVersion)",
    "returnType" : "FontConfig",
    "comment" : "\n     * Get the updated FontConfig.\n     *\n     * @param updatableFontMap a font mapping of updated font files.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static FontConfig getSystemFontConfigForTesting(@NonNull String fontsXml, @Nullable Map<String, File> updatableFontMap, long lastModifiedDate, int configVersion)",
    "returnType" : "FontConfig",
    "comment" : "\n     * Get the updated FontConfig.\n     *\n     * @param updatableFontMap a font mapping of updated font files.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static FontConfig getSystemPreinstalledFontConfig()",
    "returnType" : "FontConfig",
    "comment" : "\n     * Get the system preinstalled FontConfig.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static FontConfig getSystemPreinstalledFontConfigFromLegacyXml()",
    "returnType" : "FontConfig",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : " static FontConfig getSystemFontConfigInternal(@NonNull String fontsXml, @NonNull String systemFontDir, @Nullable String oemXml, @Nullable String productFontDir, @Nullable Map<String, File> updatableFontMap, long lastModifiedDate, int configVersion)",
    "returnType" : "FontConfig",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : "public static Map<String, FontFamily[]> buildSystemFallback(FontConfig fontConfig)",
    "returnType" : "Map<String, FontFamily[]>",
    "comment" : "\n     * Build the system fallback from FontConfig.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Map<String, FontFamily[]> buildSystemFallback(FontConfig fontConfig, ArrayMap<String, ByteBuffer> outBufferCache)",
    "returnType" : "Map<String, FontFamily[]>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static Map<String, Typeface> buildSystemTypefaces(FontConfig fontConfig, Map<String, FontFamily[]> fallbackMap)",
    "returnType" : "Map<String, Typeface>",
    "comment" : "\n     * Build the system Typeface mappings from FontConfig and FallbackMap.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean scriptMatch(LocaleList localeList, String targetScript)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Set<Font> getAvailableFonts()", "public static void resetAvailableFonts()", "private static ByteBuffer mmap(@NonNull String fullPath)", "public static int resolveVarFamilyType(@NonNull FontConfig.FontFamily xmlFamily, @Nullable String familyName)", "private static void pushFamilyToFallback(@NonNull FontConfig.FontFamily xmlFamily, @NonNull ArrayMap<String, NativeFamilyListSet> fallbackMap, @NonNull Map<String, ByteBuffer> cache)", "private static FontFamily createFontFamily(@NonNull List<FontConfig.Font> fonts, @NonNull String languageTags, @FontConfig.FontFamily.Variant int variant, int varFamilyType, boolean isDefaultFallback, @NonNull Map<String, ByteBuffer> cache)", "private static void appendNamedFamilyList(@NonNull FontConfig.NamedFamilyList namedFamilyList, @NonNull ArrayMap<String, ByteBuffer> bufferCache, @NonNull ArrayMap<String, NativeFamilyListSet> fallbackListMap)", "public static FontConfig getSystemFontConfig(@Nullable Map<String, File> updatableFontMap, long lastModifiedDate, int configVersion)", "public static FontConfig getSystemFontConfigForTesting(@NonNull String fontsXml, @Nullable Map<String, File> updatableFontMap, long lastModifiedDate, int configVersion)", "public static FontConfig getSystemPreinstalledFontConfig()", "public static FontConfig getSystemPreinstalledFontConfigFromLegacyXml()", " static FontConfig getSystemFontConfigInternal(@NonNull String fontsXml, @NonNull String systemFontDir, @Nullable String oemXml, @Nullable String productFontDir, @Nullable Map<String, File> updatableFontMap, long lastModifiedDate, int configVersion)", "public static Map<String, FontFamily[]> buildSystemFallback(FontConfig fontConfig)", "public static Map<String, FontFamily[]> buildSystemFallback(FontConfig fontConfig, ArrayMap<String, ByteBuffer> outBufferCache)", "public static Map<String, Typeface> buildSystemTypefaces(FontConfig fontConfig, Map<String, FontFamily[]> fallbackMap)", "private static boolean scriptMatch(LocaleList localeList, String targetScript)" ],
  "variableNames" : [ "TAG", "FONTS_XML", "LEGACY_FONTS_XML", "SYSTEM_FONT_DIR", "OEM_XML", "OEM_FONT_DIR", "LOCK", "sAvailableFonts" ]
}