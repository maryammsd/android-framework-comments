{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/charset/CoderResult.java",
  "packageName" : "java.nio.charset",
  "className" : "CoderResult",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "CR_UNDERFLOW",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CR_OVERFLOW",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CR_ERROR_MIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CR_MALFORMED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CR_UNMAPPABLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "names",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "type",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "length",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UNDERFLOW",
    "type" : "CoderResult",
    "comment" : "\n     * Result object indicating underflow, meaning that either the input buffer\n     * has been completely consumed or, if the input buffer is not yet empty,\n     * that additional input is required.\n     ",
    "links" : [ ]
  }, {
    "name" : "OVERFLOW",
    "type" : "CoderResult",
    "comment" : "\n     * Result object indicating overflow, meaning that there is insufficient\n     * room in the output buffer.\n     ",
    "links" : [ ]
  }, {
    "name" : "malformed4",
    "type" : "CoderResult[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "unmappable4",
    "type" : "CoderResult[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a string describing this coder result.\n     *\n     * @return  A descriptive string\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isUnderflow()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether or not this object describes an underflow condition.\n     *\n     * @return  {@code true} if, and only if, this object denotes underflow\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isOverflow()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether or not this object describes an overflow condition.\n     *\n     * @return  {@code true} if, and only if, this object denotes overflow\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isError()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether or not this object describes an error condition.\n     *\n     * @return  {@code true} if, and only if, this object denotes either a\n     *          malformed-input error or an unmappable-character error\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMalformed()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether or not this object describes a malformed-input error.\n     *\n     * @return  {@code true} if, and only if, this object denotes a\n     *          malformed-input error\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isUnmappable()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether or not this object describes an unmappable-character\n     * error.\n     *\n     * @return  {@code true} if, and only if, this object denotes an\n     *          unmappable-character error\n     ",
    "links" : [ ]
  }, {
    "name" : "public int length()",
    "returnType" : "int",
    "comment" : "\n     * Returns the length of the erroneous input described by this\n     * object&nbsp;&nbsp;<i>(optional operation)</i>.\n     *\n     * @return  The length of the erroneous input, a positive integer\n     *\n     * @throws  UnsupportedOperationException\n     *          If this object does not describe an error condition, that is,\n     *          if the {@link #isError() isError} does not return {@code true}\n     ",
    "links" : [ "#isError()" ]
  }, {
    "name" : "public static CoderResult malformedForLength(int length)",
    "returnType" : "CoderResult",
    "comment" : "\n     * Static factory method that returns the unique object describing a\n     * malformed-input error of the given length.\n     *\n     * @param   length\n     *          The given length\n     *\n     * @return  The requested coder-result object\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CoderResult unmappableForLength(int length)",
    "returnType" : "CoderResult",
    "comment" : "\n     * Static factory method that returns the unique result object describing\n     * an unmappable-character error of the given length.\n     *\n     * @param   length\n     *          The given length\n     *\n     * @return  The requested coder-result object\n     ",
    "links" : [ ]
  }, {
    "name" : "public void throwException() throws CharacterCodingException",
    "returnType" : "void",
    "comment" : "\n     * Throws an exception appropriate to the result described by this object.\n     *\n     * @throws  BufferUnderflowException\n     *          If this object is {@link #UNDERFLOW}\n     *\n     * @throws  BufferOverflowException\n     *          If this object is {@link #OVERFLOW}\n     *\n     * @throws  MalformedInputException\n     *          If this object represents a malformed-input error; the\n     *          exception's length value will be that of this object\n     *\n     * @throws  UnmappableCharacterException\n     *          If this object represents an unmappable-character error; the\n     *          exceptions length value will be that of this object\n     ",
    "links" : [ "#OVERFLOW", "#UNDERFLOW" ]
  } ],
  "methodNames" : [ "public String toString()", "public boolean isUnderflow()", "public boolean isOverflow()", "public boolean isError()", "public boolean isMalformed()", "public boolean isUnmappable()", "public int length()", "public static CoderResult malformedForLength(int length)", "public static CoderResult unmappableForLength(int length)", "public void throwException() throws CharacterCodingException" ],
  "variableNames" : [ "CR_UNDERFLOW", "CR_OVERFLOW", "CR_ERROR_MIN", "CR_MALFORMED", "CR_UNMAPPABLE", "names", "type", "length", "UNDERFLOW", "OVERFLOW", "malformed4", "unmappable4" ]
}