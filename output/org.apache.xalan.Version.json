{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/Version.java",
  "packageName" : "org.apache.xalan",
  "className" : "Version",
  "comment" : "\n * Administrative class to keep track of the version number of\n * the Xalan release.\n * <P>This class implements the upcoming standard of having\n * org.apache.project-name.Version.getVersion() be a standard way \n * to get version information.  This class will replace the older \n * org.apache.xalan.processor.Version class.</P>\n * <P>See also: org/apache/xalan/res/XSLTInfo.properties for \n * information about the version of the XSLT spec we support.</P>\n * @xsl.usage general\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static String getVersion()",
    "returnType" : "String",
    "comment" : "\n   * Get the basic version string for the current Xalan release.\n   * Version String formatted like \n   * <CODE>\"<B>Xalan</B> <B>Java</B> v.r[.dd| <B>D</B>nn]\"</CODE>.\n   *\n   * Futurework: have this read version info from jar manifest.\n   *\n   * @return String denoting our current version\n   ",
    "links" : [ ]
  }, {
    "name" : "public static void main(String[] argv)",
    "returnType" : "void",
    "comment" : "\n   * Print the processor version to the command line.\n   *\n   * @param argv command line arguments, unused.\n   ",
    "links" : [ ]
  }, {
    "name" : "public static String getProduct()",
    "returnType" : "String",
    "comment" : "\n   * Name of product: Xalan.\n   ",
    "links" : [ ]
  }, {
    "name" : "public static String getImplementationLanguage()",
    "returnType" : "String",
    "comment" : "\n   * Implementation Language: Java.\n   ",
    "links" : [ ]
  }, {
    "name" : "public static int getMajorVersionNum()",
    "returnType" : "int",
    "comment" : "\n   * Major version number.\n   * Version number. This changes only when there is a\n   *          significant, externally apparent enhancement from\n   *          the previous release. 'n' represents the n'th\n   *          version.\n   *\n   *          Clients should carefully consider the implications\n   *          of new versions as external interfaces and behaviour\n   *          may have changed.\n   ",
    "links" : [ ]
  }, {
    "name" : "public static int getReleaseVersionNum()",
    "returnType" : "int",
    "comment" : "\n   * Release Number.\n   * Release number. This changes when:\n   *            -  a new set of functionality is to be added, eg,\n   *               implementation of a new W3C specification.\n   *            -  API or behaviour change.\n   *            -  its designated as a reference release.\n   ",
    "links" : [ ]
  }, {
    "name" : "public static int getMaintenanceVersionNum()",
    "returnType" : "int",
    "comment" : "\n   * Maintenance Drop Number.\n   * Optional identifier used to designate maintenance\n   *          drop applied to a specific release and contains\n   *          fixes for defects reported. It maintains compatibility\n   *          with the release and contains no API changes.\n   *          When missing, it designates the final and complete\n   *          development drop for a release.\n   ",
    "links" : [ ]
  }, {
    "name" : "public static int getDevelopmentVersionNum()",
    "returnType" : "int",
    "comment" : "\n   * Development Drop Number.\n   * Optional identifier designates development drop of\n   *          a specific release. D01 is the first development drop\n   *          of a new release.\n   *\n   *          Development drops are works in progress towards a\n   *          compeleted, final release. A specific development drop\n   *          may not completely implement all aspects of a new\n   *          feature, which may take several development drops to\n   *          complete. At the point of the final drop for the\n   *          release, the D suffix will be omitted.\n   *\n   *          Each 'D' drops can contain functional enhancements as\n   *          well as defect fixes. 'D' drops may not be as stable as\n   *          the final releases.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static String getVersion()", "public static void main(String[] argv)", "public static String getProduct()", "public static String getImplementationLanguage()", "public static int getMajorVersionNum()", "public static int getReleaseVersionNum()", "public static int getMaintenanceVersionNum()", "public static int getDevelopmentVersionNum()" ],
  "variableNames" : [ ]
}