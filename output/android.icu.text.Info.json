{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/IDNA.java",
  "packageName" : "android.icu.text",
  "className" : "Info",
  "comment" : "\n     * Output container for IDNA processing errors.\n     * The Info class is not suitable for subclassing.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "errors",
    "type" : "EnumSet<Error>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "labelErrors",
    "type" : "EnumSet<Error>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "isTransDiff",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "isBiDi",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "isOkBiDi",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean hasErrors()",
    "returnType" : "boolean",
    "comment" : "\n         * Were there IDNA processing errors?\n         * @return true if there were processing errors\n         ",
    "links" : [ ]
  }, {
    "name" : "public Set<Error> getErrors()",
    "returnType" : "Set<Error>",
    "comment" : "\n         * Returns a set indicating IDNA processing errors.\n         * @return set of processing errors (modifiable, and not null)\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isTransitionalDifferent()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if transitional and nontransitional processing produce different results.\n         * This is the case when the input label or domain name contains\n         * one or more deviation characters outside a Punycode label (see UTS #46).\n         * <ul>\n         * <li>With nontransitional processing, such characters are\n         * copied to the destination string.\n         * <li>With transitional processing, such characters are\n         * mapped (sharp s/sigma) or removed (joiner/nonjoiner).\n         * </ul>\n         * @return true if transitional and nontransitional processing produce different results\n         ",
    "links" : [ ]
  }, {
    "name" : "private void reset()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean hasErrors()", "public Set<Error> getErrors()", "public boolean isTransitionalDifferent()", "private void reset()" ],
  "variableNames" : [ "errors", "labelErrors", "isTransDiff", "isBiDi", "isOkBiDi" ]
}