{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/sharedconnectivity/app/NetworkProviderInfo.java",
  "packageName" : "android.net.wifi.sharedconnectivity.app",
  "className" : "NetworkProviderInfo",
  "comment" : "\n * A data class representing a device providing connectivity.\n * This class is used in IPC calls between the implementer of {@link SharedConnectivityService} and\n * the consumers of {@link com.android.wifitrackerlib}.\n *\n * @hide\n ",
  "links" : [ "android.net.wifi.sharedconnectivity.service.SharedConnectivityService", "com.android.wifitrackerlib" ],
  "variables" : [ {
    "name" : "DEVICE_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Device type providing connectivity is unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_TYPE_PHONE",
    "type" : "int",
    "comment" : "\n     * Device providing connectivity is a mobile phone.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_TYPE_TABLET",
    "type" : "int",
    "comment" : "\n     * Device providing connectivity is a tablet.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_TYPE_LAPTOP",
    "type" : "int",
    "comment" : "\n     * Device providing connectivity is a laptop.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_TYPE_WATCH",
    "type" : "int",
    "comment" : "\n     * Device providing connectivity is a watch.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_TYPE_AUTO",
    "type" : "int",
    "comment" : "\n     * Device providing connectivity is a watch.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDeviceType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mModelName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBatteryPercentage",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsBatteryCharging",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectionStrength",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<NetworkProviderInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static void validate(@DeviceType int deviceType, String deviceName, String modelName, int batteryPercentage, int connectionStrength)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getDeviceType()",
    "returnType" : "int",
    "comment" : "\n     * Gets the device type that provides connectivity.\n     *\n     * @return Returns the device type as represented by IntDef {@link DeviceType}.\n     ",
    "links" : [ "DeviceType" ]
  }, {
    "name" : "public String getDeviceName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the device name of the remote device.\n     *\n     * @return Returns the user configurable device name.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getModelName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the model name of the remote device.\n     *\n     * @return Returns the OEM configured name for the device model.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBatteryPercentage()",
    "returnType" : "int",
    "comment" : "\n     * Gets the battery charge percentage of the remote device.\n     *\n     * @return Returns the battery charge percentage in the range 0 to 100.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBatteryCharging()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets the charging state of the battery on the remote device.\n     *\n     * @return Returns true if the battery of the remote device is charging.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getConnectionStrength()",
    "returnType" : "int",
    "comment" : "\n     * Gets the displayed connection strength of the remote device to the internet.\n     *\n     * @return Returns the connection strength in range 0 to 4.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n     * Gets the extras Bundle.\n     *\n     * @return Returns a Bundle object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static NetworkProviderInfo readFromParcel(@NonNull Parcel in)",
    "returnType" : "NetworkProviderInfo",
    "comment" : "\n     * Creates a {@link NetworkProviderInfo} object from a parcel.\n     *\n     * @hide\n     ",
    "links" : [ "android.net.wifi.sharedconnectivity.app.NetworkProviderInfo" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static void validate(@DeviceType int deviceType, String deviceName, String modelName, int batteryPercentage, int connectionStrength)", "public int getDeviceType()", "public String getDeviceName()", "public String getModelName()", "public int getBatteryPercentage()", "public boolean isBatteryCharging()", "public int getConnectionStrength()", "public Bundle getExtras()", "public boolean equals(Object obj)", "public int hashCode()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public static NetworkProviderInfo readFromParcel(@NonNull Parcel in)", "public String toString()" ],
  "variableNames" : [ "DEVICE_TYPE_UNKNOWN", "DEVICE_TYPE_PHONE", "DEVICE_TYPE_TABLET", "DEVICE_TYPE_LAPTOP", "DEVICE_TYPE_WATCH", "DEVICE_TYPE_AUTO", "mDeviceType", "mDeviceName", "mModelName", "mBatteryPercentage", "mIsBatteryCharging", "mConnectionStrength", "mExtras", "CREATOR" ]
}