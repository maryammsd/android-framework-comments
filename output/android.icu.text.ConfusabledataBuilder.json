{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/SpoofChecker.java",
  "packageName" : "android.icu.text",
  "className" : "ConfusabledataBuilder",
  "comment" : " It exports one static function, to do a confusable data build.",
  "links" : [ ],
  "variables" : [ {
    "name" : "fTable",
    "type" : "Hashtable<Integer, SPUString>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fKeySet",
    "type" : "UnicodeSet",
    "comment" : " A set of all keys (UChar32s) that go into the",
    "links" : [ ]
  }, {
    "name" : "fStringTable",
    "type" : "StringBuffer",
    "comment" : " then output to the builder's SpoofData object.",
    "links" : [ ]
  }, {
    "name" : "fKeyVec",
    "type" : "ArrayList<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fValueVec",
    "type" : "ArrayList<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "stringPool",
    "type" : "SPUStringPool",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fParseLine",
    "type" : "Pattern",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fParseHexNum",
    "type" : "Pattern",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fLineNum",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void build(Reader confusables, SpoofData dest) throws ParseException, java.io.IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void buildConfusableData(Reader confusables, SpoofData dest) throws java.io.IOException, ParseException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " void build(Reader confusables, SpoofData dest) throws ParseException, java.io.IOException", "public static void buildConfusableData(Reader confusables, SpoofData dest) throws java.io.IOException, ParseException" ],
  "variableNames" : [ "fTable", "fKeySet", "fStringTable", "fKeyVec", "fValueVec", "stringPool", "fParseLine", "fParseHexNum", "fLineNum" ]
}