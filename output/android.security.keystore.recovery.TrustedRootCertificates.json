{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/keystore/recovery/TrustedRootCertificates.java",
  "packageName" : "android.security.keystore.recovery",
  "className" : "TrustedRootCertificates",
  "comment" : "\n * Trusted root certificates for use by the\n * {@link android.security.keystore.recovery.RecoveryController}. These certificates are used to\n * verify the public keys of remote secure hardware modules. This is to prevent AOSP backing up keys\n * to untrusted devices.\n *\n * @hide\n ",
  "links" : [ "android.security.keystore.recovery.RecoveryController" ],
  "variables" : [ {
    "name" : "GOOGLE_CLOUD_KEY_VAULT_SERVICE_V1_ALIAS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TEST_ONLY_INSECURE_CERTIFICATE_ALIAS",
    "type" : "String",
    "comment" : "\n     * Certificate used for client-side end-to-end encryption tests.\n     * When recovery controller is initialized with the certificate, recovery snapshots will only\n     * contain application keys started with {@link #INSECURE_KEY_ALIAS_PREFIX}.\n     * Recovery snapshot will only be created if device is unlocked with password started with\n     * {@link #INSECURE_PASSWORD_PREFIX}.\n     *\n     * @hide\n     ",
    "links" : [ "#INSECURE_KEY_ALIAS_PREFIX", "#INSECURE_PASSWORD_PREFIX" ]
  }, {
    "name" : "INSECURE_KEY_ALIAS_PREFIX",
    "type" : "String",
    "comment" : "\n     * Keys, which alias starts with the prefix are not protected if\n     * recovery agent uses {@link #TEST_ONLY_INSECURE_CERTIFICATE_ALIAS} root certificate.\n     * @hide\n     ",
    "links" : [ "#TEST_ONLY_INSECURE_CERTIFICATE_ALIAS" ]
  }, {
    "name" : "INSECURE_PASSWORD_PREFIX",
    "type" : "String",
    "comment" : "\n     * Prefix for insecure passwords with length 14.\n     * Passwords started with the prefix are not protected if recovery agent uses\n     * {@link #TEST_ONLY_INSECURE_CERTIFICATE_ALIAS} root certificate.\n     * @hide\n     ",
    "links" : [ "#TEST_ONLY_INSECURE_CERTIFICATE_ALIAS" ]
  }, {
    "name" : "GOOGLE_CLOUD_KEY_VAULT_SERVICE_V1_BASE64",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TEST_ONLY_INSECURE_CERTIFICATE_BASE64",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GOOGLE_CLOUD_KEY_VAULT_SERVICE_V1_CERTIFICATE",
    "type" : "X509Certificate",
    "comment" : "\n     * The X509 certificate of the trusted root CA cert for the recoverable key store service.\n     ",
    "links" : [ ]
  }, {
    "name" : "NUMBER_OF_ROOT_CERTIFICATES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ALL_ROOT_CERTIFICATES",
    "type" : "ArrayMap<String, X509Certificate>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static X509Certificate getTestOnlyInsecureCertificate()",
    "returnType" : "X509Certificate",
    "comment" : "\n     * TODO: Add insecure certificate to TestApi.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Map<String, X509Certificate> getRootCertificates()",
    "returnType" : "Map<String, X509Certificate>",
    "comment" : "\n     * Returns all available root certificates, keyed by alias.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static X509Certificate getRootCertificate(String alias)",
    "returnType" : "X509Certificate",
    "comment" : "\n     * Gets a root certificate referenced by the given {@code alias}.\n     *\n     * @param alias the alias of the certificate\n     * @return the certificate referenced by the alias, or null if such a certificate doesn't exist.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static ArrayMap<String, X509Certificate> constructRootCertificateMap()",
    "returnType" : "ArrayMap<String, X509Certificate>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static X509Certificate parseBase64Certificate(String base64Certificate)",
    "returnType" : "X509Certificate",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static X509Certificate getTestOnlyInsecureCertificate()", "public static Map<String, X509Certificate> getRootCertificates()", "public static X509Certificate getRootCertificate(String alias)", "private static ArrayMap<String, X509Certificate> constructRootCertificateMap()", "private static X509Certificate parseBase64Certificate(String base64Certificate)" ],
  "variableNames" : [ "GOOGLE_CLOUD_KEY_VAULT_SERVICE_V1_ALIAS", "TEST_ONLY_INSECURE_CERTIFICATE_ALIAS", "INSECURE_KEY_ALIAS_PREFIX", "INSECURE_PASSWORD_PREFIX", "GOOGLE_CLOUD_KEY_VAULT_SERVICE_V1_BASE64", "TEST_ONLY_INSECURE_CERTIFICATE_BASE64", "GOOGLE_CLOUD_KEY_VAULT_SERVICE_V1_CERTIFICATE", "NUMBER_OF_ROOT_CERTIFICATES", "ALL_ROOT_CERTIFICATES" ]
}