{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/controls/Control.java",
  "packageName" : "android.service.controls",
  "className" : "Control",
  "comment" : "\n * Represents a physical object that can be represented by a {@link ControlTemplate} and whose\n * properties may be modified through a {@link ControlAction}.\n *\n * The information is provided by a {@link ControlsProviderService} and represents static\n * information (not current status) about the device.\n * <p>\n * Each control needs a unique (per provider) identifier that is persistent across reboots of the\n * system.\n * <p>\n * Each {@link Control} will have a name, a subtitle and will optionally belong to a structure\n * and zone. Some of these values are defined by the user and/or the {@link ControlsProviderService}\n * and will be used to display the control as well as group them for management.\n * <p>\n * Each object will have an associated {@link DeviceTypes.DeviceType}. This will determine the icons and colors\n * used to display it.\n * <p>\n * An {@link Intent} linking to the provider Activity that expands on this {@link Control} and\n * allows for further actions should be provided.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NUM_STATUS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATUS_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Reserved for use with the {@link StatelessBuilder}, and while loading. When state is\n     * requested via {@link ControlsProviderService#createPublisherFor}, use other status codes\n     * to indicate the proper device state.\n     ",
    "links" : [ "StatelessBuilder", "android.service.controls.ControlsProviderService#createPublisherFor" ]
  }, {
    "name" : "STATUS_OK",
    "type" : "int",
    "comment" : "\n     * Used to indicate that the state of the device was successfully retrieved. This includes\n     * all scenarios where the device may have a warning for the user, such as \"Lock jammed\",\n     * or \"Vacuum stuck\". Any information for the user should be set through\n     * {@link StatefulBuilder#setStatusText}.\n     ",
    "links" : [ "#setStatusText" ]
  }, {
    "name" : "STATUS_NOT_FOUND",
    "type" : "int",
    "comment" : "\n     * The device corresponding to the {@link Control} cannot be found or was removed. The user\n     * will be alerted and directed to the application to resolve.\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "STATUS_ERROR",
    "type" : "int",
    "comment" : "\n     * Used to indicate that there was a temporary error while loading the device state. A default\n     * error message will be displayed in place of any custom text that was set through\n     * {@link StatefulBuilder#setStatusText}.\n     ",
    "links" : [ "#setStatusText" ]
  }, {
    "name" : "STATUS_DISABLED",
    "type" : "int",
    "comment" : "\n     * The {@link Control} is currently disabled.  A default error message will be displayed in\n     * place of any custom text that was set through {@link StatefulBuilder#setStatusText}.\n     ",
    "links" : [ "#setStatusText", "android.service.controls.Control" ]
  }, {
    "name" : "mControlId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubtitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStructure",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mZone",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomColor",
    "type" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControlTemplate",
    "type" : "ControlTemplate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatusText",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Control>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getControlId()",
    "returnType" : "String",
    "comment" : "\n     * @return the identifier for the {@link Control}\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public int getDeviceType()",
    "returnType" : "int",
    "comment" : "\n     * @return type of device represented by this {@link Control}, used to determine the default\n     *         icon and color\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public CharSequence getTitle()",
    "returnType" : "CharSequence",
    "comment" : "\n     * @return the user facing name of the {@link Control}\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public CharSequence getSubtitle()",
    "returnType" : "CharSequence",
    "comment" : "\n     * @return additional information about the {@link Control}, to appear underneath the title\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public CharSequence getStructure()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Optional top-level group to help define the {@link Control}'s location, visible to the user.\n     * If not present, the application name will be used as the top-level group. A structure\n     * contains zones which contains controls.\n     *\n     * @return name of the structure containing the control\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public CharSequence getZone()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Optional group name to help define the {@link Control}'s location within a structure,\n     * visible to the user. A structure contains zones which contains controls.\n     *\n     * @return name of the zone containing the control\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public PendingIntent getAppIntent()",
    "returnType" : "PendingIntent",
    "comment" : "\n     * @return a {@link PendingIntent} linking to an Activity for the {@link Control}\n     ",
    "links" : [ "android.app.PendingIntent", "android.service.controls.Control" ]
  }, {
    "name" : "public Icon getCustomIcon()",
    "returnType" : "Icon",
    "comment" : "\n     * Optional icon to be shown with the {@link Control}. It is highly recommended\n     * to let the system default the icon unless the default icon is not suitable.\n     *\n     * @return icon to show\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public ColorStateList getCustomColor()",
    "returnType" : "ColorStateList",
    "comment" : "\n     * Optional color to be shown with the {@link Control}. It is highly recommended\n     * to let the system default the color unless the default is not suitable for the\n     * application.\n     *\n     * @return background color to use\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public int getStatus()",
    "returnType" : "int",
    "comment" : "\n     * @return status of the {@link Control}, used to convey information about the attempt to\n     *         fetch the current state\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public ControlTemplate getControlTemplate()",
    "returnType" : "ControlTemplate",
    "comment" : "\n     * @return instance of {@link ControlTemplate}, that defines how the {@link Control} will\n     *         behave and what interactions are available to the user\n     ",
    "links" : [ "android.service.controls.templates.ControlTemplate", "android.service.controls.Control" ]
  }, {
    "name" : "public CharSequence getStatusText()",
    "returnType" : "CharSequence",
    "comment" : "\n     * @return user-facing text description of the {@link Control}'s status, describing its current\n     *         state\n     ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "NUM_STATUS", "STATUS_UNKNOWN", "STATUS_OK", "STATUS_NOT_FOUND", "STATUS_ERROR", "STATUS_DISABLED", "mControlId", "mDeviceType", "mTitle", "mSubtitle", "mStructure", "mZone", "mAppIntent", "mCustomIcon", "mCustomColor", "mStatus", "mControlTemplate", "mStatusText", "CREATOR" ],
  "methodNames" : [ "public String getControlId()", "public int getDeviceType()", "public CharSequence getTitle()", "public CharSequence getSubtitle()", "public CharSequence getStructure()", "public CharSequence getZone()", "public PendingIntent getAppIntent()", "public Icon getCustomIcon()", "public ColorStateList getCustomColor()", "public int getStatus()", "public ControlTemplate getControlTemplate()", "public CharSequence getStatusText()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ]
}