{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/SystemSensorManager.java",
  "packageName" : "android.hardware",
  "className" : "BaseEventQueue",
  "comment" : "\n     * BaseEventQueue is the communication channel with the sensor service,\n     * SensorEventQueue, TriggerEventQueue are subclasses and there is one-to-one mapping between\n     * the queues and the listeners. InjectEventQueue is also a sub-class which is a special case\n     * where data is being injected into the sensor HAL through the sensor service. It is not\n     * associated with any listener and there is one InjectEventQueue associated with a\n     * SensorManager instance.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mNativeSensorEventQueue",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActiveSensors",
    "type" : "SparseBooleanArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSensorAccuracies",
    "type" : "SparseIntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSensorDiscontinuityCounts",
    "type" : "SparseIntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCloseGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mManager",
    "type" : "SystemSensorManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OPERATING_MODE_NORMAL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OPERATING_MODE_DATA_INJECTION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OPERATING_MODE_REPLAY_DATA_INJECTION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OPERATING_MODE_HAL_BYPASS_REPLAY_DATA_INJECTION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static native long nativeInitBaseEventQueue(long nativeManager, WeakReference<BaseEventQueue> eventQWeak, MessageQueue msgQ, String packageName, int mode, String opPackageName, String attributionTag)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int nativeEnableSensor(long eventQ, int handle, int rateUs, int maxBatchReportLatencyUs)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int nativeDisableSensor(long eventQ, int handle)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeDestroySensorEventQueue(long eventQ)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int nativeFlushSensor(long eventQ)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int nativeInjectSensorData(long eventQ, int handle, float[] values, int accuracy, long timestamp)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dispose()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean addSensor(Sensor sensor, int delayUs, int maxBatchReportLatencyUs)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean removeAllSensors()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean removeSensor(Sensor sensor, boolean disable)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int flush()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasSensors()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void dispose(boolean finalized)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int enableSensor(Sensor sensor, int rateUs, int maxBatchReportLatencyUs)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int injectSensorDataBase(int handle, float[] values, int accuracy, long timestamp)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int disableSensor(Sensor sensor)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract void dispatchSensorEvent(int handle, float[] values, int accuracy, long timestamp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract void dispatchFlushCompleteEvent(int handle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void dispatchAdditionalInfoEvent(int handle, int type, int serial, float[] floatValues, int[] intValues)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract void addSensorEvent(Sensor sensor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract void removeSensorEvent(Sensor sensor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static native long nativeInitBaseEventQueue(long nativeManager, WeakReference<BaseEventQueue> eventQWeak, MessageQueue msgQ, String packageName, int mode, String opPackageName, String attributionTag)", "private static native int nativeEnableSensor(long eventQ, int handle, int rateUs, int maxBatchReportLatencyUs)", "private static native int nativeDisableSensor(long eventQ, int handle)", "private static native void nativeDestroySensorEventQueue(long eventQ)", "private static native int nativeFlushSensor(long eventQ)", "private static native int nativeInjectSensorData(long eventQ, int handle, float[] values, int accuracy, long timestamp)", "public void dispose()", "public boolean addSensor(Sensor sensor, int delayUs, int maxBatchReportLatencyUs)", "public boolean removeAllSensors()", "public boolean removeSensor(Sensor sensor, boolean disable)", "public int flush()", "public boolean hasSensors()", "protected void finalize() throws Throwable", "private void dispose(boolean finalized)", "private int enableSensor(Sensor sensor, int rateUs, int maxBatchReportLatencyUs)", "protected int injectSensorDataBase(int handle, float[] values, int accuracy, long timestamp)", "private int disableSensor(Sensor sensor)", "protected abstract void dispatchSensorEvent(int handle, float[] values, int accuracy, long timestamp)", "protected abstract void dispatchFlushCompleteEvent(int handle)", "protected void dispatchAdditionalInfoEvent(int handle, int type, int serial, float[] floatValues, int[] intValues)", "protected abstract void addSensorEvent(Sensor sensor)", "protected abstract void removeSensorEvent(Sensor sensor)" ],
  "variableNames" : [ "mNativeSensorEventQueue", "mActiveSensors", "mSensorAccuracies", "mSensorDiscontinuityCounts", "mCloseGuard", "mManager", "OPERATING_MODE_NORMAL", "OPERATING_MODE_DATA_INJECTION", "OPERATING_MODE_REPLAY_DATA_INJECTION", "OPERATING_MODE_HAL_BYPASS_REPLAY_DATA_INJECTION" ]
}