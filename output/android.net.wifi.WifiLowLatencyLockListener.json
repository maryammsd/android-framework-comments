{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/WifiManager.java",
  "packageName" : "android.net.wifi",
  "className" : "WifiLowLatencyLockListener",
  "comment" : "\n     * Interface for low latency lock listener. Should be extended by application and set when\n     * calling {@link WifiManager#addWifiLowLatencyLockListener(Executor,\n     * WifiLowLatencyLockListener)}.\n     *\n     * @hide\n     ",
  "links" : [ "android.net.wifi.WifiManager#addWifiLowLatencyLockListener(Executor" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onActivatedStateChanged(boolean activated)",
    "returnType" : "void",
    "comment" : "\n         * Provides low latency mode is activated or not. Triggered when Wi-Fi chip enters into low\n         * latency mode.\n         *\n         * <p>Note: Always called with current state when a new listener gets registered.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onOwnershipChanged(@NonNull int[] ownerUids)",
    "returnType" : "void",
    "comment" : "\n         * Provides UIDs (lock owners) of the applications which currently acquired low latency\n         * lock. Triggered when an application acquires or releases a lock.\n         *\n         * <p>Note: Always called with UIDs of the current acquired locks when a new listener gets\n         * registered.\n         *\n         * @param ownerUids An array of UIDs.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onActiveUsersChanged(@NonNull int[] activeUids)",
    "returnType" : "void",
    "comment" : "\n         * Provides UIDs of the applications which acquired the low latency lock and is currently\n         * active. See {@link WifiManager#WIFI_MODE_FULL_LOW_LATENCY} for the conditions to be met\n         * for low latency lock to be active. Triggered when application acquiring the lock\n         * satisfies or does not satisfy low latency conditions when the low latency mode is\n         * activated. Also gets triggered when the lock becomes active, immediately after the {@link\n         * WifiLowLatencyLockListener#onActivatedStateChanged(boolean)} callback is triggered.\n         *\n         * <p>Note: Always called with UIDs of the current active locks when a new listener gets\n         * registered if the Wi-Fi chip is in low latency mode.\n         *\n         * @param activeUids An array of UIDs.\n         ",
    "links" : [ "android.net.wifi.WifiManager#WIFI_MODE_FULL_LOW_LATENCY", "#onActivatedStateChanged(boolean)" ]
  } ],
  "methodNames" : [ " void onActivatedStateChanged(boolean activated)", " void onOwnershipChanged(@NonNull int[] ownerUids)", " void onActiveUsersChanged(@NonNull int[] activeUids)" ],
  "variableNames" : [ ]
}