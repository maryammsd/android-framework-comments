{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/apc/IProtectedConfirmation.java",
  "packageName" : "android.security.apc",
  "className" : "Default",
  "comment" : " Default implementation for IProtectedConfirmation. ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void presentPrompt(android.security.apc.IConfirmationCallback listener, java.lang.String promptText, byte[] extraData, java.lang.String locale, int uiOptionFlags) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n     * Present the confirmation prompt. The caller must implement IConfirmationCallback and pass\n     * it to this function as listener.\n     * @deprecated Android Protected Confirmation had a low adoption rate among Android device\n     *             makers and developers alike. Given the lack of devices supporting the\n     *             feature, it is deprecated. Developers can use auth-bound Keystore keys\n     *             as a partial replacement.\n     * \n     * @param listener Must implement IConfirmationCallback. Doubles as session identifier when\n     *           passed to cancelPrompt.\n     * @param promptText The text that will be displayed to the user using the protected\n     *           confirmation UI.\n     * @param extraData Extra data, e.g., a nonce, that will be included in the to-be-signed\n     *           message.\n     * @param locale The locale string is used to select the language for the instructions\n     *           displayed by the confirmation prompt.\n     * @param uiOptionFlags Bitwise combination of FLAG_UI_OPTION_* see above.\n     * \n     * Service specific error codes:\n     *  - ResponseCode.OPERATION_PENDING If another prompt is already pending.\n     *  - ResponseCode.SYSTEM_ERROR An unexpected error occurred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void cancelPrompt(android.security.apc.IConfirmationCallback listener) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n     * Cancel an ongoing prompt.\n     * @deprecated Android Protected Confirmation had a low adoption rate among Android device\n     *             makers and developers alike. Given the lack of devices supporting the\n     *             feature, it is deprecated. Developers can use auth-bound Keystore keys as\n     *             a partial replacement.\n     * \n     * \n     * @param listener Must implement IConfirmationCallback, although in this context this binder\n     *            token is only used to identify the session that is to be cancelled.\n     * \n     * Service specific error code:\n     *  - ResponseCode.IGNORED If the listener does not represent an ongoing prompt session.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSupported() throws android.os.RemoteException",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the device supports Android Protected Confirmation.\n     * @deprecated Android Protected Confirmation had a low adoption rate among Android device\n     *             makers and developers alike. Given the lack of devices supporting the\n     *             feature, it is deprecated. Developers can use auth-bound Keystore keys\n     *             as a partial replacement.\n     ",
    "links" : [ ]
  }, {
    "name" : "public android.os.IBinder asBinder()",
    "returnType" : "android.os.IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void presentPrompt(android.security.apc.IConfirmationCallback listener, java.lang.String promptText, byte[] extraData, java.lang.String locale, int uiOptionFlags) throws android.os.RemoteException", "public void cancelPrompt(android.security.apc.IConfirmationCallback listener) throws android.os.RemoteException", "public boolean isSupported() throws android.os.RemoteException", "public android.os.IBinder asBinder()" ],
  "variableNames" : [ ]
}