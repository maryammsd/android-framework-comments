{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/keystore/AndroidKeyStoreProvider.java",
  "packageName" : "android.security.keystore",
  "className" : "AndroidKeyStoreProvider",
  "comment" : "\n * A provider focused on providing JCA interfaces for the Android KeyStore.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "PROVIDER_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static long getKeyStoreOperationHandle(Object cryptoPrimitive)",
    "returnType" : "long",
    "comment" : "\n     * Gets the Android KeyStore operation handle corresponding to the provided JCA crypto\n     * primitive.\n     *\n     * <p>The following primitives are supported: {@link Cipher} and {@link Mac}.\n     *\n     * @return Android KeyStore operation handle or {@code 0} if the provided primitive's Android\n     *         KeyStore operation is not in progress.\n     *\n     * @throws IllegalArgumentException if the provided primitive is not supported or is not backed\n     *         by AndroidKeyStore provider.\n     * @throws IllegalStateException if the provided primitive is not initialized.\n     * @hide\n     ",
    "links" : [ "javax.crypto.Mac", "javax.crypto.Cipher" ]
  }, {
    "name" : "public static KeyStore getKeyStoreForUid(int uid) throws KeyStoreException, NoSuchProviderException",
    "returnType" : "KeyStore",
    "comment" : "\n     * Returns an {@code AndroidKeyStore} {@link KeyStore} of the specified UID. The {@code\n     * KeyStore} contains keys and certificates owned by that UID. Such cross-UID access is\n     * permitted to a few system UIDs and only to a few other UIDs (e.g., Wi-Fi, VPN) all of which\n     * are system.\n     *\n     * <p>Note: the returned {@code KeyStore} is already initialized/loaded. Thus, there is\n     * no need to invoke {@code load} on it.\n     *\n     * @param uid Uid for which the keystore provider is requested.\n     * @throws KeyStoreException if a KeyStoreSpi implementation for the specified type is not\n     * available from the specified provider.\n     * @throws NoSuchProviderException If the specified provider is not registered in the security\n     * provider list.\n     * @hide\n     ",
    "links" : [ "java.security.KeyStore" ]
  } ],
  "methodNames" : [ "public static long getKeyStoreOperationHandle(Object cryptoPrimitive)", "public static KeyStore getKeyStoreForUid(int uid) throws KeyStoreException, NoSuchProviderException" ],
  "variableNames" : [ "PROVIDER_NAME" ]
}