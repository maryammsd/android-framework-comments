{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/CellBroadcastService.java",
  "packageName" : "android.telephony",
  "className" : "CellBroadcastService",
  "comment" : "\n * A service which exposes the cell broadcast handling module to the system.\n * <p>\n * To extend this class, you must declare the service in your manifest file to require the\n * {@link android.Manifest.permission#BIND_CELL_BROADCAST_SERVICE} permission and include an intent\n * filter with the {@link #CELL_BROADCAST_SERVICE_INTERFACE}.\n * Implementations of this service should run in the phone process and with its UID.\n * <p>\n * For example:\n * <pre>{@code\n * <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n *       android:sharedUserId=\"android.uid.phone\">\n *   <service android:name=\".MyCellBroadcastService\"\n *         android:label=\"@string/service_name\"\n *         android:process=\"com.android.phone\"\n *         android:exported=\"true\"\n *         android:permission=\"android.permission.BIND_CELL_BROADCAST_SERVICE\">\n *     <intent-filter>\n *           <action android:name=\"android.telephony.CellBroadcastService\" />\n *     </intent-filter>\n *   </service>\n * </manifest>\n * }</pre>\n *\n * @hide\n ",
  "links" : [ "#CELL_BROADCAST_SERVICE_INTERFACE", "android.Manifest.permission#BIND_CELL_BROADCAST_SERVICE" ],
  "variables" : [ {
    "name" : "CELL_BROADCAST_SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStubWrapper",
    "type" : "ICellBroadcastService.Stub",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onGsmCellBroadcastSms(int slotIndex, @NonNull byte[] message)",
    "returnType" : "void",
    "comment" : "\n     * Handle a GSM cell broadcast SMS message forwarded from the system.\n     *\n     * @param slotIndex the index of the slot which received the message\n     * @param message   the SMS PDU\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCdmaCellBroadcastSms(int slotIndex, @NonNull byte[] bearerData, @CdmaSmsCbProgramData.Category int serviceCategory)",
    "returnType" : "void",
    "comment" : "\n     * Handle a CDMA cell broadcast SMS message forwarded from the system.\n     *\n     * @param slotIndex       the index of the slot which received the message\n     * @param bearerData      the CDMA SMS bearer data\n     * @param serviceCategory the CDMA SCPT service category\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCdmaScpMessage(int slotIndex, @NonNull List<CdmaSmsCbProgramData> smsCbProgramData, @NonNull String originatingAddress, @NonNull Consumer<Bundle> callback)",
    "returnType" : "void",
    "comment" : "\n     * Handle a CDMA cell broadcast SMS message forwarded from the system.\n     *\n     * @param slotIndex          the index of the slot which received the message\n     * @param smsCbProgramData   the SMS CB program data of the message\n     * @param originatingAddress the originating address of the message, as a non-separated dial\n     *                           string\n     * @param callback           a callback to run after each cell broadcast receiver has handled\n     *                           the SCP message. The bundle will contain a non-separated\n     *                           dial string as and an ArrayList of {@link CdmaSmsCbProgramResults}.\n     ",
    "links" : [ "android.telephony.CdmaSmsCbProgramResults" ]
  }, {
    "name" : "public abstract CharSequence getCellBroadcastAreaInfo(int slotIndex)",
    "returnType" : "CharSequence",
    "comment" : "\n     * Get broadcasted area information.\n     *\n     * @param slotIndex the index of the slot which received the area information.\n     *\n     * @return The area information string sent from the network. This is usually the human readable\n     * string shown in Setting app's SIM status page.\n     ",
    "links" : [ ]
  }, {
    "name" : "public IBinder onBind(@Nullable Intent intent)",
    "returnType" : "IBinder",
    "comment" : "\n     * If overriding this method, call through to the super method for any unknown actions.\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onGsmCellBroadcastSms(int slotIndex, @NonNull byte[] message)", "public abstract void onCdmaCellBroadcastSms(int slotIndex, @NonNull byte[] bearerData, @CdmaSmsCbProgramData.Category int serviceCategory)", "public abstract void onCdmaScpMessage(int slotIndex, @NonNull List<CdmaSmsCbProgramData> smsCbProgramData, @NonNull String originatingAddress, @NonNull Consumer<Bundle> callback)", "public abstract CharSequence getCellBroadcastAreaInfo(int slotIndex)", "public IBinder onBind(@Nullable Intent intent)" ],
  "variableNames" : [ "CELL_BROADCAST_SERVICE_INTERFACE", "mStubWrapper" ]
}