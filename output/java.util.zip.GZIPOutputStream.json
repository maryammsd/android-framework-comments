{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/zip/GZIPOutputStream.java",
  "packageName" : "java.util.zip",
  "className" : "GZIPOutputStream",
  "comment" : "\n * This class implements a stream filter for writing compressed data in\n * the GZIP file format.\n * @author      David Connelly\n * @since 1.1\n *\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "crc",
    "type" : "CRC32",
    "comment" : "\n     * CRC-32 of uncompressed data.\n     ",
    "links" : [ ]
  }, {
    "name" : "GZIP_MAGIC",
    "type" : "int",
    "comment" : "\n     * GZIP header magic number.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRAILER_SIZE",
    "type" : "int",
    "comment" : "\n     * Trailer size in bytes.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "OS_UNKNOWN",
    "type" : "byte",
    "comment" : " Represents the default \"unknown\" value for OS header, per RFC-1952",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public synchronized void write(byte[] buf, int off, int len) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes array of bytes to the compressed output stream. This method\n     * will block until all the bytes are written.\n     * @param buf the data to be written\n     * @param off the start offset of the data\n     * @param len the length of the data\n     * @throws    IOException If an I/O error has occurred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void finish() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Finishes writing compressed data to the output stream without closing\n     * the underlying stream. Use this method when applying multiple filters\n     * in succession to the same output stream.\n     * @throws    IOException if an I/O error has occurred\n     ",
    "links" : [ ]
  }, {
    "name" : "private void writeHeader() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes GZIP member header.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void writeTrailer(byte[] buf, int offset) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes GZIP member trailer to a byte array, starting at a given\n     * offset.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void writeInt(int i, byte[] buf, int offset) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes integer in Intel byte order to a byte array, starting at a\n     * given offset.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void writeShort(int s, byte[] buf, int offset) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes short integer in Intel byte order to a byte array, starting\n     * at a given offset\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public synchronized void write(byte[] buf, int off, int len) throws IOException", "public void finish() throws IOException", "private void writeHeader() throws IOException", "private void writeTrailer(byte[] buf, int offset) throws IOException", "private void writeInt(int i, byte[] buf, int offset) throws IOException", "private void writeShort(int s, byte[] buf, int offset) throws IOException" ],
  "variableNames" : [ "crc", "GZIP_MAGIC", "TRAILER_SIZE", "OS_UNKNOWN" ]
}