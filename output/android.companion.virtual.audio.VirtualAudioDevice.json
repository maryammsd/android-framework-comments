{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/companion/virtual/audio/VirtualAudioDevice.java",
  "packageName" : "android.companion.virtual.audio",
  "className" : "VirtualAudioDevice",
  "comment" : "\n * The class stores an {@link AudioCapture} for audio capturing and an {@link AudioInjection} for\n * audio injection.\n *\n * @hide\n ",
  "links" : [ "android.companion.virtual.audio.AudioCapture", "android.companion.virtual.audio.AudioInjection" ],
  "variables" : [ {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVirtualDevice",
    "type" : "IVirtualDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVirtualDisplay",
    "type" : "VirtualDisplay",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "AudioConfigurationChangeCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "CloseListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOngoingSession",
    "type" : "VirtualAudioSession",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public AudioInjection startAudioInjection(@NonNull AudioFormat injectionFormat)",
    "returnType" : "AudioInjection",
    "comment" : "\n     * Begins injecting audio from a remote device into this device.\n     *\n     * @return An {@link AudioInjection} containing the injected audio.\n     ",
    "links" : [ "android.companion.virtual.audio.AudioInjection" ]
  }, {
    "name" : "public AudioCapture startAudioCapture(@NonNull AudioFormat captureFormat)",
    "returnType" : "AudioCapture",
    "comment" : "\n     * Begins recording audio emanating from this device.\n     *\n     * <p>Note: This method does not support capturing privileged playback, which means the\n     * application can opt out of capturing by {@link AudioManager#setAllowedCapturePolicy(int)}.\n     *\n     * @return An {@link AudioCapture} containing the recorded audio.\n     ",
    "links" : [ "android.companion.virtual.audio.AudioCapture", "android.media.AudioManager#setAllowedCapturePolicy(int)" ]
  }, {
    "name" : "public AudioCapture getAudioCapture()",
    "returnType" : "AudioCapture",
    "comment" : " Returns the {@link AudioCapture} instance. ",
    "links" : [ "android.companion.virtual.audio.AudioCapture" ]
  }, {
    "name" : "public AudioInjection getAudioInjection()",
    "returnType" : "AudioInjection",
    "comment" : " Returns the {@link AudioInjection} instance. ",
    "links" : [ "android.companion.virtual.audio.AudioInjection" ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : " Stops audio capture and injection then releases all the resources ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public AudioInjection startAudioInjection(@NonNull AudioFormat injectionFormat)", "public AudioCapture startAudioCapture(@NonNull AudioFormat captureFormat)", "public AudioCapture getAudioCapture()", "public AudioInjection getAudioInjection()", "public void close()" ],
  "variableNames" : [ "mContext", "mVirtualDevice", "mVirtualDisplay", "mCallback", "mExecutor", "mListener", "mOngoingSession" ]
}