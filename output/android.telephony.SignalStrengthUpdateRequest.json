{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/SignalStrengthUpdateRequest.java",
  "packageName" : "android.telephony",
  "className" : "SignalStrengthUpdateRequest",
  "comment" : "\n * Request used to register {@link SignalThresholdInfo} to be notified when the signal strength\n * breach the specified thresholds.\n ",
  "links" : [ "android.telephony.SignalThresholdInfo" ],
  "variables" : [ {
    "name" : "mSignalThresholdInfos",
    "type" : "List<SignalThresholdInfo>",
    "comment" : "\n     * List of SignalThresholdInfo for the request.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsReportingRequestedWhileIdle",
    "type" : "boolean",
    "comment" : "\n     * Whether the reporting is required for thresholds in the request while device is idle.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsSystemThresholdReportingRequestedWhileIdle",
    "type" : "boolean",
    "comment" : "\n     * Whether the reporting requested for system thresholds while device is idle.\n     *\n     * System signal thresholds are loaded from carrier config items and mainly used for UI\n     * displaying. By default, they are ignored when device is idle. When setting the value to true,\n     * modem will continue reporting signal strength changes over the system signal thresholds even\n     * device is idle.\n     *\n     * This should only set to true by the system caller.\n     ",
    "links" : [ ]
  }, {
    "name" : "mLiveToken",
    "type" : "IBinder",
    "comment" : "\n     * A IBinder object as a token for server side to check if the request client is still living.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SignalStrengthUpdateRequest>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Collection<SignalThresholdInfo> getSignalThresholdInfos()",
    "returnType" : "Collection<SignalThresholdInfo>",
    "comment" : "\n     * Get the collection of SignalThresholdInfo in the request.\n     *\n     * @return the collection of SignalThresholdInfo\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isReportingRequestedWhileIdle()",
    "returnType" : "boolean",
    "comment" : "\n     * Get whether reporting is requested for the threshold in the request while device is idle.\n     *\n     * @return true if reporting requested while device is idle\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSystemThresholdReportingRequestedWhileIdle()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if reporting requested for system thresholds while device is idle\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public IBinder getLiveToken()",
    "returnType" : "IBinder",
    "comment" : "\n     * @return the live token of the request\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void validate(Collection<SignalThresholdInfo> infos, boolean isSystemThresholdReportingRequestedWhileIdle)",
    "returnType" : "void",
    "comment" : "\n     * Throw IAE if SignalThresholdInfo collection is null or empty,\n     * or the SignalMeasurementType for the same RAN in the collection is not unique.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Collection<SignalThresholdInfo> getSignalThresholdInfos()", "public boolean isReportingRequestedWhileIdle()", "public boolean isSystemThresholdReportingRequestedWhileIdle()", "public IBinder getLiveToken()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(Object other)", "public int hashCode()", "public String toString()", "private static void validate(Collection<SignalThresholdInfo> infos, boolean isSystemThresholdReportingRequestedWhileIdle)" ],
  "variableNames" : [ "mSignalThresholdInfos", "mIsReportingRequestedWhileIdle", "mIsSystemThresholdReportingRequestedWhileIdle", "mLiveToken", "CREATOR" ]
}