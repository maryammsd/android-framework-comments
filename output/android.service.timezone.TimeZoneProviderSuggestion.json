{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/timezone/TimeZoneProviderSuggestion.java",
  "packageName" : "android.service.timezone",
  "className" : "TimeZoneProviderSuggestion",
  "comment" : "\n * A suggestion from a {@link TimeZoneProviderService} containing zero or more time zones.\n *\n * @hide\n ",
  "links" : [ "android.service.timezone.TimeZoneProviderService" ],
  "variables" : [ {
    "name" : "mTimeZoneIds",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mElapsedRealtimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TimeZoneProviderSuggestion>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getElapsedRealtimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the time of the suggestion in elapsed real-time since system boot. Where possible,\n     * the time should be based on the time of the data used when determining time zone. For\n     * example, if it was based on a {@link android.location.Location} then it should be the time\n     * associated with that location.\n     *\n     * <p>This value is compared to {@link\n     * android.os.SystemClock#elapsedRealtime()}, to calculate the age of a fix and to compare\n     * {@link TimeZoneProviderSuggestion} instances.\n     *\n     * @return elapsed real-time of fix, in milliseconds\n     ",
    "links" : [ "android.service.timezone.TimeZoneProviderSuggestion", "android.os.SystemClock#elapsedRealtime()", "android.location.Location" ]
  }, {
    "name" : "public List<String> getTimeZoneIds()",
    "returnType" : "List<String>",
    "comment" : "\n     * Returns the zero or more time zone IDs for this suggestion.\n     *\n     * <p>Time zone IDs are TZDB IDs like \"America/Los_Angeles\" that would be accepted by {@link\n     * java.util.TimeZone#getTimeZone(String)}.\n     *\n     * <p>Most often a suggestion will contain a single time zone ID but other possibilities are\n     * valid. A suggestion with zero time zone IDs means the provider is certain there are no time\n     * zones for the current location, e.g. for oceans, boundaries or disputed areas. A suggestion\n     * with multiple IDs can occur on boundaries or disputed areas. The ordering should be in order\n     * of likelihood if possible, but the time zone detection service may choose from any of the\n     * zones suggested if it has other supporting information available.\n     ",
    "links" : [ "java.util.TimeZone#getTimeZone(String)" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEquivalentTo(@Nullable TimeZoneProviderSuggestion other)",
    "returnType" : "boolean",
    "comment" : "\n     * Similar to {@link #equals} except this methods checks for equivalence, not equality.\n     * i.e. two suggestions are equivalent if they suggest the same time zones.\n     *\n     * @hide\n     ",
    "links" : [ "#equals" ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static List<String> immutableList(@NonNull List<String> list)",
    "returnType" : "List<String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public long getElapsedRealtimeMillis()", "public List<String> getTimeZoneIds()", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel parcel, int flags)", "public boolean isEquivalentTo(@Nullable TimeZoneProviderSuggestion other)", "public boolean equals(Object o)", "public int hashCode()", "private static List<String> immutableList(@NonNull List<String> list)" ],
  "variableNames" : [ "mTimeZoneIds", "mElapsedRealtimeMillis", "CREATOR" ]
}