{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/RoundRectangle.java",
  "packageName" : "android.graphics",
  "className" : "RoundRectangle",
  "comment" : "\n * Defines a rectangle with rounded corners, where the sizes of the corners\n * are potentially different.\n ",
  "variables" : [ {
    "name" : "x",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "y",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "width",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "height",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ulWidth",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ulHeight",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "urWidth",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "urHeight",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "lrWidth",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "lrHeight",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "llWidth",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "llHeight",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "close",
    "type" : "EnumSet<Zone>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "far",
    "type" : "EnumSet<Zone>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public double getX()",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public double getY()",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public double getWidth()",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public double getHeight()",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFrame(double x, double y, double w, double h)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Rectangle2D getBounds2D()",
    "returnType" : "Rectangle2D",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean contains(double x, double y)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isInsideCorner(double x, double y, double width, double height)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Zone classify(double coord, double side1, double arcSize1, double side2, double arcSize2)",
    "returnType" : "Zone",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean intersects(double x, double y, double w, double h)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean contains(double x, double y, double w, double h)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PathIterator getPathIterator(final AffineTransform at)",
    "returnType" : "PathIterator",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "x", "y", "width", "height", "ulWidth", "ulHeight", "urWidth", "urHeight", "lrWidth", "lrHeight", "llWidth", "llHeight", "close", "far" ],
  "methodNames" : [ "public double getX()", "public double getY()", "public double getWidth()", "public double getHeight()", "public boolean isEmpty()", "public void setFrame(double x, double y, double w, double h)", "public Rectangle2D getBounds2D()", "public boolean contains(double x, double y)", "private boolean isInsideCorner(double x, double y, double width, double height)", "private Zone classify(double coord, double side1, double arcSize1, double side2, double arcSize2)", "public boolean intersects(double x, double y, double w, double h)", "public boolean contains(double x, double y, double w, double h)", "public PathIterator getPathIterator(final AffineTransform at)" ]
}