{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/thermal/IThermal.java",
  "packageName" : "android.hardware.thermal",
  "className" : "Default",
  "comment" : " Default implementation for IThermal. ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public android.hardware.thermal.CoolingDevice[] getCoolingDevices() throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.CoolingDevice[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.CoolingDevice[] getCoolingDevicesWithType(int type) throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.CoolingDevice[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.Temperature[] getTemperatures() throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.Temperature[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.Temperature[] getTemperaturesWithType(int type) throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.Temperature[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.TemperatureThreshold[] getTemperatureThresholds() throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.TemperatureThreshold[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.thermal.TemperatureThreshold[] getTemperatureThresholdsWithType(int type) throws android.os.RemoteException",
    "returnType" : "android.hardware.thermal.TemperatureThreshold[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerThermalChangedCallback(android.hardware.thermal.IThermalChangedCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerThermalChangedCallbackWithType(android.hardware.thermal.IThermalChangedCallback callback, int type) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterThermalChangedCallback(android.hardware.thermal.IThermalChangedCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerCoolingDeviceChangedCallbackWithType(android.hardware.thermal.ICoolingDeviceChangedCallback callback, int type) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterCoolingDeviceChangedCallback(android.hardware.thermal.ICoolingDeviceChangedCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceVersion()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getInterfaceHash()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.os.IBinder asBinder()",
    "returnType" : "android.os.IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public android.hardware.thermal.CoolingDevice[] getCoolingDevices() throws android.os.RemoteException", "public android.hardware.thermal.CoolingDevice[] getCoolingDevicesWithType(int type) throws android.os.RemoteException", "public android.hardware.thermal.Temperature[] getTemperatures() throws android.os.RemoteException", "public android.hardware.thermal.Temperature[] getTemperaturesWithType(int type) throws android.os.RemoteException", "public android.hardware.thermal.TemperatureThreshold[] getTemperatureThresholds() throws android.os.RemoteException", "public android.hardware.thermal.TemperatureThreshold[] getTemperatureThresholdsWithType(int type) throws android.os.RemoteException", "public void registerThermalChangedCallback(android.hardware.thermal.IThermalChangedCallback callback) throws android.os.RemoteException", "public void registerThermalChangedCallbackWithType(android.hardware.thermal.IThermalChangedCallback callback, int type) throws android.os.RemoteException", "public void unregisterThermalChangedCallback(android.hardware.thermal.IThermalChangedCallback callback) throws android.os.RemoteException", "public void registerCoolingDeviceChangedCallbackWithType(android.hardware.thermal.ICoolingDeviceChangedCallback callback, int type) throws android.os.RemoteException", "public void unregisterCoolingDeviceChangedCallback(android.hardware.thermal.ICoolingDeviceChangedCallback callback) throws android.os.RemoteException", "public int getInterfaceVersion()", "public String getInterfaceHash()", "public android.os.IBinder asBinder()" ],
  "variableNames" : [ ]
}