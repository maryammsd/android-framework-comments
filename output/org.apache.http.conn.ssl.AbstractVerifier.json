{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/http/conn/ssl/AbstractVerifier.java",
  "packageName" : "org.apache.http.conn.ssl",
  "className" : "AbstractVerifier",
  "comment" : "\n * Abstract base class for all standard {@link X509HostnameVerifier} \n * implementations.\n * \n * @author Julius Davies\n *\n * @deprecated Please use {@link java.net.URL#openConnection} instead.\n *     Please visit <a href=\"http://android-developers.blogspot.com/2011/09/androids-http-clients.html\">this webpage</a>\n *     for further details.\n ",
  "links" : [ "org.apache.http.conn.ssl.X509HostnameVerifier", "java.net.URL#openConnection" ],
  "variables" : [ {
    "name" : "IPV4_PATTERN",
    "type" : "Pattern",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BAD_COUNTRY_2LDS",
    "type" : "String[]",
    "comment" : "\n     * This contains a list of 2nd-level domains that aren't allowed to\n     * have wildcards when combined with country-codes.\n     * For example: [*.co.uk].\n     * <p/>\n     * The [*.co.uk] problem is an interesting one.  Should we just hope\n     * that CA's would never foolishly allow such a certificate to happen?\n     * Looks like we're the only implementation guarding against this.\n     * Firefox, Curl, Sun Java 1.4, 5, 6 don't bother with this check.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void verify(String host, SSLSocket ssl) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean verify(String host, SSLSession session)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void verify(String host, X509Certificate cert) throws SSLException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void verify(final String host, final String[] cns, final String[] subjectAlts, final boolean strictWithSubDomains) throws SSLException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean acceptableCountryWildcard(String cn)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String[] getCNs(X509Certificate cert)",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String[] getDNSSubjectAlts(X509Certificate cert)",
    "returnType" : "String[]",
    "comment" : "\n     * Extracts the array of SubjectAlt DNS names from an X509Certificate.\n     * Returns null if there aren't any.\n     * <p/>\n     * Note:  Java doesn't appear able to extract international characters\n     * from the SubjectAlts.  It can only extract international characters\n     * from the CN field.\n     * <p/>\n     * (Or maybe the version of OpenSSL I'm using to test isn't storing the\n     * international characters correctly in the SubjectAlts?).\n     *\n     * @param cert X509Certificate\n     * @return Array of SubjectALT DNS names stored in the certificate.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int countDots(final String s)",
    "returnType" : "int",
    "comment" : "\n     * Counts the number of dots \".\" in a string.\n     * @param s  string to count dots from\n     * @return  number of dots\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean isIPv4Address(final String input)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final void verify(String host, SSLSocket ssl) throws IOException", "public final boolean verify(String host, SSLSession session)", "public final void verify(String host, X509Certificate cert) throws SSLException", "public final void verify(final String host, final String[] cns, final String[] subjectAlts, final boolean strictWithSubDomains) throws SSLException", "public static boolean acceptableCountryWildcard(String cn)", "public static String[] getCNs(X509Certificate cert)", "public static String[] getDNSSubjectAlts(X509Certificate cert)", "public static int countDots(final String s)", "private static boolean isIPv4Address(final String input)" ],
  "variableNames" : [ "IPV4_PATTERN", "BAD_COUNTRY_2LDS" ]
}