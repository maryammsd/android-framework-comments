{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/SortedOps.java",
  "packageName" : "java.util.stream",
  "className" : "SortedOps",
  "comment" : "\n * Factory methods for transforming streams into sorted streams.\n *\n * @since 1.8\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " static Stream<T> makeRef(AbstractPipeline<?, T, ?> upstream)",
    "returnType" : "Stream<T>",
    "comment" : "\n     * Appends a \"sorted\" operation to the provided stream.\n     *\n     * @param <T> the type of both input and output elements\n     * @param upstream a reference stream with element type T\n     ",
    "links" : [ ]
  }, {
    "name" : " static Stream<T> makeRef(AbstractPipeline<?, T, ?> upstream, Comparator<? super T> comparator)",
    "returnType" : "Stream<T>",
    "comment" : "\n     * Appends a \"sorted\" operation to the provided stream.\n     *\n     * @param <T> the type of both input and output elements\n     * @param upstream a reference stream with element type T\n     * @param comparator the comparator to order elements by\n     ",
    "links" : [ ]
  }, {
    "name" : " static IntStream makeInt(AbstractPipeline<?, Integer, ?> upstream)",
    "returnType" : "IntStream",
    "comment" : "\n     * Appends a \"sorted\" operation to the provided stream.\n     *\n     * @param <T> the type of both input and output elements\n     * @param upstream a reference stream with element type T\n     ",
    "links" : [ ]
  }, {
    "name" : " static LongStream makeLong(AbstractPipeline<?, Long, ?> upstream)",
    "returnType" : "LongStream",
    "comment" : "\n     * Appends a \"sorted\" operation to the provided stream.\n     *\n     * @param <T> the type of both input and output elements\n     * @param upstream a reference stream with element type T\n     ",
    "links" : [ ]
  }, {
    "name" : " static DoubleStream makeDouble(AbstractPipeline<?, Double, ?> upstream)",
    "returnType" : "DoubleStream",
    "comment" : "\n     * Appends a \"sorted\" operation to the provided stream.\n     *\n     * @param <T> the type of both input and output elements\n     * @param upstream a reference stream with element type T\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static Stream<T> makeRef(AbstractPipeline<?, T, ?> upstream)", " static Stream<T> makeRef(AbstractPipeline<?, T, ?> upstream, Comparator<? super T> comparator)", " static IntStream makeInt(AbstractPipeline<?, Integer, ?> upstream)", " static LongStream makeLong(AbstractPipeline<?, Long, ?> upstream)", " static DoubleStream makeDouble(AbstractPipeline<?, Double, ?> upstream)" ],
  "variableNames" : [ ]
}