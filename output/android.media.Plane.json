{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/Image.java",
  "packageName" : "android.media",
  "className" : "Plane",
  "comment" : "\n     * <p>A single color plane of image data.</p>\n     *\n     * <p>The number and meaning of the planes in an Image are determined by the\n     * format of the Image.</p>\n     *\n     * <p>Once the Image has been closed, any access to the plane's\n     * ByteBuffer will fail.</p>\n     *\n     * @see #getFormat\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract int getRowStride()",
    "returnType" : "int",
    "comment" : "\n         * <p>The row stride for this color plane, in bytes.</p>\n         *\n         * <p>This is the distance between the start of two consecutive rows of\n         * pixels in the image. Note that row stride is undefined for some formats\n         * such as\n         * {@link android.graphics.ImageFormat#RAW_PRIVATE RAW_PRIVATE},\n         * and calling getRowStride on images of these formats will\n         * cause an UnsupportedOperationException being thrown.\n         * For formats where row stride is well defined, the row stride\n         * is always greater than 0.</p>\n         ",
    "links" : [ "android.graphics.ImageFormat#RAW_PRIVATE" ]
  }, {
    "name" : "public abstract int getPixelStride()",
    "returnType" : "int",
    "comment" : "\n         * <p>The distance between adjacent pixel samples, in bytes.</p>\n         *\n         * <p>This is the distance between two consecutive pixel values in a row\n         * of pixels. It may be larger than the size of a single pixel to\n         * account for interleaved image data or padded formats.\n         * Note that pixel stride is undefined for some formats such as\n         * {@link android.graphics.ImageFormat#RAW_PRIVATE RAW_PRIVATE},\n         * and calling getPixelStride on images of these formats will\n         * cause an UnsupportedOperationException being thrown.\n         * For formats where pixel stride is well defined, the pixel stride\n         * is always greater than 0.</p>\n         ",
    "links" : [ "android.graphics.ImageFormat#RAW_PRIVATE" ]
  }, {
    "name" : "public abstract ByteBuffer getBuffer()",
    "returnType" : "ByteBuffer",
    "comment" : "\n         * <p>Get a direct {@link java.nio.ByteBuffer ByteBuffer}\n         * containing the frame data.</p>\n         *\n         * <p>In particular, the buffer returned will always have\n         * {@link java.nio.ByteBuffer#isDirect isDirect} return {@code true}, so\n         * the underlying data could be mapped as a pointer in JNI without doing\n         * any copies with {@code GetDirectBufferAddress}.</p>\n         *\n         * <p>For raw formats, each plane is only guaranteed to contain data\n         * up to the last pixel in the last row. In other words, the stride\n         * after the last row may not be mapped into the buffer. This is a\n         * necessary requirement for any interleaved format.</p>\n         *\n         * @return the byte buffer containing the image data for this plane.\n         ",
    "links" : [ "java.nio.ByteBuffer#isDirect", "java.nio.ByteBuffer" ]
  } ],
  "methodNames" : [ "public abstract int getRowStride()", "public abstract int getPixelStride()", "public abstract ByteBuffer getBuffer()" ],
  "variableNames" : [ ]
}