{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/CallScreeningService.java",
  "packageName" : "android.telecom",
  "className" : "Builder",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mShouldDisallowCall",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShouldRejectCall",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShouldSilenceCall",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShouldSkipCallLog",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShouldSkipNotification",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShouldScreenCallViaAudioProcessing",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallComposerAttachmentsToShow",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setDisallowCall(boolean shouldDisallowCall)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether the incoming call should be blocked.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setRejectCall(boolean shouldRejectCall)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether the incoming call should be disconnected as if the user had manually\n             * rejected it. This property should only be set to true if the call is disallowed.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSilenceCall(boolean shouldSilenceCall)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether ringing should be silenced for the incoming call.  When set\n             * to {@code true}, the Telecom framework will not play a ringtone for the call.\n             * The call will, however, still be sent to the default dialer app if it is not blocked.\n             * A {@link CallScreeningService} can use this to ensure a potential nuisance call is\n             * still surfaced to the user, but in a less intrusive manner.\n             *\n             * Setting this to true only makes sense when the call has not been disallowed\n             * using {@link #setDisallowCall(boolean)}.\n             ",
    "links" : [ "com.android.internal.telecom.ICallScreeningService", "#setDisallowCall(boolean)" ]
  }, {
    "name" : "public Builder setSkipCallLog(boolean shouldSkipCallLog)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether the incoming call should not be displayed in the call log. This property\n             * should only be set to true if the call is disallowed.\n             * <p>\n             * Note: Calls will still be logged with type\n             * {@link android.provider.CallLog.Calls#BLOCKED_TYPE}, regardless of how this property\n             * is set.\n             * <p>\n             * Note: Only the carrier and system call screening apps can use this parameter;\n             * this parameter is ignored otherwise.\n             ",
    "links" : [ "android.provider.CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "public Builder setSkipNotification(boolean shouldSkipNotification)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether a missed call notification should not be shown for the incoming call.\n             * This property should only be set to true if the call is disallowed.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setShouldScreenCallViaAudioProcessing(boolean shouldScreenCallViaAudioProcessing)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether to request background audio processing so that the in-call service can\n             * screen the call further. If set to {@code true}, {@link #setDisallowCall} should be\n             * called with {@code false}, and all other parameters in this builder will be ignored.\n             * <p>\n             * This request will only be honored if the {@link CallScreeningService} shares the same\n             * uid as the system dialer app. Otherwise, the call will go through as usual.\n             * <p>\n             * Apps built with SDK version {@link android.os.Build.VERSION_CODES#R} or later which\n             * are using the microphone as part of audio processing should specify the\n             * foreground service type using the attribute\n             * {@link android.R.attr#foregroundServiceType} in the {@link CallScreeningService}\n             * service element of the app's manifest file.\n             * The {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MICROPHONE} attribute should be\n             * specified.\n             * @see\n             * <a href=\"https://developer.android.com/preview/privacy/foreground-service-types\">\n             *     the Android Developer Site</a> for more information.\n             *\n             * @param shouldScreenCallViaAudioProcessing Whether to request further call screening.\n             * @hide\n             ",
    "links" : [ "android.os.Build.VERSION_CODES#R", "com.android.internal.telecom.ICallScreeningService", "#setDisallowCall", "android.R.attr#foregroundServiceType", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MICROPHONE" ]
  }, {
    "name" : "public Builder setCallComposerAttachmentsToShow(@CallComposerAttachmentType int callComposerAttachmentsToShow)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets the call composer attachments that should be shown to the user.\n             *\n             * Attachments that are not shown will not be passed to the in-call UI responsible for\n             * displaying the call to the user.\n             *\n             * If this method is not called on a {@link Builder}, all attachments will be shown,\n             * except pictures, which will only be shown to users if the call is from a contact.\n             *\n             * Setting attachments to show will have no effect if the call screening service does\n             * not belong to the same package as the system dialer (as returned by\n             * {@link TelecomManager#getSystemDialerPackage()}).\n             *\n             * @param callComposerAttachmentsToShow A bitmask of call composer attachments to show.\n             ",
    "links" : [ "android.telecom.TelecomManager#getSystemDialerPackage()", "Builder" ]
  }, {
    "name" : "public CallResponse build()",
    "returnType" : "CallResponse",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setDisallowCall(boolean shouldDisallowCall)", "public Builder setRejectCall(boolean shouldRejectCall)", "public Builder setSilenceCall(boolean shouldSilenceCall)", "public Builder setSkipCallLog(boolean shouldSkipCallLog)", "public Builder setSkipNotification(boolean shouldSkipNotification)", "public Builder setShouldScreenCallViaAudioProcessing(boolean shouldScreenCallViaAudioProcessing)", "public Builder setCallComposerAttachmentsToShow(@CallComposerAttachmentType int callComposerAttachmentsToShow)", "public CallResponse build()" ],
  "variableNames" : [ "mShouldDisallowCall", "mShouldRejectCall", "mShouldSilenceCall", "mShouldSkipCallLog", "mShouldSkipNotification", "mShouldScreenCallViaAudioProcessing", "mCallComposerAttachmentsToShow" ]
}