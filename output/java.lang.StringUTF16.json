{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/StringUTF16.java",
  "packageName" : "java.lang",
  "className" : "StringUTF16",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "HI_BYTE_SHIFT",
    "type" : "int",
    "comment" : "\n    private static native boolean isBigEndian();\n\n    static final int HI_BYTE_SHIFT;\n    static final int LO_BYTE_SHIFT;\n    static {\n        if (isBigEndian()) {\n            HI_BYTE_SHIFT = 8;\n            LO_BYTE_SHIFT = 0;\n        } else {\n            HI_BYTE_SHIFT = 0;\n            LO_BYTE_SHIFT = 8;\n        }\n    }\n    ",
    "links" : [ ]
  }, {
    "name" : "LO_BYTE_SHIFT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_LENGTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static byte[] newBytesFor(int len)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void putChar(byte[] val, int index, int c)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static char getChar(byte[] val, int index)",
    "returnType" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static char getChar(String val, int index)",
    "returnType" : "char",
    "comment" : "\n    static char getChar(byte[] val, int index) {\n        assert index >= 0 && index < length(val) : \"Trusted caller missed bounds check\";\n        index <<= 1;\n        return (char)(((val[index++] & 0xff) << HI_BYTE_SHIFT) |\n                      ((val[index]   & 0xff) << LO_BYTE_SHIFT));\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int length(byte[] value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int length(String value)",
    "returnType" : "int",
    "comment" : "\n    public static int length(byte[] value) {\n        return value.length >> 1;\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int codePointAt(byte[] value, int index, int end, boolean checked)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int codePointAt(byte[] value, int index, int end)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int codePointBefore(byte[] value, int index, boolean checked)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int codePointBefore(byte[] value, int index)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int codePointCount(byte[] value, int beginIndex, int endIndex, boolean checked)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int codePointCount(byte[] value, int beginIndex, int endIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static char[] toChars(byte[] value)",
    "returnType" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] toBytes(char[] value, int off, int len)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] compress(char[] val, int off, int len)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] compress(byte[] val, int off, int len)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int compress(char[] src, int srcOff, byte[] dst, int dstOff, int len)",
    "returnType" : "int",
    "comment" : " compressedCopy char[] -> byte[]",
    "links" : [ ]
  }, {
    "name" : "public static int compress(byte[] src, int srcOff, byte[] dst, int dstOff, int len)",
    "returnType" : "int",
    "comment" : " compressedCopy byte[] -> byte[]",
    "links" : [ ]
  }, {
    "name" : "public static byte[] toBytes(int[] val, int index, int len)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static byte[] toBytes(char c)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static byte[] toBytesSupplementary(int cp)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void getChars(byte[] value, int srcBegin, int srcEnd, char[] dst, int dstBegin)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void getBytes(byte[] value, int srcBegin, int srcEnd, byte[] dst, int dstBegin)",
    "returnType" : "void",
    "comment" : " @see java.lang.String.getBytes(int, int, byte[], int) ",
    "links" : [ ]
  }, {
    "name" : "public static boolean equals(byte[] value, byte[] other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int compareTo(byte[] value, byte[] other)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int compareTo(byte[] value, byte[] other, int len1, int len2)",
    "returnType" : "int",
    "comment" : "\n     * Checks the boundary and then compares the byte arrays.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int compareValues(byte[] value, byte[] other, int len1, int len2)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int compareToLatin1(byte[] value, byte[] other)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int compareToLatin1(byte[] value, byte[] other, int len1, int len2)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int compareToCI(byte[] value, byte[] other)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int compareToCI_Latin1(byte[] value, byte[] other)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int hashCode(byte[] value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int indexOf(byte[] value, int ch, int fromIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int indexOf(byte[] value, int valueCount, String str, int strCount, int fromIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int indexOfUnsafe(byte[] value, int valueCount, String str, int strCount, int fromIndex)",
    "returnType" : "int",
    "comment" : " private static int indexOfUnsafe(byte[] value, int valueCount, byte[] str, int strCount, int fromIndex) {",
    "links" : [ ]
  }, {
    "name" : "public static int indexOfLatin1(byte[] src, int srcCount, String tgt, int tgtCount, int fromIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int indexOfLatin1Unsafe(byte[] src, int srcCount, String tgt, int tgtCount, int fromIndex)",
    "returnType" : "int",
    "comment" : " public static int indexOfLatin1Unsafe(byte[] src, int srcCount, byte[] tgt, int tgtCount, int fromIndex) {",
    "links" : [ ]
  }, {
    "name" : "private static int indexOfChar(byte[] value, int ch, int fromIndex, int max)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int indexOfCharUnsafe(byte[] value, int ch, int fromIndex, int max)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int indexOfSupplementary(byte[] value, int ch, int fromIndex, int max)",
    "returnType" : "int",
    "comment" : "\n     * Handles (rare) calls of indexOf with a supplementary character.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int lastIndexOf(byte[] src, int srcCount, String tgt, int tgtCount, int fromIndex)",
    "returnType" : "int",
    "comment" : " Android-changed: libcore doesn't store String as Latin1 or UTF16 byte[] field.",
    "links" : [ ]
  }, {
    "name" : "public static int lastIndexOf(byte[] value, int ch, int fromIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int lastIndexOfSupplementary(final byte[] value, int ch, int fromIndex)",
    "returnType" : "int",
    "comment" : "\n     * Handles (rare) calls of lastIndexOf with a supplementary character.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String replace(byte[] value, char oldChar, char newChar)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String trim(byte[] value)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int indexOfNonWhitespace(String value)",
    "returnType" : "int",
    "comment" : "\n    public static int indexOfNonWhitespace(byte[] value) {\n        int length = value.length >> 1;\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int lastIndexOfNonWhitespace(String value)",
    "returnType" : "int",
    "comment" : "\n    public static int lastIndexOfNonWhitespace(byte[] value) {\n        int length = value.length >> 1;\n        int right = length;\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String strip(String value)",
    "returnType" : "String",
    "comment" : "\n    public static String strip(byte[] value) {\n        int length = value.length >> 1;\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String stripLeading(String value)",
    "returnType" : "String",
    "comment" : "\n    public static String stripLeading(byte[] value) {\n        int length = value.length >> 1;\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String stripTrailing(String value)",
    "returnType" : "String",
    "comment" : "\n    public static String stripTrailing(byte[] value) {\n        int length = value.length >> 1;\n     ",
    "links" : [ ]
  }, {
    "name" : " static Stream<String> lines(String value)",
    "returnType" : "Stream<String>",
    "comment" : "\n    static Stream<String> lines(byte[] value) {\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void putChars(byte[] val, int index, char[] str, int off, int end)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String newString(byte[] val, int index, int len)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String newString(String val, int index, int len)",
    "returnType" : "String",
    "comment" : "\n    public static String newString(byte[] val, int index, int len) {\n        if (String.COMPACT_STRINGS) {\n            byte[] buf = compress(val, index, len);\n            if (buf != null) {\n                return new String(buf, LATIN1);\n            }\n        }\n        int last = index + len;\n        return new String(Arrays.copyOfRange(val, index << 1, last << 1), UTF16);\n    }\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void fillNull(byte[] val, int index, int end)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void putCharSB(byte[] val, int index, int c)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void putCharsSB(byte[] val, int index, char[] ca, int off, int end)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void putCharsSB(byte[] val, int index, CharSequence s, int off, int end)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int codePointAtSB(byte[] val, int index, int end)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int codePointBeforeSB(byte[] val, int index)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int codePointCountSB(byte[] val, int beginIndex, int endIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int getChars(int i, int begin, int end, byte[] value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int getChars(long l, int begin, int end, byte[] value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean contentEquals(byte[] v1, byte[] v2, int len)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean contentEquals(byte[] value, CharSequence cs, int len)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static char charAt(byte[] value, int index)",
    "returnType" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static char charAt(String value, int index)",
    "returnType" : "char",
    "comment" : " BEGIN Android-added: Pass String instead of byte[].",
    "links" : [ ]
  }, {
    "name" : "public static void reverse(byte[] val, int count)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void reverseAllValidSurrogatePairs(byte[] val, int count)",
    "returnType" : "void",
    "comment" : " Outlined helper method for reverse() ",
    "links" : [ ]
  }, {
    "name" : "public static void inflate(byte[] src, int srcOff, byte[] dst, int dstOff, int len)",
    "returnType" : "void",
    "comment" : " inflatedCopy byte[] -> byte[]",
    "links" : [ ]
  }, {
    "name" : "public static int lastIndexOfLatin1(byte[] src, int srcCount, String tgt, int tgtCount, int fromIndex)",
    "returnType" : "int",
    "comment" : " Android-changed: libcore doesn't store String as Latin1 or UTF16 byte[] field.",
    "links" : [ ]
  }, {
    "name" : " static int getChars(int i, int index, byte[] buf)",
    "returnType" : "int",
    "comment" : "\n     * This is a variant of {@link Integer#getChars(int, int, byte[])}, but for\n     * UTF-16 coder.\n     *\n     * @param i     value to convert\n     * @param index next index, after the least significant digit\n     * @param buf   target buffer, UTF16-coded.\n     * @return index of the most significant digit or minus sign, if present\n     ",
    "links" : [ "java.lang.Integer#getChars(int" ]
  }, {
    "name" : " static int getChars(long i, int index, byte[] buf)",
    "returnType" : "int",
    "comment" : "\n     * This is a variant of {@link Long#getChars(long, int, byte[])}, but for\n     * UTF-16 coder.\n     *\n     * @param i     value to convert\n     * @param index next index, after the least significant digit\n     * @param buf   target buffer, UTF16-coded.\n     * @return index of the most significant digit or minus sign, if present\n     ",
    "links" : [ "java.lang.Long#getChars(long" ]
  }, {
    "name" : "public static void checkIndex(int off, byte[] val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void checkIndex(int off, String val)",
    "returnType" : "void",
    "comment" : " BEGIN Android-added: Pass String instead of byte[].",
    "links" : [ ]
  }, {
    "name" : "public static void checkOffset(int off, byte[] val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void checkBoundsBeginEnd(int begin, int end, byte[] val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void checkBoundsOffCount(int offset, int count, byte[] val)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static byte[] newBytesFor(int len)", " static void putChar(byte[] val, int index, int c)", "public static char getChar(byte[] val, int index)", " static char getChar(String val, int index)", "public static int length(byte[] value)", "public static int length(String value)", "private static int codePointAt(byte[] value, int index, int end, boolean checked)", "public static int codePointAt(byte[] value, int index, int end)", "private static int codePointBefore(byte[] value, int index, boolean checked)", "public static int codePointBefore(byte[] value, int index)", "private static int codePointCount(byte[] value, int beginIndex, int endIndex, boolean checked)", "public static int codePointCount(byte[] value, int beginIndex, int endIndex)", "public static char[] toChars(byte[] value)", "public static byte[] toBytes(char[] value, int off, int len)", "public static byte[] compress(char[] val, int off, int len)", "public static byte[] compress(byte[] val, int off, int len)", "public static int compress(char[] src, int srcOff, byte[] dst, int dstOff, int len)", "public static int compress(byte[] src, int srcOff, byte[] dst, int dstOff, int len)", "public static byte[] toBytes(int[] val, int index, int len)", "public static byte[] toBytes(char c)", " static byte[] toBytesSupplementary(int cp)", "public static void getChars(byte[] value, int srcBegin, int srcEnd, char[] dst, int dstBegin)", "public static void getBytes(byte[] value, int srcBegin, int srcEnd, byte[] dst, int dstBegin)", "public static boolean equals(byte[] value, byte[] other)", "public static int compareTo(byte[] value, byte[] other)", "public static int compareTo(byte[] value, byte[] other, int len1, int len2)", "private static int compareValues(byte[] value, byte[] other, int len1, int len2)", "public static int compareToLatin1(byte[] value, byte[] other)", "public static int compareToLatin1(byte[] value, byte[] other, int len1, int len2)", "public static int compareToCI(byte[] value, byte[] other)", "public static int compareToCI_Latin1(byte[] value, byte[] other)", "public static int hashCode(byte[] value)", "public static int indexOf(byte[] value, int ch, int fromIndex)", "public static int indexOf(byte[] value, int valueCount, String str, int strCount, int fromIndex)", "private static int indexOfUnsafe(byte[] value, int valueCount, String str, int strCount, int fromIndex)", "public static int indexOfLatin1(byte[] src, int srcCount, String tgt, int tgtCount, int fromIndex)", "public static int indexOfLatin1Unsafe(byte[] src, int srcCount, String tgt, int tgtCount, int fromIndex)", "private static int indexOfChar(byte[] value, int ch, int fromIndex, int max)", "private static int indexOfCharUnsafe(byte[] value, int ch, int fromIndex, int max)", "private static int indexOfSupplementary(byte[] value, int ch, int fromIndex, int max)", "public static int lastIndexOf(byte[] src, int srcCount, String tgt, int tgtCount, int fromIndex)", "public static int lastIndexOf(byte[] value, int ch, int fromIndex)", "private static int lastIndexOfSupplementary(final byte[] value, int ch, int fromIndex)", "public static String replace(byte[] value, char oldChar, char newChar)", "public static String trim(byte[] value)", "public static int indexOfNonWhitespace(String value)", "public static int lastIndexOfNonWhitespace(String value)", "public static String strip(String value)", "public static String stripLeading(String value)", "public static String stripTrailing(String value)", " static Stream<String> lines(String value)", "private static void putChars(byte[] val, int index, char[] str, int off, int end)", "public static String newString(byte[] val, int index, int len)", "public static String newString(String val, int index, int len)", "public static void fillNull(byte[] val, int index, int end)", "public static void putCharSB(byte[] val, int index, int c)", "public static void putCharsSB(byte[] val, int index, char[] ca, int off, int end)", "public static void putCharsSB(byte[] val, int index, CharSequence s, int off, int end)", "public static int codePointAtSB(byte[] val, int index, int end)", "public static int codePointBeforeSB(byte[] val, int index)", "public static int codePointCountSB(byte[] val, int beginIndex, int endIndex)", "public static int getChars(int i, int begin, int end, byte[] value)", "public static int getChars(long l, int begin, int end, byte[] value)", "public static boolean contentEquals(byte[] v1, byte[] v2, int len)", "public static boolean contentEquals(byte[] value, CharSequence cs, int len)", "public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4)", "public static int putCharsAt(byte[] value, int i, char c1, char c2, char c3, char c4, char c5)", "public static char charAt(byte[] value, int index)", "public static char charAt(String value, int index)", "public static void reverse(byte[] val, int count)", "private static void reverseAllValidSurrogatePairs(byte[] val, int count)", "public static void inflate(byte[] src, int srcOff, byte[] dst, int dstOff, int len)", "public static int lastIndexOfLatin1(byte[] src, int srcCount, String tgt, int tgtCount, int fromIndex)", " static int getChars(int i, int index, byte[] buf)", " static int getChars(long i, int index, byte[] buf)", "public static void checkIndex(int off, byte[] val)", "public static void checkIndex(int off, String val)", "public static void checkOffset(int off, byte[] val)", "public static void checkBoundsBeginEnd(int begin, int end, byte[] val)", "public static void checkBoundsOffCount(int offset, int count, byte[] val)" ],
  "variableNames" : [ "HI_BYTE_SHIFT", "LO_BYTE_SHIFT", "MAX_LENGTH" ]
}