{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/utils/XMLReaderManager.java",
  "packageName" : "org.apache.xml.utils",
  "className" : "XMLReaderManager",
  "comment" : "\n * Creates XMLReader objects and caches them for re-use.\n * This class follows the singleton pattern.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "NAMESPACES_FEATURE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NAMESPACE_PREFIXES_FEATURE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_singletonManager",
    "type" : "XMLReaderManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_parserFactory",
    "type" : "SAXParserFactory",
    "comment" : "\n     * Parser factory to be used to construct XMLReader objects\n     ",
    "links" : [ ]
  }, {
    "name" : "m_readers",
    "type" : "ThreadLocal",
    "comment" : "\n     * Cache of XMLReader objects\n     ",
    "links" : [ ]
  }, {
    "name" : "m_inUse",
    "type" : "Hashtable",
    "comment" : "\n     * Keeps track of whether an XMLReader object is in use.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static XMLReaderManager getInstance()",
    "returnType" : "XMLReaderManager",
    "comment" : "\n     * Retrieves the singleton reader manager\n     ",
    "links" : [ ]
  }, {
    "name" : "public synchronized XMLReader getXMLReader() throws SAXException",
    "returnType" : "XMLReader",
    "comment" : "\n     * Retrieves a cached XMLReader for this thread, or creates a new\n     * XMLReader, if the existing reader is in use.  When the caller no\n     * longer needs the reader, it must release it with a call to\n     * {@link #releaseXMLReader}.\n     ",
    "links" : [ "#releaseXMLReader" ]
  }, {
    "name" : "public synchronized void releaseXMLReader(XMLReader reader)",
    "returnType" : "void",
    "comment" : "\n     * Mark the cached XMLReader as available.  If the reader was not\n     * actually in the cache, do nothing.\n     *\n     * @param reader The XMLReader that's being released.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static XMLReaderManager getInstance()", "public synchronized XMLReader getXMLReader() throws SAXException", "public synchronized void releaseXMLReader(XMLReader reader)" ],
  "variableNames" : [ "NAMESPACES_FEATURE", "NAMESPACE_PREFIXES_FEATURE", "m_singletonManager", "m_parserFactory", "m_readers", "m_inUse" ]
}