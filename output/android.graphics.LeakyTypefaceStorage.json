{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/LeakyTypefaceStorage.java",
  "packageName" : "android.graphics",
  "className" : "LeakyTypefaceStorage",
  "comment" : "\n * This class is used for Parceling Typeface object.\n * Note: Typeface object can not be passed over the process boundary.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "sLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sStorage",
    "type" : "ArrayList<Typeface>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sTypefaceMap",
    "type" : "ArrayMap<Typeface, Integer>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void writeTypefaceToParcel(@Nullable Typeface typeface, @NonNull Parcel parcel)",
    "returnType" : "void",
    "comment" : "\n     * Write typeface to parcel.\n     *\n     * You can't transfer Typeface to a different process. {@link readTypefaceFromParcel} will\n     * return {@code null} if the {@link readTypefaceFromParcel} is called in a different process.\n     *\n     * @param typeface A {@link Typeface} to be written.\n     * @param parcel A {@link Parcel} object.\n     ",
    "links" : [ "android.graphics.Typeface", "readTypefaceFromParcel", "android.os.Parcel" ]
  }, {
    "name" : "public static Typeface readTypefaceFromParcel(@NonNull Parcel parcel)",
    "returnType" : "Typeface",
    "comment" : "\n     * Read typeface from parcel.\n     *\n     * If the {@link Typeface} was created in another process, this method returns null.\n     *\n     * @param parcel A {@link Parcel} object\n     * @return A {@link Typeface} object.\n     ",
    "links" : [ "android.graphics.Typeface", "android.os.Parcel" ]
  } ],
  "variableNames" : [ "sLock", "sStorage", "sTypefaceMap" ],
  "methodNames" : [ "public static void writeTypefaceToParcel(@Nullable Typeface typeface, @NonNull Parcel parcel)", "public static Typeface readTypefaceFromParcel(@NonNull Parcel parcel)" ]
}