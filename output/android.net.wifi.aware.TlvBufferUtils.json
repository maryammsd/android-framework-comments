{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/aware/TlvBufferUtils.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "TlvBufferUtils",
  "comment" : "\n * Utility class to construct and parse byte arrays using the TLV format -\n * Type/Length/Value format. The utilities accept a configuration of the size of\n * the Type field and the Length field. A Type field size of 0 is allowed -\n * allowing usage for LV (no T) array formats.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static boolean isValid(@Nullable byte[] array, int typeSize, int lengthSize)",
    "returnType" : "boolean",
    "comment" : "\n     * Validates that a (T)LV array is constructed correctly. I.e. that its specified Length\n     * fields correctly fill the specified length (and do not overshoot). Uses big-endian\n     * byte ordering.\n     *\n     * @param array The (T)LV array to verify.\n     * @param typeSize The size (in bytes) of the type field. Valid values are 0, 1, or 2.\n     * @param lengthSize The size (in bytes) of the length field. Valid values are 1 or 2.\n     * @return A boolean indicating whether the array is valid (true) or invalid (false).\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isValidEndian(@Nullable byte[] array, int typeSize, int lengthSize, ByteOrder byteOrder)",
    "returnType" : "boolean",
    "comment" : "\n     * Validates that a (T)LV array is constructed correctly. I.e. that its specified Length\n     * fields correctly fill the specified length (and do not overshoot).\n     *\n     * @param array The (T)LV array to verify.\n     * @param typeSize The size (in bytes) of the type field. Valid values are 0, 1, or 2.\n     * @param lengthSize The size (in bytes) of the length field. Valid values are 1 or 2.\n     * @param byteOrder The endianness of the byte array: {@link ByteOrder#BIG_ENDIAN} or\n     *                  {@link ByteOrder#LITTLE_ENDIAN}.\n     * @return A boolean indicating whether the array is valid (true) or invalid (false).\n     ",
    "links" : [ "java.nio.ByteOrder#BIG_ENDIAN", "java.nio.ByteOrder#LITTLE_ENDIAN" ]
  }, {
    "name" : "private static void pokeShort(byte[] dst, int offset, short value, ByteOrder order)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void pokeInt(byte[] dst, int offset, int value, ByteOrder order)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static short peekShort(byte[] src, int offset, ByteOrder order)",
    "returnType" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int peekInt(byte[] src, int offset, ByteOrder order)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static boolean isValid(@Nullable byte[] array, int typeSize, int lengthSize)", "public static boolean isValidEndian(@Nullable byte[] array, int typeSize, int lengthSize, ByteOrder byteOrder)", "private static void pokeShort(byte[] dst, int offset, short value, ByteOrder order)", "private static void pokeInt(byte[] dst, int offset, int value, ByteOrder order)", "private static short peekShort(byte[] src, int offset, ByteOrder order)", "private static int peekInt(byte[] src, int offset, ByteOrder order)" ],
  "variableNames" : [ ]
}