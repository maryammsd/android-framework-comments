{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/location/NanoAppMessage.java",
  "packageName" : "android.hardware.location",
  "className" : "NanoAppMessage",
  "comment" : "\n * A class describing messages send to or from nanoapps through the Context Hub Service.\n *\n * The basis of the class is in the IContextHub.hal ContextHubMsg definition.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEBUG_LOG_NUM_BYTES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNanoAppId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageBody",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsBroadcasted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsReliable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMessageSequenceNumber",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<NanoAppMessage>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static NanoAppMessage createMessageToNanoApp(long targetNanoAppId, int messageType, byte[] messageBody)",
    "returnType" : "NanoAppMessage",
    "comment" : "\n     * Creates a NanoAppMessage object to send to a nanoapp.\n     *\n     * This factory method can be used to generate a NanoAppMessage object to be used in\n     * the ContextHubClient.sendMessageToNanoApp API.\n     *\n     * @param targetNanoAppId the ID of the nanoapp to send the message to\n     * @param messageType the nanoapp-dependent message type\n     *                    the value CHRE_MESSAGE_TYPE_RPC (0x7FFFFFF5) is reserved by the\n     *                    framework for RPC messages\n     * @param messageBody the byte array message contents\n     *\n     * @return the NanoAppMessage object\n     ",
    "links" : [ ]
  }, {
    "name" : "public static NanoAppMessage createMessageFromNanoApp(long sourceNanoAppId, int messageType, byte[] messageBody, boolean broadcasted)",
    "returnType" : "NanoAppMessage",
    "comment" : "\n     * Creates a NanoAppMessage object sent from a nanoapp.\n     *\n     * This factory method is intended only to be used by the Context Hub Service when delivering\n     * messages from a nanoapp to clients.\n     *\n     * @param sourceNanoAppId the ID of the nanoapp that the message was sent from\n     * @param messageType the nanoapp-dependent message type\n     * @param messageBody the byte array message contents\n     * @param broadcasted {@code true} if the message was broadcasted, {@code false} otherwise\n     *\n     * @return the NanoAppMessage object\n     ",
    "links" : [ ]
  }, {
    "name" : "public static NanoAppMessage createMessageFromNanoApp(long sourceNanoAppId, int messageType, @NonNull byte[] messageBody, boolean broadcasted, boolean isReliable, int messageSequenceNumber)",
    "returnType" : "NanoAppMessage",
    "comment" : "\n     * Creates a NanoAppMessage object sent from a nanoapp.\n     *\n     * This factory method is intended only to be used by the Context Hub Service when delivering\n     * messages from a nanoapp to clients.\n     *\n     * @param sourceNanoAppId the ID of the nanoapp that the message was sent from\n     * @param messageType the nanoapp-dependent message type\n     * @param messageBody the byte array message contents\n     * @param broadcasted {@code true} if the message was broadcasted, {@code false} otherwise\n     * @param isReliable if the NanoAppMessage is reliable\n     * @param messageSequenceNumber the message sequence number of the NanoAppMessage\n     *\n     * @return the NanoAppMessage object\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getNanoAppId()",
    "returnType" : "long",
    "comment" : "\n     * @return the ID of the source or destination nanoapp\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMessageType()",
    "returnType" : "int",
    "comment" : "\n     * @return the type of the message that is nanoapp-dependent\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getMessageBody()",
    "returnType" : "byte[]",
    "comment" : "\n     * @return the byte array contents of the message\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBroadcastMessage()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if the message is broadcasted, {@code false} otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isReliable()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns if the message is reliable. The default value is {@code false}\n     * @return {@code true} if the message is reliable, {@code false} otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMessageSequenceNumber()",
    "returnType" : "int",
    "comment" : "\n     * Returns the message sequence number. The default value is 0\n     * @return the message sequence number of the message\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIsReliable(boolean isReliable)",
    "returnType" : "void",
    "comment" : "\n     * Sets the isReliable field of the message\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMessageSequenceNumber(int messageSequenceNumber)",
    "returnType" : "void",
    "comment" : "\n     * Sets the message sequence number of the message\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object object)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static NanoAppMessage createMessageToNanoApp(long targetNanoAppId, int messageType, byte[] messageBody)", "public static NanoAppMessage createMessageFromNanoApp(long sourceNanoAppId, int messageType, byte[] messageBody, boolean broadcasted)", "public static NanoAppMessage createMessageFromNanoApp(long sourceNanoAppId, int messageType, @NonNull byte[] messageBody, boolean broadcasted, boolean isReliable, int messageSequenceNumber)", "public long getNanoAppId()", "public int getMessageType()", "public byte[] getMessageBody()", "public boolean isBroadcastMessage()", "public boolean isReliable()", "public int getMessageSequenceNumber()", "public void setIsReliable(boolean isReliable)", "public void setMessageSequenceNumber(int messageSequenceNumber)", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "public String toString()", "public boolean equals(@Nullable Object object)" ],
  "variableNames" : [ "DEBUG_LOG_NUM_BYTES", "mNanoAppId", "mMessageType", "mMessageBody", "mIsBroadcasted", "mIsReliable", "mMessageSequenceNumber", "CREATOR" ]
}