{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/autofill/UserData.java",
  "packageName" : "android.service.autofill",
  "className" : "Builder",
  "comment" : "\n     * A builder for {@link UserData} objects.\n     ",
  "links" : [ "android.service.autofill.UserData" ],
  "variables" : [ {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCategoryIds",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mValues",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultAlgorithm",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultArgs",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCategoryAlgorithms",
    "type" : "ArrayMap<String, String>",
    "comment" : " Map of autofill field categories to fleid classification algorithms and args",
    "links" : [ ]
  }, {
    "name" : "mCategoryArgs",
    "type" : "ArrayMap<String, Bundle>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDestroyed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUniqueCategoryIds",
    "type" : "ArraySet<String>",
    "comment" : " Non-persistent array used to limit the number of unique ids.",
    "links" : [ ]
  }, {
    "name" : "mUniqueValueCategoryPairs",
    "type" : "ArraySet<String>",
    "comment" : " Non-persistent array used to ignore duplaicated value/category pairs.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setFieldClassificationAlgorithm(@Nullable String name, @Nullable Bundle args)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the default algorithm used for\n         * <a href=\"#FieldClassification\">field classification</a>.\n         *\n         * <p>The currently available algorithms can be retrieve through\n         * {@link AutofillManager#getAvailableFieldClassificationAlgorithms()}.\n         *\n         * <p>If not set, the\n         * {@link AutofillManager#getDefaultFieldClassificationAlgorithm() default algorithm} is\n         * used instead.\n         *\n         * @param name name of the algorithm or {@code null} to used default.\n         * @param args optional arguments to the algorithm.\n         *\n         * @return this builder\n         ",
    "links" : [ "android.view.autofill.AutofillManager#getDefaultFieldClassificationAlgorithm()", "android.view.autofill.AutofillManager#getAvailableFieldClassificationAlgorithms()" ]
  }, {
    "name" : "public Builder setFieldClassificationAlgorithmForCategory(@NonNull String categoryId, @Nullable String name, @Nullable Bundle args)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the algorithm used for <a href=\"#FieldClassification\">field classification</a>\n         * for the specified category.\n         *\n         * <p>The currently available algorithms can be retrieved through\n         * {@link AutofillManager#getAvailableFieldClassificationAlgorithms()}.\n         *\n         * <p>If not set, the\n         * {@link AutofillManager#getDefaultFieldClassificationAlgorithm() default algorithm} is\n         * used instead.\n         *\n         * @param categoryId autofill field category.\n         * @param name name of the algorithm or {@code null} to used default.\n         * @param args optional arguments to the algorithm.\n         *\n         * @return this builder\n         ",
    "links" : [ "android.view.autofill.AutofillManager#getDefaultFieldClassificationAlgorithm()", "android.view.autofill.AutofillManager#getAvailableFieldClassificationAlgorithms()" ]
  }, {
    "name" : "public Builder add(@NonNull String value, @NonNull String categoryId)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a new value for user data.\n         *\n         * @param value value of the user data.\n         * @param categoryId string used to identify the category the value is associated with.\n         *\n         * @throws IllegalStateException if:\n         * <ul>\n         *   <li>{@link #build()} already called</li>\n         *   <li>the {@code value} has already been added (<b>Note: </b> this restriction was\n         *   lifted on Android {@link android.os.Build.VERSION_CODES#Q} and later)</li>\n         *   <li>the number of unique {@code categoryId} values added so far is more than\n         *       {@link UserData#getMaxCategoryCount()}</li>\n         *   <li>the number of {@code values} added so far is is more than\n         *       {@link UserData#getMaxUserDataSize()}</li>\n         * </ul>\n         *\n         * @throws IllegalArgumentException if any of the following occurs:\n         * <ul>\n         *   <li>{@code id} is empty</li>\n         *   <li>{@code categoryId} is empty</li>\n         *   <li>{@code value} is empty</li>\n         *   <li>the length of {@code value} is lower than {@link UserData#getMinValueLength()}</li>\n         *   <li>the length of {@code value} is higher than\n         *       {@link UserData#getMaxValueLength()}</li>\n         * </ul>\n         ",
    "links" : [ "#build()", "android.os.Build.VERSION_CODES#Q", "android.service.autofill.UserData#getMinValueLength()", "android.service.autofill.UserData#getMaxValueLength()", "android.service.autofill.UserData#getMaxCategoryCount()", "android.service.autofill.UserData#getMaxUserDataSize()" ]
  }, {
    "name" : "private void addMapping(@NonNull String value, @NonNull String categoryId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String checkNotEmpty(@NonNull String name, @Nullable String value)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void checkValidValue(@Nullable String value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public UserData build()",
    "returnType" : "UserData",
    "comment" : "\n         * Creates a new {@link UserData} instance.\n         *\n         * <p>You should not interact with this builder once this method is called.\n         *\n         * @throws IllegalStateException if {@link #build()} was already called.\n         *\n         * @return The built dataset.\n         ",
    "links" : [ "#build()", "android.service.autofill.UserData" ]
  }, {
    "name" : "private void throwIfDestroyed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setFieldClassificationAlgorithm(@Nullable String name, @Nullable Bundle args)", "public Builder setFieldClassificationAlgorithmForCategory(@NonNull String categoryId, @Nullable String name, @Nullable Bundle args)", "public Builder add(@NonNull String value, @NonNull String categoryId)", "private void addMapping(@NonNull String value, @NonNull String categoryId)", "private String checkNotEmpty(@NonNull String name, @Nullable String value)", "private void checkValidValue(@Nullable String value)", "public UserData build()", "private void throwIfDestroyed()" ],
  "variableNames" : [ "mId", "mCategoryIds", "mValues", "mDefaultAlgorithm", "mDefaultArgs", "mCategoryAlgorithms", "mCategoryArgs", "mDestroyed", "mUniqueCategoryIds", "mUniqueValueCategoryPairs" ]
}