{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/SimpleMonthView.java",
  "packageName" : "android.widget",
  "className" : "SimpleMonthView",
  "comment" : "\n * A calendar-like view displaying a specified month and the appropriate selectable day numbers\n * within the specified month.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DAYS_IN_WEEK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_WEEKS_IN_MONTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_SELECTED_DAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_WEEK_START",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_YEAR_FORMAT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SELECTED_HIGHLIGHT_ALPHA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMonthPaint",
    "type" : "TextPaint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDayOfWeekPaint",
    "type" : "TextPaint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDayPaint",
    "type" : "TextPaint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDaySelectorPaint",
    "type" : "Paint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDayHighlightPaint",
    "type" : "Paint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDayHighlightSelectorPaint",
    "type" : "Paint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDayOfWeekLabels",
    "type" : "String[]",
    "comment" : " Array of single-character weekday labels ordered by column index. ",
    "links" : [ ]
  }, {
    "name" : "mCalendar",
    "type" : "Calendar",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLocale",
    "type" : "Locale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTouchHelper",
    "type" : "MonthViewTouchHelper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDayFormatter",
    "type" : "NumberFormat",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDesiredMonthHeight",
    "type" : "int",
    "comment" : " Desired dimensions.",
    "links" : [ ]
  }, {
    "name" : "mDesiredDayOfWeekHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDesiredDayHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDesiredCellWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDesiredDaySelectorRadius",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMonthYearLabel",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMonth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mYear",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMonthHeight",
    "type" : "int",
    "comment" : " Dimensions as laid out.",
    "links" : [ ]
  }, {
    "name" : "mDayOfWeekHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDayHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCellWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDaySelectorRadius",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPaddedWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPaddedHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActivatedDay",
    "type" : "int",
    "comment" : " The day of month for the selected day, or -1 if no day is selected. ",
    "links" : [ ]
  }, {
    "name" : "mToday",
    "type" : "int",
    "comment" : "\n     * The day of month for today, or -1 if the today is not in the current\n     * month.\n     ",
    "links" : [ ]
  }, {
    "name" : "mWeekStart",
    "type" : "int",
    "comment" : " The first day of the week (ex. Calendar.SUNDAY) indexed from one. ",
    "links" : [ ]
  }, {
    "name" : "mDaysInMonth",
    "type" : "int",
    "comment" : " The number of days (ex. 28) in the current month. ",
    "links" : [ ]
  }, {
    "name" : "mDayOfWeekStart",
    "type" : "int",
    "comment" : "\n     * The day of week (ex. Calendar.SUNDAY) for the first day of the current\n     * month.\n     ",
    "links" : [ ]
  }, {
    "name" : "mEnabledDayStart",
    "type" : "int",
    "comment" : " The day of month for the first (inclusive) enabled day. ",
    "links" : [ ]
  }, {
    "name" : "mEnabledDayEnd",
    "type" : "int",
    "comment" : " The day of month for the last (inclusive) enabled day. ",
    "links" : [ ]
  }, {
    "name" : "mOnDayClickListener",
    "type" : "OnDayClickListener",
    "comment" : " Optional listener for handling day click actions. ",
    "links" : [ ]
  }, {
    "name" : "mDayTextColor",
    "type" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHighlightedDay",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreviouslyHighlightedDay",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsTouchHighlighted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void updateMonthYearLabel()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateDayOfWeekLabels()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ColorStateList applyTextAppearance(Paint p, int resId)",
    "returnType" : "ColorStateList",
    "comment" : "\n     * Applies the specified text appearance resource to a paint, returning the\n     * text color if one is set in the text appearance.\n     *\n     * @param p the paint to modify\n     * @param resId the resource ID of the text appearance\n     * @return the text color, if available\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMonthHeight()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCellWidth()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMonthTextAppearance(int resId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDayOfWeekTextAppearance(int resId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDayTextAppearance(int resId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void initPaints(Resources res)",
    "returnType" : "void",
    "comment" : "\n     * Sets up the text and style properties for painting.\n     ",
    "links" : [ ]
  }, {
    "name" : " void setMonthTextColor(ColorStateList monthTextColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setDayOfWeekTextColor(ColorStateList dayOfWeekTextColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setDayTextColor(ColorStateList dayTextColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setDaySelectorColor(ColorStateList dayBackgroundColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setDayHighlightColor(ColorStateList dayHighlightColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOnDayClickListener(OnDayClickListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean dispatchHoverEvent(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTouchEvent(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyDown(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean moveOneDay(boolean positive)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onFocusChanged(boolean gainFocus, @FocusDirection int direction, @Nullable Rect previouslyFocusedRect)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int findClosestRow(@Nullable Rect previouslyFocusedRect)",
    "returnType" : "int",
    "comment" : "\n     * Returns the row (0 indexed) closest to previouslyFocusedRect or center if null.\n     ",
    "links" : [ ]
  }, {
    "name" : "private int findClosestColumn(@Nullable Rect previouslyFocusedRect)",
    "returnType" : "int",
    "comment" : "\n     * Returns the column (0 indexed) closest to the previouslyFocusedRect or center if null.\n     * The 0 index is related to the first day of the week.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void getFocusedRect(Rect r)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onFocusLost()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void ensureFocusedDay()",
    "returnType" : "void",
    "comment" : "\n     * Ensure some day is highlighted. If a day isn't highlighted, it chooses the selected day,\n     * if possible, or the first day of the month if not.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean isFirstDayOfWeek(int day)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isLastDayOfWeek(int day)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onDraw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void drawMonth(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getMonthYearLabel()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void drawDaysOfWeek(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void drawDays(Canvas canvas)",
    "returnType" : "void",
    "comment" : "\n     * Draws the month days.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean isDayEnabled(int day)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isValidDayOfMonth(int day)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isValidDayOfWeek(int day)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isValidMonth(int month)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSelectedDay(int dayOfMonth)",
    "returnType" : "void",
    "comment" : "\n     * Sets the selected day.\n     *\n     * @param dayOfMonth the selected day of the month, or {@code -1} to clear\n     *                   the selection\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setFirstDayOfWeek(int weekStart)",
    "returnType" : "void",
    "comment" : "\n     * Sets the first day of the week.\n     *\n     * @param weekStart which day the week should start on, valid values are\n     *                  {@link Calendar#SUNDAY} through {@link Calendar#SATURDAY}\n     ",
    "links" : [ "android.icu.util.Calendar#SATURDAY", "android.icu.util.Calendar#SUNDAY" ]
  }, {
    "name" : " void setMonthParams(int selectedDay, int month, int year, int weekStart, int enabledDayStart, int enabledDayEnd)",
    "returnType" : "void",
    "comment" : "\n     * Sets all the parameters for displaying this week.\n     * <p>\n     * Parameters have a default value and will only update if a new value is\n     * included, except for focus month, which will always default to no focus\n     * month if no value is passed in. The only required parameter is the week\n     * start.\n     *\n     * @param selectedDay the selected day of the month, or -1 for no selection\n     * @param month the month\n     * @param year the year\n     * @param weekStart which day the week should start on, valid values are\n     *                  {@link Calendar#SUNDAY} through {@link Calendar#SATURDAY}\n     * @param enabledDayStart the first enabled day\n     * @param enabledDayEnd the last enabled day\n     ",
    "links" : [ "android.icu.util.Calendar#SATURDAY", "android.icu.util.Calendar#SUNDAY" ]
  }, {
    "name" : "private static int getDaysInMonth(int month, int year)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean sameDay(int day, Calendar today)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRtlPropertiesChanged(@ResolvedLayoutDir int layoutDirection)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onLayout(boolean changed, int left, int top, int right, int bottom)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int findDayOffset()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getDayAtLocation(int x, int y)",
    "returnType" : "int",
    "comment" : "\n     * Calculates the day of the month at the specified touch position. Returns\n     * the day of the month or -1 if the position wasn't in a valid day.\n     *\n     * @param x the x position of the touch event\n     * @param y the y position of the touch event\n     * @return the day of the month at (x, y), or -1 if the position wasn't in\n     *         a valid day\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getBoundsForDay(int id, Rect outBounds)",
    "returnType" : "boolean",
    "comment" : "\n     * Calculates the bounds of the specified day.\n     *\n     * @param id the day of the month\n     * @param outBounds the rect to populate with bounds\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean onDayClicked(int day)",
    "returnType" : "boolean",
    "comment" : "\n     * Called when the user clicks on a day. Handles callbacks to the\n     * {@link OnDayClickListener} if one is set.\n     *\n     * @param day the day that was clicked\n     ",
    "links" : [ "OnDayClickListener" ]
  }, {
    "name" : "public PointerIcon onResolvePointerIcon(MotionEvent event, int pointerIndex)",
    "returnType" : "PointerIcon",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void updateMonthYearLabel()", "private void updateDayOfWeekLabels()", "private ColorStateList applyTextAppearance(Paint p, int resId)", "public int getMonthHeight()", "public int getCellWidth()", "public void setMonthTextAppearance(int resId)", "public void setDayOfWeekTextAppearance(int resId)", "public void setDayTextAppearance(int resId)", "private void initPaints(Resources res)", " void setMonthTextColor(ColorStateList monthTextColor)", " void setDayOfWeekTextColor(ColorStateList dayOfWeekTextColor)", " void setDayTextColor(ColorStateList dayTextColor)", " void setDaySelectorColor(ColorStateList dayBackgroundColor)", " void setDayHighlightColor(ColorStateList dayHighlightColor)", "public void setOnDayClickListener(OnDayClickListener listener)", "public boolean dispatchHoverEvent(MotionEvent event)", "public boolean onTouchEvent(MotionEvent event)", "public boolean onKeyDown(int keyCode, KeyEvent event)", "private boolean moveOneDay(boolean positive)", "protected void onFocusChanged(boolean gainFocus, @FocusDirection int direction, @Nullable Rect previouslyFocusedRect)", "private int findClosestRow(@Nullable Rect previouslyFocusedRect)", "private int findClosestColumn(@Nullable Rect previouslyFocusedRect)", "public void getFocusedRect(Rect r)", "protected void onFocusLost()", "private void ensureFocusedDay()", "private boolean isFirstDayOfWeek(int day)", "private boolean isLastDayOfWeek(int day)", "protected void onDraw(Canvas canvas)", "private void drawMonth(Canvas canvas)", "public String getMonthYearLabel()", "private void drawDaysOfWeek(Canvas canvas)", "private void drawDays(Canvas canvas)", "private boolean isDayEnabled(int day)", "private boolean isValidDayOfMonth(int day)", "private static boolean isValidDayOfWeek(int day)", "private static boolean isValidMonth(int month)", "public void setSelectedDay(int dayOfMonth)", "public void setFirstDayOfWeek(int weekStart)", " void setMonthParams(int selectedDay, int month, int year, int weekStart, int enabledDayStart, int enabledDayEnd)", "private static int getDaysInMonth(int month, int year)", "private boolean sameDay(int day, Calendar today)", "protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "public void onRtlPropertiesChanged(@ResolvedLayoutDir int layoutDirection)", "protected void onLayout(boolean changed, int left, int top, int right, int bottom)", "private int findDayOffset()", "private int getDayAtLocation(int x, int y)", "public boolean getBoundsForDay(int id, Rect outBounds)", "private boolean onDayClicked(int day)", "public PointerIcon onResolvePointerIcon(MotionEvent event, int pointerIndex)" ],
  "variableNames" : [ "DAYS_IN_WEEK", "MAX_WEEKS_IN_MONTH", "DEFAULT_SELECTED_DAY", "DEFAULT_WEEK_START", "MONTH_YEAR_FORMAT", "SELECTED_HIGHLIGHT_ALPHA", "mMonthPaint", "mDayOfWeekPaint", "mDayPaint", "mDaySelectorPaint", "mDayHighlightPaint", "mDayHighlightSelectorPaint", "mDayOfWeekLabels", "mCalendar", "mLocale", "mTouchHelper", "mDayFormatter", "mDesiredMonthHeight", "mDesiredDayOfWeekHeight", "mDesiredDayHeight", "mDesiredCellWidth", "mDesiredDaySelectorRadius", "mMonthYearLabel", "mMonth", "mYear", "mMonthHeight", "mDayOfWeekHeight", "mDayHeight", "mCellWidth", "mDaySelectorRadius", "mPaddedWidth", "mPaddedHeight", "mActivatedDay", "mToday", "mWeekStart", "mDaysInMonth", "mDayOfWeekStart", "mEnabledDayStart", "mEnabledDayEnd", "mOnDayClickListener", "mDayTextColor", "mHighlightedDay", "mPreviouslyHighlightedDay", "mIsTouchHighlighted" ]
}