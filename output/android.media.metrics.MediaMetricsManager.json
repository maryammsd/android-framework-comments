{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/metrics/MediaMetricsManager.java",
  "packageName" : "android.media.metrics",
  "className" : "MediaMetricsManager",
  "comment" : "\n * This class gives information about, and interacts with media metrics.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "INVALID_TIMESTAMP",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IMediaMetricsManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void reportPlaybackMetrics(@NonNull String sessionId, PlaybackMetrics metrics)",
    "returnType" : "void",
    "comment" : "\n     * Reports playback metrics.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportBundleMetrics(@NonNull String sessionId, PersistableBundle metrics)",
    "returnType" : "void",
    "comment" : "\n     * Reports bundle metrics.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportNetworkEvent(@NonNull String sessionId, NetworkEvent event)",
    "returnType" : "void",
    "comment" : "\n     * Reports network event.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportPlaybackStateEvent(@NonNull String sessionId, PlaybackStateEvent event)",
    "returnType" : "void",
    "comment" : "\n     * Reports playback state event.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportTrackChangeEvent(@NonNull String sessionId, TrackChangeEvent event)",
    "returnType" : "void",
    "comment" : "\n     * Reports track change event.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public PlaybackSession createPlaybackSession()",
    "returnType" : "PlaybackSession",
    "comment" : "\n     * Creates a playback session.\n     ",
    "links" : [ ]
  }, {
    "name" : "public RecordingSession createRecordingSession()",
    "returnType" : "RecordingSession",
    "comment" : "\n     * Creates a recording session.\n     ",
    "links" : [ ]
  }, {
    "name" : "public TranscodingSession createTranscodingSession()",
    "returnType" : "TranscodingSession",
    "comment" : "\n     * Creates a transcoding session.\n     ",
    "links" : [ ]
  }, {
    "name" : "public EditingSession createEditingSession()",
    "returnType" : "EditingSession",
    "comment" : "\n     * Creates a editing session.\n     ",
    "links" : [ ]
  }, {
    "name" : "public BundleSession createBundleSession()",
    "returnType" : "BundleSession",
    "comment" : "\n     * Creates a generic bundle session.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void releaseSessionId(@NonNull String sessionId)",
    "returnType" : "void",
    "comment" : "\n     * Creates a generic bundle session.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportPlaybackErrorEvent(@NonNull String sessionId, PlaybackErrorEvent event)",
    "returnType" : "void",
    "comment" : "\n     * Reports error event.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportEditingEndedEvent(@NonNull String sessionId, EditingEndedEvent editingEndedEvent)",
    "returnType" : "void",
    "comment" : "\n     * Reports the event of an editing session ending.\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void reportPlaybackMetrics(@NonNull String sessionId, PlaybackMetrics metrics)", "public void reportBundleMetrics(@NonNull String sessionId, PersistableBundle metrics)", "public void reportNetworkEvent(@NonNull String sessionId, NetworkEvent event)", "public void reportPlaybackStateEvent(@NonNull String sessionId, PlaybackStateEvent event)", "public void reportTrackChangeEvent(@NonNull String sessionId, TrackChangeEvent event)", "public PlaybackSession createPlaybackSession()", "public RecordingSession createRecordingSession()", "public TranscodingSession createTranscodingSession()", "public EditingSession createEditingSession()", "public BundleSession createBundleSession()", "public void releaseSessionId(@NonNull String sessionId)", "public void reportPlaybackErrorEvent(@NonNull String sessionId, PlaybackErrorEvent event)", "public void reportEditingEndedEvent(@NonNull String sessionId, EditingEndedEvent editingEndedEvent)" ],
  "variableNames" : [ "INVALID_TIMESTAMP", "TAG", "mService", "mUserId" ]
}