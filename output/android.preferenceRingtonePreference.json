{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/preference/RingtonePreference.java",
  "packageName" : "android.preference",
  "className" : "RingtonePreference",
  "comment" : "\n * A {@link Preference} that allows the user to choose a ringtone from those on the device. \n * The chosen ringtone's URI will be persisted as a string.\n * <p>\n * If the user chooses the \"Default\" item, the saved string will be one of\n * {@link System#DEFAULT_RINGTONE_URI},\n * {@link System#DEFAULT_NOTIFICATION_URI}, or\n * {@link System#DEFAULT_ALARM_ALERT_URI}. If the user chooses the \"Silent\"\n * item, the saved string will be an empty string.\n * \n * @attr ref android.R.styleable#RingtonePreference_ringtoneType\n * @attr ref android.R.styleable#RingtonePreference_showDefault\n * @attr ref android.R.styleable#RingtonePreference_showSilent\n *\n * @deprecated Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n *      <a href=\"{@docRoot}reference/androidx/preference/package-summary.html\">\n *      Preference Library</a> for consistent behavior across all devices. For more information on\n *      using the AndroidX Preference Library see\n *      <a href=\"{@docRoot}guide/topics/ui/settings.html\">Settings</a>.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRingtoneType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShowDefault",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShowSilent",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getRingtoneType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the sound type(s) that are shown in the picker.\n     * \n     * @return The sound type(s) that are shown in the picker.\n     * @see #setRingtoneType(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setRingtoneType(int type)",
    "returnType" : "void",
    "comment" : "\n     * Sets the sound type(s) that are shown in the picker.\n     * \n     * @param type The sound type(s) that are shown in the picker.\n     * @see RingtoneManager#EXTRA_RINGTONE_TYPE\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getShowDefault()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether to a show an item for the default sound/ringtone.\n     * \n     * @return Whether to show an item for the default sound/ringtone.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setShowDefault(boolean showDefault)",
    "returnType" : "void",
    "comment" : "\n     * Sets whether to show an item for the default sound/ringtone. The default\n     * to use will be deduced from the sound type(s) being shown.\n     * \n     * @param showDefault Whether to show the default or not.\n     * @see RingtoneManager#EXTRA_RINGTONE_SHOW_DEFAULT\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getShowSilent()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether to a show an item for 'Silent'.\n     * \n     * @return Whether to show an item for 'Silent'.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setShowSilent(boolean showSilent)",
    "returnType" : "void",
    "comment" : "\n     * Sets whether to show an item for 'Silent'.\n     * \n     * @param showSilent Whether to show 'Silent'.\n     * @see RingtoneManager#EXTRA_RINGTONE_SHOW_SILENT\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onClick()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onPrepareRingtonePickerIntent(Intent ringtonePickerIntent)",
    "returnType" : "void",
    "comment" : "\n     * Prepares the intent to launch the ringtone picker. This can be modified\n     * to adjust the parameters of the ringtone picker.\n     * \n     * @param ringtonePickerIntent The ringtone picker intent that can be\n     *            modified by putting extras.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onSaveRingtone(Uri ringtoneUri)",
    "returnType" : "void",
    "comment" : "\n     * Called when a ringtone is chosen.\n     * <p>\n     * By default, this saves the ringtone URI to the persistent storage as a\n     * string.\n     * \n     * @param ringtoneUri The chosen ringtone's {@link Uri}. Can be null.\n     ",
    "links" : [ "Uri" ]
  }, {
    "name" : "protected Uri onRestoreRingtone()",
    "returnType" : "Uri",
    "comment" : "\n     * Called when the chooser is about to be shown and the current ringtone\n     * should be marked. Can return null to not mark any ringtone.\n     * <p>\n     * By default, this restores the previous ringtone URI from the persistent\n     * storage.\n     * \n     * @return The ringtone to be marked as the current ringtone.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected Object onGetDefaultValue(TypedArray a, int index)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onSetInitialValue(boolean restorePersistedValue, Object defaultValueObj)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onAttachedToHierarchy(PreferenceManager preferenceManager)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onActivityResult(int requestCode, int resultCode, Intent data)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mRingtoneType", "mShowDefault", "mShowSilent", "mRequestCode" ],
  "methodNames" : [ "public int getRingtoneType()", "public void setRingtoneType(int type)", "public boolean getShowDefault()", "public void setShowDefault(boolean showDefault)", "public boolean getShowSilent()", "public void setShowSilent(boolean showSilent)", "protected void onClick()", "protected void onPrepareRingtonePickerIntent(Intent ringtonePickerIntent)", "protected void onSaveRingtone(Uri ringtoneUri)", "protected Uri onRestoreRingtone()", "protected Object onGetDefaultValue(TypedArray a, int index)", "protected void onSetInitialValue(boolean restorePersistedValue, Object defaultValueObj)", "protected void onAttachedToHierarchy(PreferenceManager preferenceManager)", "public boolean onActivityResult(int requestCode, int resultCode, Intent data)" ]
}