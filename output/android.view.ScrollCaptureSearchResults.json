{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/ScrollCaptureSearchResults.java",
  "packageName" : "android.view",
  "className" : "ScrollCaptureSearchResults",
  "comment" : "\n * Collects nodes in the view hierarchy which have been identified as scrollable content.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTargets",
    "type" : "List<ScrollCaptureTarget>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCancel",
    "type" : "CancellationSignal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnCompleteListener",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCompleted",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mComplete",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AFTER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BEFORE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EQUAL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PRIORITY_ORDER",
    "type" : "Comparator<ScrollCaptureTarget>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void addTarget(@NonNull ScrollCaptureTarget target)",
    "returnType" : "void",
    "comment" : "\n     * Add the given target to the results.\n     *\n     * @param target the target to consider\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isComplete()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOnCompleteListener(Runnable onComplete)",
    "returnType" : "void",
    "comment" : "\n     * Provides a callback to be invoked as soon as all responses have been received from all\n     * targets to this point.\n     *\n     * @param onComplete listener to add\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether the search results are empty.\n     *\n     * @return true if no targets have been added\n     ",
    "links" : [ ]
  }, {
    "name" : "public void finish()",
    "returnType" : "void",
    "comment" : "\n     * Force the results to complete now, cancelling any pending requests and calling a complete\n     * listener if provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void signalComplete()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<ScrollCaptureTarget> getTargets()",
    "returnType" : "List<ScrollCaptureTarget>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ScrollCaptureTarget getTopResult()",
    "returnType" : "ScrollCaptureTarget",
    "comment" : "\n     * Get the top ranked result out of all completed requests.\n     *\n     * @return the top ranked result\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int area(Rect r)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean nullOrEmpty(Rect r)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean hasIncludeHint(View view)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isDescendant(@NonNull View view, @NonNull View otherView)",
    "returnType" : "boolean",
    "comment" : "\n     * Determines if {@code otherView} is a descendant of {@code view}.\n     *\n     * @param view      a view\n     * @param otherView another view\n     * @return true if {@code view} is an ancestor of {@code otherView}\n     ",
    "links" : [ ]
  }, {
    "name" : " void dump(IndentingPrintWriter writer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void addTarget(@NonNull ScrollCaptureTarget target)", "public boolean isComplete()", "public void setOnCompleteListener(Runnable onComplete)", "public boolean isEmpty()", "public void finish()", "private void signalComplete()", "public List<ScrollCaptureTarget> getTargets()", "public ScrollCaptureTarget getTopResult()", "private static int area(Rect r)", "private static boolean nullOrEmpty(Rect r)", "private static boolean hasIncludeHint(View view)", "private static boolean isDescendant(@NonNull View view, @NonNull View otherView)", " void dump(IndentingPrintWriter writer)" ],
  "variableNames" : [ "mExecutor", "mTargets", "mCancel", "mOnCompleteListener", "mCompleted", "mComplete", "AFTER", "BEFORE", "EQUAL", "PRIORITY_ORDER" ]
}