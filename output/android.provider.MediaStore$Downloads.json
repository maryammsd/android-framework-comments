{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/MediaStore.java",
  "packageName" : "android.provider",
  "className" : "Downloads",
  "comment" : "\n     * Collection of downloaded items.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "INTERNAL_CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URI for the internal storage.\n         ",
    "links" : [ ]
  }, {
    "name" : "EXTERNAL_CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URI for the \"primary\" external storage\n         * volume.\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTENT_TYPE",
    "type" : "String",
    "comment" : "\n         * The MIME type for this table.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Uri getContentUri(@NonNull String volumeName)",
    "returnType" : "Uri",
    "comment" : "\n         * Get the content:// style URI for the downloads table on the\n         * given volume.\n         *\n         * @param volumeName the name of the volume to get the URI for\n         * @return the URI to the image media table on the given volume\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri getContentUri(@NonNull String volumeName, long id)",
    "returnType" : "Uri",
    "comment" : "\n         * Get the content:// style URI for a single row in the downloads table\n         * on the given volume.\n         *\n         * @param volumeName the name of the volume to get the URI for\n         * @param id the download to get the URI for\n         * @return the URI to the downloads table on the given volume\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri getContentUriForPath(@NonNull String path)",
    "returnType" : "Uri",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Uri getContentUri(@NonNull String volumeName)", "public static Uri getContentUri(@NonNull String volumeName, long id)", "public static Uri getContentUriForPath(@NonNull String path)" ],
  "variableNames" : [ "INTERNAL_CONTENT_URI", "EXTERNAL_CONTENT_URI", "CONTENT_TYPE" ]
}