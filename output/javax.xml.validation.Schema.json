{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/validation/Schema.java",
  "packageName" : "javax.xml.validation",
  "className" : "Schema",
  "comment" : "\n * Immutable in-memory representation of grammar.\n *\n * <p>\n * This object represents a set of constraints that can be checked/\n * enforced against an XML document.\n *\n * <p>\n * A {@link Schema} object is thread safe and applications are\n * encouraged to share it across many parsers in many threads.\n *\n * <p>\n * A {@link Schema} object is immutable in the sense that it shouldn't\n * change the set of constraints once it is created. In other words,\n * if an application validates the same document twice against the same\n * {@link Schema}, it must always produce the same result.\n *\n * <p>\n * A {@link Schema} object is usually created from {@link SchemaFactory}.\n *\n * <p>\n * Two kinds of validators can be created from a {@link Schema} object.\n * One is {@link Validator}, which provides highly-level validation\n * operations that cover typical use cases. The other is\n * {@link ValidatorHandler}, which works on top of SAX for better\n * modularity.\n *\n * <p>\n * This specification does not refine\n * the {@link java.lang.Object#equals(java.lang.Object)} method.\n * In other words, if you parse the same schema twice, you may\n * still get <code>!schemaA.equals(schemaB)</code>.\n *\n * @author <a href=\"mailto:Kohsuke.Kawaguchi@Sun.com\">Kohsuke Kawaguchi</a>\n * @version $Revision: 446598 $, $Date: 2006-09-15 05:55:40 -0700 (Fri, 15 Sep 2006) $\n * @see <a href=\"http://www.w3.org/TR/xmlschema-1/\">XML Schema Part 1: Structures</a>\n * @see <a href=\"http://www.w3.org/TR/xml11/\">Extensible Markup Language (XML) 1.1</a>\n * @see <a href=\"http://www.w3.org/TR/REC-xml\">Extensible Markup Language (XML) 1.0 (Second Edition)</a>\n * @since 1.5\n ",
  "links" : [ "java.lang.Object#equals(java.lang.Object)", "javax.xml.validation.SchemaFactory", "javax.xml.validation.ValidatorHandler", "javax.xml.validation.Validator", "javax.xml.validation.Schema" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract Validator newValidator()",
    "returnType" : "Validator",
    "comment" : "\n     * Creates a new {@link Validator} for this {@link Schema}.\n     *\n     * <p>\n     * A validator enforces/checks the set of constraints this object\n     * represents.\n     *\n     * @return\n     *      Always return a non-null valid object.\n     ",
    "links" : [ "javax.xml.validation.Validator", "javax.xml.validation.Schema" ]
  }, {
    "name" : "public abstract ValidatorHandler newValidatorHandler()",
    "returnType" : "ValidatorHandler",
    "comment" : "\n     * Creates a new {@link ValidatorHandler} for this {@link Schema}.\n     *\n     * @return\n     *      Always return a non-null valid object.\n     ",
    "links" : [ "javax.xml.validation.ValidatorHandler", "javax.xml.validation.Schema" ]
  } ],
  "methodNames" : [ "public abstract Validator newValidator()", "public abstract ValidatorHandler newValidatorHandler()" ],
  "variableNames" : [ ]
}