{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/impl/CameraAdvancedExtensionSessionImpl.java",
  "packageName" : "android.hardware.camera2.impl",
  "className" : "CameraAdvancedExtensionSessionImpl",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCameraDevice",
    "type" : "CameraDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCharacteristicsMap",
    "type" : "Map<String, CameraMetadataNative>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandlerThread",
    "type" : "HandlerThread",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallbacks",
    "type" : "CameraExtensionSession.StateCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAdvancedExtender",
    "type" : "IAdvancedExtenderImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCameraConfigMap",
    "type" : "HashMap<Surface, CameraOutputConfig>",
    "comment" : " maps registered camera surfaces to extension output configs",
    "links" : [ ]
  }, {
    "name" : "mReaderMap",
    "type" : "HashMap<Integer, ImageReader>",
    "comment" : " maps camera extension output ids to camera registered image readers",
    "links" : [ ]
  }, {
    "name" : "mRequestProcessor",
    "type" : "RequestProcessor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientRepeatingRequestSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientCaptureSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientPostviewSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientRepeatingRequestOutputConfig",
    "type" : "OutputConfiguration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientCaptureOutputConfig",
    "type" : "OutputConfiguration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientPostviewOutputConfig",
    "type" : "OutputConfiguration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCaptureSession",
    "type" : "CameraCaptureSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionProcessor",
    "type" : "ISessionProcessorImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitializeHandler",
    "type" : "InitializeSessionHandler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatsAggregator",
    "type" : "ExtensionSessionStatsAggregator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialized",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionClosed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtensionType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterfaceLock",
    "type" : "Object",
    "comment" : " Lock to synchronize cross-thread access to device public interface",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static CameraAdvancedExtensionSessionImpl createCameraAdvancedExtensionSession(@NonNull android.hardware.camera2.impl.CameraDeviceImpl cameraDevice, @NonNull Map<String, CameraCharacteristics> characteristicsMap, @NonNull Context ctx, @NonNull ExtensionSessionConfiguration config, int sessionId, @NonNull IBinder token) throws CameraAccessException, RemoteException",
    "returnType" : "CameraAdvancedExtensionSessionImpl",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public synchronized void initialize() throws CameraAccessException, RemoteException",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static ParcelCaptureResult initializeParcelable(CaptureResult result)",
    "returnType" : "ParcelCaptureResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ParcelTotalCaptureResult initializeParcelable(TotalCaptureResult totalResult)",
    "returnType" : "ParcelTotalCaptureResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static OutputSurface initializeParcelable(OutputConfiguration o)",
    "returnType" : "OutputSurface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CameraDevice getDevice()",
    "returnType" : "CameraDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StillCaptureLatency getRealtimeStillCaptureLatency() throws CameraAccessException",
    "returnType" : "StillCaptureLatency",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int setRepeatingRequest(@NonNull CaptureRequest request, @NonNull Executor executor, @NonNull ExtensionCaptureCallback listener) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int capture(@NonNull CaptureRequest request, @NonNull Executor executor, @NonNull ExtensionCaptureCallback listener) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void validateCaptureRequestTargets(@NonNull CaptureRequest request)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopRepeating() throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void close() throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void commitStats()",
    "returnType" : "void",
    "comment" : "\n     * Called by {@link CameraDeviceImpl} right before the capture session is closed, and before it\n     * calls {@link #release}\n     ",
    "links" : [ "android.hardware.camera2.impl.CameraDeviceImpl", "#release" ]
  }, {
    "name" : "public void release(boolean skipCloseNotification)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void notifyConfigurationFailure()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static CaptureRequest initializeCaptureRequest(CameraDevice cameraDevice, Request request, HashMap<Surface, CameraOutputConfig> surfaceIdMap) throws CameraAccessException",
    "returnType" : "CaptureRequest",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Surface initializeSurface(CameraOutputConfig output)",
    "returnType" : "Surface",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static CameraAdvancedExtensionSessionImpl createCameraAdvancedExtensionSession(@NonNull android.hardware.camera2.impl.CameraDeviceImpl cameraDevice, @NonNull Map<String, CameraCharacteristics> characteristicsMap, @NonNull Context ctx, @NonNull ExtensionSessionConfiguration config, int sessionId, @NonNull IBinder token) throws CameraAccessException, RemoteException", "public synchronized void initialize() throws CameraAccessException, RemoteException", "private static ParcelCaptureResult initializeParcelable(CaptureResult result)", "private static ParcelTotalCaptureResult initializeParcelable(TotalCaptureResult totalResult)", "private static OutputSurface initializeParcelable(OutputConfiguration o)", "public CameraDevice getDevice()", "public StillCaptureLatency getRealtimeStillCaptureLatency() throws CameraAccessException", "public int setRepeatingRequest(@NonNull CaptureRequest request, @NonNull Executor executor, @NonNull ExtensionCaptureCallback listener) throws CameraAccessException", "public int capture(@NonNull CaptureRequest request, @NonNull Executor executor, @NonNull ExtensionCaptureCallback listener) throws CameraAccessException", "private void validateCaptureRequestTargets(@NonNull CaptureRequest request)", "public void stopRepeating() throws CameraAccessException", "public void close() throws CameraAccessException", "public void commitStats()", "public void release(boolean skipCloseNotification)", "private void notifyConfigurationFailure()", "private static CaptureRequest initializeCaptureRequest(CameraDevice cameraDevice, Request request, HashMap<Surface, CameraOutputConfig> surfaceIdMap) throws CameraAccessException", "private Surface initializeSurface(CameraOutputConfig output)" ],
  "variableNames" : [ "TAG", "mExecutor", "mCameraDevice", "mCharacteristicsMap", "mHandler", "mHandlerThread", "mCallbacks", "mAdvancedExtender", "mCameraConfigMap", "mReaderMap", "mRequestProcessor", "mSessionId", "mToken", "mClientRepeatingRequestSurface", "mClientCaptureSurface", "mClientPostviewSurface", "mClientRepeatingRequestOutputConfig", "mClientCaptureOutputConfig", "mClientPostviewOutputConfig", "mCaptureSession", "mSessionProcessor", "mInitializeHandler", "mStatsAggregator", "mInitialized", "mSessionClosed", "mExtensionType", "mContext", "mInterfaceLock" ]
}