{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaPlayer.java",
  "packageName" : "android.media",
  "className" : "OnRtpRxNoticeListener",
  "comment" : "\n     * Interface definition of a callback to be invoked when\n     * RTP Rx connection has a notice.\n     *\n     * @see #setOnRtpRxNoticeListener\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onRtpRxNotice(@NonNull MediaPlayer mp, int noticeType, @NonNull int[] params)",
    "returnType" : "void",
    "comment" : "\n         * Called when an RTP Rx connection has a notice.\n         * <p>\n         * Basic format. All TYPE and ARG are 4 bytes unsigned integer in native byte order.\n         * <pre>{@code\n         * 0                4               8                12\n         * +----------------+---------------+----------------+----------------+\n         * |      TYPE      |      ARG1     |      ARG2      |      ARG3      |\n         * +----------------+---------------+----------------+----------------+\n         * |      ARG4      |      ARG5     |      ...\n         * +----------------+---------------+-------------\n         * 16               20              24\n         *\n         *\n         * TYPE 100 - A notice of the first rtp packet received. No ARGs.\n         * 0\n         * +----------------+\n         * |      100       |\n         * +----------------+\n         *\n         *\n         * TYPE 101 - A notice of the first rtcp packet received. No ARGs.\n         * 0\n         * +----------------+\n         * |      101       |\n         * +----------------+\n         *\n         *\n         * TYPE 102 - A periodic report of a RTP statistics.\n         * TYPE 103 - An emergency report when serious packet loss has been detected\n         *            in between TYPE 102 events.\n         * 0                4               8                12\n         * +----------------+---------------+----------------+----------------+\n         * |   102 or 103   |   FB type=0   |    Bitrate     |   Top #.Seq    |\n         * +----------------+---------------+----------------+----------------+\n         * |   Base #.Seq   |Prev Expt #.Pkt|   Recv #.Pkt   |Prev Recv #.Pkt |\n         * +----------------+---------------+----------------+----------------+\n         * Feedback (FB) type\n         *      - always 0.\n         * Bitrate\n         *      - amount of data received in this period.\n         * Top number of sequence\n         *      - highest RTP sequence number received in this period.\n         *      - monotonically increasing value.\n         * Base number of sequence\n         *      - the first RTP sequence number of the media stream.\n         * Previous Expected number of Packets\n         *      - expected count of packets received in the previous report.\n         * Received number of packet\n         *      - actual count of packets received in this report.\n         * Previous Received number of packet\n         *      - actual count of packets received in the previous report.\n         *\n         *\n         * TYPE 205 - Transport layer Feedback message. (RFC-5104 Sec.4.2)\n         * 0                4               8                12\n         * +----------------+---------------+----------------+----------------+\n         * |      205       |FB type(1 or 3)|      SSRC      |      Value     |\n         * +----------------+---------------+----------------+----------------+\n         * Feedback (FB) type: determines the type of the event.\n         *      - if 1, we received a NACK request from the remote side.\n         *      - if 3, we received a TMMBR (Temporary Maximum Media Stream Bit Rate Request) from\n         *        the remote side.\n         * SSRC\n         *      - Remote side's SSRC value of the media sender (RFC-3550 Sec.5.1)\n         * Value: the FCI (Feedback Control Information) depending on the value of FB type\n         *      - if FB type is 1, the Generic NACK as specified in RFC-4585 Sec.6.2.1\n         *      - if FB type is 3, the TMMBR as specified in RFC-5104 Sec.4.2.1.1\n         *\n         *\n         * TYPE 206 - Payload-specific Feedback message. (RFC-5104 Sec.4.3)\n         * 0                4               8\n         * +----------------+---------------+----------------+\n         * |      206       |FB type(1 or 4)|      SSRC      |\n         * +----------------+---------------+----------------+\n         * Feedback (FB) type: determines the type of the event.\n         *      - if 1, we received a PLI request from the remote side.\n         *      - if 4, we received a FIR request from the remote side.\n         * SSRC\n         *      - Remote side's SSRC value of the media sender (RFC-3550 Sec.5.1)\n         *\n         *\n         * TYPE 300 - CVO (RTP Extension) message.\n         * 0                4\n         * +----------------+---------------+\n         * |      101       |     value     |\n         * +----------------+---------------+\n         * value\n         *      - clockwise rotation degrees of a received video (6.2.3 of 3GPP R12 TS 26.114).\n         *      - can be 0 (degree 0), 1 (degree 90), 2 (degree 180) or 3 (degree 270).\n         *\n         *\n         * TYPE 400 - Socket failed during receive. No ARGs.\n         * 0\n         * +----------------+\n         * |      400       |\n         * +----------------+\n         * }</pre>\n         *\n         * @param mp the {@code MediaPlayer} associated with this callback.\n         * @param noticeType TYPE of the event.\n         * @param params RTP Rx media data serialized as int[] array.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onRtpRxNotice(@NonNull MediaPlayer mp, int noticeType, @NonNull int[] params)" ],
  "variableNames" : [ ]
}