{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/system/virtualizationservice/IVirtualMachineCallback.java",
  "packageName" : "android.system.virtualizationservice",
  "className" : "IVirtualMachineCallback",
  "comment" : "\n * An object which a client may register with the VirtualizationService to get callbacks about the\n * state of a particular VM.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onPayloadStarted(int cid) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Called when the payload starts in the VM. ",
    "links" : [ ]
  }, {
    "name" : "public void onPayloadReady(int cid) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Called when the payload in the VM is ready to serve. ",
    "links" : [ ]
  }, {
    "name" : "public void onPayloadFinished(int cid, int exitCode) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Called when the payload has finished in the VM. `exitCode` is the exit code of the payload. ",
    "links" : [ ]
  }, {
    "name" : "public void onError(int cid, int errorCode, java.lang.String message) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Called when an error occurs in the VM. ",
    "links" : [ ]
  }, {
    "name" : "public void onDied(int cid, int reason) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Called when the VM dies.\n   * \n   * Note that this will not be called if the VirtualizationService itself dies, so you should\n   * also use `link_to_death` to handle that.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onPayloadStarted(int cid) throws android.os.RemoteException", "public void onPayloadReady(int cid) throws android.os.RemoteException", "public void onPayloadFinished(int cid, int exitCode) throws android.os.RemoteException", "public void onError(int cid, int errorCode, java.lang.String message) throws android.os.RemoteException", "public void onDied(int cid, int reason) throws android.os.RemoteException" ],
  "variableNames" : [ "DESCRIPTOR" ]
}