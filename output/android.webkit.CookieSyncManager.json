{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/CookieSyncManager.java",
  "packageName" : "android.webkit",
  "className" : "CookieSyncManager",
  "comment" : "\n * The CookieSyncManager is used to synchronize the browser cookie store\n * between RAM and permanent storage. To get the best performance, browser cookies are\n * saved in RAM. A separate thread saves the cookies between, driven by a timer.\n * <p>\n *\n * To use the CookieSyncManager, the host application has to call the following\n * when the application starts:\n * <p>\n *\n * <pre class=\"prettyprint\">CookieSyncManager.createInstance(context)</pre><p>\n *\n * To set up for sync, the host application has to call<p>\n * <pre class=\"prettyprint\">CookieSyncManager.getInstance().startSync()</pre><p>\n *\n * in Activity.onResume(), and call\n * <p>\n *\n * <pre class=\"prettyprint\">\n * CookieSyncManager.getInstance().stopSync()\n * </pre><p>\n *\n * in Activity.onPause().<p>\n *\n * To get instant sync instead of waiting for the timer to trigger, the host can\n * call\n * <p>\n * <pre class=\"prettyprint\">CookieSyncManager.getInstance().sync()</pre><p>\n *\n * The sync interval is 5 minutes, so you will want to force syncs\n * manually anyway, for instance in {@link\n * WebViewClient#onPageFinished}. Note that even sync() happens\n * asynchronously, so don't do it just as your activity is shutting\n * down.\n *\n * @deprecated The WebView now automatically syncs cookies as necessary.\n *             You no longer need to create or use the CookieSyncManager.\n *             To manually force a sync you can use the CookieManager\n *             method {@link CookieManager#flush} which is a synchronous\n *             replacement for {@link #sync}.\n ",
  "links" : [ "android.webkit.WebViewClient#onPageFinished", "android.webkit.CookieManager#flush", "#sync" ],
  "variables" : [ {
    "name" : "sRef",
    "type" : "CookieSyncManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sGetInstanceAllowed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static CookieSyncManager getInstance()",
    "returnType" : "CookieSyncManager",
    "comment" : "\n     * Singleton access to a {@link CookieSyncManager}. An\n     * IllegalStateException will be thrown if\n     * {@link CookieSyncManager#createInstance(Context)} is not called before.\n     *\n     * @return CookieSyncManager\n     ",
    "links" : [ "android.webkit.CookieSyncManager#createInstance(Context)", "android.webkit.CookieSyncManager" ]
  }, {
    "name" : "public static CookieSyncManager createInstance(Context context)",
    "returnType" : "CookieSyncManager",
    "comment" : "\n     * Create a singleton CookieSyncManager within a context\n     * @param context\n     * @return CookieSyncManager\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sync()",
    "returnType" : "void",
    "comment" : "\n     * sync() forces sync manager to sync now\n     * @deprecated Use {@link CookieManager#flush} instead.\n     ",
    "links" : [ "android.webkit.CookieManager#flush" ]
  }, {
    "name" : "protected void syncFromRamToFlash()",
    "returnType" : "void",
    "comment" : "\n     * @deprecated Use {@link CookieManager#flush} instead.\n     ",
    "links" : [ "android.webkit.CookieManager#flush" ]
  }, {
    "name" : "public void resetSync()",
    "returnType" : "void",
    "comment" : "\n     * resetSync() resets sync manager's timer.\n     * @deprecated Calling resetSync is no longer necessary as the WebView automatically\n     *             syncs cookies.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void startSync()",
    "returnType" : "void",
    "comment" : "\n     * startSync() requests sync manager to start sync.\n     * @deprecated Calling startSync is no longer necessary as the WebView automatically\n     *             syncs cookies.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void stopSync()",
    "returnType" : "void",
    "comment" : "\n     * stopSync() requests sync manager to stop sync. remove any SYNC_MESSAGE in\n     * the queue to break the sync loop\n     * @deprecated Calling stopSync is no longer useful as the WebView\n     *             automatically syncs cookies.\n     ",
    "links" : [ ]
  }, {
    "name" : " static void setGetInstanceIsAllowed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkInstanceIsAllowed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static CookieSyncManager getInstance()", "public static CookieSyncManager createInstance(Context context)", "public void sync()", "protected void syncFromRamToFlash()", "public void resetSync()", "public void startSync()", "public void stopSync()", " static void setGetInstanceIsAllowed()", "private static void checkInstanceIsAllowed()" ],
  "variableNames" : [ "sRef", "sGetInstanceAllowed", "sLock" ]
}