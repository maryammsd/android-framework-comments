{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/tuner/frontend/FrontendSettings.java",
  "packageName" : "android.media.tv.tuner.frontend",
  "className" : "FrontendSettings",
  "comment" : "\n * Frontend settings for tune and scan operations.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TYPE_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Undefined frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_ANALOG",
    "type" : "int",
    "comment" : "\n     * Analog frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_ATSC",
    "type" : "int",
    "comment" : "\n     * Advanced Television Systems Committee (ATSC) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_ATSC3",
    "type" : "int",
    "comment" : "\n     * Advanced Television Systems Committee 3.0 (ATSC-3) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_DVBC",
    "type" : "int",
    "comment" : "\n     * Digital Video Broadcasting-Cable (DVB-C) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_DVBS",
    "type" : "int",
    "comment" : "\n     * Digital Video Broadcasting-Satellite (DVB-S) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_DVBT",
    "type" : "int",
    "comment" : "\n     * Digital Video Broadcasting-Terrestrial (DVB-T) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_ISDBS",
    "type" : "int",
    "comment" : "\n     * Integrated Services Digital Broadcasting-Satellite (ISDB-S) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_ISDBS3",
    "type" : "int",
    "comment" : "\n     * Integrated Services Digital Broadcasting-Satellite 3 (ISDB-S3) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_ISDBT",
    "type" : "int",
    "comment" : "\n     * Integrated Services Digital Broadcasting-Terrestrial (ISDB-T) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_DTMB",
    "type" : "int",
    "comment" : "\n     * Digital Terrestrial Multimedia Broadcast standard (DTMB) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_IPTV",
    "type" : "int",
    "comment" : "\n     * Internet Protocol (IPTV) frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_UNDEFINED",
    "type" : "long",
    "comment" : "\n     * FEC not defined.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_AUTO",
    "type" : "long",
    "comment" : "\n     * hardware is able to detect and set FEC automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_1_2",
    "type" : "long",
    "comment" : "\n     * 1/2 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_1_3",
    "type" : "long",
    "comment" : "\n     * 1/3 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_1_4",
    "type" : "long",
    "comment" : "\n     * 1/4 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_1_5",
    "type" : "long",
    "comment" : "\n     * 1/5 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_2_3",
    "type" : "long",
    "comment" : "\n     * 2/3 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_2_5",
    "type" : "long",
    "comment" : "\n     * 2/5 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_2_9",
    "type" : "long",
    "comment" : "\n     * 2/9 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_3_4",
    "type" : "long",
    "comment" : "\n     * 3/4 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_3_5",
    "type" : "long",
    "comment" : "\n     * 3/5 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_4_5",
    "type" : "long",
    "comment" : "\n     * 4/5 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_4_15",
    "type" : "long",
    "comment" : "\n     * 4/15 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_5_6",
    "type" : "long",
    "comment" : "\n     * 5/6 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_5_9",
    "type" : "long",
    "comment" : "\n     * 5/9 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_6_7",
    "type" : "long",
    "comment" : "\n     * 6/7 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_7_8",
    "type" : "long",
    "comment" : "\n     * 7/8 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_7_9",
    "type" : "long",
    "comment" : "\n     * 7/9 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_7_15",
    "type" : "long",
    "comment" : "\n     * 7/15 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_8_9",
    "type" : "long",
    "comment" : "\n     * 8/9 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_8_15",
    "type" : "long",
    "comment" : "\n     * 8/15 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_9_10",
    "type" : "long",
    "comment" : "\n     * 9/10 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_9_20",
    "type" : "long",
    "comment" : "\n     * 9/20 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_11_15",
    "type" : "long",
    "comment" : "\n     * 11/15 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_11_20",
    "type" : "long",
    "comment" : "\n     * 11/20 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_11_45",
    "type" : "long",
    "comment" : "\n     * 11/45 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_13_18",
    "type" : "long",
    "comment" : "\n     * 13/18 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_13_45",
    "type" : "long",
    "comment" : "\n     * 13/45 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_14_45",
    "type" : "long",
    "comment" : "\n     * 14/45 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_23_36",
    "type" : "long",
    "comment" : "\n     * 23/36 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_25_36",
    "type" : "long",
    "comment" : "\n     * 25/36 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_26_45",
    "type" : "long",
    "comment" : "\n     * 26/45 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_28_45",
    "type" : "long",
    "comment" : "\n     * 28/45 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_29_45",
    "type" : "long",
    "comment" : "\n     * 29/45 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_31_45",
    "type" : "long",
    "comment" : "\n     * 31/45 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_32_45",
    "type" : "long",
    "comment" : "\n     * 32/45 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FEC_77_90",
    "type" : "long",
    "comment" : "\n     * 77/90 conv. code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_SPECTRAL_INVERSION_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Spectral Inversion Type undefined.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_SPECTRAL_INVERSION_NORMAL",
    "type" : "int",
    "comment" : "\n     * Normal Spectral Inversion.\n     ",
    "links" : [ ]
  }, {
    "name" : "FRONTEND_SPECTRAL_INVERSION_INVERTED",
    "type" : "int",
    "comment" : "\n     * Inverted Spectral Inversion.\n     ",
    "links" : [ ]
  }, {
    "name" : "mFrequency",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEndFrequency",
    "type" : "long",
    "comment" : " End frequency is only supported in Tuner 1.1 or higher.",
    "links" : [ ]
  }, {
    "name" : "mSpectralInversion",
    "type" : "int",
    "comment" : " General spectral inversion is only supported in Tuner 1.1 or higher.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract int getType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the frontend type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFrequency()",
    "returnType" : "int",
    "comment" : "\n     * Gets the frequency.\n     *\n     * @return the frequency in Hz.\n     * @deprecated Use {@link #getFrequencyLong()}\n     ",
    "links" : [ "#getFrequencyLong()" ]
  }, {
    "name" : "public long getFrequencyLong()",
    "returnType" : "long",
    "comment" : "\n     * Gets the frequency.\n     *\n     * @return the frequency in Hz.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEndFrequency()",
    "returnType" : "int",
    "comment" : "\n     * Get the end frequency.\n     *\n     * @return the end frequency in Hz.\n     * @deprecated Use {@link #getEndFrequencyLong()}\n     ",
    "links" : [ "#getEndFrequencyLong()" ]
  }, {
    "name" : "public long getEndFrequencyLong()",
    "returnType" : "long",
    "comment" : "\n     * Get the end frequency.\n     *\n     * @return the end frequency in Hz.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFrontendSpectralInversion()",
    "returnType" : "int",
    "comment" : "\n     * Get the spectral inversion.\n     *\n     * @return the value of the spectral inversion.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSpectralInversion(@FrontendSpectralInversion int inversion)",
    "returnType" : "void",
    "comment" : "\n     * Set Spectral Inversion.\n     *\n     * <p>This API is only supported by Tuner HAL 1.1 or higher. Unsupported version would cause\n     * no-op. Use {@link TunerVersionChecker#getTunerVersion()} to check the version.\n     *\n     * @param inversion the value to set as the spectral inversion. Default value is {@link\n     * #FRONTEND_SPECTRAL_INVERSION_UNDEFINED}.\n     ",
    "links" : [ "android.media.tv.tuner.TunerVersionChecker#getTunerVersion()", "#FRONTEND_SPECTRAL_INVERSION_UNDEFINED" ]
  }, {
    "name" : "public void setEndFrequency(int frequency)",
    "returnType" : "void",
    "comment" : "\n     * Set End Frequency. This API is only supported with Tuner HAL 1.1 or higher. Otherwise it\n     * would be no-op.\n     *\n     * <p>This API is only supported by Tuner HAL 1.1 or higher. Unsupported version would cause\n     * no-op. Use {@link TunerVersionChecker#getTunerVersion()} to check the version.\n     *\n     * @param endFrequency the end frequency used during blind scan. The default value is\n     * {@link android.media.tv.tuner.Tuner#INVALID_FRONTEND_SETTING_FREQUENCY}.\n     * @throws IllegalArgumentException if the {@code endFrequency} is not greater than 0.\n     * @deprecated Use {@link #setFrequencyLong(long)}\n     ",
    "links" : [ "android.media.tv.tuner.TunerVersionChecker#getTunerVersion()", "android.media.tv.tuner.Tuner#INVALID_FRONTEND_SETTING_FREQUENCY", "#setFrequencyLong(long)" ]
  }, {
    "name" : "public void setEndFrequencyLong(long endFrequency)",
    "returnType" : "void",
    "comment" : "\n     * Set End Frequency. This API is only supported with Tuner HAL 1.1 or higher. Otherwise it\n     * would be no-op.\n     *\n     * <p>This API is only supported by Tuner HAL 1.1 or higher. Unsupported version would cause\n     * no-op. Use {@link TunerVersionChecker#getTunerVersion()} to check the version.\n     *\n     * @param endFrequency the end frequency used during blind scan. The default value is\n     * {@link android.media.tv.tuner.Tuner#INVALID_FRONTEND_SETTING_FREQUENCY}.\n     * @throws IllegalArgumentException if the {@code endFrequency} is not greater than 0.\n     ",
    "links" : [ "android.media.tv.tuner.TunerVersionChecker#getTunerVersion()", "android.media.tv.tuner.Tuner#INVALID_FRONTEND_SETTING_FREQUENCY" ]
  } ],
  "methodNames" : [ "public abstract int getType()", "public int getFrequency()", "public long getFrequencyLong()", "public int getEndFrequency()", "public long getEndFrequencyLong()", "public int getFrontendSpectralInversion()", "public void setSpectralInversion(@FrontendSpectralInversion int inversion)", "public void setEndFrequency(int frequency)", "public void setEndFrequencyLong(long endFrequency)" ],
  "variableNames" : [ "TYPE_UNDEFINED", "TYPE_ANALOG", "TYPE_ATSC", "TYPE_ATSC3", "TYPE_DVBC", "TYPE_DVBS", "TYPE_DVBT", "TYPE_ISDBS", "TYPE_ISDBS3", "TYPE_ISDBT", "TYPE_DTMB", "TYPE_IPTV", "FEC_UNDEFINED", "FEC_AUTO", "FEC_1_2", "FEC_1_3", "FEC_1_4", "FEC_1_5", "FEC_2_3", "FEC_2_5", "FEC_2_9", "FEC_3_4", "FEC_3_5", "FEC_4_5", "FEC_4_15", "FEC_5_6", "FEC_5_9", "FEC_6_7", "FEC_7_8", "FEC_7_9", "FEC_7_15", "FEC_8_9", "FEC_8_15", "FEC_9_10", "FEC_9_20", "FEC_11_15", "FEC_11_20", "FEC_11_45", "FEC_13_18", "FEC_13_45", "FEC_14_45", "FEC_23_36", "FEC_25_36", "FEC_26_45", "FEC_28_45", "FEC_29_45", "FEC_31_45", "FEC_32_45", "FEC_77_90", "FRONTEND_SPECTRAL_INVERSION_UNDEFINED", "FRONTEND_SPECTRAL_INVERSION_NORMAL", "FRONTEND_SPECTRAL_INVERSION_INVERTED", "mFrequency", "mEndFrequency", "mSpectralInversion" ]
}