{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/metrics/IpConnectivityLog.java",
  "packageName" : "android.net.metrics",
  "className" : "IpConnectivityLog",
  "comment" : "\n * Class for logging IpConnectvity events with IpConnectivityMetrics\n * {@hide}\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SERVICE_NAME",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IIpConnectivityMetrics",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private boolean checkLoggerService()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean log(@NonNull ConnectivityMetricsEvent ev)",
    "returnType" : "boolean",
    "comment" : "\n     * Log a ConnectivityMetricsEvent.\n     * @param ev the event to log. If the event timestamp is 0,\n     * the timestamp is set to the current time in milliseconds.\n     * @return true if the event was successfully logged.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean log(long timestamp, @NonNull Event data)",
    "returnType" : "boolean",
    "comment" : "\n     * Log an IpConnectivity event.\n     * @param timestamp is the epoch timestamp of the event in ms.\n     * If the timestamp is 0, the timestamp is set to the current time in milliseconds.\n     * @param data is a Parcelable instance representing the event.\n     * @return true if the event was successfully logged.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean log(@NonNull String ifname, @NonNull Event data)",
    "returnType" : "boolean",
    "comment" : "\n     * Log an IpConnectivity event.\n     * @param ifname the network interface associated with the event.\n     * @param data is a Parcelable instance representing the event.\n     * @return true if the event was successfully logged.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean log(@NonNull Network network, @NonNull int[] transports, @NonNull Event data)",
    "returnType" : "boolean",
    "comment" : "\n     * Log an IpConnectivity event.\n     * @param network the network associated with the event.\n     * @param transports the current transports of the network associated with the event, as defined\n     * in NetworkCapabilities.\n     * @param data is a Parcelable instance representing the event.\n     * @return true if the event was successfully logged.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean log(int netid, @NonNull int[] transports, @NonNull Event data)",
    "returnType" : "boolean",
    "comment" : "\n     * Log an IpConnectivity event.\n     * @param netid the id of the network associated with the event.\n     * @param transports the current transports of the network associated with the event, as defined\n     * in NetworkCapabilities.\n     * @param data is a Parcelable instance representing the event.\n     * @return true if the event was successfully logged.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean log(@NonNull Event data)",
    "returnType" : "boolean",
    "comment" : "\n     * Log an IpConnectivity event.\n     * @param data is a Parcelable instance representing the event.\n     * @return true if the event was successfully logged.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static ConnectivityMetricsEvent makeEv(Event data)",
    "returnType" : "ConnectivityMetricsEvent",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DBG", "SERVICE_NAME", "mService" ],
  "methodNames" : [ "private boolean checkLoggerService()", "public boolean log(@NonNull ConnectivityMetricsEvent ev)", "public boolean log(long timestamp, @NonNull Event data)", "public boolean log(@NonNull String ifname, @NonNull Event data)", "public boolean log(@NonNull Network network, @NonNull int[] transports, @NonNull Event data)", "public boolean log(int netid, @NonNull int[] transports, @NonNull Event data)", "public boolean log(@NonNull Event data)", "private static ConnectivityMetricsEvent makeEv(Event data)" ]
}