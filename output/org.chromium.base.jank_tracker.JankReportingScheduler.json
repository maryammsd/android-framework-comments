{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/jank_tracker/JankReportingScheduler.java",
  "packageName" : "org.chromium.base.jank_tracker",
  "className" : "JankReportingScheduler",
  "comment" : "\n * This class receives requests to start and stop jank scenario tracking and runs them in a\n * HandlerThread it creates. In addition it handles the recording of periodic jank metrics.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "PERIODIC_METRIC_DELAY_MS",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrameMetricsStore",
    "type" : "FrameMetricsStore",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRunnableStore",
    "type" : "HashMap<Integer, JankReportingRunnable>",
    "comment" : " anything to it.",
    "links" : [ ]
  }, {
    "name" : "mPeriodicMetricReporter",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandlerThread",
    "type" : "HandlerThread",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsPeriodicReporterLooping",
    "type" : "AtomicBoolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void startTrackingScenario(@JankScenario int scenario)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishTrackingScenario(@JankScenario int scenario)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishTrackingScenario(@JankScenario int scenario, long endScenarioTimeNs)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishTrackingScenario(@JankScenario int scenario, JankEndScenarioTime endScenarioTime)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Handler getOrCreateHandler()",
    "returnType" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startReportingPeriodicMetrics()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopReportingPeriodicMetrics()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void startTrackingScenario(@JankScenario int scenario)", "public void finishTrackingScenario(@JankScenario int scenario)", "public void finishTrackingScenario(@JankScenario int scenario, long endScenarioTimeNs)", "public void finishTrackingScenario(@JankScenario int scenario, JankEndScenarioTime endScenarioTime)", "public Handler getOrCreateHandler()", "public void startReportingPeriodicMetrics()", "public void stopReportingPeriodicMetrics()" ],
  "variableNames" : [ "PERIODIC_METRIC_DELAY_MS", "mFrameMetricsStore", "mRunnableStore", "mPeriodicMetricReporter", "mHandlerThread", "mHandler", "mIsPeriodicReporterLooping" ]
}