{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/util/identity/CallerIdentity.java",
  "packageName" : "android.location.util.identity",
  "className" : "CallerIdentity",
  "comment" : "\n * Identifying information on a caller.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAttributionTag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListenerId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static CallerIdentity forTest(int uid, int pid, String packageName, @Nullable String attributionTag)",
    "returnType" : "CallerIdentity",
    "comment" : "\n     * Construct a CallerIdentity for test purposes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerIdentity forTest(int uid, int pid, String packageName, @Nullable String attributionTag, @Nullable String listenerId)",
    "returnType" : "CallerIdentity",
    "comment" : "\n     * Construct a CallerIdentity for test purposes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerIdentity forAggregation(CallerIdentity callerIdentity)",
    "returnType" : "CallerIdentity",
    "comment" : "\n     * Returns a CallerIdentity with PID and listener ID information stripped. This is mostly\n     * useful for aggregating information for debug purposes, and should not be used in any API with\n     * security requirements.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerIdentity fromContext(Context context)",
    "returnType" : "CallerIdentity",
    "comment" : "\n     * Creates a CallerIdentity for the current process and context.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerIdentity fromBinder(Context context, String packageName, @Nullable String attributionTag)",
    "returnType" : "CallerIdentity",
    "comment" : "\n     * Creates a CallerIdentity from the current binder identity, using the given package and\n     * feature id. The package will be checked to enforce it belongs to the calling uid, and a\n     * security exception will be thrown if it is invalid.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerIdentity fromBinder(Context context, String packageName, @Nullable String attributionTag, @Nullable String listenerId)",
    "returnType" : "CallerIdentity",
    "comment" : "\n     * Creates a CallerIdentity from the current binder identity, using the given package, feature\n     * id, and listener id. The package will be checked to enforce it belongs to the calling uid,\n     * and a security exception will be thrown if it is invalid.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerIdentity fromBinderUnsafe(String packageName, @Nullable String attributionTag)",
    "returnType" : "CallerIdentity",
    "comment" : "\n     * Creates a CallerIdentity from the current binder identity, using the given package and\n     * feature id. The package will not be checked to enforce that it belongs to the calling uid -\n     * this method should only be used if the package will be validated by some other means, such as\n     * an appops call.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CallerIdentity fromBinderUnsafe(String packageName, @Nullable String attributionTag, @Nullable String listenerId)",
    "returnType" : "CallerIdentity",
    "comment" : "\n     * Creates a CallerIdentity from the current binder identity, using the given package, feature\n     * id, and listener id. The package will not be checked to enforce that it belongs to the\n     * calling uid - this method should only be used if the package will be validated by some other\n     * means, such as an appops call.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getUid()",
    "returnType" : "int",
    "comment" : " The calling UID. ",
    "links" : [ ]
  }, {
    "name" : "public int getPid()",
    "returnType" : "int",
    "comment" : " The calling PID. ",
    "links" : [ ]
  }, {
    "name" : "public int getUserId()",
    "returnType" : "int",
    "comment" : " The calling user. ",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : " The calling package name. ",
    "links" : [ ]
  }, {
    "name" : "public String getAttributionTag()",
    "returnType" : "String",
    "comment" : " The calling attribution tag. ",
    "links" : [ ]
  }, {
    "name" : "public String getListenerId()",
    "returnType" : "String",
    "comment" : "\n     * The calling listener id. A null listener id will match any other listener id for the purposes\n     * of {@link #equals(Object)}.\n     ",
    "links" : [ "#equals(Object)" ]
  }, {
    "name" : "public boolean isSystemServer()",
    "returnType" : "boolean",
    "comment" : " Returns true if this represents a system server identity. ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMyUser()",
    "returnType" : "boolean",
    "comment" : " Returns true if this identity represents the same user this code is running in. ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMyUid()",
    "returnType" : "boolean",
    "comment" : " Returns true if this identity represents the same uid this code is running in. ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMyProcess()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if this identity represents the same process this code is running in. Returns\n     * false if the identity process is unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "public WorkSource addToWorkSource(@Nullable WorkSource workSource)",
    "returnType" : "WorkSource",
    "comment" : "\n     * Adds this identity to the worksource supplied, or if not worksource is supplied, creates a\n     * new worksource representing this identity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static CallerIdentity forTest(int uid, int pid, String packageName, @Nullable String attributionTag)", "public static CallerIdentity forTest(int uid, int pid, String packageName, @Nullable String attributionTag, @Nullable String listenerId)", "public static CallerIdentity forAggregation(CallerIdentity callerIdentity)", "public static CallerIdentity fromContext(Context context)", "public static CallerIdentity fromBinder(Context context, String packageName, @Nullable String attributionTag)", "public static CallerIdentity fromBinder(Context context, String packageName, @Nullable String attributionTag, @Nullable String listenerId)", "public static CallerIdentity fromBinderUnsafe(String packageName, @Nullable String attributionTag)", "public static CallerIdentity fromBinderUnsafe(String packageName, @Nullable String attributionTag, @Nullable String listenerId)", "public int getUid()", "public int getPid()", "public int getUserId()", "public String getPackageName()", "public String getAttributionTag()", "public String getListenerId()", "public boolean isSystemServer()", "public boolean isMyUser()", "public boolean isMyUid()", "public boolean isMyProcess()", "public WorkSource addToWorkSource(@Nullable WorkSource workSource)", "public String toString()", "public boolean equals(Object o)", "public int hashCode()" ],
  "variableNames" : [ "mUid", "mPid", "mPackageName", "mAttributionTag", "mListenerId" ]
}