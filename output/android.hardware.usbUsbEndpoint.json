{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/usb/UsbEndpoint.java",
  "packageName" : "android.hardware.usb",
  "className" : "UsbEndpoint",
  "comment" : "\n * A class representing an endpoint on a {@link UsbInterface}.\n * Endpoints are the channels for sending and receiving data over USB.\n * Typically bulk endpoints are used for sending non-trivial amounts of data.\n * Interrupt endpoints are used for sending small amounts of data, typically events,\n * separately from the main data streams.\n * The endpoint zero is a special endpoint for control messages sent from the host\n * to device.\n * Isochronous endpoints are currently unsupported.\n ",
  "variables" : [ {
    "name" : "mAddress",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAttributes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxPacketSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterval",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<UsbEndpoint>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getAddress()",
    "returnType" : "int",
    "comment" : "\n     * Returns the endpoint's address field.\n     * The address is a bitfield containing both the endpoint number\n     * as well as the data direction of the endpoint.\n     * the endpoint number and direction can also be accessed via\n     * {@link #getEndpointNumber} and {@link #getDirection}.\n     *\n     * @return the endpoint's address\n     ",
    "links" : [ "#getEndpointNumber", "#getDirection" ]
  }, {
    "name" : "public int getEndpointNumber()",
    "returnType" : "int",
    "comment" : "\n     * Extracts the endpoint's endpoint number from its address\n     *\n     * @return the endpoint's endpoint number\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDirection()",
    "returnType" : "int",
    "comment" : "\n     * Returns the endpoint's direction.\n     * Returns {@link UsbConstants#USB_DIR_OUT}\n     * if the direction is host to device, and\n     * {@link UsbConstants#USB_DIR_IN} if the\n     * direction is device to host.\n     * @see UsbConstants#USB_DIR_IN\n     * @see UsbConstants#USB_DIR_OUT\n     *\n     * @return the endpoint's direction\n     ",
    "links" : [ "UsbConstants#USB_DIR_OUT", "UsbConstants#USB_DIR_IN" ]
  }, {
    "name" : "public int getAttributes()",
    "returnType" : "int",
    "comment" : "\n     * Returns the endpoint's attributes field.\n     *\n     * @return the endpoint's attributes\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the endpoint's type.\n     * Possible results are:\n     * <ul>\n     * <li>{@link UsbConstants#USB_ENDPOINT_XFER_CONTROL} (endpoint zero)\n     * <li>{@link UsbConstants#USB_ENDPOINT_XFER_ISOC} (isochronous endpoint)\n     * <li>{@link UsbConstants#USB_ENDPOINT_XFER_BULK} (bulk endpoint)\n     * <li>{@link UsbConstants#USB_ENDPOINT_XFER_INT} (interrupt endpoint)\n     * </ul>\n     *\n     * @return the endpoint's type\n     ",
    "links" : [ "UsbConstants#USB_ENDPOINT_XFER_CONTROL", "UsbConstants#USB_ENDPOINT_XFER_ISOC", "UsbConstants#USB_ENDPOINT_XFER_BULK", "UsbConstants#USB_ENDPOINT_XFER_INT" ]
  }, {
    "name" : "public int getMaxPacketSize()",
    "returnType" : "int",
    "comment" : "\n     * Returns the endpoint's maximum packet size.\n     *\n     * @return the endpoint's maximum packet size\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInterval()",
    "returnType" : "int",
    "comment" : "\n     * Returns the endpoint's interval field.\n     *\n     * @return the endpoint's interval\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mAddress", "mAttributes", "mMaxPacketSize", "mInterval", "CREATOR" ],
  "methodNames" : [ "public int getAddress()", "public int getEndpointNumber()", "public int getDirection()", "public int getAttributes()", "public int getType()", "public int getMaxPacketSize()", "public int getInterval()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ]
}