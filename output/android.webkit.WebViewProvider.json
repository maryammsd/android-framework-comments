{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/WebViewProvider.java",
  "packageName" : "android.webkit",
  "className" : "WebViewProvider",
  "comment" : "\n * WebView backend provider interface: this interface is the abstract backend to a WebView\n * instance; each WebView object is bound to exactly one WebViewProvider object which implements\n * the runtime behavior of that WebView.\n *\n * All methods must behave as per their namesake in {@link WebView}, unless otherwise noted.\n *\n * @hide Not part of the public API; only required by system implementors.\n ",
  "links" : [ "android.webkit.WebView" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void init(Map<String, Object> javaScriptInterfaces, boolean privateBrowsing)",
    "returnType" : "void",
    "comment" : "\n     * Initialize this WebViewProvider instance. Called after the WebView has fully constructed.\n     * @param javaScriptInterfaces is a Map of interface names, as keys, and\n     * object implementing those interfaces, as values.\n     * @param privateBrowsing If {@code true} the web view will be initialized in private /\n     * incognito mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setHorizontalScrollbarOverlay(boolean overlay)",
    "returnType" : "void",
    "comment" : " Deprecated - should never be called",
    "links" : [ ]
  }, {
    "name" : "public void setVerticalScrollbarOverlay(boolean overlay)",
    "returnType" : "void",
    "comment" : " Deprecated - should never be called",
    "links" : [ ]
  }, {
    "name" : "public boolean overlayHorizontalScrollbar()",
    "returnType" : "boolean",
    "comment" : " Deprecated - should never be called",
    "links" : [ ]
  }, {
    "name" : "public boolean overlayVerticalScrollbar()",
    "returnType" : "boolean",
    "comment" : " Deprecated - should never be called",
    "links" : [ ]
  }, {
    "name" : "public int getVisibleTitleHeight()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SslCertificate getCertificate()",
    "returnType" : "SslCertificate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCertificate(SslCertificate certificate)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void savePassword(String host, String username, String password)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setHttpAuthUsernamePassword(String host, String realm, String username, String password)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String[] getHttpAuthUsernamePassword(String host, String realm)",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "\n     * See {@link WebView#destroy()}.\n     * As well as releasing the internal state and resources held by the implementation,\n     * the provider should null all references it holds on the WebView proxy class, and ensure\n     * no further method calls are made to it.\n     ",
    "links" : [ "android.webkit.WebView#destroy()" ]
  }, {
    "name" : "public void setNetworkAvailable(boolean networkUp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebBackForwardList saveState(Bundle outState)",
    "returnType" : "WebBackForwardList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean savePicture(Bundle b, final File dest)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean restorePicture(Bundle b, File src)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebBackForwardList restoreState(Bundle inState)",
    "returnType" : "WebBackForwardList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void loadUrl(String url, Map<String, String> additionalHttpHeaders)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void loadUrl(String url)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void postUrl(String url, byte[] postData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void loadData(String data, String mimeType, String encoding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void loadDataWithBaseURL(String baseUrl, String data, String mimeType, String encoding, String historyUrl)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void evaluateJavaScript(String script, ValueCallback<String> resultCallback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void saveWebArchive(String filename)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void saveWebArchive(String basename, boolean autoname, ValueCallback<String> callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopLoading()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void reload()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canGoBack()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void goBack()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canGoForward()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void goForward()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canGoBackOrForward(int steps)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void goBackOrForward(int steps)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isPrivateBrowsingEnabled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean pageUp(boolean top)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean pageDown(boolean bottom)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void insertVisualStateCallback(long requestId, VisualStateCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearView()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Picture capturePicture()",
    "returnType" : "Picture",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PrintDocumentAdapter createPrintDocumentAdapter(String documentName)",
    "returnType" : "PrintDocumentAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getScale()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setInitialScale(int scaleInPercent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void invokeZoomPicker()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public HitTestResult getHitTestResult()",
    "returnType" : "HitTestResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void requestFocusNodeHref(Message hrefMsg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void requestImageRef(Message msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getUrl()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getOriginalUrl()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getTitle()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Bitmap getFavicon()",
    "returnType" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getTouchIconUrl()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getProgress()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getContentHeight()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getContentWidth()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void pauseTimers()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void resumeTimers()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onPause()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onResume()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isPaused()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void freeMemory()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearCache(boolean includeDiskFiles)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearFormData()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearHistory()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearSslPreferences()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebBackForwardList copyBackForwardList()",
    "returnType" : "WebBackForwardList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFindListener(WebView.FindListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void findNext(boolean forward)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int findAll(String find)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void findAllAsync(String find)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean showFindDialog(String text, boolean showIme)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearMatches()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void documentHasImages(Message response)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setWebViewClient(WebViewClient client)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebViewClient getWebViewClient()",
    "returnType" : "WebViewClient",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebViewRenderProcess getWebViewRenderProcess()",
    "returnType" : "WebViewRenderProcess",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setWebViewRenderProcessClient(@Nullable Executor executor, @Nullable WebViewRenderProcessClient client)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebViewRenderProcessClient getWebViewRenderProcessClient()",
    "returnType" : "WebViewRenderProcessClient",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDownloadListener(DownloadListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setWebChromeClient(WebChromeClient client)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebChromeClient getWebChromeClient()",
    "returnType" : "WebChromeClient",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPictureListener(PictureListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addJavascriptInterface(Object obj, String interfaceName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeJavascriptInterface(String interfaceName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebMessagePort[] createWebMessageChannel()",
    "returnType" : "WebMessagePort[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void postMessageToMainFrame(WebMessage message, Uri targetOrigin)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WebSettings getSettings()",
    "returnType" : "WebSettings",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMapTrackballToArrowKeys(boolean setMap)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void flingScroll(int vx, int vy)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View getZoomControls()",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canZoomIn()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canZoomOut()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean zoomBy(float zoomFactor)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean zoomIn()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean zoomOut()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dumpViewHierarchyWithProperties(BufferedWriter out, int level)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View findHierarchyView(String className, int hashCode)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRendererPriorityPolicy(int rendererRequestedPriority, boolean waivedWhenNotVisible)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getRendererRequestedPriority()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean getRendererPriorityWaivedWhenNotVisible()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTextClassifier(@Nullable TextClassifier textClassifier)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TextClassifier getTextClassifier()",
    "returnType" : "TextClassifier",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ViewDelegate getViewDelegate()",
    "returnType" : "ViewDelegate",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : " ScrollDelegate getScrollDelegate()",
    "returnType" : "ScrollDelegate",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : "public void notifyFindDialogDismissed()",
    "returnType" : "void",
    "comment" : "\n     * Only used by FindActionModeCallback to inform providers that the find dialog has\n     * been dismissed.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void init(Map<String, Object> javaScriptInterfaces, boolean privateBrowsing)", "public void setHorizontalScrollbarOverlay(boolean overlay)", "public void setVerticalScrollbarOverlay(boolean overlay)", "public boolean overlayHorizontalScrollbar()", "public boolean overlayVerticalScrollbar()", "public int getVisibleTitleHeight()", "public SslCertificate getCertificate()", "public void setCertificate(SslCertificate certificate)", "public void savePassword(String host, String username, String password)", "public void setHttpAuthUsernamePassword(String host, String realm, String username, String password)", "public String[] getHttpAuthUsernamePassword(String host, String realm)", "public void destroy()", "public void setNetworkAvailable(boolean networkUp)", "public WebBackForwardList saveState(Bundle outState)", "public boolean savePicture(Bundle b, final File dest)", "public boolean restorePicture(Bundle b, File src)", "public WebBackForwardList restoreState(Bundle inState)", "public void loadUrl(String url, Map<String, String> additionalHttpHeaders)", "public void loadUrl(String url)", "public void postUrl(String url, byte[] postData)", "public void loadData(String data, String mimeType, String encoding)", "public void loadDataWithBaseURL(String baseUrl, String data, String mimeType, String encoding, String historyUrl)", "public void evaluateJavaScript(String script, ValueCallback<String> resultCallback)", "public void saveWebArchive(String filename)", "public void saveWebArchive(String basename, boolean autoname, ValueCallback<String> callback)", "public void stopLoading()", "public void reload()", "public boolean canGoBack()", "public void goBack()", "public boolean canGoForward()", "public void goForward()", "public boolean canGoBackOrForward(int steps)", "public void goBackOrForward(int steps)", "public boolean isPrivateBrowsingEnabled()", "public boolean pageUp(boolean top)", "public boolean pageDown(boolean bottom)", "public void insertVisualStateCallback(long requestId, VisualStateCallback callback)", "public void clearView()", "public Picture capturePicture()", "public PrintDocumentAdapter createPrintDocumentAdapter(String documentName)", "public float getScale()", "public void setInitialScale(int scaleInPercent)", "public void invokeZoomPicker()", "public HitTestResult getHitTestResult()", "public void requestFocusNodeHref(Message hrefMsg)", "public void requestImageRef(Message msg)", "public String getUrl()", "public String getOriginalUrl()", "public String getTitle()", "public Bitmap getFavicon()", "public String getTouchIconUrl()", "public int getProgress()", "public int getContentHeight()", "public int getContentWidth()", "public void pauseTimers()", "public void resumeTimers()", "public void onPause()", "public void onResume()", "public boolean isPaused()", "public void freeMemory()", "public void clearCache(boolean includeDiskFiles)", "public void clearFormData()", "public void clearHistory()", "public void clearSslPreferences()", "public WebBackForwardList copyBackForwardList()", "public void setFindListener(WebView.FindListener listener)", "public void findNext(boolean forward)", "public int findAll(String find)", "public void findAllAsync(String find)", "public boolean showFindDialog(String text, boolean showIme)", "public void clearMatches()", "public void documentHasImages(Message response)", "public void setWebViewClient(WebViewClient client)", "public WebViewClient getWebViewClient()", "public WebViewRenderProcess getWebViewRenderProcess()", "public void setWebViewRenderProcessClient(@Nullable Executor executor, @Nullable WebViewRenderProcessClient client)", "public WebViewRenderProcessClient getWebViewRenderProcessClient()", "public void setDownloadListener(DownloadListener listener)", "public void setWebChromeClient(WebChromeClient client)", "public WebChromeClient getWebChromeClient()", "public void setPictureListener(PictureListener listener)", "public void addJavascriptInterface(Object obj, String interfaceName)", "public void removeJavascriptInterface(String interfaceName)", "public WebMessagePort[] createWebMessageChannel()", "public void postMessageToMainFrame(WebMessage message, Uri targetOrigin)", "public WebSettings getSettings()", "public void setMapTrackballToArrowKeys(boolean setMap)", "public void flingScroll(int vx, int vy)", "public View getZoomControls()", "public boolean canZoomIn()", "public boolean canZoomOut()", "public boolean zoomBy(float zoomFactor)", "public boolean zoomIn()", "public boolean zoomOut()", "public void dumpViewHierarchyWithProperties(BufferedWriter out, int level)", "public View findHierarchyView(String className, int hashCode)", "public void setRendererPriorityPolicy(int rendererRequestedPriority, boolean waivedWhenNotVisible)", "public int getRendererRequestedPriority()", "public boolean getRendererPriorityWaivedWhenNotVisible()", "public void setTextClassifier(@Nullable TextClassifier textClassifier)", "public TextClassifier getTextClassifier()", " ViewDelegate getViewDelegate()", " ScrollDelegate getScrollDelegate()", "public void notifyFindDialogDismissed()" ],
  "variableNames" : [ ]
}