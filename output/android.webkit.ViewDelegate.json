{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/WebViewProvider.java",
  "packageName" : "android.webkit",
  "className" : "ViewDelegate",
  "comment" : " the remainder on the methods below.",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public boolean shouldDelayChildPressedState()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onProvideVirtualStructure(android.view.ViewStructure structure)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onProvideAutofillVirtualStructure(@SuppressWarnings(\"unused\") android.view.ViewStructure structure, @SuppressWarnings(\"unused\") int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void autofill(@SuppressWarnings(\"unused\") SparseArray<AutofillValue> values)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isVisibleToUserForAutofill(@SuppressWarnings(\"unused\") int virtualId)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onProvideContentCaptureStructure(@NonNull @SuppressWarnings(\"unused\") android.view.ViewStructure structure, @SuppressWarnings(\"unused\") int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onCreateVirtualViewTranslationRequests(@NonNull @SuppressWarnings(\"unused\") long[] virtualIds, @NonNull @SuppressWarnings(\"unused\") @DataFormat int[] supportedFormats, @NonNull @SuppressWarnings(\"unused\") Consumer<ViewTranslationRequest> requestsCollector)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onVirtualViewTranslationResponses(@NonNull @SuppressWarnings(\"unused\") LongSparseArray<ViewTranslationResponse> response)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void dispatchCreateViewTranslationRequest(@NonNull @SuppressWarnings(\"unused\") Map<AutofillId, long[]> viewIds, @NonNull @SuppressWarnings(\"unused\") @DataFormat int[] supportedFormats, @Nullable @SuppressWarnings(\"unused\") TranslationCapability capability, @NonNull @SuppressWarnings(\"unused\") List<ViewTranslationRequest> requests)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public AccessibilityNodeProvider getAccessibilityNodeProvider()",
    "returnType" : "AccessibilityNodeProvider",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onInitializeAccessibilityEvent(AccessibilityEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performAccessibilityAction(int action, Bundle arguments)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOverScrollMode(int mode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setScrollBarStyle(int style)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDrawVerticalScrollBar(Canvas canvas, Drawable scrollBar, int l, int t, int r, int b)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onOverScrolled(int scrollX, int scrollY, boolean clampedX, boolean clampedY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onWindowVisibilityChanged(int visibility)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDraw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setLayoutParams(LayoutParams layoutParams)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performLongClick()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onConfigurationChanged(Configuration newConfig)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InputConnection onCreateInputConnection(EditorInfo outAttrs)",
    "returnType" : "InputConnection",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onDragEvent(DragEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyMultiple(int keyCode, int repeatCount, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyDown(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyUp(int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAttachedToWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDetachedFromWindow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onMovedToDisplay(int displayId, Configuration config)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onVisibilityChanged(View changedView, int visibility)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onWindowFocusChanged(boolean hasWindowFocus)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onFocusChanged(boolean focused, int direction, Rect previouslyFocusedRect)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setFrame(int left, int top, int right, int bottom)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSizeChanged(int w, int h, int ow, int oh)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onScrollChanged(int l, int t, int oldl, int oldt)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean dispatchKeyEvent(KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTouchEvent(MotionEvent ev)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onHoverEvent(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onGenericMotionEvent(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTrackballEvent(MotionEvent ev)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean requestFocus(int direction, Rect previouslyFocusedRect)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onMeasure(int widthMeasureSpec, int heightMeasureSpec)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean requestChildRectangleOnScreen(View child, Rect rect, boolean immediate)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setBackgroundColor(int color)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setLayerType(int layerType, Paint paint)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void preDispatchDraw(Canvas canvas)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onStartTemporaryDetach()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onFinishTemporaryDetach()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onActivityResult(int requestCode, int resultCode, Intent data)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Handler getHandler(Handler originalHandler)",
    "returnType" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public View findFocus(View originalFocusedView)",
    "returnType" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean onCheckIsTextEditor()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " WindowInsets onApplyWindowInsets(@Nullable WindowInsets insets)",
    "returnType" : "WindowInsets",
    "comment" : "\n         * @see View#onApplyWindowInsets(WindowInsets).\n         *\n         * <p>This is the entry point for the WebView implementation to override. It returns\n         * {@code null} when the WebView implementation hasn't implemented the WindowInsets support\n         * on S yet. In this case, the {@link View#onApplyWindowInsets()} super method will be\n         * called instead.\n         *\n         * @param insets Insets to apply\n         * @return The supplied insets with any applied insets consumed.\n         ",
    "links" : [ "android.view.View#onApplyWindowInsets()" ]
  }, {
    "name" : " PointerIcon onResolvePointerIcon(@NonNull MotionEvent event, int pointerIndex)",
    "returnType" : "PointerIcon",
    "comment" : "\n         * @hide Only used by WebView.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean shouldDelayChildPressedState()", "public void onProvideVirtualStructure(android.view.ViewStructure structure)", " void onProvideAutofillVirtualStructure(@SuppressWarnings(\"unused\") android.view.ViewStructure structure, @SuppressWarnings(\"unused\") int flags)", " void autofill(@SuppressWarnings(\"unused\") SparseArray<AutofillValue> values)", " boolean isVisibleToUserForAutofill(@SuppressWarnings(\"unused\") int virtualId)", " void onProvideContentCaptureStructure(@NonNull @SuppressWarnings(\"unused\") android.view.ViewStructure structure, @SuppressWarnings(\"unused\") int flags)", " void onCreateVirtualViewTranslationRequests(@NonNull @SuppressWarnings(\"unused\") long[] virtualIds, @NonNull @SuppressWarnings(\"unused\") @DataFormat int[] supportedFormats, @NonNull @SuppressWarnings(\"unused\") Consumer<ViewTranslationRequest> requestsCollector)", " void onVirtualViewTranslationResponses(@NonNull @SuppressWarnings(\"unused\") LongSparseArray<ViewTranslationResponse> response)", " void dispatchCreateViewTranslationRequest(@NonNull @SuppressWarnings(\"unused\") Map<AutofillId, long[]> viewIds, @NonNull @SuppressWarnings(\"unused\") @DataFormat int[] supportedFormats, @Nullable @SuppressWarnings(\"unused\") TranslationCapability capability, @NonNull @SuppressWarnings(\"unused\") List<ViewTranslationRequest> requests)", "public AccessibilityNodeProvider getAccessibilityNodeProvider()", "public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info)", "public void onInitializeAccessibilityEvent(AccessibilityEvent event)", "public boolean performAccessibilityAction(int action, Bundle arguments)", "public void setOverScrollMode(int mode)", "public void setScrollBarStyle(int style)", "public void onDrawVerticalScrollBar(Canvas canvas, Drawable scrollBar, int l, int t, int r, int b)", "public void onOverScrolled(int scrollX, int scrollY, boolean clampedX, boolean clampedY)", "public void onWindowVisibilityChanged(int visibility)", "public void onDraw(Canvas canvas)", "public void setLayoutParams(LayoutParams layoutParams)", "public boolean performLongClick()", "public void onConfigurationChanged(Configuration newConfig)", "public InputConnection onCreateInputConnection(EditorInfo outAttrs)", "public boolean onDragEvent(DragEvent event)", "public boolean onKeyMultiple(int keyCode, int repeatCount, KeyEvent event)", "public boolean onKeyDown(int keyCode, KeyEvent event)", "public boolean onKeyUp(int keyCode, KeyEvent event)", "public void onAttachedToWindow()", "public void onDetachedFromWindow()", "public void onMovedToDisplay(int displayId, Configuration config)", "public void onVisibilityChanged(View changedView, int visibility)", "public void onWindowFocusChanged(boolean hasWindowFocus)", "public void onFocusChanged(boolean focused, int direction, Rect previouslyFocusedRect)", "public boolean setFrame(int left, int top, int right, int bottom)", "public void onSizeChanged(int w, int h, int ow, int oh)", "public void onScrollChanged(int l, int t, int oldl, int oldt)", "public boolean dispatchKeyEvent(KeyEvent event)", "public boolean onTouchEvent(MotionEvent ev)", "public boolean onHoverEvent(MotionEvent event)", "public boolean onGenericMotionEvent(MotionEvent event)", "public boolean onTrackballEvent(MotionEvent ev)", "public boolean requestFocus(int direction, Rect previouslyFocusedRect)", "public void onMeasure(int widthMeasureSpec, int heightMeasureSpec)", "public boolean requestChildRectangleOnScreen(View child, Rect rect, boolean immediate)", "public void setBackgroundColor(int color)", "public void setLayerType(int layerType, Paint paint)", "public void preDispatchDraw(Canvas canvas)", "public void onStartTemporaryDetach()", "public void onFinishTemporaryDetach()", "public void onActivityResult(int requestCode, int resultCode, Intent data)", "public Handler getHandler(Handler originalHandler)", "public View findFocus(View originalFocusedView)", " boolean onCheckIsTextEditor()", " WindowInsets onApplyWindowInsets(@Nullable WindowInsets insets)", " PointerIcon onResolvePointerIcon(@NonNull MotionEvent event, int pointerIndex)" ],
  "variableNames" : [ ]
}