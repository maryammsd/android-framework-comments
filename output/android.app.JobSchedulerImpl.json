{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/JobSchedulerImpl.java",
  "packageName" : "android.app",
  "className" : "JobSchedulerImpl",
  "comment" : "\n * Concrete implementation of the JobScheduler interface\n *\n * Note android.app.job is the better package to put this class, but we can't move it there\n * because that'd break robolectric. Grr.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mBinder",
    "type" : "IJobScheduler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNamespace",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public JobScheduler forNamespace(@NonNull String namespace)",
    "returnType" : "JobScheduler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getNamespace()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int schedule(JobInfo job)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int enqueue(JobInfo job, JobWorkItem work)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int scheduleAsPackage(JobInfo job, String packageName, int userId, String tag)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancel(int jobId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancelAll()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancelInAllNamespaces()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<JobInfo> getAllPendingJobs()",
    "returnType" : "List<JobInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Map<String, List<JobInfo>> getPendingJobsInAllNamespaces()",
    "returnType" : "Map<String, List<JobInfo>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public JobInfo getPendingJob(int jobId)",
    "returnType" : "JobInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getPendingJobReason(int jobId)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canRunUserInitiatedJobs()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasRunUserInitiatedJobsPermission(String packageName, int userId)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<JobInfo> getStartedJobs()",
    "returnType" : "List<JobInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<JobSnapshot> getAllJobSnapshots()",
    "returnType" : "List<JobSnapshot>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerUserVisibleJobObserver(@NonNull IUserVisibleJobObserver observer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterUserVisibleJobObserver(@NonNull IUserVisibleJobObserver observer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notePendingUserRequestedAppStop(@NonNull String packageName, int userId, @Nullable String debugReason)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public JobScheduler forNamespace(@NonNull String namespace)", "public String getNamespace()", "public int schedule(JobInfo job)", "public int enqueue(JobInfo job, JobWorkItem work)", "public int scheduleAsPackage(JobInfo job, String packageName, int userId, String tag)", "public void cancel(int jobId)", "public void cancelAll()", "public void cancelInAllNamespaces()", "public List<JobInfo> getAllPendingJobs()", "public Map<String, List<JobInfo>> getPendingJobsInAllNamespaces()", "public JobInfo getPendingJob(int jobId)", "public int getPendingJobReason(int jobId)", "public boolean canRunUserInitiatedJobs()", "public boolean hasRunUserInitiatedJobsPermission(String packageName, int userId)", "public List<JobInfo> getStartedJobs()", "public List<JobSnapshot> getAllJobSnapshots()", "public void registerUserVisibleJobObserver(@NonNull IUserVisibleJobObserver observer)", "public void unregisterUserVisibleJobObserver(@NonNull IUserVisibleJobObserver observer)", "public void notePendingUserRequestedAppStop(@NonNull String packageName, int userId, @Nullable String debugReason)" ],
  "variableNames" : [ "mBinder", "mContext", "mNamespace" ]
}