{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/WindowInsets.java",
  "packageName" : "android.view",
  "className" : "Type",
  "comment" : "\n     * Class that defines different types of sources causing window insets.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "FIRST",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATUS_BARS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NAVIGATION_BARS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAPTION_BAR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "IME",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYSTEM_GESTURES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MANDATORY_SYSTEM_GESTURES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAPPABLE_ELEMENT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_CUTOUT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WINDOW_DECOR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYSTEM_OVERLAYS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LAST",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_VISIBLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static int indexOf(@InsetsType int type)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String toString(@InsetsType int types)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static int statusBars()",
    "returnType" : "int",
    "comment" : "\n         * @return An insets type representing any system bars for displaying status.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static int navigationBars()",
    "returnType" : "int",
    "comment" : "\n         * @return An insets type representing any system bars for navigation.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static int captionBar()",
    "returnType" : "int",
    "comment" : "\n         * @return An insets type representing the window of a caption bar.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static int ime()",
    "returnType" : "int",
    "comment" : "\n         * @return An insets type representing the window of an {@link InputMethod}.\n         ",
    "links" : [ "android.view.inputmethod.InputMethod" ]
  }, {
    "name" : "public static int systemGestures()",
    "returnType" : "int",
    "comment" : "\n         * Returns an insets type representing the system gesture insets.\n         *\n         * <p>The system gesture insets represent the area of a window where system gestures have\n         * priority and may consume some or all touch input, e.g. due to the a system bar\n         * occupying it, or it being reserved for touch-only gestures.\n         *\n         * <p>Simple taps are guaranteed to reach the window even within the system gesture insets,\n         * as long as they are outside the {@link #getSystemWindowInsets() system window insets}.\n         *\n         * <p>When {@link View#SYSTEM_UI_FLAG_LAYOUT_STABLE} is requested, an inset will be returned\n         * even when the system gestures are inactive due to\n         * {@link View#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN} or\n         * {@link View#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION}.\n         *\n         * @see #getSystemGestureInsets()\n         ",
    "links" : [ "android.view.View#SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN", "#getSystemWindowInsets()", "android.view.View#SYSTEM_UI_FLAG_LAYOUT_STABLE", "android.view.View#SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION" ]
  }, {
    "name" : "public static int mandatorySystemGestures()",
    "returnType" : "int",
    "comment" : "\n         * @see #getMandatorySystemGestureInsets\n         ",
    "links" : [ ]
  }, {
    "name" : "public static int tappableElement()",
    "returnType" : "int",
    "comment" : "\n         * @see #getTappableElementInsets\n         ",
    "links" : [ ]
  }, {
    "name" : "public static int displayCutout()",
    "returnType" : "int",
    "comment" : "\n         * Returns an insets type representing the area that used by {@link DisplayCutout}.\n         *\n         * <p>This is equivalent to the safe insets on {@link #getDisplayCutout()}.\n         *\n         * <p>Note: During dispatch to {@link View#onApplyWindowInsets}, if the window is using\n         * the {@link WindowManager.LayoutParams#LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT default}\n         * {@link WindowManager.LayoutParams#layoutInDisplayCutoutMode}, {@link #getDisplayCutout()}\n         * will return {@code null} even if the window overlaps a display cutout area, in which case\n         * the {@link #displayCutout() displayCutout() inset} will still report the accurate value.\n         *\n         * @see DisplayCutout#getSafeInsetLeft()\n         * @see DisplayCutout#getSafeInsetTop()\n         * @see DisplayCutout#getSafeInsetRight()\n         * @see DisplayCutout#getSafeInsetBottom()\n         ",
    "links" : [ "android.view.DisplayCutout", "android.view.View#onApplyWindowInsets", "#displayCutout()", "WindowManager.LayoutParams#LAYOUT_IN_DISPLAY_CUTOUT_MODE_DEFAULT", "WindowManager.LayoutParams#layoutInDisplayCutoutMode", "#getDisplayCutout()" ]
  }, {
    "name" : "public static int systemOverlays()",
    "returnType" : "int",
    "comment" : "\n         * System overlays represent the insets caused by the system visible elements. Unlike\n         * {@link #navigationBars()} or {@link #statusBars()}, system overlays might not be\n         * hidden by the client.\n         *\n         * For compatibility reasons, this type is included in {@link #systemBars()}. In this\n         * way, views which fit {@link #systemBars()} fit {@link #systemOverlays()}.\n         *\n         * Examples include climate controls, multi-tasking affordances, etc.\n         *\n         * @return An insets type representing the system overlays.\n         ",
    "links" : [ "#navigationBars()", "#statusBars()", "#systemBars()", "#systemOverlays()" ]
  }, {
    "name" : "public static int systemBars()",
    "returnType" : "int",
    "comment" : "\n         * @return All system bars. Includes {@link #statusBars()}, {@link #captionBar()} as well as\n         *         {@link #navigationBars()}, {@link #systemOverlays()}, but not {@link #ime()}.\n         ",
    "links" : [ "#navigationBars()", "#statusBars()", "#ime()", "#captionBar()", "#systemOverlays()" ]
  }, {
    "name" : "public static int defaultVisible()",
    "returnType" : "int",
    "comment" : "\n         * @return Default visible types.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static int all()",
    "returnType" : "int",
    "comment" : "\n         * @return All inset types combined.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static boolean hasCompatSystemBars(@InsetsType int types)",
    "returnType" : "boolean",
    "comment" : "\n         * @return System bars which can be controlled by {@link View.SystemUiVisibility}.\n         *\n         * @hide\n         ",
    "links" : [ "View.SystemUiVisibility" ]
  } ],
  "methodNames" : [ " static int indexOf(@InsetsType int type)", "public static String toString(@InsetsType int types)", "public static int statusBars()", "public static int navigationBars()", "public static int captionBar()", "public static int ime()", "public static int systemGestures()", "public static int mandatorySystemGestures()", "public static int tappableElement()", "public static int displayCutout()", "public static int systemOverlays()", "public static int systemBars()", "public static int defaultVisible()", "public static int all()", "public static boolean hasCompatSystemBars(@InsetsType int types)" ],
  "variableNames" : [ "FIRST", "STATUS_BARS", "NAVIGATION_BARS", "CAPTION_BAR", "IME", "SYSTEM_GESTURES", "MANDATORY_SYSTEM_GESTURES", "TAPPABLE_ELEMENT", "DISPLAY_CUTOUT", "WINDOW_DECOR", "SYSTEM_OVERLAYS", "LAST", "SIZE", "DEFAULT_VISIBLE" ]
}