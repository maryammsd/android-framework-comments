{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/Region_Delegate.java",
  "packageName" : "android.graphics",
  "className" : "Region_Delegate",
  "comment" : "\n * Delegate implementing the native methods of android.graphics.Region\n *\n * Through the layoutlib_create tool, the original native methods of Region have been replaced\n * by calls to methods of the same name in this delegate class.\n *\n * This class behaves like the original native implementation, but in Java, keeping previously\n * native data into its own objects and mapping them to int that are sent back and forth between\n * it and the original Region class.\n *\n * This also serve as a base class for all Region delegate classes.\n *\n * @see DelegateManager\n *\n ",
  "variables" : [ {
    "name" : "sManager",
    "type" : "DelegateManager<Region_Delegate>",
    "comment" : " ---- delegate manager ----",
    "links" : [ ]
  }, {
    "name" : "mArea",
    "type" : "Area",
    "comment" : " ---- delegate data ----",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Region_Delegate getDelegate(long nativeShader)",
    "returnType" : "Region_Delegate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Area getJavaArea()",
    "returnType" : "Area",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static Area combineShapes(Shape shape1, Shape shape2, int regionOp)",
    "returnType" : "Area",
    "comment" : "\n     * Combines two {@link Shape} into another one (actually an {@link Area}), according\n     * to the given {@link Region.Op}.\n     *\n     * If the Op is not one that combines two shapes, then this return null\n     *\n     * @param shape1 the firt shape to combine which can be null if there's no original clip.\n     * @param shape2 the 2nd shape to combine\n     * @param regionOp the operande for the combine\n     * @return a new area or null.\n     ",
    "links" : [ "java.awt.Shape", "Region.Op", "java.awt.geom.Area" ]
  }, {
    "name" : " static boolean isEmpty(Region thisRegion)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean isRect(Region thisRegion)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean isComplex(Region thisRegion)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean contains(Region thisRegion, int x, int y)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean quickContains(Region thisRegion, int left, int top, int right, int bottom)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean quickReject(Region thisRegion, int left, int top, int right, int bottom)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean quickReject(Region thisRegion, Region rgn)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void translate(Region thisRegion, int dx, int dy, Region dst)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void scale(Region thisRegion, float scale, Region dst)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nativeConstructor()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nativeDestructor(long native_region)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nativeSetRegion(long native_dst, long native_src)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeSetRect(long native_dst, int left, int top, int right, int bottom)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeSetPath(long native_dst, long native_path, long native_clip)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeGetBounds(long native_region, Rect rect)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeGetBoundaryPath(long native_region, long native_path)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeOp(long native_dst, int left, int top, int right, int bottom, int op)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeOp(long native_dst, Rect rect, long native_region, int op)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeOp(long native_dst, long native_region1, long native_region2, int op)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nativeCreateFromParcel(Parcel p)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeWriteToParcel(long native_region, Parcel p)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nativeEquals(long native_r1, long native_r2)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String nativeToString(long native_region)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "sManager", "mArea" ],
  "methodNames" : [ "public static Region_Delegate getDelegate(long nativeShader)", "public Area getJavaArea()", "public static Area combineShapes(Shape shape1, Shape shape2, int regionOp)", " static boolean isEmpty(Region thisRegion)", " static boolean isRect(Region thisRegion)", " static boolean isComplex(Region thisRegion)", " static boolean contains(Region thisRegion, int x, int y)", " static boolean quickContains(Region thisRegion, int left, int top, int right, int bottom)", " static boolean quickReject(Region thisRegion, int left, int top, int right, int bottom)", " static boolean quickReject(Region thisRegion, Region rgn)", " static void translate(Region thisRegion, int dx, int dy, Region dst)", " static void scale(Region thisRegion, float scale, Region dst)", " static long nativeConstructor()", " static void nativeDestructor(long native_region)", " static void nativeSetRegion(long native_dst, long native_src)", " static boolean nativeSetRect(long native_dst, int left, int top, int right, int bottom)", " static boolean nativeSetPath(long native_dst, long native_path, long native_clip)", " static boolean nativeGetBounds(long native_region, Rect rect)", " static boolean nativeGetBoundaryPath(long native_region, long native_path)", " static boolean nativeOp(long native_dst, int left, int top, int right, int bottom, int op)", " static boolean nativeOp(long native_dst, Rect rect, long native_region, int op)", " static boolean nativeOp(long native_dst, long native_region1, long native_region2, int op)", " static long nativeCreateFromParcel(Parcel p)", " static boolean nativeWriteToParcel(long native_region, Parcel p)", " static boolean nativeEquals(long native_r1, long native_r2)", " static String nativeToString(long native_region)" ]
}