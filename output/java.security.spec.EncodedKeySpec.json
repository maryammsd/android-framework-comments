{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/spec/EncodedKeySpec.java",
  "packageName" : "java.security.spec",
  "className" : "EncodedKeySpec",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "encodedKey",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "algorithmName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getAlgorithm()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the algorithm of the encoded key.\n     *\n     * @return the name of the algorithm, or null if not specified\n     * @since 9\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getEncoded()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the encoded key.\n     *\n     * @return the encoded key. Returns a new array each time\n     * this method is called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String getFormat()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the encoding format associated with this\n     * key specification.\n     *\n     * <p>If the opaque representation of a key\n     * (see {@link java.security.Key Key}) can be transformed\n     * (see {@link java.security.KeyFactory KeyFactory})\n     * into this key specification (or a subclass of it),\n     * {@code getFormat} called\n     * on the opaque key returns the same value as the\n     * {@code getFormat} method\n     * of this key specification.\n     *\n     * @return a string representation of the encoding format.\n     ",
    "links" : [ "java.security.Key", "java.security.KeyFactory" ]
  }, {
    "name" : " void clear()",
    "returnType" : "void",
    "comment" : "\n     * Clear the encoding inside.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getAlgorithm()", "public byte[] getEncoded()", "public abstract String getFormat()", " void clear()" ],
  "variableNames" : [ "encodedKey", "algorithmName" ]
}