{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/inputmethodservice/KeyboardView.java",
  "packageName" : "android.inputmethodservice",
  "className" : "OnKeyboardActionListener",
  "comment" : "\n     * Listener for virtual keyboard events.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onPress(int primaryCode)",
    "returnType" : "void",
    "comment" : "\n         * Called when the user presses a key. This is sent before the {@link #onKey} is called.\n         * For keys that repeat, this is only called once.\n         * @param primaryCode the unicode of the key being pressed. If the touch is not on a valid\n         * key, the value will be zero.\n         ",
    "links" : [ "#onKey" ]
  }, {
    "name" : " void onRelease(int primaryCode)",
    "returnType" : "void",
    "comment" : "\n         * Called when the user releases a key. This is sent after the {@link #onKey} is called.\n         * For keys that repeat, this is only called once.\n         * @param primaryCode the code of the key that was released\n         ",
    "links" : [ "#onKey" ]
  }, {
    "name" : " void onKey(int primaryCode, int[] keyCodes)",
    "returnType" : "void",
    "comment" : "\n         * Send a key press to the listener.\n         * @param primaryCode this is the key that was pressed\n         * @param keyCodes the codes for all the possible alternative keys\n         * with the primary code being the first. If the primary key code is\n         * a single character such as an alphabet or number or symbol, the alternatives\n         * will include other characters that may be on the same key or adjacent keys.\n         * These codes are useful to correct for accidental presses of a key adjacent to\n         * the intended key.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onText(CharSequence text)",
    "returnType" : "void",
    "comment" : "\n         * Sends a sequence of characters to the listener.\n         * @param text the sequence of characters to be displayed.\n         ",
    "links" : [ ]
  }, {
    "name" : " void swipeLeft()",
    "returnType" : "void",
    "comment" : "\n         * Called when the user quickly moves the finger from right to left.\n         ",
    "links" : [ ]
  }, {
    "name" : " void swipeRight()",
    "returnType" : "void",
    "comment" : "\n         * Called when the user quickly moves the finger from left to right.\n         ",
    "links" : [ ]
  }, {
    "name" : " void swipeDown()",
    "returnType" : "void",
    "comment" : "\n         * Called when the user quickly moves the finger from up to down.\n         ",
    "links" : [ ]
  }, {
    "name" : " void swipeUp()",
    "returnType" : "void",
    "comment" : "\n         * Called when the user quickly moves the finger from down to up.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onPress(int primaryCode)", " void onRelease(int primaryCode)", " void onKey(int primaryCode, int[] keyCodes)", " void onText(CharSequence text)", " void swipeLeft()", " void swipeRight()", " void swipeDown()", " void swipeUp()" ],
  "variableNames" : [ ]
}