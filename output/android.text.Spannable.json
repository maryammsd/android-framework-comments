{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/Spannable.java",
  "packageName" : "android.text",
  "className" : "Spannable",
  "comment" : "\n * This is the interface for text to which markup objects can be\n * attached and detached.  Not all Spannable classes have mutable text;\n * see {@link Editable} for that.\n ",
  "links" : [ "android.text.Editable" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void setSpan(Object what, int start, int end, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Attach the specified markup object to the range <code>start&hellip;end</code>\n     * of the text, or move the object to that range if it was already\n     * attached elsewhere.  See {@link Spanned} for an explanation of\n     * what the flags mean.  The object can be one that has meaning only\n     * within your application, or it can be one that the text system will\n     * use to affect text display or behavior.  Some noteworthy ones are\n     * the subclasses of {@link android.text.style.CharacterStyle} and\n     * {@link android.text.style.ParagraphStyle}, and\n     * {@link android.text.TextWatcher} and\n     * {@link android.text.SpanWatcher}.\n     ",
    "links" : [ "android.text.Spanned", "android.text.style.ParagraphStyle", "android.text.SpanWatcher", "android.text.style.CharacterStyle", "android.text.TextWatcher" ]
  }, {
    "name" : "public void removeSpan(Object what)",
    "returnType" : "void",
    "comment" : "\n     * Remove the specified object from the range of text to which it\n     * was attached, if any.  It is OK to remove an object that was never\n     * attached in the first place.\n     ",
    "links" : [ ]
  }, {
    "name" : " void removeSpan(Object what, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Remove the specified object from the range of text to which it\n     * was attached, if any.  It is OK to remove an object that was never\n     * attached in the first place.\n     *\n     * See {@link Spanned} for an explanation of what the flags mean.\n     *\n     * @hide\n     ",
    "links" : [ "android.text.Spanned" ]
  } ],
  "methodNames" : [ "public void setSpan(Object what, int start, int end, int flags)", "public void removeSpan(Object what)", " void removeSpan(Object what, int flags)" ],
  "variableNames" : [ ]
}