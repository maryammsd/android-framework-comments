{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssAntennaInfo.java",
  "packageName" : "android.location",
  "className" : "SphericalCorrections",
  "comment" : "\n     * Represents corrections on a spherical mapping. Corrections are added to measurements to\n     * obtain the corrected values.\n     *\n     * The corrections and associated (1-sigma) uncertainties are represented by respect 2D arrays.\n     *\n     * Each row (major indices) represents a fixed theta. The first row corresponds to a\n     * theta angle of 0 degrees. The last row corresponds to a theta angle of (360 - deltaTheta)\n     * degrees, where deltaTheta is the regular spacing between azimuthal angles, i.e., deltaTheta\n     * = 360 / (number of rows).\n     *\n     * The columns (minor indices) represent fixed zenith angles, beginning at 0 degrees and ending\n     * at 180 degrees. They are separated by deltaPhi, the regular spacing between zenith angles,\n     * i.e., deltaPhi = 180 / (number of columns - 1).\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mNumRows",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumColumns",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCorrections",
    "type" : "double[][]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCorrectionUncertainties",
    "type" : "double[][]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SphericalCorrections>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public double[][] getCorrectionsArray()",
    "returnType" : "double[][]",
    "comment" : "\n         * Array representing corrections on a spherical mapping. Corrections are added to\n         * measurements to obtain the corrected values.\n         *\n         * Each row (major indices) represents a fixed theta. The first row corresponds to a\n         * theta angle of 0 degrees. The last row corresponds to a theta angle of (360 - deltaTheta)\n         * degrees, where deltaTheta is the regular spacing between azimuthal angles, i.e.,\n         * deltaTheta = 360 / (number of rows).\n         *\n         * The columns (minor indices) represent fixed zenith angles, beginning at 0 degrees and\n         * ending at 180 degrees. They are separated by deltaPhi, the regular spacing between zenith\n         * angles, i.e., deltaPhi = 180 / (number of columns - 1).\n         ",
    "links" : [ ]
  }, {
    "name" : "public double[][] getCorrectionUncertaintiesArray()",
    "returnType" : "double[][]",
    "comment" : "\n         * Array representing uncertainty on corrections on a spherical mapping.\n         *\n         * Each row (major indices) represents a fixed theta. The first row corresponds to a\n         * theta angle of 0 degrees. The last row corresponds to a theta angle of (360 - deltaTheta)\n         * degrees, where deltaTheta is the regular spacing between azimuthal angles, i.e.,\n         * deltaTheta = 360 / (number of rows).\n         *\n         * The columns (minor indices) represent fixed zenith angles, beginning at 0 degrees and\n         * ending at 180 degrees. They are separated by deltaPhi, the regular spacing between zenith\n         * angles, i.e., deltaPhi = 180 / (number of columns - 1).\n         ",
    "links" : [ ]
  }, {
    "name" : "public double getDeltaTheta()",
    "returnType" : "double",
    "comment" : "\n         * The fixed theta angle separation between successive rows.\n         ",
    "links" : [ ]
  }, {
    "name" : "public double getDeltaPhi()",
    "returnType" : "double",
    "comment" : "\n         * The fixed phi angle separation between successive columns.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public double[][] getCorrectionsArray()", "public double[][] getCorrectionUncertaintiesArray()", "public double getDeltaTheta()", "public double getDeltaPhi()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public boolean equals(Object o)", "public int hashCode()" ],
  "variableNames" : [ "mNumRows", "mNumColumns", "mCorrections", "mCorrectionUncertainties", "CREATOR" ]
}