{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/WindowInsetsAnimation.java",
  "packageName" : "android.view",
  "className" : "Bounds",
  "comment" : "\n     * Class representing the range of an {@link WindowInsetsAnimation}\n     ",
  "links" : [ "android.view.WindowInsetsAnimation" ],
  "variables" : [ {
    "name" : "mLowerBound",
    "type" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUpperBound",
    "type" : "Insets",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Insets getLowerBound()",
    "returnType" : "Insets",
    "comment" : "\n         * Queries the lower inset bound of the animation. If the animation is about showing or\n         * hiding a window that cause insets, the lower bound is {@link Insets#NONE} and the upper\n         * bound is the same as {@link WindowInsets#getInsets(int)} for the fully shown state. This\n         * is the same as {@link WindowInsetsAnimationController#getHiddenStateInsets} and\n         * {@link WindowInsetsAnimationController#getShownStateInsets} in case the listener gets\n         * invoked because of an animation that originates from\n         * {@link WindowInsetsAnimationController}.\n         * <p>\n         * However, if the size of a window that causes insets is changing, these are the\n         * lower/upper bounds of that size animation.\n         * </p>\n         * There are no overlapping animations for a specific type, but there may be multiple\n         * animations running at the same time for different inset types.\n         *\n         * @see #getUpperBound()\n         * @see WindowInsetsAnimationController#getHiddenStateInsets\n         ",
    "links" : [ "android.view.WindowInsetsAnimationController#getShownStateInsets", "android.view.WindowInsets#getInsets(int)", "android.graphics.Insets#NONE", "android.view.WindowInsetsAnimationController#getHiddenStateInsets", "android.view.WindowInsetsAnimationController" ]
  }, {
    "name" : "public Insets getUpperBound()",
    "returnType" : "Insets",
    "comment" : "\n         * Queries the upper inset bound of the animation. If the animation is about showing or\n         * hiding a window that cause insets, the lower bound is {@link Insets#NONE}\n         * nd the upper bound is the same as {@link WindowInsets#getInsets(int)} for the fully\n         * shown state. This is the same as\n         * {@link WindowInsetsAnimationController#getHiddenStateInsets} and\n         * {@link WindowInsetsAnimationController#getShownStateInsets} in case the listener gets\n         * invoked because of an animation that originates from\n         * {@link WindowInsetsAnimationController}.\n         * <p>\n         * However, if the size of a window that causes insets is changing, these are the\n         * lower/upper bounds of that size animation.\n         * <p>\n         * There are no overlapping animations for a specific type, but there may be multiple\n         * animations running at the same time for different inset types.\n         *\n         * @see #getLowerBound()\n         * @see WindowInsetsAnimationController#getShownStateInsets\n         ",
    "links" : [ "android.view.WindowInsetsAnimationController#getShownStateInsets", "android.view.WindowInsets#getInsets(int)", "android.graphics.Insets#NONE", "android.view.WindowInsetsAnimationController#getHiddenStateInsets", "android.view.WindowInsetsAnimationController" ]
  }, {
    "name" : "public Bounds inset(@NonNull Insets insets)",
    "returnType" : "Bounds",
    "comment" : "\n         * Insets both the lower and upper bound by the specified insets. This is to be used in\n         * {@link Callback#onStart} to indicate that a part of the insets has\n         * been used to offset or clip its children, and the children shouldn't worry about that\n         * part anymore.\n         *\n         * @param insets The amount to inset.\n         * @return A copy of this instance inset in the given directions.\n         * @see WindowInsets#inset\n         * @see Callback#onStart\n         ",
    "links" : [ "#onStart" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Insets getLowerBound()", "public Insets getUpperBound()", "public Bounds inset(@NonNull Insets insets)", "public String toString()" ],
  "variableNames" : [ "mLowerBound", "mUpperBound" ]
}