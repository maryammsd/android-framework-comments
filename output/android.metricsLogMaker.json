{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/metrics/LogMaker.java",
  "packageName" : "android.metrics",
  "className" : "LogMaker",
  "comment" : "\n * Helper class to assemble more complex logs.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_SERIALIZED_SIZE",
    "type" : "int",
    "comment" : "\n     * Min required eventlog line length.\n     * See: android/util/cts/EventLogTest.java\n     * Size checks enforced here are intended only as sanity checks;\n     * your logs may be truncated earlier. Please log responsibly.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "entries",
    "type" : "SparseArray<Object>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public LogMaker setCategory(int category)",
    "returnType" : "LogMaker",
    "comment" : " @param category to replace the existing setting. ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker clearCategory()",
    "returnType" : "LogMaker",
    "comment" : " Set the category to unknown. ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setType(int type)",
    "returnType" : "LogMaker",
    "comment" : " @param type to replace the existing setting. ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker clearType()",
    "returnType" : "LogMaker",
    "comment" : " Set the type to unknown. ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setSubtype(int subtype)",
    "returnType" : "LogMaker",
    "comment" : " @param subtype to replace the existing setting. ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker clearSubtype()",
    "returnType" : "LogMaker",
    "comment" : " Set the subtype to 0. ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setLatency(long milliseconds)",
    "returnType" : "LogMaker",
    "comment" : "\n     * Set event latency.\n     *\n     * @hide // TODO Expose in the future?  Too late for O.\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setTimestamp(long timestamp)",
    "returnType" : "LogMaker",
    "comment" : "\n     * This will be set by the system when the log is persisted.\n     * Client-supplied values will be ignored.\n     *\n     * @param timestamp to replace the existing settings.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker clearTimestamp()",
    "returnType" : "LogMaker",
    "comment" : " Remove the timestamp property.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setPackageName(String packageName)",
    "returnType" : "LogMaker",
    "comment" : " @param packageName to replace the existing setting. ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setComponentName(ComponentName component)",
    "returnType" : "LogMaker",
    "comment" : "\n     * @param component to replace the existing setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker clearPackageName()",
    "returnType" : "LogMaker",
    "comment" : " Remove the package name property. ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setProcessId(int pid)",
    "returnType" : "LogMaker",
    "comment" : "\n     * This will be set by the system when the log is persisted.\n     * Client-supplied values will be ignored.\n     *\n     * @param pid to replace the existing setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker clearProcessId()",
    "returnType" : "LogMaker",
    "comment" : " Remove the process ID property.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setUid(int uid)",
    "returnType" : "LogMaker",
    "comment" : "\n     * This will be set by the system when the log is persisted.\n     * Client-supplied values will be ignored.\n     *\n     * @param uid to replace the existing setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker clearUid()",
    "returnType" : "LogMaker",
    "comment" : "\n     * Remove the UID property.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setCounterName(String name)",
    "returnType" : "LogMaker",
    "comment" : "\n     * The name of the counter or histogram.\n     * Only useful for counter or histogram category objects.\n     * @param name to replace the existing setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setCounterBucket(int bucket)",
    "returnType" : "LogMaker",
    "comment" : "\n     * The bucket label, expressed as an integer.\n     * Only useful for histogram category objects.\n     * @param bucket to replace the existing setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setCounterBucket(long bucket)",
    "returnType" : "LogMaker",
    "comment" : "\n     * The bucket label, expressed as a long integer.\n     * Only useful for histogram category objects.\n     * @param bucket to replace the existing setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker setCounterValue(int value)",
    "returnType" : "LogMaker",
    "comment" : "\n     * The value to increment the counter or bucket by.\n     * Only useful for counter and histogram category objects.\n     * @param value to replace the existing setting.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker addTaggedData(int tag, Object value)",
    "returnType" : "LogMaker",
    "comment" : "\n     * @param tag From your MetricsEvent enum.\n     * @param value One of Integer, Long, Float, or String; or null to clear the tag.\n     * @return modified LogMaker\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker clearTaggedData(int tag)",
    "returnType" : "LogMaker",
    "comment" : "\n     * Remove a value from the LogMaker.\n     *\n     * @param tag From your MetricsEvent enum.\n     * @return modified LogMaker\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isValidValue(Object value)",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if this object may be added to a LogMaker as a value.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object getTaggedData(int tag)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCategory()",
    "returnType" : "int",
    "comment" : " @return the category of the log, or unknown. ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : " @return the type of the log, or unknwon. ",
    "links" : [ ]
  }, {
    "name" : "public int getSubtype()",
    "returnType" : "int",
    "comment" : " @return the subtype of the log, or 0. ",
    "links" : [ ]
  }, {
    "name" : "public long getTimestamp()",
    "returnType" : "long",
    "comment" : " @return the timestamp of the log.or 0 ",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : " @return the package name of the log, or null. ",
    "links" : [ ]
  }, {
    "name" : "public int getProcessId()",
    "returnType" : "int",
    "comment" : " @return the process ID of the log, or -1. ",
    "links" : [ ]
  }, {
    "name" : "public int getUid()",
    "returnType" : "int",
    "comment" : " @return the UID of the log, or -1. ",
    "links" : [ ]
  }, {
    "name" : "public String getCounterName()",
    "returnType" : "String",
    "comment" : " @return the name of the counter, or null. ",
    "links" : [ ]
  }, {
    "name" : "public long getCounterBucket()",
    "returnType" : "long",
    "comment" : " @return the bucket label of the histogram\\, or 0. ",
    "links" : [ ]
  }, {
    "name" : "public boolean isLongCounterBucket()",
    "returnType" : "boolean",
    "comment" : " @return true if the bucket label was specified as a long integer. ",
    "links" : [ ]
  }, {
    "name" : "public int getCounterValue()",
    "returnType" : "int",
    "comment" : " @return the increment value of the counter, or 0. ",
    "links" : [ ]
  }, {
    "name" : "public Object[] serialize()",
    "returnType" : "Object[]",
    "comment" : "\n     * @return a representation of the log suitable for EventLog.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void deserialize(Object[] items)",
    "returnType" : "void",
    "comment" : "\n     * Reconstitute an object from the output of {@link #serialize()}.\n     ",
    "links" : [ "#serialize" ]
  }, {
    "name" : "public boolean isSubsetOf(LogMaker that)",
    "returnType" : "boolean",
    "comment" : "\n     * @param that the object to compare to.\n     * @return true if values in that equal values in this, for tags that exist in this.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SparseArray<Object> getEntries()",
    "returnType" : "SparseArray<Object>",
    "comment" : "\n     * @return entries containing key value pairs.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "MAX_SERIALIZED_SIZE", "entries" ],
  "methodNames" : [ "public LogMaker setCategory(int category)", "public LogMaker clearCategory()", "public LogMaker setType(int type)", "public LogMaker clearType()", "public LogMaker setSubtype(int subtype)", "public LogMaker clearSubtype()", "public LogMaker setLatency(long milliseconds)", "public LogMaker setTimestamp(long timestamp)", "public LogMaker clearTimestamp()", "public LogMaker setPackageName(String packageName)", "public LogMaker setComponentName(ComponentName component)", "public LogMaker clearPackageName()", "public LogMaker setProcessId(int pid)", "public LogMaker clearProcessId()", "public LogMaker setUid(int uid)", "public LogMaker clearUid()", "public LogMaker setCounterName(String name)", "public LogMaker setCounterBucket(int bucket)", "public LogMaker setCounterBucket(long bucket)", "public LogMaker setCounterValue(int value)", "public LogMaker addTaggedData(int tag, Object value)", "public LogMaker clearTaggedData(int tag)", "public boolean isValidValue(Object value)", "public Object getTaggedData(int tag)", "public int getCategory()", "public int getType()", "public int getSubtype()", "public long getTimestamp()", "public String getPackageName()", "public int getProcessId()", "public int getUid()", "public String getCounterName()", "public long getCounterBucket()", "public boolean isLongCounterBucket()", "public int getCounterValue()", "public Object[] serialize()", "public void deserialize(Object[] items)", "public boolean isSubsetOf(LogMaker that)", "public SparseArray<Object> getEntries()" ]
}