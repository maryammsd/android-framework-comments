{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/audiopolicy/AudioMix.java",
  "packageName" : "android.media.audiopolicy",
  "className" : "Builder",
  "comment" : "\n     * Builder class for {@link AudioMix} objects\n     ",
  "variables" : [ {
    "name" : "mRule",
    "type" : "AudioMixingRule",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFormat",
    "type" : "AudioFormat",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRouteFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallbackFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceSystemType",
    "type" : "int",
    "comment" : " an AudioSystem.DEVICE_* value, not AudioDeviceInfo.TYPE_*",
    "links" : [ ]
  }, {
    "name" : "mDeviceAddress",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " Builder setMixingRule(AudioMixingRule rule) throws IllegalArgumentException",
    "returnType" : "Builder",
    "comment" : "\n         * @hide\n         * Only used by AudioPolicyConfig, not a public API.\n         * @param rule\n         * @return the same Builder instance.\n         * @throws IllegalArgumentException\n         ",
    "links" : [ ]
  }, {
    "name" : " Builder setCallbackFlags(int flags) throws IllegalArgumentException",
    "returnType" : "Builder",
    "comment" : "\n         * @hide\n         * Only used by AudioPolicyConfig, not a public API.\n         * @param callbackFlags which callbacks are called from native\n         * @return the same Builder instance.\n         * @throws IllegalArgumentException\n         ",
    "links" : [ ]
  }, {
    "name" : " Builder setDevice(int deviceType, String address)",
    "returnType" : "Builder",
    "comment" : "\n         * @hide\n         * Only used by AudioPolicyConfig, not a public API.\n         * @param deviceType an AudioSystem.DEVICE_* value, not AudioDeviceInfo.TYPE_*\n         * @param address\n         * @return the same Builder instance.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setFormat(AudioFormat format) throws IllegalArgumentException",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the {@link AudioFormat} for the mix.\n         * @param format a non-null {@link AudioFormat} instance.\n         * @return the same Builder instance.\n         * @throws IllegalArgumentException\n         ",
    "links" : [ "AudioFormat", "AudioFormat" ]
  }, {
    "name" : "public Builder setRouteFlags(@RouteFlags int routeFlags) throws IllegalArgumentException",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the routing behavior for the mix. If not set, routing behavior will default to\n         * {@link AudioMix#ROUTE_FLAG_LOOP_BACK}.\n         * @param routeFlags one of {@link AudioMix#ROUTE_FLAG_LOOP_BACK},\n         *     {@link AudioMix#ROUTE_FLAG_RENDER}\n         * @return the same Builder instance.\n         * @throws IllegalArgumentException\n         ",
    "links" : [ "AudioMix#ROUTE_FLAG_LOOP_BACK", "AudioMix#ROUTE_FLAG_LOOP_BACK", "AudioMix#ROUTE_FLAG_RENDER" ]
  }, {
    "name" : "public Builder setDevice(@NonNull AudioDeviceInfo device) throws IllegalArgumentException",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the audio device used for playback. Cannot be used in the context of an audio\n         * policy used to inject audio to be recorded, or in a mix whose route flags doesn't\n         * specify {@link AudioMix#ROUTE_FLAG_RENDER}.\n         * @param device a non-null AudioDeviceInfo describing the audio device to play the output\n         *     of this mix.\n         * @return the same Builder instance\n         * @throws IllegalArgumentException\n         ",
    "links" : [ "AudioMix#ROUTE_FLAG_RENDER" ]
  }, {
    "name" : "public AudioMix build() throws IllegalArgumentException",
    "returnType" : "AudioMix",
    "comment" : "\n         * Combines all of the settings and return a new {@link AudioMix} object.\n         * @return a new {@link AudioMix} object\n         * @throws IllegalArgumentException if no {@link AudioMixingRule} has been set.\n         ",
    "links" : [ "AudioMix", "AudioMix", "AudioMixingRule" ]
  } ],
  "variableNames" : [ "mRule", "mFormat", "mRouteFlags", "mCallbackFlags", "mDeviceSystemType", "mDeviceAddress" ],
  "methodNames" : [ " Builder setMixingRule(AudioMixingRule rule) throws IllegalArgumentException", " Builder setCallbackFlags(int flags) throws IllegalArgumentException", " Builder setDevice(int deviceType, String address)", "public Builder setFormat(AudioFormat format) throws IllegalArgumentException", "public Builder setRouteFlags(@RouteFlags int routeFlags) throws IllegalArgumentException", "public Builder setDevice(@NonNull AudioDeviceInfo device) throws IllegalArgumentException", "public AudioMix build() throws IllegalArgumentException" ]
}