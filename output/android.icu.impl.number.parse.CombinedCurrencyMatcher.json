{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/number/parse/CombinedCurrencyMatcher.java",
  "packageName" : "android.icu.impl.number.parse",
  "className" : "CombinedCurrencyMatcher",
  "comment" : "\n * Matches a currency, either a custom currency or one from the data bundle. The class is called\n * \"combined\" to emphasize that the currency string may come from one of multiple sources.\n *\n * Will match currency spacing either before or after the number depending on whether we are currently in\n * the prefix or suffix.\n *\n * The implementation of this class is slightly different between J and C. See #13584 for a follow-up.\n *\n * @author sffc\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "isoCode",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "currency1",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "currency2",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "localLongNames",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "afterPrefixInsert",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "beforeSuffixInsert",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "longNameTrie",
    "type" : "TextTrieMap<CurrencyStringInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "symbolTrie",
    "type" : "TextTrieMap<CurrencyStringInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static CombinedCurrencyMatcher getInstance(Currency currency, DecimalFormatSymbols dfs, int parseFlags)",
    "returnType" : "CombinedCurrencyMatcher",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean match(StringSegment segment, ParsedNumber result)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean matchCurrency(StringSegment segment, ParsedNumber result)",
    "returnType" : "boolean",
    "comment" : " Matches the currency string without concern for currency spacing. ",
    "links" : [ ]
  }, {
    "name" : "public boolean smokeTest(StringSegment segment)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void postProcess(ParsedNumber result)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static CombinedCurrencyMatcher getInstance(Currency currency, DecimalFormatSymbols dfs, int parseFlags)", "public boolean match(StringSegment segment, ParsedNumber result)", "private boolean matchCurrency(StringSegment segment, ParsedNumber result)", "public boolean smokeTest(StringSegment segment)", "public void postProcess(ParsedNumber result)", "public String toString()" ],
  "variableNames" : [ "isoCode", "currency1", "currency2", "localLongNames", "afterPrefixInsert", "beforeSuffixInsert", "longNameTrie", "symbolTrie" ]
}