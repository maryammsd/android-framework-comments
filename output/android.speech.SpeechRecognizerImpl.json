{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/speech/SpeechRecognizerImpl.java",
  "packageName" : "android.speech",
  "className" : "SpeechRecognizerImpl",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : " DEBUG value to enable verbose debug prints ",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : " Log messages identifier ",
    "links" : [ ]
  }, {
    "name" : "MSG_START",
    "type" : "int",
    "comment" : " action codes ",
    "links" : [ ]
  }, {
    "name" : "MSG_STOP",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_CANCEL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_CHANGE_LISTENER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_SET_TEMPORARY_ON_DEVICE_COMPONENT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_CHECK_RECOGNITION_SUPPORT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_TRIGGER_MODEL_DOWNLOAD",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_DESTROY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IRecognitionService",
    "comment" : " The actual RecognitionService endpoint ",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : " Context with which the manager was created ",
    "links" : [ ]
  }, {
    "name" : "mServiceComponent",
    "type" : "ComponentName",
    "comment" : " Component to direct service intent to ",
    "links" : [ ]
  }, {
    "name" : "mOnDevice",
    "type" : "boolean",
    "comment" : " Whether to use on-device speech recognizer. ",
    "links" : [ ]
  }, {
    "name" : "mManagerService",
    "type" : "IRecognitionServiceManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : " Handler that will execute the main tasks ",
    "links" : [ ]
  }, {
    "name" : "mPendingTasks",
    "type" : "Queue<Message>",
    "comment" : "\n     * Temporary queue, saving the messages until the connection will be established, afterwards,\n     * only mHandler will receive the messages\n     ",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "InternalRecognitionListener",
    "comment" : " The Listener that will receive all the callbacks ",
    "links" : [ ]
  }, {
    "name" : "mClientToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static SpeechRecognizerImpl lenientlyCreateOnDeviceSpeechRecognizer(@NonNull final Context context)",
    "returnType" : "SpeechRecognizerImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRecognitionListener(RecognitionListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startListening(final Intent recognizerIntent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopListening()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancel()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkRecognitionSupport(@NonNull Intent recognizerIntent, @NonNull @CallbackExecutor Executor executor, @NonNull RecognitionSupportCallback supportListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void triggerModelDownload(@NonNull Intent recognizerIntent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void triggerModelDownload(@NonNull Intent recognizerIntent, @NonNull @CallbackExecutor Executor executor, @NonNull ModelDownloadListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTemporaryOnDeviceRecognizer(@Nullable ComponentName componentName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void checkIsCalledFromMainThread()",
    "returnType" : "void",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : "private void putMessage(Message msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleStartListening(Intent recognizerIntent)",
    "returnType" : "void",
    "comment" : " sends the actual message to the service ",
    "links" : [ ]
  }, {
    "name" : "private void handleStopMessage()",
    "returnType" : "void",
    "comment" : " sends the actual message to the service ",
    "links" : [ ]
  }, {
    "name" : "private void handleCancelMessage()",
    "returnType" : "void",
    "comment" : " sends the actual message to the service ",
    "links" : [ ]
  }, {
    "name" : "private void handleSetTemporaryComponent(ComponentName componentName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleCheckRecognitionSupport(Intent recognizerIntent, Executor callbackExecutor, RecognitionSupportCallback recognitionSupportCallback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleTriggerModelDownload(Intent recognizerIntent, @Nullable Executor callbackExecutor, @Nullable ModelDownloadListener modelDownloadListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean checkOpenConnection()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleChangeListener(RecognitionListener listener)",
    "returnType" : "void",
    "comment" : " changes the listener ",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleDestroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void connectToSystemService()",
    "returnType" : "void",
    "comment" : " Establishes a connection to system server proxy and initializes the session. ",
    "links" : [ ]
  }, {
    "name" : "private synchronized boolean maybeInitializeManagerService()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ComponentName getSpeechRecognizerComponentName()",
    "returnType" : "ComponentName",
    "comment" : "\n     * Returns the component name to be used for establishing a connection, based on the parameters\n     * used during initialization.\n     *\n     * <p>Note the 3 different scenarios:\n     * <ol>\n     *     <li>On-device speech recognizer which is determined by the manufacturer and not\n     *     changeable by the user\n     *     <li>Default user-selected speech recognizer as specified by\n     *     {@code Settings.Secure.VOICE_RECOGNITION_SERVICE}\n     *     <li>Custom speech recognizer supplied by the client.\n     * </ol>\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static SpeechRecognizerImpl lenientlyCreateOnDeviceSpeechRecognizer(@NonNull final Context context)", "public void setRecognitionListener(RecognitionListener listener)", "public void startListening(final Intent recognizerIntent)", "public void stopListening()", "public void cancel()", "public void checkRecognitionSupport(@NonNull Intent recognizerIntent, @NonNull @CallbackExecutor Executor executor, @NonNull RecognitionSupportCallback supportListener)", "public void triggerModelDownload(@NonNull Intent recognizerIntent)", "public void triggerModelDownload(@NonNull Intent recognizerIntent, @NonNull @CallbackExecutor Executor executor, @NonNull ModelDownloadListener listener)", "public void setTemporaryOnDeviceRecognizer(@Nullable ComponentName componentName)", " static void checkIsCalledFromMainThread()", "private void putMessage(Message msg)", "private void handleStartListening(Intent recognizerIntent)", "private void handleStopMessage()", "private void handleCancelMessage()", "private void handleSetTemporaryComponent(ComponentName componentName)", "private void handleCheckRecognitionSupport(Intent recognizerIntent, Executor callbackExecutor, RecognitionSupportCallback recognitionSupportCallback)", "private void handleTriggerModelDownload(Intent recognizerIntent, @Nullable Executor callbackExecutor, @Nullable ModelDownloadListener modelDownloadListener)", "private boolean checkOpenConnection()", "private void handleChangeListener(RecognitionListener listener)", "public void destroy()", "private void handleDestroy()", "private void connectToSystemService()", "private synchronized boolean maybeInitializeManagerService()", "private ComponentName getSpeechRecognizerComponentName()" ],
  "variableNames" : [ "DBG", "TAG", "MSG_START", "MSG_STOP", "MSG_CANCEL", "MSG_CHANGE_LISTENER", "MSG_SET_TEMPORARY_ON_DEVICE_COMPONENT", "MSG_CHECK_RECOGNITION_SUPPORT", "MSG_TRIGGER_MODEL_DOWNLOAD", "MSG_DESTROY", "mService", "mContext", "mServiceComponent", "mOnDevice", "mManagerService", "mHandler", "mPendingTasks", "mListener", "mClientToken" ]
}