{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/transform/dom/DOMResult.java",
  "packageName" : "javax.xml.transform.dom",
  "className" : "DOMResult",
  "comment" : "\n * <p>Acts as a holder for a transformation result tree in the form of a Document Object Model (DOM) tree.</p>\n *\n * <p>If no output DOM source is set, the transformation will create a Document node as the holder for the result of the transformation,\n * which may be retrieved with {@link #getNode()}.</p>\n *\n * @author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>\n * @version $Revision: 569995 $, $Date: 2007-08-26 21:31:06 -0700 (Sun, 26 Aug 2007) $\n ",
  "links" : [ "#getNode()" ],
  "variables" : [ {
    "name" : "FEATURE",
    "type" : "String",
    "comment" : " <p>If {@link javax.xml.transform.TransformerFactory#getFeature}\n     * returns <code>true</code> when passed this value as an argument,\n     * the <code>Transformer</code> supports <code>Result</code> output of this type.</p>\n     ",
    "links" : [ "javax.xml.transform.TransformerFactory#getFeature" ]
  }, {
    "name" : "node",
    "type" : "Node",
    "comment" : "\n     * <p>The node to which the transformation will be appended.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "nextSibling",
    "type" : "Node",
    "comment" : "\n     * <p>The child node before which the result nodes will be inserted.</p>\n     *\n     * @since 1.5\n     ",
    "links" : [ ]
  }, {
    "name" : "systemId",
    "type" : "String",
    "comment" : "\n     * <p>The System ID that may be used in association with the node.</p>\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setNode(Node node)",
    "returnType" : "void",
    "comment" : "\n     * <p>Set the node that will contain the result DOM tree.<p>\n     *\n     * <p>In practice, the node should be\n     * a {@link org.w3c.dom.Document} node,\n     * a {@link org.w3c.dom.DocumentFragment} node, or\n     * a {@link org.w3c.dom.Element} node.\n     * In other words, a node that accepts children.</p>\n     *\n     * <p>An <code>IllegalStateException</code> is thrown if <code>nextSibling</code> is not <code>null</code> and\n     * <code>node</code> is not a parent of <code>nextSibling</code>.\n     * An <code>IllegalStateException</code> is thrown if <code>node</code> is <code>null</code> and\n     * <code>nextSibling</code> is not <code>null</code>.</p>\n     *\n     * @param node The node to which the transformation will be appended.\n     *\n     * @throws IllegalStateException If <code>nextSibling</code> is not <code>null</code> and\n     *   <code>nextSibling</code> is not a child of <code>node</code>.\n     * @throws IllegalStateException If <code>node</code> is <code>null</code> and\n     *   <code>nextSibling</code> is not <code>null</code>.\n     ",
    "links" : [ "org.w3c.dom.DocumentFragment", "org.w3c.dom.Element", "org.w3c.dom.Document" ]
  }, {
    "name" : "public Node getNode()",
    "returnType" : "Node",
    "comment" : "\n     * <p>Get the node that will contain the result DOM tree.</p>\n     *\n     * <p>If no node was set via\n     * {@link #DOMResult(Node node)},\n     * {@link #DOMResult(Node node, String systeId)},\n     * {@link #DOMResult(Node node, Node nextSibling)},\n     * {@link #DOMResult(Node node, Node nextSibling, String systemId)} or\n     * {@link #setNode(Node node)},\n     * then the node will be set by the transformation, and may be obtained from this method once the transformation is complete.\n     * Calling this method before the transformation will return <code>null</code>.</p>\n     *\n     * @return The node to which the transformation will be appended.\n     ",
    "links" : [ "#DOMResult(Node", "#setNode(Node" ]
  }, {
    "name" : "public void setNextSibling(Node nextSibling)",
    "returnType" : "void",
    "comment" : "\n     * <p>Set the child node before which the result nodes will be inserted.</p>\n     *\n     * <p>Use <code>nextSibling</code> to specify the child node\n     * before which the result nodes should be inserted.\n     * If <code>nextSibling</code> is not a descendant of <code>node</code>,\n     * then an <code>IllegalArgumentException</code> is thrown.\n     * If <code>node</code> is <code>null</code> and <code>nextSibling</code> is not <code>null</code>,\n     * then an <code>IllegalStateException</code> is thrown.\n     * If <code>nextSibling</code> is <code>null</code>,\n     * then the behavior is the same as calling {@link #DOMResult(Node node)},\n     * i.e. append the result nodes as the last child of the specified <code>node</code>.</p>\n     *\n     * @param nextSibling The child node before which the result nodes will be inserted.\n     *\n     * @throws IllegalArgumentException If <code>nextSibling</code> is not a descendant of <code>node</code>.\n     * @throws IllegalStateException If <code>node</code> is <code>null</code> and <code>nextSibling</code> is not <code>null</code>.\n     *\n     * @since 1.5\n     ",
    "links" : [ "#DOMResult(Node" ]
  }, {
    "name" : "public Node getNextSibling()",
    "returnType" : "Node",
    "comment" : "\n     * <p>Get the child node before which the result nodes will be inserted.</p>\n     *\n     * <p>If no node was set via\n     * {@link #DOMResult(Node node, Node nextSibling)},\n     * {@link #DOMResult(Node node, Node nextSibling, String systemId)} or\n     * {@link #setNextSibling(Node nextSibling)},\n     * then <code>null</code> will be returned.</p>\n     *\n     * @return The child node before which the result nodes will be inserted.\n     *\n     * @since 1.5\n     ",
    "links" : [ "#setNextSibling(Node", "#DOMResult(Node" ]
  }, {
    "name" : "public void setSystemId(String systemId)",
    "returnType" : "void",
    "comment" : "\n     * <p>Set the systemId that may be used in association with the node.</p>\n     *\n     * @param systemId The system identifier as a URI string.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSystemId()",
    "returnType" : "String",
    "comment" : "\n     * <p>Get the System Identifier.</p>\n     *\n     * <p>If no System ID was set via\n     * {@link #DOMResult(Node node, String systemId)},\n     * {@link #DOMResult(Node node, Node nextSibling, String systemId)} or\n     * {@link #setSystemId(String systemId)},\n     * then <code>null</code> will be returned.</p>\n     *\n     * @return The system identifier.\n     ",
    "links" : [ "#setSystemId(String", "#DOMResult(Node" ]
  } ],
  "methodNames" : [ "public void setNode(Node node)", "public Node getNode()", "public void setNextSibling(Node nextSibling)", "public Node getNextSibling()", "public void setSystemId(String systemId)", "public String getSystemId()" ],
  "variableNames" : [ "FEATURE", "node", "nextSibling", "systemId" ]
}