{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/EncoderProfiles.java",
  "packageName" : "android.media",
  "className" : "AudioProfile",
  "comment" : "\n     * Configuration for an audio encoder.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "codec",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "channels",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sampleRate",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "bitrate",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "profile",
    "type" : "int",
    "comment" : " this contains the profile if codec itself does not",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getCodec()",
    "returnType" : "int",
    "comment" : "\n         * The audio encoder being used for the audio track.\n         * @see android.media.MediaRecorder.AudioEncoder\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getMediaType()",
    "returnType" : "String",
    "comment" : "\n         * The media type of the audio encoder being used for the video track\n         * @see android.media.MediaFormat#KEY_MIME\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getBitrate()",
    "returnType" : "int",
    "comment" : "\n         * The target audio output bitrate in bits per second\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSampleRate()",
    "returnType" : "int",
    "comment" : "\n         * The audio sampling rate used for the audio track\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getChannels()",
    "returnType" : "int",
    "comment" : "\n         * The number of audio channels used for the audio track\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getProfile()",
    "returnType" : "int",
    "comment" : "\n         * The audio encoder profile being used for the audio track\n         * <p>\n         * This value is negative if there is no profile defined for the audio codec.\n         * @see MediaFormat#KEY_PROFILE\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getCodec()", "public String getMediaType()", "public int getBitrate()", "public int getSampleRate()", "public int getChannels()", "public int getProfile()" ],
  "variableNames" : [ "codec", "channels", "sampleRate", "bitrate", "profile" ]
}