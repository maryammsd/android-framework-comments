{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/WebViewFactoryProvider.java",
  "packageName" : "android.webkit",
  "className" : "Statics",
  "comment" : "\n     * This Interface provides glue for implementing the backend of WebView static methods which\n     * cannot be implemented in-situ in the proxy class.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " String findAddress(String addr)",
    "returnType" : "String",
    "comment" : "\n         * Implements the API method:\n         * {@link android.webkit.WebView#findAddress(String)}\n         ",
    "links" : [ "android.webkit.WebView#findAddress(String)" ]
  }, {
    "name" : " String getDefaultUserAgent(Context context)",
    "returnType" : "String",
    "comment" : "\n         * Implements the API method:\n         * {@link android.webkit.WebSettings#getDefaultUserAgent(Context) }\n         ",
    "links" : [ "android.webkit.WebSettings#getDefaultUserAgent(Context)" ]
  }, {
    "name" : " void freeMemoryForTests()",
    "returnType" : "void",
    "comment" : "\n         * Used for tests only.\n         ",
    "links" : [ ]
  }, {
    "name" : " void setWebContentsDebuggingEnabled(boolean enable)",
    "returnType" : "void",
    "comment" : "\n         * Implements the API method:\n         * {@link android.webkit.WebView#setWebContentsDebuggingEnabled(boolean) }\n         ",
    "links" : [ "android.webkit.WebView#setWebContentsDebuggingEnabled(boolean)" ]
  }, {
    "name" : " void clearClientCertPreferences(Runnable onCleared)",
    "returnType" : "void",
    "comment" : "\n         * Implements the API method:\n         * {@link android.webkit.WebView#clearClientCertPreferences(Runnable) }\n         ",
    "links" : [ "android.webkit.WebView#clearClientCertPreferences(Runnable)" ]
  }, {
    "name" : " void enableSlowWholeDocumentDraw()",
    "returnType" : "void",
    "comment" : "\n         * Implements the API method:\n         * {@link android.webkit.WebView#setSlowWholeDocumentDrawEnabled(boolean) }\n         ",
    "links" : [ "android.webkit.WebView#setSlowWholeDocumentDrawEnabled(boolean)" ]
  }, {
    "name" : " Uri[] parseFileChooserResult(int resultCode, Intent intent)",
    "returnType" : "Uri[]",
    "comment" : "\n         * Implement the API method\n         * {@link android.webkit.WebChromeClient.FileChooserParams#parseResult(int, Intent)}\n         ",
    "links" : [ "android.webkit.WebChromeClient.FileChooserParams#parseResult(int" ]
  }, {
    "name" : " void initSafeBrowsing(Context context, ValueCallback<Boolean> callback)",
    "returnType" : "void",
    "comment" : "\n         * Implement the API method\n         * {@link android.webkit.WebView#startSafeBrowsing(Context , ValueCallback<Boolean>)}\n         ",
    "links" : [ "android.webkit.WebView#startSafeBrowsing(Context" ]
  }, {
    "name" : " void setSafeBrowsingWhitelist(List<String> hosts, ValueCallback<Boolean> callback)",
    "returnType" : "void",
    "comment" : "\n        * Implement the API method\n        * {@link android.webkit.WebView#setSafeBrowsingWhitelist(List<String>,\n        * ValueCallback<Boolean>)}\n        ",
    "links" : [ "android.webkit.WebView#setSafeBrowsingWhitelist(List" ]
  }, {
    "name" : " Uri getSafeBrowsingPrivacyPolicyUrl()",
    "returnType" : "Uri",
    "comment" : "\n         * Implement the API method\n         * {@link android.webkit.WebView#getSafeBrowsingPrivacyPolicyUrl()}\n         ",
    "links" : [ "android.webkit.WebView#getSafeBrowsingPrivacyPolicyUrl()" ]
  } ],
  "methodNames" : [ " String findAddress(String addr)", " String getDefaultUserAgent(Context context)", " void freeMemoryForTests()", " void setWebContentsDebuggingEnabled(boolean enable)", " void clearClientCertPreferences(Runnable onCleared)", " void enableSlowWholeDocumentDraw()", " Uri[] parseFileChooserResult(int resultCode, Intent intent)", " void initSafeBrowsing(Context context, ValueCallback<Boolean> callback)", " void setSafeBrowsingWhitelist(List<String> hosts, ValueCallback<Boolean> callback)", " Uri getSafeBrowsingPrivacyPolicyUrl()" ],
  "variableNames" : [ ]
}