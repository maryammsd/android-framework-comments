{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/aware/PublishConfig.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "PublishConfig",
  "comment" : "\n * Defines the configuration of a Aware publish session. Built using\n * {@link PublishConfig.Builder}. A publish session is created using\n * {@link WifiAwareSession#publish(PublishConfig, DiscoverySessionCallback,\n * android.os.Handler)} or updated using\n * {@link PublishDiscoverySession#updatePublish(PublishConfig)}.\n ",
  "variables" : [ {
    "name" : "PUBLISH_TYPE_UNSOLICITED",
    "type" : "int",
    "comment" : "\n     * Defines an unsolicited publish session - a publish session where the publisher is\n     * advertising itself by broadcasting on-the-air. An unsolicited publish session is paired\n     * with an passive subscribe session {@link SubscribeConfig#SUBSCRIBE_TYPE_PASSIVE}.\n     * Configuration is done using {@link PublishConfig.Builder#setPublishType(int)}.\n     ",
    "links" : [ "SubscribeConfig#SUBSCRIBE_TYPE_PASSIVE", "PublishConfig.Builder#setPublishType" ]
  }, {
    "name" : "PUBLISH_TYPE_SOLICITED",
    "type" : "int",
    "comment" : "\n     * Defines a solicited publish session - a publish session which is silent, waiting for a\n     * matching active subscribe session - and responding to it in unicast. A\n     * solicited publish session is paired with an active subscribe session\n     * {@link SubscribeConfig#SUBSCRIBE_TYPE_ACTIVE}. Configuration is done using\n     * {@link PublishConfig.Builder#setPublishType(int)}.\n     ",
    "links" : [ "SubscribeConfig#SUBSCRIBE_TYPE_ACTIVE", "PublishConfig.Builder#setPublishType" ]
  }, {
    "name" : "mServiceName",
    "type" : "byte[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mServiceSpecificInfo",
    "type" : "byte[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMatchFilter",
    "type" : "byte[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mPublishType",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mTtlSec",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mEnableTerminateNotification",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mEnableRanging",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<PublishConfig>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void assertValid(Characteristics characteristics, boolean rttSupported) throws IllegalArgumentException",
    "returnType" : "void",
    "comment" : "\n     * Verifies that the contents of the PublishConfig are valid. Otherwise\n     * throws an IllegalArgumentException.\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "PUBLISH_TYPE_UNSOLICITED", "PUBLISH_TYPE_SOLICITED", "mServiceName", "mServiceSpecificInfo", "mMatchFilter", "mPublishType", "mTtlSec", "mEnableTerminateNotification", "mEnableRanging", "CREATOR" ],
  "methodNames" : [ "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public void assertValid(Characteristics characteristics, boolean rttSupported) throws IllegalArgumentException" ]
}