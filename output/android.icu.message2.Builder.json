{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/message2/MessageFormatter.java",
  "packageName" : "android.icu.message2",
  "className" : "Builder",
  "comment" : "\n     * A {@code Builder} used to build instances of {@link MessageFormatter}.\n     *\n     * @deprecated This API is for technology preview only.\n     * @hide Only a subset of ICU is exposed in Android\n     * @hide draft / provisional / internal are hidden on Android\n     ",
  "links" : [ "android.icu.message2.MessageFormatter" ],
  "variables" : [ {
    "name" : "locale",
    "type" : "Locale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "pattern",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "functionRegistry",
    "type" : "MFFunctionRegistry",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dataModel",
    "type" : "MFDataModel.Message",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setLocale(Locale locale)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the locale to use for all formatting and selection operations.\n         *\n         * @param locale the locale to set.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPattern(String pattern)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the pattern (in MessageFormat 2 syntax) used to create the message.<br>\n         * It conflicts with the data model, so it will reset it (the last call on setter wins).\n         *\n         * @param pattern the pattern to set.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setFunctionRegistry(MFFunctionRegistry functionRegistry)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets an instance of {@link MFFunctionRegistry} that should register any\n         * custom functions used by the message.\n         *\n         * <p>There is no need to do this in order to use standard functions\n         * (for example date / time / number formatting, plural / ordinal / literal selection).<br>\n         * The exact set of standard functions, with the types they format and the options\n         * they accept is still TBD.</p>\n         *\n         * @param functionRegistry the function registry to set.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ "android.icu.message2.MFFunctionRegistry" ]
  }, {
    "name" : "public Builder setDataModel(MFDataModel.Message dataModel)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the data model used to create the message.<br>\n         * It conflicts with the pattern, so it will reset it (the last call on setter wins).\n         *\n         * @param dataModel the pattern to set.\n         * @return the builder, for fluent use.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public MessageFormatter build()",
    "returnType" : "MessageFormatter",
    "comment" : "\n         * Builds an instance of {@link MessageFormatter}.\n         *\n         * @return the {@link MessageFormatter} created.\n         *\n         * @deprecated This API is for technology preview only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ "android.icu.message2.MessageFormatter" ]
  } ],
  "methodNames" : [ "public Builder setLocale(Locale locale)", "public Builder setPattern(String pattern)", "public Builder setFunctionRegistry(MFFunctionRegistry functionRegistry)", "public Builder setDataModel(MFDataModel.Message dataModel)", "public MessageFormatter build()" ],
  "variableNames" : [ "locale", "pattern", "functionRegistry", "dataModel" ]
}