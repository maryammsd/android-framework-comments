{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/adid/AdIdManager.java",
  "packageName" : "android.adservices.adid",
  "className" : "AdIdManager",
  "comment" : "\n * AdId Manager provides APIs for app and ad-SDKs to access advertising ID. The advertising ID is a\n * unique, per-device, user-resettable ID for advertising. It gives users better controls and\n * provides developers with a simple, standard system to continue to monetize their apps via\n * personalized ads (formerly known as interest-based ads).\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ADID_SERVICE",
    "type" : "String",
    "comment" : "\n     * Service used for registering AdIdManager in the system service registry.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "EMPTY_SDK",
    "type" : "String",
    "comment" : " When an app calls the AdId API directly, it sets the SDK name to empty string.",
    "links" : [ ]
  }, {
    "name" : "mImpl",
    "type" : "AdIdCompatibleManager",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static AdIdManager get(@NonNull Context context)",
    "returnType" : "AdIdManager",
    "comment" : "\n     * Factory method for creating an instance of AdIdManager.\n     *\n     * @param context The {@link Context} to use\n     * @return A {@link AdIdManager} instance\n     ",
    "links" : [ "android.adservices.adid.AdIdManager", "android.app.sdksandbox.SandboxedSdkContext" ]
  }, {
    "name" : "public AdIdManager initialize(Context context)",
    "returnType" : "AdIdManager",
    "comment" : "\n     * Initializes {@link AdIdManager} with the given {@code context}.\n     *\n     * <p>This method is called by the {@link SandboxedSdkContext} to propagate the correct context.\n     * For more information check the javadoc on the {@link\n     * android.app.sdksandbox.SdkSandboxSystemServiceRegistry}.\n     *\n     * @hide\n     * @see android.app.sdksandbox.SdkSandboxSystemServiceRegistry\n     ",
    "links" : [ "android.adservices.adid.AdIdManager", "android.app.sdksandbox.SandboxedSdkContext", "android.app.sdksandbox.SdkSandboxSystemServiceRegistry" ]
  }, {
    "name" : "public void getAdId(@NonNull @CallbackExecutor Executor executor, @NonNull OutcomeReceiver<AdId, Exception> callback)",
    "returnType" : "void",
    "comment" : "\n     * Return the AdId.\n     *\n     * @param executor The executor to run callback.\n     * @param callback The callback that's called after adid are available or an error occurs.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void getAdId(@NonNull @CallbackExecutor Executor executor, @NonNull AdServicesOutcomeReceiver<AdId, Exception> callback)",
    "returnType" : "void",
    "comment" : "\n     * Return the AdId. For use on Android R or lower.\n     *\n     * @param executor The executor to run callback.\n     * @param callback The callback that's called after adid are available or an error occurs.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void unbindFromService()",
    "returnType" : "void",
    "comment" : " TODO: change to @VisibleForTesting",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static AdIdManager get(@NonNull Context context)", "public AdIdManager initialize(Context context)", "public void getAdId(@NonNull @CallbackExecutor Executor executor, @NonNull OutcomeReceiver<AdId, Exception> callback)", "public void getAdId(@NonNull @CallbackExecutor Executor executor, @NonNull AdServicesOutcomeReceiver<AdId, Exception> callback)", "public void unbindFromService()" ],
  "variableNames" : [ "ADID_SERVICE", "EMPTY_SDK", "mImpl" ]
}