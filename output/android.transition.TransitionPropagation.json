{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/transition/TransitionPropagation.java",
  "packageName" : "android.transition",
  "className" : "TransitionPropagation",
  "comment" : "\n * Extend <code>TransitionPropagation</code> to customize start delays for Animators created\n * in {@link android.transition.Transition#createAnimator(ViewGroup,\n * TransitionValues, TransitionValues)}. A Transition such as {@link android.transition.Explode}\n * defaults to using {@link android.transition.CircularPropagation} and Views closer to the\n * epicenter will move out of the scene later and into the scene sooner than Views farther\n * from the epicenter, giving the appearance of inertia. With no TransitionPropagation, all\n * Views will react simultaneously to the start of the transition.\n *\n * @see Transition#setPropagation(TransitionPropagation)\n * @see Transition#getEpicenter()\n ",
  "links" : [ "android.transition.Transition#createAnimator(ViewGroup", "android.transition.Explode", "android.transition.CircularPropagation" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract long getStartDelay(ViewGroup sceneRoot, Transition transition, TransitionValues startValues, TransitionValues endValues)",
    "returnType" : "long",
    "comment" : "\n     * Called by Transition to alter the Animator start delay. All start delays will be adjusted\n     * such that the minimum becomes zero.\n     * @param sceneRoot The root of the View hierarchy running the transition.\n     * @param transition The transition that created the Animator\n     * @param startValues The values for a specific target in the start scene.\n     * @param endValues The values for the target in the end scene.\n     * @return A start delay to use with the Animator created by <code>transition</code>. The\n     * delay will be offset by the minimum delay of all <code>TransitionPropagation</code>s\n     * used in the Transition so that the smallest delay will be 0. Returned values may be\n     * negative.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void captureValues(TransitionValues transitionValues)",
    "returnType" : "void",
    "comment" : "\n     * Captures the values in the start or end scene for the properties that this\n     * transition propagation monitors. These values are then passed as the startValues\n     * or endValues structure in a later call to\n     * {@link #getStartDelay(ViewGroup, Transition, TransitionValues, TransitionValues)}.\n     * The main concern for an implementation is what the\n     * properties are that the transition cares about and what the values are\n     * for all of those properties. The start and end values will be compared\n     * later during the\n     * {@link #getStartDelay(ViewGroup, Transition, TransitionValues, TransitionValues)}.\n     * method to determine the start delay.\n     *\n     * <p>Subclasses must implement this method. The method should only be called by the\n     * transition system; it is not intended to be called from external classes.</p>\n     *\n     * @param transitionValues The holder for any values that the Transition\n     * wishes to store. Values are stored in the <code>values</code> field\n     * of this TransitionValues object and are keyed from\n     * a String value. For example, to store a view's rotation value,\n     * a transition might call\n     * <code>transitionValues.values.put(\"appname:transitionname:rotation\",\n     * view.getRotation())</code>. The target view will already be stored in\n     * the transitionValues structure when this method is called.\n     ",
    "links" : [ "#getStartDelay(ViewGroup" ]
  }, {
    "name" : "public abstract String[] getPropagationProperties()",
    "returnType" : "String[]",
    "comment" : "\n     * Returns the set of property names stored in the {@link TransitionValues}\n     * object passed into {@link #captureValues(TransitionValues)} that\n     * this transition propagation cares about for the purposes of preventing\n     * duplicate capturing of property values.\n\n     * <p>A <code>TransitionPropagation</code> must override this method to prevent\n     * duplicate capturing of values and must contain at least one </p>\n     *\n     * @return An array of property names as described in the class documentation for\n     * {@link TransitionValues}.\n     ",
    "links" : [ "#captureValues(TransitionValues)", "android.transition.TransitionValues" ]
  } ],
  "methodNames" : [ "public abstract long getStartDelay(ViewGroup sceneRoot, Transition transition, TransitionValues startValues, TransitionValues endValues)", "public abstract void captureValues(TransitionValues transitionValues)", "public abstract String[] getPropagationProperties()" ],
  "variableNames" : [ ]
}