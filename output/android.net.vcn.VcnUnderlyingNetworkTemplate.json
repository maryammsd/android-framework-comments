{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/vcn/VcnUnderlyingNetworkTemplate.java",
  "packageName" : "android.net.vcn",
  "className" : "VcnUnderlyingNetworkTemplate",
  "comment" : "\n * This class represents a template containing set of underlying network requirements for doing\n * route selection.\n *\n * <p>Apps provisioning a VCN can configure the underlying network priority for each Gateway\n * Connection by setting a list (in priority order, most to least preferred) of the appropriate\n * subclasses in the VcnGatewayConnectionConfig. See {@link\n * VcnGatewayConnectionConfig.Builder#setVcnUnderlyingNetworkPriorities}\n ",
  "links" : [ "VcnGatewayConnectionConfig.Builder#setVcnUnderlyingNetworkPriorities" ],
  "variables" : [ {
    "name" : "NETWORK_PRIORITY_TYPE_WIFI",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_PRIORITY_TYPE_CELL",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MATCH_ANY",
    "type" : "int",
    "comment" : "\n     * Used to configure the matching criteria of a network characteristic. This may include network\n     * capabilities, or cellular subscription information. Denotes that networks with or without the\n     * characteristic are both acceptable to match this template.\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_REQUIRED",
    "type" : "int",
    "comment" : "\n     * Used to configure the matching criteria of a network characteristic. This may include network\n     * capabilities, or cellular subscription information. Denotes that a network MUST have the\n     * capability in order to match this template.\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_FORBIDDEN",
    "type" : "int",
    "comment" : "\n     * Used to configure the matching criteria of a network characteristic. This may include network\n     * capabilities, or cellular subscription information. Denotes that a network MUST NOT have the\n     * capability in order to match this template.\n     ",
    "links" : [ ]
  }, {
    "name" : "MATCH_CRITERIA_TO_STRING_MAP",
    "type" : "SparseArray<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NETWORK_PRIORITY_TYPE_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkPriorityType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "METERED_MATCH_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_METERED_MATCH_CRITERIA",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMeteredMatchCriteria",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MIN_BANDWIDTH_KBPS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MIN_ENTRY_UPSTREAM_BANDWIDTH_KBPS_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMinEntryUpstreamBandwidthKbps",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_EXIT_UPSTREAM_BANDWIDTH_KBPS_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMinExitUpstreamBandwidthKbps",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_ENTRY_DOWNSTREAM_BANDWIDTH_KBPS_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMinEntryDownstreamBandwidthKbps",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_EXIT_DOWNSTREAM_BANDWIDTH_KBPS_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMinExitDownstreamBandwidthKbps",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static void validateMatchCriteria(int matchCriteria, String matchingCapability)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " static void validateMinBandwidthKbps(int minEntryBandwidth, int minExitBandwidth)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "protected void validate()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static VcnUnderlyingNetworkTemplate fromPersistableBundle(@NonNull PersistableBundle in)",
    "returnType" : "VcnUnderlyingNetworkTemplate",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " PersistableBundle toPersistableBundle()",
    "returnType" : "PersistableBundle",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getNameString(SparseArray<String> toStringMap, int key)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " static String getMatchCriteriaString(int matchCriteria)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " abstract void dumpTransportSpecificFields(IndentingPrintWriter pw)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void dump(IndentingPrintWriter pw)",
    "returnType" : "void",
    "comment" : "\n     * Dumps the state of this record for logging and debugging purposes.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMetered()",
    "returnType" : "int",
    "comment" : "\n     * Return the matching criteria for metered networks.\n     *\n     * @see VcnWifiUnderlyingNetworkTemplate.Builder#setMetered(int)\n     * @see VcnCellUnderlyingNetworkTemplate.Builder#setMetered(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMinEntryUpstreamBandwidthKbps()",
    "returnType" : "int",
    "comment" : "\n     * Returns the minimum entry upstream bandwidth allowed by this template.\n     *\n     * @see VcnWifiUnderlyingNetworkTemplate.Builder#setMinUpstreamBandwidthKbps(int, int)\n     * @see VcnCellUnderlyingNetworkTemplate.Builder#setMinUpstreamBandwidthKbps(int, int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMinExitUpstreamBandwidthKbps()",
    "returnType" : "int",
    "comment" : "\n     * Returns the minimum exit upstream bandwidth allowed by this template.\n     *\n     * @see VcnWifiUnderlyingNetworkTemplate.Builder#setMinUpstreamBandwidthKbps(int, int)\n     * @see VcnCellUnderlyingNetworkTemplate.Builder#setMinUpstreamBandwidthKbps(int, int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMinEntryDownstreamBandwidthKbps()",
    "returnType" : "int",
    "comment" : "\n     * Returns the minimum entry downstream bandwidth allowed by this template.\n     *\n     * @see VcnWifiUnderlyingNetworkTemplate.Builder#setMinDownstreamBandwidthKbps(int, int)\n     * @see VcnCellUnderlyingNetworkTemplate.Builder#setMinDownstreamBandwidthKbps(int, int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMinExitDownstreamBandwidthKbps()",
    "returnType" : "int",
    "comment" : "\n     * Returns the minimum exit downstream bandwidth allowed by this template.\n     *\n     * @see VcnWifiUnderlyingNetworkTemplate.Builder#setMinDownstreamBandwidthKbps(int, int)\n     * @see VcnCellUnderlyingNetworkTemplate.Builder#setMinDownstreamBandwidthKbps(int, int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract Map<Integer, Integer> getCapabilitiesMatchCriteria()",
    "returnType" : "Map<Integer, Integer>",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static void validateMatchCriteria(int matchCriteria, String matchingCapability)", " static void validateMinBandwidthKbps(int minEntryBandwidth, int minExitBandwidth)", "protected void validate()", "public static VcnUnderlyingNetworkTemplate fromPersistableBundle(@NonNull PersistableBundle in)", " PersistableBundle toPersistableBundle()", "public int hashCode()", "public boolean equals(@Nullable Object other)", " static String getNameString(SparseArray<String> toStringMap, int key)", " static String getMatchCriteriaString(int matchCriteria)", " abstract void dumpTransportSpecificFields(IndentingPrintWriter pw)", "public void dump(IndentingPrintWriter pw)", "public int getMetered()", "public int getMinEntryUpstreamBandwidthKbps()", "public int getMinExitUpstreamBandwidthKbps()", "public int getMinEntryDownstreamBandwidthKbps()", "public int getMinExitDownstreamBandwidthKbps()", "public abstract Map<Integer, Integer> getCapabilitiesMatchCriteria()" ],
  "variableNames" : [ "NETWORK_PRIORITY_TYPE_WIFI", "NETWORK_PRIORITY_TYPE_CELL", "MATCH_ANY", "MATCH_REQUIRED", "MATCH_FORBIDDEN", "MATCH_CRITERIA_TO_STRING_MAP", "NETWORK_PRIORITY_TYPE_KEY", "mNetworkPriorityType", "METERED_MATCH_KEY", "DEFAULT_METERED_MATCH_CRITERIA", "mMeteredMatchCriteria", "DEFAULT_MIN_BANDWIDTH_KBPS", "MIN_ENTRY_UPSTREAM_BANDWIDTH_KBPS_KEY", "mMinEntryUpstreamBandwidthKbps", "MIN_EXIT_UPSTREAM_BANDWIDTH_KBPS_KEY", "mMinExitUpstreamBandwidthKbps", "MIN_ENTRY_DOWNSTREAM_BANDWIDTH_KBPS_KEY", "mMinEntryDownstreamBandwidthKbps", "MIN_EXIT_DOWNSTREAM_BANDWIDTH_KBPS_KEY", "mMinExitDownstreamBandwidthKbps" ]
}