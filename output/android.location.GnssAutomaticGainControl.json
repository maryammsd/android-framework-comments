{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssAutomaticGainControl.java",
  "packageName" : "android.location",
  "className" : "GnssAutomaticGainControl",
  "comment" : "\n * A class that contains GNSS Automatic Gain Control (AGC) information.\n *\n * <p> AGC acts as a variable gain amplifier adjusting the power of the incoming signal. The AGC\n * level may be used to indicate potential interference. Higher gain (and/or lower input power)\n * shall be output as a positive number. Hence in cases of strong jamming, in the band of this\n * signal, this value will go more negative. This value must be consistent given the same level\n * of the incoming signal power.\n *\n * <p> Note: Different hardware designs (e.g. antenna, pre-amplification, or other RF HW\n * components) may also affect the typical output of this value on any given hardware design\n * in an open sky test - the important aspect of this output is that changes in this value are\n * indicative of changes on input signal power in the frequency band for this measurement.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mLevelDb",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstellationType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCarrierFrequencyHz",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<GnssAutomaticGainControl>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public double getLevelDb()",
    "returnType" : "double",
    "comment" : "\n     * Gets the Automatic Gain Control level in dB.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getConstellationType()",
    "returnType" : "int",
    "comment" : "\n     * Gets the constellation type.\n     *\n     * <p>The return value is one of those constants with {@code CONSTELLATION_} prefix in\n     * {@link GnssStatus}.\n     ",
    "links" : [ "android.location.GnssStatus" ]
  }, {
    "name" : "public long getCarrierFrequencyHz()",
    "returnType" : "long",
    "comment" : "\n     * Gets the carrier frequency of the tracked signal.\n     *\n     * <p>For example it can be the GPS central frequency for L1 = 1575.45 MHz, or L2 = 1227.60 MHz,\n     * L5 = 1176.45 MHz, varying GLO channels, etc.\n     *\n     * @return the carrier frequency of the signal tracked in Hz.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flag)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public double getLevelDb()", "public int getConstellationType()", "public long getCarrierFrequencyHz()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel parcel, int flag)", "public String toString()", "public boolean equals(Object obj)", "public int hashCode()" ],
  "variableNames" : [ "mLevelDb", "mConstellationType", "mCarrierFrequencyHz", "CREATOR" ]
}