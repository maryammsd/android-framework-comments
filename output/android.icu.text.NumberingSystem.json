{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/NumberingSystem.java",
  "packageName" : "android.icu.text",
  "className" : "NumberingSystem",
  "comment" : "\n * <code>NumberingSystem</code> is the base class for all number\n * systems. This class provides the interface for setting different numbering\n * system types, whether it be a simple alternate digit system such as\n * Thai digits or Devanagari digits, or an algorithmic numbering system such\n * as Hebrew numbering or Chinese numbering.\n *\n * @author       John Emmons\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "OTHER_NS_KEYWORDS",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LATIN",
    "type" : "NumberingSystem",
    "comment" : "\n     * For convenience, an instance representing the <em>latn</em> numbering system, which\n     * corresponds to digits in the ASCII range '0' through '9'.\n     ",
    "links" : [ ]
  }, {
    "name" : "desc",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "radix",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "algorithmic",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "name",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "cachedLocaleData",
    "type" : "CacheBase<String, NumberingSystem, LocaleLookupData>",
    "comment" : "\n     * Cache to hold the NumberingSystems by Locale.\n     ",
    "links" : [ ]
  }, {
    "name" : "cachedStringData",
    "type" : "CacheBase<String, NumberingSystem, Void>",
    "comment" : "\n     * Cache to hold the NumberingSystems by name.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static NumberingSystem getInstance(int radix_in, boolean isAlgorithmic_in, String desc_in)",
    "returnType" : "NumberingSystem",
    "comment" : "\n     * Factory method for creating a numbering system.\n     * @param radix_in The radix for this numbering system.  ICU currently\n     * supports only numbering systems whose radix is 10.\n     * @param isAlgorithmic_in Specifies whether the numbering system is algorithmic\n     * (true) or numeric (false).\n     * @param desc_in String used to describe the characteristics of the numbering\n     * system.  For numeric systems, this string contains the digits used by the\n     * numbering system, in order, starting from zero.  For algorithmic numbering\n     * systems, the string contains the name of the RBNF ruleset in the locale's\n     * NumberingSystemRules section that will be used to format numbers using\n     * this numbering system.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static NumberingSystem getInstance(String name_in, int radix_in, boolean isAlgorithmic_in, String desc_in)",
    "returnType" : "NumberingSystem",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static NumberingSystem getInstance(Locale inLocale)",
    "returnType" : "NumberingSystem",
    "comment" : "\n     * Returns the default numbering system for the specified locale.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static NumberingSystem getInstance(ULocale locale)",
    "returnType" : "NumberingSystem",
    "comment" : "\n     * Returns the default numbering system for the specified ULocale.\n     ",
    "links" : [ ]
  }, {
    "name" : " static NumberingSystem lookupInstanceByLocale(LocaleLookupData localeLookupData)",
    "returnType" : "NumberingSystem",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static NumberingSystem getInstance()",
    "returnType" : "NumberingSystem",
    "comment" : "\n     * Returns the default numbering system for the default <code>FORMAT</code> locale.\n     * @see Category#FORMAT\n     ",
    "links" : [ ]
  }, {
    "name" : "public static NumberingSystem getInstanceByName(String name)",
    "returnType" : "NumberingSystem",
    "comment" : "\n     * Returns a numbering system from one of the predefined numbering systems\n     * known to ICU.  Numbering system names are based on the numbering systems\n     * defined in CLDR.  To get a list of available numbering systems, use the\n     * getAvailableNames method.\n     * @param name The name of the desired numbering system.  Numbering system\n     * names often correspond with the name of the script they are associated\n     * with.  For example, \"thai\" for Thai digits, \"hebr\" for Hebrew numerals.\n     * @return The NumberingSystem instance, or null if not available.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static NumberingSystem lookupInstanceByName(String name)",
    "returnType" : "NumberingSystem",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String[] getAvailableNames()",
    "returnType" : "String[]",
    "comment" : "\n     * Returns a string array containing a list of the names of numbering systems\n     * currently known to ICU.\n     *\n     * @return An array of strings in alphabetical (invariant) order.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isValidDigitString(String str)",
    "returnType" : "boolean",
    "comment" : "\n     * Convenience method to determine if a given digit string is valid for use as a\n     * descriptor of a numeric ( non-algorithmic ) numbering system.  In order for\n     * a digit string to be valid, it must contain exactly ten Unicode code points.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRadix()",
    "returnType" : "int",
    "comment" : "\n     * Returns the radix of the current numbering system.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDescription()",
    "returnType" : "String",
    "comment" : "\n     * Returns the description string of the current numbering system.\n     * The description string describes the characteristics of the numbering\n     * system.  For numeric systems, this string contains the digits used by the\n     * numbering system, in order, starting from zero.  For algorithmic numbering\n     * systems, the string contains the name of the RBNF ruleset in the locale's\n     * NumberingSystemRules section that will be used to format numbers using\n     * this numbering system.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the string representing the name of the numbering system.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAlgorithmic()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns the numbering system's algorithmic status.  If true,\n     * the numbering system is algorithmic and uses an RBNF formatter to\n     * format numerals.  If false, the numbering system is numeric and\n     * uses a fixed set of digits.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static NumberingSystem getInstance(int radix_in, boolean isAlgorithmic_in, String desc_in)", "private static NumberingSystem getInstance(String name_in, int radix_in, boolean isAlgorithmic_in, String desc_in)", "public static NumberingSystem getInstance(Locale inLocale)", "public static NumberingSystem getInstance(ULocale locale)", " static NumberingSystem lookupInstanceByLocale(LocaleLookupData localeLookupData)", "public static NumberingSystem getInstance()", "public static NumberingSystem getInstanceByName(String name)", "private static NumberingSystem lookupInstanceByName(String name)", "public static String[] getAvailableNames()", "public static boolean isValidDigitString(String str)", "public int getRadix()", "public String getDescription()", "public String getName()", "public boolean isAlgorithmic()" ],
  "variableNames" : [ "OTHER_NS_KEYWORDS", "LATIN", "desc", "radix", "algorithmic", "name", "cachedLocaleData", "cachedStringData" ]
}