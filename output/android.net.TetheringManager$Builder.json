{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/TetheringManager.java",
  "packageName" : "android.net",
  "className" : "Builder",
  "comment" : " Builder used to create TetheringRequest. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mBuilderParcel",
    "type" : "TetheringRequestParcel",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setStaticIpv4Addresses(@NonNull final LinkAddress localIPv4Address, @NonNull final LinkAddress clientAddress)",
    "returnType" : "Builder",
    "comment" : "\n             * Configure tethering with static IPv4 assignment.\n             *\n             * A DHCP server will be started, but will only be able to offer the client address.\n             * The two addresses must be in the same prefix.\n             *\n             * @param localIPv4Address The preferred local IPv4 link address to use.\n             * @param clientAddress The static client address.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setExemptFromEntitlementCheck(boolean exempt)",
    "returnType" : "Builder",
    "comment" : " Start tethering without entitlement checks. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setShouldShowEntitlementUi(boolean showUi)",
    "returnType" : "Builder",
    "comment" : "\n             * If an entitlement check is needed, sets whether to show the entitlement UI or to\n             * perform a silent entitlement check. By default, the entitlement UI is shown.\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setConnectivityScope(@ConnectivityScope int scope)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets the connectivity scope to be provided by this tethering downstream.\n             ",
    "links" : [ ]
  }, {
    "name" : "public TetheringRequest build()",
    "returnType" : "TetheringRequest",
    "comment" : " Build {@link TetheringRequest} with the currently set configuration. ",
    "links" : [ "TetheringRequest" ]
  } ],
  "methodNames" : [ "public Builder setStaticIpv4Addresses(@NonNull final LinkAddress localIPv4Address, @NonNull final LinkAddress clientAddress)", "public Builder setExemptFromEntitlementCheck(boolean exempt)", "public Builder setShouldShowEntitlementUi(boolean showUi)", "public Builder setConnectivityScope(@ConnectivityScope int scope)", "public TetheringRequest build()" ],
  "variableNames" : [ "mBuilderParcel" ]
}