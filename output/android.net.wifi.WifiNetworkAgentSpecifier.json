{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/WifiNetworkAgentSpecifier.java",
  "packageName" : "android.net.wifi",
  "className" : "WifiNetworkAgentSpecifier",
  "comment" : "\n * Network specifier object used by wifi's {@link android.net.NetworkAgent}.\n * @hide\n ",
  "links" : [ "android.net.NetworkAgent" ],
  "variables" : [ {
    "name" : "mWifiConfiguration",
    "type" : "WifiConfiguration",
    "comment" : "\n     * Security credentials for the currently connected network.\n     ",
    "links" : [ ]
  }, {
    "name" : "mBand",
    "type" : "int",
    "comment" : "\n     * Band, as one of the ScanResult.WIFI_BAND_* constants.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMatchLocalOnlySpecifiers",
    "type" : "boolean",
    "comment" : "\n     * Whether to match P2P requests.\n     *\n     * When matching against an instance of WifiNetworkSpecifier, simply matching SSID or\n     * BSSID patterns would let apps know if a given WiFi network's (B)SSID matches a pattern\n     * by simply filing a NetworkCallback with that pattern. Also, apps asking for a match on\n     * (B)SSID are apps requesting a P2P network, which involves protection with UI shown by\n     * the system, and the WifiNetworkSpecifiers for these P2P networks should never match\n     * an Internet-providing network to avoid calling back these apps on a network that happens\n     * to match their requested pattern but has not been brought up for them.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WifiNetworkAgentSpecifier>",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canBeSatisfiedBy(@Nullable NetworkSpecifier other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean satisfiesNetworkSpecifier(@NonNull WifiNetworkSpecifier ns)",
    "returnType" : "boolean",
    "comment" : "\n     * Match {@link WifiNetworkSpecifier} in app's {@link NetworkRequest} with the\n     * {@link WifiNetworkAgentSpecifier} in wifi platform's {@link android.net.NetworkAgent}.\n     ",
    "links" : [ "android.net.wifi.WifiNetworkAgentSpecifier", "android.net.wifi.WifiNetworkSpecifier", "android.net.NetworkAgent", "android.net.NetworkRequest" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NetworkSpecifier redact()",
    "returnType" : "NetworkSpecifier",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean canBeSatisfiedBy(@Nullable NetworkSpecifier other)", "public boolean satisfiesNetworkSpecifier(@NonNull WifiNetworkSpecifier ns)", "public int hashCode()", "public boolean equals(Object obj)", "public String toString()", "public NetworkSpecifier redact()" ],
  "variableNames" : [ "mWifiConfiguration", "mBand", "mMatchLocalOnlySpecifiers", "CREATOR" ]
}