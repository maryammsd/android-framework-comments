{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ipsec/ike/IkeSessionConfiguration.java",
  "packageName" : "android.net.ipsec.ike",
  "className" : "IkeSessionConfiguration",
  "comment" : "\n * IkeSessionConfiguration represents the negotiated configuration for a {@link IkeSession}.\n *\n * <p>Configurations include remote application version and enabled IKE extensions.\n ",
  "links" : [ "android.net.ipsec.ike.IkeSession" ],
  "variables" : [ {
    "name" : "EXTENSION_TYPE_FRAGMENTATION",
    "type" : "int",
    "comment" : " IKE Message Fragmentation ",
    "links" : [ ]
  }, {
    "name" : "EXTENSION_TYPE_MOBIKE",
    "type" : "int",
    "comment" : " IKEv2 Mobility and Multihoming Protocol ",
    "links" : [ ]
  }, {
    "name" : "VALID_EXTENSION_MIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VALID_EXTENSION_MAX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRemoteApplicationVersion",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIkeConnInfo",
    "type" : "IkeSessionConnectionInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPcscfServers",
    "type" : "List<InetAddress>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRemoteVendorIds",
    "type" : "List<byte[]>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnabledExtensions",
    "type" : "Set<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEapInfo",
    "type" : "EapInfo",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void validateOrThrow()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getRemoteApplicationVersion()",
    "returnType" : "String",
    "comment" : "\n     * Gets remote (server) version information.\n     *\n     * @return application version of the remote server, or an empty string if the remote server did\n     *     not provide the application version.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<byte[]> getRemoteVendorIds()",
    "returnType" : "List<byte[]>",
    "comment" : "\n     * Returns remote vendor IDs received during IKE Session setup.\n     *\n     * <p>According to the IKEv2 specification (RFC 7296), a vendor ID may indicate the sender is\n     * capable of accepting certain extensions to the protocol, or it may simply identify the\n     * implementation as an aid in debugging.\n     *\n     * @return the vendor IDs of the remote server, or an empty list if no vendor ID is received\n     *     during IKE Session setup.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isIkeExtensionEnabled(@ExtensionType int extensionType)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if an IKE extension is enabled.\n     *\n     * <p>An IKE extension is enabled when both sides can support it. This negotiation always\n     * happens in IKE initial exchanges (IKE INIT and IKE AUTH).\n     *\n     * @param extensionType the extension type.\n     * @return {@code true} if this extension is enabled.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<InetAddress> getPcscfServers()",
    "returnType" : "List<InetAddress>",
    "comment" : "\n     * Returns the assigned P_CSCF servers.\n     *\n     * @return the assigned P_CSCF servers, or an empty list when no servers are assigned by the\n     *     remote IKE server.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public IkeSessionConnectionInfo getIkeSessionConnectionInfo()",
    "returnType" : "IkeSessionConnectionInfo",
    "comment" : "\n     * Returns the connection information.\n     *\n     * @return the IKE Session connection information.\n     ",
    "links" : [ ]
  }, {
    "name" : "public EapInfo getEapInfo()",
    "returnType" : "EapInfo",
    "comment" : "\n     * Retrieves the EAP information.\n     *\n     * @return the EAP information provided by the server during EAP authentication (e.g. next\n     *    re-authentication ID), or null if the server did not provide any information that will be\n     *    useful after the authentication.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void validateOrThrow()", "public String getRemoteApplicationVersion()", "public List<byte[]> getRemoteVendorIds()", "public boolean isIkeExtensionEnabled(@ExtensionType int extensionType)", "public List<InetAddress> getPcscfServers()", "public IkeSessionConnectionInfo getIkeSessionConnectionInfo()", "public EapInfo getEapInfo()" ],
  "variableNames" : [ "EXTENSION_TYPE_FRAGMENTATION", "EXTENSION_TYPE_MOBIKE", "VALID_EXTENSION_MIN", "VALID_EXTENSION_MAX", "mRemoteApplicationVersion", "mIkeConnInfo", "mPcscfServers", "mRemoteVendorIds", "mEnabledExtensions", "mEapInfo" ]
}