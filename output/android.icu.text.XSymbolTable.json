{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/UnicodeSet.java",
  "packageName" : "android.icu.text",
  "className" : "XSymbolTable",
  "comment" : "\n     * Internal class for customizing UnicodeSet parsing of properties.\n     * TODO: extend to allow customizing of codepoint ranges\n     * @author medavis\n     * @hide Only a subset of ICU is exposed in Android\n     * @hide draft / provisional / internal are hidden on Android\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public UnicodeMatcher lookupMatcher(int i)",
    "returnType" : "UnicodeMatcher",
    "comment" : "\n         * Supplies default implementation for SymbolTable (no action).\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean applyPropertyAlias(String propertyName, String propertyValue, UnicodeSet result)",
    "returnType" : "boolean",
    "comment" : "\n         * Override the interpretation of the sequence [:propertyName=propertyValue:] (and its negated and Perl-style\n         * variant). The propertyName and propertyValue may be existing Unicode aliases, or may not be.\n         * <p>\n         * This routine will be called whenever the parsing of a UnicodeSet pattern finds such a\n         * propertyName+propertyValue combination.\n         *\n         * @param propertyName\n         *            the name of the property\n         * @param propertyValue\n         *            the name of the property value\n         * @param result UnicodeSet value to change\n         *            a set to which the characters having the propertyName+propertyValue are to be added.\n         * @return returns true if the propertyName+propertyValue combination is to be overridden, and the characters\n         *         with that property have been added to the UnicodeSet, and returns false if the\n         *         propertyName+propertyValue combination is not recognized (in which case result is unaltered).\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public char[] lookup(String s)",
    "returnType" : "char[]",
    "comment" : "\n         * Supplies default implementation for SymbolTable (no action).\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public String parseReference(String text, ParsePosition pos, int limit)",
    "returnType" : "String",
    "comment" : "\n         * Supplies default implementation for SymbolTable (no action).\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public UnicodeMatcher lookupMatcher(int i)", "public boolean applyPropertyAlias(String propertyName, String propertyValue, UnicodeSet result)", "public char[] lookup(String s)", "public String parseReference(String text, ParsePosition pos, int limit)" ],
  "variableNames" : [ ]
}