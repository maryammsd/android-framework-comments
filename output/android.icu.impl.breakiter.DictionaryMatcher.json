{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/breakiter/DictionaryMatcher.java",
  "packageName" : "android.icu.impl.breakiter",
  "className" : "DictionaryMatcher",
  "comment" : "\n * The DictionaryMatcher interface is used to allow arbitrary \"types\" of\n * back-end data structures to be used with the break iteration code.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract int matches(CharacterIterator text, int maxLength, int[] lengths, int[] count, int limit, int[] values)",
    "returnType" : "int",
    "comment" : "\n     * Find dictionary words that match the text.\n     * \n     * @param text A CharacterIterator representing the text. The iterator is\n     *            left after the longest prefix match in the dictionary.\n     * @param maxLength The maximum number of code units to match.\n     * @param lengths An array that is filled with the lengths of words that matched.\n     * @param count Filled with the number of elements output in lengths.\n     * @param limit The maximum amount of words to output. Must be less than or equal to lengths.length.\n     * @param values Filled with the weight values associated with the various words.\n     * @return The number of characters in text that were matched.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int matches(CharacterIterator text, int maxLength, int[] lengths, int[] count, int limit)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract int getType()",
    "returnType" : "int",
    "comment" : "\n     * @return the kind of dictionary that this matcher is using\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract int matches(CharacterIterator text, int maxLength, int[] lengths, int[] count, int limit, int[] values)", "public int matches(CharacterIterator text, int maxLength, int[] lengths, int[] count, int limit)", "public abstract int getType()" ],
  "variableNames" : [ ]
}