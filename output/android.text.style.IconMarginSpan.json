{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/text/style/IconMarginSpan.java",
  "packageName" : "android.text.style",
  "className" : "IconMarginSpan",
  "comment" : "\n * Paragraph affecting span, that draws a bitmap at the beginning of a text. The span also allows\n * setting a padding between the bitmap and the text. The default value of the padding is 0px. The\n * span should be attached from the first character of the text.\n * <p>\n * For example, an <code>IconMarginSpan</code> with a bitmap and a padding of 30px can be set\n * like this:\n * <pre>\n * SpannableString string = new SpannableString(\"Text with icon and padding\");\n * string.setSpan(new IconMarginSpan(bitmap, 30), 0, string.length(),\n * Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n * </pre>\n * <img src=\"{@docRoot}reference/android/images/text/style/iconmarginspan.png\" />\n * <figcaption>Text with <code>IconMarginSpan</code></figcaption>\n * <p>\n *\n * @see DrawableMarginSpan for working with a {@link android.graphics.drawable.Drawable} instead of\n * a {@link Bitmap}.\n ",
  "variables" : [ {
    "name" : "mBitmap",
    "type" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPad",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getLeadingMargin(boolean first)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void drawLeadingMargin(Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout layout)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void chooseHeight(CharSequence text, int start, int end, int istartv, int v, Paint.FontMetricsInt fm)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mBitmap", "mPad" ],
  "methodNames" : [ "public int getLeadingMargin(boolean first)", "public void drawLeadingMargin(Canvas c, Paint p, int x, int dir, int top, int baseline, int bottom, CharSequence text, int start, int end, boolean first, Layout layout)", "public void chooseHeight(CharSequence text, int start, int end, int istartv, int v, Paint.FontMetricsInt fm)" ]
}