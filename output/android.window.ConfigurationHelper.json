{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/ConfigurationHelper.java",
  "packageName" : "android.window",
  "className" : "ConfigurationHelper",
  "comment" : "\n * A helper class to maintain {@link android.content.res.Configuration} related methods used both\n * in {@link android.app.Activity} and {@link WindowContext}.\n *\n * @hide\n ",
  "links" : [ "android.content.res.Configuration", "android.window.WindowContext", "android.app.Activity" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static void freeTextLayoutCachesIfNeeded(int configDiff)",
    "returnType" : "void",
    "comment" : " Ask text layout engine to free its caches if there is a locale change. ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldUpdateResources(IBinder token, @Nullable Configuration config, @NonNull Configuration newConfig, @NonNull Configuration overrideConfig, boolean displayChanged, @Nullable Boolean configChanged)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if the {@link android.content.res.Resources} associated with\n     * a {@code token} needs to be updated.\n     *\n     * @param token A {@link Context#getActivityToken() activity token} or\n     * {@link Context#getWindowContextToken() window context token}\n     * @param config The original {@link Configuration}\n     * @param newConfig The updated Configuration\n     * @param displayChanged a flag to indicate there's a display change\n     * @param configChanged a flag to indicate there's a Configuration change.\n     *\n     * @see ResourcesManager#updateResourcesForActivity(IBinder, Configuration, int)\n     ",
    "links" : [ "android.app.WindowConfiguration", "android.content.Context#getWindowContextToken()", "android.content.Context#getActivityToken()", "android.content.res.Resources" ]
  }, {
    "name" : "public static boolean isDifferentDisplay(int displayId, int newDisplayId)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if {@code displayId} is different from {@code newDisplayId}.\n     * Note that {@link Display#INVALID_DISPLAY} means no difference.\n     ",
    "links" : [ "android.view.Display#INVALID_DISPLAY" ]
  }, {
    "name" : "private static boolean shouldUpdateWindowMetricsBounds(@NonNull Configuration currentConfig, @NonNull Configuration newConfig)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if the metrics reported by {@link android.view.WindowMetrics} APIs\n     * should be updated.\n     *\n     * @see WindowManager#getCurrentWindowMetrics()\n     * @see WindowManager#getMaximumWindowMetrics()\n     ",
    "links" : [ "android.view.WindowMetrics" ]
  }, {
    "name" : "private static boolean isDisplayRotationChanged(@NonNull Configuration config, @NonNull Configuration newConfig)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void freeTextLayoutCachesIfNeeded(int configDiff)", "public static boolean shouldUpdateResources(IBinder token, @Nullable Configuration config, @NonNull Configuration newConfig, @NonNull Configuration overrideConfig, boolean displayChanged, @Nullable Boolean configChanged)", "public static boolean isDifferentDisplay(int displayId, int newDisplayId)", "private static boolean shouldUpdateWindowMetricsBounds(@NonNull Configuration currentConfig, @NonNull Configuration newConfig)", "private static boolean isDisplayRotationChanged(@NonNull Configuration config, @NonNull Configuration newConfig)" ],
  "variableNames" : [ ]
}