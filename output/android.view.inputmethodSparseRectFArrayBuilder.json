{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/inputmethod/SparseRectFArray.java",
  "packageName" : "android.view.inputmethod",
  "className" : "SparseRectFArrayBuilder",
  "comment" : "\n     * Builder for {@link SparseRectFArray}. This class is not designed to be thread-safe.\n     * @hide\n     ",
  "variables" : [ {
    "name" : "mCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeys",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCoordinates",
    "type" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlagsArray",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INITIAL_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void checkIndex(final int key)",
    "returnType" : "void",
    "comment" : "\n         * Throws {@link IllegalArgumentException} to make sure that this class is correctly used.\n         * @param key key to be checked.\n         ",
    "links" : [ "IllegalArgumentException" ]
  }, {
    "name" : "private void ensureBufferSize()",
    "returnType" : "void",
    "comment" : "\n         * Extends the internal array if necessary.\n         ",
    "links" : [ ]
  }, {
    "name" : "public SparseRectFArrayBuilder append(final int key, final float left, final float top, final float right, final float bottom, final int flags)",
    "returnType" : "SparseRectFArrayBuilder",
    "comment" : "\n         * Puts the rectangle with an integer key.\n         * @param key the key to be associated with the rectangle. It must be greater than all\n         * existing keys that have been previously specified.\n         * @param left left of the rectangle.\n         * @param top top of the rectangle.\n         * @param right right of the rectangle.\n         * @param bottom bottom of the rectangle.\n         * @param flags an arbitrary integer value to be associated with this rectangle.\n         * @return the receiver object itself for chaining method calls.\n         * @throws IllegalArgumentException If the index is not greater than all of existing keys.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SparseRectFArray build()",
    "returnType" : "SparseRectFArray",
    "comment" : "\n         * @return {@link SparseRectFArray} using parameters in this {@link SparseRectFArray}.\n         ",
    "links" : [ "SparseRectFArray", "SparseRectFArray" ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mCount", "mKeys", "mCoordinates", "mFlagsArray", "INITIAL_SIZE" ],
  "methodNames" : [ "private void checkIndex(final int key)", "private void ensureBufferSize()", "public SparseRectFArrayBuilder append(final int key, final float left, final float top, final float right, final float bottom, final int flags)", "public boolean isEmpty()", "public SparseRectFArray build()", "public void reset()" ]
}