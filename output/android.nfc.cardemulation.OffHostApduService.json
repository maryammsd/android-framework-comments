{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/nfc/cardemulation/OffHostApduService.java",
  "packageName" : "android.nfc.cardemulation",
  "className" : "OffHostApduService",
  "comment" : "\n * <p>OffHostApduService is a convenience {@link Service} class that can be\n * extended to describe one or more NFC applications that are residing\n * off-host, for example on an embedded secure element or a UICC.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guide</h3>\n * For a general introduction into the topic of card emulation,\n * please read the <a href=\"{@docRoot}guide/topics/connectivity/nfc/hce.html\">\n * NFC card emulation developer guide.</a></p>\n * </div>\n *\n * <h3>NFC Protocols</h3>\n * <p>Off-host applications represented by this class are based on the NFC-Forum ISO-DEP\n * protocol (based on ISO/IEC 14443-4) and support processing\n * command Application Protocol Data Units (APDUs) as\n * defined in the ISO/IEC 7816-4 specification.\n *\n * <h3>Service selection</h3>\n * <p>When a remote NFC device wants to talk to your\n * off-host NFC application, it sends a so-called\n * \"SELECT AID\" APDU as defined in the ISO/IEC 7816-4 specification.\n * The AID is an application identifier defined in ISO/IEC 7816-4.\n *\n * <p>The registration procedure for AIDs is defined in the\n * ISO/IEC 7816-5 specification. If you don't want to register an\n * AID, you are free to use AIDs in the proprietary range:\n * bits 8-5 of the first byte must each be set to '1'. For example,\n * \"0xF00102030405\" is a proprietary AID. If you do use proprietary\n * AIDs, it is recommended to choose an AID of at least 6 bytes,\n * to reduce the risk of collisions with other applications that\n * might be using proprietary AIDs as well.\n *\n * <h3>AID groups</h3>\n * <p>In some cases, an off-host environment may need to register multiple AIDs\n * to implement a certain application, and it needs to be sure\n * that it is the default handler for all of these AIDs (as opposed\n * to some AIDs in the group going to another service).\n *\n * <p>An AID group is a list of AIDs that should be considered as\n * belonging together by the OS. For all AIDs in an AID group, the\n * OS will guarantee one of the following:\n * <ul>\n * <li>All AIDs in the group are routed to the off-host execution environment\n * <li>No AIDs in the group are routed to the off-host execution environment\n * </ul>\n * In other words, there is no in-between state, where some AIDs\n * in the group can be routed to this off-host execution environment,\n * and some to another or a host-based {@link HostApduService}.\n * <h3>AID groups and categories</h3>\n * <p>Each AID group can be associated with a category. This allows\n * the Android OS to classify services, and it allows the user to\n * set defaults at the category level instead of the AID level.\n *\n * <p>You can use\n * {@link CardEmulation#isDefaultServiceForCategory(android.content.ComponentName, String)}\n * to determine if your off-host service is the default handler for a category.\n *\n * <p>In this version of the platform, the only known categories\n * are {@link CardEmulation#CATEGORY_PAYMENT} and {@link CardEmulation#CATEGORY_OTHER}.\n * AID groups without a category, or with a category that is not recognized\n * by the current platform version, will automatically be\n * grouped into the {@link CardEmulation#CATEGORY_OTHER} category.\n *\n * <h3>Service AID registration</h3>\n * <p>To tell the platform which AIDs\n * reside off-host and are managed by this service, a {@link #SERVICE_META_DATA}\n * entry must be included in the declaration of the service. An\n * example of a OffHostApduService manifest declaration is shown below:\n * <pre> &lt;service android:name=\".MyOffHostApduService\" android:exported=\"true\" android:permission=\"android.permission.BIND_NFC_SERVICE\"&gt;\n *     &lt;intent-filter&gt;\n *         &lt;action android:name=\"android.nfc.cardemulation.action.OFF_HOST_APDU_SERVICE\"/&gt;\n *     &lt;/intent-filter&gt;\n *     &lt;meta-data android:name=\"android.nfc.cardemulation.off_host_apdu_ervice\" android:resource=\"@xml/apduservice\"/&gt;\n * &lt;/service&gt;</pre>\n *\n * This meta-data tag points to an apduservice.xml file.\n * An example of this file with a single AID group declaration is shown below:\n * <pre>\n * &lt;offhost-apdu-service xmlns:android=\"http://schemas.android.com/apk/res/android\"\n *           android:description=\"@string/servicedesc\"&gt;\n *       &lt;aid-group android:description=\"@string/subscription\" android:category=\"other\">\n *           &lt;aid-filter android:name=\"F0010203040506\"/&gt;\n *           &lt;aid-filter android:name=\"F0394148148100\"/&gt;\n *       &lt;/aid-group&gt;\n * &lt;/offhost-apdu-service&gt;\n * </pre>\n *\n * <p>The {@link android.R.styleable#OffHostApduService &lt;offhost-apdu-service&gt;} is required\n * to contain a\n * {@link android.R.styleable#OffHostApduService_description &lt;android:description&gt;}\n * attribute that contains a user-friendly description of the service that may be shown in UI.\n *\n * <p>The {@link android.R.styleable#OffHostApduService &lt;offhost-apdu-service&gt;} must\n * contain one or more {@link android.R.styleable#AidGroup &lt;aid-group&gt;} tags.\n * Each {@link android.R.styleable#AidGroup &lt;aid-group&gt;} must contain one or\n * more {@link android.R.styleable#AidFilter &lt;aid-filter&gt;} tags, each of which\n * contains a single AID. The AID must be specified in hexadecimal format, and contain\n * an even number of characters.\n *\n * <p>This registration will allow the service to be included\n * as an option for being the default handler for categories.\n * The Android OS will take care of correctly\n * routing the AIDs to the off-host execution environment,\n * based on which service the user has selected to be the handler for a certain category.\n *\n * <p>The service may define additional actions outside of the\n * Android namespace that provide further interaction with\n * the off-host execution environment.\n *\n * <p class=\"note\">Use of this class requires the\n * {@link PackageManager#FEATURE_NFC_HOST_CARD_EMULATION} to be present\n * on the device.\n ",
  "links" : [ "#SERVICE_META_DATA", "android.R.styleable#AidFilter", "android.nfc.cardemulation.CardEmulation#isDefaultServiceForCategory(android.content.ComponentName", "android.R.styleable#OffHostApduService_description", "android.app.Service", "android.nfc.cardemulation.HostApduService", "android.R.styleable#AidGroup", "android.R.styleable#OffHostApduService", "android.nfc.cardemulation.CardEmulation#CATEGORY_PAYMENT", "android.nfc.cardemulation.CardEmulation#CATEGORY_OTHER", "android.content.pm.PackageManager#FEATURE_NFC_HOST_CARD_EMULATION" ],
  "variables" : [ {
    "name" : "SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The {@link Intent} action that must be declared as handled by the service.\n     ",
    "links" : [ "android.content.Intent" ]
  }, {
    "name" : "SERVICE_META_DATA",
    "type" : "String",
    "comment" : "\n     * The name of the meta-data element that contains\n     * more information about this service.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract IBinder onBind(Intent intent)",
    "returnType" : "IBinder",
    "comment" : "\n     * The Android platform itself will not bind to this service,\n     * but merely uses its declaration to keep track of what AIDs\n     * the service is interested in. This information is then used\n     * to present the user with a list of applications that can handle\n     * an AID, as well as correctly route those AIDs either to the host (in case\n     * the user preferred a {@link HostApduService}), or to an off-host\n     * execution environment (in case the user preferred a {@link OffHostApduService}.\n     *\n     * Implementers may define additional actions outside of the\n     * Android namespace that allow further interactions with\n     * the off-host execution environment. Such implementations\n     * would need to override this method.\n     ",
    "links" : [ "android.nfc.cardemulation.OffHostApduService", "android.nfc.cardemulation.HostApduService" ]
  } ],
  "methodNames" : [ "public abstract IBinder onBind(Intent intent)" ],
  "variableNames" : [ "SERVICE_INTERFACE", "SERVICE_META_DATA" ]
}