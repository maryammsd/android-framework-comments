{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/renderscript/Int3.java",
  "packageName" : "android.renderscript",
  "className" : "Int3",
  "comment" : "\n * Vector version of the basic int type.\n * Provides three int fields packed.\n *\n * @deprecated Renderscript has been deprecated in API level 31. Please refer to the <a\n * href=\"https://developer.android.com/guide/topics/renderscript/migration-guide\">migration\n * guide</a> for the proposed alternatives.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "x",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "y",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "z",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void add(Int3 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 add(Int3 a, Int3 b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void add(int value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 add(Int3 a, int b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sub(Int3 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 sub(Int3 a, Int3 b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sub(int value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 sub(Int3 a, int b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mul(Int3 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 mul(Int3 a, Int3 b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mul(int value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 mul(Int3 a, int b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void div(Int3 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 div(Int3 a, Int3 b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void div(int value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 div(Int3 a, int b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mod(Int3 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector Modulo\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 mod(Int3 a, Int3 b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector Modulo\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mod(int value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector Modulo\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Int3 mod(Int3 a, int b)",
    "returnType" : "Int3",
    "comment" : " @hide\n     * Vector Modulo\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public int length()",
    "returnType" : "int",
    "comment" : " @hide\n     * get vector length\n     *\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void negate()",
    "returnType" : "void",
    "comment" : " @hide\n     * set vector negate\n     ",
    "links" : [ ]
  }, {
    "name" : "public int dotProduct(Int3 a)",
    "returnType" : "int",
    "comment" : " @hide\n     * Vector dot Product\n     *\n     * @param a\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int dotProduct(Int3 a, Int3 b)",
    "returnType" : "int",
    "comment" : " @hide\n     * Vector dot Product\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addMultiple(Int3 a, int factor)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add Multiple\n     *\n     * @param a\n     * @param factor\n     ",
    "links" : [ ]
  }, {
    "name" : "public void set(Int3 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * set vector value by Int3\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setValues(int a, int b, int c)",
    "returnType" : "void",
    "comment" : " @hide\n     * set the vector field value by Int\n     *\n     * @param a\n     * @param b\n     * @param c\n     ",
    "links" : [ ]
  }, {
    "name" : "public int elementSum()",
    "returnType" : "int",
    "comment" : " @hide\n     * return the element sum of vector\n     *\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public int get(int i)",
    "returnType" : "int",
    "comment" : " @hide\n     * get the vector field value by index\n     *\n     * @param i\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAt(int i, int value)",
    "returnType" : "void",
    "comment" : " @hide\n     * set the vector field value by index\n     *\n     * @param i\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addAt(int i, int value)",
    "returnType" : "void",
    "comment" : " @hide\n     * add the vector field value by index\n     *\n     * @param i\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public void copyTo(int[] data, int offset)",
    "returnType" : "void",
    "comment" : " @hide\n     * copy the vector to int array\n     *\n     * @param data\n     * @param offset\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void add(Int3 a)", "public static Int3 add(Int3 a, Int3 b)", "public void add(int value)", "public static Int3 add(Int3 a, int b)", "public void sub(Int3 a)", "public static Int3 sub(Int3 a, Int3 b)", "public void sub(int value)", "public static Int3 sub(Int3 a, int b)", "public void mul(Int3 a)", "public static Int3 mul(Int3 a, Int3 b)", "public void mul(int value)", "public static Int3 mul(Int3 a, int b)", "public void div(Int3 a)", "public static Int3 div(Int3 a, Int3 b)", "public void div(int value)", "public static Int3 div(Int3 a, int b)", "public void mod(Int3 a)", "public static Int3 mod(Int3 a, Int3 b)", "public void mod(int value)", "public static Int3 mod(Int3 a, int b)", "public int length()", "public void negate()", "public int dotProduct(Int3 a)", "public static int dotProduct(Int3 a, Int3 b)", "public void addMultiple(Int3 a, int factor)", "public void set(Int3 a)", "public void setValues(int a, int b, int c)", "public int elementSum()", "public int get(int i)", "public void setAt(int i, int value)", "public void addAt(int i, int value)", "public void copyTo(int[] data, int offset)" ],
  "variableNames" : [ "x", "y", "z" ]
}