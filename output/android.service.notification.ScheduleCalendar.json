{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/notification/ScheduleCalendar.java",
  "packageName" : "android.service.notification",
  "className" : "ScheduleCalendar",
  "comment" : "\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDays",
    "type" : "ArraySet<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCalendar",
    "type" : "Calendar",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchedule",
    "type" : "ScheduleInfo",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean exitAtAlarm()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if schedule will exit on alarm, else false\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSchedule(ScheduleInfo schedule)",
    "returnType" : "void",
    "comment" : "\n     * Sets schedule information\n     ",
    "links" : [ ]
  }, {
    "name" : "public void maybeSetNextAlarm(long now, long nextAlarm)",
    "returnType" : "void",
    "comment" : "\n     * Sets next alarm of the schedule if the saved next alarm has passed or is further\n     * in the future than given nextAlarm\n     * @param now current time in milliseconds\n     * @param nextAlarm time of next alarm in milliseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setTimeZone(TimeZone tz)",
    "returnType" : "void",
    "comment" : "\n     * Set calendar time zone to tz\n     * @param tz current time zone\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getNextChangeTime(long now)",
    "returnType" : "long",
    "comment" : "\n     * @param now current time in milliseconds\n     * @return next time this rule changes (starts or ends)\n     ",
    "links" : [ ]
  }, {
    "name" : "private long getNextTime(long now, int hr, int min)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private long getTime(long millis, int hour, int min)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isInSchedule(long time)",
    "returnType" : "boolean",
    "comment" : "\n     * @param time milliseconds since Epoch\n     * @return true if time is within the schedule, else false\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAlarmInSchedule(long alarm, long now)",
    "returnType" : "boolean",
    "comment" : "\n     * @param alarm milliseconds since Epoch\n     * @param now milliseconds since Epoch\n     * @return true if alarm and now is within the schedule, else false\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean shouldExitForAlarm(long time)",
    "returnType" : "boolean",
    "comment" : "\n     * @param time milliseconds since Epoch\n     * @return true if should exit at time for next alarm, else false\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean isInSchedule(int daysOffset, long time, long start, long end)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getDayOfWeek(long time)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateDays()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private long addDays(long time, int days)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DEBUG", "mDays", "mCalendar", "mSchedule" ],
  "methodNames" : [ "public String toString()", "public boolean exitAtAlarm()", "public void setSchedule(ScheduleInfo schedule)", "public void maybeSetNextAlarm(long now, long nextAlarm)", "public void setTimeZone(TimeZone tz)", "public long getNextChangeTime(long now)", "private long getNextTime(long now, int hr, int min)", "private long getTime(long millis, int hour, int min)", "public boolean isInSchedule(long time)", "public boolean isAlarmInSchedule(long alarm, long now)", "public boolean shouldExitForAlarm(long time)", "private boolean isInSchedule(int daysOffset, long time, long start, long end)", "private int getDayOfWeek(long time)", "private void updateDays()", "private long addDays(long time, int days)" ]
}