{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/InstantAppInfo.java",
  "packageName" : "android.content.pm",
  "className" : "InstantAppInfo",
  "comment" : "\n * This class represents the state of an instant app. Instant apps can\n * be installed or uninstalled. If the app is installed you can call\n * {@link #getApplicationInfo()} to get the app info, otherwise this\n * class provides APIs to get basic app info for showing it in the UI,\n * such as permissions, label, package name.\n *\n * @hide\n ",
  "links" : [ "#getApplicationInfo()" ],
  "variables" : [ {
    "name" : "mApplicationInfo",
    "type" : "ApplicationInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLabelText",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestedPermissions",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGrantedPermissions",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<InstantAppInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ApplicationInfo getApplicationInfo()",
    "returnType" : "ApplicationInfo",
    "comment" : "\n     * @return The application info if the app is installed,\n     *     <code>null</code> otherwise,\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n     * @return The package name.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence loadLabel(@NonNull PackageManager packageManager)",
    "returnType" : "CharSequence",
    "comment" : "\n     * @param packageManager Package manager for loading resources.\n     * @return Loads the label if the app is installed or returns the cached one otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Drawable loadIcon(@NonNull PackageManager packageManager)",
    "returnType" : "Drawable",
    "comment" : "\n     * @param packageManager Package manager for loading resources.\n     * @return Loads the icon if the app is installed or returns the cached one otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String[] getRequestedPermissions()",
    "returnType" : "String[]",
    "comment" : "\n     * @return The requested permissions.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String[] getGrantedPermissions()",
    "returnType" : "String[]",
    "comment" : "\n     * @return The granted permissions.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ApplicationInfo getApplicationInfo()", "public String getPackageName()", "public CharSequence loadLabel(@NonNull PackageManager packageManager)", "public Drawable loadIcon(@NonNull PackageManager packageManager)", "public String[] getRequestedPermissions()", "public String[] getGrantedPermissions()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ],
  "variableNames" : [ "mApplicationInfo", "mPackageName", "mLabelText", "mRequestedPermissions", "mGrantedPermissions", "CREATOR" ]
}