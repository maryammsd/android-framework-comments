{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/renderscript/ScriptIntrinsicBlur.java",
  "packageName" : "android.renderscript",
  "className" : "ScriptIntrinsicBlur",
  "comment" : "\n * Intrinsic Gausian blur filter. Applies a gaussian blur of the\n * specified radius to all elements of an allocation.\n *\n *\n *",
  "variables" : [ {
    "name" : "mValues",
    "type" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInput",
    "type" : "Allocation",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static ScriptIntrinsicBlur create(RenderScript rs, Element e)",
    "returnType" : "ScriptIntrinsicBlur",
    "comment" : "\n     * Create an intrinsic for applying a blur to an allocation. The\n     * default radius is 5.0.\n     *\n     * Supported elements types are {@link Element#U8},\n     * {@link Element#U8_4}.\n     *\n     * @param rs The RenderScript context\n     * @param e Element type for inputs and outputs\n     *\n     * @return ScriptIntrinsicBlur\n     ",
    "links" : [ "Element#U8", "Element#U8_4" ]
  }, {
    "name" : "public void setInput(Allocation ain)",
    "returnType" : "void",
    "comment" : "\n     * Set the input of the blur.\n     * Must match the element type supplied during create.\n     *\n     * @param ain The input allocation\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setRadius(float radius)",
    "returnType" : "void",
    "comment" : "\n     * Set the radius of the Blur.\n     *\n     * Supported range 0 < radius <= 25\n     *\n     * @param radius The radius of the blur\n     ",
    "links" : [ ]
  }, {
    "name" : "public void forEach(Allocation aout)",
    "returnType" : "void",
    "comment" : "\n     * Apply the filter to the input and save to the specified\n     * allocation.\n     *\n     * @param aout Output allocation. Must match creation element\n     *             type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void forEach(Allocation aout, Script.LaunchOptions opt)",
    "returnType" : "void",
    "comment" : "\n     * Apply the filter to the input and save to the specified\n     * allocation.\n     *\n     * @param aout Output allocation. Must match creation element\n     *             type.\n     * @param opt LaunchOptions for clipping\n     ",
    "links" : [ ]
  }, {
    "name" : "public Script.KernelID getKernelID()",
    "returnType" : "Script.KernelID",
    "comment" : "\n     * Get a KernelID for this intrinsic kernel.\n     *\n     * @return Script.KernelID The KernelID object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Script.FieldID getFieldID_Input()",
    "returnType" : "Script.FieldID",
    "comment" : "\n     * Get a FieldID for the input field of this intrinsic.\n     *\n     * @return Script.FieldID The FieldID object.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mValues", "mInput" ],
  "methodNames" : [ "public static ScriptIntrinsicBlur create(RenderScript rs, Element e)", "public void setInput(Allocation ain)", "public void setRadius(float radius)", "public void forEach(Allocation aout)", "public void forEach(Allocation aout, Script.LaunchOptions opt)", "public Script.KernelID getKernelID()", "public Script.FieldID getFieldID_Input()" ]
}