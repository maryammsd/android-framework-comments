{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/adselection/RemoveAdCounterHistogramOverrideInput.java",
  "packageName" : "android.adservices.adselection",
  "className" : "RemoveAdCounterHistogramOverrideInput",
  "comment" : "\n * Input object for removing ad counter histogram overrides.\n *\n * <p>Histogram overrides replace actual ad counter histograms used in ad selection. Overrides may\n * only be set in debuggable apps on phones running a debuggable OS build with developer options\n * enabled. Overrides are only available from the calling app.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mAdEventType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAdCounterKey",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBuyer",
    "type" : "AdTechIdentifier",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<RemoveAdCounterHistogramOverrideInput>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getAdEventType()",
    "returnType" : "int",
    "comment" : "\n     * Gets the {@link FrequencyCapFilters.AdEventType} for the ad counter histogram override.\n     *\n     * <p>The ad event type is used with the ad counter key from {@link #getAdCounterKey()} and the\n     * buyer adtech from {@link #getBuyer()} to specify which histogram to use in ad selection\n     * filtering. The ad event type would normally be specified by an app/SDK after a\n     * FLEDGE-selected ad is rendered.\n     ",
    "links" : [ "#getAdCounterKey()", "FrequencyCapFilters.AdEventType", "#getBuyer()" ]
  }, {
    "name" : "public int getAdCounterKey()",
    "returnType" : "int",
    "comment" : "\n     * Gets the ad counter key for the ad counter histogram override.\n     *\n     * <p>The ad counter key is used with the ad event type from {@link #getAdEventType()} and the\n     * buyer adtech from {@link #getBuyer()} to specify which histogram to use in ad selection\n     * filtering. The ad counter key would normally be specified by a custom audience ad to\n     * represent a grouping to filter on.\n     ",
    "links" : [ "#getBuyer()", "#getAdEventType()" ]
  }, {
    "name" : "public AdTechIdentifier getBuyer()",
    "returnType" : "AdTechIdentifier",
    "comment" : "\n     * Gets the {@link AdTechIdentifier} for the buyer which owns the ad counter histogram.\n     *\n     * <p>During filtering in FLEDGE ad selection, ads can only use ad counter histogram data\n     * generated by the same buyer. For {@link FrequencyCapFilters#AD_EVENT_TYPE_WIN}, ad counter\n     * histogram data is further restricted to ads from the same custom audience, which is\n     * identified by the buyer, the custom audience's owner app package name, and the custom\n     * audience name.\n     ",
    "links" : [ "android.adservices.common.AdTechIdentifier", "android.adservices.common.FrequencyCapFilters#AD_EVENT_TYPE_WIN" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getAdEventType()", "public int getAdCounterKey()", "public AdTechIdentifier getBuyer()", "public int describeContents()", "public String toString()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "mAdEventType", "mAdCounterKey", "mBuyer", "CREATOR" ]
}