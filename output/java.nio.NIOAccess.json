{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/NIOAccess.java",
  "packageName" : "java.nio",
  "className" : "NIOAccess",
  "comment" : " @VisibleForTesting : was default",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static long getBasePointer(Buffer b)",
    "returnType" : "long",
    "comment" : " @VisibleForTesting : was default",
    "links" : [ ]
  }, {
    "name" : "public static Object getBaseArray(Buffer b)",
    "returnType" : "Object",
    "comment" : "\n     * Returns the underlying Java array containing the data of the\n     * given Buffer, or null if the Buffer is not backed by a Java array.\n     *\n     * @param b  {@code Buffer} to get its underlying data array\n     * @return   underlying Java array\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getBaseArrayOffset(Buffer b)",
    "returnType" : "int",
    "comment" : "\n     * Returns the offset in bytes from the start of the underlying\n     * Java array object containing the data of the given Buffer to\n     * the actual start of the data. The start of the data takes into\n     * account the Buffer's current position. This method is only\n     * meaningful if {@link #getBaseArray(Buffer)} returns non-null.\n     *\n     * @param b {@code Buffer} to get its underlying data array's base offset\n     * @return  underlying Java array's base offset\n     *\n     * @hide\n     ",
    "links" : [ "#getBaseArray(Buffer)" ]
  } ],
  "methodNames" : [ "public static long getBasePointer(Buffer b)", "public static Object getBaseArray(Buffer b)", "public static int getBaseArrayOffset(Buffer b)" ],
  "variableNames" : [ ]
}