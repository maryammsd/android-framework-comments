{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/customaudience/CustomAudience.java",
  "packageName" : "android.adservices.customaudience",
  "className" : "CustomAudience",
  "comment" : "\n * Represents the information necessary for a custom audience to participate in ad selection.\n *\n * <p>A custom audience is an abstract grouping of users with similar demonstrated interests. This\n * class is a collection of some data stored on a device that is necessary to serve advertisements\n * targeting a single custom audience.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "FLAG_AUCTION_SERVER_REQUEST_DEFAULT",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "FLAG_AUCTION_SERVER_REQUEST_OMIT_ADS",
    "type" : "int",
    "comment" : "\n     * This auction server request flag indicates to the service that ads for this {@link\n     * CustomAudience} can be omitted in the server auction payload.\n     ",
    "links" : [ "android.adservices.customaudience.CustomAudience" ]
  }, {
    "name" : "mBuyer",
    "type" : "AdTechIdentifier",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActivationTime",
    "type" : "Instant",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExpirationTime",
    "type" : "Instant",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDailyUpdateUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserBiddingSignals",
    "type" : "AdSelectionSignals",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTrustedBiddingData",
    "type" : "TrustedBiddingData",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBiddingLogicUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAds",
    "type" : "List<AdData>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAuctionServerRequestFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<CustomAudience>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public AdTechIdentifier getBuyer()",
    "returnType" : "AdTechIdentifier",
    "comment" : "\n     * A buyer is identified by a domain in the form \"buyerexample.com\".\n     *\n     * @return an {@link AdTechIdentifier} containing the custom audience's buyer's domain\n     ",
    "links" : [ "android.adservices.common.AdTechIdentifier" ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * The custom audience's name is an arbitrary string provided by the owner and buyer on creation\n     * of the {@link CustomAudience} object.\n     *\n     * <p>The overall size of the CA is limited and the size of this field is considered using\n     * {@link String#getBytes()} in {@code UTF-8} encoding.\n     *\n     * @return the String name of the custom audience\n     ",
    "links" : [ "#getBytes()", "android.adservices.customaudience.CustomAudience" ]
  }, {
    "name" : "public Instant getActivationTime()",
    "returnType" : "Instant",
    "comment" : "\n     * On creation of the {@link CustomAudience} object, an optional activation time may be set in\n     * the future, in order to serve a delayed activation. If the field is not set, the {@link\n     * CustomAudience} will be activated at the time of joining.\n     *\n     * <p>For example, a custom audience for lapsed users may not activate until a threshold of\n     * inactivity is reached, at which point the custom audience's ads will participate in the ad\n     * selection process, potentially redirecting lapsed users to the original owner application.\n     *\n     * <p>The maximum delay in activation is 60 days from initial creation.\n     *\n     * <p>If specified, the activation time must be an earlier instant than the expiration time.\n     *\n     * @return the timestamp {@link Instant}, truncated to milliseconds, after which the custom\n     *     audience is active\n     ",
    "links" : [ "android.adservices.customaudience.CustomAudience", "java.time.Instant" ]
  }, {
    "name" : "public Instant getExpirationTime()",
    "returnType" : "Instant",
    "comment" : "\n     * Once the expiration time has passed, a custom audience is no longer eligible for daily\n     * ad/bidding data updates or participation in the ad selection process. The custom audience\n     * will then be deleted from memory by the next daily update.\n     *\n     * <p>If no expiration time is provided on creation of the {@link CustomAudience}, expiry will\n     * default to 60 days from activation.\n     *\n     * <p>The maximum expiry is 60 days from initial activation.\n     *\n     * @return the timestamp {@link Instant}, truncated to milliseconds, after which the custom\n     *     audience should be removed\n     ",
    "links" : [ "android.adservices.customaudience.CustomAudience", "java.time.Instant" ]
  }, {
    "name" : "public Uri getDailyUpdateUri()",
    "returnType" : "Uri",
    "comment" : "\n     * This URI points to a buyer-operated server that hosts updated bidding data and ads metadata\n     * to be used in the on-device ad selection process. The URI must use HTTPS.\n     *\n     * @return the custom audience's daily update URI\n     ",
    "links" : [ ]
  }, {
    "name" : "public AdSelectionSignals getUserBiddingSignals()",
    "returnType" : "AdSelectionSignals",
    "comment" : "\n     * User bidding signals are optionally provided by buyers to be consumed by buyer-provided\n     * JavaScript during ad selection in an isolated execution environment.\n     *\n     * <p>If the user bidding signals are not a valid JSON object that can be consumed by the\n     * buyer's JS, the custom audience will not be eligible for ad selection.\n     *\n     * <p>If not specified, the {@link CustomAudience} will not participate in ad selection until\n     * user bidding signals are provided via the daily update for the custom audience.\n     *\n     * @return an {@link AdSelectionSignals} object representing the user bidding signals for the\n     *     custom audience\n     ",
    "links" : [ "android.adservices.common.AdSelectionSignals", "android.adservices.customaudience.CustomAudience" ]
  }, {
    "name" : "public TrustedBiddingData getTrustedBiddingData()",
    "returnType" : "TrustedBiddingData",
    "comment" : "\n     * Trusted bidding data consists of a URI pointing to a trusted server for buyers' bidding data\n     * and a list of keys to query the server with. Note that the keys are arbitrary identifiers\n     * that will only be used to query the trusted server for a buyer's bidding logic during ad\n     * selection.\n     *\n     * <p>If not specified, the {@link CustomAudience} will not participate in ad selection until\n     * trusted bidding data are provided via the daily update for the custom audience.\n     *\n     * @return a {@link TrustedBiddingData} object containing the custom audience's trusted bidding\n     *     data\n     ",
    "links" : [ "android.adservices.customaudience.TrustedBiddingData", "android.adservices.customaudience.CustomAudience" ]
  }, {
    "name" : "public Uri getBiddingLogicUri()",
    "returnType" : "Uri",
    "comment" : "\n     * Returns the target URI used to fetch bidding logic when a custom audience participates in the\n     * ad selection process. The URI must use HTTPS.\n     *\n     * @return the URI for fetching buyer bidding logic\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<AdData> getAds()",
    "returnType" : "List<AdData>",
    "comment" : "\n     * This list of {@link AdData} objects is a full and complete list of the ads that will be\n     * served by this {@link CustomAudience} during the ad selection process.\n     *\n     * <p>If not specified, or if an empty list is provided, the {@link CustomAudience} will not\n     * participate in ad selection until a valid list of ads are provided via the daily update for\n     * the custom audience.\n     *\n     * <p>The combined ads size of the CA is limited and the sizes of each ad's string fields are\n     * considered using {@link String#getBytes()} in {@code UTF-8} encoding.\n     *\n     * @return a {@link List} of {@link AdData} objects representing ads currently served by the\n     *     custom audience\n     ",
    "links" : [ "java.util.List", "android.adservices.common.AdData", "#getBytes()", "android.adservices.customaudience.CustomAudience" ]
  }, {
    "name" : "public int getAuctionServerRequestFlags()",
    "returnType" : "int",
    "comment" : "\n     * Returns the bitfield of auction server request flags. These are flags that influence the\n     * creation of the payload generated by the {@link\n     * android.adservices.adselection.AdSelectionManager#getAdSelectionData(GetAdSelectionDataRequest,\n     * Executor, OutcomeReceiver)} API.\n     *\n     * <p>To create this bitfield, place an {@code |} bitwise operator between each {@link\n     * AuctionServerRequestFlag} to be enabled.\n     ",
    "links" : [ "AuctionServerRequestFlag", "android.adservices.adselection.AdSelectionManager#getAdSelectionData(GetAdSelectionDataRequest" ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether two {@link CustomAudience} objects contain the same information.\n     ",
    "links" : [ "android.adservices.customaudience.CustomAudience" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * Returns the hash of the {@link CustomAudience} object's data.\n     ",
    "links" : [ "android.adservices.customaudience.CustomAudience" ]
  } ],
  "methodNames" : [ "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public int describeContents()", "public AdTechIdentifier getBuyer()", "public String getName()", "public Instant getActivationTime()", "public Instant getExpirationTime()", "public Uri getDailyUpdateUri()", "public AdSelectionSignals getUserBiddingSignals()", "public TrustedBiddingData getTrustedBiddingData()", "public Uri getBiddingLogicUri()", "public List<AdData> getAds()", "public int getAuctionServerRequestFlags()", "public boolean equals(Object o)", "public int hashCode()" ],
  "variableNames" : [ "FLAG_AUCTION_SERVER_REQUEST_DEFAULT", "FLAG_AUCTION_SERVER_REQUEST_OMIT_ADS", "mBuyer", "mName", "mActivationTime", "mExpirationTime", "mDailyUpdateUri", "mUserBiddingSignals", "mTrustedBiddingData", "mBiddingLogicUri", "mAds", "mAuctionServerRequestFlags", "CREATOR" ]
}