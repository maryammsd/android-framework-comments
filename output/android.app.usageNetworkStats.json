{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/usage/NetworkStats.java",
  "packageName" : "android.app.usage",
  "className" : "NetworkStats",
  "comment" : "\n * Class providing enumeration over buckets of network usage statistics. {@link NetworkStats} objects\n * are returned as results to various queries in {@link NetworkStatsManager}.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCloseGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartTimeStamp",
    "type" : "long",
    "comment" : "\n     * Start timestamp of stats collected\n     ",
    "links" : [ ]
  }, {
    "name" : "mEndTimeStamp",
    "type" : "long",
    "comment" : "\n     * End timestamp of stats collected\n     ",
    "links" : [ ]
  }, {
    "name" : "mUids",
    "type" : "int[]",
    "comment" : "\n     * Non-null array indicates the query enumerates over uids.\n     ",
    "links" : [ ]
  }, {
    "name" : "mUidOrUidIndex",
    "type" : "int",
    "comment" : "\n     * Index of the current uid in mUids when doing uid enumeration or a single uid value,\n     * depending on query type.\n     ",
    "links" : [ ]
  }, {
    "name" : "mTag",
    "type" : "int",
    "comment" : "\n     * Tag id in case if was specified in the query.\n     ",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "int",
    "comment" : "\n     * State in case it was not specified in the query.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSession",
    "type" : "INetworkStatsSession",
    "comment" : "\n     * The session while the query requires it, null if all the stats have been collected or close()\n     * has been called.\n     ",
    "links" : [ ]
  }, {
    "name" : "mTemplate",
    "type" : "NetworkTemplate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSummary",
    "type" : "android.net.NetworkStats",
    "comment" : "\n     * Results of a summary query.\n     ",
    "links" : [ ]
  }, {
    "name" : "mHistory",
    "type" : "NetworkStatsHistory",
    "comment" : "\n     * Results of detail queries.\n     ",
    "links" : [ ]
  }, {
    "name" : "mEnumerationIndex",
    "type" : "int",
    "comment" : "\n     * Where we are in enumerating over the current result.\n     ",
    "links" : [ ]
  }, {
    "name" : "mRecycledSummaryEntry",
    "type" : "android.net.NetworkStats.Entry",
    "comment" : "\n     * Recycling entry objects to prevent heap fragmentation.\n     ",
    "links" : [ ]
  }, {
    "name" : "mRecycledHistoryEntry",
    "type" : "NetworkStatsHistory.Entry",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean getNextBucket(Bucket bucketOut)",
    "returnType" : "boolean",
    "comment" : "\n     * Fills the recycled bucket with data of the next bin in the enumeration.\n     * @param bucketOut Bucket to be filled with data.\n     * @return true if successfully filled the bucket, false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasNextBucket()",
    "returnType" : "boolean",
    "comment" : "\n     * Check if it is possible to ask for a next bucket in the enumeration.\n     * @return true if there is at least one more bucket.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Closes the enumeration. Call this method before this object gets out of scope.\n     ",
    "links" : [ ]
  }, {
    "name" : " Bucket getDeviceSummaryForNetwork() throws RemoteException",
    "returnType" : "Bucket",
    "comment" : "\n     * Collects device summary results into a Bucket.\n     * @throws RemoteException\n     ",
    "links" : [ ]
  }, {
    "name" : " void startSummaryEnumeration() throws RemoteException",
    "returnType" : "void",
    "comment" : "\n     * Collects summary results and sets summary enumeration mode.\n     * @throws RemoteException\n     ",
    "links" : [ ]
  }, {
    "name" : " void startHistoryEnumeration(int uid, int tag, int state)",
    "returnType" : "void",
    "comment" : "\n     * Collects history results for uid and resets history enumeration index.\n     ",
    "links" : [ ]
  }, {
    "name" : " void startUserUidEnumeration() throws RemoteException",
    "returnType" : "void",
    "comment" : "\n     * Starts uid enumeration for current user.\n     * @throws RemoteException\n     ",
    "links" : [ ]
  }, {
    "name" : "private void stepHistory()",
    "returnType" : "void",
    "comment" : "\n     * Steps to next uid in enumeration and collects history for that.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void fillBucketFromSummaryEntry(Bucket bucketOut)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean getNextSummaryBucket(Bucket bucketOut)",
    "returnType" : "boolean",
    "comment" : "\n     * Getting the next item in summary enumeration.\n     * @param bucketOut Next item will be set here.\n     * @return true if a next item could be set.\n     ",
    "links" : [ ]
  }, {
    "name" : " Bucket getSummaryAggregate()",
    "returnType" : "Bucket",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean getNextHistoryBucket(Bucket bucketOut)",
    "returnType" : "boolean",
    "comment" : "\n     * Getting the next item in a history enumeration.\n     * @param bucketOut Next item will be set here.\n     * @return true if a next item could be set.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean isUidEnumeration()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean hasNextUid()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getUid()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setSingleUidTagState(int uid, int tag, int state)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void stepUid()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mCloseGuard", "mStartTimeStamp", "mEndTimeStamp", "mUids", "mUidOrUidIndex", "mTag", "mState", "mSession", "mTemplate", "mSummary", "mHistory", "mEnumerationIndex", "mRecycledSummaryEntry", "mRecycledHistoryEntry" ],
  "methodNames" : [ "protected void finalize() throws Throwable", "public boolean getNextBucket(Bucket bucketOut)", "public boolean hasNextBucket()", "public void close()", " Bucket getDeviceSummaryForNetwork() throws RemoteException", " void startSummaryEnumeration() throws RemoteException", " void startHistoryEnumeration(int uid, int tag, int state)", " void startUserUidEnumeration() throws RemoteException", "private void stepHistory()", "private void fillBucketFromSummaryEntry(Bucket bucketOut)", "private boolean getNextSummaryBucket(Bucket bucketOut)", " Bucket getSummaryAggregate()", "private boolean getNextHistoryBucket(Bucket bucketOut)", "private boolean isUidEnumeration()", "private boolean hasNextUid()", "private int getUid()", "private void setSingleUidTagState(int uid, int tag, int state)", "private void stepUid()" ]
}