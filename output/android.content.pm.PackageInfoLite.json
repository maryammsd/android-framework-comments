{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/pm/PackageInfoLite.java",
  "packageName" : "android.content.pm",
  "className" : "PackageInfoLite",
  "comment" : "\n * Basic information about a package as specified in its manifest.\n * Utility class used in PackageManager methods\n * @hide\n ",
  "variables" : [ {
    "name" : "packageName",
    "type" : "String",
    "comment" : "\n     * The name of this package.  From the &lt;manifest&gt; tag's \"name\"\n     * attribute.\n     ",
    "links" : [ ]
  }, {
    "name" : "splitNames",
    "type" : "String[]",
    "comment" : " Names of any split APKs, ordered by parsed splitName ",
    "links" : [ ]
  }, {
    "name" : "versionCode",
    "type" : "int",
    "comment" : "\n     * The android:versionCode of the package.\n     * @deprecated Use {@link #getLongVersionCode()} instead, which includes both\n     * this and the additional\n     * {@link android.R.styleable#AndroidManifest_versionCode versionCodeMajor} attribute.\n     ",
    "links" : [ "#getLongVersionCode()", "android.R.styleable#AndroidManifest_versionCode" ]
  }, {
    "name" : "versionCodeMajor",
    "type" : "int",
    "comment" : "\n     * @hide\n     * The android:versionCodeMajor of the package.\n     ",
    "links" : [ ]
  }, {
    "name" : "baseRevisionCode",
    "type" : "int",
    "comment" : " Revision code of base APK ",
    "links" : [ ]
  }, {
    "name" : "splitRevisionCodes",
    "type" : "int[]",
    "comment" : " Revision codes of any split APKs, ordered by parsed splitName ",
    "links" : [ ]
  }, {
    "name" : "multiArch",
    "type" : "boolean",
    "comment" : "\n     * The android:multiArch flag from the package manifest. If set,\n     * we will extract all native libraries for the given app, not just those\n     * from the preferred ABI.\n     ",
    "links" : [ ]
  }, {
    "name" : "debuggable",
    "type" : "boolean",
    "comment" : "\n     * The android:debuggable flag from the package manifest.\n     ",
    "links" : [ ]
  }, {
    "name" : "recommendedInstallLocation",
    "type" : "int",
    "comment" : "\n     * Specifies the recommended install location. Can be one of\n     * {@link PackageHelper#RECOMMEND_INSTALL_INTERNAL} to install on internal storage,\n     * {@link PackageHelper#RECOMMEND_INSTALL_EXTERNAL} to install on external media,\n     * {@link PackageHelper#RECOMMEND_FAILED_INSUFFICIENT_STORAGE} for storage errors,\n     * or {@link PackageHelper#RECOMMEND_FAILED_INVALID_APK} for parse errors.\n     ",
    "links" : [ "com.android.internal.content.PackageHelper#RECOMMEND_INSTALL_EXTERNAL", "com.android.internal.content.PackageHelper#RECOMMEND_FAILED_INSUFFICIENT_STORAGE", "com.android.internal.content.PackageHelper#RECOMMEND_FAILED_INVALID_APK", "com.android.internal.content.PackageHelper#RECOMMEND_INSTALL_INTERNAL" ]
  }, {
    "name" : "installLocation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "verifiers",
    "type" : "VerifierInfo[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<PackageInfoLite>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getLongVersionCode()",
    "returnType" : "long",
    "comment" : "\n     * Return {@link #versionCode} and {@link #versionCodeMajor} combined together as a\n     * single long value.  The {@link #versionCodeMajor} is placed in the upper 32 bits.\n     ",
    "links" : [ "#versionCode", "#versionCodeMajor" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int parcelableFlags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "packageName", "splitNames", "versionCode", "versionCodeMajor", "baseRevisionCode", "splitRevisionCodes", "multiArch", "debuggable", "recommendedInstallLocation", "installLocation", "verifiers", "CREATOR" ],
  "methodNames" : [ "public long getLongVersionCode()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int parcelableFlags)" ]
}