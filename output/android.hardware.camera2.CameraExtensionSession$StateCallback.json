{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/CameraExtensionSession.java",
  "packageName" : "android.hardware.camera2",
  "className" : "StateCallback",
  "comment" : "\n     * A callback object for receiving updates about the state of a camera extension session.\n     *\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void onConfigured(@NonNull CameraExtensionSession session)",
    "returnType" : "void",
    "comment" : "\n         * This method is called when the camera device has finished configuring itself, and the\n         * session can start processing capture requests.\n         *\n         * <p>If the camera device configuration fails, then {@link #onConfigureFailed} will\n         * be invoked instead of this callback.</p>\n         *\n         * @param session A valid extension session\n         ",
    "links" : [ "#onConfigureFailed" ]
  }, {
    "name" : "public abstract void onConfigureFailed(@NonNull CameraExtensionSession session)",
    "returnType" : "void",
    "comment" : "\n         * This method is called if the session cannot be configured as requested.\n         *\n         * <p>This can happen if the set of requested outputs contains unsupported sizes,\n         * too many outputs are requested at once or when trying to initialize multiple\n         * concurrent extension sessions from two (or more) separate camera devices\n         * or the camera device encounters an unrecoverable error during configuration.</p>\n         *\n         * <p>The session is considered to be closed, and all methods called on it after this\n         * callback is invoked will throw an IllegalStateException.</p>\n         *\n         * @param session the session instance that failed to configure\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onClosed(@NonNull CameraExtensionSession session)",
    "returnType" : "void",
    "comment" : "\n         * This method is called when the session is closed.\n         *\n         * <p>A session is closed when a new session is created by the parent camera device,\n         * or when the parent camera device is closed (either by the user closing the device,\n         * or due to a camera device disconnection or fatal error).</p>\n         *\n         * <p>Once a session is closed, all methods on it will throw an IllegalStateException, and\n         * any repeating requests are stopped (as if {@link #stopRepeating()} was called).\n         * However, any in-progress capture requests submitted to the session will be completed\n         * as normal.</p>\n         *\n         * @param session the session received during\n         *                {@link StateCallback#onConfigured(CameraExtensionSession)}\n         ",
    "links" : [ "#onConfigured(CameraExtensionSession)", "#stopRepeating()" ]
  } ],
  "methodNames" : [ "public abstract void onConfigured(@NonNull CameraExtensionSession session)", "public abstract void onConfigureFailed(@NonNull CameraExtensionSession session)", "public void onClosed(@NonNull CameraExtensionSession session)" ],
  "variableNames" : [ ]
}