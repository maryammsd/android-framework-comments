{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/backup/BackupTransport.java",
  "packageName" : "android.app.backup",
  "className" : "TransportImpl",
  "comment" : "\n     * Bridge between the actual IBackupTransport implementation and the stable API.  If the\n     * binder interface needs to change, we use this layer to translate so that we can\n     * (if appropriate) decouple those framework-side changes from the BackupTransport\n     * implementations.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void name(AndroidFuture<String> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void configurationIntent(AndroidFuture<Intent> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void currentDestinationString(AndroidFuture<String> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dataManagementIntent(AndroidFuture<Intent> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dataManagementIntentLabel(AndroidFuture<CharSequence> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void transportDirName(AndroidFuture<String> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void requestBackupTime(AndroidFuture<Long> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void initializeDevice(ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void performBackup(PackageInfo packageInfo, ParcelFileDescriptor inFd, int flags, ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearBackupData(PackageInfo packageInfo, ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishBackup(ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getAvailableRestoreSets(AndroidFuture<List<RestoreSet>> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getCurrentRestoreSet(AndroidFuture<Long> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startRestore(long token, PackageInfo[] packages, ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void nextRestorePackage(AndroidFuture<RestoreDescription> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getRestoreData(ParcelFileDescriptor outFd, ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishRestore(ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void requestFullBackupTime(AndroidFuture<Long> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void performFullBackup(PackageInfo targetPackage, ParcelFileDescriptor socket, int flags, ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkFullBackupSize(long size, ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendBackupData(int numBytes, ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancelFullBackup(ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void isAppEligibleForBackup(PackageInfo targetPackage, boolean isFullBackup, AndroidFuture<Boolean> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getBackupQuota(String packageName, boolean isFullBackup, AndroidFuture<Long> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getTransportFlags(AndroidFuture<Integer> resultFuture) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getNextFullRestoreDataChunk(ParcelFileDescriptor socket, ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void abortFullRestore(ITransportStatusCallback callback) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getBackupManagerMonitor(AndroidFuture<IBackupManagerMonitor> resultFuture)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void name(AndroidFuture<String> resultFuture) throws RemoteException", "public void configurationIntent(AndroidFuture<Intent> resultFuture) throws RemoteException", "public void currentDestinationString(AndroidFuture<String> resultFuture) throws RemoteException", "public void dataManagementIntent(AndroidFuture<Intent> resultFuture) throws RemoteException", "public void dataManagementIntentLabel(AndroidFuture<CharSequence> resultFuture) throws RemoteException", "public void transportDirName(AndroidFuture<String> resultFuture) throws RemoteException", "public void requestBackupTime(AndroidFuture<Long> resultFuture) throws RemoteException", "public void initializeDevice(ITransportStatusCallback callback) throws RemoteException", "public void performBackup(PackageInfo packageInfo, ParcelFileDescriptor inFd, int flags, ITransportStatusCallback callback) throws RemoteException", "public void clearBackupData(PackageInfo packageInfo, ITransportStatusCallback callback) throws RemoteException", "public void finishBackup(ITransportStatusCallback callback) throws RemoteException", "public void getAvailableRestoreSets(AndroidFuture<List<RestoreSet>> resultFuture) throws RemoteException", "public void getCurrentRestoreSet(AndroidFuture<Long> resultFuture) throws RemoteException", "public void startRestore(long token, PackageInfo[] packages, ITransportStatusCallback callback) throws RemoteException", "public void nextRestorePackage(AndroidFuture<RestoreDescription> resultFuture) throws RemoteException", "public void getRestoreData(ParcelFileDescriptor outFd, ITransportStatusCallback callback) throws RemoteException", "public void finishRestore(ITransportStatusCallback callback) throws RemoteException", "public void requestFullBackupTime(AndroidFuture<Long> resultFuture) throws RemoteException", "public void performFullBackup(PackageInfo targetPackage, ParcelFileDescriptor socket, int flags, ITransportStatusCallback callback) throws RemoteException", "public void checkFullBackupSize(long size, ITransportStatusCallback callback) throws RemoteException", "public void sendBackupData(int numBytes, ITransportStatusCallback callback) throws RemoteException", "public void cancelFullBackup(ITransportStatusCallback callback) throws RemoteException", "public void isAppEligibleForBackup(PackageInfo targetPackage, boolean isFullBackup, AndroidFuture<Boolean> resultFuture) throws RemoteException", "public void getBackupQuota(String packageName, boolean isFullBackup, AndroidFuture<Long> resultFuture) throws RemoteException", "public void getTransportFlags(AndroidFuture<Integer> resultFuture) throws RemoteException", "public void getNextFullRestoreDataChunk(ParcelFileDescriptor socket, ITransportStatusCallback callback) throws RemoteException", "public void abortFullRestore(ITransportStatusCallback callback) throws RemoteException", "public void getBackupManagerMonitor(AndroidFuture<IBackupManagerMonitor> resultFuture)" ],
  "variableNames" : [ ]
}