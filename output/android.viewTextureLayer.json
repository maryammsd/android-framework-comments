{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/TextureLayer.java",
  "packageName" : "android.view",
  "className" : "TextureLayer",
  "comment" : "\n * TextureLayer represents a SurfaceTexture that will be composited by RenderThread into the\n * frame when drawn in a HW accelerated Canvas. This is backed by a DeferredLayerUpdater on\n * the native side.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mRenderer",
    "type" : "HardwareRenderer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFinalizer",
    "type" : "VirtualRefBasePtr",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setLayerPaint(@Nullable Paint paint)",
    "returnType" : "void",
    "comment" : "\n     * Update the paint used when drawing this layer.\n     *\n     * @param paint The paint used when the layer is drawn into the destination canvas.\n     * @see View#setLayerPaint(android.graphics.Paint)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isValid()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether this layer can be rendered.\n     *\n     * @return True if the layer can be rendered into, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "\n     * Destroys resources without waiting for a GC.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getDeferredLayerUpdater()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean copyInto(Bitmap bitmap)",
    "returnType" : "boolean",
    "comment" : "\n     * Copies this layer into the specified bitmap.\n     *\n     * @param bitmap The bitmap to copy they layer into\n     *\n     * @return True if the copy was successful, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean prepare(int width, int height, boolean isOpaque)",
    "returnType" : "boolean",
    "comment" : "\n     * Update the layer's properties. Note that after calling this isValid() may\n     * return false if the requested width/height cannot be satisfied\n     *\n     * @param width The new width of this layer\n     * @param height The new height of this layer\n     * @param isOpaque Whether this layer is opaque\n     *\n     * @return true if the layer's properties will change, false if they already\n     *         match the desired values.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setTransform(Matrix matrix)",
    "returnType" : "void",
    "comment" : "\n     * Sets an optional transform on this layer.\n     *\n     * @param matrix The transform to apply to the layer.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void detachSurfaceTexture()",
    "returnType" : "void",
    "comment" : "\n     * Indicates that this layer has lost its texture.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getLayerHandle()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSurfaceTexture(SurfaceTexture surface)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateSurfaceTexture()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static TextureLayer adoptTextureLayer(HardwareRenderer renderer, long layer)",
    "returnType" : "TextureLayer",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static native boolean nPrepare(long layerUpdater, int width, int height, boolean isOpaque)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetLayerPaint(long layerUpdater, long paint)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetTransform(long layerUpdater, long matrix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nSetSurfaceTexture(long layerUpdater, SurfaceTexture surface)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nUpdateSurfaceTexture(long layerUpdater)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mRenderer", "mFinalizer" ],
  "methodNames" : [ "public void setLayerPaint(@Nullable Paint paint)", "public boolean isValid()", "public void destroy()", "public long getDeferredLayerUpdater()", "public boolean copyInto(Bitmap bitmap)", "public boolean prepare(int width, int height, boolean isOpaque)", "public void setTransform(Matrix matrix)", "public void detachSurfaceTexture()", "public long getLayerHandle()", "public void setSurfaceTexture(SurfaceTexture surface)", "public void updateSurfaceTexture()", "public static TextureLayer adoptTextureLayer(HardwareRenderer renderer, long layer)", "private static native boolean nPrepare(long layerUpdater, int width, int height, boolean isOpaque)", "private static native void nSetLayerPaint(long layerUpdater, long paint)", "private static native void nSetTransform(long layerUpdater, long matrix)", "private static native void nSetSurfaceTexture(long layerUpdater, SurfaceTexture surface)", "private static native void nUpdateSurfaceTexture(long layerUpdater)" ]
}