{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/twt/TwtSession.java",
  "packageName" : "android.net.wifi.twt",
  "className" : "TwtSession",
  "comment" : "\n * Defines a target wake time (TWT) session.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TWT_STATS_KEY_INT_AVERAGE_RX_PACKET_COUNT",
    "type" : "String",
    "comment" : "\n     * Bundle key to get average number of received packets in each wake duration\n     ",
    "links" : [ ]
  }, {
    "name" : "TWT_STATS_KEY_INT_AVERAGE_TX_PACKET_COUNT",
    "type" : "String",
    "comment" : "\n     * Bundle key to get average number of transmitted packets in each wake duration\n     ",
    "links" : [ ]
  }, {
    "name" : "TWT_STATS_KEY_INT_AVERAGE_RX_PACKET_SIZE",
    "type" : "String",
    "comment" : "\n     * Bundle key to get average bytes per received packets in each wake duration\n     ",
    "links" : [ ]
  }, {
    "name" : "TWT_STATS_KEY_INT_AVERAGE_TX_PACKET_SIZE",
    "type" : "String",
    "comment" : "\n     * Bundle key to get average bytes per transmitted packets in each wake duration\n     ",
    "links" : [ ]
  }, {
    "name" : "TWT_STATS_KEY_INT_AVERAGE_EOSP_DURATION_MICROS",
    "type" : "String",
    "comment" : "\n     * Bundle key to get average end of service period in microseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "TWT_STATS_KEY_INT_EOSP_COUNT",
    "type" : "String",
    "comment" : "\n     * Bundle key to get count of early termination. Value will be -1 if not available.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " int getWakeDurationMicros()",
    "returnType" : "int",
    "comment" : "\n     * Get TWT session wake duration in microseconds.\n     *\n     * @return wake duration in microseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : " long getWakeIntervalMicros()",
    "returnType" : "long",
    "comment" : "\n     * Get TWT session wake interval in microseconds.\n     *\n     * @return wake interval in microseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : " int getMloLinkId()",
    "returnType" : "int",
    "comment" : "\n     * Get MLO link id if the station connection is Wi-Fi 7, otherwise returns\n     * {@link android.net.wifi.MloLink#INVALID_MLO_LINK_ID}.\n     *\n     * @return MLO link id\n     ",
    "links" : [ "android.net.wifi.MloLink#INVALID_MLO_LINK_ID" ]
  }, {
    "name" : " void getStats(@NonNull @CallbackExecutor Executor executor, @NonNull Consumer<Bundle> resultCallback)",
    "returnType" : "void",
    "comment" : "\n     * Get stats of the session.\n     *\n     * Note: If the command fails or not available, -1 will be returned for all stats values.\n     *\n     * @param executor The executor on which callback will be invoked.\n     * @param resultCallback An asynchronous callback that will return a bundle for target wake time\n     *                       stats. See {@link TwtStats} for the string keys for the bundle.\n     * @throws SecurityException if the caller does not have permission.\n     * @throws NullPointerException if the caller provided null inputs.\n     * @throws UnsupportedOperationException if the API is not supported.\n     ",
    "links" : [ "TwtStats" ]
  }, {
    "name" : " void teardown()",
    "returnType" : "void",
    "comment" : "\n     * Teardown the session. See {@link TwtSessionCallback#onTeardown(int)}. Also closes this\n     * session, relinquishing any underlying resources.\n     *\n     * @throws SecurityException if the caller does not have permission.\n     ",
    "links" : [ "android.net.wifi.twt.TwtSessionCallback#onTeardown(int)" ]
  } ],
  "methodNames" : [ " int getWakeDurationMicros()", " long getWakeIntervalMicros()", " int getMloLinkId()", " void getStats(@NonNull @CallbackExecutor Executor executor, @NonNull Consumer<Bundle> resultCallback)", " void teardown()" ],
  "variableNames" : [ "TWT_STATS_KEY_INT_AVERAGE_RX_PACKET_COUNT", "TWT_STATS_KEY_INT_AVERAGE_TX_PACKET_COUNT", "TWT_STATS_KEY_INT_AVERAGE_RX_PACKET_SIZE", "TWT_STATS_KEY_INT_AVERAGE_TX_PACKET_SIZE", "TWT_STATS_KEY_INT_AVERAGE_EOSP_DURATION_MICROS", "TWT_STATS_KEY_INT_EOSP_COUNT" ]
}