{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/pm/parsing/component/ParsedIntentInfo.java",
  "packageName" : "android.content.pm.parsing.component",
  "className" : "ListParceler",
  "comment" : "",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void parcel(List<ParsedIntentInfo> item, Parcel dest, int parcelFlags)",
    "returnType" : "void",
    "comment" : "\n         * <p>\n         * Implementation note: The serialized form for the intent list also contains the name\n         * of the concrete class that's stored in the list, and assumes that every element of the\n         * list is of the same type. This is very similar to the original parcelable mechanism.\n         * We cannot use that directly because IntentInfo extends IntentFilter, which is parcelable\n         * and is public API. It also declares Parcelable related methods as final which means\n         * we can't extend them. The approach of using composition instead of inheritance leads to\n         * a large set of cascading changes in the PackageManagerService, which seem undesirable.\n         *\n         * <p>\n         * <b>WARNING: </b> The list of objects returned by this function might need to be fixed up\n         * to make sure their owner fields are consistent. See {@code fixupOwner}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public List<ParsedIntentInfo> unparcel(Parcel source)",
    "returnType" : "List<ParsedIntentInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public void parcel(List<ParsedIntentInfo> item, Parcel dest, int parcelFlags)", "public List<ParsedIntentInfo> unparcel(Parcel source)" ]
}