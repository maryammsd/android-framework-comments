{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/RemoteController.java",
  "packageName" : "android.media",
  "className" : "OnClientUpdateListener",
  "comment" : "\n     * Interface definition for the callbacks to be invoked whenever media events, metadata\n     * and playback status are available.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onClientChange(boolean clearing)",
    "returnType" : "void",
    "comment" : "\n         * Called whenever all information, previously received through the other\n         * methods of the listener, is no longer valid and is about to be refreshed.\n         * This is typically called whenever a new {@link RemoteControlClient} has been selected\n         * by the system to have its media information published.\n         * @param clearing true if there is no selected RemoteControlClient and no information\n         *     is available.\n         ",
    "links" : [ "android.media.RemoteControlClient" ]
  }, {
    "name" : "public void onClientPlaybackStateUpdate(int state)",
    "returnType" : "void",
    "comment" : "\n         * Called whenever the playback state has changed.\n         * It is called when no information is known about the playback progress in the media and\n         * the playback speed.\n         * @param state one of the playback states authorized\n         *     in {@link RemoteControlClient#setPlaybackState(int)}.\n         ",
    "links" : [ "android.media.RemoteControlClient#setPlaybackState(int)" ]
  }, {
    "name" : "public void onClientPlaybackStateUpdate(int state, long stateChangeTimeMs, long currentPosMs, float speed)",
    "returnType" : "void",
    "comment" : "\n         * Called whenever the playback state has changed, and playback position\n         * and speed are known.\n         * @param state one of the playback states authorized\n         *     in {@link RemoteControlClient#setPlaybackState(int)}.\n         * @param stateChangeTimeMs the system time at which the state change was reported,\n         *     expressed in ms. Based on {@link android.os.SystemClock#elapsedRealtime()}.\n         * @param currentPosMs a positive value for the current media playback position expressed\n         *     in ms, a negative value if the position is temporarily unknown.\n         * @param speed  a value expressed as a ratio of 1x playback: 1.0f is normal playback,\n         *    2.0f is 2x, 0.5f is half-speed, -2.0f is rewind at 2x speed. 0.0f means nothing is\n         *    playing (e.g. when state is {@link RemoteControlClient#PLAYSTATE_ERROR}).\n         ",
    "links" : [ "android.media.RemoteControlClient#setPlaybackState(int)", "android.os.SystemClock#elapsedRealtime()", "android.media.RemoteControlClient#PLAYSTATE_ERROR" ]
  }, {
    "name" : "public void onClientTransportControlUpdate(int transportControlFlags)",
    "returnType" : "void",
    "comment" : "\n         * Called whenever the transport control flags have changed.\n         * @param transportControlFlags one of the flags authorized\n         *     in {@link RemoteControlClient#setTransportControlFlags(int)}.\n         ",
    "links" : [ "android.media.RemoteControlClient#setTransportControlFlags(int)" ]
  }, {
    "name" : "public void onClientMetadataUpdate(MetadataEditor metadataEditor)",
    "returnType" : "void",
    "comment" : "\n         * Called whenever new metadata is available.\n         * See the {@link MediaMetadataEditor#putLong(int, long)},\n         *  {@link MediaMetadataEditor#putString(int, String)},\n         *  {@link MediaMetadataEditor#putBitmap(int, Bitmap)}, and\n         *  {@link MediaMetadataEditor#putObject(int, Object)} methods for the various keys that\n         *  can be queried.\n         * @param metadataEditor the container of the new metadata.\n         ",
    "links" : [ "android.media.MediaMetadataEditor#putLong(int", "android.media.MediaMetadataEditor#putString(int", "android.media.MediaMetadataEditor#putBitmap(int", "android.media.MediaMetadataEditor#putObject(int" ]
  } ],
  "methodNames" : [ "public void onClientChange(boolean clearing)", "public void onClientPlaybackStateUpdate(int state)", "public void onClientPlaybackStateUpdate(int state, long stateChangeTimeMs, long currentPosMs, float speed)", "public void onClientTransportControlUpdate(int transportControlFlags)", "public void onClientMetadataUpdate(MetadataEditor metadataEditor)" ],
  "variableNames" : [ ]
}