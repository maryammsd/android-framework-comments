{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/radio/RadioManager.java",
  "packageName" : "android.hardware.radio",
  "className" : "BandDescriptor",
  "comment" : " Radio band descriptor: an element in ModuleProperties bands array.\n     * It is either an instance of {@link FmBandDescriptor} or {@link AmBandDescriptor} ",
  "variables" : [ {
    "name" : "mRegion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLowerLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUpperLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSpacing",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<BandDescriptor>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getRegion()",
    "returnType" : "int",
    "comment" : " Region this band applies to. E.g. {@link #REGION_ITU_1}\n         * @return the region this band is associated to.\n         ",
    "links" : [ "#REGION_ITU_1" ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : " Band type, e.g {@link #BAND_FM}. Defines the subclass this descriptor can be cast to:\n         * <ul>\n         *  <li>{@link #BAND_FM} or {@link #BAND_FM_HD} cast to {@link FmBandDescriptor}, </li>\n         *  <li>{@link #BAND_AM} cast to {@link AmBandDescriptor}, </li>\n         * </ul>\n         * @return the band type.\n         ",
    "links" : [ "#BAND_FM", "FmBandDescriptor", "#BAND_AM", "AmBandDescriptor", "#BAND_FM_HD" ]
  }, {
    "name" : "public boolean isAmBand()",
    "returnType" : "boolean",
    "comment" : "\n         * Checks if the band is either AM or AM_HD.\n         *\n         * @return {@code true}, if band is AM or AM_HD.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFmBand()",
    "returnType" : "boolean",
    "comment" : "\n         * Checks if the band is either FM or FM_HD.\n         *\n         * @return {@code true}, if band is FM or FM_HD.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getLowerLimit()",
    "returnType" : "int",
    "comment" : " Lower band limit expressed in units according to band type.\n         * Currently all defined band types express channels as frequency in kHz\n         * @return the lower band limit.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getUpperLimit()",
    "returnType" : "int",
    "comment" : " Upper band limit expressed in units according to band type.\n         * Currently all defined band types express channels as frequency in kHz\n         * @return the upper band limit.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSpacing()",
    "returnType" : "int",
    "comment" : " Channel spacing in units according to band type.\n         * Currently all defined band types express channels as frequency in kHz\n         * @return the channel spacing.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static int lookupTypeFromParcel(Parcel in)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mRegion", "mType", "mLowerLimit", "mUpperLimit", "mSpacing", "CREATOR" ],
  "methodNames" : [ "public int getRegion()", "public int getType()", "public boolean isAmBand()", "public boolean isFmBand()", "public int getLowerLimit()", "public int getUpperLimit()", "public int getSpacing()", "private static int lookupTypeFromParcel(Parcel in)", "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()", "public String toString()", "public int hashCode()", "public boolean equals(@Nullable Object obj)" ]
}