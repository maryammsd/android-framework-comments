{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/objects/XRTreeFrag.java",
  "packageName" : "org.apache.xpath.objects",
  "className" : "XRTreeFrag",
  "comment" : "\n * This class represents an XPath result tree fragment object, and is capable of\n * converting the RTF to other types, such as a string.\n * @xsl.usage general\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_DTMXRTreeFrag",
    "type" : "DTMXRTreeFrag",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_dtmRoot",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_allowRelease",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_xmlStr",
    "type" : "XMLString",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private final void initDTM(int root, XPathContext xctxt)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object object()",
    "returnType" : "Object",
    "comment" : "\n   * Return a java object that's closest to the representation\n   * that should be handed to an extension.\n   *\n   * @return The object that this class wraps\n   ",
    "links" : [ ]
  }, {
    "name" : "public void allowDetachToRelease(boolean allowRelease)",
    "returnType" : "void",
    "comment" : "\n   * Specify if it's OK for detach to release the iterator for reuse.\n   * \n   * @param allowRelease true if it is OK for detach to release this iterator \n   * for pooling.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void detach()",
    "returnType" : "void",
    "comment" : "\n   * Detaches the <code>DTMIterator</code> from the set which it iterated\n   * over, releasing any computational resources and placing the iterator\n   * in the INVALID state. After <code>detach</code> has been invoked,\n   * calls to <code>nextNode</code> or <code>previousNode</code> will\n   * raise a runtime exception.\n   * \n   * In general, detach should only be called once on the object.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n   * Tell what kind of class this is.\n   *\n   * @return type CLASS_RTREEFRAG \n   ",
    "links" : [ ]
  }, {
    "name" : "public String getTypeString()",
    "returnType" : "String",
    "comment" : "\n   * Given a request type, return the equivalent string.\n   * For diagnostic purposes.\n   *\n   * @return type string \"#RTREEFRAG\"\n   ",
    "links" : [ ]
  }, {
    "name" : "public double num() throws javax.xml.transform.TransformerException",
    "returnType" : "double",
    "comment" : "\n   * Cast result object to a number.\n   *\n   * @return The result tree fragment as a number or NaN\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean bool()",
    "returnType" : "boolean",
    "comment" : "\n   * Cast result object to a boolean.  This always returns true for a RTreeFrag\n   * because it is treated like a node-set with a single root node.\n   *\n   * @return true\n   ",
    "links" : [ ]
  }, {
    "name" : "public XMLString xstr()",
    "returnType" : "XMLString",
    "comment" : "\n   * Cast result object to an XMLString.\n   *\n   * @return The document fragment node data or the empty string. \n   ",
    "links" : [ ]
  }, {
    "name" : "public void appendToFsb(org.apache.xml.utils.FastStringBuffer fsb)",
    "returnType" : "void",
    "comment" : "\n   * Cast result object to a string.\n   *\n   * @return The string this wraps or the empty string if null\n   ",
    "links" : [ ]
  }, {
    "name" : "public String str()",
    "returnType" : "String",
    "comment" : "\n   * Cast result object to a string.\n   *\n   * @return The document fragment node data or the empty string. \n   ",
    "links" : [ ]
  }, {
    "name" : "public int rtf()",
    "returnType" : "int",
    "comment" : "\n   * Cast result object to a result tree fragment.\n   *\n   * @return The document fragment this wraps\n   ",
    "links" : [ ]
  }, {
    "name" : "public DTMIterator asNodeIterator()",
    "returnType" : "DTMIterator",
    "comment" : "\n   * Cast result object to a DTMIterator.\n   * dml - modified to return an RTFIterator for\n   * benefit of EXSLT object-type function in \n   * {@code org.apache.xalan.lib.ExsltCommon}.\n   * @return The document fragment as a DTMIterator\n   ",
    "links" : [ ]
  }, {
    "name" : "public NodeList convertToNodeset()",
    "returnType" : "NodeList",
    "comment" : "\n   * Cast result object to a nodelist. (special function).\n   *\n   * @return The document fragment as a nodelist\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(XObject obj2)",
    "returnType" : "boolean",
    "comment" : "\n   * Tell if two objects are functionally equal.\n   *\n   * @param obj2 Object to compare this to\n   *\n   * @return True if the two objects are equal\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private final void initDTM(int root, XPathContext xctxt)", "public Object object()", "public void allowDetachToRelease(boolean allowRelease)", "public void detach()", "public int getType()", "public String getTypeString()", "public double num() throws javax.xml.transform.TransformerException", "public boolean bool()", "public XMLString xstr()", "public void appendToFsb(org.apache.xml.utils.FastStringBuffer fsb)", "public String str()", "public int rtf()", "public DTMIterator asNodeIterator()", "public NodeList convertToNodeset()", "public boolean equals(XObject obj2)" ],
  "variableNames" : [ "serialVersionUID", "m_DTMXRTreeFrag", "m_dtmRoot", "m_allowRelease", "m_xmlStr" ]
}