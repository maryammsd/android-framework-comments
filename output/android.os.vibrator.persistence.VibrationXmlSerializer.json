{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/vibrator/persistence/VibrationXmlSerializer.java",
  "packageName" : "android.os.vibrator.persistence",
  "className" : "VibrationXmlSerializer",
  "comment" : "\n * Serializes {@link CombinedVibration} and {@link VibrationEffect} instances to XML.\n *\n * <p>This uses the same schema expected by the {@link VibrationXmlParser}.\n *\n * @hide\n ",
  "links" : [ "android.os.CombinedVibration", "android.os.VibrationEffect", "android.os.vibrator.persistence.VibrationXmlParser" ],
  "variables" : [ {
    "name" : "FLAG_ALLOW_HIDDEN_APIS",
    "type" : "int",
    "comment" : "\n     * Allows {@link VibrationEffect} instances created via non-public APIs to be parsed/serialized.\n     *\n     * <p>Note that the XML schema for non-public APIs is not backwards compatible. This is intended\n     * for loading custom {@link VibrationEffect} configured per device and platform version, not\n     * to be restored from old platform versions or from different devices.\n     *\n     * @hide\n     ",
    "links" : [ "android.os.VibrationEffect" ]
  }, {
    "name" : "FLAG_PRETTY_PRINT",
    "type" : "int",
    "comment" : "\n     * Writes a more human-readable output XML.\n     *\n     * <p>This will be less compact as it includes extra whitespace for things like indentation.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "XML_ENCODING",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "XML_FEATURE_INDENT_OUTPUT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void serialize(@NonNull VibrationEffect effect, @NonNull Writer writer) throws SerializationFailedException, IOException",
    "returnType" : "void",
    "comment" : "\n     * Serializes a {@link VibrationEffect} to XML and writes output to given {@link Writer}.\n     *\n     * <p>This method will only write into the {@link Writer} if the effect can successfully\n     * be represented by the XML serialization. It will throw an exception otherwise.\n     *\n     * @throws SerializationFailedException serialization of input effect failed, no data was\n     *                                      written into given {@link Writer}.\n     * @throws IOException error writing to given {@link Writer}.\n     *\n     * @hide\n     ",
    "links" : [ "android.os.VibrationEffect", "java.io.Writer" ]
  }, {
    "name" : "public static void serialize(@NonNull VibrationEffect effect, @NonNull Writer writer, @Flags int flags) throws SerializationFailedException, IOException",
    "returnType" : "void",
    "comment" : "\n     * Serializes a {@link VibrationEffect} to XML and writes output to given {@link Writer}.\n     *\n     * <p>Same as {@link #serialize(VibrationEffect, Writer)}, with extra flags to control the\n     * serialization behavior.\n     *\n     * @hide\n     ",
    "links" : [ "android.os.VibrationEffect", "java.io.Writer", "#serialize(VibrationEffect" ]
  }, {
    "name" : "private static XmlSerializedVibration<VibrationEffect> toSerializedVibration(VibrationEffect effect, @Flags int flags) throws SerializationFailedException",
    "returnType" : "XmlSerializedVibration<VibrationEffect>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void serialize(@NonNull VibrationEffect effect, @NonNull Writer writer) throws SerializationFailedException, IOException", "public static void serialize(@NonNull VibrationEffect effect, @NonNull Writer writer, @Flags int flags) throws SerializationFailedException, IOException", "private static XmlSerializedVibration<VibrationEffect> toSerializedVibration(VibrationEffect effect, @Flags int flags) throws SerializationFailedException" ],
  "variableNames" : [ "FLAG_ALLOW_HIDDEN_APIS", "FLAG_PRETTY_PRINT", "XML_ENCODING", "XML_FEATURE_INDENT_OUTPUT" ]
}