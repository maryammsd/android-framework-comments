{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/rtp/AudioCodec.java",
  "packageName" : "android.net.rtp",
  "className" : "AudioCodec",
  "comment" : "\n * This class defines a collection of audio codecs to be used with\n * {@link AudioStream}s. Their parameters are designed to be exchanged using\n * Session Description Protocol (SDP). Most of the values listed here can be\n * found in RFC 3551, while others are described in separated standards.\n *\n * <p>Few simple configurations are defined as public static instances for the\n * convenience of direct uses. More complicated ones could be obtained using\n * {@link #getCodec(int, String, String)}. For example, one can use the\n * following snippet to create a mode-1-only AMR codec.</p>\n * <pre>\n * AudioCodec codec = AudioCodec.getCodec(100, \"AMR/8000\", \"mode-set=1\");\n * </pre>\n *\n * @see AudioStream\n ",
  "variables" : [ {
    "name" : "type",
    "type" : "int",
    "comment" : "\n     * The RTP payload type of the encoding.\n     ",
    "links" : [ ]
  }, {
    "name" : "rtpmap",
    "type" : "String",
    "comment" : "\n     * The encoding parameters to be used in the corresponding SDP attribute.\n     ",
    "links" : [ ]
  }, {
    "name" : "fmtp",
    "type" : "String",
    "comment" : "\n     * The format parameters to be used in the corresponding SDP attribute.\n     ",
    "links" : [ ]
  }, {
    "name" : "PCMU",
    "type" : "AudioCodec",
    "comment" : "\n     * G.711 u-law audio codec.\n     ",
    "links" : [ ]
  }, {
    "name" : "PCMA",
    "type" : "AudioCodec",
    "comment" : "\n     * G.711 a-law audio codec.\n     ",
    "links" : [ ]
  }, {
    "name" : "GSM",
    "type" : "AudioCodec",
    "comment" : "\n     * GSM Full-Rate audio codec, also known as GSM-FR, GSM 06.10, GSM, or\n     * simply FR.\n     ",
    "links" : [ ]
  }, {
    "name" : "GSM_EFR",
    "type" : "AudioCodec",
    "comment" : "\n     * GSM Enhanced Full-Rate audio codec, also known as GSM-EFR, GSM 06.60, or\n     * simply EFR.\n     ",
    "links" : [ ]
  }, {
    "name" : "AMR",
    "type" : "AudioCodec",
    "comment" : "\n     * Adaptive Multi-Rate narrowband audio codec, also known as AMR or AMR-NB.\n     * Currently CRC, robust sorting, and interleaving are not supported. See\n     * more details about these features in RFC 4867.\n     ",
    "links" : [ ]
  }, {
    "name" : "sCodecs",
    "type" : "AudioCodec[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static AudioCodec[] getCodecs()",
    "returnType" : "AudioCodec[]",
    "comment" : "\n     * Returns system supported audio codecs.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static AudioCodec getCodec(int type, String rtpmap, String fmtp)",
    "returnType" : "AudioCodec",
    "comment" : "\n     * Creates an AudioCodec according to the given configuration.\n     *\n     * @param type The payload type of the encoding defined in RTP/AVP.\n     * @param rtpmap The encoding parameters specified in the corresponding SDP\n     *     attribute, or null if it is not available.\n     * @param fmtp The format parameters specified in the corresponding SDP\n     *     attribute, or null if it is not available.\n     * @return The configured AudioCodec or {@code null} if it is not supported.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "type", "rtpmap", "fmtp", "PCMU", "PCMA", "GSM", "GSM_EFR", "AMR", "sCodecs" ],
  "methodNames" : [ "public static AudioCodec[] getCodecs()", "public static AudioCodec getCodec(int type, String rtpmap, String fmtp)" ]
}