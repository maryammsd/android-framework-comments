{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/EnterTransitionCoordinator.java",
  "packageName" : "android.app",
  "className" : "EnterTransitionCoordinator",
  "comment" : "\n * This ActivityTransitionCoordinator is created by the Activity to manage\n * the enter scene and shared element transfer into the Scene, either during\n * launch of an Activity or returning from a launched Activity.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_ANIMATION_FRAMES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSharedElementTransitionStarted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActivity",
    "type" : "Activity",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsTaskRoot",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasStopped",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsCanceled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBackgroundAnimator",
    "type" : "ObjectAnimator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsExitTransitionComplete",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsReadyForTransition",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSharedElementsBundle",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWasOpaque",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAreViewsReady",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsViewsTransitionStarted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnterViewsTransition",
    "type" : "Transition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mViewsReadyListener",
    "type" : "OneShotPreDrawListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsCrossTask",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReplacedBackground",
    "type" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingExitNames",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnTransitionComplete",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " boolean isCrossTask()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void viewInstancesReady(ArrayList<String> accepted, ArrayList<String> localNames, ArrayList<View> localViews)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void namedViewsReady(ArrayList<String> accepted, ArrayList<String> localNames)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Transition getEnterViewsTransition()",
    "returnType" : "Transition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void viewsReady(ArrayMap<String, View> sharedElements)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void triggerViewsReady(final ArrayMap<String, View> sharedElements)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ArrayMap<String, View> mapNamedElements(ArrayList<String> accepted, ArrayList<String> localNames)",
    "returnType" : "ArrayMap<String, View>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void sendSharedElementDestination()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static SharedElementCallback getListener(Activity activity, boolean isReturning)",
    "returnType" : "SharedElementCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onReceiveResult(int resultCode, Bundle resultData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isWaitingForRemoteExit()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ArrayList<String> getPendingExitSharedElementNames()",
    "returnType" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forceViewsToAppear()",
    "returnType" : "void",
    "comment" : "\n     * This is called onResume. If an Activity is resuming and the transitions\n     * haven't started yet, force the views to appear. This is likely to be\n     * caused by the top Activity finishing before the transitions started.\n     * In that case, we can finish any transition that was started, but we\n     * should cancel any pending transition and just bring those Views visible.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void cancel()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isReturning()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void prepareEnter()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected Transition getViewsTransition()",
    "returnType" : "Transition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected Transition getSharedElementTransition()",
    "returnType" : "Transition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void startSharedElementTransition(Bundle sharedElementState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void removeNullViews(ArrayList<View> views)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void onTakeSharedElements()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void requestLayoutForSharedElements()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Transition beginTransition(ViewGroup decorView, boolean startEnterTransition, boolean startSharedElementTransition)",
    "returnType" : "Transition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void runAfterTransitionsComplete(Runnable onTransitionComplete)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onTransitionsComplete()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void sharedElementTransitionStarted()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void startEnterTransition(Transition transition)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stop()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean cancelEnter()",
    "returnType" : "boolean",
    "comment" : "\n     * Cancels the enter transition.\n     * @return True if the enter transition is still pending capturing the target state. If so,\n     * any transition started on the decor will do nothing.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void clearState()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void makeOpaque()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean allowOverlappingTransitions()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void startRejectedAnimations(final ArrayList<View> rejectedSnapshots)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onRemoteExitTransitionComplete()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void startEnterTransitionOnly()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " boolean isCrossTask()", "public void viewInstancesReady(ArrayList<String> accepted, ArrayList<String> localNames, ArrayList<View> localViews)", "public void namedViewsReady(ArrayList<String> accepted, ArrayList<String> localNames)", "public Transition getEnterViewsTransition()", "protected void viewsReady(ArrayMap<String, View> sharedElements)", "private void triggerViewsReady(final ArrayMap<String, View> sharedElements)", "private ArrayMap<String, View> mapNamedElements(ArrayList<String> accepted, ArrayList<String> localNames)", "private void sendSharedElementDestination()", "private static SharedElementCallback getListener(Activity activity, boolean isReturning)", "protected void onReceiveResult(int resultCode, Bundle resultData)", "public boolean isWaitingForRemoteExit()", "public ArrayList<String> getPendingExitSharedElementNames()", "public void forceViewsToAppear()", "private void cancel()", "public boolean isReturning()", "protected void prepareEnter()", "protected Transition getViewsTransition()", "protected Transition getSharedElementTransition()", "private void startSharedElementTransition(Bundle sharedElementState)", "private static void removeNullViews(ArrayList<View> views)", "private void onTakeSharedElements()", "private void requestLayoutForSharedElements()", "private Transition beginTransition(ViewGroup decorView, boolean startEnterTransition, boolean startSharedElementTransition)", "public void runAfterTransitionsComplete(Runnable onTransitionComplete)", "protected void onTransitionsComplete()", "private void sharedElementTransitionStarted()", "private void startEnterTransition(Transition transition)", "public void stop()", "public boolean cancelEnter()", "protected void clearState()", "private void makeOpaque()", "private boolean allowOverlappingTransitions()", "private void startRejectedAnimations(final ArrayList<View> rejectedSnapshots)", "protected void onRemoteExitTransitionComplete()", "private void startEnterTransitionOnly()" ],
  "variableNames" : [ "TAG", "MIN_ANIMATION_FRAMES", "mSharedElementTransitionStarted", "mActivity", "mIsTaskRoot", "mHasStopped", "mIsCanceled", "mBackgroundAnimator", "mIsExitTransitionComplete", "mIsReadyForTransition", "mSharedElementsBundle", "mWasOpaque", "mAreViewsReady", "mIsViewsTransitionStarted", "mEnterViewsTransition", "mViewsReadyListener", "mIsCrossTask", "mReplacedBackground", "mPendingExitNames", "mOnTransitionComplete" ]
}