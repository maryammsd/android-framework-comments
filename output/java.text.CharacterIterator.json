{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/text/CharacterIterator.java",
  "packageName" : "java.text",
  "className" : "CharacterIterator",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "DONE",
    "type" : "char",
    "comment" : "\n     * Constant that is returned when the iterator has reached either the end\n     * or the beginning of the text. The value is '\\\\uFFFF', the \"not a\n     * character\" value which should not occur in any valid Unicode string.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public char first()",
    "returnType" : "char",
    "comment" : "\n     * Sets the position to getBeginIndex() and returns the character at that\n     * position.\n     * @return the first character in the text, or DONE if the text is empty\n     * @see #getBeginIndex()\n     ",
    "links" : [ ]
  }, {
    "name" : "public char last()",
    "returnType" : "char",
    "comment" : "\n     * Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)\n     * and returns the character at that position.\n     * @return the last character in the text, or DONE if the text is empty\n     * @see #getEndIndex()\n     ",
    "links" : [ ]
  }, {
    "name" : "public char current()",
    "returnType" : "char",
    "comment" : "\n     * Gets the character at the current position (as returned by getIndex()).\n     * @return the character at the current position or DONE if the current\n     * position is off the end of the text.\n     * @see #getIndex()\n     ",
    "links" : [ ]
  }, {
    "name" : "public char next()",
    "returnType" : "char",
    "comment" : "\n     * Increments the iterator's index by one and returns the character\n     * at the new index.  If the resulting index is greater or equal\n     * to getEndIndex(), the current index is reset to getEndIndex() and\n     * a value of DONE is returned.\n     * @return the character at the new position or DONE if the new\n     * position is off the end of the text range.\n     ",
    "links" : [ ]
  }, {
    "name" : "public char previous()",
    "returnType" : "char",
    "comment" : "\n     * Decrements the iterator's index by one and returns the character\n     * at the new index. If the current index is getBeginIndex(), the index\n     * remains at getBeginIndex() and a value of DONE is returned.\n     * @return the character at the new position or DONE if the current\n     * position is equal to getBeginIndex().\n     ",
    "links" : [ ]
  }, {
    "name" : "public char setIndex(int position)",
    "returnType" : "char",
    "comment" : "\n     * Sets the position to the specified position in the text and returns that\n     * character.\n     * @param position the position within the text.  Valid values range from\n     * getBeginIndex() to getEndIndex().  An IllegalArgumentException is thrown\n     * if an invalid value is supplied.\n     * @return the character at the specified position or DONE if the specified position is equal to getEndIndex()\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBeginIndex()",
    "returnType" : "int",
    "comment" : "\n     * Returns the start index of the text.\n     * @return the index at which the text begins.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEndIndex()",
    "returnType" : "int",
    "comment" : "\n     * Returns the end index of the text.  This index is the index of the first\n     * character following the end of the text.\n     * @return the index after the last character in the text\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getIndex()",
    "returnType" : "int",
    "comment" : "\n     * Returns the current index.\n     * @return the current index.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "\n     * Create a copy of this iterator\n     * @return A copy of this\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public char first()", "public char last()", "public char current()", "public char next()", "public char previous()", "public char setIndex(int position)", "public int getBeginIndex()", "public int getEndIndex()", "public int getIndex()", "public Object clone()" ],
  "variableNames" : [ "DONE" ]
}