{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/widget/RadioGroup.java",
  "packageName" : "android.widget",
  "className" : "RadioGroup",
  "comment" : "\n * <p>This class is used to create a multiple-exclusion scope for a set of radio\n * buttons. Checking one radio button that belongs to a radio group unchecks\n * any previously checked radio button within the same group.</p>\n *\n * <p>Intially, all of the radio buttons are unchecked. While it is not possible\n * to uncheck a particular radio button, the radio group can be cleared to\n * remove the checked state.</p>\n *\n * <p>The selection is identified by the unique id of the radio button as defined\n * in the XML layout file.</p>\n *\n * <p><strong>XML Attributes</strong></p>\n * <p>See {@link android.R.styleable#RadioGroup RadioGroup Attributes},\n * {@link android.R.styleable#LinearLayout LinearLayout Attributes},\n * {@link android.R.styleable#ViewGroup ViewGroup Attributes},\n * {@link android.R.styleable#View View Attributes}</p>\n * <p>Also see\n * {@link android.widget.LinearLayout.LayoutParams LinearLayout.LayoutParams}\n * for layout attributes.</p>\n *\n * @see RadioButton\n *\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCheckedId",
    "type" : "int",
    "comment" : " holds the checked id; the selection is empty by default",
    "links" : [ ]
  }, {
    "name" : "mChildOnCheckedChangeListener",
    "type" : "CompoundButton.OnCheckedChangeListener",
    "comment" : " tracks children radio buttons checked state",
    "links" : [ ]
  }, {
    "name" : "mProtectFromCheckedChange",
    "type" : "boolean",
    "comment" : " when true, mOnCheckedChangeListener discards events",
    "links" : [ ]
  }, {
    "name" : "mOnCheckedChangeListener",
    "type" : "OnCheckedChangeListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPassThroughListener",
    "type" : "PassThroughHierarchyChangeListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialCheckedId",
    "type" : "int",
    "comment" : " to sanitize autofill requests.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void init()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setOnHierarchyChangeListener(OnHierarchyChangeListener listener)",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onFinishInflate()",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addView(View child, int index, ViewGroup.LayoutParams params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void check(@IdRes int id)",
    "returnType" : "void",
    "comment" : "\n     * <p>Sets the selection to the radio button whose identifier is passed in\n     * parameter. Using -1 as the selection identifier clears the selection;\n     * such an operation is equivalent to invoking {@link #clearCheck()}.</p>\n     *\n     * @param id the unique id of the radio button to select in this group\n     *\n     * @see #getCheckedRadioButtonId()\n     * @see #clearCheck()\n     ",
    "links" : [ "#clearCheck" ]
  }, {
    "name" : "private void setCheckedId(@IdRes int id)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setCheckedStateForView(int viewId, boolean checked)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCheckedRadioButtonId()",
    "returnType" : "int",
    "comment" : "\n     * <p>Returns the identifier of the selected radio button in this group.\n     * Upon empty selection, the returned value is -1.</p>\n     *\n     * @return the unique id of the selected radio button in this group\n     *\n     * @see #check(int)\n     * @see #clearCheck()\n     *\n     * @attr ref android.R.styleable#RadioGroup_checkedButton\n     ",
    "links" : [ ]
  }, {
    "name" : "public void clearCheck()",
    "returnType" : "void",
    "comment" : "\n     * <p>Clears the selection. When the selection is cleared, no radio button\n     * in this group is selected and {@link #getCheckedRadioButtonId()} returns\n     * null.</p>\n     *\n     * @see #check(int)\n     * @see #getCheckedRadioButtonId()\n     ",
    "links" : [ "#getCheckedRadioButtonId" ]
  }, {
    "name" : "public void setOnCheckedChangeListener(OnCheckedChangeListener listener)",
    "returnType" : "void",
    "comment" : "\n     * <p>Register a callback to be invoked when the checked radio button\n     * changes in this group.</p>\n     *\n     * @param listener the callback to call on checked state change\n     ",
    "links" : [ ]
  }, {
    "name" : "public LayoutParams generateLayoutParams(AttributeSet attrs)",
    "returnType" : "LayoutParams",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean checkLayoutParams(ViewGroup.LayoutParams p)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "protected LinearLayout.LayoutParams generateDefaultLayoutParams()",
    "returnType" : "LinearLayout.LayoutParams",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getAccessibilityClassName()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onProvideStructure(@NonNull ViewStructure structure, @ViewStructureType int viewFor, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void autofill(AutofillValue value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getAutofillType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public AutofillValue getAutofillValue()",
    "returnType" : "AutofillValue",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getVisibleChildWithTextCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int getIndexWithinVisibleButtons(@Nullable View child)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isVisibleWithText(RadioButton button)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "mCheckedId", "mChildOnCheckedChangeListener", "mProtectFromCheckedChange", "mOnCheckedChangeListener", "mPassThroughListener", "mInitialCheckedId" ],
  "methodNames" : [ "private void init()", "public void setOnHierarchyChangeListener(OnHierarchyChangeListener listener)", "protected void onFinishInflate()", "public void addView(View child, int index, ViewGroup.LayoutParams params)", "public void check(@IdRes int id)", "private void setCheckedId(@IdRes int id)", "private void setCheckedStateForView(int viewId, boolean checked)", "public int getCheckedRadioButtonId()", "public void clearCheck()", "public void setOnCheckedChangeListener(OnCheckedChangeListener listener)", "public LayoutParams generateLayoutParams(AttributeSet attrs)", "protected boolean checkLayoutParams(ViewGroup.LayoutParams p)", "protected LinearLayout.LayoutParams generateDefaultLayoutParams()", "public CharSequence getAccessibilityClassName()", "protected void onProvideStructure(@NonNull ViewStructure structure, @ViewStructureType int viewFor, int flags)", "public void autofill(AutofillValue value)", "public int getAutofillType()", "public AutofillValue getAutofillValue()", "public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info)", "private int getVisibleChildWithTextCount()", " int getIndexWithinVisibleButtons(@Nullable View child)", "private boolean isVisibleWithText(RadioButton button)" ]
}