{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/location/ContextHubInfo.java",
  "packageName" : "android.hardware.location",
  "className" : "ContextHubInfo",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVendor",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToolchain",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlatformVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToolchainVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPeakMips",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStoppedPowerDrawMw",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSleepPowerDrawMw",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPeakPowerDrawMw",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxPacketLengthBytes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportsReliableMessages",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChreApiMajorVersion",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChreApiMinorVersion",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChrePatchVersion",
    "type" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChrePlatformId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedSensors",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMemoryRegions",
    "type" : "MemoryRegion[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ContextHubInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getMaxPacketLengthBytes()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum number of bytes for a message to the hub.\n     *\n     * @return int - maximum bytes that can be transmitted in a single packet.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean supportsReliableMessages()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether reliable messages are supported\n     *\n     * @return whether reliable messages are supported.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "\n     * get the context hub unique identifer\n     *\n     * @return int - unique system wide identifier\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * get a string as a hub name\n     *\n     * @return String - a name for the hub\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getVendor()",
    "returnType" : "String",
    "comment" : "\n     * get a string as the vendor name\n     *\n     * @return String - a name for the vendor\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getToolchain()",
    "returnType" : "String",
    "comment" : "\n     * get tool chain string\n     *\n     * @return String - description of the tool chain\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPlatformVersion()",
    "returnType" : "int",
    "comment" : "\n     * get platform version\n     *\n     * @return int - platform version number\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getStaticSwVersion()",
    "returnType" : "int",
    "comment" : "\n     * get static platform version number\n     *\n     * @return int - platform version number\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getToolchainVersion()",
    "returnType" : "int",
    "comment" : "\n     * get the tool chain version\n     *\n     * @return int - the tool chain version\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getPeakMips()",
    "returnType" : "float",
    "comment" : "\n     * get the peak processing mips the hub can support\n     *\n     * @return float - peak MIPS that this hub can deliver\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getStoppedPowerDrawMw()",
    "returnType" : "float",
    "comment" : "\n     * get the stopped power draw in milliwatts\n     * This assumes that the hub enter a stopped state - which is\n     * different from the sleep state. Latencies on exiting the\n     * sleep state are typically higher and expect to be in multiple\n     * milliseconds.\n     *\n     * @return float - power draw by the hub in stopped state\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getSleepPowerDrawMw()",
    "returnType" : "float",
    "comment" : "\n     * get the power draw of the hub in sleep mode. This assumes\n     * that the hub supports a sleep mode in which the power draw is\n     * lower than the power consumed when the hub is actively\n     * processing. As a guideline, assume that the hub should be\n     * able to enter sleep mode if it knows reliably on completion\n     * of some task that the next interrupt/scheduled work item is\n     * at least 250 milliseconds later.\n     *\n     * @return float - sleep power draw in milli watts\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getPeakPowerDrawMw()",
    "returnType" : "float",
    "comment" : "\n     * get the peak powe draw of the hub. This is the power consumed\n     * by the hub at maximum load.\n     *\n     * @return float - peak power draw\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] getSupportedSensors()",
    "returnType" : "int[]",
    "comment" : "\n     * get the sensors supported by this hub\n     *\n     * @return int[] - all the supported sensors on this hub\n     *\n     * @see ContextHubManager\n     ",
    "links" : [ ]
  }, {
    "name" : "public MemoryRegion[] getMemoryRegions()",
    "returnType" : "MemoryRegion[]",
    "comment" : "\n     * get the various memory regions on this hub\n     *\n     * @return MemoryRegion[] - all the memory regions on this hub\n     *\n     * @see MemoryRegion\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getChrePlatformId()",
    "returnType" : "long",
    "comment" : "\n     * @return the CHRE platform ID as defined in chre/version.h\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte getChreApiMajorVersion()",
    "returnType" : "byte",
    "comment" : "\n     * @return the CHRE API's major version as defined in chre/version.h\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte getChreApiMinorVersion()",
    "returnType" : "byte",
    "comment" : "\n     * @return the CHRE API's minor version as defined in chre/version.h\n     ",
    "links" : [ ]
  }, {
    "name" : "public short getChrePatchVersion()",
    "returnType" : "short",
    "comment" : "\n     * @return the CHRE patch version as defined in chre/version.h\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(ProtoOutputStream proto)",
    "returnType" : "void",
    "comment" : "\n     * Dump the internal state as a ContextHubInfoProto to the given ProtoOutputStream.\n     *\n     * If the output belongs to a sub message, the caller is responsible for wrapping this function\n     * between {@link ProtoOutputStream#start(long)} and {@link ProtoOutputStream#end(long)}.\n     *\n     * @hide\n     ",
    "links" : [ "android.util.proto.ProtoOutputStream#end(long)", "android.util.proto.ProtoOutputStream#start(long)" ]
  }, {
    "name" : "public boolean equals(@Nullable Object object)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getMaxPacketLengthBytes()", "public boolean supportsReliableMessages()", "public int getId()", "public String getName()", "public String getVendor()", "public String getToolchain()", "public int getPlatformVersion()", "public int getStaticSwVersion()", "public int getToolchainVersion()", "public float getPeakMips()", "public float getStoppedPowerDrawMw()", "public float getSleepPowerDrawMw()", "public float getPeakPowerDrawMw()", "public int[] getSupportedSensors()", "public MemoryRegion[] getMemoryRegions()", "public long getChrePlatformId()", "public byte getChreApiMajorVersion()", "public byte getChreApiMinorVersion()", "public short getChrePatchVersion()", "public String toString()", "public void dump(ProtoOutputStream proto)", "public boolean equals(@Nullable Object object)", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)" ],
  "variableNames" : [ "mId", "mName", "mVendor", "mToolchain", "mPlatformVersion", "mToolchainVersion", "mPeakMips", "mStoppedPowerDrawMw", "mSleepPowerDrawMw", "mPeakPowerDrawMw", "mMaxPacketLengthBytes", "mSupportsReliableMessages", "mChreApiMajorVersion", "mChreApiMinorVersion", "mChrePatchVersion", "mChrePlatformId", "mSupportedSensors", "mMemoryRegions", "CREATOR" ]
}