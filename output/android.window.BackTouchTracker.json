{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/BackTouchTracker.java",
  "packageName" : "android.window",
  "className" : "BackTouchTracker",
  "comment" : "\n * Helper class to record the touch location for gesture and generate back events.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "PREDICTIVE_BACK_LINEAR_DISTANCE_PROP",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LINEAR_DISTANCE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLinearDistance",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxDistance",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNonLinearFactor",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLatestTouchX",
    "type" : "float",
    "comment" : "\n     * Location of the latest touch event\n     ",
    "links" : [ ]
  }, {
    "name" : "mLatestTouchY",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTriggerBack",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitTouchX",
    "type" : "float",
    "comment" : "\n     * Location of the initial touch event of the back gesture.\n     ",
    "links" : [ ]
  }, {
    "name" : "mInitTouchY",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLatestVelocityX",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLatestVelocityY",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartThresholdX",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSwipeEdge",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShouldUpdateStartLocation",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "TouchTrackerState",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void update(float touchX, float touchY, float velocityX, float velocityY)",
    "returnType" : "void",
    "comment" : "\n     * Updates the tracker with a new motion event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setTriggerBack(boolean triggerBack)",
    "returnType" : "void",
    "comment" : " Sets whether the back gesture is past the trigger threshold. ",
    "links" : [ ]
  }, {
    "name" : "public boolean getTriggerBack()",
    "returnType" : "boolean",
    "comment" : " Gets whether the back gesture is past the trigger threshold. ",
    "links" : [ ]
  }, {
    "name" : "public boolean shouldUpdateStartLocation()",
    "returnType" : "boolean",
    "comment" : " Returns if the start location should be updated. ",
    "links" : [ ]
  }, {
    "name" : "public void setShouldUpdateStartLocation(boolean shouldUpdate)",
    "returnType" : "void",
    "comment" : " Sets if the start location should be updated. ",
    "links" : [ ]
  }, {
    "name" : "public void setState(TouchTrackerState state)",
    "returnType" : "void",
    "comment" : " Sets the state of the touch tracker. ",
    "links" : [ ]
  }, {
    "name" : "public boolean isInInitialState()",
    "returnType" : "boolean",
    "comment" : " Returns if the tracker is in initial state. ",
    "links" : [ ]
  }, {
    "name" : "public boolean isActive()",
    "returnType" : "boolean",
    "comment" : " Returns if a back gesture is active. ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFinished()",
    "returnType" : "boolean",
    "comment" : " Returns if a back gesture has been finished. ",
    "links" : [ ]
  }, {
    "name" : "public void setGestureStartLocation(float touchX, float touchY, int swipeEdge)",
    "returnType" : "void",
    "comment" : " Sets the start location of the back gesture. ",
    "links" : [ ]
  }, {
    "name" : "public void updateStartLocation()",
    "returnType" : "void",
    "comment" : " Update the start location used to compute the progress to the latest touch location. ",
    "links" : [ ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : " Resets the tracker. ",
    "links" : [ ]
  }, {
    "name" : "public BackMotionEvent createStartEvent(RemoteAnimationTarget target)",
    "returnType" : "BackMotionEvent",
    "comment" : " Creates a start {@link BackMotionEvent}. ",
    "links" : [ "android.window.BackMotionEvent" ]
  }, {
    "name" : "public BackMotionEvent createProgressEvent()",
    "returnType" : "BackMotionEvent",
    "comment" : " Creates a progress {@link BackMotionEvent}. ",
    "links" : [ "android.window.BackMotionEvent" ]
  }, {
    "name" : "public float getProgress(float touchX)",
    "returnType" : "float",
    "comment" : "\n     * Progress value computed from the touch position.\n     *\n     * @param touchX the X touch position of the {@link MotionEvent}.\n     * @return progress value\n     ",
    "links" : [ "android.view.MotionEvent" ]
  }, {
    "name" : "public float getMaxDistance()",
    "returnType" : "float",
    "comment" : "\n     * Maximum distance in pixels.\n     * Progress is considered to be completed (1f) when this limit is exceeded.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getLinearDistance()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getNonLinearFactor()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public BackMotionEvent createProgressEvent(float progress)",
    "returnType" : "BackMotionEvent",
    "comment" : " Creates a progress {@link BackMotionEvent} for the given progress. ",
    "links" : [ "android.window.BackMotionEvent" ]
  }, {
    "name" : "public void setProgressThresholds(float linearDistance, float maxDistance, float nonLinearFactor)",
    "returnType" : "void",
    "comment" : " Sets the thresholds for computing progress. ",
    "links" : [ ]
  }, {
    "name" : "public void dump(PrintWriter pw, String prefix)",
    "returnType" : "void",
    "comment" : " Dumps debugging info. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void update(float touchX, float touchY, float velocityX, float velocityY)", "public void setTriggerBack(boolean triggerBack)", "public boolean getTriggerBack()", "public boolean shouldUpdateStartLocation()", "public void setShouldUpdateStartLocation(boolean shouldUpdate)", "public void setState(TouchTrackerState state)", "public boolean isInInitialState()", "public boolean isActive()", "public boolean isFinished()", "public void setGestureStartLocation(float touchX, float touchY, int swipeEdge)", "public void updateStartLocation()", "public void reset()", "public BackMotionEvent createStartEvent(RemoteAnimationTarget target)", "public BackMotionEvent createProgressEvent()", "public float getProgress(float touchX)", "public float getMaxDistance()", "public float getLinearDistance()", "public float getNonLinearFactor()", "public BackMotionEvent createProgressEvent(float progress)", "public void setProgressThresholds(float linearDistance, float maxDistance, float nonLinearFactor)", "public void dump(PrintWriter pw, String prefix)" ],
  "variableNames" : [ "PREDICTIVE_BACK_LINEAR_DISTANCE_PROP", "LINEAR_DISTANCE", "mLinearDistance", "mMaxDistance", "mNonLinearFactor", "mLatestTouchX", "mLatestTouchY", "mTriggerBack", "mInitTouchX", "mInitTouchY", "mLatestVelocityX", "mLatestVelocityY", "mStartThresholdX", "mSwipeEdge", "mShouldUpdateStartLocation", "mState" ]
}