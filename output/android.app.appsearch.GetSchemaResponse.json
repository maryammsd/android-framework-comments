{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/GetSchemaResponse.java",
  "packageName" : "android.app.appsearch",
  "className" : "GetSchemaResponse",
  "comment" : " The response class of {@link AppSearchSession#getSchema} ",
  "links" : [ "android.app.appsearch.AppSearchSession#getSchema" ],
  "variables" : [ {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<GetSchemaResponse>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemas",
    "type" : "List<AppSearchSchema>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVisibilityConfigs",
    "type" : "List<InternalVisibilityConfig>",
    "comment" : "\n     * List of VisibilityConfigs for the current schema. May be {@code null} if retrieving the\n     * visibility settings is not possible on the current backend.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSchemasCached",
    "type" : "Set<AppSearchSchema>",
    "comment" : "\n     * This set contains all schemas most recently successfully provided to {@link\n     * AppSearchSession#setSchema}. We do lazy fetch, the object will be created when you first time\n     * fetch it.\n     ",
    "links" : [ "android.app.appsearch.AppSearchSession#setSchema" ]
  }, {
    "name" : "mSchemasNotDisplayedBySystemCached",
    "type" : "Set<String>",
    "comment" : "\n     * This Set contains all schemas that are not displayed by the system. All values in the set are\n     * prefixed with the package-database prefix. We do lazy fetch, the object will be created when\n     * you first time fetch it.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSchemasVisibleToPackagesCached",
    "type" : "Map<String, Set<PackageIdentifier>>",
    "comment" : "\n     * This map contains all schemas and {@link PackageIdentifier} that has access to the schema.\n     * All keys in the map are prefixed with the package-database prefix. We do lazy fetch, the\n     * object will be created when you first time fetch it.\n     ",
    "links" : [ "android.app.appsearch.PackageIdentifier" ]
  }, {
    "name" : "mSchemasVisibleToPermissionsCached",
    "type" : "Map<String, Set<Set<Integer>>>",
    "comment" : "\n     * This map contains all schemas and Android Permissions combinations that are required to\n     * access the schema. All keys in the map are prefixed with the package-database prefix. We do\n     * lazy fetch, the object will be created when you first time fetch it. The Map is constructed\n     * in ANY-ALL cases. The querier could read the {@link GenericDocument} objects under the {@code\n     * schemaType} if they holds ALL required permissions of ANY combinations. The value set\n     * represents {@link android.app.appsearch.SetSchemaRequest.AppSearchSupportedPermission}.\n     ",
    "links" : [ "android.app.appsearch.SetSchemaRequest.AppSearchSupportedPermission", "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "mPubliclyVisibleSchemasCached",
    "type" : "Map<String, PackageIdentifier>",
    "comment" : "\n     * This map contains all publicly visible schemas and the {@link PackageIdentifier} specifying\n     * the package that the schemas are from.\n     ",
    "links" : [ "android.app.appsearch.PackageIdentifier" ]
  }, {
    "name" : "mSchemasVisibleToConfigsCached",
    "type" : "Map<String, Set<SchemaVisibilityConfig>>",
    "comment" : "\n     * This map contains all {@link SchemaVisibilityConfig}s that has access to the schema. All keys\n     * in the map are prefixed with the package-database prefix. We do lazy fetch, the object will\n     * be created when you first time fetch it.\n     ",
    "links" : [ "android.app.appsearch.SchemaVisibilityConfig" ]
  } ],
  "methods" : [ {
    "name" : "public int getVersion()",
    "returnType" : "int",
    "comment" : "\n     * Returns the overall database schema version.\n     *\n     * <p>If the database is empty, 0 will be returned.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<AppSearchSchema> getSchemas()",
    "returnType" : "Set<AppSearchSchema>",
    "comment" : "\n     * Return the schemas most recently successfully provided to {@link AppSearchSession#setSchema}.\n     ",
    "links" : [ "android.app.appsearch.AppSearchSession#setSchema" ]
  }, {
    "name" : "public Set<String> getSchemaTypesNotDisplayedBySystem()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Returns all the schema types that are opted out of being displayed and visible on any system\n     * UI surface.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, Set<PackageIdentifier>> getSchemaTypesVisibleToPackages()",
    "returnType" : "Map<String, Set<PackageIdentifier>>",
    "comment" : "\n     * Returns a mapping of schema types to the set of packages that have access to that schema\n     * type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, Set<Set<Integer>>> getRequiredPermissionsForSchemaTypeVisibility()",
    "returnType" : "Map<String, Set<Set<Integer>>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Map<String, PackageIdentifier> getPubliclyVisibleSchemas()",
    "returnType" : "Map<String, PackageIdentifier>",
    "comment" : "\n     * Returns a mapping of publicly visible schemas to the {@link PackageIdentifier} specifying the\n     * package the schemas are from.\n     *\n     * <p>If no schemas have been set as publicly visible, an empty set will be returned.\n     ",
    "links" : [ "android.app.appsearch.PackageIdentifier" ]
  }, {
    "name" : "public Map<String, Set<SchemaVisibilityConfig>> getSchemaTypesVisibleToConfigs()",
    "returnType" : "Map<String, Set<SchemaVisibilityConfig>>",
    "comment" : "\n     * Returns a mapping of schema types to the set of {@link SchemaVisibilityConfig} that have\n     * access to that schema type.\n     *\n     * @see SetSchemaRequest.Builder#addSchemaTypeVisibleToConfig\n     ",
    "links" : [ "android.app.appsearch.SchemaVisibilityConfig" ]
  }, {
    "name" : "private List<InternalVisibilityConfig> getVisibilityConfigsOrThrow()",
    "returnType" : "List<InternalVisibilityConfig>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getVersion()", "public Set<AppSearchSchema> getSchemas()", "public Set<String> getSchemaTypesNotDisplayedBySystem()", "public Map<String, Set<PackageIdentifier>> getSchemaTypesVisibleToPackages()", "public Map<String, Set<Set<Integer>>> getRequiredPermissionsForSchemaTypeVisibility()", "public Map<String, PackageIdentifier> getPubliclyVisibleSchemas()", "public Map<String, Set<SchemaVisibilityConfig>> getSchemaTypesVisibleToConfigs()", "private List<InternalVisibilityConfig> getVisibilityConfigsOrThrow()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "CREATOR", "mVersion", "mSchemas", "mVisibilityConfigs", "mSchemasCached", "mSchemasNotDisplayedBySystemCached", "mSchemasVisibleToPackagesCached", "mSchemasVisibleToPermissionsCached", "mPubliclyVisibleSchemasCached", "mSchemasVisibleToConfigsCached" ]
}