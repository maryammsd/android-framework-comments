{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/JoinSpec.java",
  "packageName" : "android.app.appsearch",
  "className" : "Builder",
  "comment" : " Builder for {@link JoinSpec objects}. ",
  "links" : [ "android.app.appsearch.JoinSpec" ],
  "variables" : [ {
    "name" : "EMPTY_SEARCH_SPEC",
    "type" : "SearchSpec",
    "comment" : " The default nested SearchSpec.",
    "links" : [ ]
  }, {
    "name" : "mNestedQuery",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNestedSearchSpec",
    "type" : "SearchSpec",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChildPropertyExpression",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxJoinedResultCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAggregationScoringStrategy",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setNestedSearch(@NonNull String nestedQuery, @NonNull SearchSpec nestedSearchSpec)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the query and the SearchSpec for the documents being joined. This will score and\n         * rank the joined documents as well as filter the joined documents.\n         *\n         * <p>If {@link SearchSpec#RANKING_STRATEGY_JOIN_AGGREGATE_SCORE} is set in the outer {@link\n         * SearchSpec}, the resulting signals will be used to rank the parent documents. Note that\n         * the aggregation strategy also needs to be set with {@link\n         * JoinSpec.Builder#setAggregationScoringStrategy}, otherwise the default will be {@link\n         * JoinSpec#AGGREGATION_SCORING_OUTER_RESULT_RANKING_SIGNAL}, which will just use the parent\n         * documents ranking signal.\n         *\n         * <p>If this method is never called, {@link JoinSpec#getNestedQuery} will return an empty\n         * string, meaning we will join with every possible document that matches the equality\n         * constraints and hasn't been filtered out by the type or namespace filters.\n         *\n         * @see JoinSpec#getNestedQuery\n         * @see JoinSpec#getNestedSearchSpec\n         ",
    "links" : [ "android.app.appsearch.JoinSpec#AGGREGATION_SCORING_OUTER_RESULT_RANKING_SIGNAL", "android.app.appsearch.JoinSpec#getNestedQuery", "android.app.appsearch.SearchSpec#RANKING_STRATEGY_JOIN_AGGREGATE_SCORE", "JoinSpec.Builder#setAggregationScoringStrategy", "android.app.appsearch.SearchSpec" ]
  }, {
    "name" : "public Builder setMaxJoinedResultCount(int maxJoinedResultCount)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the max amount of {@link SearchResults} to return with the parent document, with a\n         * default of 10 SearchResults.\n         *\n         * <p>This does NOT limit the number of results that are joined with the parent document for\n         * scoring. This means that, when set, only a maximum of {@code maxJoinedResultCount}\n         * results will be returned with each parent document, but all results that are joined with\n         * a parent will factor into the score.\n         ",
    "links" : [ "android.app.appsearch.SearchResults" ]
  }, {
    "name" : "public Builder setAggregationScoringStrategy(@AggregationScoringStrategy int aggregationScoringStrategy)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets how we derive a single score from a list of joined documents.\n         *\n         * <p>The default scoring strategy is {@link\n         * #AGGREGATION_SCORING_OUTER_RESULT_RANKING_SIGNAL}, which specifies that the ranking\n         * signal of the outer parent document will be used.\n         *\n         * @see SearchSpec#RANKING_STRATEGY_JOIN_AGGREGATE_SCORE\n         ",
    "links" : [ "#AGGREGATION_SCORING_OUTER_RESULT_RANKING_SIGNAL" ]
  }, {
    "name" : "public JoinSpec build()",
    "returnType" : "JoinSpec",
    "comment" : " Constructs a new {@link JoinSpec} from the contents of this builder. ",
    "links" : [ "android.app.appsearch.JoinSpec" ]
  } ],
  "methodNames" : [ "public Builder setNestedSearch(@NonNull String nestedQuery, @NonNull SearchSpec nestedSearchSpec)", "public Builder setMaxJoinedResultCount(int maxJoinedResultCount)", "public Builder setAggregationScoringStrategy(@AggregationScoringStrategy int aggregationScoringStrategy)", "public JoinSpec build()" ],
  "variableNames" : [ "EMPTY_SEARCH_SPEC", "mNestedQuery", "mNestedSearchSpec", "mChildPropertyExpression", "mMaxJoinedResultCount", "mAggregationScoringStrategy" ]
}