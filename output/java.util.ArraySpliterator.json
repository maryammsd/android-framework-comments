{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/Spliterators.java",
  "packageName" : "java.util",
  "className" : "ArraySpliterator",
  "comment" : "\n     * A Spliterator designed for use by sources that traverse and split\n     * elements maintained in an unmodifiable {@code Object[]} array.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "array",
    "type" : "Object[]",
    "comment" : "\n         * The array, explicitly typed as Object[]. Unlike in some other\n         * classes (see for example CR 6260652), we do not need to\n         * screen arguments to ensure they are exactly of type Object[]\n         * so long as no methods write into the array or serialize it,\n         * which we ensure here by defining this class as final.\n         ",
    "links" : [ ]
  }, {
    "name" : "index",
    "type" : "int",
    "comment" : " current index, modified on advance/split",
    "links" : [ ]
  }, {
    "name" : "fence",
    "type" : "int",
    "comment" : " one past last index",
    "links" : [ ]
  }, {
    "name" : "characteristics",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Spliterator<T> trySplit()",
    "returnType" : "Spliterator<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forEachRemaining(Consumer<? super T> action)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean tryAdvance(Consumer<? super T> action)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long estimateSize()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int characteristics()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Comparator<? super T> getComparator()",
    "returnType" : "Comparator<? super T>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Spliterator<T> trySplit()", "public void forEachRemaining(Consumer<? super T> action)", "public boolean tryAdvance(Consumer<? super T> action)", "public long estimateSize()", "public int characteristics()", "public Comparator<? super T> getComparator()" ],
  "variableNames" : [ "array", "index", "fence", "characteristics" ]
}