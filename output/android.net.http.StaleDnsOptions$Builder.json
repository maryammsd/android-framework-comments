{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/http/DnsOptions.java",
  "packageName" : "android.net.http",
  "className" : "Builder",
  "comment" : "\n         * Builder for {@link StaleDnsOptions}.\n         ",
  "links" : [ "StaleDnsOptions" ],
  "variables" : [ {
    "name" : "mFreshLookupTimeout",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxExpiredDelay",
    "type" : "Duration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowCrossNetworkUsage",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUseStaleOnNameNotResolved",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setFreshLookupTimeout(@NonNull Duration freshLookupTimeout)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets how long (in milliseconds) to wait for a DNS request to return before using a\n             * stale result instead. If set to zero, returns stale results instantly but continues\n             * the DNS request in the background to update the cache.\n             *\n             * @return the builder for chaining\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxExpiredDelay(@NonNull Duration maxExpiredDelay)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets how long (in milliseconds) past expiration to consider using expired results.\n             * Setting the value to zero means expired records can be used indefinitely.\n             *\n             * @return the builder for chaining\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAllowCrossNetworkUsage(@DnsOptionState int state)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether to return results originating from other networks or not. Normally,\n             * the HTTP stack clears the DNS cache entirely when switching connections, e.g. between\n             * two Wi-Fi networks or from Wi-Fi to 4G.\n             *\n             * @param state one of the DNS_OPTION_* values\n             * @return the builder for chaining\n             ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUseStaleOnNameNotResolved(@DnsOptionState int state)",
    "returnType" : "Builder",
    "comment" : "\n             * Sets whether to allow use of stale DNS results when network resolver fails to resolve\n             * the hostname.\n             *\n             * <p>Depending on the use case, if the DNS resolver quickly sees a fresh failure, it\n             * may be desirable to use the failure as it is technically the fresher result, and we\n             * had such a fresh result quickly; or, prefer having any result (even if stale) to use\n             * over dealing with a DNS failure.\n             *\n             * @param state one of the DNS_OPTION_* values\n             * @return the builder for chaining\n             ",
    "links" : [ ]
  }, {
    "name" : "public StaleDnsOptions build()",
    "returnType" : "StaleDnsOptions",
    "comment" : "\n             * Creates and returns the final {@link StaleDnsOptions} instance, based on the values\n             * in this builder.\n             ",
    "links" : [ "StaleDnsOptions" ]
  } ],
  "methodNames" : [ "public Builder setFreshLookupTimeout(@NonNull Duration freshLookupTimeout)", "public Builder setMaxExpiredDelay(@NonNull Duration maxExpiredDelay)", "public Builder setAllowCrossNetworkUsage(@DnsOptionState int state)", "public Builder setUseStaleOnNameNotResolved(@DnsOptionState int state)", "public StaleDnsOptions build()" ],
  "variableNames" : [ "mFreshLookupTimeout", "mMaxExpiredDelay", "mAllowCrossNetworkUsage", "mUseStaleOnNameNotResolved" ]
}