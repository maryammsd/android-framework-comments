{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/Build.java",
  "packageName" : "android.os",
  "className" : "VERSION_CODES",
  "comment" : "\n     * Enumeration of the currently known SDK version codes.  These are the\n     * values that can be found in {@link VERSION#SDK}.  Version numbers\n     * increment monotonically with each official platform release.\n     ",
  "links" : [ "#SDK" ],
  "variables" : [ {
    "name" : "CUR_DEVELOPMENT",
    "type" : "int",
    "comment" : " This must match VMRuntime.SDK_VERSION_CUR_DEVELOPMENT.",
    "links" : [ ]
  }, {
    "name" : "BASE",
    "type" : "int",
    "comment" : "\n         * The original, first, version of Android.  Yay!\n         *\n         * <p>Released publicly as Android 1.0 in September 2008.\n         ",
    "links" : [ ]
  }, {
    "name" : "BASE_1_1",
    "type" : "int",
    "comment" : "\n         * First Android update.\n         *\n         * <p>Released publicly as Android 1.1 in February 2009.\n         ",
    "links" : [ ]
  }, {
    "name" : "CUPCAKE",
    "type" : "int",
    "comment" : "\n         * C.\n         *\n         * <p>Released publicly as Android 1.5 in April 2009.\n         ",
    "links" : [ ]
  }, {
    "name" : "DONUT",
    "type" : "int",
    "comment" : "\n         * D.\n         *\n         * <p>Released publicly as Android 1.6 in September 2009.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li> They must explicitly request the\n         * {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE} permission to be\n         * able to modify the contents of the SD card.  (Apps targeting\n         * earlier versions will always request the permission.)\n         * <li> They must explicitly request the\n         * {@link android.Manifest.permission#READ_PHONE_STATE} permission to be\n         * able to be able to retrieve phone state info.  (Apps targeting\n         * earlier versions will always request the permission.)\n         * <li> They are assumed to support different screen densities and\n         * sizes.  (Apps targeting earlier versions are assumed to only support\n         * medium density normal size screens unless otherwise indicated).\n         * They can still explicitly specify screen support either way with the\n         * supports-screens manifest tag.\n         * <li> {@link android.widget.TabHost} will use the new dark tab\n         * background design.\n         * </ul>\n         ",
    "links" : [ "android.Manifest.permission#WRITE_EXTERNAL_STORAGE", "android.widget.TabHost", "android.Manifest.permission#READ_PHONE_STATE" ]
  }, {
    "name" : "ECLAIR",
    "type" : "int",
    "comment" : "\n         * E.\n         *\n         * <p>Released publicly as Android 2.0 in October 2009.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li> The {@link android.app.Service#onStartCommand\n         * Service.onStartCommand} function will return the new\n         * {@link android.app.Service#START_STICKY} behavior instead of the\n         * old compatibility {@link android.app.Service#START_STICKY_COMPATIBILITY}.\n         * <li> The {@link android.app.Activity} class will now execute back\n         * key presses on the key up instead of key down, to be able to detect\n         * canceled presses from virtual keys.\n         * <li> The {@link android.widget.TabWidget} class will use a new color scheme\n         * for tabs. In the new scheme, the foreground tab has a medium gray background\n         * the background tabs have a dark gray background.\n         * </ul>\n         ",
    "links" : [ "android.app.Service#START_STICKY_COMPATIBILITY", "android.app.Service#START_STICKY", "android.widget.TabWidget", "android.app.Service#onStartCommandService.onStartCommand", "android.app.Activity" ]
  }, {
    "name" : "ECLAIR_0_1",
    "type" : "int",
    "comment" : "\n         * E incremental update.\n         *\n         * <p>Released publicly as Android 2.0.1 in December 2009.\n         ",
    "links" : [ ]
  }, {
    "name" : "ECLAIR_MR1",
    "type" : "int",
    "comment" : "\n         * E MR1.\n         *\n         * <p>Released publicly as Android 2.1 in January 2010.\n         ",
    "links" : [ ]
  }, {
    "name" : "FROYO",
    "type" : "int",
    "comment" : "\n         * F.\n         *\n         * <p>Released publicly as Android 2.2 in May 2010.\n         ",
    "links" : [ ]
  }, {
    "name" : "GINGERBREAD",
    "type" : "int",
    "comment" : "\n         * G.\n         *\n         * <p>Released publicly as Android 2.3 in December 2010.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li> The application's notification icons will be shown on the new\n         * dark status bar background, so must be visible in this situation.\n         * </ul>\n         ",
    "links" : [ ]
  }, {
    "name" : "GINGERBREAD_MR1",
    "type" : "int",
    "comment" : "\n         * G MR1.\n         *\n         * <p>Released publicly as Android 2.3.3 in February 2011.\n         ",
    "links" : [ ]
  }, {
    "name" : "HONEYCOMB",
    "type" : "int",
    "comment" : "\n         * H.\n         *\n         * <p>Released publicly as Android 3.0 in February 2011.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li> The default theme for applications is now dark holographic:\n         *      {@link android.R.style#Theme_Holo}.\n         * <li> On large screen devices that do not have a physical menu\n         * button, the soft (compatibility) menu is disabled.\n         * <li> The activity lifecycle has changed slightly as per\n         * {@link android.app.Activity}.\n         * <li> An application will crash if it does not call through\n         * to the super implementation of its\n         * {@link android.app.Activity#onPause Activity.onPause()} method.\n         * <li> When an application requires a permission to access one of\n         * its components (activity, receiver, service, provider), this\n         * permission is no longer enforced when the application wants to\n         * access its own component.  This means it can require a permission\n         * on a component that it does not itself hold and still access that\n         * component.\n         * <li> {@link android.content.Context#getSharedPreferences\n         * Context.getSharedPreferences()} will not automatically reload\n         * the preferences if they have changed on storage, unless\n         * {@link android.content.Context#MODE_MULTI_PROCESS} is used.\n         * <li> {@link android.view.ViewGroup#setMotionEventSplittingEnabled}\n         * will default to true.\n         * <li> {@link android.view.WindowManager.LayoutParams#FLAG_SPLIT_TOUCH}\n         * is enabled by default on windows.\n         * <li> {@link android.widget.PopupWindow#isSplitTouchEnabled()\n         * PopupWindow.isSplitTouchEnabled()} will return true by default.\n         * <li> {@link android.widget.GridView} and {@link android.widget.ListView}\n         * will use {@link android.view.View#setActivated View.setActivated}\n         * for selected items if they do not implement {@link android.widget.Checkable}.\n         * <li> {@link android.widget.Scroller} will be constructed with\n         * \"flywheel\" behavior enabled by default.\n         * </ul>\n         ",
    "links" : [ "android.widget.Scroller", "android.content.Context#MODE_MULTI_PROCESS", "android.widget.GridView", "android.view.ViewGroup#setMotionEventSplittingEnabled", "android.widget.Checkable", "android.widget.PopupWindow#isSplitTouchEnabled()", "android.view.WindowManager.LayoutParams#FLAG_SPLIT_TOUCH", "android.R.style#Theme_Holo", "android.app.Activity#onPause", "android.widget.ListView", "android.content.Context#getSharedPreferencesContext.getSharedPreferences()", "android.app.Activity", "android.view.View#setActivated" ]
  }, {
    "name" : "HONEYCOMB_MR1",
    "type" : "int",
    "comment" : "\n         * H MR1.\n         *\n         * <p>Released publicly as Android 3.1 in May 2011.\n         ",
    "links" : [ ]
  }, {
    "name" : "HONEYCOMB_MR2",
    "type" : "int",
    "comment" : "\n         * H MR2.\n         *\n         * <p>Released publicly as Android 3.2 in July 2011.\n         * <p>Update to Honeycomb MR1 to support 7 inch tablets, improve\n         * screen compatibility mode, etc.</p>\n         *\n         * <p>As of this version, applications that don't say whether they\n         * support XLARGE screens will be assumed to do so only if they target\n         * {@link #HONEYCOMB} or later; it had been {@link #GINGERBREAD} or\n         * later.  Applications that don't support a screen size at least as\n         * large as the current screen will provide the user with a UI to\n         * switch them in to screen size compatibility mode.</p>\n         *\n         * <p>This version introduces new screen size resource qualifiers\n         * based on the screen size in dp: see\n         * {@link android.content.res.Configuration#screenWidthDp},\n         * {@link android.content.res.Configuration#screenHeightDp}, and\n         * {@link android.content.res.Configuration#smallestScreenWidthDp}.\n         * Supplying these in &lt;supports-screens&gt; as per\n         * {@link android.content.pm.ApplicationInfo#requiresSmallestWidthDp},\n         * {@link android.content.pm.ApplicationInfo#compatibleWidthLimitDp}, and\n         * {@link android.content.pm.ApplicationInfo#largestWidthLimitDp} is\n         * preferred over the older screen size buckets and for older devices\n         * the appropriate buckets will be inferred from them.</p>\n         *\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li><p>New {@link android.content.pm.PackageManager#FEATURE_SCREEN_PORTRAIT}\n         * and {@link android.content.pm.PackageManager#FEATURE_SCREEN_LANDSCAPE}\n         * features were introduced in this release.  Applications that target\n         * previous platform versions are assumed to require both portrait and\n         * landscape support in the device; when targeting Honeycomb MR1 or\n         * greater the application is responsible for specifying any specific\n         * orientation it requires.</p>\n         * <li><p>{@link android.os.AsyncTask} will use the serial executor\n         * by default when calling {@link android.os.AsyncTask#execute}.</p>\n         * <li><p>{@link android.content.pm.ActivityInfo#configChanges\n         * ActivityInfo.configChanges} will have the\n         * {@link android.content.pm.ActivityInfo#CONFIG_SCREEN_SIZE} and\n         * {@link android.content.pm.ActivityInfo#CONFIG_SMALLEST_SCREEN_SIZE}\n         * bits set; these need to be cleared for older applications because\n         * some developers have done absolute comparisons against this value\n         * instead of correctly masking the bits they are interested in.\n         * </ul>\n         ",
    "links" : [ "android.content.pm.PackageManager#FEATURE_SCREEN_LANDSCAPE", "android.os.AsyncTask", "android.content.pm.ActivityInfo#configChangesActivityInfo.configChanges", "android.content.pm.PackageManager#FEATURE_SCREEN_PORTRAIT", "#HONEYCOMB", "android.content.res.Configuration#screenWidthDp", "android.os.AsyncTask#execute", "#GINGERBREAD", "android.content.pm.ApplicationInfo#compatibleWidthLimitDp", "android.content.pm.ActivityInfo#CONFIG_SMALLEST_SCREEN_SIZE", "android.content.pm.ApplicationInfo#largestWidthLimitDp", "android.content.pm.ActivityInfo#CONFIG_SCREEN_SIZE", "android.content.res.Configuration#screenHeightDp", "android.content.pm.ApplicationInfo#requiresSmallestWidthDp", "android.content.res.Configuration#smallestScreenWidthDp" ]
  }, {
    "name" : "ICE_CREAM_SANDWICH",
    "type" : "int",
    "comment" : "\n         * I.\n         *\n         * <p>Released publicly as Android 4.0 in October 2011.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li> For devices without a dedicated menu key, the software compatibility\n         * menu key will not be shown even on phones.  By targeting Ice Cream Sandwich\n         * or later, your UI must always have its own menu UI affordance if needed,\n         * on both tablets and phones.  The ActionBar will take care of this for you.\n         * <li> 2d drawing hardware acceleration is now turned on by default.\n         * You can use\n         * {@link android.R.attr#hardwareAccelerated android:hardwareAccelerated}\n         * to turn it off if needed, although this is strongly discouraged since\n         * it will result in poor performance on larger screen devices.\n         * <li> The default theme for applications is now the \"device default\" theme:\n         *      {@link android.R.style#Theme_DeviceDefault}. This may be the\n         *      holo dark theme or a different dark theme defined by the specific device.\n         *      The {@link android.R.style#Theme_Holo} family must not be modified\n         *      for a device to be considered compatible. Applications that explicitly\n         *      request a theme from the Holo family will be guaranteed that these themes\n         *      will not change character within the same platform version. Applications\n         *      that wish to blend in with the device should use a theme from the\n         *      {@link android.R.style#Theme_DeviceDefault} family.\n         * <li> Managed cursors can now throw an exception if you directly close\n         * the cursor yourself without stopping the management of it; previously failures\n         * would be silently ignored.\n         * <li> The fadingEdge attribute on views will be ignored (fading edges is no\n         * longer a standard part of the UI).  A new requiresFadingEdge attribute allows\n         * applications to still force fading edges on for special cases.\n         * <li> {@link android.content.Context#bindService Context.bindService()}\n         * will not automatically add in {@link android.content.Context#BIND_WAIVE_PRIORITY}.\n         * <li> App Widgets will have standard padding automatically added around\n         * them, rather than relying on the padding being baked into the widget itself.\n         * <li> An exception will be thrown if you try to change the type of a\n         * window after it has been added to the window manager.  Previously this\n         * would result in random incorrect behavior.\n         * <li> {@link android.view.animation.AnimationSet} will parse out\n         * the duration, fillBefore, fillAfter, repeatMode, and startOffset\n         * XML attributes that are defined.\n         * <li> {@link android.app.ActionBar#setHomeButtonEnabled\n         * ActionBar.setHomeButtonEnabled()} is false by default.\n         * </ul>\n         ",
    "links" : [ "android.R.style#Theme_Holo", "android.app.ActionBar#setHomeButtonEnabledActionBar.setHomeButtonEnabled()", "android.view.animation.AnimationSet", "android.content.Context#bindService", "android.R.style#Theme_DeviceDefault", "android.content.Context#BIND_WAIVE_PRIORITY", "android.R.attr#hardwareAccelerated" ]
  }, {
    "name" : "ICE_CREAM_SANDWICH_MR1",
    "type" : "int",
    "comment" : "\n         * I MR1.\n         *\n         * <p>Released publicly as Android 4.03 in December 2011.\n         ",
    "links" : [ ]
  }, {
    "name" : "JELLY_BEAN",
    "type" : "int",
    "comment" : "\n         * J.\n         *\n         * <p>Released publicly as Android 4.1 in July 2012.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li> You must explicitly request the {@link android.Manifest.permission#READ_CALL_LOG}\n         * and/or {@link android.Manifest.permission#WRITE_CALL_LOG} permissions;\n         * access to the call log is no longer implicitly provided through\n         * {@link android.Manifest.permission#READ_CONTACTS} and\n         * {@link android.Manifest.permission#WRITE_CONTACTS}.\n         * <li> {@link android.widget.RemoteViews} will throw an exception if\n         * setting an onClick handler for views being generated by a\n         * {@link android.widget.RemoteViewsService} for a collection container;\n         * previously this just resulted in a warning log message.\n         * <li> New {@link android.app.ActionBar} policy for embedded tabs:\n         * embedded tabs are now always stacked in the action bar when in portrait\n         * mode, regardless of the size of the screen.\n         * <li> {@link android.webkit.WebSettings#setAllowFileAccessFromFileURLs(boolean)\n         * WebSettings.setAllowFileAccessFromFileURLs} and\n         * {@link android.webkit.WebSettings#setAllowUniversalAccessFromFileURLs(boolean)\n         * WebSettings.setAllowUniversalAccessFromFileURLs} default to false.\n         * <li> Calls to {@link android.content.pm.PackageManager#setComponentEnabledSetting\n         * PackageManager.setComponentEnabledSetting} will now throw an\n         * IllegalArgumentException if the given component class name does not\n         * exist in the application's manifest.\n         * <li> {@code NfcAdapter.setNdefPushMessage},\n         * {@code NfcAdapter.setNdefPushMessageCallback} and\n         * {@code NfcAdapter.setOnNdefPushCompleteCallback} will throw\n         * IllegalStateException if called after the Activity has been destroyed.\n         * <li> Accessibility services must require the new\n         * {@link android.Manifest.permission#BIND_ACCESSIBILITY_SERVICE} permission or\n         * they will not be available for use.\n         * <li> {@link android.accessibilityservice.AccessibilityServiceInfo#FLAG_INCLUDE_NOT_IMPORTANT_VIEWS\n         * AccessibilityServiceInfo.FLAG_INCLUDE_NOT_IMPORTANT_VIEWS} must be set\n         * for unimportant views to be included in queries.\n         * </ul>\n         ",
    "links" : [ "android.widget.RemoteViews", "android.app.ActionBar", "android.Manifest.permission#BIND_ACCESSIBILITY_SERVICE", "android.Manifest.permission#READ_CONTACTS", "android.widget.RemoteViewsService", "android.webkit.WebSettings#setAllowUniversalAccessFromFileURLs(boolean)", "android.Manifest.permission#WRITE_CONTACTS", "android.webkit.WebSettings#setAllowFileAccessFromFileURLs(boolean)", "android.Manifest.permission#WRITE_CALL_LOG", "android.Manifest.permission#READ_CALL_LOG", "android.content.pm.PackageManager#setComponentEnabledSettingPackageManager.setComponentEnabledSetting", "android.accessibilityservice.AccessibilityServiceInfo#FLAG_INCLUDE_NOT_IMPORTANT_VIEWSAccessibilityServiceInfo.FLAG_INCLUDE_NOT_IMPORTANT_VIEWS" ]
  }, {
    "name" : "JELLY_BEAN_MR1",
    "type" : "int",
    "comment" : "\n         * J MR1.\n         *\n         * <p>Released publicly as Android 4.2 in November 2012.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li>Content Providers: The default value of {@code android:exported} is now\n         * {@code false}. See\n         * <a href=\"{@docRoot}guide/topics/manifest/provider-element.html#exported\">\n         * the android:exported section</a> in the provider documentation for more details.</li>\n         * <li>{@link android.view.View#getLayoutDirection() View.getLayoutDirection()}\n         * can return different values than {@link android.view.View#LAYOUT_DIRECTION_LTR}\n         * based on the locale etc.\n         * <li> {@link android.webkit.WebView#addJavascriptInterface(Object, String)\n         * WebView.addJavascriptInterface} requires explicit annotations on methods\n         * for them to be accessible from Javascript.\n         * </ul>\n         ",
    "links" : [ "android.view.View#LAYOUT_DIRECTION_LTR", "android.view.View#getLayoutDirection()", "android.webkit.WebView#addJavascriptInterface(Object" ]
  }, {
    "name" : "JELLY_BEAN_MR2",
    "type" : "int",
    "comment" : "\n         * J MR2.\n         *\n         * <p>Released publicly as Android 4.3 in July 2013.\n         ",
    "links" : [ ]
  }, {
    "name" : "KITKAT",
    "type" : "int",
    "comment" : "\n         * K.\n         *\n         * <p>Released publicly as Android 4.4 in October 2013.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior. For more information about this release, see the\n         * <a href=\"/about/versions/kitkat/\">Android KitKat overview</a>.</p>\n         * <ul>\n         * <li> The default result of\n         * {@link android.preference.PreferenceActivity#isValidFragment(String)\n         * PreferenceActivity.isValueFragment} becomes false instead of true.</li>\n         * <li> In {@link android.webkit.WebView}, apps targeting earlier versions will have\n         * JS URLs evaluated directly and any result of the evaluation will not replace\n         * the current page content.  Apps targetting KITKAT or later that load a JS URL will\n         * have the result of that URL replace the content of the current page</li>\n         * <li> {@link android.app.AlarmManager#set AlarmManager.set} becomes interpreted as\n         * an inexact value, to give the system more flexibility in scheduling alarms.</li>\n         * <li> {@link android.content.Context#getSharedPreferences(String, int)\n         * Context.getSharedPreferences} no longer allows a null name.</li>\n         * <li> {@link android.widget.RelativeLayout} changes to compute wrapped content\n         * margins correctly.</li>\n         * <li> {@link android.app.ActionBar}'s window content overlay is allowed to be\n         * drawn.</li>\n         * <li>The {@link android.Manifest.permission#READ_EXTERNAL_STORAGE}\n         * permission is now always enforced.</li>\n         * <li>Access to package-specific external storage directories belonging\n         * to the calling app no longer requires the\n         * {@link android.Manifest.permission#READ_EXTERNAL_STORAGE} or\n         * {@link android.Manifest.permission#WRITE_EXTERNAL_STORAGE}\n         * permissions.</li>\n         * </ul>\n         ",
    "links" : [ "android.preference.PreferenceActivity#isValidFragment(String)", "android.app.ActionBar", "android.Manifest.permission#WRITE_EXTERNAL_STORAGE", "android.Manifest.permission#READ_EXTERNAL_STORAGE", "android.widget.RelativeLayout", "android.app.AlarmManager#set", "android.webkit.WebView", "android.content.Context#getSharedPreferences(String" ]
  }, {
    "name" : "KITKAT_WATCH",
    "type" : "int",
    "comment" : "\n         * K for watches.\n         *\n         * <p>Released publicly as Android 4.4W in June 2014.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior:</p>\n         * <ul>\n         * <li>{@link android.app.AlertDialog} might not have a default background if the theme does\n         * not specify one.</li>\n         * </ul>\n         ",
    "links" : [ "android.app.AlertDialog" ]
  }, {
    "name" : "L",
    "type" : "int",
    "comment" : "\n         * Temporary until we completely switch to {@link #LOLLIPOP}.\n         * @hide\n         ",
    "links" : [ "#LOLLIPOP" ]
  }, {
    "name" : "LOLLIPOP",
    "type" : "int",
    "comment" : "\n         * L.\n         *\n         * <p>Released publicly as Android 5.0 in November 2014.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior.  For more information about this release, see the\n         * <a href=\"/about/versions/lollipop/\">Android Lollipop overview</a>.</p>\n         * <ul>\n         * <li> {@link android.content.Context#bindService Context.bindService} now\n         * requires an explicit Intent, and will throw an exception if given an implicit\n         * Intent.</li>\n         * <li> {@link android.app.Notification.Builder Notification.Builder} will\n         * not have the colors of their various notification elements adjusted to better\n         * match the new material design look.</li>\n         * <li> {@link android.os.Message} will validate that a message is not currently\n         * in use when it is recycled.</li>\n         * <li> Hardware accelerated drawing in windows will be enabled automatically\n         * in most places.</li>\n         * <li> {@link android.widget.Spinner} throws an exception if attaching an\n         * adapter with more than one item type.</li>\n         * <li> If the app is a launcher, the launcher will be available to the user\n         * even when they are using corporate profiles (which requires that the app\n         * use {@link android.content.pm.LauncherApps} to correctly populate its\n         * apps UI).</li>\n         * <li> Calling {@link android.app.Service#stopForeground Service.stopForeground}\n         * with removeNotification false will modify the still posted notification so that\n         * it is no longer forced to be ongoing.</li>\n         * <li> A {@link android.service.dreams.DreamService} must require the\n         * {@link android.Manifest.permission#BIND_DREAM_SERVICE} permission to be usable.</li>\n         * </ul>\n         ",
    "links" : [ "android.content.pm.LauncherApps", "android.app.Service#stopForeground", "android.os.Message", "android.content.Context#bindService", "android.service.dreams.DreamService", "android.app.Notification.Builder", "android.widget.Spinner", "android.Manifest.permission#BIND_DREAM_SERVICE" ]
  }, {
    "name" : "LOLLIPOP_MR1",
    "type" : "int",
    "comment" : "\n         * L MR1.\n         *\n         * <p>Released publicly as Android 5.1 in March 2015.\n         * <p>For more information about this release, see the\n         * <a href=\"/about/versions/android-5.1\">Android 5.1 APIs</a>.\n         ",
    "links" : [ ]
  }, {
    "name" : "M",
    "type" : "int",
    "comment" : "\n         * M.\n         *\n         * <p>Released publicly as Android 6.0 in October 2015.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior. For more information about this release, see the\n         * <a href=\"/about/versions/marshmallow/\">Android 6.0 Marshmallow overview</a>.</p>\n         * <ul>\n         * <li> Runtime permissions.  Dangerous permissions are no longer granted at\n         * install time, but must be requested by the application at runtime through\n         * {@link android.app.Activity#requestPermissions}.</li>\n         * <li> Bluetooth and Wi-Fi scanning now requires holding the location permission.</li>\n         * <li> {@link android.app.AlarmManager#setTimeZone AlarmManager.setTimeZone} will fail if\n         * the given timezone is non-Olson.</li>\n         * <li> Activity transitions will only return shared\n         * elements mapped in the returned view hierarchy back to the calling activity.</li>\n         * <li> {@link android.view.View} allows a number of behaviors that may break\n         * existing apps: Canvas throws an exception if restore() is called too many times,\n         * widgets may return a hint size when returning UNSPECIFIED measure specs, and it\n         * will respect the attributes {@link android.R.attr#foreground},\n         * {@link android.R.attr#foregroundGravity}, {@link android.R.attr#foregroundTint}, and\n         * {@link android.R.attr#foregroundTintMode}.</li>\n         * <li> {@link android.view.MotionEvent#getButtonState MotionEvent.getButtonState}\n         * will no longer report {@link android.view.MotionEvent#BUTTON_PRIMARY}\n         * and {@link android.view.MotionEvent#BUTTON_SECONDARY} as synonyms for\n         * {@link android.view.MotionEvent#BUTTON_STYLUS_PRIMARY} and\n         * {@link android.view.MotionEvent#BUTTON_STYLUS_SECONDARY}.</li>\n         * <li> {@link android.widget.ScrollView} now respects the layout param margins\n         * when measuring.</li>\n         * </ul>\n         ",
    "links" : [ "android.app.Activity#requestPermissions", "android.R.attr#foregroundTintMode", "android.view.MotionEvent#getButtonState", "android.R.attr#foregroundGravity", "android.R.attr#foregroundTint", "android.app.AlarmManager#setTimeZone", "android.widget.ScrollView", "android.view.View", "android.view.MotionEvent#BUTTON_STYLUS_SECONDARY", "android.R.attr#foreground", "android.view.MotionEvent#BUTTON_PRIMARY", "android.view.MotionEvent#BUTTON_SECONDARY", "android.view.MotionEvent#BUTTON_STYLUS_PRIMARY" ]
  }, {
    "name" : "N",
    "type" : "int",
    "comment" : "\n         * N.\n         *\n         * <p>Released publicly as Android 7.0 in August 2016.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior. For more information about this release, see\n         * the <a href=\"/about/versions/nougat/\">Android Nougat overview</a>.</p>\n         * <ul>\n         * <li> {@link android.app.DownloadManager.Request#setAllowedNetworkTypes\n         * DownloadManager.Request.setAllowedNetworkTypes}\n         * will disable \"allow over metered\" when specifying only\n         * {@link android.app.DownloadManager.Request#NETWORK_WIFI}.</li>\n         * <li> {@link android.app.DownloadManager} no longer allows access to raw\n         * file paths.</li>\n         * <li> {@link android.app.Notification.Builder#setShowWhen\n         * Notification.Builder.setShowWhen}\n         * must be called explicitly to have the time shown, and various other changes in\n         * {@link android.app.Notification.Builder Notification.Builder} to how notifications\n         * are shown.</li>\n         * <li>{@link android.content.Context#MODE_WORLD_READABLE} and\n         * {@link android.content.Context#MODE_WORLD_WRITEABLE} are no longer supported.</li>\n         * <li>{@link android.os.FileUriExposedException} will be thrown to applications.</li>\n         * <li>Applications will see global drag and drops as per\n         * {@link android.view.View#DRAG_FLAG_GLOBAL}.</li>\n         * <li>{@link android.webkit.WebView#evaluateJavascript WebView.evaluateJavascript}\n         * will not persist state from an empty WebView.</li>\n         * <li>{@link android.animation.AnimatorSet} will not ignore calls to end() before\n         * start().</li>\n         * <li>{@link android.app.AlarmManager#cancel(android.app.PendingIntent)\n         * AlarmManager.cancel} will throw a NullPointerException if given a null operation.</li>\n         * <li>{@link android.app.FragmentManager} will ensure fragments have been created\n         * before being placed on the back stack.</li>\n         * <li>{@link android.app.FragmentManager} restores fragments in\n         * {@link android.app.Fragment#onCreate Fragment.onCreate} rather than after the\n         * method returns.</li>\n         * <li>{@link android.R.attr#resizeableActivity} defaults to true.</li>\n         * <li>{@link android.graphics.drawable.AnimatedVectorDrawable} throws exceptions when\n         * opening invalid VectorDrawable animations.</li>\n         * <li>{@link android.view.ViewGroup.MarginLayoutParams} will no longer be dropped\n         * when converting between some types of layout params (such as\n         * {@link android.widget.LinearLayout.LayoutParams LinearLayout.LayoutParams} to\n         * {@link android.widget.RelativeLayout.LayoutParams RelativeLayout.LayoutParams}).</li>\n         * <li>Your application processes will not be killed when the device density changes.</li>\n         * <li>Drag and drop. After a view receives the\n         * {@link android.view.DragEvent#ACTION_DRAG_ENTERED} event, when the drag shadow moves into\n         * a descendant view that can accept the data, the view receives the\n         * {@link android.view.DragEvent#ACTION_DRAG_EXITED} event and won’t receive\n         * {@link android.view.DragEvent#ACTION_DRAG_LOCATION} and\n         * {@link android.view.DragEvent#ACTION_DROP} events while the drag shadow is within that\n         * descendant view, even if the descendant view returns <code>false</code> from its handler\n         * for these events.</li>\n         * </ul>\n         ",
    "links" : [ "android.view.View#DRAG_FLAG_GLOBAL", "android.app.DownloadManager.Request#setAllowedNetworkTypesDownloadManager.Request.setAllowedNetworkTypes", "android.R.attr#resizeableActivity", "android.webkit.WebView#evaluateJavascript", "android.view.DragEvent#ACTION_DRAG_EXITED", "android.app.DownloadManager.Request#NETWORK_WIFI", "android.app.Notification.Builder", "android.app.AlarmManager#cancel(android.app.PendingIntent)", "android.graphics.drawable.AnimatedVectorDrawable", "android.view.DragEvent#ACTION_DROP", "android.app.DownloadManager", "android.view.ViewGroup.MarginLayoutParams", "android.view.DragEvent#ACTION_DRAG_ENTERED", "android.app.Fragment#onCreate", "android.view.DragEvent#ACTION_DRAG_LOCATION", "android.app.Notification.Builder#setShowWhenNotification.Builder.setShowWhen", "android.animation.AnimatorSet", "android.widget.LinearLayout.LayoutParams", "android.content.Context#MODE_WORLD_READABLE", "android.widget.RelativeLayout.LayoutParams", "android.content.Context#MODE_WORLD_WRITEABLE", "android.os.FileUriExposedException", "android.app.FragmentManager" ]
  }, {
    "name" : "N_MR1",
    "type" : "int",
    "comment" : "\n         * N MR1.\n         *\n         * <p>Released publicly as Android 7.1 in October 2016.\n         * <p>For more information about this release, see\n         * <a href=\"/about/versions/nougat/android-7.1\">Android 7.1 for\n         * Developers</a>.\n         ",
    "links" : [ ]
  }, {
    "name" : "O",
    "type" : "int",
    "comment" : "\n         * O.\n         *\n         * <p>Released publicly as Android 8.0 in August 2017.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior. For more information about this release, see\n         * the <a href=\"/about/versions/oreo/\">Android Oreo overview</a>.</p>\n         * <ul>\n         * <li><a href=\"{@docRoot}about/versions/oreo/background.html\">Background execution limits</a>\n         * are applied to the application.</li>\n         * <li>The behavior of AccountManager's\n         * {@link android.accounts.AccountManager#getAccountsByType},\n         * {@link android.accounts.AccountManager#getAccountsByTypeAndFeatures}, and\n         * {@link android.accounts.AccountManager#hasFeatures} has changed as documented there.</li>\n         * <li>{@link android.app.ActivityManager.RunningAppProcessInfo#IMPORTANCE_PERCEPTIBLE_PRE_26}\n         * is now returned as\n         * {@link android.app.ActivityManager.RunningAppProcessInfo#IMPORTANCE_PERCEPTIBLE}.</li>\n         * <li>The {@link android.app.NotificationManager} now requires the use of notification\n         * channels.</li>\n         * <li>Changes to the strict mode that are set in\n         * {@link Application#onCreate Application.onCreate} will no longer be clobbered after\n         * that function returns.</li>\n         * <li>A shared library apk with native code will have that native code included in\n         * the library path of its clients.</li>\n         * <li>{@link android.content.Context#getSharedPreferences Context.getSharedPreferences}\n         * in credential encrypted storage will throw an exception before the user is unlocked.</li>\n         * <li>Attempting to retrieve a {@link Context#FINGERPRINT_SERVICE} on a device that\n         * does not support that feature will now throw a runtime exception.</li>\n         * <li>{@link android.app.Fragment} will stop any active view animations when\n         * the fragment is stopped.</li>\n         * <li>Some compatibility code in Resources that attempts to use the default Theme\n         * the app may be using will be turned off, requiring the app to explicitly request\n         * resources with the right theme.</li>\n         * <li>{@link android.content.ContentResolver#notifyChange ContentResolver.notifyChange} and\n         * {@link android.content.ContentResolver#registerContentObserver\n         * ContentResolver.registerContentObserver}\n         * will throw a SecurityException if the caller does not have permission to access\n         * the provider (or the provider doesn't exit); otherwise the call will be silently\n         * ignored.</li>\n         * <li>{@link android.hardware.camera2.CameraDevice#createCaptureRequest\n         * CameraDevice.createCaptureRequest} will enable\n         * {@link android.hardware.camera2.CaptureRequest#CONTROL_ENABLE_ZSL} by default for\n         * still image capture.</li>\n         * <li>WallpaperManager's {@link android.app.WallpaperManager#getWallpaperFile},\n         * {@link android.app.WallpaperManager#getDrawable},\n         * {@link android.app.WallpaperManager#getFastDrawable},\n         * {@link android.app.WallpaperManager#peekDrawable}, and\n         * {@link android.app.WallpaperManager#peekFastDrawable} will throw an exception\n         * if you can not access the wallpaper.</li>\n         * <li>The behavior of\n         * {@link android.hardware.usb.UsbDeviceConnection#requestWait UsbDeviceConnection.requestWait}\n         * is modified as per the documentation there.</li>\n         * <li>{@link StrictMode.VmPolicy.Builder#detectAll StrictMode.VmPolicy.Builder.detectAll}\n         * will also enable {@link StrictMode.VmPolicy.Builder#detectContentUriWithoutPermission}\n         * and {@link StrictMode.VmPolicy.Builder#detectUntaggedSockets}.</li>\n         * <li>{@link StrictMode.ThreadPolicy.Builder#detectAll StrictMode.ThreadPolicy.Builder.detectAll}\n         * will also enable {@link StrictMode.ThreadPolicy.Builder#detectUnbufferedIo}.</li>\n         * <li>{@link android.provider.DocumentsContract}'s various methods will throw failure\n         * exceptions back to the caller instead of returning null.\n         * <li>{@link View#hasFocusable() View.hasFocusable} now includes auto-focusable views.</li>\n         * <li>{@link android.view.SurfaceView} will no longer always change the underlying\n         * Surface object when something about it changes; apps need to look at the current\n         * state of the object to determine which things they are interested in have changed.</li>\n         * <li>{@link android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY} must be\n         * used for overlay windows, other system overlay window types are not allowed.</li>\n         * <li>{@link android.view.ViewTreeObserver#addOnDrawListener\n         * ViewTreeObserver.addOnDrawListener} will throw an exception if called from within\n         * onDraw.</li>\n         * <li>{@link android.graphics.Canvas#setBitmap Canvas.setBitmap} will no longer preserve\n         * the current matrix and clip stack of the canvas.</li>\n         * <li>{@link android.widget.ListPopupWindow#setHeight ListPopupWindow.setHeight}\n         * will throw an exception if a negative height is supplied.</li>\n         * <li>{@link android.widget.TextView} will use internationalized input for numbers,\n         * dates, and times.</li>\n         * <li>{@link android.widget.Toast} must be used for showing toast windows; the toast\n         * window type can not be directly used.</li>\n         * <li>{@link android.net.wifi.WifiManager#getConnectionInfo WifiManager.getConnectionInfo}\n         * requires that the caller hold the location permission to return BSSID/SSID</li>\n         * <li>{@link android.net.wifi.p2p.WifiP2pManager#requestPeers WifiP2pManager.requestPeers}\n         * requires the caller hold the location permission.</li>\n         * <li>{@link android.R.attr#maxAspectRatio} defaults to 0, meaning there is no restriction\n         * on the app's maximum aspect ratio (so it can be stretched to fill larger screens).</li>\n         * <li>{@link android.R.attr#focusable} defaults to a new state ({@code auto}) where it will\n         * inherit the value of {@link android.R.attr#clickable} unless explicitly overridden.</li>\n         * <li>A default theme-appropriate focus-state highlight will be supplied to all Views\n         * which don't provide a focus-state drawable themselves. This can be disabled by setting\n         * {@link android.R.attr#defaultFocusHighlightEnabled} to false.</li>\n         * </ul>\n         ",
    "links" : [ "StrictMode.VmPolicy.Builder#detectUntaggedSockets", "android.R.attr#focusable", "android.app.WallpaperManager#getFastDrawable", "android.app.WallpaperManager#peekDrawable", "android.view.SurfaceView", "android.net.wifi.p2p.WifiP2pManager#requestPeers", "android.view.View#hasFocusable()", "android.content.ContentResolver#registerContentObserverContentResolver.registerContentObserver", "android.view.ViewTreeObserver#addOnDrawListenerViewTreeObserver.addOnDrawListener", "android.R.attr#maxAspectRatio", "android.app.WallpaperManager#getDrawable", "StrictMode.VmPolicy.Builder#detectContentUriWithoutPermission", "android.graphics.Canvas#setBitmap", "android.net.wifi.WifiManager#getConnectionInfo", "android.hardware.camera2.CaptureRequest#CONTROL_ENABLE_ZSL", "android.app.ActivityManager.RunningAppProcessInfo#IMPORTANCE_PERCEPTIBLE_PRE_26", "StrictMode.VmPolicy.Builder#detectAll", "android.app.WallpaperManager#getWallpaperFile", "android.accounts.AccountManager#getAccountsByType", "android.widget.Toast", "android.content.Context#getSharedPreferences", "android.hardware.camera2.CameraDevice#createCaptureRequestCameraDevice.createCaptureRequest", "StrictMode.ThreadPolicy.Builder#detectUnbufferedIo", "android.hardware.usb.UsbDeviceConnection#requestWait", "android.accounts.AccountManager#hasFeatures", "android.app.Fragment", "android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY", "android.app.NotificationManager", "android.accounts.AccountManager#getAccountsByTypeAndFeatures", "android.app.Application#onCreate", "android.app.WallpaperManager#peekFastDrawable", "android.R.attr#clickable", "StrictMode.ThreadPolicy.Builder#detectAll", "android.R.attr#defaultFocusHighlightEnabled", "android.content.ContentResolver#notifyChange", "android.widget.TextView", "android.widget.ListPopupWindow#setHeight", "android.content.Context#FINGERPRINT_SERVICE", "android.app.ActivityManager.RunningAppProcessInfo#IMPORTANCE_PERCEPTIBLE", "android.provider.DocumentsContract" ]
  }, {
    "name" : "O_MR1",
    "type" : "int",
    "comment" : "\n         * O MR1.\n         *\n         * <p>Released publicly as Android 8.1 in December 2017.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior. For more information about this release, see\n         * <a href=\"/about/versions/oreo/android-8.1\">Android 8.1 features and\n         * APIs</a>.</p>\n         * <ul>\n         * <li>Apps exporting and linking to apk shared libraries must explicitly\n         * enumerate all signing certificates in a consistent order.</li>\n         * <li>{@link android.R.attr#screenOrientation} can not be used to request a fixed\n         * orientation if the associated activity is not fullscreen and opaque.</li>\n         * </ul>\n         *\n         ",
    "links" : [ "android.R.attr#screenOrientation" ]
  }, {
    "name" : "P",
    "type" : "int",
    "comment" : "\n         * P.\n         *\n         * <p>Released publicly as Android 9 in August 2018.\n         * <p>Applications targeting this or a later release will get these\n         * new changes in behavior. For more information about this release, see the\n         * <a href=\"/about/versions/pie/\">Android 9 Pie overview</a>.</p>\n         * <ul>\n         * <li>{@link android.app.Service#startForeground Service.startForeground} requires\n         * that apps hold the permission\n         * {@link android.Manifest.permission#FOREGROUND_SERVICE}.</li>\n         * <li>{@link android.widget.LinearLayout} will always remeasure weighted children,\n         * even if there is no excess space.</li>\n         * </ul>\n         *\n         ",
    "links" : [ "android.widget.LinearLayout", "android.app.Service#startForeground", "android.Manifest.permission#FOREGROUND_SERVICE" ]
  }, {
    "name" : "Q",
    "type" : "int",
    "comment" : "\n         * Q.\n         *\n         * <p>Released publicly as Android 10 in September 2019.\n         * <p>Applications targeting this or a later release will get these new changes in behavior.\n         * For more information about this release, see the\n         * <a href=\"/about/versions/10\">Android 10 overview</a>.</p>\n         * <ul>\n         * <li><a href=\"/about/versions/10/behavior-changes-all\">Behavior changes: all apps</a></li>\n         * <li><a href=\"/about/versions/10/behavior-changes-10\">Behavior changes: apps targeting API\n         * 29+</a></li>\n         * </ul>\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "R",
    "type" : "int",
    "comment" : "\n         * R.\n         *\n         * <p>Released publicly as Android 11 in September 2020.\n         * <p>Applications targeting this or a later release will get these new changes in behavior.\n         * For more information about this release, see the\n         * <a href=\"/about/versions/11\">Android 11 overview</a>.</p>\n         * <ul>\n         * <li><a href=\"/about/versions/11/behavior-changes-all\">Behavior changes: all apps</a></li>\n         * <li><a href=\"/about/versions/11/behavior-changes-11\">Behavior changes: Apps targeting\n         * Android 11</a></li>\n         * <li><a href=\"/about/versions/11/non-sdk-11\">Updates to non-SDK interface restrictions\n         * in Android 11</a></li>\n         * </ul>\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "S",
    "type" : "int",
    "comment" : "\n         * S.\n         ",
    "links" : [ ]
  }, {
    "name" : "S_V2",
    "type" : "int",
    "comment" : "\n         * S V2.\n         *\n         * Once more unto the breach, dear friends, once more.\n         ",
    "links" : [ ]
  }, {
    "name" : "TIRAMISU",
    "type" : "int",
    "comment" : "\n         * Tiramisu.\n         ",
    "links" : [ ]
  }, {
    "name" : "UPSIDE_DOWN_CAKE",
    "type" : "int",
    "comment" : "\n         * Upside Down Cake.\n         ",
    "links" : [ ]
  }, {
    "name" : "VANILLA_ICE_CREAM",
    "type" : "int",
    "comment" : "\n         * Vanilla Ice Cream.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "CUR_DEVELOPMENT", "BASE", "BASE_1_1", "CUPCAKE", "DONUT", "ECLAIR", "ECLAIR_0_1", "ECLAIR_MR1", "FROYO", "GINGERBREAD", "GINGERBREAD_MR1", "HONEYCOMB", "HONEYCOMB_MR1", "HONEYCOMB_MR2", "ICE_CREAM_SANDWICH", "ICE_CREAM_SANDWICH_MR1", "JELLY_BEAN", "JELLY_BEAN_MR1", "JELLY_BEAN_MR2", "KITKAT", "KITKAT_WATCH", "L", "LOLLIPOP", "LOLLIPOP_MR1", "M", "N", "N_MR1", "O", "O_MR1", "P", "Q", "R", "S", "S_V2", "TIRAMISU", "UPSIDE_DOWN_CAKE", "VANILLA_ICE_CREAM" ]
}