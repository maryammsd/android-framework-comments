{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/SelectionActionModeHelper.java",
  "packageName" : "android.widget",
  "className" : "SelectionTracker",
  "comment" : "\n     * Tracks and logs smart selection changes.\n     * It is important to trigger this object's methods at the appropriate event so that it tracks\n     * smart selection events appropriately.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mTextView",
    "type" : "TextView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLogger",
    "type" : "SelectionMetricsLogger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOriginalStart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOriginalEnd",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSelectionStart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSelectionEnd",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowReset",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDelayedLogAbandon",
    "type" : "LogAbandonRunnable",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onOriginalSelection(CharSequence text, int selectionStart, int selectionEnd, boolean isLink)",
    "returnType" : "void",
    "comment" : "\n         * Called when the original selection happens, before smart selection is triggered.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onSmartSelection(SelectionResult result)",
    "returnType" : "void",
    "comment" : "\n         * Called when selection action mode is started and the results come from a classifier.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onLinkSelected(SelectionResult result)",
    "returnType" : "void",
    "comment" : "\n         * Called when link action mode is started and the classification comes from a classifier.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void onClassifiedSelection(SelectionResult result)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSelectionUpdated(int selectionStart, int selectionEnd, @Nullable TextClassification classification)",
    "returnType" : "void",
    "comment" : "\n         * Called when selection bounds change.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onSelectionDestroyed()",
    "returnType" : "void",
    "comment" : "\n         * Called when the selection action mode is destroyed.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onSelectionAction(int selectionStart, int selectionEnd, @SelectionEvent.ActionType int action, @Nullable String actionLabel, @Nullable TextClassification classification)",
    "returnType" : "void",
    "comment" : "\n         * Called when an action is taken on a smart selection.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean resetSelection(int textIndex, Editor editor)",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if the current smart selection should be reset to normal selection based on\n         * information that has been recorded about the original selection and the smart selection.\n         * The expected UX here is to allow the user to select a word inside of the smart selection\n         * on a single tap.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTextChanged(int start, int end, TextClassification classification)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void maybeInvalidateLogger()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isSelectionStarted()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onOriginalSelection(CharSequence text, int selectionStart, int selectionEnd, boolean isLink)", "public void onSmartSelection(SelectionResult result)", "public void onLinkSelected(SelectionResult result)", "private void onClassifiedSelection(SelectionResult result)", "public void onSelectionUpdated(int selectionStart, int selectionEnd, @Nullable TextClassification classification)", "public void onSelectionDestroyed()", "public void onSelectionAction(int selectionStart, int selectionEnd, @SelectionEvent.ActionType int action, @Nullable String actionLabel, @Nullable TextClassification classification)", "public boolean resetSelection(int textIndex, Editor editor)", "public void onTextChanged(int start, int end, TextClassification classification)", "private void maybeInvalidateLogger()", "private boolean isSelectionStarted()" ],
  "variableNames" : [ "mTextView", "mLogger", "mOriginalStart", "mOriginalEnd", "mSelectionStart", "mSelectionEnd", "mAllowReset", "mDelayedLogAbandon" ]
}