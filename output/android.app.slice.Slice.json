{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/slice/Slice.java",
  "packageName" : "android.app.slice",
  "className" : "Slice",
  "comment" : "\n * A slice is a piece of app content and actions that can be surfaced outside of the app.\n *\n * <p>They are constructed using {@link Builder} in a tree structure\n * that provides the OS some information about how the content should be displayed.\n ",
  "variables" : [ {
    "name" : "HINT_TITLE",
    "type" : "String",
    "comment" : "\n     * Hint that this content is a title of other content in the slice. This can also indicate that\n     * the content should be used in the shortcut representation of the slice (icon, label, action),\n     * normally this should be indicated by adding the hint on the action containing that content.\n     *\n     * @see SliceItem#FORMAT_ACTION\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_LIST",
    "type" : "String",
    "comment" : "\n     * Hint that all sub-items/sub-slices within this content should be considered\n     * to have {@link #HINT_LIST_ITEM}.\n     ",
    "links" : [ "#HINT_LIST_ITEM" ]
  }, {
    "name" : "HINT_LIST_ITEM",
    "type" : "String",
    "comment" : "\n     * Hint that this item is part of a list and should be formatted as if is part\n     * of a list.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_LARGE",
    "type" : "String",
    "comment" : "\n     * Hint that this content is important and should be larger when displayed if\n     * possible.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_ACTIONS",
    "type" : "String",
    "comment" : "\n     * Hint that this slice contains a number of actions that can be grouped together\n     * in a sort of controls area of the UI.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_SELECTED",
    "type" : "String",
    "comment" : "\n     * Hint indicating that this item (and its sub-items) are the current selection.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_NO_TINT",
    "type" : "String",
    "comment" : "\n     * Hint to indicate that this content should not be tinted.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_SHORTCUT",
    "type" : "String",
    "comment" : "\n     * Hint to indicate that this content should only be displayed if the slice is presented\n     * as a shortcut.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_SUMMARY",
    "type" : "String",
    "comment" : "\n     * Hint indicating this content should be shown instead of the normal content when the slice\n     * is in small format.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_TOGGLE",
    "type" : "String",
    "comment" : "\n     * Hint to indicate that this content has a toggle action associated with it. To indicate that\n     * the toggle is on, use {@link #HINT_SELECTED}. When the toggle state changes, the intent\n     * associated with it will be sent along with an extra {@link #EXTRA_TOGGLE_STATE} which can be\n     * retrieved to see the new state of the toggle.\n     * @hide\n     ",
    "links" : [ "#EXTRA_TOGGLE_STATE", "#HINT_SELECTED" ]
  }, {
    "name" : "HINT_HORIZONTAL",
    "type" : "String",
    "comment" : "\n     * Hint that list items within this slice or subslice would appear better\n     * if organized horizontally.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_PARTIAL",
    "type" : "String",
    "comment" : "\n     * Hint to indicate that this slice is incomplete and an update will be sent once\n     * loading is complete. Slices which contain HINT_PARTIAL will not be cached by the\n     * OS and should not be cached by apps.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_SEE_MORE",
    "type" : "String",
    "comment" : "\n     * A hint representing that this item should be used to indicate that there's more\n     * content associated with this slice.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_CALLER_NEEDED",
    "type" : "String",
    "comment" : "\n     * @see Builder#setCallerNeeded\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_KEYWORDS",
    "type" : "String",
    "comment" : "\n     * A hint to indicate that the contents of this subslice represent a list of keywords\n     * related to the parent slice.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_SLICE}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_SLICE" ]
  }, {
    "name" : "HINT_ERROR",
    "type" : "String",
    "comment" : "\n     * A hint to indicate that this slice represents an error.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_TTL",
    "type" : "String",
    "comment" : "\n     * Hint indicating an item representing a time-to-live for the content.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_LAST_UPDATED",
    "type" : "String",
    "comment" : "\n     * Hint indicating an item representing when the content was created or last updated.\n     ",
    "links" : [ ]
  }, {
    "name" : "HINT_PERMISSION_REQUEST",
    "type" : "String",
    "comment" : "\n     * A hint to indicate that this slice represents a permission request for showing\n     * slices.\n     ",
    "links" : [ ]
  }, {
    "name" : "SUBTYPE_LAYOUT_DIRECTION",
    "type" : "String",
    "comment" : "\n     * Subtype to indicate that this item indicates the layout direction for content\n     * in the slice.\n     * Expected to be an item of format {@link SliceItem#FORMAT_INT}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_INT" ]
  }, {
    "name" : "EXTRA_TOGGLE_STATE",
    "type" : "String",
    "comment" : "\n     * Key to retrieve an extra added to an intent when a control is changed.\n     ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_SLIDER_VALUE",
    "type" : "String",
    "comment" : "\n     * Key to retrieve an extra added to an intent when the value of a slider is changed.\n     * @deprecated remove once support lib is update to use EXTRA_RANGE_VALUE instead\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_RANGE_VALUE",
    "type" : "String",
    "comment" : "\n     * Key to retrieve an extra added to an intent when the value of an input range is changed.\n     ",
    "links" : [ ]
  }, {
    "name" : "SUBTYPE_MESSAGE",
    "type" : "String",
    "comment" : "\n     * Subtype to indicate that this is a message as part of a communication\n     * sequence in this slice.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_SLICE}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_SLICE" ]
  }, {
    "name" : "SUBTYPE_SOURCE",
    "type" : "String",
    "comment" : "\n     * Subtype to tag the source (i.e. sender) of a {@link #SUBTYPE_MESSAGE}.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_TEXT},\n     * {@link SliceItem#FORMAT_IMAGE} or an {@link SliceItem#FORMAT_SLICE} containing them.\n     ",
    "links" : [ "#SUBTYPE_MESSAGE", "android.app.slice.SliceItem#FORMAT_IMAGE", "android.app.slice.SliceItem#FORMAT_SLICE", "android.app.slice.SliceItem#FORMAT_TEXT" ]
  }, {
    "name" : "SUBTYPE_COLOR",
    "type" : "String",
    "comment" : "\n     * Subtype to tag an item as representing a color.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_INT}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_INT" ]
  }, {
    "name" : "SUBTYPE_SLIDER",
    "type" : "String",
    "comment" : "\n     * Subtype to tag an item as representing a slider.\n     * @deprecated remove once support lib is update to use SUBTYPE_RANGE instead\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "SUBTYPE_RANGE",
    "type" : "String",
    "comment" : "\n     * Subtype to tag an item as representing a range.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_SLICE} containing\n     * a {@link #SUBTYPE_VALUE} and possibly a {@link #SUBTYPE_MAX}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_SLICE", "#SUBTYPE_MAX", "#SUBTYPE_VALUE" ]
  }, {
    "name" : "SUBTYPE_MAX",
    "type" : "String",
    "comment" : "\n     * Subtype to tag an item as representing the max int value for a {@link #SUBTYPE_RANGE}.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_INT}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_INT", "#SUBTYPE_RANGE" ]
  }, {
    "name" : "SUBTYPE_VALUE",
    "type" : "String",
    "comment" : "\n     * Subtype to tag an item as representing the current int value for a {@link #SUBTYPE_RANGE}.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_INT}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_INT", "#SUBTYPE_RANGE" ]
  }, {
    "name" : "SUBTYPE_TOGGLE",
    "type" : "String",
    "comment" : "\n     * Subtype to indicate that this content has a toggle action associated with it. To indicate\n     * that the toggle is on, use {@link #HINT_SELECTED}. When the toggle state changes, the\n     * intent associated with it will be sent along with an extra {@link #EXTRA_TOGGLE_STATE}\n     * which can be retrieved to see the new state of the toggle.\n     ",
    "links" : [ "#EXTRA_TOGGLE_STATE", "#HINT_SELECTED" ]
  }, {
    "name" : "SUBTYPE_PRIORITY",
    "type" : "String",
    "comment" : "\n     * Subtype to tag an item representing priority.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_INT}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_INT" ]
  }, {
    "name" : "SUBTYPE_CONTENT_DESCRIPTION",
    "type" : "String",
    "comment" : "\n     * Subtype to tag an item to use as a content description.\n     * Expected to be on an item of format {@link SliceItem#FORMAT_TEXT}.\n     ",
    "links" : [ "android.app.slice.SliceItem#FORMAT_TEXT" ]
  }, {
    "name" : "SUBTYPE_MILLIS",
    "type" : "String",
    "comment" : "\n     * Subtype to tag an item as representing a time in milliseconds since midnight,\n     * January 1, 1970 UTC.\n     ",
    "links" : [ ]
  }, {
    "name" : "mItems",
    "type" : "SliceItem[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHints",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSpec",
    "type" : "SliceSpec",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Slice>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public SliceSpec getSpec()",
    "returnType" : "SliceSpec",
    "comment" : "\n     * @return The spec for this slice\n     ",
    "links" : [ ]
  }, {
    "name" : "public Uri getUri()",
    "returnType" : "Uri",
    "comment" : "\n     * @return The Uri that this Slice represents.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<SliceItem> getItems()",
    "returnType" : "List<SliceItem>",
    "comment" : "\n     * @return All child {@link SliceItem}s that this Slice contains.\n     ",
    "links" : [ "android.app.slice.SliceItem" ]
  }, {
    "name" : "public List<String> getHints()",
    "returnType" : "List<String>",
    "comment" : "\n     * @return All hints associated with this Slice.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasHint(@SliceHint String hint)",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCallerNeeded()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the caller for this slice matters.\n     * @see Builder#setCallerNeeded\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     * @return A string representation of this slice.\n     ",
    "links" : [ ]
  }, {
    "name" : "private String toString(String indent)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "HINT_TITLE", "HINT_LIST", "HINT_LIST_ITEM", "HINT_LARGE", "HINT_ACTIONS", "HINT_SELECTED", "HINT_NO_TINT", "HINT_SHORTCUT", "HINT_SUMMARY", "HINT_TOGGLE", "HINT_HORIZONTAL", "HINT_PARTIAL", "HINT_SEE_MORE", "HINT_CALLER_NEEDED", "HINT_KEYWORDS", "HINT_ERROR", "HINT_TTL", "HINT_LAST_UPDATED", "HINT_PERMISSION_REQUEST", "SUBTYPE_LAYOUT_DIRECTION", "EXTRA_TOGGLE_STATE", "EXTRA_SLIDER_VALUE", "EXTRA_RANGE_VALUE", "SUBTYPE_MESSAGE", "SUBTYPE_SOURCE", "SUBTYPE_COLOR", "SUBTYPE_SLIDER", "SUBTYPE_RANGE", "SUBTYPE_MAX", "SUBTYPE_VALUE", "SUBTYPE_TOGGLE", "SUBTYPE_PRIORITY", "SUBTYPE_CONTENT_DESCRIPTION", "SUBTYPE_MILLIS", "mItems", "mHints", "mSpec", "mUri", "CREATOR" ],
  "methodNames" : [ "public SliceSpec getSpec()", "public Uri getUri()", "public List<SliceItem> getItems()", "public List<String> getHints()", "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()", "public boolean hasHint(@SliceHint String hint)", "public boolean isCallerNeeded()", "public String toString()", "private String toString(String indent)" ]
}