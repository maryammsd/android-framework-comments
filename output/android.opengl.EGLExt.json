{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/opengl/EGLExt.java",
  "packageName" : "android.opengl",
  "className" : "EGLExt",
  "comment" : "\n * EGL Extensions\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "EGL_CONTEXT_MAJOR_VERSION_KHR",
    "type" : "int",
    "comment" : " EGL_KHR_create_context",
    "links" : [ ]
  }, {
    "name" : "EGL_CONTEXT_MINOR_VERSION_KHR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EGL_CONTEXT_FLAGS_KHR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EGL_OPENGL_ES3_BIT_KHR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EGL_RECORDABLE_ANDROID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EGL_SYNC_NATIVE_FENCE_ANDROID",
    "type" : "int",
    "comment" : " EGL_ANDROID_native_fence_sync",
    "links" : [ ]
  }, {
    "name" : "EGL_SYNC_NATIVE_FENCE_FD_ANDROID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EGL_NO_NATIVE_FENCE_FD_ANDROID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static native void _nativeClassInit()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static SyncFence eglDupNativeFenceFDANDROID(@NonNull EGLDisplay display, @NonNull EGLSync sync)",
    "returnType" : "SyncFence",
    "comment" : "\n     * Retrieves the SyncFence for an EGLSync created with EGL_SYNC_NATIVE_FENCE_ANDROID\n     *\n     * See <a href=\"https://www.khronos.org/registry/EGL/extensions/ANDROID/EGL_ANDROID_native_fence_sync.txt\">\n     *     EGL_ANDROID_native_fence_sync</a> extension for more details\n     * @param display The EGLDisplay connection\n     * @param sync The EGLSync to fetch the SyncFence from\n     * @return A SyncFence representing the native fence.\n     *       * If <sync> is not a valid sync object for <display>,\n     *         an {@link SyncFence#isValid() invalid} SyncFence is returned and an EGL_BAD_PARAMETER\n     *         error is generated.\n     *       * If the EGL_SYNC_NATIVE_FENCE_FD_ANDROID attribute of <sync> is\n     *         EGL_NO_NATIVE_FENCE_FD_ANDROID, an {@link SyncFence#isValid() invalid} SyncFence is\n     *         returned and an EGL_BAD_PARAMETER error is generated.\n     *       * If <display> does not match the display passed to eglCreateSync\n     *         when <sync> was created, the behaviour is undefined.\n     ",
    "links" : [ "android.hardware.SyncFence#isValid()" ]
  }, {
    "name" : "private static native int eglDupNativeFenceFDANDROIDImpl(EGLDisplay display, EGLSync sync)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static native boolean eglPresentationTimeANDROID(EGLDisplay dpy, EGLSurface sur, long time)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static native void _nativeClassInit()", "public static SyncFence eglDupNativeFenceFDANDROID(@NonNull EGLDisplay display, @NonNull EGLSync sync)", "private static native int eglDupNativeFenceFDANDROIDImpl(EGLDisplay display, EGLSync sync)", "public static native boolean eglPresentationTimeANDROID(EGLDisplay dpy, EGLSurface sur, long time)" ],
  "variableNames" : [ "EGL_CONTEXT_MAJOR_VERSION_KHR", "EGL_CONTEXT_MINOR_VERSION_KHR", "EGL_CONTEXT_FLAGS_KHR", "EGL_OPENGL_ES3_BIT_KHR", "EGL_RECORDABLE_ANDROID", "EGL_SYNC_NATIVE_FENCE_ANDROID", "EGL_SYNC_NATIVE_FENCE_FD_ANDROID", "EGL_SYNC_NATIVE_FENCE_SIGNALED_ANDROID", "EGL_NO_NATIVE_FENCE_FD_ANDROID" ]
}