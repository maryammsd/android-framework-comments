{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ipsec/ike/exceptions/InvalidSelectorsException.java",
  "packageName" : "android.net.ipsec.ike.exceptions",
  "className" : "InvalidSelectorsException",
  "comment" : "\n * This exception is thrown if the remote server received an IPsec packet with mismatched selectors.\n *\n * <p>This exception indicates that the remote server received an IPsec packet whose selectors do\n * not match those of the IPsec SA on which it was delivered. The error data contains the start of\n * the offending packet (as in ICMP messages), which is the IP header plus the first 64 bits of the\n * original datagram's data.\n *\n * @see <a href=\"https://tools.ietf.org/html/rfc7296#section-3.10.1\">RFC 7296, Internet Key Exchange\n *     Protocol Version 2 (IKEv2)</a>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "EXPECTED_ERROR_DATA_LEN_MIN",
    "type" : "int",
    "comment" : " Minimum IP header length plus 64 bits",
    "links" : [ ]
  }, {
    "name" : "mIpSecSpi",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIpSecPacketInfo",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected boolean isValidDataLength(int dataLen)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getIpSecSpi()",
    "returnType" : "int",
    "comment" : " Returns the SPI of the IPsec SA that delivered the packet with mismtached selectors. ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getIpSecPacketInfo()",
    "returnType" : "byte[]",
    "comment" : " Returns the IP header plus the first 64 bits of the packet that has mismtached selectors. ",
    "links" : [ ]
  }, {
    "name" : "public int getMetricsErrorCode()",
    "returnType" : "int",
    "comment" : "\n     * Returns the error code for metrics\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected boolean isValidDataLength(int dataLen)", "public int getIpSecSpi()", "public byte[] getIpSecPacketInfo()", "public int getMetricsErrorCode()" ],
  "variableNames" : [ "EXPECTED_ERROR_DATA_LEN_MIN", "mIpSecSpi", "mIpSecPacketInfo" ]
}