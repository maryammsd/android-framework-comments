{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/CodePointTrie.java",
  "packageName" : "android.icu.util",
  "className" : "CodePointTrie",
  "comment" : "\n * Immutable Unicode code point trie.\n * Fast, reasonably compact, map from Unicode code points (U+0000..U+10FFFF) to integer values.\n * For details see https://icu.unicode.org/design/struct/utrie\n *\n * <p>This class is not intended for public subclassing.\n *\n * @see MutableCodePointTrie\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MAX_UNICODE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ASCII_LIMIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FAST_SHIFT",
    "type" : "int",
    "comment" : " @hide draft / provisional / internal are hidden on Android",
    "links" : [ ]
  }, {
    "name" : "FAST_DATA_BLOCK_LENGTH",
    "type" : "int",
    "comment" : " Number of entries in a data block for code points below the fast limit. 64=0x40 @internal ",
    "links" : [ ]
  }, {
    "name" : "FAST_DATA_MASK",
    "type" : "int",
    "comment" : " Mask for getting the lower bits for the in-fast-data-block offset. @internal ",
    "links" : [ ]
  }, {
    "name" : "SMALL_MAX",
    "type" : "int",
    "comment" : " @hide draft / provisional / internal are hidden on Android",
    "links" : [ ]
  }, {
    "name" : "ERROR_VALUE_NEG_DATA_OFFSET",
    "type" : "int",
    "comment" : "\n     * Offset from dataLength (to be subtracted) for fetching the\n     * value returned for out-of-range code points and ill-formed UTF-8/16.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "HIGH_VALUE_NEG_DATA_OFFSET",
    "type" : "int",
    "comment" : "\n     * Offset from dataLength (to be subtracted) for fetching the\n     * value returned for code points highStart..U+10FFFF.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "BMP_INDEX_LENGTH",
    "type" : "int",
    "comment" : " The length of the BMP index table. 1024=0x400 ",
    "links" : [ ]
  }, {
    "name" : "SMALL_LIMIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SMALL_INDEX_LENGTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SHIFT_3",
    "type" : "int",
    "comment" : " Shift size for getting the index-3 table offset. ",
    "links" : [ ]
  }, {
    "name" : "SHIFT_2",
    "type" : "int",
    "comment" : " Shift size for getting the index-2 table offset. ",
    "links" : [ ]
  }, {
    "name" : "SHIFT_1",
    "type" : "int",
    "comment" : " Shift size for getting the index-1 table offset. ",
    "links" : [ ]
  }, {
    "name" : "SHIFT_2_3",
    "type" : "int",
    "comment" : "\n     * Difference between two shift sizes,\n     * for getting an index-2 offset from an index-3 offset. 5=9-4\n     ",
    "links" : [ ]
  }, {
    "name" : "SHIFT_1_2",
    "type" : "int",
    "comment" : "\n     * Difference between two shift sizes,\n     * for getting an index-1 offset from an index-2 offset. 5=14-9\n     ",
    "links" : [ ]
  }, {
    "name" : "OMITTED_BMP_INDEX_1_LENGTH",
    "type" : "int",
    "comment" : "\n     * Number of index-1 entries for the BMP. (4)\n     * This part of the index-1 table is omitted from the serialized form.\n     ",
    "links" : [ ]
  }, {
    "name" : "INDEX_2_BLOCK_LENGTH",
    "type" : "int",
    "comment" : " Number of entries in an index-2 block. 32=0x20 ",
    "links" : [ ]
  }, {
    "name" : "INDEX_2_MASK",
    "type" : "int",
    "comment" : " Mask for getting the lower bits for the in-index-2-block offset. ",
    "links" : [ ]
  }, {
    "name" : "CP_PER_INDEX_2_ENTRY",
    "type" : "int",
    "comment" : " Number of code points per index-2 table entry. 512=0x200 ",
    "links" : [ ]
  }, {
    "name" : "INDEX_3_BLOCK_LENGTH",
    "type" : "int",
    "comment" : " Number of entries in an index-3 block. 32=0x20 ",
    "links" : [ ]
  }, {
    "name" : "INDEX_3_MASK",
    "type" : "int",
    "comment" : " Mask for getting the lower bits for the in-index-3-block offset. ",
    "links" : [ ]
  }, {
    "name" : "SMALL_DATA_BLOCK_LENGTH",
    "type" : "int",
    "comment" : " Number of entries in a small data block. 16=0x10 ",
    "links" : [ ]
  }, {
    "name" : "SMALL_DATA_MASK",
    "type" : "int",
    "comment" : " Mask for getting the lower bits for the in-small-data-block offset. ",
    "links" : [ ]
  }, {
    "name" : "OPTIONS_DATA_LENGTH_MASK",
    "type" : "int",
    "comment" : " ucptrie_impl.h: Constants for use with UCPTrieHeader.options.",
    "links" : [ ]
  }, {
    "name" : "OPTIONS_DATA_NULL_OFFSET_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OPTIONS_RESERVED_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OPTIONS_VALUE_BITS_MASK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NO_INDEX3_NULL_OFFSET",
    "type" : "int",
    "comment" : "\n     * Value for index3NullOffset which indicates that there is no index-3 null block.\n     * Bit 15 is unused for this value because this bit is used if the index-3 contains\n     * 18-bit indexes.\n     ",
    "links" : [ ]
  }, {
    "name" : "NO_DATA_NULL_OFFSET",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ascii",
    "type" : "int[]",
    "comment" : " @hide draft / provisional / internal are hidden on Android",
    "links" : [ ]
  }, {
    "name" : "index",
    "type" : "char[]",
    "comment" : " @hide draft / provisional / internal are hidden on Android",
    "links" : [ ]
  }, {
    "name" : "data",
    "type" : "Data",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "dataLength",
    "type" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "highStart",
    "type" : "int",
    "comment" : "\n     * Start of the last range which ends at U+10FFFF.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "index3NullOffset",
    "type" : "int",
    "comment" : "\n     * Internal index-3 null block offset.\n     * Set to an impossibly high value (e.g., 0xffff) if there is no dedicated index-3 null block.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "dataNullOffset",
    "type" : "int",
    "comment" : "\n     * Internal data null block offset, not shifted.\n     * Set to an impossibly high value (e.g., 0xfffff) if there is no dedicated data null block.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "nullValue",
    "type" : "int",
    "comment" : " @hide draft / provisional / internal are hidden on Android",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static CodePointTrie fromBinary(Type type, ValueWidth valueWidth, ByteBuffer bytes)",
    "returnType" : "CodePointTrie",
    "comment" : "\n     * Creates a trie from its binary form,\n     * stored in the ByteBuffer starting at the current position.\n     * Advances the buffer position to just after the trie data.\n     * Inverse of {@link #toBinary(OutputStream)}.\n     *\n     * <p>The data is copied from the buffer;\n     * later modification of the buffer will not affect the trie.\n     *\n     * @param type selects the trie type; this method throws an exception\n     *             if the type does not match the binary data;\n     *             use null to accept any type\n     * @param valueWidth selects the number of bits in a data value; this method throws an exception\n     *                  if the valueWidth does not match the binary data;\n     *                  use null to accept any data value width\n     * @param bytes a buffer containing the binary data of a CodePointTrie\n     * @return the trie\n     * @see MutableCodePointTrie#MutableCodePointTrie(int, int)\n     * @see MutableCodePointTrie#buildImmutable(CodePointTrie.Type, CodePointTrie.ValueWidth)\n     * @see #toBinary(OutputStream)\n     ",
    "links" : [ "#toBinary(OutputStream)" ]
  }, {
    "name" : "public abstract Type getType()",
    "returnType" : "Type",
    "comment" : "\n     * Returns the trie type.\n     *\n     * @return the trie type\n     ",
    "links" : [ ]
  }, {
    "name" : "public final ValueWidth getValueWidth()",
    "returnType" : "ValueWidth",
    "comment" : "\n     * Returns the number of bits in a trie data value.\n     *\n     * @return the number of bits in a trie data value\n     ",
    "links" : [ ]
  }, {
    "name" : "public int get(int c)",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public final int asciiGet(int c)",
    "returnType" : "int",
    "comment" : "\n     * Returns a trie value for an ASCII code point, without range checking.\n     *\n     * @param c the input code point; must be U+0000..U+007F\n     * @return The ASCII code point's trie value.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static final int maybeFilterValue(int value, int trieNullValue, int nullValue, ValueFilter filter)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean getRange(int start, ValueFilter filter, Range range)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public final int toBinary(OutputStream os)",
    "returnType" : "int",
    "comment" : "\n     * Writes a representation of the trie to the output stream.\n     * Inverse of {@link #fromBinary}.\n     *\n     * @param os the output stream\n     * @return the number of bytes written\n     ",
    "links" : [ "#fromBinary" ]
  }, {
    "name" : "protected final int fastIndex(int c)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected final int smallIndex(Type type, int c)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private final int internalSmallIndex(Type type, int c)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract int cpIndex(int c)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static CodePointTrie fromBinary(Type type, ValueWidth valueWidth, ByteBuffer bytes)", "public abstract Type getType()", "public final ValueWidth getValueWidth()", "public int get(int c)", "public final int asciiGet(int c)", "private static final int maybeFilterValue(int value, int trieNullValue, int nullValue, ValueFilter filter)", "public final boolean getRange(int start, ValueFilter filter, Range range)", "public final int toBinary(OutputStream os)", "protected final int fastIndex(int c)", "protected final int smallIndex(Type type, int c)", "private final int internalSmallIndex(Type type, int c)", "protected abstract int cpIndex(int c)" ],
  "variableNames" : [ "MAX_UNICODE", "ASCII_LIMIT", "FAST_SHIFT", "FAST_DATA_BLOCK_LENGTH", "FAST_DATA_MASK", "SMALL_MAX", "ERROR_VALUE_NEG_DATA_OFFSET", "HIGH_VALUE_NEG_DATA_OFFSET", "BMP_INDEX_LENGTH", "SMALL_LIMIT", "SMALL_INDEX_LENGTH", "SHIFT_3", "SHIFT_2", "SHIFT_1", "SHIFT_2_3", "SHIFT_1_2", "OMITTED_BMP_INDEX_1_LENGTH", "INDEX_2_BLOCK_LENGTH", "INDEX_2_MASK", "CP_PER_INDEX_2_ENTRY", "INDEX_3_BLOCK_LENGTH", "INDEX_3_MASK", "SMALL_DATA_BLOCK_LENGTH", "SMALL_DATA_MASK", "OPTIONS_DATA_LENGTH_MASK", "OPTIONS_DATA_NULL_OFFSET_MASK", "OPTIONS_RESERVED_MASK", "OPTIONS_VALUE_BITS_MASK", "NO_INDEX3_NULL_OFFSET", "NO_DATA_NULL_OFFSET", "ascii", "index", "data", "dataLength", "highStart", "index3NullOffset", "dataNullOffset", "nullValue" ]
}