{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/window/VirtualDisplayTaskEmbedder.java",
  "packageName" : "android.window",
  "className" : "VirtualDisplayTaskEmbedder",
  "comment" : "\n * A component which handles embedded display of tasks within another window. The embedded task can\n * be presented using the SurfaceControl provided from {@link #getSurfaceControl()}.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayDensityDpi",
    "type" : "int",
    "comment" : " For Virtual Displays",
    "links" : [ ]
  }, {
    "name" : "mSingleTaskInstance",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUsePublicVirtualDisplay",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVirtualDisplay",
    "type" : "VirtualDisplay",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mForwardedInsets",
    "type" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmpDisplayMetrics",
    "type" : "DisplayMetrics",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTaskStackListener",
    "type" : "TaskStackListener",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isInitialized()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether this container has been initialized.\n     *\n     * @return true if initialized\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean onInitialize()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean onRelease()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void start()",
    "returnType" : "void",
    "comment" : "\n     * Starts presentation of tasks in this container.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void stop()",
    "returnType" : "void",
    "comment" : "\n     * Stops presentation of tasks in this container.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void resizeTask(int width, int height)",
    "returnType" : "void",
    "comment" : "\n     * Called to update the dimensions whenever the host size changes.\n     *\n     * @param width the new width of the surface\n     * @param height the new height of the surface\n     ",
    "links" : [ ]
  }, {
    "name" : "public void performBackPress()",
    "returnType" : "void",
    "comment" : "\n     * Injects a pair of down/up key events with keycode {@link KeyEvent#KEYCODE_BACK} to the\n     * virtual display.\n     ",
    "links" : [ "android.view.KeyEvent#KEYCODE_BACK" ]
  }, {
    "name" : "public boolean gatherTransparentRegion(Region region)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : " An opaque unique identifier for this task surface among others being managed by the app. ",
    "links" : [ ]
  }, {
    "name" : "public int getDisplayId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public VirtualDisplay getVirtualDisplay()",
    "returnType" : "VirtualDisplay",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected ActivityOptions prepareActivityOptions(ActivityOptions options)",
    "returnType" : "ActivityOptions",
    "comment" : "\n     * Check if container is ready to launch and create {@link ActivityOptions} to target the\n     * virtual display.\n     * @param options The existing options to amend, or null if the caller wants new options to be\n     *                created\n     ",
    "links" : [ "android.app.ActivityOptions" ]
  }, {
    "name" : "public void setForwardedInsets(Insets insets)",
    "returnType" : "void",
    "comment" : "\n     * Set forwarded insets on the virtual display.\n     *\n     * @see IWindowManager#setForwardedInsets\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void updateLocationAndTapExcludeRegion()",
    "returnType" : "void",
    "comment" : "\n     * Updates position and bounds information needed by WM and IME to manage window\n     * focus and touch events properly.\n     * <p>\n     * This should be called whenever the position or size of the surface changes\n     * or if touchable areas above the surface are added or removed.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void reportLocation(Matrix screenToViewMatrix, Point positionInWindow)",
    "returnType" : "void",
    "comment" : "\n     * Call to update the position and transform matrix for the embedded surface.\n     * <p>\n     * This should not normally be called directly, but through\n     * {@link #updateLocationAndTapExcludeRegion()}. This method\n     * is provided as an optimization when managing multiple TaskSurfaces within a view.\n     *\n     * @param screenToViewMatrix the matrix/transform from screen space to view space\n     * @param positionInWindow the window-relative position of the surface\n     *\n     * @see InputMethodManager#reportActivityView(int, Matrix)\n     ",
    "links" : [ "#updateLocationAndTapExcludeRegion()" ]
  }, {
    "name" : "private void clearActivityViewGeometryForIme()",
    "returnType" : "void",
    "comment" : "\n     * @see InputMethodManager#reportActivityView(int, Matrix)\n     ",
    "links" : [ ]
  }, {
    "name" : "private static KeyEvent createKeyEvent(int action, int code, int displayId)",
    "returnType" : "KeyEvent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getBaseDisplayDensity()",
    "returnType" : "int",
    "comment" : " Get density of the hosting display. ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DISPLAY_NAME", "mDisplayDensityDpi", "mSingleTaskInstance", "mUsePublicVirtualDisplay", "mVirtualDisplay", "mForwardedInsets", "mTmpDisplayMetrics", "mTaskStackListener" ],
  "methodNames" : [ "public boolean isInitialized()", "public boolean onInitialize()", "protected boolean onRelease()", "public void start()", "public void stop()", "public void resizeTask(int width, int height)", "public void performBackPress()", "public boolean gatherTransparentRegion(Region region)", "public int getId()", "public int getDisplayId()", "public VirtualDisplay getVirtualDisplay()", "protected ActivityOptions prepareActivityOptions(ActivityOptions options)", "public void setForwardedInsets(Insets insets)", "protected void updateLocationAndTapExcludeRegion()", "private void reportLocation(Matrix screenToViewMatrix, Point positionInWindow)", "private void clearActivityViewGeometryForIme()", "private static KeyEvent createKeyEvent(int action, int code, int displayId)", "private int getBaseDisplayDensity()" ]
}