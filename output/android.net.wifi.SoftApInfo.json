{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/SoftApInfo.java",
  "packageName" : "android.net.wifi",
  "className" : "SoftApInfo",
  "comment" : "\n * A class representing information about SoftAp.\n * {@see WifiManager}\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "CHANNEL_WIDTH_INVALID",
    "type" : "int",
    "comment" : "\n     * AP Channel bandwidth is invalid.\n     *\n     * @see #getBandwidth()\n     ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_WIDTH_20MHZ_NOHT",
    "type" : "int",
    "comment" : "\n     * AP Channel bandwidth is 20 MHZ but no HT.\n     *\n     * @see #getBandwidth()\n     ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_WIDTH_20MHZ",
    "type" : "int",
    "comment" : "\n     * AP Channel bandwidth is 20 MHZ.\n     *\n     * @see #getBandwidth()\n     ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_WIDTH_40MHZ",
    "type" : "int",
    "comment" : "\n     * AP Channel bandwidth is 40 MHZ.\n     *\n     * @see #getBandwidth()\n     ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_WIDTH_80MHZ",
    "type" : "int",
    "comment" : "\n     * AP Channel bandwidth is 80 MHZ.\n     *\n     * @see #getBandwidth()\n     ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_WIDTH_80MHZ_PLUS_MHZ",
    "type" : "int",
    "comment" : "\n     * AP Channel bandwidth is 160 MHZ, but 80MHZ + 80MHZ.\n     *\n     * @see #getBandwidth()\n     ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_WIDTH_160MHZ",
    "type" : "int",
    "comment" : "\n     * AP Channel bandwidth is 160 MHZ.\n     *\n     * @see #getBandwidth()\n     ",
    "links" : [ ]
  }, {
    "name" : "mFrequency",
    "type" : "int",
    "comment" : " The frequency which AP resides on.  ",
    "links" : [ ]
  }, {
    "name" : "mBandwidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SoftApInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getFrequency()",
    "returnType" : "int",
    "comment" : "\n     * Get the frequency which AP resides on.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setFrequency(int freq)",
    "returnType" : "void",
    "comment" : "\n     * Set the frequency which AP resides on.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBandwidth()",
    "returnType" : "int",
    "comment" : "\n     * Get AP Channel bandwidth.\n     *\n     * @return One of {@link #CHANNEL_WIDTH_20MHZ}, {@link #CHANNEL_WIDTH_40MHZ},\n     * {@link #CHANNEL_WIDTH_80MHZ}, {@link #CHANNEL_WIDTH_160MHZ},\n     * {@link #CHANNEL_WIDTH_80MHZ_PLUS_MHZ} or {@link #CHANNEL_WIDTH_INVALID}.\n     ",
    "links" : [ "#CHANNEL_WIDTH_80MHZ", "#CHANNEL_WIDTH_40MHZ", "#CHANNEL_WIDTH_160MHZ", "#CHANNEL_WIDTH_20MHZ", "#CHANNEL_WIDTH_80MHZ_PLUS_MHZ", "#CHANNEL_WIDTH_INVALID" ]
  }, {
    "name" : "public void setBandwidth(@WifiAnnotations.Bandwidth int bandwidth)",
    "returnType" : "void",
    "comment" : "\n     * Set AP Channel bandwidth.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@NonNull Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "CHANNEL_WIDTH_INVALID", "CHANNEL_WIDTH_20MHZ_NOHT", "CHANNEL_WIDTH_20MHZ", "CHANNEL_WIDTH_40MHZ", "CHANNEL_WIDTH_80MHZ", "CHANNEL_WIDTH_80MHZ_PLUS_MHZ", "CHANNEL_WIDTH_160MHZ", "mFrequency", "mBandwidth", "CREATOR" ],
  "methodNames" : [ "public int getFrequency()", "public void setFrequency(int freq)", "public int getBandwidth()", "public void setBandwidth(@WifiAnnotations.Bandwidth int bandwidth)", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public boolean equals(@NonNull Object o)", "public int hashCode()" ]
}