{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/midi/MidiInputPort.java",
  "packageName" : "android.media.midi",
  "className" : "MidiInputPort",
  "comment" : "\n * This class is used for sending data to a port on a MIDI device\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceServer",
    "type" : "IMidiDeviceServer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPortNumber",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFileDescriptor",
    "type" : "FileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOutputStream",
    "type" : "FileOutputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsClosed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalBytes",
    "type" : "AtomicInteger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBuffer",
    "type" : "byte[]",
    "comment" : " buffer to use for sending data out our output stream",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final int getPortNumber()",
    "returnType" : "int",
    "comment" : "\n     * Returns the port number of this port\n     *\n     * @return the port's port number\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onSend(byte[] msg, int offset, int count, long timestamp) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onFlush() throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " FileDescriptor claimFileDescriptor()",
    "returnType" : "FileDescriptor",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : " IBinder getToken()",
    "returnType" : "IBinder",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : " IMidiDeviceServer getDeviceServer()",
    "returnType" : "IMidiDeviceServer",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int pullTotalBytesCount()",
    "returnType" : "int",
    "comment" : "\n     * Pulls total number of bytes and sets to zero. This allows multiple callers.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final int getPortNumber()", "public void onSend(byte[] msg, int offset, int count, long timestamp) throws IOException", "public void onFlush() throws IOException", " FileDescriptor claimFileDescriptor()", " IBinder getToken()", " IMidiDeviceServer getDeviceServer()", "public void close() throws IOException", "protected void finalize() throws Throwable", "public int pullTotalBytesCount()" ],
  "variableNames" : [ "TAG", "mDeviceServer", "mToken", "mPortNumber", "mFileDescriptor", "mOutputStream", "mGuard", "mIsClosed", "mTotalBytes", "mBuffer" ]
}