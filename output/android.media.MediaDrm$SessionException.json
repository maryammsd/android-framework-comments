{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaDrm.java",
  "packageName" : "android.media",
  "className" : "SessionException",
  "comment" : "\n     * {@link SessionException} is a misnomer because it may occur in methods\n     * <b>without</b> a session context.\n     * <p>\n     * A {@link SessionException} is most likely to be thrown when an operation\n     * failed in a way that is likely to succeed on a subsequent attempt; call\n     * {@link #isTransient()} to determine whether the app should retry the\n     * failing operation.\n     ",
  "links" : [ "#isTransient()", "SessionException" ],
  "variables" : [ {
    "name" : "ERROR_UNKNOWN",
    "type" : "int",
    "comment" : "\n         * The SessionException has an unknown error code.\n         * @deprecated Unused.\n         ",
    "links" : [ ]
  }, {
    "name" : "ERROR_RESOURCE_CONTENTION",
    "type" : "int",
    "comment" : "\n         * This indicates that apps using MediaDrm sessions are\n         * temporarily exceeding the capacity of available crypto\n         * resources. The app should retry the operation later.\n         *\n         * @deprecated Please use {@link #isTransient()} instead of comparing\n         * the return value of {@link #getErrorCode()} against\n         * {@link SessionException#ERROR_RESOURCE_CONTENTION}.\n         ",
    "links" : [ "#getErrorCode()", "#isTransient()", "#ERROR_RESOURCE_CONTENTION" ]
  }, {
    "name" : "mErrorCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVendorError",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOemError",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mErrorContext",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getErrorCode()",
    "returnType" : "int",
    "comment" : "\n         * Retrieve the error code associated with the SessionException\n         *\n         * @deprecated Please use {@link #isTransient()} instead of comparing\n         * the return value of {@link #getErrorCode()} against\n         * {@link SessionException#ERROR_RESOURCE_CONTENTION}.\n         ",
    "links" : [ "#getErrorCode()", "#isTransient()", "#ERROR_RESOURCE_CONTENTION" ]
  }, {
    "name" : "public int getVendorError()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getOemError()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getErrorContext()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isTransient()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if the {@link SessionException} is a transient\n         * issue, perhaps due to resource constraints, and that the operation\n         * (e.g. provisioning, generating requests) may succeed on a subsequent\n         * attempt.\n         ",
    "links" : [ "SessionException" ]
  } ],
  "methodNames" : [ "public int getErrorCode()", "public int getVendorError()", "public int getOemError()", "public int getErrorContext()", "public boolean isTransient()" ],
  "variableNames" : [ "ERROR_UNKNOWN", "ERROR_RESOURCE_CONTENTION", "mErrorCode", "mVendorError", "mOemError", "mErrorContext" ]
}