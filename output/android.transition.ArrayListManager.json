{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/transition/Transition.java",
  "packageName" : "android.transition",
  "className" : "ArrayListManager",
  "comment" : "\n     * Utility class for managing typed ArrayLists efficiently. In particular, this\n     * can be useful for lists that we don't expect to be used often (eg, the exclude\n     * lists), so we'd like to keep them nulled out by default. This causes the code to\n     * become tedious, with constant null checks, code to allocate when necessary,\n     * and code to null out the reference when the list is empty. This class encapsulates\n     * all of that functionality into simple add()/remove() methods which perform the\n     * necessary checks, allocation/null-out as appropriate, and return the\n     * resulting list.\n     ",
  "variables" : [ ],
  "methods" : [ {
    "name" : " static ArrayList<T> add(ArrayList<T> list, T item)",
    "returnType" : "ArrayList<T>",
    "comment" : "\n         * Add the specified item to the list, returning the resulting list.\n         * The returned list can either the be same list passed in or, if that\n         * list was null, the new list that was created.\n         *\n         * Note that the list holds unique items; if the item already exists in the\n         * list, the list is not modified.\n         ",
    "links" : [ ]
  }, {
    "name" : " static ArrayList<T> remove(ArrayList<T> list, T item)",
    "returnType" : "ArrayList<T>",
    "comment" : "\n         * Remove the specified item from the list, returning the resulting list.\n         * The returned list can either the be same list passed in or, if that\n         * list becomes empty as a result of the remove(), the new list was created.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ " static ArrayList<T> add(ArrayList<T> list, T item)", " static ArrayList<T> remove(ArrayList<T> list, T item)" ]
}