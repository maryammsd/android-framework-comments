{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/filterfw/core/NativeFrame.java",
  "packageName" : "android.filterfw.core",
  "className" : "NativeFrame",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "nativeFrameId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected synchronized void releaseNativeAllocation()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected synchronized boolean hasNativeAllocation()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCapacity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object getObjectValue()",
    "returnType" : "Object",
    "comment" : "\n     * Returns the native frame's Object value.\n     *\n     * If the frame's base-type is not TYPE_OBJECT, this returns a data buffer containing the native\n     * data (this is equivalent to calling getData().\n     * If the frame is based on an object type, this type is expected to be a subclass of\n     * NativeBuffer. The NativeBuffer returned is only valid for as long as the frame is alive. If\n     * you need to hold on to the returned value, you must retain it.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setInts(int[] ints)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getInts()",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFloats(float[] floats)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float[] getFloats()",
    "returnType" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setData(ByteBuffer buffer, int offset, int length)",
    "returnType" : "void",
    "comment" : " we should allow specifying both? (May be difficult for other frame types).",
    "links" : [ ]
  }, {
    "name" : "public ByteBuffer getData()",
    "returnType" : "ByteBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setBitmap(Bitmap bitmap)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Bitmap getBitmap()",
    "returnType" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDataFromFrame(Frame frame)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativeAllocate(int capacity)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativeDeallocate()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int getNativeCapacity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int nativeIntSize()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int nativeFloatSize()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setNativeData(byte[] data, int offset, int length)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native byte[] getNativeData(int byteCount)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean getNativeBuffer(NativeBuffer buffer)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setNativeInts(int[] ints)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setNativeFloats(float[] floats)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int[] getNativeInts(int byteCount)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native float[] getNativeFloats(int byteCount)",
    "returnType" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setNativeBitmap(Bitmap bitmap, int size, int bytesPerSample)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean getNativeBitmap(Bitmap bitmap, int size, int bytesPerSample)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativeCopyFromNative(NativeFrame frame)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean nativeCopyFromGL(GLFrame frame)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected synchronized void releaseNativeAllocation()", "protected synchronized boolean hasNativeAllocation()", "public int getCapacity()", "public Object getObjectValue()", "public void setInts(int[] ints)", "public int[] getInts()", "public void setFloats(float[] floats)", "public float[] getFloats()", "public void setData(ByteBuffer buffer, int offset, int length)", "public ByteBuffer getData()", "public void setBitmap(Bitmap bitmap)", "public Bitmap getBitmap()", "public void setDataFromFrame(Frame frame)", "public String toString()", "private native boolean nativeAllocate(int capacity)", "private native boolean nativeDeallocate()", "private native int getNativeCapacity()", "private static native int nativeIntSize()", "private static native int nativeFloatSize()", "private native boolean setNativeData(byte[] data, int offset, int length)", "private native byte[] getNativeData(int byteCount)", "private native boolean getNativeBuffer(NativeBuffer buffer)", "private native boolean setNativeInts(int[] ints)", "private native boolean setNativeFloats(float[] floats)", "private native int[] getNativeInts(int byteCount)", "private native float[] getNativeFloats(int byteCount)", "private native boolean setNativeBitmap(Bitmap bitmap, int size, int bytesPerSample)", "private native boolean getNativeBitmap(Bitmap bitmap, int size, int bytesPerSample)", "private native boolean nativeCopyFromNative(NativeFrame frame)", "private native boolean nativeCopyFromGL(GLFrame frame)" ],
  "variableNames" : [ "nativeFrameId" ]
}