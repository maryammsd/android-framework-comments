{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/ContentUris.java",
  "packageName" : "android.content",
  "className" : "ContentUris",
  "comment" : "\n* Utility methods useful for working with {@link android.net.Uri} objects\n* that use the &quot;content&quot; (content://) scheme.\n*\n*<p>\n*   Content URIs have the syntax\n*</p>\n*<p>\n*   <code>content://<em>authority</em>/<em>path</em>/<em>id</em></code>\n*</p>\n*<dl>\n*   <dt>\n*       <code>content:</code>\n*   </dt>\n*   <dd>\n*       The scheme portion of the URI. This is always set to {@link\n*       android.content.ContentResolver#SCHEME_CONTENT ContentResolver.SCHEME_CONTENT} (value\n*       <code>content://</code>).\n*   </dd>\n*   <dt>\n*       <em>authority</em>\n*   </dt>\n*   <dd>\n*       A string that identifies the entire content provider. All the content URIs for the provider\n*       start with this string. To guarantee a unique authority, providers should consider\n*       using an authority that is the same as the provider class' package identifier.\n*   </dd>\n*   <dt>\n*       <em>path</em>\n*   </dt>\n*   <dd>\n*       Zero or more segments, separated by a forward slash (<code>/</code>), that identify\n*       some subset of the provider's data. Most providers use the path part to identify\n*       individual tables. Individual segments in the path are often called\n*       &quot;directories&quot; although they do not refer to file directories. The right-most\n*       segment in a path is often called a &quot;twig&quot;\n*   </dd>\n*   <dt>\n*       <em>id</em>\n*   </dt>\n*   <dd>\n*       A unique numeric identifier for a single row in the subset of data identified by the\n*       preceding path part. Most providers recognize content URIs that contain an id part\n*       and give them special handling. A table that contains a column named <code>_ID</code>\n*       often expects the id part to be a particular value for that column.\n*   </dd>\n*</dl>\n*\n",
  "links" : [ "android.content.ContentResolver#SCHEME_CONTENT", "android.net.Uri" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static long parseId(@NonNull Uri contentUri)",
    "returnType" : "long",
    "comment" : "\n     * Converts the last path segment to a long.\n     *\n     * <p>This supports a common convention for content URIs where an ID is\n     * stored in the last segment.\n     *\n     * @throws UnsupportedOperationException if this isn't a hierarchical URI\n     * @throws NumberFormatException if the last segment isn't a number\n     *\n     * @return the long conversion of the last segment or -1 if the path is\n     *  empty\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Uri.Builder appendId(@NonNull Uri.Builder builder, long id)",
    "returnType" : "Uri.Builder",
    "comment" : "\n     * Appends the given ID to the end of the path.\n     *\n     * @param builder to append the ID to\n     * @param id to append\n     *\n     * @return the given builder\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Uri withAppendedId(@NonNull Uri contentUri, long id)",
    "returnType" : "Uri",
    "comment" : "\n     * Appends the given ID to the end of the path.\n     *\n     * @param contentUri to start with\n     * @param id to append\n     *\n     * @return a new URI with the given ID appended to the end of the path\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Uri removeId(@NonNull Uri contentUri)",
    "returnType" : "Uri",
    "comment" : "\n     * Removes any ID from the end of the path.\n     *\n     * @param contentUri that ends with an ID\n     * @return a new URI with the ID removed from the end of the path\n     * @throws IllegalArgumentException when the given URI has no ID to remove\n     *             from the end of the path\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static long parseId(@NonNull Uri contentUri)", "public static Uri.Builder appendId(@NonNull Uri.Builder builder, long id)", "public static Uri withAppendedId(@NonNull Uri contentUri, long id)", "public static Uri removeId(@NonNull Uri contentUri)" ],
  "variableNames" : [ ]
}