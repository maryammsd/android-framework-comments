{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/MbmsStreamingSession.java",
  "packageName" : "android.telephony",
  "className" : "MbmsStreamingSession",
  "comment" : "\n * This class provides functionality for streaming media over MBMS.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MBMS_STREAMING_SERVICE_ACTION",
    "type" : "String",
    "comment" : "\n     * Service action which must be handled by the middleware implementing the MBMS streaming\n     * interface.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "MBMS_STREAMING_SERVICE_OVERRIDE_METADATA",
    "type" : "String",
    "comment" : "\n     * Metadata key that specifies the component name of the service to bind to for file-download.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "sIsInitialized",
    "type" : "AtomicBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "AtomicReference<IMbmsStreamingService>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeathRecipient",
    "type" : "IBinder.DeathRecipient",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInternalCallback",
    "type" : "InternalStreamingSessionCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceConnection",
    "type" : "ServiceConnection",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKnownActiveStreamingServices",
    "type" : "Set<StreamingService>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubscriptionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static MbmsStreamingSession create(@NonNull Context context, @NonNull Executor executor, int subscriptionId, @NonNull final MbmsStreamingSessionCallback callback)",
    "returnType" : "MbmsStreamingSession",
    "comment" : "\n     * Create a new {@link MbmsStreamingSession} using the given subscription ID.\n     *\n     * Note that this call will bind a remote service. You may not call this method on your app's\n     * main thread.\n     *\n     * You may only have one instance of {@link MbmsStreamingSession} per UID. If you call this\n     * method while there is an active instance of {@link MbmsStreamingSession} in your process\n     * (in other words, one that has not had {@link #close()} called on it), this method will\n     * throw an {@link IllegalStateException}. If you call this method in a different process\n     * running under the same UID, an error will be indicated via\n     * {@link MbmsStreamingSessionCallback#onError(int, String)}.\n     *\n     * Note that initialization may fail asynchronously. If you wish to try again after you\n     * receive such an asynchronous error, you must call {@link #close()} on the instance of\n     * {@link MbmsStreamingSession} that you received before calling this method again.\n     *\n     * @param context The {@link Context} to use.\n     * @param executor The executor on which you wish to execute callbacks.\n     * @param subscriptionId The subscription ID to use.\n     * @param callback A callback object on which you wish to receive results of asynchronous\n     *                 operations.\n     * @return An instance of {@link MbmsStreamingSession}, or null if an error occurred.\n     ",
    "links" : [ "IllegalStateException", "android.content.Context", "#close()", "android.telephony.MbmsStreamingSession", "android.telephony.mbms.MbmsStreamingSessionCallback#onError(int" ]
  }, {
    "name" : "public static MbmsStreamingSession create(@NonNull Context context, @NonNull Executor executor, @NonNull MbmsStreamingSessionCallback callback)",
    "returnType" : "MbmsStreamingSession",
    "comment" : "\n     * Create a new {@link MbmsStreamingSession} using the system default data subscription ID.\n     * See {@link #create(Context, Executor, int, MbmsStreamingSessionCallback)}.\n     ",
    "links" : [ "#create(Context", "android.telephony.MbmsStreamingSession" ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Terminates this instance. Also terminates\n     * any streaming services spawned from this instance as if\n     * {@link StreamingService#close()} had been called on them. After this method returns,\n     * no further callbacks originating from the middleware will be enqueued on the provided\n     * instance of {@link MbmsStreamingSessionCallback}, but callbacks that have already been\n     * enqueued will still be delivered.\n     *\n     * It is safe to call {@link #create(Context, Executor, int, MbmsStreamingSessionCallback)} to\n     * obtain another instance of {@link MbmsStreamingSession} immediately after this method\n     * returns.\n     *\n     * May throw an {@link IllegalStateException}\n     ",
    "links" : [ "IllegalStateException", "android.telephony.mbms.StreamingService#close()", "#create(Context", "android.telephony.mbms.MbmsStreamingSessionCallback", "android.telephony.MbmsStreamingSession" ]
  }, {
    "name" : "public void requestUpdateStreamingServices(List<String> serviceClassList)",
    "returnType" : "void",
    "comment" : "\n     * An inspection API to retrieve the list of streaming media currently be advertised.\n     * The results are returned asynchronously via\n     * {@link MbmsStreamingSessionCallback#onStreamingServicesUpdated(List)} on the callback\n     * provided upon creation.\n     *\n     * Multiple calls replace the list of service classes of interest.\n     *\n     * May throw an {@link IllegalArgumentException} or an {@link IllegalStateException}.\n     *\n     * @param serviceClassList A list of streaming service classes that the app would like updates\n     *                         on. The exact names of these classes should be negotiated with the\n     *                         wireless carrier separately.\n     ",
    "links" : [ "IllegalStateException", "android.telephony.mbms.MbmsStreamingSessionCallback#onStreamingServicesUpdated(List)", "IllegalArgumentException" ]
  }, {
    "name" : "public StreamingService startStreaming(StreamingServiceInfo serviceInfo, @NonNull Executor executor, StreamingServiceCallback callback)",
    "returnType" : "StreamingService",
    "comment" : "\n     * Starts streaming a requested service, reporting status to the indicated callback.\n     * Returns an object used to control that stream. The stream may not be ready for consumption\n     * immediately upon return from this method -- wait until the streaming state has been\n     * reported via\n     * {@link android.telephony.mbms.StreamingServiceCallback#onStreamStateUpdated(int, int)}\n     *\n     * May throw an {@link IllegalArgumentException} or an {@link IllegalStateException}\n     *\n     * Asynchronous errors through the callback include any of the errors in\n     * {@link MbmsErrors.GeneralErrors} or\n     * {@link MbmsErrors.StreamingErrors}.\n     *\n     * @param serviceInfo The information about the service to stream.\n     * @param executor The executor on which you wish to execute callbacks for this stream.\n     * @param callback A callback that'll be called when something about the stream changes.\n     * @return An instance of {@link StreamingService} through which the stream can be controlled.\n     *         May be {@code null} if an error occurred.\n     ",
    "links" : [ "IllegalStateException", "MbmsErrors.GeneralErrors", "MbmsErrors.StreamingErrors", "android.telephony.mbms.StreamingService", "android.telephony.mbms.StreamingServiceCallback#onStreamStateUpdated(int", "IllegalArgumentException" ]
  }, {
    "name" : "public void onStreamingServiceStopped(StreamingService service)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private int bindAndInitialize()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void sendErrorToApp(int errorCode, String message)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static MbmsStreamingSession create(@NonNull Context context, @NonNull Executor executor, int subscriptionId, @NonNull final MbmsStreamingSessionCallback callback)", "public static MbmsStreamingSession create(@NonNull Context context, @NonNull Executor executor, @NonNull MbmsStreamingSessionCallback callback)", "public void close()", "public void requestUpdateStreamingServices(List<String> serviceClassList)", "public StreamingService startStreaming(StreamingServiceInfo serviceInfo, @NonNull Executor executor, StreamingServiceCallback callback)", "public void onStreamingServiceStopped(StreamingService service)", "private int bindAndInitialize()", "private void sendErrorToApp(int errorCode, String message)" ],
  "variableNames" : [ "LOG_TAG", "MBMS_STREAMING_SERVICE_ACTION", "MBMS_STREAMING_SERVICE_OVERRIDE_METADATA", "sIsInitialized", "mService", "mDeathRecipient", "mInternalCallback", "mServiceConnection", "mKnownActiveStreamingServices", "mContext", "mSubscriptionId" ]
}