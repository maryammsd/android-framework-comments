{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/hdmi/HdmiRecordListener.java",
  "packageName" : "android.hardware.hdmi",
  "className" : "TimerStatusData",
  "comment" : "\n     * [Timer overlap warning] [Media Info] [Timer Programmed Info]\n     * @hide\n     ",
  "variables" : [ {
    "name" : "mOverlapped",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMediaInfo",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgrammed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgrammedInfo",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNotProgrammedError",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDurationHour",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDurationMinute",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtraError",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static TimerStatusData parseFrom(int result)",
    "returnType" : "TimerStatusData",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int bcdByteToInt(byte value)",
    "returnType" : "int",
    "comment" : " Least significant 4 bits is used for 1 digits.",
    "links" : [ ]
  }, {
    "name" : "public boolean isOverlapped()",
    "returnType" : "boolean",
    "comment" : "\n         * Indicates if there is another timer block already set which overlaps with this new\n         * recording request.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMediaInfo()",
    "returnType" : "int",
    "comment" : "\n         * Indicates if removable media is present and its write protect state.\n         * It should be one of the following values.\n         * <ul>\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_MEDIA_INFO_PRESENT_NOT_PROTECTED}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_MEDIA_INFO_PRESENT_PROTECTED}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_MEDIA_INFO_NOT_PRESENT}\n         * </ul>\n         ",
    "links" : [ "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_MEDIA_INFO_PRESENT_PROTECTED", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_MEDIA_INFO_PRESENT_NOT_PROTECTED", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_MEDIA_INFO_NOT_PRESENT" ]
  }, {
    "name" : "public boolean isProgrammed()",
    "returnType" : "boolean",
    "comment" : "\n         * Selector for [Timer Programmed Info].\n         * If it is {@code true}, {@link #getProgrammedInfo()} would have meaningful value and\n         * ignore result of {@link #getNotProgammedError()}.\n         ",
    "links" : [ "#getProgrammedInfo()", "#getNotProgammedError()" ]
  }, {
    "name" : "public int getProgrammedInfo()",
    "returnType" : "int",
    "comment" : "\n         * Information indicating any non-fatal issues with the programming request.\n         * It's set only if {@link #isProgrammed()} returns true.\n         * It should be one of the following values.\n         * <ul>\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_PROGRAMMED_INFO_ENOUGH_SPACE}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_PROGRAMMED_INFO_NOT_ENOUGH_SPACE}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_PROGRAMMED_INFO_MIGHT_NOT_ENOUGH_SPACE}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_PROGRAMMED_INFO_NO_MEDIA_INFO}\n         * </ul>\n         *\n         * @throws IllegalStateException if it's called when {@link #isProgrammed()}\n         *                               returns false\n         ",
    "links" : [ "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_PROGRAMMED_INFO_ENOUGH_SPACE", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_PROGRAMMED_INFO_NOT_ENOUGH_SPACE", "#isProgrammed()", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_PROGRAMMED_INFO_MIGHT_NOT_ENOUGH_SPACE", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_PROGRAMMED_INFO_NO_MEDIA_INFO" ]
  }, {
    "name" : "public int getNotProgammedError()",
    "returnType" : "int",
    "comment" : "\n         * Information indicating any fatal issues with the programming request.\n         * It's set only if {@link #isProgrammed()} returns false.\n         * it should be one of the following values.\n         * <ul>\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_NO_FREE_TIME}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_DATE_OUT_OF_RANGE}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_INVALID_SEQUENCE}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_INVALID_EXTERNAL_PHYSICAL_NUMBER}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_CA_NOT_SUPPORTED}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_NO_CA_ENTITLEMENTS}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_UNSUPPORTED_RESOLUTION}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_PARENTAL_LOCK_ON}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_CLOCK_FAILURE}\n         *   <li>{@link HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_DUPLICATED}\n         * </ul>\n         *\n         * @throws IllegalStateException if it's called when {@link #isProgrammed()}\n         *                               returns true\n         ",
    "links" : [ "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_INVALID_SEQUENCE", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_CA_NOT_SUPPORTED", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_NO_FREE_TIME", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_DATE_OUT_OF_RANGE", "#isProgrammed()", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_PARENTAL_LOCK_ON", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_CLOCK_FAILURE", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_DUPLICATED", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_UNSUPPORTED_RESOLUTION", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_NO_CA_ENTITLEMENTS", "android.hardware.hdmi.HdmiControlManager#TIMER_STATUS_NOT_PROGRAMMED_INVALID_EXTERNAL_PHYSICAL_NUMBER" ]
  }, {
    "name" : "public int getDurationHour()",
    "returnType" : "int",
    "comment" : "\n         * Duration hours.\n         * Optional parameter: Contains an estimate of the space left on the media, expressed as a\n         * time. This parameter may be returned when:\n         *  - [Programmed Info] is “Not enough space available”; or\n         *  - [Not Programmed Info] is “Duplicate: already programmed”\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getDurationMinute()",
    "returnType" : "int",
    "comment" : "\n         * Duration minutes.\n         * Optional parameter: Contains an estimate of the space left on the media, expressed as a\n         * time. This parameter may be returned when:\n         *  - [Programmed Info] is “Not enough space available”; or\n         *  - [Not Programmed Info] is “Duplicate: already programmed”\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getExtraError()",
    "returnType" : "int",
    "comment" : "\n         * Extra error code.\n         * <ul>\n         * <li>{@link HdmiControlManager#TIMER_RECORDING_RESULT_EXTRA_NO_ERROR}\n         *     No extra errors. Other values of this class might be available.\n         * <li>{@link HdmiControlManager#TIMER_RECORDING_RESULT_EXTRA_CHECK_RECORDER_CONNECTION}\n         *     Check record connection. Other values of this class should be ignored.\n         * <li>{@link HdmiControlManager#TIMER_RECORDING_RESULT_EXTRA_FAIL_TO_RECORD_SELECTED_SOURCE}\n         *     Fail to record selected source. Other values of this class should be ignored.\n         * <li>{@link HdmiControlManager#TIMER_RECORDING_RESULT_EXTRA_CEC_DISABLED}\n         *     Cec disabled. Other values of this class should be ignored.\n         * </ul>\n         ",
    "links" : [ "android.hardware.hdmi.HdmiControlManager#TIMER_RECORDING_RESULT_EXTRA_CEC_DISABLED", "android.hardware.hdmi.HdmiControlManager#TIMER_RECORDING_RESULT_EXTRA_CHECK_RECORDER_CONNECTION", "android.hardware.hdmi.HdmiControlManager#TIMER_RECORDING_RESULT_EXTRA_FAIL_TO_RECORD_SELECTED_SOURCE", "android.hardware.hdmi.HdmiControlManager#TIMER_RECORDING_RESULT_EXTRA_NO_ERROR" ]
  } ],
  "variableNames" : [ "mOverlapped", "mMediaInfo", "mProgrammed", "mProgrammedInfo", "mNotProgrammedError", "mDurationHour", "mDurationMinute", "mExtraError" ],
  "methodNames" : [ " static TimerStatusData parseFrom(int result)", "private static int bcdByteToInt(byte value)", "public boolean isOverlapped()", "public int getMediaInfo()", "public boolean isProgrammed()", "public int getProgrammedInfo()", "public int getNotProgammedError()", "public int getDurationHour()", "public int getDurationMinute()", "public int getExtraError()" ]
}