{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/aware/TlvBufferUtils.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "TlvElement",
  "comment" : "\n     * Utility class used when iterating over a TLV formatted byte-array. Use\n     * {@link TlvIterable} to iterate over array. A {@link TlvElement}\n     * represents each entry in a TLV formatted byte-array.\n     ",
  "variables" : [ {
    "name" : "type",
    "type" : "int",
    "comment" : "\n         * The Type (T) field of the current TLV element. Note that for LV\n         * formatted byte-arrays (i.e. TLV whose Type/T size is 0) the value of\n         * this field is undefined.\n         ",
    "links" : [ ]
  }, {
    "name" : "length",
    "type" : "int",
    "comment" : "\n         * The Length (L) field of the current TLV element.\n         ",
    "links" : [ ]
  }, {
    "name" : "byteOrder",
    "type" : "ByteOrder",
    "comment" : "\n         * Control of the endianess of the TLV element - true for big-endian, false for little-\n         * endian.\n         ",
    "links" : [ ]
  }, {
    "name" : "mRefArray",
    "type" : "byte[]",
    "comment" : "\n         * The Value (V) field - a raw byte array representing the current TLV\n         * element where the entry starts at {@link TlvElement#offset}.\n         ",
    "links" : [ "TlvElement#offset" ]
  }, {
    "name" : "offset",
    "type" : "int",
    "comment" : "\n         * The offset to be used into {@link TlvElement#mRefArray} to access the\n         * raw data representing the current TLV element.\n         ",
    "links" : [ "TlvElement#mRefArray" ]
  } ],
  "methods" : [ {
    "name" : "public byte[] getRawData()",
    "returnType" : "byte[]",
    "comment" : "\n         * Return the raw byte array of the Value (V) field.\n         *\n         * @return The Value (V) field as a byte array.\n         ",
    "links" : [ ]
  }, {
    "name" : "public byte getByte()",
    "returnType" : "byte",
    "comment" : "\n         * Utility function to return a byte representation of a TLV element of\n         * length 1. Note: an attempt to call this function on a TLV item whose\n         * {@link TlvElement#length} is != 1 will result in an exception.\n         *\n         * @return byte representation of current TLV element.\n         ",
    "links" : [ "TlvElement#length" ]
  }, {
    "name" : "public short getShort()",
    "returnType" : "short",
    "comment" : "\n         * Utility function to return a short representation of a TLV element of\n         * length 2. Note: an attempt to call this function on a TLV item whose\n         * {@link TlvElement#length} is != 2 will result in an exception.\n         *\n         * @return short representation of current TLV element.\n         ",
    "links" : [ "TlvElement#length" ]
  }, {
    "name" : "public int getInt()",
    "returnType" : "int",
    "comment" : "\n         * Utility function to return an integer representation of a TLV element\n         * of length 4. Note: an attempt to call this function on a TLV item\n         * whose {@link TlvElement#length} is != 4 will result in an exception.\n         *\n         * @return integer representation of current TLV element.\n         ",
    "links" : [ "TlvElement#length" ]
  }, {
    "name" : "public String getString()",
    "returnType" : "String",
    "comment" : "\n         * Utility function to return a String representation of a TLV element.\n         *\n         * @return String repersentation of the current TLV element.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "type", "length", "byteOrder", "mRefArray", "offset" ],
  "methodNames" : [ "public byte[] getRawData()", "public byte getByte()", "public short getShort()", "public int getInt()", "public String getString()" ]
}