{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaSession2.java",
  "packageName" : "android.media",
  "className" : "ControllerInfo",
  "comment" : "\n     * This API is not generally intended for third party application developers.\n     * Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n     * <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n     * Library</a> for consistent behavior across all devices.\n     * <p>\n     * Information of a controller.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mRemoteUserInfo",
    "type" : "RemoteUserInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsTrusted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControllerBinder",
    "type" : "Controller2Link",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectionHints",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNextSeqNumber",
    "type" : "int",
    "comment" : "@GuardedBy(\"mLock\")",
    "links" : [ ]
  }, {
    "name" : "mPendingCommands",
    "type" : "ArrayMap<ResultReceiver, Integer>",
    "comment" : "@GuardedBy(\"mLock\")",
    "links" : [ ]
  }, {
    "name" : "mRequestedCommandSeqNumbers",
    "type" : "ArraySet<Integer>",
    "comment" : "@GuardedBy(\"mLock\")",
    "links" : [ ]
  }, {
    "name" : "mAllowedCommands",
    "type" : "Session2CommandGroup",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public RemoteUserInfo getRemoteUserInfo()",
    "returnType" : "RemoteUserInfo",
    "comment" : "\n         * @return remote user info of the controller.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n         * @return package name of the controller.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getUid()",
    "returnType" : "int",
    "comment" : "\n         * @return uid of the controller. Can be a negative value if the uid cannot be obtained.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getConnectionHints()",
    "returnType" : "Bundle",
    "comment" : "\n         * @return connection hints sent from controller.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isTrusted()",
    "returnType" : "boolean",
    "comment" : "\n         * Return if the controller has granted {@code android.permission.MEDIA_CONTENT_CONTROL} or\n         * has a enabled notification listener so can be trusted to accept connection and incoming\n         * command request.\n         *\n         * @return {@code true} if the controller is trusted.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void notifyConnected(Bundle connectionResult)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void notifyDisconnected()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void notifyPlaybackActiveChanged(boolean playbackActive)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void sendSessionCommand(Session2Command command, Bundle args, ResultReceiver resultReceiver)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void cancelSessionCommand(@NonNull Object token)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void receiveCommandResult(ResultReceiver resultReceiver)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addRequestedCommandSeqNumber(int seq)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean removeRequestedCommandSeqNumber(int seq)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getNextSeqNumber()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public RemoteUserInfo getRemoteUserInfo()", "public String getPackageName()", "public int getUid()", "public Bundle getConnectionHints()", "public boolean isTrusted()", "public int hashCode()", "public boolean equals(@Nullable Object obj)", "public String toString()", " void notifyConnected(Bundle connectionResult)", " void notifyDisconnected()", " void notifyPlaybackActiveChanged(boolean playbackActive)", " void sendSessionCommand(Session2Command command, Bundle args, ResultReceiver resultReceiver)", " void cancelSessionCommand(@NonNull Object token)", " void receiveCommandResult(ResultReceiver resultReceiver)", " void addRequestedCommandSeqNumber(int seq)", " boolean removeRequestedCommandSeqNumber(int seq)", "private int getNextSeqNumber()" ],
  "variableNames" : [ "mRemoteUserInfo", "mIsTrusted", "mControllerBinder", "mConnectionHints", "mLock", "mNextSeqNumber", "mPendingCommands", "mRequestedCommandSeqNumbers", "mAllowedCommands" ]
}