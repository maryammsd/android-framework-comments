{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/res/CompatibilityInfo.java",
  "packageName" : "android.content.res",
  "className" : "CompatibilityInfo",
  "comment" : "\n * CompatibilityInfo class keeps the information about the screen compatibility mode that the\n * application is running under.\n * \n *  {@hide} \n ",
  "variables" : [ {
    "name" : "DEFAULT_COMPATIBILITY_INFO",
    "type" : "CompatibilityInfo",
    "comment" : " default compatibility info object for compatible applications ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_NORMAL_SHORT_DIMENSION",
    "type" : "int",
    "comment" : "\n     * This is the number of pixels we would like to have along the\n     * short axis of an app that needs to run on a normal size screen.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAXIMUM_ASPECT_RATIO",
    "type" : "float",
    "comment" : "\n     * This is the maximum aspect ratio we will allow while keeping\n     * applications in a compatible screen size.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCompatibilityFlags",
    "type" : "int",
    "comment" : "\n     *  A compatibility flags\n     ",
    "links" : [ ]
  }, {
    "name" : "SCALING_REQUIRED",
    "type" : "int",
    "comment" : "\n     * A flag mask to tell if the application needs scaling (when mApplicationScale != 1.0f)\n     * {@see compatibilityFlag}\n     ",
    "links" : [ ]
  }, {
    "name" : "ALWAYS_NEEDS_COMPAT",
    "type" : "int",
    "comment" : "\n     * Application must always run in compatibility mode?\n     ",
    "links" : [ ]
  }, {
    "name" : "NEVER_NEEDS_COMPAT",
    "type" : "int",
    "comment" : "\n     * Application never should run in compatibility mode?\n     ",
    "links" : [ ]
  }, {
    "name" : "NEEDS_SCREEN_COMPAT",
    "type" : "int",
    "comment" : "\n     * Set if the application needs to run in screen size compatibility mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "NEEDS_COMPAT_RES",
    "type" : "int",
    "comment" : "\n     * Set if the application needs to run in with compat resources.\n     ",
    "links" : [ ]
  }, {
    "name" : "applicationDensity",
    "type" : "int",
    "comment" : "\n     * The effective screen density we have selected for this application.\n     ",
    "links" : [ ]
  }, {
    "name" : "applicationScale",
    "type" : "float",
    "comment" : "\n     * Application's scale.\n     ",
    "links" : [ ]
  }, {
    "name" : "applicationInvertedScale",
    "type" : "float",
    "comment" : "\n     * Application's inverted scale.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<CompatibilityInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isScalingRequired()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if the scaling is required\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean supportsScreen()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean neverSupportsScreen()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean alwaysSupportsScreen()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean needsCompatResources()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Translator getTranslator()",
    "returnType" : "Translator",
    "comment" : "\n     * Returns the translator which translates the coordinates in compatibility mode.\n     * @param params the window's parameter\n     ",
    "links" : [ ]
  }, {
    "name" : "public void applyToDisplayMetrics(DisplayMetrics inoutDm)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void applyToConfiguration(int displayDensity, Configuration inoutConfig)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static float computeCompatibleScaling(DisplayMetrics dm, DisplayMetrics outDm)",
    "returnType" : "float",
    "comment" : "\n     * Compute the frame Rect for applications runs under compatibility mode.\n     *\n     * @param dm the display metrics used to compute the frame size.\n     * @param outDm If non-null the width and height will be set to their scaled values.\n     * @return Returns the scaling factor for the window.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "DEFAULT_COMPATIBILITY_INFO", "DEFAULT_NORMAL_SHORT_DIMENSION", "MAXIMUM_ASPECT_RATIO", "mCompatibilityFlags", "SCALING_REQUIRED", "ALWAYS_NEEDS_COMPAT", "NEVER_NEEDS_COMPAT", "NEEDS_SCREEN_COMPAT", "NEEDS_COMPAT_RES", "applicationDensity", "applicationScale", "applicationInvertedScale", "CREATOR" ],
  "methodNames" : [ "public boolean isScalingRequired()", "public boolean supportsScreen()", "public boolean neverSupportsScreen()", "public boolean alwaysSupportsScreen()", "public boolean needsCompatResources()", "public Translator getTranslator()", "public void applyToDisplayMetrics(DisplayMetrics inoutDm)", "public void applyToConfiguration(int displayDensity, Configuration inoutConfig)", "public static float computeCompatibleScaling(DisplayMetrics dm, DisplayMetrics outDm)", "public boolean equals(Object o)", "public String toString()", "public int hashCode()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ]
}