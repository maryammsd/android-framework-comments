{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/cert/CertStoreParameters.java",
  "packageName" : "java.security.cert",
  "className" : "CertStoreParameters",
  "comment" : "\n * A specification of {@code CertStore} parameters.\n * <p>\n * The purpose of this interface is to group (and provide type safety for)\n * all {@code CertStore} parameter specifications. All\n * {@code CertStore} parameter specifications must implement this\n * interface.\n * <p>\n * Typically, a {@code CertStoreParameters} object is passed as a parameter\n * to one of the {@link CertStore#getInstance CertStore.getInstance} methods.\n * The {@code getInstance} method returns a {@code CertStore} that\n * is used for retrieving {@code Certificate}s and {@code CRL}s. The\n * {@code CertStore} that is returned is initialized with the specified\n * parameters. The type of parameters needed may vary between different types\n * of {@code CertStore}s.\n *\n * @see CertStore#getInstance\n *\n * @since       1.4\n * @author      Steve Hanna\n ",
  "links" : [ "java.security.cert.CertStore#getInstance" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " Object clone()",
    "returnType" : "Object",
    "comment" : "\n     * Makes a copy of this {@code CertStoreParameters}.\n     * <p>\n     * The precise meaning of \"copy\" may depend on the class of\n     * the {@code CertStoreParameters} object. A typical implementation\n     * performs a \"deep copy\" of this object, but this is not an absolute\n     * requirement. Some implementations may perform a \"shallow copy\" of some\n     * or all of the fields of this object.\n     * <p>\n     * Note that the {@code CertStore.getInstance} methods make a copy\n     * of the specified {@code CertStoreParameters}. A deep copy\n     * implementation of {@code clone} is safer and more robust, as it\n     * prevents the caller from corrupting a shared {@code CertStore} by\n     * subsequently modifying the contents of its initialization parameters.\n     * However, a shallow copy implementation of {@code clone} is more\n     * appropriate for applications that need to hold a reference to a\n     * parameter contained in the {@code CertStoreParameters}. For example,\n     * a shallow copy clone allows an application to release the resources of\n     * a particular {@code CertStore} initialization parameter immediately,\n     * rather than waiting for the garbage collection mechanism. This should\n     * be done with the utmost care, since the {@code CertStore} may still\n     * be in use by other threads.\n     * <p>\n     * Each subclass should state the precise behavior of this method so\n     * that users and developers know what to expect.\n     *\n     * @return a copy of this {@code CertStoreParameters}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " Object clone()" ],
  "variableNames" : [ ]
}