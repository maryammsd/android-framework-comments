{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/transform/sax/SAXTransformerFactory.java",
  "packageName" : "javax.xml.transform.sax",
  "className" : "SAXTransformerFactory",
  "comment" : "\n * This class extends TransformerFactory to provide SAX-specific\n * factory methods.  It provides two types of ContentHandlers,\n * one for creating Transformers, the other for creating Templates\n * objects.\n *\n * <p>If an application wants to set the ErrorHandler or EntityResolver\n * for an XMLReader used during a transformation, it should use a URIResolver\n * to return the SAXSource which provides (with getXMLReader) a reference to\n * the XMLReader.</p>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "FEATURE",
    "type" : "String",
    "comment" : " If {@link javax.xml.transform.TransformerFactory#getFeature}\n     * returns true when passed this value as an argument,\n     * the TransformerFactory returned from\n     * {@link javax.xml.transform.TransformerFactory#newInstance} may\n     * be safely cast to a SAXTransformerFactory.\n     ",
    "links" : [ "javax.xml.transform.TransformerFactory#getFeature", "javax.xml.transform.TransformerFactory#newInstance" ]
  }, {
    "name" : "FEATURE_XMLFILTER",
    "type" : "String",
    "comment" : " If {@link javax.xml.transform.TransformerFactory#getFeature}\n     * returns true when passed this value as an argument,\n     * the {@link #newXMLFilter(Source src)}\n     * and {@link #newXMLFilter(Templates templates)} methods are supported.\n     ",
    "links" : [ "#newXMLFilter(Templates", "javax.xml.transform.TransformerFactory#getFeature", "#newXMLFilter(Source" ]
  } ],
  "methods" : [ {
    "name" : "public abstract TransformerHandler newTransformerHandler(Source src) throws TransformerConfigurationException",
    "returnType" : "TransformerHandler",
    "comment" : "\n     * Get a TransformerHandler object that can process SAX\n     * ContentHandler events into a Result, based on the transformation\n     * instructions specified by the argument.\n     *\n     * @param src The Source of the transformation instructions.\n     *\n     * @return TransformerHandler ready to transform SAX events.\n     *\n     * @throws TransformerConfigurationException If for some reason the\n     * TransformerHandler can not be created.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract TransformerHandler newTransformerHandler(Templates templates) throws TransformerConfigurationException",
    "returnType" : "TransformerHandler",
    "comment" : "\n     * Get a TransformerHandler object that can process SAX\n     * ContentHandler events into a Result, based on the Templates argument.\n     *\n     * @param templates The compiled transformation instructions.\n     *\n     * @return TransformerHandler ready to transform SAX events.\n     *\n     * @throws TransformerConfigurationException If for some reason the\n     * TransformerHandler can not be created.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract TransformerHandler newTransformerHandler() throws TransformerConfigurationException",
    "returnType" : "TransformerHandler",
    "comment" : "\n     * Get a TransformerHandler object that can process SAX\n     * ContentHandler events into a Result. The transformation\n     * is defined as an identity (or copy) transformation, for example\n     * to copy a series of SAX parse events into a DOM tree.\n     *\n     * @return A non-null reference to a TransformerHandler, that may\n     * be used as a ContentHandler for SAX parse events.\n     *\n     * @throws TransformerConfigurationException If for some reason the\n     * TransformerHandler cannot be created.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract TemplatesHandler newTemplatesHandler() throws TransformerConfigurationException",
    "returnType" : "TemplatesHandler",
    "comment" : "\n     * Get a TemplatesHandler object that can process SAX\n     * ContentHandler events into a Templates object.\n     *\n     * @return A non-null reference to a TransformerHandler, that may\n     * be used as a ContentHandler for SAX parse events.\n     *\n     * @throws TransformerConfigurationException If for some reason the\n     * TemplatesHandler cannot be created.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract XMLFilter newXMLFilter(Source src) throws TransformerConfigurationException",
    "returnType" : "XMLFilter",
    "comment" : "\n     * Create an XMLFilter that uses the given Source as the\n     * transformation instructions.\n     *\n     * @param src The Source of the transformation instructions.\n     *\n     * @return An XMLFilter object, or null if this feature is not supported.\n     *\n     * @throws TransformerConfigurationException If for some reason the\n     * TemplatesHandler cannot be created.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract XMLFilter newXMLFilter(Templates templates) throws TransformerConfigurationException",
    "returnType" : "XMLFilter",
    "comment" : "\n     * Create an XMLFilter, based on the Templates argument..\n     *\n     * @param templates The compiled transformation instructions.\n     *\n     * @return An XMLFilter object, or null if this feature is not supported.\n     *\n     * @throws TransformerConfigurationException If for some reason the\n     * TemplatesHandler cannot be created.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract TransformerHandler newTransformerHandler(Source src) throws TransformerConfigurationException", "public abstract TransformerHandler newTransformerHandler(Templates templates) throws TransformerConfigurationException", "public abstract TransformerHandler newTransformerHandler() throws TransformerConfigurationException", "public abstract TemplatesHandler newTemplatesHandler() throws TransformerConfigurationException", "public abstract XMLFilter newXMLFilter(Source src) throws TransformerConfigurationException", "public abstract XMLFilter newXMLFilter(Templates templates) throws TransformerConfigurationException" ],
  "variableNames" : [ "FEATURE", "FEATURE_XMLFILTER" ]
}