{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ipsec/ike/ike3gpp/Ike3gppBackoffTimer.java",
  "packageName" : "android.net.ipsec.ike.ike3gpp",
  "className" : "Ike3gppBackoffTimer",
  "comment" : "\n * Ike3gppBackoffTimer represents the data provided by the peer/remote endpoint for a BACKOFF_TIMER\n * Notify payload.\n *\n * @see 3GPP TS 24.302 Section 8.2.9.1 BACKOFF_TIMER Notify Payload\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ERROR_TYPE_NO_APN_SUBSCRIPTION",
    "type" : "int",
    "comment" : "\n     * Error-Notify indicating that access is not authorized because no subscription was found for\n     * the specified APN.\n     *\n     * <p>NOTE: PRIVATE-USE VALUE; not IANA specified. This value MAY conflict with other private\n     * use values from other extensions.\n     *\n     * <p>Corresponds to DIAMETER_ERROR_USER_NO_APN_SUBSCRIPTION Result code as specified in 3GPP TS\n     * 29.273 Section 10.3.7\n     *\n     * @see 3GPP TS 24.302 Section 8.1.2.2\n     * @deprecated This API is no longer used to distinguish back off timer support. As per TS24.302\n     *     section 8.2.9.1, the BACK_OFF timer can be used with any ERROR_NOTIFY type.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_TYPE_NETWORK_FAILURE",
    "type" : "int",
    "comment" : "\n     * Error-Notify indicating that the procedure could not be completed due to network failure.\n     *\n     * <p>NOTE: PRIVATE-USE VALUE; not IANA specified. This value MAY conflict with other private\n     * use values from other extensions.\n     *\n     * <p>Corresponds to DIAMETER_UNABLE_TO_COMPLY Result code as specified in 3GPP TS 29.273\n     *\n     * @see 3GPP TS 24.302 Section 8.1.2.2\n     * @deprecated This API is no longer used to distinguish back off timer support. As per TS24.302\n     *     section 8.2.9.1, the BACK_OFF timer can be used with any ERROR_NOTIFY type.\n     ",
    "links" : [ ]
  }, {
    "name" : "mBackoffTimer",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBackoffCause",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getDataType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte getBackoffTimer()",
    "returnType" : "byte",
    "comment" : " NoByteOrShort: using byte to be consistent with the Backoff Timer specification",
    "links" : [ ]
  }, {
    "name" : "public int getBackoffCause()",
    "returnType" : "int",
    "comment" : " Returns the cause for this Backoff Timer specified by the peer. ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isValidErrorNotifyCause(IkeNotifyPayload notifyPayload)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getDataType()", "public byte getBackoffTimer()", "public int getBackoffCause()", "public static boolean isValidErrorNotifyCause(IkeNotifyPayload notifyPayload)" ],
  "variableNames" : [ "ERROR_TYPE_NO_APN_SUBSCRIPTION", "ERROR_TYPE_NETWORK_FAILURE", "mBackoffTimer", "mBackoffCause" ]
}