{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssMeasurementRequest.java",
  "packageName" : "android.location",
  "className" : "Builder",
  "comment" : " Builder for {@link GnssMeasurementRequest} ",
  "links" : [ "android.location.GnssMeasurementRequest" ],
  "variables" : [ {
    "name" : "mCorrelationVectorOutputsEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFullTracking",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIntervalMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWorkSource",
    "type" : "WorkSource",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setCorrelationVectorOutputsEnabled(boolean value)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the value of whether to enable correlation vector outputs, which is false by default.\n         *\n         * <p>If true, enable correlation vectors as part of the raw GNSS measurements outputs.\n         * If false, disable correlation vectors.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setFullTracking(boolean value)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the value of whether to enable full GNSS tracking, which is false by default.\n         *\n         * <p>If true, GNSS chipset switches off duty cycling. In such a mode, no clock\n         * discontinuities are expected, and when supported, carrier phase should be continuous in\n         * good signal conditions. All non-blocklisted, healthy constellations, satellites and\n         * frequency bands that the chipset supports must be reported in this mode. The GNSS chipset\n         * will consume more power in full tracking mode than in duty cycling mode. If false,\n         * GNSS chipset optimizes power via duty cycling, constellations and frequency limits, etc.\n         *\n         * <p>Full GNSS tracking mode affects GnssMeasurement and other GNSS functionalities\n         * including GNSS location.\n         *\n         * <p>Full tracking requests always override non-full tracking requests. If any full\n         * tracking request occurs, all listeners on the device will receive full tracking GNSS\n         * measurements.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setIntervalMillis(@IntRange(from = 0) int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the time interval between the reported measurements in milliseconds, which is 0 by\n         * default. The request interval may be set to {@link #PASSIVE_INTERVAL} which indicates\n         * this request will not actively generate GNSS measurement updates, but may receive\n         * GNSS measurement updates generated as a result of other GNSS measurement requests.\n         *\n         * <p>An interval of 0 milliseconds means the fastest rate the chipset can report.\n         *\n         * <p>The GNSS chipset may report measurements with a rate faster than requested.\n         *\n         * <p class=\"note\">Note that on Android T, a request interval of {@link #PASSIVE_INTERVAL}\n         * will first trigger one GNSS measurement. Another GNSS measurement will be triggered after\n         * {@link #PASSIVE_INTERVAL} milliseconds and so on.\n         ",
    "links" : [ "#PASSIVE_INTERVAL" ]
  }, {
    "name" : "public Builder setWorkSource(@Nullable WorkSource workSource)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the work source to use for power blame for this request. Passing in null or leaving\n         * it unset will be an empty WorkSource, which implies the system is free to assign power\n         * blame as it determines best for this request (which usually means blaming the owner of\n         * the GnssMeasurement listener).\n         *\n         * <p>Permissions enforcement occurs when resulting request is actually used, not when this\n         * method is invoked.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public GnssMeasurementRequest build()",
    "returnType" : "GnssMeasurementRequest",
    "comment" : " Builds a {@link GnssMeasurementRequest} instance as specified by this builder. ",
    "links" : [ "android.location.GnssMeasurementRequest" ]
  } ],
  "methodNames" : [ "public Builder setCorrelationVectorOutputsEnabled(boolean value)", "public Builder setFullTracking(boolean value)", "public Builder setIntervalMillis(@IntRange(from = 0) int value)", "public Builder setWorkSource(@Nullable WorkSource workSource)", "public GnssMeasurementRequest build()" ],
  "variableNames" : [ "mCorrelationVectorOutputsEnabled", "mFullTracking", "mIntervalMillis", "mWorkSource" ]
}