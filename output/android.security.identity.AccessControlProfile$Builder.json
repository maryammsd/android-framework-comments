{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/identity/AccessControlProfile.java",
  "packageName" : "android.security.identity",
  "className" : "Builder",
  "comment" : "\n     * A builder for {@link AccessControlProfile}.\n     ",
  "links" : [ "android.security.identity.AccessControlProfile" ],
  "variables" : [ {
    "name" : "mProfile",
    "type" : "AccessControlProfile",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setUserAuthenticationRequired(boolean userAuthenticationRequired)",
    "returnType" : "Builder",
    "comment" : "\n         * Set whether user authentication is required.\n         *\n         * <p>This should be used sparingly since disabling user authentication on just a single\n         * data element can easily create a\n         * <a href=\"https://en.wikipedia.org/wiki/Relay_attack\">Relay Attack</a> if the device\n         * on which the credential is stored is compromised.</p>\n         *\n         * @param userAuthenticationRequired Set to true if user authentication is required,\n         *                                   false otherwise.\n         * @return The builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUserAuthenticationTimeout(long userAuthenticationTimeoutMillis)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the authentication timeout to use.\n         *\n         * <p>The authentication timeout specifies the amount of time, in milliseconds, for which a\n         * user authentication is valid, if user authentication is required (see\n         * {@link #setUserAuthenticationRequired(boolean)}).</p>\n         *\n         * <p>If the timeout is zero, then authentication is always required for each reader\n         * session.</p>\n         *\n         * @param userAuthenticationTimeoutMillis the authentication timeout, in milliseconds.\n         * @return The builder.\n         ",
    "links" : [ "#setUserAuthenticationRequired(boolean)" ]
  }, {
    "name" : "public Builder setReaderCertificate(@NonNull X509Certificate readerCertificate)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the reader certificate to use when checking access control.\n         *\n         * <p>If set, this is checked against the certificate chain presented by\n         * reader. The access check is fulfilled only if one of the certificates\n         * in the chain, matches the certificate set by this method.</p>\n         *\n         * @param readerCertificate the certificate to use for the access control check.\n         * @return The builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public AccessControlProfile build()",
    "returnType" : "AccessControlProfile",
    "comment" : "\n         * Creates a new {@link AccessControlProfile} from the data supplied to the builder.\n         *\n         * @return The created {@link AccessControlProfile} object.\n         ",
    "links" : [ "android.security.identity.AccessControlProfile" ]
  } ],
  "methodNames" : [ "public Builder setUserAuthenticationRequired(boolean userAuthenticationRequired)", "public Builder setUserAuthenticationTimeout(long userAuthenticationTimeoutMillis)", "public Builder setReaderCertificate(@NonNull X509Certificate readerCertificate)", "public AccessControlProfile build()" ],
  "variableNames" : [ "mProfile" ]
}