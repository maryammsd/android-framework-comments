{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inspector/InspectionCompanion.java",
  "packageName" : "android.view.inspector",
  "className" : "InspectionCompanion",
  "comment" : "\n * An interface for companion objects used to inspect views.\n *\n * Inspection companions only need to handle the properties and node name of the specific class\n * they are defined for, not anything from a parent class. At runtime, the inspector instantiates\n * one instance of each inspection companion, and handles visiting them in the correct inheritance\n * order for each type it inspects.\n *\n * Properties are read from the top of the type tree to the bottom, so that classes that override\n * a property in their parent class can overwrite it in the reader. In general, properties will\n * cleanly inherit through their getters, and the inspector runtime will read the properties of a\n * parent class via the parent's inspection companion, and the child companion will only read\n * properties added or changed since the parent was defined.\n *\n * @param <T> The type of inspectable this is the companion to\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void mapProperties(@NonNull PropertyMapper propertyMapper)",
    "returnType" : "void",
    "comment" : "\n     * Map the string names of the properties this companion knows about to integer IDs.\n     *\n     * Each companion is responsible for storing the integer IDs of all its properties. This is the\n     * only method that is allowed to modify the stored IDs.\n     *\n     * Calling {@link #readProperties(T, PropertyReader)} before calling this results in\n     * undefined behavior.\n     *\n     * @param propertyMapper A {@link PropertyMapper} maps string names to IDs.\n     ",
    "links" : [ "android.view.inspector.PropertyMapper", "#readProperties(T" ]
  }, {
    "name" : " void readProperties(@NonNull T inspectable, @NonNull PropertyReader propertyReader)",
    "returnType" : "void",
    "comment" : "\n     * Read the values of an instance of this companion's type into a {@link PropertyReader}.\n     *\n     * This method needs to return the property IDs stored by\n     * {@link #mapProperties(PropertyMapper)}. Implementations should track if their properties\n     * have been mapped and throw a {@link UninitializedPropertyMapException} if this method is\n     * called before {mapProperties}.\n     *\n     * @param inspectable A object of type {T} to read the properties of.\n     * @param propertyReader An object which receives the property IDs and values.\n     ",
    "links" : [ "#mapProperties(PropertyMapper)", "UninitializedPropertyMapException", "android.view.inspector.PropertyReader" ]
  } ],
  "methodNames" : [ " void mapProperties(@NonNull PropertyMapper propertyMapper)", " void readProperties(@NonNull T inspectable, @NonNull PropertyReader propertyReader)" ],
  "variableNames" : [ ]
}