{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothSinkAudioPolicy.java",
  "packageName" : "android.bluetooth",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link BluetoothSinkAudioPolicy}.\n     *\n     * <p>By default, the audio policy values will be set to {@link\n     * BluetoothSinkAudioPolicy#POLICY_UNCONFIGURED}.\n     ",
  "links" : [ "android.bluetooth.BluetoothSinkAudioPolicy", "android.bluetooth.BluetoothSinkAudioPolicy#POLICY_UNCONFIGURED" ],
  "variables" : [ {
    "name" : "mCallEstablishPolicy",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectingTimePolicy",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInBandRingtonePolicy",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setCallEstablishPolicy(@AudioPolicyValues int callEstablishPolicy)",
    "returnType" : "Builder",
    "comment" : "\n         * Set Call Establish (pick up and answer) policy.\n         *\n         * <p>This policy is used to determine the audio preference when the HF device makes or\n         * answers a call. That is, if this device makes or answers a call, is the audio preferred\n         * by HF.\n         *\n         * <p>If set to {@link BluetoothSinkAudioPolicy#POLICY_ALLOWED}, answering or making a call\n         * from the HF device will route the call audio to it. If set to {@link\n         * BluetoothSinkAudioPolicy#POLICY_NOT_ALLOWED}, answering or making a call from the HF\n         * device will NOT route the call audio to it.\n         *\n         * @return reference to the current object\n         * @hide\n         ",
    "links" : [ "android.bluetooth.BluetoothSinkAudioPolicy#POLICY_NOT_ALLOWED", "android.bluetooth.BluetoothSinkAudioPolicy#POLICY_ALLOWED" ]
  }, {
    "name" : "public Builder setActiveDevicePolicyAfterConnection(@AudioPolicyValues int connectingTimePolicy)",
    "returnType" : "Builder",
    "comment" : "\n         * Set during connection audio up policy.\n         *\n         * <p>This policy is used to determine the audio preference when the HF device connects with\n         * the AG device. That is, when the HF device gets connected, should the HF become active\n         * and get audio is decided by this policy. This also covers the case of during a call. If\n         * the HF connects with the AG during an ongoing call, should the call audio be routed to\n         * the HF will be decided by this policy.\n         *\n         * <p>If set to {@link BluetoothSinkAudioPolicy#POLICY_ALLOWED}, connecting HF during a call\n         * will route the call audio to it. If set to {@link\n         * BluetoothSinkAudioPolicy#POLICY_NOT_ALLOWED}, connecting HF during a call will NOT route\n         * the call audio to it.\n         *\n         * @return reference to the current object\n         * @hide\n         ",
    "links" : [ "android.bluetooth.BluetoothSinkAudioPolicy#POLICY_NOT_ALLOWED", "android.bluetooth.BluetoothSinkAudioPolicy#POLICY_ALLOWED" ]
  }, {
    "name" : "public Builder setInBandRingtonePolicy(@AudioPolicyValues int inBandRingtonePolicy)",
    "returnType" : "Builder",
    "comment" : "\n         * Set In band ringtone audio up policy.\n         *\n         * <p>This policy is used to determine the audio preference of the in band ringtone. That\n         * is, if there is an incoming call, should the inband ringtone audio be routed to the HF\n         * will be decided by this policy.\n         *\n         * <p>If set to {@link BluetoothSinkAudioPolicy#POLICY_ALLOWED}, there will be in band\n         * ringtone in the HF device during an incoming call. If set to {@link\n         * BluetoothSinkAudioPolicy#POLICY_NOT_ALLOWED}, there will NOT be in band ringtone in the\n         * HF device during an incoming call.\n         *\n         * @return reference to the current object\n         * @hide\n         ",
    "links" : [ "android.bluetooth.BluetoothSinkAudioPolicy#POLICY_NOT_ALLOWED", "android.bluetooth.BluetoothSinkAudioPolicy#POLICY_ALLOWED" ]
  }, {
    "name" : "public BluetoothSinkAudioPolicy build()",
    "returnType" : "BluetoothSinkAudioPolicy",
    "comment" : "\n         * Build {@link BluetoothSinkAudioPolicy}.\n         *\n         * @return new BluetoothSinkAudioPolicy object\n         * @hide\n         ",
    "links" : [ "android.bluetooth.BluetoothSinkAudioPolicy" ]
  } ],
  "methodNames" : [ "public Builder setCallEstablishPolicy(@AudioPolicyValues int callEstablishPolicy)", "public Builder setActiveDevicePolicyAfterConnection(@AudioPolicyValues int connectingTimePolicy)", "public Builder setInBandRingtonePolicy(@AudioPolicyValues int inBandRingtonePolicy)", "public BluetoothSinkAudioPolicy build()" ],
  "variableNames" : [ "mCallEstablishPolicy", "mConnectingTimePolicy", "mInBandRingtonePolicy" ]
}