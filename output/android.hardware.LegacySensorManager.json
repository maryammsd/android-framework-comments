{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/LegacySensorManager.java",
  "packageName" : "android.hardware",
  "className" : "LegacySensorManager",
  "comment" : "\n * Helper class for implementing the legacy sensor manager API.\n * @hide\n ",
  "variables" : [ {
    "name" : "sInitialized",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sWindowManager",
    "type" : "IWindowManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sRotation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSensorManager",
    "type" : "SensorManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLegacyListenersMap",
    "type" : "HashMap<SensorListener, LegacyListener>",
    "comment" : " List of legacy listeners.  Guarded by mLegacyListenersMap.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getSensors()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean registerListener(SensorListener listener, int sensors, int rate)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean registerLegacyListener(int legacyType, int type, SensorListener listener, int sensors, int rate)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterListener(SensorListener listener, int sensors)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void unregisterLegacyListener(int legacyType, int type, SensorListener listener, int sensors)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void onRotationChanged(int rotation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getRotation()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "sInitialized", "sWindowManager", "sRotation", "mSensorManager", "mLegacyListenersMap" ],
  "methodNames" : [ "public int getSensors()", "public boolean registerListener(SensorListener listener, int sensors, int rate)", "private boolean registerLegacyListener(int legacyType, int type, SensorListener listener, int sensors, int rate)", "public void unregisterListener(SensorListener listener, int sensors)", "private void unregisterLegacyListener(int legacyType, int type, SensorListener listener, int sensors)", " static void onRotationChanged(int rotation)", " static int getRotation()" ]
}