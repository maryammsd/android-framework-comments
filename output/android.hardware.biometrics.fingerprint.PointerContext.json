{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/biometrics/fingerprint/PointerContext.java",
  "packageName" : "android.hardware.biometrics.fingerprint",
  "className" : "PointerContext",
  "comment" : "\n * Additional context associated with a pointer event.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "pointerId",
    "type" : "int",
    "comment" : "\n   * Pointer ID obtained from MotionEvent#getPointerId or -1 if the ID cannot be obtained, for\n   * example if this event originated from a low-level wake-up gesture.\n   * \n   * See android.view.MotionEvent#getPointerId.\n   ",
    "links" : [ ]
  }, {
    "name" : "x",
    "type" : "float",
    "comment" : "\n   * The distance in pixels from the left edge of the display.\n   * \n   * This is obtained from MotionEvent#getRawX and translated relative to Surface#ROTATION_0.\n   * Meaning, this value is always reported as if the device is in its natural (e.g. portrait)\n   * orientation.\n   * \n   * See android.view.MotionEvent#getRawX.\n   ",
    "links" : [ ]
  }, {
    "name" : "y",
    "type" : "float",
    "comment" : "\n   * The distance in pixels from the top edge of the display.\n   * \n   * This is obtained from MotionEvent#getRawY and translated relative to Surface#ROTATION_0.\n   * Meaning, this value is always reported as if the device is in its natural (e.g. portrait)\n   * orientation.\n   * \n   * See android.view.MotionEvent#getRawY.\n   ",
    "links" : [ ]
  }, {
    "name" : "minor",
    "type" : "float",
    "comment" : " See android.view.MotionEvent#getTouchMinor. ",
    "links" : [ ]
  }, {
    "name" : "major",
    "type" : "float",
    "comment" : " See android.view.MotionEvent#getTouchMajor. ",
    "links" : [ ]
  }, {
    "name" : "orientation",
    "type" : "float",
    "comment" : " See android.view.MotionEvent#getOrientation. ",
    "links" : [ ]
  }, {
    "name" : "isAod",
    "type" : "boolean",
    "comment" : " Flag indicating that the display is in AOD mode. ",
    "links" : [ ]
  }, {
    "name" : "time",
    "type" : "long",
    "comment" : "\n   * The time when this event was created, in milliseconds.\n   * \n   * This is obtained from MotionEvent#getEventTime, which uses SystemClock.uptimeMillis() as\n   * the clock.\n   * \n   * See android.view.MotionEvent#getEventTime\n   ",
    "links" : [ ]
  }, {
    "name" : "gestureStart",
    "type" : "long",
    "comment" : "\n   * This event is part of some gesture. This is the time when MotionEvent#ACTION_DOWN was\n   * created for that gesture, in milliseconds.\n   * \n   * If this event is MotionEvent#ACTION_DOWN, then this value is equal to `time`.\n   * \n   * This is obtained from MotionEvent#getDownTime, which uses SystemClock.uptimeMillis() as\n   * the clock.\n   * \n   * See android.view.MotionEvent#getDownTime\n   ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "android.os.Parcelable.Creator<PointerContext>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final int getStability()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void writeToParcel(android.os.Parcel _aidl_parcel, int _aidl_flag)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void readFromParcel(android.os.Parcel _aidl_parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final int getStability()", "public final void writeToParcel(android.os.Parcel _aidl_parcel, int _aidl_flag)", "public final void readFromParcel(android.os.Parcel _aidl_parcel)", "public boolean equals(Object other)", "public int hashCode()", "public int describeContents()" ],
  "variableNames" : [ "pointerId", "x", "y", "minor", "major", "orientation", "isAod", "time", "gestureStart", "CREATOR" ]
}