{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/hotspot2/ProvisioningCallback.java",
  "packageName" : "android.net.wifi.hotspot2",
  "className" : "ProvisioningCallback",
  "comment" : "\n * Base class for provisioning callbacks. Should be extended by applications and set when calling\n * {@link WifiManager#startSubscriptionProvisioning(OsuProvider, ProvisioningCallback, Handler)}.\n *\n * @hide\n ",
  "links" : [ "android.net.wifi.WifiManager#startSubscriptionProvisioning(OsuProvider" ],
  "variables" : [ {
    "name" : "OSU_FAILURE_AP_CONNECTION",
    "type" : "int",
    "comment" : "\n     * The reason code for Provisioning Failure due to connection failure to OSU AP.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_SERVER_URL_INVALID",
    "type" : "int",
    "comment" : "\n     * The reason code for invalid server URL address.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_SERVER_CONNECTION",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure due to connection failure to the server.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_SERVER_VALIDATION",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure due to invalid server certificate.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_SERVICE_PROVIDER_VERIFICATION",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure due to invalid service provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_PROVISIONING_ABORTED",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when a provisioning flow is aborted.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_PROVISIONING_NOT_AVAILABLE",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when a provisioning flow is not possible.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_INVALID_URL_FORMAT_FOR_OSU",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure due to invalid web url format for an OSU web page.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_UNEXPECTED_COMMAND_TYPE",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when a command received is not the expected command\n     * type.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_UNEXPECTED_SOAP_MESSAGE_TYPE",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when a SOAP message is not the expected message\n     * type.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_SOAP_MESSAGE_EXCHANGE",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when a SOAP message exchange fails.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_START_REDIRECT_LISTENER",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when a redirect listener fails to start.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_TIMED_OUT_REDIRECT_LISTENER",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when a redirect listener timed out to receive a HTTP\n     * redirect response.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_NO_OSU_ACTIVITY_FOUND",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when there is no OSU activity to listen to\n     * {@link WifiManager#ACTION_PASSPOINT_LAUNCH_OSU_VIEW} intent.\n     ",
    "links" : [ "android.net.wifi.WifiManager#ACTION_PASSPOINT_LAUNCH_OSU_VIEW" ]
  }, {
    "name" : "OSU_FAILURE_UNEXPECTED_SOAP_MESSAGE_STATUS",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when the status of a SOAP message is not the\n     * expected message status.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_NO_PPS_MO",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when there is no PPS MO.\n     * MO.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_NO_AAA_SERVER_TRUST_ROOT_NODE",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when there is no AAAServerTrustRoot node in a PPS\n     * MO.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_NO_REMEDIATION_SERVER_TRUST_ROOT_NODE",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when there is no TrustRoot node for remediation\n     * server in a PPS MO.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_NO_POLICY_SERVER_TRUST_ROOT_NODE",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when there is no TrustRoot node for policy server in\n     * a PPS MO.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_RETRIEVE_TRUST_ROOT_CERTIFICATES",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when failing to retrieve trust root certificates\n     * used for validating server certificate for AAA, Remediation and Policy server.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_NO_AAA_TRUST_ROOT_CERTIFICATE",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when there is no trust root certificate for AAA\n     * server.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_FAILURE_ADD_PASSPOINT_CONFIGURATION",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when a {@link PasspointConfiguration} is failed to\n     * install.\n     ",
    "links" : [ "android.net.wifi.hotspot2.PasspointConfiguration" ]
  }, {
    "name" : "OSU_FAILURE_OSU_PROVIDER_NOT_FOUND",
    "type" : "int",
    "comment" : "\n     * The reason code for provisioning failure when an {@link OsuProvider} is not found for\n     * provisioning.\n     ",
    "links" : [ "android.net.wifi.hotspot2.OsuProvider" ]
  }, {
    "name" : "OSU_STATUS_AP_CONNECTING",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate connecting to OSU AP\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_AP_CONNECTED",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate the OSU AP is connected.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_SERVER_CONNECTING",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate connecting to the server.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_SERVER_VALIDATED",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate the server certificate is validated.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_SERVER_CONNECTED",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate the server is connected\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_INIT_SOAP_EXCHANGE",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate starting the first SOAP exchange.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_WAITING_FOR_REDIRECT_RESPONSE",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate waiting for a HTTP redirect response.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_REDIRECT_RESPONSE_RECEIVED",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate a HTTP redirect response is received.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_SECOND_SOAP_EXCHANGE",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate starting the second SOAP exchange.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_THIRD_SOAP_EXCHANGE",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate starting the third SOAP exchange.\n     ",
    "links" : [ ]
  }, {
    "name" : "OSU_STATUS_RETRIEVING_TRUST_ROOT_CERTS",
    "type" : "int",
    "comment" : "\n     * The status code for provisioning flow to indicate starting a step retrieving trust root\n     * certs.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onProvisioningFailure(@OsuFailure int status)",
    "returnType" : "void",
    "comment" : "\n     * Provisioning status for OSU failure\n     *\n     * @param status indicates error condition\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onProvisioningStatus(@OsuStatus int status)",
    "returnType" : "void",
    "comment" : "\n     * Provisioning status when OSU is in progress\n     *\n     * @param status indicates status of OSU flow\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onProvisioningComplete()",
    "returnType" : "void",
    "comment" : "\n     * Provisioning complete when provisioning/remediation flow completes\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onProvisioningFailure(@OsuFailure int status)", "public abstract void onProvisioningStatus(@OsuStatus int status)", "public abstract void onProvisioningComplete()" ],
  "variableNames" : [ "OSU_FAILURE_AP_CONNECTION", "OSU_FAILURE_SERVER_URL_INVALID", "OSU_FAILURE_SERVER_CONNECTION", "OSU_FAILURE_SERVER_VALIDATION", "OSU_FAILURE_SERVICE_PROVIDER_VERIFICATION", "OSU_FAILURE_PROVISIONING_ABORTED", "OSU_FAILURE_PROVISIONING_NOT_AVAILABLE", "OSU_FAILURE_INVALID_URL_FORMAT_FOR_OSU", "OSU_FAILURE_UNEXPECTED_COMMAND_TYPE", "OSU_FAILURE_UNEXPECTED_SOAP_MESSAGE_TYPE", "OSU_FAILURE_SOAP_MESSAGE_EXCHANGE", "OSU_FAILURE_START_REDIRECT_LISTENER", "OSU_FAILURE_TIMED_OUT_REDIRECT_LISTENER", "OSU_FAILURE_NO_OSU_ACTIVITY_FOUND", "OSU_FAILURE_UNEXPECTED_SOAP_MESSAGE_STATUS", "OSU_FAILURE_NO_PPS_MO", "OSU_FAILURE_NO_AAA_SERVER_TRUST_ROOT_NODE", "OSU_FAILURE_NO_REMEDIATION_SERVER_TRUST_ROOT_NODE", "OSU_FAILURE_NO_POLICY_SERVER_TRUST_ROOT_NODE", "OSU_FAILURE_RETRIEVE_TRUST_ROOT_CERTIFICATES", "OSU_FAILURE_NO_AAA_TRUST_ROOT_CERTIFICATE", "OSU_FAILURE_ADD_PASSPOINT_CONFIGURATION", "OSU_FAILURE_OSU_PROVIDER_NOT_FOUND", "OSU_STATUS_AP_CONNECTING", "OSU_STATUS_AP_CONNECTED", "OSU_STATUS_SERVER_CONNECTING", "OSU_STATUS_SERVER_VALIDATED", "OSU_STATUS_SERVER_CONNECTED", "OSU_STATUS_INIT_SOAP_EXCHANGE", "OSU_STATUS_WAITING_FOR_REDIRECT_RESPONSE", "OSU_STATUS_REDIRECT_RESPONSE_RECEIVED", "OSU_STATUS_SECOND_SOAP_EXCHANGE", "OSU_STATUS_THIRD_SOAP_EXCHANGE", "OSU_STATUS_RETRIEVING_TRUST_ROOT_CERTS" ]
}