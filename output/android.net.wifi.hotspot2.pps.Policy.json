{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/hotspot2/pps/Policy.java",
  "packageName" : "android.net.wifi.hotspot2.pps",
  "className" : "Policy",
  "comment" : "\n * Class representing Policy subtree in PerProviderSubscription (PPS)\n * Management Object (MO) tree.\n *\n * The Policy specifies additional criteria for Passpoint network selections, such as preferred\n * roaming partner, minimum backhaul bandwidth, and etc. It also provides the meta data for\n * updating the policy.\n *\n * For more info, refer to Hotspot 2.0 PPS MO defined in section 9.1 of the Hotspot 2.0\n * Release 2 Technical Specification.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_EXCLUSION_SSIDS",
    "type" : "int",
    "comment" : "\n     * Maximum number of SSIDs in the exclusion list.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_SSID_BYTES",
    "type" : "int",
    "comment" : "\n     * Maximum byte for SSID.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_PORT_STRING_BYTES",
    "type" : "int",
    "comment" : "\n     * Maximum bytes for port string in {@link #requiredProtoPortMap}.\n     ",
    "links" : [ "#requiredProtoPortMap" ]
  }, {
    "name" : "NULL_VALUE",
    "type" : "int",
    "comment" : "\n     * Integer value used for indicating null value in the Parcel.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMinHomeDownlinkBandwidth",
    "type" : "long",
    "comment" : "\n     * Minimum available downlink/uplink bandwidth (in kilobits per second) required when\n     * selecting a network from home providers.\n     *\n     * The bandwidth is calculated as the LinkSpeed * (1 – LinkLoad/255), where LinkSpeed\n     * and LinkLoad parameters are drawn from the WAN Metrics ANQP element at that hotspot.\n     *\n     * Using Long.MIN_VALUE to indicate unset value.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMinHomeUplinkBandwidth",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinRoamingDownlinkBandwidth",
    "type" : "long",
    "comment" : "\n     * Minimum available downlink/uplink bandwidth (in kilobits per second) required when\n     * selecting a network from roaming providers.\n     *\n     * The bandwidth is calculated as the LinkSpeed * (1 – LinkLoad/255), where LinkSpeed\n     * and LinkLoad parameters are drawn from the WAN Metrics ANQP element at that hotspot.\n     *\n     * Using Long.MIN_VALUE to indicate unset value.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMinRoamingUplinkBandwidth",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExcludedSsidList",
    "type" : "String[]",
    "comment" : "\n     * List of SSIDs that are not preferred by the Home SP.\n     ",
    "links" : [ ]
  }, {
    "name" : "mRequiredProtoPortMap",
    "type" : "Map<Integer, String>",
    "comment" : "\n     * List of IP protocol and port number required by one or more operator supported application.\n     * The port string contained one or more port numbers delimited by \",\".\n     ",
    "links" : [ ]
  }, {
    "name" : "mMaximumBssLoadValue",
    "type" : "int",
    "comment" : "\n     * This specifies the maximum acceptable BSS load policy.  This is used to prevent device\n     * from joining an AP whose channel is overly congested with traffic.\n     * Using Integer.MIN_VALUE to indicate unset value.\n     ",
    "links" : [ ]
  }, {
    "name" : "mPreferredRoamingPartnerList",
    "type" : "List<RoamingPartner>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPolicyUpdate",
    "type" : "UpdateParameter",
    "comment" : "\n     * Meta data used for policy update.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Policy>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setMinHomeDownlinkBandwidth(long minHomeDownlinkBandwidth)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getMinHomeDownlinkBandwidth()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMinHomeUplinkBandwidth(long minHomeUplinkBandwidth)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getMinHomeUplinkBandwidth()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMinRoamingDownlinkBandwidth(long minRoamingDownlinkBandwidth)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getMinRoamingDownlinkBandwidth()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMinRoamingUplinkBandwidth(long minRoamingUplinkBandwidth)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getMinRoamingUplinkBandwidth()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setExcludedSsidList(String[] excludedSsidList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String[] getExcludedSsidList()",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRequiredProtoPortMap(Map<Integer, String> requiredProtoPortMap)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Map<Integer, String> getRequiredProtoPortMap()",
    "returnType" : "Map<Integer, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMaximumBssLoadValue(int maximumBssLoadValue)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaximumBssLoadValue()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPreferredRoamingPartnerList(List<RoamingPartner> partnerList)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<RoamingPartner> getPreferredRoamingPartnerList()",
    "returnType" : "List<RoamingPartner>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPolicyUpdate(UpdateParameter policyUpdate)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public UpdateParameter getPolicyUpdate()",
    "returnType" : "UpdateParameter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object thatObject)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean validate()",
    "returnType" : "boolean",
    "comment" : "\n     * Validate Policy data.\n     *\n     * @return true on success\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void writeProtoPortMap(Parcel dest, Map<Integer, String> protoPortMap)",
    "returnType" : "void",
    "comment" : "\n     * Helper function for writing IP Protocol to Port Number map to a Parcel.\n     *\n     * @param dest The Parcel to write to\n     * @param protoPortMap The map to write\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void writeRoamingPartnerList(Parcel dest, int flags, List<RoamingPartner> partnerList)",
    "returnType" : "void",
    "comment" : "\n     * Helper function for writing roaming partner list to a Parcel.\n     *\n     * @param dest The Parcel to write to\n     * @param flags The flag about how the object should be written\n     * @param partnerList The partner list to write\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setMinHomeDownlinkBandwidth(long minHomeDownlinkBandwidth)", "public long getMinHomeDownlinkBandwidth()", "public void setMinHomeUplinkBandwidth(long minHomeUplinkBandwidth)", "public long getMinHomeUplinkBandwidth()", "public void setMinRoamingDownlinkBandwidth(long minRoamingDownlinkBandwidth)", "public long getMinRoamingDownlinkBandwidth()", "public void setMinRoamingUplinkBandwidth(long minRoamingUplinkBandwidth)", "public long getMinRoamingUplinkBandwidth()", "public void setExcludedSsidList(String[] excludedSsidList)", "public String[] getExcludedSsidList()", "public void setRequiredProtoPortMap(Map<Integer, String> requiredProtoPortMap)", "public Map<Integer, String> getRequiredProtoPortMap()", "public void setMaximumBssLoadValue(int maximumBssLoadValue)", "public int getMaximumBssLoadValue()", "public void setPreferredRoamingPartnerList(List<RoamingPartner> partnerList)", "public List<RoamingPartner> getPreferredRoamingPartnerList()", "public void setPolicyUpdate(UpdateParameter policyUpdate)", "public UpdateParameter getPolicyUpdate()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(Object thatObject)", "public int hashCode()", "public String toString()", "public boolean validate()", "private static void writeProtoPortMap(Parcel dest, Map<Integer, String> protoPortMap)", "private static void writeRoamingPartnerList(Parcel dest, int flags, List<RoamingPartner> partnerList)" ],
  "variableNames" : [ "TAG", "MAX_EXCLUSION_SSIDS", "MAX_SSID_BYTES", "MAX_PORT_STRING_BYTES", "NULL_VALUE", "mMinHomeDownlinkBandwidth", "mMinHomeUplinkBandwidth", "mMinRoamingDownlinkBandwidth", "mMinRoamingUplinkBandwidth", "mExcludedSsidList", "mRequiredProtoPortMap", "mMaximumBssLoadValue", "mPreferredRoamingPartnerList", "mPolicyUpdate", "CREATOR" ]
}