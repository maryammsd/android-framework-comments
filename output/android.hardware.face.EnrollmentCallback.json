{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/face/FaceManager.java",
  "packageName" : "android.hardware.face",
  "className" : "EnrollmentCallback",
  "comment" : "\n     * Callback structure provided to {@link FaceManager#enroll(long,\n     * EnrollmentCallback, CancellationSignal, int). Users of {@link #FaceAuthenticationManager()}\n     * must provide an implementation of this to {@link FaceManager#enroll(long,\n     * CancellationSignal, int, EnrollmentCallback) for listening to face enrollment events.\n     *\n     * @hide\n     ",
  "links" : [ "android.hardware.face.FaceManager#enroll(long", "#FaceAuthenticationManager()" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onEnrollmentError(int errMsgId, CharSequence errString)",
    "returnType" : "void",
    "comment" : "\n         * Called when an unrecoverable error has been encountered and the operation is complete.\n         * No further callbacks will be made on this object.\n         *\n         * @param errMsgId  An integer identifying the error message\n         * @param errString A human-readable error string that can be shown in UI\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onEnrollmentHelp(int helpMsgId, CharSequence helpString)",
    "returnType" : "void",
    "comment" : "\n         * Called when a recoverable error has been encountered during enrollment. The help\n         * string is provided to give the user guidance for what went wrong, such as\n         * \"Image too dark, uncover light source\" or what they need to do next, such as\n         * \"Rotate face up / down.\"\n         *\n         * @param helpMsgId  An integer identifying the error message\n         * @param helpString A human-readable string that can be shown in UI\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onEnrollmentFrame(int helpCode, @Nullable CharSequence helpMessage, @Nullable FaceEnrollCell cell, @FaceEnrollStages.FaceEnrollStage int stage, float pan, float tilt, float distance)",
    "returnType" : "void",
    "comment" : "\n         * Called each time a single frame is captured during enrollment.\n         *\n         * <p>For older, non-AIDL implementations, only {@code helpCode} and {@code helpMessage} are\n         * supported. Sensible default values will be provided for all other arguments.\n         *\n         * @param helpCode    An integer identifying the capture status for this frame.\n         * @param helpMessage A human-readable help string that can be shown in UI.\n         * @param cell        The cell captured during this frame of enrollment, if any.\n         * @param stage       An integer representing the current stage of enrollment.\n         * @param pan         The horizontal pan of the detected face. Values in the range [-1, 1]\n         *                    indicate a good capture.\n         * @param tilt        The vertical tilt of the detected face. Values in the range [-1, 1]\n         *                    indicate a good capture.\n         * @param distance    The distance of the detected face from the device. Values in\n         *                    the range [-1, 1] indicate a good capture.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onEnrollmentProgress(int remaining)",
    "returnType" : "void",
    "comment" : "\n         * Called as each enrollment step progresses. Enrollment is considered complete when\n         * remaining reaches 0. This function will not be called if enrollment fails. See\n         * {@link EnrollmentCallback#onEnrollmentError(int, CharSequence)}\n         *\n         * @param remaining The number of remaining steps\n         ",
    "links" : [ "#onEnrollmentError(int" ]
  } ],
  "methodNames" : [ "public void onEnrollmentError(int errMsgId, CharSequence errString)", "public void onEnrollmentHelp(int helpMsgId, CharSequence helpString)", "public void onEnrollmentFrame(int helpCode, @Nullable CharSequence helpMessage, @Nullable FaceEnrollCell cell, @FaceEnrollStages.FaceEnrollStage int stage, float pan, float tilt, float distance)", "public void onEnrollmentProgress(int remaining)" ],
  "variableNames" : [ ]
}