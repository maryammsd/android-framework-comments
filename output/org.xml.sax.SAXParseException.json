{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/xml/sax/SAXParseException.java",
  "packageName" : "org.xml.sax",
  "className" : "SAXParseException",
  "comment" : "\n * Encapsulate an XML parse error or warning.\n *\n * <blockquote>\n * <em>This module, both source code and documentation, is in the\n * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n * See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n * for further information.\n * </blockquote>\n *\n * <p>This exception may include information for locating the error\n * in the original XML document, as if it came from a {@link Locator}\n * object.  Note that although the application\n * will receive a SAXParseException as the argument to the handlers\n * in the {@link org.xml.sax.ErrorHandler ErrorHandler} interface,\n * the application is not actually required to throw the exception;\n * instead, it can simply read the information in it and take a\n * different action.</p>\n *\n * <p>Since this exception is a subclass of {@link org.xml.sax.SAXException\n * SAXException}, it inherits the ability to wrap another exception.</p>\n *\n * @since SAX 1.0\n * @author David Megginson\n * @version 2.0.1 (sax2r2)\n * @see org.xml.sax.SAXException\n * @see org.xml.sax.Locator\n * @see org.xml.sax.ErrorHandler\n ",
  "links" : [ "org.xml.sax.ErrorHandler", "org.xml.sax.SAXExceptionSAXException", "org.xml.sax.Locator" ],
  "variables" : [ {
    "name" : "publicId",
    "type" : "String",
    "comment" : "\n     * @serial The public identifier, or null.\n     * @see #getPublicId\n     ",
    "links" : [ ]
  }, {
    "name" : "systemId",
    "type" : "String",
    "comment" : "\n     * @serial The system identifier, or null.\n     * @see #getSystemId\n     ",
    "links" : [ ]
  }, {
    "name" : "lineNumber",
    "type" : "int",
    "comment" : "\n     * @serial The line number, or -1.\n     * @see #getLineNumber\n     ",
    "links" : [ ]
  }, {
    "name" : "columnNumber",
    "type" : "int",
    "comment" : "\n     * @serial The column number, or -1.\n     * @see #getColumnNumber\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void init(String publicId, String systemId, int lineNumber, int columnNumber)",
    "returnType" : "void",
    "comment" : "\n     * Internal initialization method.\n     *\n     * @param publicId The public identifier of the entity which generated the exception,\n     *        or null.\n     * @param systemId The system identifier of the entity which generated the exception,\n     *        or null.\n     * @param lineNumber The line number of the error, or -1.\n     * @param columnNumber The column number of the error, or -1.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPublicId()",
    "returnType" : "String",
    "comment" : "\n     * Get the public identifier of the entity where the exception occurred.\n     *\n     * @return A string containing the public identifier, or null\n     *         if none is available.\n     * @see org.xml.sax.Locator#getPublicId\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSystemId()",
    "returnType" : "String",
    "comment" : "\n     * Get the system identifier of the entity where the exception occurred.\n     *\n     * <p>If the system identifier is a URL, it will have been resolved\n     * fully.</p>\n     *\n     * @return A string containing the system identifier, or null\n     *         if none is available.\n     * @see org.xml.sax.Locator#getSystemId\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLineNumber()",
    "returnType" : "int",
    "comment" : "\n     * The line number of the end of the text where the exception occurred.\n     *\n     * <p>The first line is line 1.</p>\n     *\n     * @return An integer representing the line number, or -1\n     *         if none is available.\n     * @see org.xml.sax.Locator#getLineNumber\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getColumnNumber()",
    "returnType" : "int",
    "comment" : "\n     * The column number of the end of the text where the exception occurred.\n     *\n     * <p>The first column in a line is position 1.</p>\n     *\n     * @return An integer representing the column number, or -1\n     *         if none is available.\n     * @see org.xml.sax.Locator#getColumnNumber\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void init(String publicId, String systemId, int lineNumber, int columnNumber)", "public String getPublicId()", "public String getSystemId()", "public int getLineNumber()", "public int getColumnNumber()" ],
  "variableNames" : [ "publicId", "systemId", "lineNumber", "columnNumber" ]
}