{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/templates/ElemFallback.java",
  "packageName" : "org.apache.xalan.templates",
  "className" : "ElemFallback",
  "comment" : "\n * Implement xsl:fallback.\n * <pre>\n * <!ELEMENT xsl:fallback %template;>\n * <!ATTLIST xsl:fallback %space-att;>\n * </pre>\n * @see <a href=\"http://www.w3.org/TR/xslt#fallback\">fallback in XSLT Specification</a>\n * @xsl.usage advanced\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getXSLToken()",
    "returnType" : "int",
    "comment" : "\n   * Get an int constant identifying the type of element.\n   * @see org.apache.xalan.templates.Constants\n   *\n   * @return The token ID for this element\n   ",
    "links" : [ ]
  }, {
    "name" : "public String getNodeName()",
    "returnType" : "String",
    "comment" : "\n   * Return the node name.\n   *\n   * @return The Element's name\n   ",
    "links" : [ ]
  }, {
    "name" : "public void execute(TransformerImpl transformer) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * This is the normal call when xsl:fallback is instantiated.\n   * In accordance with the XSLT 1.0 Recommendation, chapter 15,\n   * \"Normally, instantiating an xsl:fallback element does nothing.\"\n   *\n   * @param transformer non-null reference to the the current transform-time state.\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public void executeFallback(TransformerImpl transformer) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Execute the fallback elements.  This must be explicitly called to\n   * instantiate the content of an xsl:fallback element.\n   * When an XSLT transformer performs fallback for an instruction\n   * element, if the instruction element has one or more xsl:fallback\n   * children, then the content of each of the xsl:fallback children\n   * must be instantiated in sequence; otherwise, an error must\n   * be signaled. The content of an xsl:fallback element is a template.\n   *\n   * @param transformer non-null reference to the the current transform-time state.\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getXSLToken()", "public String getNodeName()", "public void execute(TransformerImpl transformer) throws TransformerException", "public void executeFallback(TransformerImpl transformer) throws TransformerException" ],
  "variableNames" : [ "serialVersionUID" ]
}