{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/BatteryStats.java",
  "packageName" : "android.os",
  "className" : "Proc",
  "comment" : "\n         * The statistics associated with a particular process.\n         ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract boolean isActive()",
    "returnType" : "boolean",
    "comment" : "\n             * Returns true if this process is still active in the battery stats.\n             ",
    "links" : [ ]
  }, {
    "name" : "public abstract long getUserTime(int which)",
    "returnType" : "long",
    "comment" : "\n             * Returns the total time (in milliseconds) spent executing in user code.\n             *\n             * @param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.\n             ",
    "links" : [ ]
  }, {
    "name" : "public abstract long getSystemTime(int which)",
    "returnType" : "long",
    "comment" : "\n             * Returns the total time (in milliseconds) spent executing in system code.\n             *\n             * @param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.\n             ",
    "links" : [ ]
  }, {
    "name" : "public abstract int getStarts(int which)",
    "returnType" : "int",
    "comment" : "\n             * Returns the number of times the process has been started.\n             *\n             * @param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.\n             ",
    "links" : [ ]
  }, {
    "name" : "public abstract int getNumCrashes(int which)",
    "returnType" : "int",
    "comment" : "\n             * Returns the number of times the process has crashed.\n             *\n             * @param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.\n             ",
    "links" : [ ]
  }, {
    "name" : "public abstract int getNumAnrs(int which)",
    "returnType" : "int",
    "comment" : "\n             * Returns the number of times the process has ANRed.\n             *\n             * @param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.\n             ",
    "links" : [ ]
  }, {
    "name" : "public abstract long getForegroundTime(int which)",
    "returnType" : "long",
    "comment" : "\n             * Returns the cpu time (milliseconds) spent while the process was in the foreground.\n             * @param which one of STATS_SINCE_CHARGED, STATS_SINCE_UNPLUGGED, or STATS_CURRENT.\n             * @return foreground cpu time in microseconds\n             ",
    "links" : [ ]
  }, {
    "name" : "public abstract int countExcessivePowers()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ExcessivePower getExcessivePower(int i)",
    "returnType" : "ExcessivePower",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract boolean isActive()", "public abstract long getUserTime(int which)", "public abstract long getSystemTime(int which)", "public abstract int getStarts(int which)", "public abstract int getNumCrashes(int which)", "public abstract int getNumAnrs(int which)", "public abstract long getForegroundTime(int which)", "public abstract int countExcessivePowers()", "public abstract ExcessivePower getExcessivePower(int i)" ],
  "variableNames" : [ ]
}