{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inputmethod/IAccessibilityInputMethodSessionInvoker.java",
  "packageName" : "android.view.inputmethod",
  "className" : "IAccessibilityInputMethodSessionInvoker",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSession",
    "type" : "IAccessibilityInputMethodSession",
    "comment" : "\n     * The actual instance of the method to make calls on it.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCustomHandler",
    "type" : "Handler",
    "comment" : "\n     * An optional {@link Handler} to dispatch {@link IAccessibilityInputMethodSession} method\n     * invocations to a background thread to emulate async (one-way) {@link Binder} call.\n     *\n     * {@code null} if {@code Binder.isProxy(mSession)} is {@code true}.\n     ",
    "links" : [ "android.os.Binder", "com.android.internal.inputmethod.IAccessibilityInputMethodSession", "android.os.Handler" ]
  }, {
    "name" : "sAsyncBinderEmulationHandlerLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sAsyncBinderEmulationHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static IAccessibilityInputMethodSessionInvoker createOrNull(@NonNull IAccessibilityInputMethodSession session)",
    "returnType" : "IAccessibilityInputMethodSessionInvoker",
    "comment" : "\n     * Create a {@link IAccessibilityInputMethodSessionInvoker} instance if applicable.\n     *\n     * @param session {@link IAccessibilityInputMethodSession} object to be wrapped.\n     * @return an instance of {@link IAccessibilityInputMethodSessionInvoker} if\n     *         {@code inputMethodSession} is not {@code null}. {@code null} otherwise.\n     ",
    "links" : [ "com.android.internal.inputmethod.IAccessibilityInputMethodSession", "android.view.inputmethod.IAccessibilityInputMethodSessionInvoker" ]
  }, {
    "name" : " void finishInput()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void finishInputInternal()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void updateSelection(int oldSelStart, int oldSelEnd, int selStart, int selEnd, int candidatesStart, int candidatesEnd)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateSelectionInternal(int oldSelStart, int oldSelEnd, int selStart, int selEnd, int candidatesStart, int candidatesEnd)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void invalidateInput(EditorInfo editorInfo, IRemoteAccessibilityInputConnection connection, int sessionId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void invalidateInputInternal(EditorInfo editorInfo, IRemoteAccessibilityInputConnection connection, int sessionId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static IAccessibilityInputMethodSessionInvoker createOrNull(@NonNull IAccessibilityInputMethodSession session)", " void finishInput()", "private void finishInputInternal()", " void updateSelection(int oldSelStart, int oldSelEnd, int selStart, int selEnd, int candidatesStart, int candidatesEnd)", "private void updateSelectionInternal(int oldSelStart, int oldSelEnd, int selStart, int selEnd, int candidatesStart, int candidatesEnd)", " void invalidateInput(EditorInfo editorInfo, IRemoteAccessibilityInputConnection connection, int sessionId)", "private void invalidateInputInternal(EditorInfo editorInfo, IRemoteAccessibilityInputConnection connection, int sessionId)" ],
  "variableNames" : [ "TAG", "mSession", "mCustomHandler", "sAsyncBinderEmulationHandlerLock", "sAsyncBinderEmulationHandler" ]
}