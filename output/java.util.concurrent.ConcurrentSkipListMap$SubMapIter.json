{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/ConcurrentSkipListMap.java",
  "packageName" : "java.util.concurrent",
  "className" : "SubMapIter",
  "comment" : "\n         * Variant of main Iter class to traverse through submaps.\n         * Also serves as back-up Spliterator for views.\n         ",
  "links" : [ ],
  "variables" : [ {
    "name" : "lastReturned",
    "type" : "Node<K, V>",
    "comment" : " the last node returned by next() ",
    "links" : [ ]
  }, {
    "name" : "next",
    "type" : "Node<K, V>",
    "comment" : " the next node to return from next(); ",
    "links" : [ ]
  }, {
    "name" : "nextValue",
    "type" : "V",
    "comment" : " Cache of next value field to maintain weak consistency ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final boolean hasNext()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final void advance()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void ascend()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void descend()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void remove()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Spliterator<T> trySplit()",
    "returnType" : "Spliterator<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean tryAdvance(Consumer<? super T> action)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forEachRemaining(Consumer<? super T> action)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long estimateSize()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final boolean hasNext()", " final void advance()", "private void ascend()", "private void descend()", "public void remove()", "public Spliterator<T> trySplit()", "public boolean tryAdvance(Consumer<? super T> action)", "public void forEachRemaining(Consumer<? super T> action)", "public long estimateSize()" ],
  "variableNames" : [ "lastReturned", "next", "nextValue" ]
}