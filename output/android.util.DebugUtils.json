{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/util/DebugUtils.java",
  "packageName" : "android.util",
  "className" : "DebugUtils",
  "comment" : "\n * <p>Various utilities for debugging and logging.</p>\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static boolean isObjectSelected(Object object)",
    "returnType" : "boolean",
    "comment" : "\n     * <p>Filters objects against the <code>ANDROID_OBJECT_FILTER</code>\n     * environment variable. This environment variable can filter objects\n     * based on their class name and attribute values.</p>\n     *\n     * <p>Here is the syntax for <code>ANDROID_OBJECT_FILTER</code>:</p>\n     *\n     * <p><code>ClassName@attribute1=value1@attribute2=value2...</code></p>\n     *\n     * <p>Examples:</p>\n     * <ul>\n     * <li>Select TextView instances: <code>TextView</code></li>\n     * <li>Select TextView instances of text \"Loading\" and bottom offset of 22:\n     * <code>TextView@text=Loading.*@bottom=22</code></li>\n     * </ul>\n     *\n     * <p>The class name and the values are regular expressions.</p>\n     *\n     * <p>This class is useful for debugging and logging purpose:</p>\n     * <pre>\n     * if (DEBUG) {\n     *   if (DebugUtils.isObjectSelected(childView) && LOGV_ENABLED) {\n     *     Log.v(TAG, \"Object \" + childView + \" logged!\");\n     *   }\n     * }\n     * </pre>\n     *\n     * <p><strong>NOTE</strong>: This method is very expensive as it relies\n     * heavily on regular expressions and reflection. Calls to this method\n     * should always be stripped out of the release binaries and avoided\n     * as much as possible in debug mode.</p>\n     *\n     * @param object any object to match against the ANDROID_OBJECT_FILTER\n     *        environement variable\n     * @return true if object is selected by the ANDROID_OBJECT_FILTER\n     *         environment variable, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void buildShortClassTag(Object cls, StringBuilder out)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static void printSizeValue(PrintWriter pw, long number)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static String sizeValueToString(long number, StringBuilder outBuilder)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static String valueToString(Class<?> clazz, String prefix, int value)",
    "returnType" : "String",
    "comment" : "\n     * Use prefixed constants (static final values) on given class to turn value\n     * into human-readable string.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String flagsToString(Class<?> clazz, String prefix, long flags)",
    "returnType" : "String",
    "comment" : "\n     * Use prefixed constants (static final values) on given class to turn flags\n     * into human-readable string.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static long getFieldValue(Field field)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String constantToString(Class<?> clazz, String prefix, int value)",
    "returnType" : "String",
    "comment" : "\n     * Gets human-readable representation of constants (static final values).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String constNameWithoutPrefix(String prefix, Field field)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static List<String> callersWithin(Class<?> cls, int offset)",
    "returnType" : "List<String>",
    "comment" : "\n     * Returns method names from current stack trace, where {@link StackTraceElement#getClass}\n     * starts with the given classes name\n     *\n     * @hide\n     ",
    "links" : [ "#getClass" ]
  } ],
  "methodNames" : [ "public static boolean isObjectSelected(Object object)", "public static void buildShortClassTag(Object cls, StringBuilder out)", "public static void printSizeValue(PrintWriter pw, long number)", "public static String sizeValueToString(long number, StringBuilder outBuilder)", "public static String valueToString(Class<?> clazz, String prefix, int value)", "public static String flagsToString(Class<?> clazz, String prefix, long flags)", "private static long getFieldValue(Field field)", "public static String constantToString(Class<?> clazz, String prefix, int value)", "private static String constNameWithoutPrefix(String prefix, Field field)", "public static List<String> callersWithin(Class<?> cls, int offset)" ],
  "variableNames" : [ ]
}