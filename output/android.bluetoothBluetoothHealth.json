{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/bluetooth/BluetoothHealth.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothHealth",
  "comment" : "\n * Public API for Bluetooth Health Profile.\n *\n * <p>BluetoothHealth is a proxy object for controlling the Bluetooth\n * Service via IPC.\n *\n * <p> How to connect to a health device which is acting in the source role.\n * <li> Use {@link BluetoothAdapter#getProfileProxy} to get\n * the BluetoothHealth proxy object. </li>\n * <li> Create an {@link BluetoothHealth} callback and call\n * {@link #registerSinkAppConfiguration} to register an application\n * configuration </li>\n * <li> Pair with the remote device. This currently needs to be done manually\n * from Bluetooth Settings </li>\n * <li> Connect to a health device using {@link #connectChannelToSource}. Some\n * devices will connect the channel automatically. The {@link BluetoothHealth}\n * callback will inform the application of channel state change. </li>\n * <li> Use the file descriptor provided with a connected channel to read and\n * write data to the health channel. </li>\n * <li> The received data needs to be interpreted using a health manager which\n * implements the IEEE 11073-xxxxx specifications.\n * <li> When done, close the health channel by calling {@link #disconnectChannel}\n * and unregister the application configuration calling\n * {@link #unregisterAppConfiguration}\n *\n * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New apps\n * should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n * {@link BluetoothDevice#createL2capChannel(int)}\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SOURCE_ROLE",
    "type" : "int",
    "comment" : "\n     * Health Profile Source Role - the health device.\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "SINK_ROLE",
    "type" : "int",
    "comment" : "\n     * Health Profile Sink Role the device talking to the health device.\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "CHANNEL_TYPE_RELIABLE",
    "type" : "int",
    "comment" : "\n     * Health Profile - Channel Type used - Reliable\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "CHANNEL_TYPE_STREAMING",
    "type" : "int",
    "comment" : "\n     * Health Profile - Channel Type used - Streaming\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "STATE_CHANNEL_DISCONNECTED",
    "type" : "int",
    "comment" : " Health Channel Connection State - Disconnected\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "STATE_CHANNEL_CONNECTING",
    "type" : "int",
    "comment" : " Health Channel Connection State - Connecting\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "STATE_CHANNEL_CONNECTED",
    "type" : "int",
    "comment" : " Health Channel Connection State - Connected\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "STATE_CHANNEL_DISCONNECTING",
    "type" : "int",
    "comment" : " Health Channel Connection State - Disconnecting\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "APP_CONFIG_REGISTRATION_SUCCESS",
    "type" : "int",
    "comment" : " Health App Configuration registration success\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "APP_CONFIG_REGISTRATION_FAILURE",
    "type" : "int",
    "comment" : " Health App Configuration registration failure\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "APP_CONFIG_UNREGISTRATION_SUCCESS",
    "type" : "int",
    "comment" : " Health App Configuration un-registration success\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "APP_CONFIG_UNREGISTRATION_FAILURE",
    "type" : "int",
    "comment" : " Health App Configuration un-registration failure\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  } ],
  "methods" : [ {
    "name" : "public boolean registerSinkAppConfiguration(String name, int dataType, BluetoothHealthCallback callback)",
    "returnType" : "boolean",
    "comment" : "\n     * Register an application configuration that acts as a Health SINK.\n     * This is the configuration that will be used to communicate with health devices\n     * which will act as the {@link #SOURCE_ROLE}. This is an asynchronous call and so\n     * the callback is used to notify success or failure if the function returns true.\n     *\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * @param name The friendly name associated with the application or configuration.\n     * @param dataType The dataType of the Source role of Health Profile to which the sink wants to\n     * connect to.\n     * @param callback A callback to indicate success or failure of the registration and all\n     * operations done on this application configuration.\n     * @return If true, callback will be called.\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "#SOURCE_ROLE", "android.Manifest.permission#BLUETOOTH", "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "public boolean unregisterAppConfiguration(BluetoothHealthAppConfiguration config)",
    "returnType" : "boolean",
    "comment" : "\n     * Unregister an application configuration that has been registered using\n     * {@link #registerSinkAppConfiguration}\n     *\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * @param config The health app configuration\n     * @return Success or failure.\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "#registerSinkAppConfiguration", "android.Manifest.permission#BLUETOOTH", "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "public boolean connectChannelToSource(BluetoothDevice device, BluetoothHealthAppConfiguration config)",
    "returnType" : "boolean",
    "comment" : "\n     * Connect to a health device which has the {@link #SOURCE_ROLE}.\n     * This is an asynchronous call. If this function returns true, the callback\n     * associated with the application configuration will be called.\n     *\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * @param device The remote Bluetooth device.\n     * @param config The application configuration which has been registered using {@link\n     * #registerSinkAppConfiguration(String, int, BluetoothHealthCallback) }\n     * @return If true, the callback associated with the application config will be called.\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "#SOURCE_ROLE", "android.Manifest.permission#BLUETOOTH", "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "public boolean disconnectChannel(BluetoothDevice device, BluetoothHealthAppConfiguration config, int channelId)",
    "returnType" : "boolean",
    "comment" : "\n     * Disconnect a connected health channel.\n     * This is an asynchronous call. If this function returns true, the callback\n     * associated with the application configuration will be called.\n     *\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * @param device The remote Bluetooth device.\n     * @param config The application configuration which has been registered using {@link\n     * #registerSinkAppConfiguration(String, int, BluetoothHealthCallback) }\n     * @param channelId The channel id associated with the channel\n     * @return If true, the callback associated with the application config will be called.\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "android.Manifest.permission#BLUETOOTH", "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "public ParcelFileDescriptor getMainChannelFd(BluetoothDevice device, BluetoothHealthAppConfiguration config)",
    "returnType" : "ParcelFileDescriptor",
    "comment" : "\n     * Get the file descriptor of the main channel associated with the remote device\n     * and application configuration.\n     *\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * <p> Its the responsibility of the caller to close the ParcelFileDescriptor\n     * when done.\n     *\n     * @param device The remote Bluetooth health device\n     * @param config The application configuration\n     * @return null on failure, ParcelFileDescriptor on success.\n     *\n     * @deprecated Health Device Profile (HDP) and MCAP protocol are no longer used. New\n     * apps should use Bluetooth Low Energy based solutions such as {@link BluetoothGatt},\n     * {@link BluetoothAdapter#listenUsingL2capChannel()(int)}, or\n     * {@link BluetoothDevice#createL2capChannel(int)}\n     ",
    "links" : [ "android.Manifest.permission#BLUETOOTH", "BluetoothGatt", "BluetoothAdapter#listenUsingL2capChannel", "BluetoothDevice#createL2capChannel" ]
  }, {
    "name" : "public int getConnectionState(BluetoothDevice device)",
    "returnType" : "int",
    "comment" : "\n     * Get the current connection state of the profile.\n     *\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * This is not specific to any application configuration but represents the connection\n     * state of the local Bluetooth adapter with the remote device. This can be used\n     * by applications like status bar which would just like to know the state of the\n     * local adapter.\n     *\n     * @param device Remote bluetooth device.\n     * @return State of the profile connection. One of {@link #STATE_CONNECTED}, {@link\n     * #STATE_CONNECTING}, {@link #STATE_DISCONNECTED}, {@link #STATE_DISCONNECTING}\n     ",
    "links" : [ "android.Manifest.permission#BLUETOOTH", "#STATE_CONNECTED", "#STATE_DISCONNECTED", "#STATE_DISCONNECTING" ]
  }, {
    "name" : "public List<BluetoothDevice> getConnectedDevices()",
    "returnType" : "List<BluetoothDevice>",
    "comment" : "\n     * Get connected devices for the health profile.\n     *\n     * <p> Return the set of devices which are in state {@link #STATE_CONNECTED}\n     *\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * This is not specific to any application configuration but represents the connection\n     * state of the local Bluetooth adapter for this profile. This can be used\n     * by applications like status bar which would just like to know the state of the\n     * local adapter.\n     *\n     * @return List of devices. The list will be empty on error.\n     ",
    "links" : [ "#STATE_CONNECTED", "android.Manifest.permission#BLUETOOTH" ]
  }, {
    "name" : "public List<BluetoothDevice> getDevicesMatchingConnectionStates(int[] states)",
    "returnType" : "List<BluetoothDevice>",
    "comment" : "\n     * Get a list of devices that match any of the given connection\n     * states.\n     *\n     * <p> If none of the devices match any of the given states,\n     * an empty list will be returned.\n     *\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     * This is not specific to any application configuration but represents the connection\n     * state of the local Bluetooth adapter for this profile. This can be used\n     * by applications like status bar which would just like to know the state of the\n     * local adapter.\n     *\n     * @param states Array of states. States can be one of {@link #STATE_CONNECTED}, {@link\n     * #STATE_CONNECTING}, {@link #STATE_DISCONNECTED}, {@link #STATE_DISCONNECTING},\n     * @return List of devices. The list will be empty on error.\n     ",
    "links" : [ "android.Manifest.permission#BLUETOOTH", "#STATE_CONNECTED", "#STATE_DISCONNECTED", "#STATE_DISCONNECTING" ]
  } ],
  "variableNames" : [ "TAG", "SOURCE_ROLE", "SINK_ROLE", "CHANNEL_TYPE_RELIABLE", "CHANNEL_TYPE_STREAMING", "STATE_CHANNEL_DISCONNECTED", "STATE_CHANNEL_CONNECTING", "STATE_CHANNEL_CONNECTED", "STATE_CHANNEL_DISCONNECTING", "APP_CONFIG_REGISTRATION_SUCCESS", "APP_CONFIG_REGISTRATION_FAILURE", "APP_CONFIG_UNREGISTRATION_SUCCESS", "APP_CONFIG_UNREGISTRATION_FAILURE" ],
  "methodNames" : [ "public boolean registerSinkAppConfiguration(String name, int dataType, BluetoothHealthCallback callback)", "public boolean unregisterAppConfiguration(BluetoothHealthAppConfiguration config)", "public boolean connectChannelToSource(BluetoothDevice device, BluetoothHealthAppConfiguration config)", "public boolean disconnectChannel(BluetoothDevice device, BluetoothHealthAppConfiguration config, int channelId)", "public ParcelFileDescriptor getMainChannelFd(BluetoothDevice device, BluetoothHealthAppConfiguration config)", "public int getConnectionState(BluetoothDevice device)", "public List<BluetoothDevice> getConnectedDevices()", "public List<BluetoothDevice> getDevicesMatchingConnectionStates(int[] states)" ]
}