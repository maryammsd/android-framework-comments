{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/WindowCallbacks.java",
  "packageName" : "android.view",
  "className" : "WindowCallbacks",
  "comment" : "\n * These callbacks are used to communicate window configuration changes while the user is performing\n * window changes.\n * Note: Note that at the time of onWindowDragResizeStart the content size isn't known. A consumer\n * should therfore not draw anything before the additional onContentDraw call has arrived.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onWindowSizeIsChanging(Rect newBounds, boolean fullscreen, Rect systemInsets, Rect stableInsets)",
    "returnType" : "void",
    "comment" : "\n     * Called by the system when the window got changed by the user, before the layouter got called.\n     * It also gets called when the insets changed, or when the window switched between a fullscreen\n     * layout or a non-fullscreen layout. It can be used to perform a \"quick and dirty\" resize which\n     * should never take more then 4ms to complete.\n     *\n     * <p>At the time the layouting has not happened yet.\n     *\n     * @param newBounds The new window frame bounds.\n     * @param fullscreen Whether the window is currently drawing in fullscreen.\n     * @param systemInsets The current visible system insets for the window.\n     * @param stableInsets The stable insets for the window.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onWindowDragResizeStart(Rect initialBounds, boolean fullscreen, Rect systemInsets, Rect stableInsets)",
    "returnType" : "void",
    "comment" : "\n     * Called when a drag resize starts.\n     *\n     * @param initialBounds The initial bounds where the window will be.\n     * @param fullscreen Whether the window is currently drawing in fullscreen.\n     * @param systemInsets The current visible system insets for the window.\n     * @param stableInsets The stable insets for the window.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onWindowDragResizeEnd()",
    "returnType" : "void",
    "comment" : "\n     * Called when a drag resize ends.\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean onContentDrawn(int offsetX, int offsetY, int sizeX, int sizeY)",
    "returnType" : "boolean",
    "comment" : "\n     * The content will now be drawn to these bounds. Returns true if\n     * a draw should be requested after the next content draw.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onRequestDraw(boolean reportNextDraw)",
    "returnType" : "void",
    "comment" : "\n     * Called to request the window to draw one frame.\n     * @param reportNextDraw Whether it should report when the requested draw finishes.\n     ",
    "links" : [ ]
  }, {
    "name" : " void onPostDraw(RecordingCanvas canvas)",
    "returnType" : "void",
    "comment" : "\n     * Called after all the content has drawn and the callback now has the ability to draw something\n     * on top of everything. Call {@link ViewRootImpl#requestInvalidateRootRenderNode} when this\n     * content needs to be redrawn.\n     *\n     * @param canvas The canvas to draw on.\n     ",
    "links" : [ "android.view.ViewRootImpl#requestInvalidateRootRenderNode" ]
  } ],
  "methodNames" : [ " void onWindowSizeIsChanging(Rect newBounds, boolean fullscreen, Rect systemInsets, Rect stableInsets)", " void onWindowDragResizeStart(Rect initialBounds, boolean fullscreen, Rect systemInsets, Rect stableInsets)", " void onWindowDragResizeEnd()", " boolean onContentDrawn(int offsetX, int offsetY, int sizeX, int sizeY)", " void onRequestDraw(boolean reportNextDraw)", " void onPostDraw(RecordingCanvas canvas)" ],
  "variableNames" : [ ]
}