{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothStatusCodes.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothStatusCodes",
  "comment" : "\n * A class with constants representing possible return values for Bluetooth APIs. General return\n * values occupy the range 0 to 199. Profile-specific return values occupy the range 200-999.\n * API-specific return values start at 1000. The exception to this is the \"UNKNOWN\" error code which\n * occupies the max integer value.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SUCCESS",
    "type" : "int",
    "comment" : " Indicates that the API call was successful. ",
    "links" : [ ]
  }, {
    "name" : "ERROR_BLUETOOTH_NOT_ENABLED",
    "type" : "int",
    "comment" : " Error code indicating that Bluetooth is not enabled. ",
    "links" : [ ]
  }, {
    "name" : "ERROR_BLUETOOTH_NOT_ALLOWED",
    "type" : "int",
    "comment" : "\n     * Error code indicating that the API call was initiated by neither the system nor the active\n     * user.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DEVICE_NOT_BONDED",
    "type" : "int",
    "comment" : " Error code indicating that the Bluetooth Device specified is not bonded. ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DEVICE_NOT_CONNECTED",
    "type" : "int",
    "comment" : "\n     * Error code indicating that the Bluetooth Device specified is not connected, but is bonded.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_MISSING_BLUETOOTH_CONNECT_PERMISSION",
    "type" : "int",
    "comment" : "\n     * Error code indicating that the caller does not have the {@link\n     * android.Manifest.permission#BLUETOOTH_CONNECT} permission.\n     ",
    "links" : [ "android.Manifest.permission#BLUETOOTH_CONNECT" ]
  }, {
    "name" : "ERROR_MISSING_BLUETOOTH_SCAN_PERMISSION",
    "type" : "int",
    "comment" : "\n     * Error code indicating that the caller does not have the {@link\n     * android.Manifest.permission#BLUETOOTH_SCAN} permission.\n     *\n     * @hide\n     ",
    "links" : [ "android.Manifest.permission#BLUETOOTH_SCAN" ]
  }, {
    "name" : "ERROR_PROFILE_SERVICE_NOT_BOUND",
    "type" : "int",
    "comment" : "\n     * Error code indicating that the profile service is not bound. You can bind a profile service\n     * by calling {@link BluetoothAdapter#getProfileProxy}.\n     ",
    "links" : [ "android.bluetooth.BluetoothAdapter#getProfileProxy" ]
  }, {
    "name" : "FEATURE_SUPPORTED",
    "type" : "int",
    "comment" : " Indicates that the feature is supported. ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_NOT_SUPPORTED",
    "type" : "int",
    "comment" : " Indicates that the feature is not supported. ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NOT_ACTIVE_DEVICE",
    "type" : "int",
    "comment" : "\n     * Error code indicating that the device is not the active device for this profile.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NO_ACTIVE_DEVICES",
    "type" : "int",
    "comment" : "\n     * Error code indicating that there are no active devices for the profile.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_PROFILE_NOT_CONNECTED",
    "type" : "int",
    "comment" : "\n     * Indicates that the Bluetooth profile is not connected to this device.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_TIMEOUT",
    "type" : "int",
    "comment" : "\n     * Error code indicating that the requested operation timed out.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_LOCAL_APP_REQUEST",
    "type" : "int",
    "comment" : "\n     * Indicates that some local application caused the event.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_LOCAL_STACK_REQUEST",
    "type" : "int",
    "comment" : "\n     * Indicate that this change was initiated by the Bluetooth implementation on this device\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_REMOTE_REQUEST",
    "type" : "int",
    "comment" : "\n     * Indicate that this change was initiated by the remote device.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_SYSTEM_POLICY",
    "type" : "int",
    "comment" : "\n     * Indicates that the local system policy caused the change, such as privacy policy, power\n     * management policy, permission changes, and more.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_HARDWARE_GENERIC",
    "type" : "int",
    "comment" : "\n     * Indicates that an underlying hardware incurred some error maybe try again later or toggle the\n     * hardware state.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_BAD_PARAMETERS",
    "type" : "int",
    "comment" : "\n     * Indicates that the operation failed due to bad API input parameter that is not covered by\n     * other more detailed error code\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_LOCAL_NOT_ENOUGH_RESOURCES",
    "type" : "int",
    "comment" : "\n     * Indicate that there is not enough local resource to perform the requested operation\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_REMOTE_NOT_ENOUGH_RESOURCES",
    "type" : "int",
    "comment" : "\n     * Indicate that a remote device does not have enough resource to perform the requested\n     * operation\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_REMOTE_OPERATION_REJECTED",
    "type" : "int",
    "comment" : "\n     * Indicates that the remote rejected this operation for reasons not covered above\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_REMOTE_LINK_ERROR",
    "type" : "int",
    "comment" : "\n     * Indicates that there is an underlying link error between the local and remote devices.\n     *\n     * <p>Maybe try again later or disconnect and retry.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_ALREADY_IN_TARGET_STATE",
    "type" : "int",
    "comment" : "\n     * A generic error code to indicate that the system is already in a target state that an API\n     * tries to request.\n     *\n     * <p>For example, this error code will be delivered if someone tries to stop scanning when scan\n     * has already stopped, or start scanning when scan has already started.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_REMOTE_OPERATION_NOT_SUPPORTED",
    "type" : "int",
    "comment" : "\n     * Indicates that the requested operation is not supported by the remote device\n     *\n     * <p>Caller should stop trying this operation\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_CALLBACK_NOT_REGISTERED",
    "type" : "int",
    "comment" : "\n     * Indicates that the callback is not registered and therefore, this operation is not allowed.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_ANOTHER_ACTIVE_REQUEST",
    "type" : "int",
    "comment" : "\n     * Indicates that there is another active request and therefore, this operation is not allowed.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FEATURE_NOT_CONFIGURED",
    "type" : "int",
    "comment" : " Indicates that the feature status is not configured yet. ",
    "links" : [ ]
  }, {
    "name" : "ERROR_GATT_WRITE_NOT_ALLOWED",
    "type" : "int",
    "comment" : " A GATT writeCharacteristic request is not permitted on the remote device. ",
    "links" : [ ]
  }, {
    "name" : "ERROR_GATT_WRITE_REQUEST_BUSY",
    "type" : "int",
    "comment" : " A GATT writeCharacteristic request is issued to a busy remote device. ",
    "links" : [ ]
  }, {
    "name" : "ALLOWED",
    "type" : "int",
    "comment" : "\n     * Indicates that the operation is allowed.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "NOT_ALLOWED",
    "type" : "int",
    "comment" : "\n     * Indicates that the operation is not allowed.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_ANOTHER_ACTIVE_OOB_REQUEST",
    "type" : "int",
    "comment" : "\n     * If another application has already requested {@link OobData} then another fetch will be\n     * disallowed until the callback is removed.\n     *\n     * @hide\n     ",
    "links" : [ "android.bluetooth.OobData" ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_LOCAL_REQUEST",
    "type" : "int",
    "comment" : "\n     * Indicates that the ACL disconnected due to an explicit request from the local device.\n     *\n     * <p>Example cause: This is a normal disconnect reason, e.g., user/app initiates disconnection.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_REMOTE_REQUEST",
    "type" : "int",
    "comment" : "\n     * Indicates that the ACL disconnected due to an explicit request from the remote device.\n     *\n     * <p>Example cause: This is a normal disconnect reason, e.g., user/app initiates disconnection.\n     *\n     * <p>Example solution: The app can also prompt the user to check their remote device.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_LOCAL",
    "type" : "int",
    "comment" : "\n     * Generic disconnect reason indicating the ACL disconnected due to an error on the local\n     * device.\n     *\n     * <p>Example solution: Prompt the user to check their local device (e.g., phone, car headunit).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_REMOTE",
    "type" : "int",
    "comment" : "\n     * Generic disconnect reason indicating the ACL disconnected due to an error on the remote\n     * device.\n     *\n     * <p>Example solution: Prompt the user to check their remote device (e.g., headset, car\n     * headunit, watch).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_TIMEOUT",
    "type" : "int",
    "comment" : "\n     * Indicates that the ACL disconnected due to a timeout.\n     *\n     * <p>Example cause: remote device might be out of range.\n     *\n     * <p>Example solution: Prompt user to verify their remote device is on or in connection/pairing\n     * mode.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_SECURITY",
    "type" : "int",
    "comment" : "\n     * Indicates that the ACL disconnected due to link key issues.\n     *\n     * <p>Example cause: Devices are either unpaired or remote device is refusing our pairing\n     * request.\n     *\n     * <p>Example solution: Prompt user to unpair and pair again.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_SYSTEM_POLICY",
    "type" : "int",
    "comment" : "\n     * Indicates that the ACL disconnected due to the local device's system policy.\n     *\n     * <p>Example cause: privacy policy, power management policy, permissions, etc.\n     *\n     * <p>Example solution: Prompt the user to check settings, or check with their system\n     * administrator (e.g. some corp-managed devices do not allow OPP connection).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_RESOURCE_LIMIT_REACHED",
    "type" : "int",
    "comment" : "\n     * Indicates that the ACL disconnected due to resource constraints, either on the local device\n     * or the remote device.\n     *\n     * <p>Example cause: controller is busy, memory limit reached, maximum number of connections\n     * reached.\n     *\n     * <p>Example solution: The app should wait and try again. If still failing, prompt the user to\n     * disconnect some devices, or toggle Bluetooth on the local and/or the remote device.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_CONNECTION_ALREADY_EXISTS",
    "type" : "int",
    "comment" : "\n     * Indicates that the ACL disconnected because another ACL connection already exists.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISCONNECT_REASON_BAD_PARAMETERS",
    "type" : "int",
    "comment" : "\n     * Indicates that the ACL disconnected due to incorrect parameters passed in from the app.\n     *\n     * <p>Example solution: Change parameters and try again. If error persists, the app can report\n     * telemetry and/or log the error in a bugreport.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_AUDIO_DEVICE_ALREADY_CONNECTED",
    "type" : "int",
    "comment" : "\n     * Indicates that there is already one device for which SCO audio is connected or connecting.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_AUDIO_DEVICE_ALREADY_DISCONNECTED",
    "type" : "int",
    "comment" : "\n     * Indicates that SCO audio was already not connected for this device.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_AUDIO_ROUTE_BLOCKED",
    "type" : "int",
    "comment" : "\n     * Indicates that there audio route is currently blocked by the system.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_CALL_ACTIVE",
    "type" : "int",
    "comment" : "\n     * Indicates that there is an active call preventing this operation from succeeding.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_LE_BROADCAST_INVALID_BROADCAST_ID",
    "type" : "int",
    "comment" : "\n     * Indicates that the broadcast ID cannot be found among existing Broadcast Sources.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_LE_BROADCAST_INVALID_CODE",
    "type" : "int",
    "comment" : "\n     * Indicates that encryption code entered does not meet the specification requirement\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_LE_BROADCAST_ASSISTANT_INVALID_SOURCE_ID",
    "type" : "int",
    "comment" : "\n     * Indicates that the source ID cannot be found in the given Broadcast sink device\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_LE_BROADCAST_ASSISTANT_DUPLICATE_ADDITION",
    "type" : "int",
    "comment" : "\n     * Indicates that the same Broadcast Source is already added to the Broadcast Sink\n     *\n     * <p>Broadcast Source is identified by their advertising SID and broadcast ID\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_LE_CONTENT_METADATA_INVALID_PROGRAM_INFO",
    "type" : "int",
    "comment" : "\n     * Indicates that the program info in a {@link BluetoothLeAudioContentMetadata} is not valid\n     *\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothLeAudioContentMetadata" ]
  }, {
    "name" : "ERROR_LE_CONTENT_METADATA_INVALID_LANGUAGE",
    "type" : "int",
    "comment" : "\n     * Indicates that the language code in a {@link BluetoothLeAudioContentMetadata} is not valid\n     *\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothLeAudioContentMetadata" ]
  }, {
    "name" : "ERROR_LE_CONTENT_METADATA_INVALID_OTHER",
    "type" : "int",
    "comment" : "\n     * Indicates that operation failed due to other {@link BluetoothLeAudioContentMetadata} related\n     * issues not covered by other reason codes.\n     *\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothLeAudioContentMetadata" ]
  }, {
    "name" : "ERROR_CSIP_INVALID_GROUP_ID",
    "type" : "int",
    "comment" : "\n     * Indicates that provided group ID is invalid for the coordinated set\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_CSIP_GROUP_LOCKED_BY_OTHER",
    "type" : "int",
    "comment" : "\n     * Indicating that CSIP group locked failed due to group member being already locked.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_CSIP_LOCKED_GROUP_MEMBER_LOST",
    "type" : "int",
    "comment" : "\n     * Indicating that CSIP device has been lost while being locked.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_HAP_PRESET_NAME_TOO_LONG",
    "type" : "int",
    "comment" : "\n     * Indicates that the set preset name is too long.\n     *\n     * <p>Example solution: Try using shorter name.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_HAP_INVALID_PRESET_INDEX",
    "type" : "int",
    "comment" : "\n     * Indicates that provided preset index parameters is invalid\n     *\n     * <p>Example solution: Use preset index of a known existing preset.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NO_LE_CONNECTION",
    "type" : "int",
    "comment" : "\n     * Indicates that LE connection is required but not exist or disconnected.\n     *\n     * <p>Example solution: create LE connection then retry again.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_DISTANCE_MEASUREMENT_INTERNAL",
    "type" : "int",
    "comment" : "\n     * Indicates internal error of distance measurement, such as read RSSI data fail.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RFCOMM_LISTENER_START_FAILED_UUID_IN_USE",
    "type" : "int",
    "comment" : "\n     * Indicates that the RFCOMM listener could not be started due to the requested UUID already\n     * being in use.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RFCOMM_LISTENER_OPERATION_FAILED_NO_MATCHING_SERVICE_RECORD",
    "type" : "int",
    "comment" : "\n     * Indicates that the operation could not be competed because the service record on which the\n     * operation was requested on does not exist.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RFCOMM_LISTENER_OPERATION_FAILED_DIFFERENT_APP",
    "type" : "int",
    "comment" : "\n     * Indicates that the operation could not be completed because the application requesting the\n     * operation on the RFCOMM listener was not the one which registered it.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RFCOMM_LISTENER_FAILED_TO_CREATE_SERVER_SOCKET",
    "type" : "int",
    "comment" : "\n     * Indicates that the creation of the underlying BluetoothServerSocket failed.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RFCOMM_LISTENER_FAILED_TO_CLOSE_SERVER_SOCKET",
    "type" : "int",
    "comment" : "\n     * Indicates that closing the underlying BluetoothServerSocket failed.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RFCOMM_LISTENER_NO_SOCKET_AVAILABLE",
    "type" : "int",
    "comment" : "\n     * Indicates that there is no socket available to retrieve from the given listener.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NOT_DUAL_MODE_AUDIO_DEVICE",
    "type" : "int",
    "comment" : "\n     * Error code indicating that this operation is not allowed because the remote device does not\n     * support both BR/EDR audio and BLE Audio.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_UNKNOWN",
    "type" : "int",
    "comment" : " Indicates that an unknown error has occurred. ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "SUCCESS", "ERROR_BLUETOOTH_NOT_ENABLED", "ERROR_BLUETOOTH_NOT_ALLOWED", "ERROR_DEVICE_NOT_BONDED", "ERROR_DEVICE_NOT_CONNECTED", "ERROR_MISSING_BLUETOOTH_CONNECT_PERMISSION", "ERROR_MISSING_BLUETOOTH_SCAN_PERMISSION", "ERROR_PROFILE_SERVICE_NOT_BOUND", "FEATURE_SUPPORTED", "FEATURE_NOT_SUPPORTED", "ERROR_NOT_ACTIVE_DEVICE", "ERROR_NO_ACTIVE_DEVICES", "ERROR_PROFILE_NOT_CONNECTED", "ERROR_TIMEOUT", "REASON_LOCAL_APP_REQUEST", "REASON_LOCAL_STACK_REQUEST", "REASON_REMOTE_REQUEST", "REASON_SYSTEM_POLICY", "ERROR_HARDWARE_GENERIC", "ERROR_BAD_PARAMETERS", "ERROR_LOCAL_NOT_ENOUGH_RESOURCES", "ERROR_REMOTE_NOT_ENOUGH_RESOURCES", "ERROR_REMOTE_OPERATION_REJECTED", "ERROR_REMOTE_LINK_ERROR", "ERROR_ALREADY_IN_TARGET_STATE", "ERROR_REMOTE_OPERATION_NOT_SUPPORTED", "ERROR_CALLBACK_NOT_REGISTERED", "ERROR_ANOTHER_ACTIVE_REQUEST", "FEATURE_NOT_CONFIGURED", "ERROR_GATT_WRITE_NOT_ALLOWED", "ERROR_GATT_WRITE_REQUEST_BUSY", "ALLOWED", "NOT_ALLOWED", "ERROR_ANOTHER_ACTIVE_OOB_REQUEST", "ERROR_DISCONNECT_REASON_LOCAL_REQUEST", "ERROR_DISCONNECT_REASON_REMOTE_REQUEST", "ERROR_DISCONNECT_REASON_LOCAL", "ERROR_DISCONNECT_REASON_REMOTE", "ERROR_DISCONNECT_REASON_TIMEOUT", "ERROR_DISCONNECT_REASON_SECURITY", "ERROR_DISCONNECT_REASON_SYSTEM_POLICY", "ERROR_DISCONNECT_REASON_RESOURCE_LIMIT_REACHED", "ERROR_DISCONNECT_REASON_CONNECTION_ALREADY_EXISTS", "ERROR_DISCONNECT_REASON_BAD_PARAMETERS", "ERROR_AUDIO_DEVICE_ALREADY_CONNECTED", "ERROR_AUDIO_DEVICE_ALREADY_DISCONNECTED", "ERROR_AUDIO_ROUTE_BLOCKED", "ERROR_CALL_ACTIVE", "ERROR_LE_BROADCAST_INVALID_BROADCAST_ID", "ERROR_LE_BROADCAST_INVALID_CODE", "ERROR_LE_BROADCAST_ASSISTANT_INVALID_SOURCE_ID", "ERROR_LE_BROADCAST_ASSISTANT_DUPLICATE_ADDITION", "ERROR_LE_CONTENT_METADATA_INVALID_PROGRAM_INFO", "ERROR_LE_CONTENT_METADATA_INVALID_LANGUAGE", "ERROR_LE_CONTENT_METADATA_INVALID_OTHER", "ERROR_CSIP_INVALID_GROUP_ID", "ERROR_CSIP_GROUP_LOCKED_BY_OTHER", "ERROR_CSIP_LOCKED_GROUP_MEMBER_LOST", "ERROR_HAP_PRESET_NAME_TOO_LONG", "ERROR_HAP_INVALID_PRESET_INDEX", "ERROR_NO_LE_CONNECTION", "ERROR_DISTANCE_MEASUREMENT_INTERNAL", "RFCOMM_LISTENER_START_FAILED_UUID_IN_USE", "RFCOMM_LISTENER_OPERATION_FAILED_NO_MATCHING_SERVICE_RECORD", "RFCOMM_LISTENER_OPERATION_FAILED_DIFFERENT_APP", "RFCOMM_LISTENER_FAILED_TO_CREATE_SERVER_SOCKET", "RFCOMM_LISTENER_FAILED_TO_CLOSE_SERVER_SOCKET", "RFCOMM_LISTENER_NO_SOCKET_AVAILABLE", "ERROR_NOT_DUAL_MODE_AUDIO_DEVICE", "ERROR_UNKNOWN" ]
}