{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/http/HttpEngine.java",
  "packageName" : "android.net.http",
  "className" : "Builder",
  "comment" : " Builder.",
  "links" : [ ],
  "variables" : [ {
    "name" : "mBuilderDelegate",
    "type" : "IHttpEngineBuilder",
    "comment" : "\n         * Reference to the actual builder implementation. {@hide exclude from JavaDoc}.\n         ",
    "links" : [ ]
  }, {
    "name" : "HTTP_CACHE_DISABLED",
    "type" : "int",
    "comment" : "\n         * Setting to disable HTTP cache. Some data may still be temporarily stored in memory.\n         * Passed to {@link #setEnableHttpCache}.\n         ",
    "links" : [ "#setEnableHttpCache" ]
  }, {
    "name" : "HTTP_CACHE_IN_MEMORY",
    "type" : "int",
    "comment" : "\n         * Setting to enable in-memory HTTP cache, including HTTP data.\n         * Passed to {@link #setEnableHttpCache}.\n         ",
    "links" : [ "#setEnableHttpCache" ]
  }, {
    "name" : "HTTP_CACHE_DISK_NO_HTTP",
    "type" : "int",
    "comment" : "\n         * Setting to enable on-disk cache, excluding HTTP data.\n         * {@link #setStoragePath} must be called prior to passing this constant to\n         * {@link #setEnableHttpCache}.\n         ",
    "links" : [ "#setStoragePath", "#setEnableHttpCache" ]
  }, {
    "name" : "HTTP_CACHE_DISK",
    "type" : "int",
    "comment" : "\n         * Setting to enable on-disk cache, including HTTP data.\n         * {@link #setStoragePath} must be called prior to passing this constant to\n         * {@link #setEnableHttpCache}.\n         ",
    "links" : [ "#setStoragePath", "#setEnableHttpCache" ]
  } ],
  "methods" : [ {
    "name" : "public String getDefaultUserAgent()",
    "returnType" : "String",
    "comment" : " model, Id, and Cronet version.",
    "links" : [ ]
  }, {
    "name" : "public Builder setUserAgent(@NonNull String userAgent)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setStoragePath(@NonNull String value)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setEnableQuic(boolean value)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setEnableHttp2(boolean value)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setEnableBrotli(boolean value)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setEnableHttpCache(int cacheMode, long maxSize)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder addQuicHint(@NonNull String host, int port, int alternatePort)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder addPublicKeyPins(@NonNull String hostName, @NonNull Set<byte[]> pinsSha256, boolean includeSubdomains, @NonNull Instant expirationInstant)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setEnablePublicKeyPinningBypassForLocalTrustAnchors(boolean value)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setQuicOptions(@NonNull QuicOptions quicOptions)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setDnsOptions(@NonNull DnsOptions dnsOptions)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public Builder setConnectionMigrationOptions(@NonNull ConnectionMigrationOptions connectionMigrationOptions)",
    "returnType" : "Builder",
    "comment" : " SuppressLint: Value is passed to JNI code and maintained by JNI code after build",
    "links" : [ ]
  }, {
    "name" : "public HttpEngine build()",
    "returnType" : "HttpEngine",
    "comment" : "\n         * Build a {@link HttpEngine} using this builder's configuration.\n         * @return constructed {@link HttpEngine}.\n         ",
    "links" : [ "android.net.http.HttpEngine" ]
  }, {
    "name" : "private static IHttpEngineBuilder createBuilderDelegate(Context context)",
    "returnType" : "IHttpEngineBuilder",
    "comment" : "\n         * Creates an implementation of {@link IHttpEngineBuilder} that can be used\n         * to delegate the builder calls to.\n         *\n         * @param context Android Context to use.\n         * @return the created {@link IHttpEngineBuilder}.\n         ",
    "links" : [ "android.net.http.IHttpEngineBuilder" ]
  } ],
  "methodNames" : [ "public String getDefaultUserAgent()", "public Builder setUserAgent(@NonNull String userAgent)", "public Builder setStoragePath(@NonNull String value)", "public Builder setEnableQuic(boolean value)", "public Builder setEnableHttp2(boolean value)", "public Builder setEnableBrotli(boolean value)", "public Builder setEnableHttpCache(int cacheMode, long maxSize)", "public Builder addQuicHint(@NonNull String host, int port, int alternatePort)", "public Builder addPublicKeyPins(@NonNull String hostName, @NonNull Set<byte[]> pinsSha256, boolean includeSubdomains, @NonNull Instant expirationInstant)", "public Builder setEnablePublicKeyPinningBypassForLocalTrustAnchors(boolean value)", "public Builder setQuicOptions(@NonNull QuicOptions quicOptions)", "public Builder setDnsOptions(@NonNull DnsOptions dnsOptions)", "public Builder setConnectionMigrationOptions(@NonNull ConnectionMigrationOptions connectionMigrationOptions)", "public HttpEngine build()", "private static IHttpEngineBuilder createBuilderDelegate(Context context)" ],
  "variableNames" : [ "mBuilderDelegate", "HTTP_CACHE_DISABLED", "HTTP_CACHE_IN_MEMORY", "HTTP_CACHE_DISK_NO_HTTP", "HTTP_CACHE_DISK" ]
}