{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/axes/HasPositionalPredChecker.java",
  "packageName" : "org.apache.xpath.axes",
  "className" : "HasPositionalPredChecker",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_hasPositionalPred",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_predDepth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean check(LocPathIterator path)",
    "returnType" : "boolean",
    "comment" : "\n\t * Process the LocPathIterator to see if it contains variables \n\t * or functions that may make it context dependent.\n\t * @param path LocPathIterator that is assumed to be absolute, but needs checking.\n\t * @return true if the path is confirmed to be absolute, false if it \n\t * may contain context dependencies.\n\t ",
    "links" : [ ]
  }, {
    "name" : "public boolean visitFunction(ExpressionOwner owner, Function func)",
    "returnType" : "boolean",
    "comment" : "\n\t * Visit a function.\n\t * @param owner The owner of the expression, to which the expression can \n\t *              be reset if rewriting takes place.\n\t * @param func The function reference object.\n\t * @return true if the sub expressions should be traversed.\n\t ",
    "links" : [ ]
  }, {
    "name" : "public boolean visitPredicate(ExpressionOwner owner, Expression pred)",
    "returnType" : "boolean",
    "comment" : "\n   * Visit a predicate within a location path.  Note that there isn't a \n   * proper unique component for predicates, and that the expression will \n   * be called also for whatever type Expression is.\n   * \n   * @param owner The owner of the expression, to which the expression can \n   *              be reset if rewriting takes place.\n   * @param pred The predicate object.\n   * @return true if the sub expressions should be traversed.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static boolean check(LocPathIterator path)", "public boolean visitFunction(ExpressionOwner owner, Function func)", "public boolean visitPredicate(ExpressionOwner owner, Expression pred)" ],
  "variableNames" : [ "m_hasPositionalPred", "m_predDepth" ]
}