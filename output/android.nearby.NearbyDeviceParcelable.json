{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/nearby/NearbyDeviceParcelable.java",
  "packageName" : "android.nearby",
  "className" : "NearbyDeviceParcelable",
  "comment" : "\n * A data class representing scan result from Nearby Service. Scan result can come from multiple\n * mediums like BLE, Wi-Fi Aware, and etc. A scan result consists of An encapsulation of various\n * parameters for requesting nearby scans.\n *\n * <p>All scan results generated through {@link NearbyManager} are guaranteed to have a valid\n * medium, identifier, timestamp (both UTC time and elapsed real-time since boot), and accuracy. All\n * other parameters are optional.\n *\n * @hide\n ",
  "links" : [ "android.nearby.NearbyManager" ],
  "variables" : [ {
    "name" : "CREATOR",
    "type" : "Creator<NearbyDeviceParcelable>",
    "comment" : " Used to read a NearbyDeviceParcelable from a Parcel. ",
    "links" : [ ]
  }, {
    "name" : "mDeviceId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScanType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMedium",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxPower",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRssi",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAction",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPublicCredential",
    "type" : "PublicCredential",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBluetoothAddress",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFastPairModelId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSalt",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPresenceDevice",
    "type" : "PresenceDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncryptionKeyTag",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " No special parcel contents. ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Flatten this NearbyDeviceParcelable in to a Parcel.\n     *\n     * @param dest The Parcel in which the object should be written.\n     * @param flags Additional flags about how the object should be written.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " Returns a string representation of this ScanRequest. ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getDeviceId()",
    "returnType" : "long",
    "comment" : "\n     * The id of the device.\n     * <p>This id is not a hardware id. It may rotate based on the remote device's broadcasts.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getScanType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the type of the scan.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the name of the NearbyDeviceParcelable. Returns {@code null} If there is no name.\n     *\n     * Used in Fast Pair.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMedium()",
    "returnType" : "int",
    "comment" : "\n     * Gets the {@link android.nearby.NearbyDevice.Medium} of the NearbyDeviceParcelable over which\n     * it is discovered.\n     *\n     * Used in Fast Pair and Nearby Presence.\n     ",
    "links" : [ "android.nearby.NearbyDevice.Medium" ]
  }, {
    "name" : "public int getTxPower()",
    "returnType" : "int",
    "comment" : "\n     * Gets the transmission power in dBm.\n     *\n     * Used in Fast Pair.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRssi()",
    "returnType" : "int",
    "comment" : "\n     * Gets the received signal strength in dBm.\n     *\n     * Used in Fast Pair and Nearby Presence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAction()",
    "returnType" : "int",
    "comment" : "\n     * Gets the Action.\n     *\n     * Used in Nearby Presence.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public PublicCredential getPublicCredential()",
    "returnType" : "PublicCredential",
    "comment" : "\n     * Gets the public credential.\n     *\n     * Used in Nearby Presence.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFastPairModelId()",
    "returnType" : "String",
    "comment" : "\n     * Gets the Fast Pair identifier. Returns {@code null} if there is no Model ID or this is not a\n     * Fast Pair device.\n     *\n     * Used in Fast Pair.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getBluetoothAddress()",
    "returnType" : "String",
    "comment" : "\n     * Gets the Bluetooth device hardware address. Returns {@code null} if the device is not\n     * discovered by Bluetooth.\n     *\n     * Used in Fast Pair.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getData()",
    "returnType" : "byte[]",
    "comment" : "\n     * Gets the raw data from the scanning.\n     * Returns {@code null} if there is no extra data or this is not a Fast Pair device.\n     *\n     * Used in Fast Pair.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getSalt()",
    "returnType" : "byte[]",
    "comment" : "\n     * Gets the salt in the advertisement from the Nearby Presence device.\n     * Returns {@code null} if this is not a Nearby Presence device.\n     *\n     * Used in Nearby Presence.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PresenceDevice getPresenceDevice()",
    "returnType" : "PresenceDevice",
    "comment" : "\n     * Gets the {@link PresenceDevice} Nearby Presence device. This field is\n     * for Fast Pair client only.\n     ",
    "links" : [ "android.nearby.PresenceDevice" ]
  }, {
    "name" : "public byte[] getEncryptionKeyTag()",
    "returnType" : "byte[]",
    "comment" : "\n     * Gets the encryption key tag calculated from advertisement\n     * Returns {@code null} if the data is not encrypted or this is not a Presence device.\n     *\n     * Used in Presence.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public boolean equals(Object other)", "public int hashCode()", "public long getDeviceId()", "public int getScanType()", "public String getName()", "public int getMedium()", "public int getTxPower()", "public int getRssi()", "public int getAction()", "public PublicCredential getPublicCredential()", "public String getFastPairModelId()", "public String getBluetoothAddress()", "public byte[] getData()", "public byte[] getSalt()", "public PresenceDevice getPresenceDevice()", "public byte[] getEncryptionKeyTag()" ],
  "variableNames" : [ "CREATOR", "mDeviceId", "mScanType", "mName", "mMedium", "mTxPower", "mRssi", "mAction", "mPublicCredential", "mBluetoothAddress", "mFastPairModelId", "mData", "mSalt", "mPresenceDevice", "mEncryptionKeyTag" ]
}