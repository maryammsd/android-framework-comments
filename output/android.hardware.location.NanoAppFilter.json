{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/location/NanoAppFilter.java",
  "packageName" : "android.hardware.location",
  "className" : "NanoAppFilter",
  "comment" : "\n * @deprecated Use {@link android.hardware.location.ContextHubManager#queryNanoApps(ContextHubInfo)}\n *             to find loaded nanoapps, which doesn't require using this class as a parameter.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppId",
    "type" : "long",
    "comment" : " The appId, can be set to APP_ID_ANY",
    "links" : [ ]
  }, {
    "name" : "mAppVersion",
    "type" : "int",
    "comment" : " Version to filter apps",
    "links" : [ ]
  }, {
    "name" : "mVersionRestrictionMask",
    "type" : "int",
    "comment" : " filtering spec for version",
    "links" : [ ]
  }, {
    "name" : "mAppIdVendorMask",
    "type" : "long",
    "comment" : " If APP_ID is any, then a match is performef with the vendor mask",
    "links" : [ ]
  }, {
    "name" : "mContextHubId",
    "type" : "int",
    "comment" : " TODO: Provide an API which will let us change this HubId.",
    "links" : [ ]
  }, {
    "name" : "FLAGS_VERSION_ANY",
    "type" : "int",
    "comment" : "\n     * Flag indicating any version. With this flag set, all versions shall match provided version.\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAGS_VERSION_GREAT_THAN",
    "type" : "int",
    "comment" : "\n     * If this flag is set, only versions strictly greater than the version specified shall match.\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAGS_VERSION_LESS_THAN",
    "type" : "int",
    "comment" : "\n     * If this flag is set, only versions strictly less than the version specified shall match.\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAGS_VERSION_STRICTLY_EQUAL",
    "type" : "int",
    "comment" : "\n     * If this flag is set, only versions strictly equal to the\n     * version specified shall match.\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_ANY",
    "type" : "int",
    "comment" : "\n     * If this flag is set, only versions strictly equal to the version specified shall match.\n     ",
    "links" : [ ]
  }, {
    "name" : "VENDOR_ANY",
    "type" : "int",
    "comment" : "\n     * If this flag is set, all vendors shall match.\n     ",
    "links" : [ ]
  }, {
    "name" : "HUB_ANY",
    "type" : "int",
    "comment" : "\n     * If this flag is set, any hub shall match.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<NanoAppFilter>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean versionsMatch(int versionRestrictionMask, int expected, int actual)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean testMatch(NanoAppInstanceInfo info)",
    "returnType" : "boolean",
    "comment" : "\n     * Test match method.\n     *\n     * @param info nano app instance info\n     *\n     * @return true if this is a match, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mAppId", "mAppVersion", "mVersionRestrictionMask", "mAppIdVendorMask", "mContextHubId", "FLAGS_VERSION_ANY", "FLAGS_VERSION_GREAT_THAN", "FLAGS_VERSION_LESS_THAN", "FLAGS_VERSION_STRICTLY_EQUAL", "APP_ANY", "VENDOR_ANY", "HUB_ANY", "CREATOR" ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "private boolean versionsMatch(int versionRestrictionMask, int expected, int actual)", "public boolean testMatch(NanoAppInstanceInfo info)", "public String toString()" ]
}