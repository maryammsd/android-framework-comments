{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/MessagePatternUtil.java",
  "packageName" : "android.icu.text",
  "className" : "MessagePatternUtil",
  "comment" : "\n * Utilities for working with a MessagePattern.\n * Intended for use in tools when convenience is more important than\n * minimizing runtime and object creations.\n *\n * <p>This class only has static methods.\n * Each of the nested classes is immutable and thread-safe.\n *\n * <p>This class and its nested classes are not intended for public subclassing.\n * @author Markus Scherer\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static MessageNode buildMessageNode(String patternString)",
    "returnType" : "MessageNode",
    "comment" : "\n     * Factory method, builds and returns a MessageNode from a MessageFormat pattern string.\n     * @param patternString a MessageFormat pattern string\n     * @return a MessageNode or a ComplexArgStyleNode\n     * @throws IllegalArgumentException if the MessagePattern is empty\n     *         or does not represent a MessageFormat pattern\n     ",
    "links" : [ ]
  }, {
    "name" : "public static MessageNode buildMessageNode(MessagePattern pattern)",
    "returnType" : "MessageNode",
    "comment" : "\n     * Factory method, builds and returns a MessageNode from a MessagePattern.\n     * @param pattern a parsed MessageFormat pattern string\n     * @return a MessageNode or a ComplexArgStyleNode\n     * @throws IllegalArgumentException if the MessagePattern is empty\n     *         or does not represent a MessageFormat pattern\n     ",
    "links" : [ ]
  }, {
    "name" : "private static MessageNode buildMessageNode(MessagePattern pattern, int start, int limit)",
    "returnType" : "MessageNode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ArgNode buildArgNode(MessagePattern pattern, int start, int limit)",
    "returnType" : "ArgNode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ComplexArgStyleNode buildChoiceStyleNode(MessagePattern pattern, int start, int limit)",
    "returnType" : "ComplexArgStyleNode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ComplexArgStyleNode buildPluralStyleNode(MessagePattern pattern, int start, int limit, MessagePattern.ArgType argType)",
    "returnType" : "ComplexArgStyleNode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ComplexArgStyleNode buildSelectStyleNode(MessagePattern pattern, int start, int limit)",
    "returnType" : "ComplexArgStyleNode",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static MessageNode buildMessageNode(String patternString)", "public static MessageNode buildMessageNode(MessagePattern pattern)", "private static MessageNode buildMessageNode(MessagePattern pattern, int start, int limit)", "private static ArgNode buildArgNode(MessagePattern pattern, int start, int limit)", "private static ComplexArgStyleNode buildChoiceStyleNode(MessagePattern pattern, int start, int limit)", "private static ComplexArgStyleNode buildPluralStyleNode(MessagePattern pattern, int start, int limit, MessagePattern.ArgType argType)", "private static ComplexArgStyleNode buildSelectStyleNode(MessagePattern pattern, int start, int limit)" ],
  "variableNames" : [ ]
}