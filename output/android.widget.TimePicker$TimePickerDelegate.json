{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/TimePicker.java",
  "packageName" : "android.widget",
  "className" : "TimePickerDelegate",
  "comment" : "\n     * A delegate interface that defined the public API of the TimePicker. Allows different\n     * TimePicker implementations. This would need to be implemented by the TimePicker delegates\n     * for the real behavior.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void setHour(@IntRange(from = 0, to = 23) int hour)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int getHour()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setMinute(@IntRange(from = 0, to = 59) int minute)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int getMinute()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setDate(@IntRange(from = 0, to = 23) int hour, @IntRange(from = 0, to = 59) int minute)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void autofill(AutofillValue value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " AutofillValue getAutofillValue()",
    "returnType" : "AutofillValue",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setIs24Hour(boolean is24Hour)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean is24Hour()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean validateInput()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setOnTimeChangedListener(OnTimeChangedListener onTimeChangedListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setAutoFillChangeListener(OnTimeChangedListener autoFillChangeListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setEnabled(boolean enabled)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isEnabled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int getBaseline()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Parcelable onSaveInstanceState(Parcelable superState)",
    "returnType" : "Parcelable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onRestoreInstanceState(Parcelable state)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void onPopulateAccessibilityEvent(AccessibilityEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " View getHourView()",
    "returnType" : "View",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " View getMinuteView()",
    "returnType" : "View",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " View getAmView()",
    "returnType" : "View",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " View getPmView()",
    "returnType" : "View",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void setHour(@IntRange(from = 0, to = 23) int hour)", " int getHour()", " void setMinute(@IntRange(from = 0, to = 59) int minute)", " int getMinute()", " void setDate(@IntRange(from = 0, to = 23) int hour, @IntRange(from = 0, to = 59) int minute)", " void autofill(AutofillValue value)", " AutofillValue getAutofillValue()", " void setIs24Hour(boolean is24Hour)", " boolean is24Hour()", " boolean validateInput()", " void setOnTimeChangedListener(OnTimeChangedListener onTimeChangedListener)", " void setAutoFillChangeListener(OnTimeChangedListener autoFillChangeListener)", " void setEnabled(boolean enabled)", " boolean isEnabled()", " int getBaseline()", " Parcelable onSaveInstanceState(Parcelable superState)", " void onRestoreInstanceState(Parcelable state)", " boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent event)", " void onPopulateAccessibilityEvent(AccessibilityEvent event)", " View getHourView()", " View getMinuteView()", " View getAmView()", " View getPmView()" ],
  "variableNames" : [ ]
}