{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/transition/PathMotion.java",
  "packageName" : "android.transition",
  "className" : "PathMotion",
  "comment" : "\n * This base class can be extended to provide motion along a Path to Transitions.\n *\n * <p>\n * Transitions such as {@link android.transition.ChangeBounds} move Views, typically\n * in a straight path between the start and end positions. Applications that desire to\n * have these motions move in a curve can change how Views interpolate in two dimensions\n * by extending PathMotion and implementing {@link #getPath(float, float, float, float)}.\n * </p>\n * <p>This may be used in XML as an element inside a transition.</p>\n * <pre>\n * {@code\n * <changeBounds>\n *     <pathMotion class=\"my.app.transition.MyPathMotion\"/>\n * </changeBounds>\n * }\n * </pre>\n ",
  "links" : [ "android.transition.ChangeBounds", "#getPath(float" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract Path getPath(float startX, float startY, float endX, float endY)",
    "returnType" : "Path",
    "comment" : "\n     * Provide a Path to interpolate between two points <code>(startX, startY)</code> and\n     * <code>(endX, endY)</code>. This allows controlled curved motion along two dimensions.\n     *\n     * @param startX The x coordinate of the starting point.\n     * @param startY The y coordinate of the starting point.\n     * @param endX   The x coordinate of the ending point.\n     * @param endY   The y coordinate of the ending point.\n     * @return A Path along which the points should be interpolated. The returned Path\n     * must start at point <code>(startX, startY)</code>, typically using\n     * {@link android.graphics.Path#moveTo(float, float)} and end at <code>(endX, endY)</code>.\n     ",
    "links" : [ "android.graphics.Path#moveTo(float" ]
  } ],
  "methodNames" : [ "public abstract Path getPath(float startX, float startY, float endX, float endY)" ],
  "variableNames" : [ ]
}