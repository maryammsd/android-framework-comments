{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/DhcpResults.java",
  "packageName" : "android.net",
  "className" : "DhcpResults",
  "comment" : "\n * A simple object for retrieving the results of a DHCP request.\n * Optimized (attempted) for that jni interface\n * TODO: remove this class and replace with other existing constructs\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ipAddress",
    "type" : "LinkAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "gateway",
    "type" : "InetAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dnsServers",
    "type" : "ArrayList<InetAddress>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "domains",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "serverAddress",
    "type" : "Inet4Address",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "vendorInfo",
    "type" : "String",
    "comment" : " Vendor specific information (from RFC 2132). ",
    "links" : [ ]
  }, {
    "name" : "leaseDuration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mtu",
    "type" : "int",
    "comment" : " Link MTU option. 0 means unset. ",
    "links" : [ ]
  }, {
    "name" : "serverHostName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "captivePortalApiUrl",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<DhcpResults>",
    "comment" : "\n     * Implement the Parcelable interface\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public StaticIpConfiguration toStaticIpConfiguration()",
    "returnType" : "StaticIpConfiguration",
    "comment" : "\n     * Create a {@link StaticIpConfiguration} based on the DhcpResults.\n     ",
    "links" : [ "android.net.StaticIpConfiguration" ]
  }, {
    "name" : "public List<RouteInfo> getRoutes(String iface)",
    "returnType" : "List<RouteInfo>",
    "comment" : "\n     * @see StaticIpConfiguration#getRoutes(String)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasMeteredHint()",
    "returnType" : "boolean",
    "comment" : "\n     * Test if this DHCP lease includes vendor hint that network link is\n     * metered, and sensitive to heavy data transfers.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static DhcpResults readFromParcel(Parcel in)",
    "returnType" : "DhcpResults",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setIpAddress(String addrString, int prefixLength)",
    "returnType" : "boolean",
    "comment" : " Not part of the superclass because they're only used by the JNI iterface to the DHCP daemon.",
    "links" : [ ]
  }, {
    "name" : "public boolean setGateway(String addrString)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean addDns(String addrString)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public LinkAddress getIpAddress()",
    "returnType" : "LinkAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setIpAddress(LinkAddress ipAddress)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InetAddress getGateway()",
    "returnType" : "InetAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setGateway(InetAddress gateway)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<InetAddress> getDnsServers()",
    "returnType" : "List<InetAddress>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addDnsServer(InetAddress server)",
    "returnType" : "void",
    "comment" : "\n     * Add a DNS server to this configuration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDomains()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDomains(String domains)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Inet4Address getServerAddress()",
    "returnType" : "Inet4Address",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setServerAddress(Inet4Address addr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getLeaseDuration()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setLeaseDuration(int duration)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getVendorInfo()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setVendorInfo(String info)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMtu()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMtu(int mtu)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getCaptivePortalApiUrl()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCaptivePortalApiUrl(String url)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "ipAddress", "gateway", "dnsServers", "domains", "serverAddress", "vendorInfo", "leaseDuration", "mtu", "serverHostName", "captivePortalApiUrl", "CREATOR" ],
  "methodNames" : [ "public StaticIpConfiguration toStaticIpConfiguration()", "public List<RouteInfo> getRoutes(String iface)", "public boolean hasMeteredHint()", "public void clear()", "public String toString()", "public boolean equals(Object obj)", "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()", "private static DhcpResults readFromParcel(Parcel in)", "public boolean setIpAddress(String addrString, int prefixLength)", "public boolean setGateway(String addrString)", "public boolean addDns(String addrString)", "public LinkAddress getIpAddress()", "public void setIpAddress(LinkAddress ipAddress)", "public InetAddress getGateway()", "public void setGateway(InetAddress gateway)", "public List<InetAddress> getDnsServers()", "public void addDnsServer(InetAddress server)", "public String getDomains()", "public void setDomains(String domains)", "public Inet4Address getServerAddress()", "public void setServerAddress(Inet4Address addr)", "public int getLeaseDuration()", "public void setLeaseDuration(int duration)", "public String getVendorInfo()", "public void setVendorInfo(String info)", "public int getMtu()", "public void setMtu(int mtu)", "public String getCaptivePortalApiUrl()", "public void setCaptivePortalApiUrl(String url)" ]
}