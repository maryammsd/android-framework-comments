{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ipsec/ike/IkeSaProposal.java",
  "packageName" : "android.net.ipsec.ike",
  "className" : "IkeSaProposal",
  "comment" : "\n * IkeSaProposal represents a proposed configuration to negotiate an IKE SA.\n *\n * <p>IkeSaProposal will contain cryptograhic algorithms and key generation materials for the\n * negotiation of an IKE SA.\n *\n * <p>User must provide at least one valid IkeSaProposal when they are creating a new IKE SA.\n *\n * @see <a href=\"https://tools.ietf.org/html/rfc7296#section-3.3\">RFC 7296, Internet Key Exchange\n *     Protocol Version 2 (IKEv2)</a>\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "PRF_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPseudorandomFunctions",
    "type" : "PrfTransform[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static IkeSaProposal fromPersistableBundle(@NonNull PersistableBundle in)",
    "returnType" : "IkeSaProposal",
    "comment" : "\n     * Constructs this object by deserializing a PersistableBundle\n     *\n     * <p>Constructed proposals are guaranteed to be valid, as checked by the IkeSaProposal.Builder.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public PersistableBundle toPersistableBundle()",
    "returnType" : "PersistableBundle",
    "comment" : "\n     * Serializes this object to a PersistableBundle\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Set<Integer> getSupportedEncryptionAlgorithms()",
    "returnType" : "Set<Integer>",
    "comment" : " Returns supported encryption algorithms for IKE SA proposal negotiation. ",
    "links" : [ ]
  }, {
    "name" : "public static Set<Integer> getSupportedIntegrityAlgorithms()",
    "returnType" : "Set<Integer>",
    "comment" : " Returns supported integrity algorithms for IKE SA proposal negotiation. ",
    "links" : [ ]
  }, {
    "name" : "public static Set<Integer> getSupportedPseudorandomFunctions()",
    "returnType" : "Set<Integer>",
    "comment" : " Returns supported pseudorandom functions for IKE SA proposal negotiation. ",
    "links" : [ ]
  }, {
    "name" : "public List<Integer> getPseudorandomFunctions()",
    "returnType" : "List<Integer>",
    "comment" : "\n     * Gets all proposed Pseudorandom Functions\n     *\n     * @return A list of the IANA-defined IDs for the proposed Pseudorandom Functions\n     ",
    "links" : [ ]
  }, {
    "name" : "public PrfTransform[] getPrfTransforms()",
    "returnType" : "PrfTransform[]",
    "comment" : "\n     * Gets all PRF Transforms\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Transform[] getAllTransforms()",
    "returnType" : "Transform[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isNegotiatedFrom(SaProposal reqProposal)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static IkeSaProposal fromPersistableBundle(@NonNull PersistableBundle in)", "public PersistableBundle toPersistableBundle()", "public static Set<Integer> getSupportedEncryptionAlgorithms()", "public static Set<Integer> getSupportedIntegrityAlgorithms()", "public static Set<Integer> getSupportedPseudorandomFunctions()", "public List<Integer> getPseudorandomFunctions()", "public PrfTransform[] getPrfTransforms()", "public Transform[] getAllTransforms()", "public boolean isNegotiatedFrom(SaProposal reqProposal)", "public int hashCode()", "public boolean equals(Object o)" ],
  "variableNames" : [ "PRF_KEY", "mPseudorandomFunctions" ]
}