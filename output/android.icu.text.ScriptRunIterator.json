{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/AnyTransliterator.java",
  "packageName" : "android.icu.text",
  "className" : "ScriptRunIterator",
  "comment" : "\n     * Returns a series of ranges corresponding to scripts. They will be\n     * of the form:\n     *\n     * ccccSScSSccccTTcTcccc   - c = common, S = first script, T = second\n     * |            |          - first run (start, limit)\n     *          |           |  - second run (start, limit)\n     *\n     * That is, the runs will overlap. The reason for this is so that a\n     * transliterator can consider common characters both before and after\n     * the scripts.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "text",
    "type" : "Replaceable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "textStart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "textLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "scriptCode",
    "type" : "int",
    "comment" : "\n         * The code of the current run, valid after next() returns.  May\n         * be UScript.INVALID_CODE if and only if the entire text is\n         * COMMON/INHERITED.\n         ",
    "links" : [ ]
  }, {
    "name" : "start",
    "type" : "int",
    "comment" : "\n         * The start of the run, inclusive, valid after next() returns.\n         ",
    "links" : [ ]
  }, {
    "name" : "limit",
    "type" : "int",
    "comment" : "\n         * The end of the run, exclusive, valid after next() returns.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean next()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if there are any more runs.  true is always\n         * returned at least once.  Upon return, the caller should\n         * examine scriptCode, start, and limit.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void adjustLimit(int delta)",
    "returnType" : "void",
    "comment" : "\n         * Adjusts internal indices for a change in the limit index of the\n         * given delta.  A positive delta means the limit has increased.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean next()", "public void adjustLimit(int delta)" ],
  "variableNames" : [ "text", "textStart", "textLimit", "scriptCode", "start", "limit" ]
}