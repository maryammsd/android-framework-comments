{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/credentials/CredentialProviderService.java",
  "packageName" : "android.service.credentials",
  "className" : "CredentialProviderService",
  "comment" : "\n * Service to be extended by credential providers, in order to return user credentials\n * to the framework.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "EXTRA_CREATE_CREDENTIAL_REQUEST",
    "type" : "String",
    "comment" : "\n     * Intent extra: The {@link android.credentials.CreateCredentialRequest} attached with\n     * the {@code pendingIntent} that is invoked when the user selects a {@link CreateEntry}\n     * returned as part of the {@link BeginCreateCredentialResponse}\n     *\n     * <p>\n     * Type: {@link android.service.credentials.CreateCredentialRequest}\n     ",
    "links" : [ "android.credentials.CreateCredentialRequest", "android.service.credentials.BeginCreateCredentialResponse", "android.service.credentials.CreateEntry", "android.service.credentials.CreateCredentialRequest" ]
  }, {
    "name" : "EXTRA_GET_CREDENTIAL_REQUEST",
    "type" : "String",
    "comment" : "\n     * Intent extra: The {@link GetCredentialRequest} attached with\n     * the {@code pendingIntent} that is invoked when the user selects a {@link CredentialEntry}\n     * returned as part of the {@link BeginGetCredentialResponse}\n     *\n     * <p>\n     * Type: {@link GetCredentialRequest}\n     ",
    "links" : [ "android.service.credentials.CredentialEntry", "android.service.credentials.GetCredentialRequest", "android.service.credentials.BeginGetCredentialResponse" ]
  }, {
    "name" : "EXTRA_CREATE_CREDENTIAL_RESPONSE",
    "type" : "String",
    "comment" : "\n     * Intent extra: The result of a create flow operation, to be set on finish of the\n     * {@link android.app.Activity} invoked through the {@code pendingIntent} set on\n     * a {@link CreateEntry}.\n     *\n     * <p>\n     * Type: {@link android.credentials.CreateCredentialResponse}\n     ",
    "links" : [ "android.service.credentials.CreateEntry", "android.credentials.CreateCredentialResponse", "android.app.Activity" ]
  }, {
    "name" : "EXTRA_GET_CREDENTIAL_RESPONSE",
    "type" : "String",
    "comment" : "\n     * Intent extra: The result of a get credential flow operation, to be set on finish of the\n     * {@link android.app.Activity} invoked through the {@code pendingIntent} set on\n     * a {@link CredentialEntry}.\n     *\n     * <p>\n     * Type: {@link android.credentials.GetCredentialResponse}\n     ",
    "links" : [ "android.service.credentials.CredentialEntry", "android.credentials.GetCredentialResponse", "android.app.Activity" ]
  }, {
    "name" : "EXTRA_BEGIN_GET_CREDENTIAL_RESPONSE",
    "type" : "String",
    "comment" : "\n     * Intent extra: The result of an authentication flow, to be set on finish of the\n     * {@link android.app.Activity} invoked through the {@link android.app.PendingIntent} set on\n     * an authentication {@link Action}, as part of the original\n     * {@link BeginGetCredentialResponse}. This result should contain the actual content,\n     * including credential entries and action entries, to be shown on the selector.\n     *\n     * <p>\n     * Type: {@link BeginGetCredentialResponse}\n     ",
    "links" : [ "android.service.credentials.Action", "android.app.PendingIntent", "android.service.credentials.BeginGetCredentialResponse", "android.app.Activity" ]
  }, {
    "name" : "EXTRA_GET_CREDENTIAL_EXCEPTION",
    "type" : "String",
    "comment" : "\n     * Intent extra: The failure exception set at the final stage of a get flow.\n     * This exception is set at the finishing result of the {@link android.app.Activity}\n     * invoked by the {@link PendingIntent} , when a user selects the {@link CredentialEntry}\n     * that contained the {@link PendingIntent} in question.\n     *\n     * <p>The result must be set through {@link android.app.Activity#setResult} as an intent extra\n     *\n     * <p>\n     * Type: {@link android.credentials.GetCredentialException}\n     ",
    "links" : [ "android.service.credentials.CredentialEntry", "android.credentials.GetCredentialException", "android.app.PendingIntent", "android.app.Activity", "android.app.Activity#setResult" ]
  }, {
    "name" : "EXTRA_CREATE_CREDENTIAL_EXCEPTION",
    "type" : "String",
    "comment" : "\n     * Intent extra: The failure exception set at the final stage of a create flow.\n     * This exception is set at the finishing result of the {@link android.app.Activity}\n     * invoked by the {@link PendingIntent} , when a user selects the {@link CreateEntry}\n     * that contained the {@link PendingIntent} in question.\n     *\n     * <p>\n     * Type: {@link android.credentials.CreateCredentialException}\n     ",
    "links" : [ "android.service.credentials.CreateEntry", "android.app.PendingIntent", "android.credentials.CreateCredentialException", "android.app.Activity" ]
  }, {
    "name" : "EXTRA_BEGIN_GET_CREDENTIAL_REQUEST",
    "type" : "String",
    "comment" : "\n     * Intent extra: The {@link BeginGetCredentialRequest} attached with\n     * the {@code pendingIntent} that is invoked when the user selects an\n     * authentication entry (intending to unlock the provider app) on the UI.\n     *\n     * <p>When a provider app receives a {@link BeginGetCredentialRequest} through the\n     * {@link CredentialProviderService#onBeginGetCredential} call, it can construct the\n     * {@link BeginGetCredentialResponse} with either an authentication {@link Action} (if the app\n     * is locked), or a {@link BeginGetCredentialResponse} (if the app is unlocked). In the former\n     * case, i.e. the app is locked, user will be shown the authentication action. When selected,\n     * the underlying {@link PendingIntent} will be invoked which will lead the user to provider's\n     * unlock activity. This pending intent will also contain the original\n     * {@link BeginGetCredentialRequest} to be retrieved and processed after the unlock\n     * flow is complete.\n     *\n     * <p>After the app is unlocked, the {@link BeginGetCredentialResponse} must be constructed\n     * using a {@link BeginGetCredentialResponse}, which must be set on an {@link Intent} as an\n     * intent extra against CredentialProviderService#EXTRA_CREDENTIALS_RESPONSE_CONTENT}.\n     * This intent should then be set as a result through {@link android.app.Activity#setResult}\n     * before finishing the activity.\n     *\n     * <p>\n     * Type: {@link BeginGetCredentialRequest}\n     ",
    "links" : [ "android.service.credentials.BeginGetCredentialRequest", "android.service.credentials.CredentialProviderService#onBeginGetCredential", "android.service.credentials.Action", "android.service.credentials.BeginGetCredentialResponse", "android.app.PendingIntent", "android.app.Activity#setResult" ]
  }, {
    "name" : "EXTRA_AUTOFILL_ID",
    "type" : "String",
    "comment" : "\n     * The key to autofillId associated with the requested credential option and the corresponding\n     * credential entry. The associated autofillId will be contained inside the candidate query\n     * bundle of {@link android.credentials.CredentialOption} if requested through the\n     * {@link com.android.credentialmanager.autofill.CredentialAutofillService}. The resulting\n     * credential entry will  contain the autofillId inside its framework extras intent.\n     *\n     * @hide\n     ",
    "links" : [ "android.credentials.CredentialOption", "com.android.credentialmanager.autofill.CredentialAutofillService" ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SERVICE_META_DATA",
    "type" : "String",
    "comment" : "\n      * Name under which a Credential Provider service component publishes information\n      * about itself.  This meta-data must reference an XML resource containing\n      * an\n      * <code>&lt;{@link android.R.styleable#CredentialProvider credential-provider}&gt;</code>\n      * tag.\n      *\n      * For example (AndroidManifest.xml):\n      * <code>\n      * <meta-data\n      *         android:name=\"android.credentials.provider\"\n      *          android:resource=\"@xml/provider\"/>\n      * </code>\n      *\n      * For example (xml/provider.xml):\n      * <code>\n      * <credential-provider xmlns:android=\"http://schemas.android.com/apk/res/android\"\n      *       android:settingsSubtitle=\"@string/providerSubtitle\">\n      *      <capabilities>\n      *          <capability>@string/passwords</capability>\n      *          <capability>@string/passkeys</capability>\n      *      </capabilities>\n      *      <capability name=\"android.credentials.TYPE_PASSWORD_CREDENTIAL\" />\n      *      <capability name=\"android.credentials.TYPE_PUBLIC_KEY_CREDENTIAL\" />\n      *  </credential-provider>\n      * </code>\n      ",
    "links" : [ "android.R.styleable#CredentialProvider" ]
  }, {
    "name" : "TEST_SYSTEM_PROVIDER_META_DATA_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The {@link Intent} that must be declared as handled by the service. The service must also\n     * require the {android.Manifest.permission#BIND_CREDENTIAL_PROVIDER_SERVICE} permission\n     * so that only the system can bind to it.\n     ",
    "links" : [ "android.app.PendingIntent" ]
  }, {
    "name" : "SYSTEM_SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The {@link Intent} that must be declared as handled by a system credential provider\n     * service.\n     *\n     * <p>The service must also require the\n     * {android.Manifest.permission#BIND_CREDENTIAL_PROVIDER_SERVICE} permission\n     * so that only the system can bind to it.\n     *\n     * @hide\n     ",
    "links" : [ "android.app.PendingIntent" ]
  }, {
    "name" : "mInterface",
    "type" : "ICredentialProviderService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onCreate()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final IBinder onBind(@NonNull Intent intent)",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void onBeginGetCredential(@NonNull BeginGetCredentialRequest request, @NonNull CancellationSignal cancellationSignal, @NonNull OutcomeReceiver<BeginGetCredentialResponse, GetCredentialException> callback)",
    "returnType" : "void",
    "comment" : "\n     * Called by the android system to retrieve user credentials from the connected provider\n     * service.\n     *\n     * <p>This API denotes a query stage request for getting user's credentials from a given\n     * credential provider. The request contains a list of\n     * {@link BeginGetCredentialOption} that have parameters to be used for\n     * populating candidate credentials, as a list of {@link CredentialEntry} to be set\n     * on the {@link BeginGetCredentialResponse}. This list is then shown to the user on a\n     * selector.\n     *\n     * <p>If a {@link PendingIntent} is set on a {@link CredentialEntry}, and the user selects that\n     * entry, a {@link GetCredentialRequest} with all parameters needed to get the actual\n     * {@link android.credentials.Credential} will be sent as part of the {@link Intent} fired\n     * through the {@link PendingIntent}.\n     * @param request the request for the provider to handle\n     * @param cancellationSignal signal for providers to listen to any cancellation requests from\n     *                           the android system\n     * @param callback object used to relay the response of the credentials request\n     ",
    "links" : [ "android.credentials.Credential", "android.service.credentials.CredentialEntry", "android.service.credentials.GetCredentialRequest", "android.service.credentials.BeginGetCredentialOption", "android.service.credentials.BeginGetCredentialResponse", "android.app.PendingIntent" ]
  }, {
    "name" : "public abstract void onBeginCreateCredential(@NonNull BeginCreateCredentialRequest request, @NonNull CancellationSignal cancellationSignal, @NonNull OutcomeReceiver<BeginCreateCredentialResponse, CreateCredentialException> callback)",
    "returnType" : "void",
    "comment" : "\n     * Called by the android system to create a credential.\n     * @param request The credential creation request for the provider to handle.\n     * @param cancellationSignal Signal for providers to listen to any cancellation requests from\n     *                           the android system.\n     * @param callback Object used to relay the response of the credential creation request.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onClearCredentialState(@NonNull ClearCredentialStateRequest request, @NonNull CancellationSignal cancellationSignal, @NonNull OutcomeReceiver<Void, ClearCredentialStateException> callback)",
    "returnType" : "void",
    "comment" : "\n     * Called by the android system to clear the credential state.\n     *\n     * This api isinvoked by developers after users sign out of an app, with an intention to\n     * clear any stored credential session that providers have retained.\n     *\n     * As a provider, you must clear any credential state, if maintained. For e.g. a provider may\n     * have stored an active credential session that is used to limit or rank sign-in options for\n     * future credential retrieval flows. When a user signs out of the app, such state should be\n     * cleared and an exhaustive list of credentials must be presented to the user on subsequent\n     * credential retrieval flows.\n     *\n     * @param request The clear credential request for the provider to handle.\n     * @param cancellationSignal Signal for providers to listen to any cancellation requests from\n     *                           the android system.\n     * @param callback Object used to relay the result of the request.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onCreate()", "public final IBinder onBind(@NonNull Intent intent)", "public abstract void onBeginGetCredential(@NonNull BeginGetCredentialRequest request, @NonNull CancellationSignal cancellationSignal, @NonNull OutcomeReceiver<BeginGetCredentialResponse, GetCredentialException> callback)", "public abstract void onBeginCreateCredential(@NonNull BeginCreateCredentialRequest request, @NonNull CancellationSignal cancellationSignal, @NonNull OutcomeReceiver<BeginCreateCredentialResponse, CreateCredentialException> callback)", "public abstract void onClearCredentialState(@NonNull ClearCredentialStateRequest request, @NonNull CancellationSignal cancellationSignal, @NonNull OutcomeReceiver<Void, ClearCredentialStateException> callback)" ],
  "variableNames" : [ "EXTRA_CREATE_CREDENTIAL_REQUEST", "EXTRA_GET_CREDENTIAL_REQUEST", "EXTRA_CREATE_CREDENTIAL_RESPONSE", "EXTRA_GET_CREDENTIAL_RESPONSE", "EXTRA_BEGIN_GET_CREDENTIAL_RESPONSE", "EXTRA_GET_CREDENTIAL_EXCEPTION", "EXTRA_CREATE_CREDENTIAL_EXCEPTION", "EXTRA_BEGIN_GET_CREDENTIAL_REQUEST", "EXTRA_AUTOFILL_ID", "TAG", "SERVICE_META_DATA", "TEST_SYSTEM_PROVIDER_META_DATA_KEY", "mHandler", "SERVICE_INTERFACE", "SYSTEM_SERVICE_INTERFACE", "mInterface" ]
}