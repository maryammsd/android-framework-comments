{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/impl/CameraExtensionSessionImpl.java",
  "packageName" : "android.hardware.camera2.impl",
  "className" : "CameraExtensionSessionImpl",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "PREVIEW_QUEUE_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCameraDevice",
    "type" : "CameraDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImageExtender",
    "type" : "IImageCaptureExtenderImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreviewExtender",
    "type" : "IPreviewExtenderImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandlerThread",
    "type" : "HandlerThread",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallbacks",
    "type" : "StateCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedPreviewSizes",
    "type" : "List<Size>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitializeHandler",
    "type" : "InitializeSessionHandler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedRequestKeys",
    "type" : "Set<CaptureRequest.Key>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedResultKeys",
    "type" : "Set<CaptureResult.Key>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatsAggregator",
    "type" : "ExtensionSessionStatsAggregator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCaptureResultsSupported",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCaptureSession",
    "type" : "CameraCaptureSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCameraRepeatingSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientRepeatingRequestSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCameraBurstSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientCaptureSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientPostviewSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRepeatingRequestImageReader",
    "type" : "ImageReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBurstCaptureImageReader",
    "type" : "ImageReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStubCaptureImageReader",
    "type" : "ImageReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRepeatingRequestImageWriter",
    "type" : "ImageWriter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRepeatingRequestImageCallback",
    "type" : "CameraOutputImageCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBurstCaptureImageCallback",
    "type" : "CameraOutputImageCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImageJpegProcessor",
    "type" : "CameraExtensionJpegProcessor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImageProcessor",
    "type" : "ICaptureProcessorImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreviewImageProcessor",
    "type" : "CameraExtensionForwardProcessor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreviewRequestUpdateProcessor",
    "type" : "IRequestUpdateProcessorImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreviewProcessorType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialized",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionClosed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInternalRepeatingRequestEnabled",
    "type" : "boolean",
    "comment" : " will do so internally.",
    "links" : [ ]
  }, {
    "name" : "mExtensionType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterfaceLock",
    "type" : "Object",
    "comment" : " Lock to synchronize cross-thread access to device public interface",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static int nativeGetSurfaceFormat(Surface surface)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static CameraExtensionSessionImpl createCameraExtensionSession(@NonNull android.hardware.camera2.impl.CameraDeviceImpl cameraDevice, @NonNull Map<String, CameraCharacteristics> characteristicsMap, @NonNull Context ctx, @NonNull ExtensionSessionConfiguration config, int sessionId, @NonNull IBinder token) throws CameraAccessException, RemoteException",
    "returnType" : "CameraExtensionSessionImpl",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private void initializeRepeatingRequestPipeline() throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void initializeBurstCapturePipeline() throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void finishPipelineInitialization() throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized void initialize() throws CameraAccessException, RemoteException",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public CameraDevice getDevice()",
    "returnType" : "CameraDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StillCaptureLatency getRealtimeStillCaptureLatency() throws CameraAccessException",
    "returnType" : "StillCaptureLatency",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int setRepeatingRequest(@NonNull CaptureRequest request, @NonNull Executor executor, @NonNull ExtensionCaptureCallback listener) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ArrayList<CaptureStageImpl> compileInitialRequestList()",
    "returnType" : "ArrayList<CaptureStageImpl>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private List<CaptureRequest> createBurstRequest(CameraDevice cameraDevice, List<CaptureStageImpl> captureStageList, CaptureRequest clientRequest, Surface target, int captureTemplate, Map<CaptureRequest, Integer> captureMap)",
    "returnType" : "List<CaptureRequest>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private CaptureRequest createRequest(CameraDevice cameraDevice, List<CaptureStageImpl> captureStageList, Surface target, int captureTemplate, CaptureRequest clientRequest) throws CameraAccessException",
    "returnType" : "CaptureRequest",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private CaptureRequest createRequest(CameraDevice cameraDevice, List<CaptureStageImpl> captureStageList, Surface target, int captureTemplate) throws CameraAccessException",
    "returnType" : "CaptureRequest",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int capture(@NonNull CaptureRequest request, @NonNull Executor executor, @NonNull ExtensionCaptureCallback listener) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void validateCaptureRequestTargets(@NonNull CaptureRequest request)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopRepeating() throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void close() throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void commitStats()",
    "returnType" : "void",
    "comment" : "\n     * Called by {@link CameraDeviceImpl} right before the capture session is closed, and before it\n     * calls {@link #release}\n     *\n     * @hide\n     ",
    "links" : [ "android.hardware.camera2.impl.CameraDeviceImpl", "#release" ]
  }, {
    "name" : "private void setInitialCaptureRequest(List<CaptureStageImpl> captureStageList, InitialRequestHandler requestHandler) throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int setRepeatingRequest(CaptureStageImpl captureStage, CameraCaptureSession.CaptureCallback requestHandler) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int setRepeatingRequest(CaptureStageImpl captureStage, CameraCaptureSession.CaptureCallback requestHandler, CaptureRequest clientRequest) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void release(boolean skipCloseNotification)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void notifyConfigurationFailure()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void notifyConfigurationSuccess()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private CameraMetadataNative initializeFilteredResults(TotalCaptureResult result)",
    "returnType" : "CameraMetadataNative",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Size findSmallestAspectMatchedSize(@NonNull List<Size> sizes, @NonNull Size arSize)",
    "returnType" : "Size",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ParcelImage initializeParcelImage(Image img)",
    "returnType" : "ParcelImage",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static List<CaptureBundle> initializeParcelable(HashMap<Integer, Pair<Image, TotalCaptureResult>> captureMap, Integer jpegOrientation, Byte jpegQuality)",
    "returnType" : "List<CaptureBundle>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static int nativeGetSurfaceFormat(Surface surface)", "public static CameraExtensionSessionImpl createCameraExtensionSession(@NonNull android.hardware.camera2.impl.CameraDeviceImpl cameraDevice, @NonNull Map<String, CameraCharacteristics> characteristicsMap, @NonNull Context ctx, @NonNull ExtensionSessionConfiguration config, int sessionId, @NonNull IBinder token) throws CameraAccessException, RemoteException", "private void initializeRepeatingRequestPipeline() throws RemoteException", "private void initializeBurstCapturePipeline() throws RemoteException", "private void finishPipelineInitialization() throws RemoteException", "public synchronized void initialize() throws CameraAccessException, RemoteException", "public CameraDevice getDevice()", "public StillCaptureLatency getRealtimeStillCaptureLatency() throws CameraAccessException", "public int setRepeatingRequest(@NonNull CaptureRequest request, @NonNull Executor executor, @NonNull ExtensionCaptureCallback listener) throws CameraAccessException", "private ArrayList<CaptureStageImpl> compileInitialRequestList()", "private List<CaptureRequest> createBurstRequest(CameraDevice cameraDevice, List<CaptureStageImpl> captureStageList, CaptureRequest clientRequest, Surface target, int captureTemplate, Map<CaptureRequest, Integer> captureMap)", "private CaptureRequest createRequest(CameraDevice cameraDevice, List<CaptureStageImpl> captureStageList, Surface target, int captureTemplate, CaptureRequest clientRequest) throws CameraAccessException", "private CaptureRequest createRequest(CameraDevice cameraDevice, List<CaptureStageImpl> captureStageList, Surface target, int captureTemplate) throws CameraAccessException", "public int capture(@NonNull CaptureRequest request, @NonNull Executor executor, @NonNull ExtensionCaptureCallback listener) throws CameraAccessException", "private void validateCaptureRequestTargets(@NonNull CaptureRequest request)", "public void stopRepeating() throws CameraAccessException", "public void close() throws CameraAccessException", "public void commitStats()", "private void setInitialCaptureRequest(List<CaptureStageImpl> captureStageList, InitialRequestHandler requestHandler) throws CameraAccessException", "private int setRepeatingRequest(CaptureStageImpl captureStage, CameraCaptureSession.CaptureCallback requestHandler) throws CameraAccessException", "private int setRepeatingRequest(CaptureStageImpl captureStage, CameraCaptureSession.CaptureCallback requestHandler, CaptureRequest clientRequest) throws CameraAccessException", "public void release(boolean skipCloseNotification)", "private void notifyConfigurationFailure()", "private void notifyConfigurationSuccess()", "private CameraMetadataNative initializeFilteredResults(TotalCaptureResult result)", "private static Size findSmallestAspectMatchedSize(@NonNull List<Size> sizes, @NonNull Size arSize)", "private static ParcelImage initializeParcelImage(Image img)", "private static List<CaptureBundle> initializeParcelable(HashMap<Integer, Pair<Image, TotalCaptureResult>> captureMap, Integer jpegOrientation, Byte jpegQuality)" ],
  "variableNames" : [ "PREVIEW_QUEUE_SIZE", "TAG", "mExecutor", "mCameraDevice", "mImageExtender", "mPreviewExtender", "mHandler", "mHandlerThread", "mCallbacks", "mSupportedPreviewSizes", "mInitializeHandler", "mSessionId", "mSupportedRequestKeys", "mSupportedResultKeys", "mStatsAggregator", "mToken", "mCaptureResultsSupported", "mCaptureSession", "mCameraRepeatingSurface", "mClientRepeatingRequestSurface", "mCameraBurstSurface", "mClientCaptureSurface", "mClientPostviewSurface", "mRepeatingRequestImageReader", "mBurstCaptureImageReader", "mStubCaptureImageReader", "mRepeatingRequestImageWriter", "mRepeatingRequestImageCallback", "mBurstCaptureImageCallback", "mImageJpegProcessor", "mImageProcessor", "mPreviewImageProcessor", "mPreviewRequestUpdateProcessor", "mPreviewProcessorType", "mInitialized", "mSessionClosed", "mInternalRepeatingRequestEnabled", "mExtensionType", "mContext", "mInterfaceLock" ]
}