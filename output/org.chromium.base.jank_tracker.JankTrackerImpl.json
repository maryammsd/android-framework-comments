{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/jank_tracker/JankTrackerImpl.java",
  "packageName" : "org.chromium.base.jank_tracker",
  "className" : "JankTrackerImpl",
  "comment" : "\n * Class for recording janky frame metrics for a specific Activity.\n *\n * It should be constructed when the activity is created, recording starts and stops automatically\n * based on activity state. When the activity is being destroyed {@link #destroy()} should be called\n * to clear the activity state observer. All methods should be called from the UI thread.\n ",
  "links" : [ "#destroy()" ],
  "variables" : [ {
    "name" : "IS_TRACKING_ENABLED",
    "type" : "boolean",
    "comment" : " We use the DEADLINE field in the Android FrameMetrics which was added in S.",
    "links" : [ ]
  }, {
    "name" : "mController",
    "type" : "JankTrackerStateController",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReportingScheduler",
    "type" : "JankReportingScheduler",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private boolean constructInternalPreController(JankReportingScheduler scheduler)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void constructInternalFinal(JankTrackerStateController controller)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startTrackingScenario(@JankScenario int scenario)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishTrackingScenario(@JankScenario int scenario)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishTrackingScenario(@JankScenario int scenario, long endScenarioTimeNs)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : " Stops listening for Activity state changes. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private boolean constructInternalPreController(JankReportingScheduler scheduler)", "private void constructInternalFinal(JankTrackerStateController controller)", "public void startTrackingScenario(@JankScenario int scenario)", "public void finishTrackingScenario(@JankScenario int scenario)", "public void finishTrackingScenario(@JankScenario int scenario, long endScenarioTimeNs)", "public void destroy()" ],
  "variableNames" : [ "IS_TRACKING_ENABLED", "mController", "mReportingScheduler" ]
}