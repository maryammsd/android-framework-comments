{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/watchdog/ExplicitHealthCheckService.java",
  "packageName" : "android.service.watchdog",
  "className" : "ExplicitHealthCheckService",
  "comment" : "\n * A service to provide packages supporting explicit health checks and route checks to these\n * packages on behalf of the package watchdog.\n *\n * <p>To extend this class, you must declare the service in your manifest file with the\n * {@link android.Manifest.permission#BIND_EXPLICIT_HEALTH_CHECK_SERVICE} permission,\n * and include an intent filter with the {@link #SERVICE_INTERFACE} action. In adddition,\n * your implementation must live in\n * {@link PackageManager#getServicesSystemSharedLibraryPackageName()}.\n * For example:</p>\n * <pre>\n *     &lt;service android:name=\".FooExplicitHealthCheckService\"\n *             android:exported=\"true\"\n *             android:priority=\"100\"\n *             android:permission=\"android.permission.BIND_EXPLICIT_HEALTH_CHECK_SERVICE\"&gt;\n *         &lt;intent-filter&gt;\n *             &lt;action android:name=\"android.service.watchdog.ExplicitHealthCheckService\" /&gt;\n *         &lt;/intent-filter&gt;\n *     &lt;/service&gt;\n * </pre>\n * @hide\n ",
  "links" : [ "#SERVICE_INTERFACE", "android.Manifest.permission#BIND_EXPLICIT_HEALTH_CHECK_SERVICE", "android.content.pm.PackageManager#getServicesSystemSharedLibraryPackageName()" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_SUPPORTED_PACKAGES",
    "type" : "String",
    "comment" : "\n     * {@link Bundle} key for a {@link List} of {@link PackageConfig} value.\n     *\n     * {@hide}\n     ",
    "links" : [ "android.os.Bundle", "PackageConfig", "java.util.ArrayList" ]
  }, {
    "name" : "EXTRA_REQUESTED_PACKAGES",
    "type" : "String",
    "comment" : "\n     * {@link Bundle} key for a {@link List} of {@link String} value.\n     *\n     * {@hide}\n     ",
    "links" : [ "android.os.Bundle", "String", "java.util.ArrayList" ]
  }, {
    "name" : "EXTRA_HEALTH_CHECK_PASSED_PACKAGE",
    "type" : "String",
    "comment" : "\n     * {@link Bundle} key for a {@link String} value.\n     *\n     * {@hide}\n     ",
    "links" : [ "android.os.Bundle", "String" ]
  }, {
    "name" : "SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The Intent action that a service must respond to. Add it to the intent filter of the service\n     * in its manifest.\n     ",
    "links" : [ ]
  }, {
    "name" : "BIND_PERMISSION",
    "type" : "String",
    "comment" : "\n     * The permission that a service must require to ensure that only Android system can bind to it.\n     * If this permission is not enforced in the AndroidManifest of the service, the system will\n     * skip that service.\n     ",
    "links" : [ ]
  }, {
    "name" : "mWrapper",
    "type" : "ExplicitHealthCheckServiceWrapper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "RemoteCallback",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onRequestHealthCheck(@NonNull String packageName)",
    "returnType" : "void",
    "comment" : "\n     * Called when the system requests an explicit health check for {@code packageName}.\n     *\n     * <p> When {@code packageName} passes the check, implementors should call\n     * {@link #notifyHealthCheckPassed} to inform the system.\n     *\n     * <p> It could take many hours before a {@code packageName} passes a check and implementors\n     * should never drop requests unless {@link onCancel} is called or the service dies.\n     *\n     * <p> Requests should not be queued and additional calls while expecting a result for\n     * {@code packageName} should have no effect.\n     ",
    "links" : [ "onCancel", "#notifyHealthCheckPassed" ]
  }, {
    "name" : "public abstract void onCancelHealthCheck(@NonNull String packageName)",
    "returnType" : "void",
    "comment" : "\n     * Called when the system cancels the explicit health check request for {@code packageName}.\n     * Should do nothing if there are is no active request for {@code packageName}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract List<PackageConfig> onGetSupportedPackages()",
    "returnType" : "List<PackageConfig>",
    "comment" : "\n     * Called when the system requests for all the packages supporting explicit health checks. The\n     * system may request an explicit health check for any of these packages with\n     * {@link #onRequestHealthCheck}.\n     *\n     * @return all packages supporting explicit health checks\n     ",
    "links" : [ "#onRequestHealthCheck" ]
  }, {
    "name" : "public abstract List<String> onGetRequestedPackages()",
    "returnType" : "List<String>",
    "comment" : "\n     * Called when the system requests for all the packages that it has currently requested\n     * an explicit health check for.\n     *\n     * @return all packages expecting an explicit health check result\n     ",
    "links" : [ ]
  }, {
    "name" : "public final IBinder onBind(@NonNull Intent intent)",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCallback(@Nullable RemoteCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Sets {@link RemoteCallback}, for testing purpose.\n     *\n     * @hide\n     ",
    "links" : [ "android.os.RemoteCallback" ]
  }, {
    "name" : "public final void notifyHealthCheckPassed(@NonNull String packageName)",
    "returnType" : "void",
    "comment" : "\n     * Implementors should call this to notify the system when explicit health check passes\n     * for {@code packageName};\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onRequestHealthCheck(@NonNull String packageName)", "public abstract void onCancelHealthCheck(@NonNull String packageName)", "public abstract List<PackageConfig> onGetSupportedPackages()", "public abstract List<String> onGetRequestedPackages()", "public final IBinder onBind(@NonNull Intent intent)", "public void setCallback(@Nullable RemoteCallback callback)", "public final void notifyHealthCheckPassed(@NonNull String packageName)" ],
  "variableNames" : [ "TAG", "EXTRA_SUPPORTED_PACKAGES", "EXTRA_REQUESTED_PACKAGES", "EXTRA_HEALTH_CHECK_PASSED_PACKAGE", "SERVICE_INTERFACE", "BIND_PERMISSION", "mWrapper", "mHandler", "mCallback" ]
}