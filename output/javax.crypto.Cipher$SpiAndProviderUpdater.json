{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/crypto/Cipher.java",
  "packageName" : "javax.crypto",
  "className" : "SpiAndProviderUpdater",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "initSpiLock",
    "type" : "Object",
    "comment" : "\n         * Lock held while the SPI is initializing.\n         ",
    "links" : [ ]
  }, {
    "name" : "specifiedProvider",
    "type" : "Provider",
    "comment" : "\n         * The provider specified when instance created.\n         ",
    "links" : [ ]
  }, {
    "name" : "specifiedSpi",
    "type" : "CipherSpi",
    "comment" : "\n         * The SPI implementation.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void setCipherSpiImplAndProvider(CipherSpi cipherSpi, Provider provider)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " CipherSpiAndProvider updateAndGetSpiAndProvider(InitParams initParams, CipherSpi spiImpl, Provider provider) throws InvalidKeyException, InvalidAlgorithmParameterException",
    "returnType" : "CipherSpiAndProvider",
    "comment" : "\n         * Makes sure a CipherSpi that matches this type is selected. If\n         * {@code key != null} then it assumes that a suitable provider exists for\n         * this instance (used by {@link Cipher#init}. If the {@code initParams} is passed\n         * in, then the {@code CipherSpi} returned will be initialized.\n         *\n         * @throws InvalidKeyException if the specified key cannot be used to\n         *                             initialize this cipher.\n         ",
    "links" : [ "javax.crypto.Cipher#init" ]
  }, {
    "name" : " CipherSpiAndProvider updateAndGetSpiAndProvider(CipherSpi spiImpl, Provider provider)",
    "returnType" : "CipherSpiAndProvider",
    "comment" : "\n         * Convenience call when the Key is not available.\n         ",
    "links" : [ ]
  }, {
    "name" : " CipherSpi getCurrentSpi(CipherSpi spiImpl)",
    "returnType" : "CipherSpi",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " void setCipherSpiImplAndProvider(CipherSpi cipherSpi, Provider provider)", " CipherSpiAndProvider updateAndGetSpiAndProvider(InitParams initParams, CipherSpi spiImpl, Provider provider) throws InvalidKeyException, InvalidAlgorithmParameterException", " CipherSpiAndProvider updateAndGetSpiAndProvider(CipherSpi spiImpl, Provider provider)", " CipherSpi getCurrentSpi(CipherSpi spiImpl)" ],
  "variableNames" : [ "initSpiLock", "specifiedProvider", "specifiedSpi" ]
}