{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/number/NumberSkeletonImpl.java",
  "packageName" : "android.icu.number",
  "className" : "BlueprintHelpers",
  "comment" : "\n     * Utility class for methods for processing stems and options that cannot be interpreted literally.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "private static boolean parseExponentWidthOption(StringSegment segment, MacroProps macros)",
    "returnType" : "boolean",
    "comment" : " @return Whether we successfully found and parsed an exponent width option. ",
    "links" : [ ]
  }, {
    "name" : "private static void generateExponentWidthOption(int minExponentDigits, StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean parseExponentSignOption(StringSegment segment, MacroProps macros)",
    "returnType" : "boolean",
    "comment" : " @return Whether we successfully found and parsed an exponent sign option. ",
    "links" : [ ]
  }, {
    "name" : "private static void parseCurrencyOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void generateCurrencyOption(Currency currency, StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void parseMeasureUnitOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : " \"measure-unit/\" is deprecated in favour of \"unit/\".",
    "links" : [ ]
  }, {
    "name" : "private static void parseMeasurePerUnitOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : " \"per-measure-unit/\" is deprecated in favour of \"unit/\".",
    "links" : [ ]
  }, {
    "name" : "private static void parseIdentifierUnitOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "\n         * Parses unit identifiers like \"meter-per-second\" and \"foot-and-inch\", as\n         * specified via a \"unit/\" concise skeleton.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static void parseUnitUsageOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void parseFractionStem(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void generateFractionStem(int minFrac, int maxFrac, StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void parseDigitsStem(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void generateDigitsStem(int minSig, int maxSig, StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void parseScientificStem(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void parseIntegerStem(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean parseFracSigOption(StringSegment segment, MacroProps macros)",
    "returnType" : "boolean",
    "comment" : " @return Whether we successfully found and parsed a frac-sig option. ",
    "links" : [ ]
  }, {
    "name" : "private static boolean parseTrailingZeroOption(StringSegment segment, MacroProps macros)",
    "returnType" : "boolean",
    "comment" : " @return Whether we successfully found and parsed a trailing zero option. ",
    "links" : [ ]
  }, {
    "name" : "private static void parseIncrementOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void generateIncrementOption(BigDecimal increment, StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void parseIntegerWidthOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void generateIntegerWidthOption(int minInt, int maxInt, StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void parseNumberingSystemOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void generateNumberingSystemOption(NumberingSystem ns, StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void parseScaleOption(StringSegment segment, MacroProps macros)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void generateScaleOption(Scale scale, StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static boolean parseExponentWidthOption(StringSegment segment, MacroProps macros)", "private static void generateExponentWidthOption(int minExponentDigits, StringBuilder sb)", "private static boolean parseExponentSignOption(StringSegment segment, MacroProps macros)", "private static void parseCurrencyOption(StringSegment segment, MacroProps macros)", "private static void generateCurrencyOption(Currency currency, StringBuilder sb)", "private static void parseMeasureUnitOption(StringSegment segment, MacroProps macros)", "private static void parseMeasurePerUnitOption(StringSegment segment, MacroProps macros)", "private static void parseIdentifierUnitOption(StringSegment segment, MacroProps macros)", "private static void parseUnitUsageOption(StringSegment segment, MacroProps macros)", "private static void parseFractionStem(StringSegment segment, MacroProps macros)", "private static void generateFractionStem(int minFrac, int maxFrac, StringBuilder sb)", "private static void parseDigitsStem(StringSegment segment, MacroProps macros)", "private static void generateDigitsStem(int minSig, int maxSig, StringBuilder sb)", "private static void parseScientificStem(StringSegment segment, MacroProps macros)", "private static void parseIntegerStem(StringSegment segment, MacroProps macros)", "private static boolean parseFracSigOption(StringSegment segment, MacroProps macros)", "private static boolean parseTrailingZeroOption(StringSegment segment, MacroProps macros)", "private static void parseIncrementOption(StringSegment segment, MacroProps macros)", "private static void generateIncrementOption(BigDecimal increment, StringBuilder sb)", "private static void parseIntegerWidthOption(StringSegment segment, MacroProps macros)", "private static void generateIntegerWidthOption(int minInt, int maxInt, StringBuilder sb)", "private static void parseNumberingSystemOption(StringSegment segment, MacroProps macros)", "private static void generateNumberingSystemOption(NumberingSystem ns, StringBuilder sb)", "private static void parseScaleOption(StringSegment segment, MacroProps macros)", "private static void generateScaleOption(Scale scale, StringBuilder sb)" ],
  "variableNames" : [ ]
}