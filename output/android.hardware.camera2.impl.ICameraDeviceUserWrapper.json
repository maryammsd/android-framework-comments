{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/impl/ICameraDeviceUserWrapper.java",
  "packageName" : "android.hardware.camera2.impl",
  "className" : "ICameraDeviceUserWrapper",
  "comment" : "\n * A wrapper around ICameraDeviceUser.\n *\n * Mainly used to convert ServiceSpecificExceptions to the correct\n * checked / unchecked exception.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mRemoteDevice",
    "type" : "ICameraDeviceUser",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void unlinkToDeath(IBinder.DeathRecipient recipient, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void disconnect()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SubmitInfo submitRequest(CaptureRequest request, boolean streaming) throws CameraAccessException",
    "returnType" : "SubmitInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SubmitInfo submitRequestList(CaptureRequest[] requestList, boolean streaming) throws CameraAccessException",
    "returnType" : "SubmitInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long cancelRequest(int requestId) throws CameraAccessException",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void beginConfigure() throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] endConfigure(int operatingMode, CameraMetadataNative sessionParams, long startTimeMs) throws CameraAccessException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void deleteStream(int streamId) throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int createStream(OutputConfiguration outputConfiguration) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int createInputStream(int width, int height, int format, boolean isMultiResolution) throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Surface getInputSurface() throws CameraAccessException",
    "returnType" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CameraMetadataNative createDefaultRequest(int templateId) throws CameraAccessException",
    "returnType" : "CameraMetadataNative",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CameraMetadataNative getCameraInfo() throws CameraAccessException",
    "returnType" : "CameraMetadataNative",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void waitUntilIdle() throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isSessionConfigurationSupported(SessionConfiguration sessionConfig) throws CameraAccessException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long flush() throws CameraAccessException",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void prepare(int streamId) throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void tearDown(int streamId) throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void prepare2(int maxCount, int streamId) throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateOutputConfiguration(int streamId, OutputConfiguration config) throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICameraOfflineSession switchToOffline(ICameraDeviceCallbacks cbs, int[] offlineOutputIds) throws CameraAccessException",
    "returnType" : "ICameraOfflineSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finalizeOutputConfigurations(int streamId, OutputConfiguration deferredConfig) throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCameraAudioRestriction(int mode) throws CameraAccessException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getGlobalAudioRestriction() throws CameraAccessException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void unlinkToDeath(IBinder.DeathRecipient recipient, int flags)", "public void disconnect()", "public SubmitInfo submitRequest(CaptureRequest request, boolean streaming) throws CameraAccessException", "public SubmitInfo submitRequestList(CaptureRequest[] requestList, boolean streaming) throws CameraAccessException", "public long cancelRequest(int requestId) throws CameraAccessException", "public void beginConfigure() throws CameraAccessException", "public int[] endConfigure(int operatingMode, CameraMetadataNative sessionParams, long startTimeMs) throws CameraAccessException", "public void deleteStream(int streamId) throws CameraAccessException", "public int createStream(OutputConfiguration outputConfiguration) throws CameraAccessException", "public int createInputStream(int width, int height, int format, boolean isMultiResolution) throws CameraAccessException", "public Surface getInputSurface() throws CameraAccessException", "public CameraMetadataNative createDefaultRequest(int templateId) throws CameraAccessException", "public CameraMetadataNative getCameraInfo() throws CameraAccessException", "public void waitUntilIdle() throws CameraAccessException", "public boolean isSessionConfigurationSupported(SessionConfiguration sessionConfig) throws CameraAccessException", "public long flush() throws CameraAccessException", "public void prepare(int streamId) throws CameraAccessException", "public void tearDown(int streamId) throws CameraAccessException", "public void prepare2(int maxCount, int streamId) throws CameraAccessException", "public void updateOutputConfiguration(int streamId, OutputConfiguration config) throws CameraAccessException", "public ICameraOfflineSession switchToOffline(ICameraDeviceCallbacks cbs, int[] offlineOutputIds) throws CameraAccessException", "public void finalizeOutputConfigurations(int streamId, OutputConfiguration deferredConfig) throws CameraAccessException", "public void setCameraAudioRestriction(int mode) throws CameraAccessException", "public int getGlobalAudioRestriction() throws CameraAccessException" ],
  "variableNames" : [ "mRemoteDevice" ]
}