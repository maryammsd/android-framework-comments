{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/cert/LDAPCertStoreParameters.java",
  "packageName" : "java.security.cert",
  "className" : "LDAPCertStoreParameters",
  "comment" : "\n * Parameters used as input for the LDAP {@code CertStore} algorithm.\n * <p>\n * This class is used to provide necessary configuration parameters (server\n * name and port number) to implementations of the LDAP {@code CertStore}\n * algorithm. However, if you are retrieving certificates or CRLs from\n * an ldap URI as specified by RFC 5280, use the\n * {@link java.security.cert.URICertStoreParameters URICertStoreParameters}\n * instead as the URI may contain additional information such as the\n * distinguished name that will help the LDAP CertStore find the specific\n * certificates and CRLs.\n * <p>\n * <b>Concurrent Access</b>\n * <p>\n * Unless otherwise specified, the methods defined in this class are not\n * thread-safe. Multiple threads that need to access a single\n * object concurrently should synchronize amongst themselves and\n * provide the necessary locking. Multiple threads each manipulating\n * separate objects need not synchronize.\n *\n * @since       1.4\n * @author      Steve Hanna\n * @see         CertStore\n ",
  "links" : [ "java.security.cert.URICertStoreParameters" ],
  "variables" : [ {
    "name" : "LDAP_DEFAULT_PORT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "port",
    "type" : "int",
    "comment" : "\n     * the port number of the LDAP server\n     ",
    "links" : [ ]
  }, {
    "name" : "serverName",
    "type" : "String",
    "comment" : "\n     * the DNS name of the LDAP server\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getServerName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the DNS name of the LDAP server.\n     *\n     * @return the name (not {@code null})\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPort()",
    "returnType" : "int",
    "comment" : "\n     * Returns the port number of the LDAP server.\n     *\n     * @return the port number\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "\n     * Returns a copy of this object. Changes to the copy will not affect\n     * the original and vice versa.\n     * <p>\n     * Note: this method currently performs a shallow copy of the object\n     * (simply calls {@code Object.clone()}). This may be changed in a\n     * future revision to perform a deep copy if new parameters are added\n     * that should not be shared.\n     *\n     * @return the copy\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a formatted string describing the parameters.\n     *\n     * @return a formatted string describing the parameters\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getServerName()", "public int getPort()", "public Object clone()", "public String toString()" ],
  "variableNames" : [ "LDAP_DEFAULT_PORT", "port", "serverName" ]
}