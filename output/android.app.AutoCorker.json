{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/PropertyInvalidatedCache.java",
  "packageName" : "android.app",
  "className" : "AutoCorker",
  "comment" : "\n     * Time-based automatic corking helper. This class allows providers of cached data to\n     * amortize the cost of cache invalidations by corking the cache immediately after a\n     * modification (instructing clients to bypass the cache temporarily) and automatically\n     * uncork after some period of time has elapsed.\n     *\n     * It's better to use explicit cork and uncork pairs that tighly surround big batches of\n     * invalidations, but it's not always practical to tell where these invalidation batches\n     * might occur. AutoCorker's time-based corking is a decent alternative.\n     ",
  "variables" : [ {
    "name" : "DEFAULT_AUTO_CORK_DELAY_MS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPropertyName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoCorkDelayMs",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUncorkDeadlineMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void autoCork()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleMessage(Message msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Handler getHandlerLocked()",
    "returnType" : "Handler",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "DEFAULT_AUTO_CORK_DELAY_MS", "mPropertyName", "mAutoCorkDelayMs", "mLock", "mUncorkDeadlineMs", "mHandler" ],
  "methodNames" : [ "public void autoCork()", "private void handleMessage(Message msg)", "private Handler getHandlerLocked()" ]
}