{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/animation/AnimationHandler.java",
  "packageName" : "android.animation",
  "className" : "AnimationFrameCallbackProvider",
  "comment" : "\n     * The intention for having this interface is to increase the testability of ValueAnimator.\n     * Specifically, we can have a custom implementation of the interface below and provide\n     * timing pulse without using Choreographer. That way we could use any arbitrary interval for\n     * our timing pulse in the tests.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void postFrameCallback(Choreographer.FrameCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void postCommitCallback(Runnable runnable)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long getFrameTime()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long getFrameDelay()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setFrameDelay(long delay)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " void postFrameCallback(Choreographer.FrameCallback callback)", " void postCommitCallback(Runnable runnable)", " long getFrameTime()", " long getFrameDelay()", " void setFrameDelay(long delay)" ],
  "variableNames" : [ ]
}