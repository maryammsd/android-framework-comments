{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/ondevicepersonalization/OnDevicePersonalizationManager.java",
  "packageName" : "android.adservices.ondevicepersonalization",
  "className" : "OnDevicePersonalizationManager",
  "comment" : "\n * OnDevicePersonalizationManager provides APIs for apps to load an\n * {@link IsolatedService} in an isolated process and interact with it.\n *\n * An app can request an {@link IsolatedService} to generate content for display\n * within an {@link android.view.SurfaceView} within the app's view hierarchy, and also write\n * persistent results to on-device storage which can be consumed by Federated Analytics for\n * cross-device statistical analysis or by Federated Learning for model training. The displayed\n * content and the persistent output are both not directly accessible by the calling app.\n ",
  "links" : [ "android.view.SurfaceView", "android.adservices.ondevicepersonalization.IsolatedService" ],
  "variables" : [ {
    "name" : "ON_DEVICE_PERSONALIZATION_SERVICE",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "INTENT_FILTER_ACTION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ODP_MANAGING_SERVICE_PACKAGE_SUFFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ALT_ODP_MANAGING_SERVICE_PACKAGE_SUFFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sLogger",
    "type" : "LoggerFactory.Logger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceBinder",
    "type" : "AbstractServiceBinder<IOnDevicePersonalizationManagingService>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void execute(@NonNull ComponentName service, @NonNull PersistableBundle params, @NonNull @CallbackExecutor Executor executor, @NonNull OutcomeReceiver<ExecuteResult, Exception> receiver)",
    "returnType" : "void",
    "comment" : "\n     * Executes an {@link IsolatedService} in the OnDevicePersonalization sandbox. The\n     * platform binds to the specified {@link IsolatedService} in an isolated process\n     * and calls {@link IsolatedWorker#onExecute(ExecuteInput, android.os.OutcomeReceiver)}\n     * with the caller-provided parameters. When the {@link IsolatedService} finishes execution,\n     * the platform returns tokens that refer to the results from the service to the caller.\n     * These tokens can be subsequently used to display results in a\n     * {@link android.view.SurfaceView} within the calling app.\n     *\n     * @param service The {@link ComponentName} of the {@link IsolatedService}.\n     * @param params a {@link PersistableBundle} that is passed from the calling app to the\n     *     {@link IsolatedService}. The expected contents of this parameter are defined\n     *     by the{@link IsolatedService}. The platform does not interpret this parameter.\n     * @param executor the {@link Executor} on which to invoke the callback.\n     * @param receiver This returns a {@link ExecuteResult} object on success or an\n     *     {@link Exception} on failure. If the\n     *     {@link IsolatedService} returned a {@link RenderingConfig} to be displayed,\n     *     {@link ExecuteResult#getSurfacePackageToken()} will return a non-null\n     *     {@link SurfacePackageToken}.\n     *     The {@link SurfacePackageToken} object can be used in a subsequent\n     *     {@link #requestSurfacePackage(SurfacePackageToken, IBinder, int, int, int, Executor,\n     *     OutcomeReceiver)} call to display the result in a view. The returned\n     *     {@link SurfacePackageToken} may be null to indicate that no output is expected to be\n     *     displayed for this request. If the {@link IsolatedService} has returned any output data\n     *     and the calling app is allowlisted to receive data from this service, the\n     *     {@link ExecuteResult#getOutputData()} will return a non-null byte array.\n     *\n     *     In case of an error, the receiver returns one of the following exceptions:\n     *     Returns a {@link android.content.pm.PackageManager.NameNotFoundException} if the handler\n     *     package is not installed or does not have a valid ODP manifest.\n     *     Returns {@link ClassNotFoundException} if the handler class is not found.\n     *     Returns an {@link OnDevicePersonalizationException} if execution of the handler fails.\n     ",
    "links" : [ "android.content.pm.PackageManager.NameNotFoundException", "android.view.SurfaceView", "android.adservices.ondevicepersonalization.RenderingConfig", "#getOutputData()", "android.adservices.ondevicepersonalization.IsolatedWorker#onExecute(ExecuteInput", "android.content.ComponentName", "#requestSurfacePackage(SurfacePackageToken", "#getSurfacePackageToken()", "android.annotation.CallbackExecutor", "Exception", "android.adservices.ondevicepersonalization.SurfacePackageToken", "android.adservices.ondevicepersonalization.IsolatedService", "android.os.PersistableBundle", "android.adservices.ondevicepersonalization.OnDevicePersonalizationException", "ExecuteResult", "ClassNotFoundException" ]
  }, {
    "name" : "public void requestSurfacePackage(@NonNull SurfacePackageToken surfacePackageToken, @NonNull IBinder surfaceViewHostToken, int displayId, int width, int height, @NonNull @CallbackExecutor Executor executor, @NonNull OutcomeReceiver<SurfaceControlViewHost.SurfacePackage, Exception> receiver)",
    "returnType" : "void",
    "comment" : "\n     * Requests a {@link android.view.SurfaceControlViewHost.SurfacePackage} to be inserted into a\n     * {@link android.view.SurfaceView} inside the calling app. The surface package will contain an\n     * {@link android.view.View} with the content from a result of a prior call to\n     * {@code #execute(ComponentName, PersistableBundle, Executor, OutcomeReceiver)} running in\n     * the OnDevicePersonalization sandbox.\n     *\n     * @param surfacePackageToken a reference to a {@link SurfacePackageToken} returned by a prior\n     *     call to {@code #execute(ComponentName, PersistableBundle, Executor, OutcomeReceiver)}.\n     * @param surfaceViewHostToken the hostToken of the {@link android.view.SurfaceView}, which is\n     *     returned by {@link android.view.SurfaceView#getHostToken()} after the\n     *     {@link android.view.SurfaceView} has been added to the view hierarchy.\n     * @param displayId the integer ID of the logical display on which to display the\n     *     {@link android.view.SurfaceControlViewHost.SurfacePackage}, returned by\n     *     {@code Context.getDisplay().getDisplayId()}.\n     * @param width the width of the {@link android.view.SurfaceControlViewHost.SurfacePackage}\n     *     in pixels.\n     * @param height the height of the {@link android.view.SurfaceControlViewHost.SurfacePackage}\n     *     in pixels.\n     * @param executor the {@link Executor} on which to invoke the callback\n     * @param receiver This either returns a\n     *     {@link android.view.SurfaceControlViewHost.SurfacePackage} on success, or\n     *     {@link Exception} on failure. The exception type is\n     *     {@link OnDevicePersonalizationException} if execution of the handler fails.\n     ",
    "links" : [ "android.view.SurfaceControlViewHost.SurfacePackage", "android.adservices.ondevicepersonalization.SurfacePackageToken", "android.view.SurfaceView", "android.view.View", "android.adservices.ondevicepersonalization.OnDevicePersonalizationException", "android.annotation.CallbackExecutor", "android.view.SurfaceView#getHostToken()", "Exception" ]
  }, {
    "name" : "private Exception createException(int errorCode, int isolatedServiceErrorCode, String message)",
    "returnType" : "Exception",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void logApiCallStats(IOnDevicePersonalizationManagingService service, int apiName, long latencyMillis, int responseCode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void execute(@NonNull ComponentName service, @NonNull PersistableBundle params, @NonNull @CallbackExecutor Executor executor, @NonNull OutcomeReceiver<ExecuteResult, Exception> receiver)", "public void requestSurfacePackage(@NonNull SurfacePackageToken surfacePackageToken, @NonNull IBinder surfaceViewHostToken, int displayId, int width, int height, @NonNull @CallbackExecutor Executor executor, @NonNull OutcomeReceiver<SurfaceControlViewHost.SurfacePackage, Exception> receiver)", "private Exception createException(int errorCode, int isolatedServiceErrorCode, String message)", "private void logApiCallStats(IOnDevicePersonalizationManagingService service, int apiName, long latencyMillis, int responseCode)" ],
  "variableNames" : [ "ON_DEVICE_PERSONALIZATION_SERVICE", "INTENT_FILTER_ACTION", "ODP_MANAGING_SERVICE_PACKAGE_SUFFIX", "ALT_ODP_MANAGING_SERVICE_PACKAGE_SUFFIX", "TAG", "sLogger", "mServiceBinder", "mContext" ]
}