{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/Person.java",
  "packageName" : "android.app",
  "className" : "Person",
  "comment" : "\n * Provides an immutable reference to an entity that appears repeatedly on different surfaces of the\n * platform. For example, this could represent the sender of a message.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mName",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUri",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKey",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsBot",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsImportant",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Person>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder toBuilder()",
    "returnType" : "Builder",
    "comment" : " Creates and returns a new {@link Builder} initialized with this Person's data. ",
    "links" : [ "Builder" ]
  }, {
    "name" : "public String getUri()",
    "returnType" : "String",
    "comment" : "\n     * @return the uri provided for this person or {@code null} if no Uri was provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getName()",
    "returnType" : "CharSequence",
    "comment" : "\n     * @return the name provided for this person or {@code null} if no name was provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Icon getIcon()",
    "returnType" : "Icon",
    "comment" : "\n     * @return the icon provided for this person or {@code null} if no icon was provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getKey()",
    "returnType" : "String",
    "comment" : "\n     * @return the key provided for this person or {@code null} if no key was provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBot()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether this Person is a machine.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isImportant()",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether this Person is important.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String resolveToLegacyUri()",
    "returnType" : "String",
    "comment" : "\n     * @return the URI associated with this person, or \"name:mName\" otherwise\n     *  @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Uri getIconUri()",
    "returnType" : "Uri",
    "comment" : "\n     * @return the URI associated with the {@link #getIcon()} for this person, iff the icon exists\n     * and is URI based.\n     * @hide\n     ",
    "links" : [ "#getIcon()" ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, @WriteFlags int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void visitUris(@NonNull Consumer<Uri> visitor)",
    "returnType" : "void",
    "comment" : "\n     * Note all {@link Uri} that are referenced internally, with the expectation that Uri permission\n     * grants will need to be issued to ensure the recipient of this object is able to render its\n     * contents.\n     * See b/281044385 for more context and examples about what happens when this isn't done\n     * correctly.\n     *\n     * @hide\n     ",
    "links" : [ "android.net.Uri" ]
  } ],
  "methodNames" : [ "public Builder toBuilder()", "public String getUri()", "public CharSequence getName()", "public Icon getIcon()", "public String getKey()", "public boolean isBot()", "public boolean isImportant()", "public String resolveToLegacyUri()", "public Uri getIconUri()", "public boolean equals(@Nullable Object obj)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(Parcel dest, @WriteFlags int flags)", "public void visitUris(@NonNull Consumer<Uri> visitor)" ],
  "variableNames" : [ "mName", "mIcon", "mUri", "mKey", "mIsBot", "mIsImportant", "CREATOR" ]
}