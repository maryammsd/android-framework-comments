{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/stub/ImsSmsImplBase.java",
  "packageName" : "android.telephony.ims.stub",
  "className" : "ImsSmsImplBase",
  "comment" : "\n * Base implementation for SMS over IMS.\n *\n * Any service wishing to provide SMS over IMS should extend this class and implement all methods\n * that the service supports.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SEND_STATUS_OK",
    "type" : "int",
    "comment" : "\n     * Message was sent successfully.\n     ",
    "links" : [ ]
  }, {
    "name" : "SEND_STATUS_ERROR",
    "type" : "int",
    "comment" : "\n     * IMS provider failed to send the message and platform should not retry falling back to sending\n     * the message using the radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "SEND_STATUS_ERROR_RETRY",
    "type" : "int",
    "comment" : "\n     * IMS provider failed to send the message and platform should retry again after setting TP-RD\n     * bit to high.\n     ",
    "links" : [ ]
  }, {
    "name" : "SEND_STATUS_ERROR_FALLBACK",
    "type" : "int",
    "comment" : "\n     * IMS provider failed to send the message and platform should retry falling back to sending\n     * the message using the radio.\n     ",
    "links" : [ ]
  }, {
    "name" : "DELIVER_STATUS_OK",
    "type" : "int",
    "comment" : "\n     * Message was delivered successfully.\n     ",
    "links" : [ ]
  }, {
    "name" : "DELIVER_STATUS_ERROR_GENERIC",
    "type" : "int",
    "comment" : "\n     * Message was not delivered.\n     ",
    "links" : [ ]
  }, {
    "name" : "DELIVER_STATUS_ERROR_NO_MEMORY",
    "type" : "int",
    "comment" : "\n     * Message was not delivered due to lack of memory.\n     ",
    "links" : [ ]
  }, {
    "name" : "DELIVER_STATUS_ERROR_REQUEST_NOT_SUPPORTED",
    "type" : "int",
    "comment" : "\n     * Message was not delivered as the request is not supported.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_REPORT_STATUS_OK",
    "type" : "int",
    "comment" : "\n     * Status Report was set successfully.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_REPORT_STATUS_ERROR",
    "type" : "int",
    "comment" : "\n     * Error while setting status report.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESULT_NO_NETWORK_ERROR",
    "type" : "int",
    "comment" : " Should match SmsResponse.NO_ERROR_CODE",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : " Lock for feature synchronization",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "IImsSmsListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void registerSmsListener(IImsSmsListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Registers a listener responsible for handling tasks like delivering messages.\n     *\n     * @param listener listener to register.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sendSms(int token, @IntRange(from = 0, to = 65535) int messageRef, @SmsMessage.Format String format, String smsc, boolean isRetry, byte[] pdu)",
    "returnType" : "void",
    "comment" : "\n     * This method will be triggered by the platform when the user attempts to send an SMS. This\n     * method should be implemented by the IMS providers to provide implementation of sending an SMS\n     * over IMS.\n     *\n     * @param token unique token generated by the platform that should be used when triggering\n     *             callbacks for this specific message.\n     * @param messageRef the message reference, which may be 1 byte if it is in\n     *     {@link SmsMessage#FORMAT_3GPP} format (see TS.123.040) or 2 bytes if it is in\n     *     {@link SmsMessage#FORMAT_3GPP2} format (see 3GPP2 C.S0015-B).\n     * @param format the format of the message.\n     * @param smsc the Short Message Service Center address.\n     * @param isRetry whether it is a retry of an already attempted message or not.\n     * @param pdu PDU representing the contents of the message.\n     ",
    "links" : [ "android.telephony.SmsMessage#FORMAT_3GPP2", "android.telephony.SmsMessage#FORMAT_3GPP" ]
  }, {
    "name" : "public void onMemoryAvailable(int token)",
    "returnType" : "void",
    "comment" : "\n     * This method will be triggered by the platform when memory becomes available to receive SMS\n     * after a memory full event. This method should be implemented by IMS providers to\n     * send RP-SMMA notification from SMS Relay Layer to server over IMS as per section 7.3.2 of\n     * TS 124.11. Once the RP-SMMA Notification is sent to the network. The network will deliver all\n     * the pending messages which failed due to Unavailability of Memory.\n     *\n     * @param token unique token generated in {@link ImsSmsDispatcher#onMemoryAvailable(void)} that\n     *  should be used when triggering callbacks for this specific message.\n     *\n     * @hide\n     ",
    "links" : [ "#onMemoryAvailable(void)" ]
  }, {
    "name" : "public void acknowledgeSms(int token, @IntRange(from = 0, to = 65535) int messageRef, @DeliverStatusResult int result)",
    "returnType" : "void",
    "comment" : "\n     * This method will be triggered by the platform after\n     * {@link #onSmsReceived(int, String, byte[])} has been called to deliver the result to the IMS\n     * provider.\n     *\n     * If the framework needs to provide the PDU used to acknowledge the SMS,\n     * {@link #acknowledgeSms(int, int, int, byte[])} will be called.\n     *\n     * @param token token provided in {@link #onSmsReceived(int, String, byte[])}\n     * @param messageRef the message reference, which may be 1 byte if it is in\n     *     {@link SmsMessage#FORMAT_3GPP} format (see TS.123.040) or 2 bytes if it is in\n     *     {@link SmsMessage#FORMAT_3GPP2} format (see 3GPP2 C.S0015-B).\n     * @param result result of delivering the message.\n     ",
    "links" : [ "android.telephony.SmsMessage#FORMAT_3GPP2", "android.telephony.SmsMessage#FORMAT_3GPP", "#acknowledgeSms(int", "#onSmsReceived(int" ]
  }, {
    "name" : "public void acknowledgeSms(int token, @IntRange(from = 0, to = 65535) int messageRef, @DeliverStatusResult int result, @NonNull byte[] pdu)",
    "returnType" : "void",
    "comment" : "\n     * This method will be called by the platform after\n     * {@link #onSmsReceived(int, String, byte[])} has been called to acknowledge an incoming SMS.\n     *\n     * This method is only called in cases where the framework needs to provide the PDU such as the\n     * case where we provide the Short Message Transfer Layer PDU (see 3GPP TS 23.040). Otherwise,\n     * {@link #acknowledgeSms(int, int, int)} will be used.\n     *\n     * @param token token provided in {@link #onSmsReceived(int, String, byte[])}\n     * @param messageRef the message reference, which may be 1 byte if it is in\n     *     {@link SmsMessage#FORMAT_3GPP} format (see TS.123.040) or 2 bytes if it is in\n     *     {@link SmsMessage#FORMAT_3GPP2} format (see 3GPP2 C.S0015-B).\n     * @param result result of delivering the message.\n     * @param pdu PDU representing the contents of the message.\n     ",
    "links" : [ "android.telephony.SmsMessage#FORMAT_3GPP2", "android.telephony.SmsMessage#FORMAT_3GPP", "#acknowledgeSms(int", "#onSmsReceived(int" ]
  }, {
    "name" : "public void acknowledgeSmsReport(int token, @IntRange(from = 0, to = 65535) int messageRef, @StatusReportResult int result)",
    "returnType" : "void",
    "comment" : "\n     * This method will be triggered by the platform after\n     * {@link #onSmsStatusReportReceived(int, int, String, byte[])} or\n     * {@link #onSmsStatusReportReceived(int, String, byte[])} has been called to provide the\n     * result to the IMS provider.\n     *\n     * @param token token provided in {@link #onSmsStatusReportReceived(int, int, String, byte[])}\n     *              or {@link #onSmsStatusReportReceived(int, String, byte[])}\n     * @param messageRef the message reference, which may be 1 byte if it is in\n     *     {@link SmsMessage#FORMAT_3GPP} format (see TS.123.040) or 2 bytes if it is in\n     *     {@link SmsMessage#FORMAT_3GPP2} format (see 3GPP2 C.S0015-B).\n     * @param result result of delivering the message.\n     ",
    "links" : [ "#onSmsStatusReportReceived(int", "android.telephony.SmsMessage#FORMAT_3GPP2", "android.telephony.SmsMessage#FORMAT_3GPP" ]
  }, {
    "name" : "public final void onSmsReceived(int token, @SmsMessage.Format String format, byte[] pdu) throws RuntimeException",
    "returnType" : "void",
    "comment" : "\n     * This method should be triggered by the IMS providers when there is an incoming message. The\n     * platform will deliver the message to the messages database and notify the IMS provider of the\n     * result by calling {@link #acknowledgeSms(int, int, int)}.\n     *\n     * This method must not be called before {@link #onReady()} is called or the call will fail. If\n     * the platform is not available, {@link #acknowledgeSms(int, int, int)} will be called with the\n     * {@link #DELIVER_STATUS_ERROR_GENERIC} result code.\n     * @param token unique token generated by IMS providers that the platform will use to trigger\n     *              callbacks for this message.\n     * @param format the format of the message.\n     * @param pdu PDU representing the contents of the message.\n     * @throws RuntimeException if called before {@link #onReady()} is triggered.\n     ",
    "links" : [ "#onReady()", "#acknowledgeSms(int", "#DELIVER_STATUS_ERROR_GENERIC" ]
  }, {
    "name" : "public final void onSendSmsResultSuccess(int token, @IntRange(from = 0, to = 65535) int messageRef) throws RuntimeException",
    "returnType" : "void",
    "comment" : "\n     * This method should be triggered by the IMS providers when an outgoing SMS message has been\n     * sent successfully.\n     *\n     * @param token token provided in {@link #sendSms(int, int, String, String, boolean, byte[])}\n     * @param messageRef the message reference, which may be 1 byte if it is in\n     *     {@link SmsMessage#FORMAT_3GPP} format (see TS.123.040) or 2 bytes if it is in\n     *     {@link SmsMessage#FORMAT_3GPP2} format (see 3GPP2 C.S0015-B).\n     *\n     * @throws RuntimeException if called before {@link #onReady()} is triggered or if the\n     * connection to the framework is not available. If this happens attempting to send the SMS\n     * should be aborted.\n     ",
    "links" : [ "#onReady()", "android.telephony.SmsMessage#FORMAT_3GPP2", "android.telephony.SmsMessage#FORMAT_3GPP", "#sendSms(int" ]
  }, {
    "name" : "public final void onSendSmsResult(int token, @IntRange(from = 0, to = 65535) int messageRef, @SendStatusResult int status, @SmsManager.Result int reason) throws RuntimeException",
    "returnType" : "void",
    "comment" : "\n     * This method should be triggered by the IMS providers to pass the result of the sent message\n     * to the platform.\n     *\n     * @param token token provided in {@link #sendSms(int, int, String, String, boolean, byte[])}\n     * @param messageRef the message reference, which may be 1 byte if it is in\n     *     {@link SmsMessage#FORMAT_3GPP} format (see TS.123.040) or 2 bytes if it is in\n     *     {@link SmsMessage#FORMAT_3GPP2} format (see 3GPP2 C.S0015-B).\n     * @param status result of sending the SMS.\n     * @param reason reason in case status is failure.\n     *\n     * @throws RuntimeException if called before {@link #onReady()} is triggered or if the\n     * connection to the framework is not available. If this happens attempting to send the SMS\n     * should be aborted.\n     * @deprecated Use {@link #onSendSmsResultSuccess(int, int)} or\n     * {@link #onSendSmsResultError(int, int, int, int, int)} to notify the framework of the SMS\n     * send result.\n     ",
    "links" : [ "#onSendSmsResultSuccess(int", "#onReady()", "android.telephony.SmsMessage#FORMAT_3GPP2", "android.telephony.SmsMessage#FORMAT_3GPP", "#onSendSmsResultError(int", "#sendSms(int" ]
  }, {
    "name" : "public final void onSendSmsResultError(int token, @IntRange(from = 0, to = 65535) int messageRef, @SendStatusResult int status, @SmsManager.Result int reason, int networkErrorCode) throws RuntimeException",
    "returnType" : "void",
    "comment" : "\n     * This method should be triggered by the IMS providers when an outgoing message fails to be\n     * sent due to an error generated while processing the message or after being sent to the\n     * network.\n     *\n     * @param token token provided in {@link #sendSms(int, int, String, String, boolean, byte[])}\n     * @param messageRef the message reference, which may be 1 byte if it is in\n     *     {@link SmsMessage#FORMAT_3GPP} format (see TS.123.040) or 2 bytes if it is in\n     *     {@link SmsMessage#FORMAT_3GPP2} format (see 3GPP2 C.S0015-B).\n     * @param status result of sending the SMS.\n     * @param networkErrorCode the error code reported by the carrier network if sending this SMS\n     *  has resulted in an error or {@link #RESULT_NO_NETWORK_ERROR} if no network error was\n     *  generated. See 3GPP TS 24.011 Section 7.3.4 for valid error codes and more information.\n     *\n     * @throws RuntimeException if called before {@link #onReady()} is triggered or if the\n     * connection to the framework is not available. If this happens attempting to send the SMS\n     * should be aborted.\n     ",
    "links" : [ "#RESULT_NO_NETWORK_ERROR", "#onReady()", "android.telephony.SmsMessage#FORMAT_3GPP2", "android.telephony.SmsMessage#FORMAT_3GPP", "#sendSms(int" ]
  }, {
    "name" : "public final void onMemoryAvailableResult(int token, @SendStatusResult int result, int networkErrorCode) throws RuntimeException",
    "returnType" : "void",
    "comment" : "\n     * This API is used to report the result of sending\n     * RP-SMMA to framework based on received network responses(RP-ACK,\n     * RP-ERROR or SIP error).\n     *\n     * @param token provided in {@link #onMemoryAvailable()}.\n     * @param result based on RP-ACK or RP_ERROR\n     * @param networkErrorCode the error code reported by the carrier\n     * network if sending this SMS has resulted in an error or\n     * {@link #RESULT_NO_NETWORK_ERROR} if no network error was generated. See\n     * 3GPP TS 24.011 Section 7.3.4 for valid error codes and more\n     * information.\n     *\n     * @hide\n     ",
    "links" : [ "#RESULT_NO_NETWORK_ERROR", "#onMemoryAvailable()" ]
  }, {
    "name" : "public final void onSmsStatusReportReceived(int token, @IntRange(from = 0, to = 65535) int messageRef, @SmsMessage.Format String format, byte[] pdu) throws RuntimeException",
    "returnType" : "void",
    "comment" : "\n     * This method should be triggered by the IMS providers when the status report of the sent\n     * message is received. The platform will handle the report and notify the IMS provider of the\n     * result by calling {@link #acknowledgeSmsReport(int, int, int)}.\n     *\n     * This method must not be called before {@link #onReady()} is called or the call will fail. If\n     * the platform is not available, {@link #acknowledgeSmsReport(int, int, int)} will be called\n     * with the {@link #STATUS_REPORT_STATUS_ERROR} result code.\n     * @param token token provided in {@link #sendSms(int, int, String, String, boolean, byte[])}\n     * @param messageRef the message reference, which may be 1 byte if it is in\n     *     {@link SmsMessage#FORMAT_3GPP} format or 2 bytes if it is in\n     *     {@link SmsMessage#FORMAT_3GPP2} format (see 3GPP2 C.S0015-B).\n     * @param format the format of the message.\n     * @param pdu PDU representing the content of the status report.\n     * @throws RuntimeException if called before {@link #onReady()} is triggered\n     *\n     * @deprecated Use {@link #onSmsStatusReportReceived(int, String, byte[])} instead without the\n     * message reference.\n     ",
    "links" : [ "#STATUS_REPORT_STATUS_ERROR", "#onReady()", "#onSmsStatusReportReceived(int", "android.telephony.SmsMessage#FORMAT_3GPP2", "android.telephony.SmsMessage#FORMAT_3GPP", "#acknowledgeSmsReport(int", "#sendSms(int" ]
  }, {
    "name" : "public final void onSmsStatusReportReceived(int token, @SmsMessage.Format String format, byte[] pdu) throws RuntimeException",
    "returnType" : "void",
    "comment" : "\n     * This method should be triggered by the IMS providers when the status report of the sent\n     * message is received. The platform will handle the report and notify the IMS provider of the\n     * result by calling {@link #acknowledgeSmsReport(int, int, int)}.\n     *\n     * This method must not be called before {@link #onReady()} is called or the call will fail. If\n     * the platform is not available, {@link #acknowledgeSmsReport(int, int, int)} will be called\n     * with the {@link #STATUS_REPORT_STATUS_ERROR} result code.\n     * @param token unique token generated by IMS providers that the platform will use to trigger\n     *              callbacks for this message.\n     * @param format the format of the message.\n     * @param pdu PDU representing the content of the status report.\n     * @throws RuntimeException if called before {@link #onReady()} is triggered\n     ",
    "links" : [ "#STATUS_REPORT_STATUS_ERROR", "#onReady()", "#acknowledgeSmsReport(int" ]
  }, {
    "name" : "public String getSmsFormat()",
    "returnType" : "String",
    "comment" : "\n     * Returns the SMS format that the ImsService expects.\n     *\n     * @return  The expected format of the SMS messages.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onReady()",
    "returnType" : "void",
    "comment" : "\n     * Called when ImsSmsImpl has been initialized and communication with the framework is set up.\n     * Any attempt by this class to access the framework before this method is called will return\n     * with a {@link RuntimeException}.\n     ",
    "links" : [ "RuntimeException" ]
  }, {
    "name" : "public final void setDefaultExecutor(@NonNull Executor executor)",
    "returnType" : "void",
    "comment" : "\n     * Set default Executor for ImsSmsImplBase.\n     *\n     * @param executor The default executor for the framework to use when executing the methods\n     * overridden by the implementation of ImsSms.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Executor getExecutor()",
    "returnType" : "Executor",
    "comment" : "\n     * Get Executor from ImsSmsImplBase.\n     * If there is no settings for the executor, all ImsSmsImplBase method calls will use\n     * Runnable::run as default\n     *\n     * @return an Executor used to execute methods in ImsSms called remotely by the framework.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final void registerSmsListener(IImsSmsListener listener)", "public void sendSms(int token, @IntRange(from = 0, to = 65535) int messageRef, @SmsMessage.Format String format, String smsc, boolean isRetry, byte[] pdu)", "public void onMemoryAvailable(int token)", "public void acknowledgeSms(int token, @IntRange(from = 0, to = 65535) int messageRef, @DeliverStatusResult int result)", "public void acknowledgeSms(int token, @IntRange(from = 0, to = 65535) int messageRef, @DeliverStatusResult int result, @NonNull byte[] pdu)", "public void acknowledgeSmsReport(int token, @IntRange(from = 0, to = 65535) int messageRef, @StatusReportResult int result)", "public final void onSmsReceived(int token, @SmsMessage.Format String format, byte[] pdu) throws RuntimeException", "public final void onSendSmsResultSuccess(int token, @IntRange(from = 0, to = 65535) int messageRef) throws RuntimeException", "public final void onSendSmsResult(int token, @IntRange(from = 0, to = 65535) int messageRef, @SendStatusResult int status, @SmsManager.Result int reason) throws RuntimeException", "public final void onSendSmsResultError(int token, @IntRange(from = 0, to = 65535) int messageRef, @SendStatusResult int status, @SmsManager.Result int reason, int networkErrorCode) throws RuntimeException", "public final void onMemoryAvailableResult(int token, @SendStatusResult int result, int networkErrorCode) throws RuntimeException", "public final void onSmsStatusReportReceived(int token, @IntRange(from = 0, to = 65535) int messageRef, @SmsMessage.Format String format, byte[] pdu) throws RuntimeException", "public final void onSmsStatusReportReceived(int token, @SmsMessage.Format String format, byte[] pdu) throws RuntimeException", "public String getSmsFormat()", "public void onReady()", "public final void setDefaultExecutor(@NonNull Executor executor)", "public Executor getExecutor()" ],
  "variableNames" : [ "LOG_TAG", "SEND_STATUS_OK", "SEND_STATUS_ERROR", "SEND_STATUS_ERROR_RETRY", "SEND_STATUS_ERROR_FALLBACK", "DELIVER_STATUS_OK", "DELIVER_STATUS_ERROR_GENERIC", "DELIVER_STATUS_ERROR_NO_MEMORY", "DELIVER_STATUS_ERROR_REQUEST_NOT_SUPPORTED", "STATUS_REPORT_STATUS_OK", "STATUS_REPORT_STATUS_ERROR", "RESULT_NO_NETWORK_ERROR", "mLock", "mListener", "mExecutor" ]
}