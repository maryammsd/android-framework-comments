{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/ddm/DdmHandleHeap.java",
  "packageName" : "android.ddm",
  "className" : "DdmHandleHeap",
  "comment" : "\n * Handle native and virtual heap requests.\n ",
  "variables" : [ {
    "name" : "CHUNK_HPIF",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_HPSG",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_HPDU",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_HPDS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_NHSG",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_HPGC",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_REAE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_REAQ",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHUNK_REAL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInstance",
    "type" : "DdmHandleHeap",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void register()",
    "returnType" : "void",
    "comment" : "\n     * Register for the messages we're interested in.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void connected()",
    "returnType" : "void",
    "comment" : "\n     * Called when the DDM server connects.  The handler is allowed to\n     * send messages to the server.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void disconnected()",
    "returnType" : "void",
    "comment" : "\n     * Called when the DDM server disconnects.  Can be used to disable\n     * periodic transmissions or clean up saved state.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Chunk handleChunk(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a chunk of data.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleHPIF(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a \"HeaP InFo\" request.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleHPSGNHSG(Chunk request, boolean isNative)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a \"HeaP SeGment\" or \"Native Heap SeGment\" request.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleHPDU(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a \"HeaP DUmp\" request.\n     *\n     * This currently just returns a result code.  We could pull up\n     * the entire contents of the file and return them, but hprof dump\n     * files can be a few megabytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleHPDS(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a \"HeaP Dump Streaming\" request.\n     *\n     * This tells the VM to create a heap dump and send it directly to\n     * DDMS.  The dumps are large enough that we don't want to copy the\n     * data into a byte[] and send it from here.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleHPGC(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a \"HeaP Garbage Collection\" request.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleREAE(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a \"REcent Allocation Enable\" request.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleREAQ(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a \"REcent Allocation Query\" request.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Chunk handleREAL(Chunk request)",
    "returnType" : "Chunk",
    "comment" : "\n     * Handle a \"REcent ALlocations\" request.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "CHUNK_HPIF", "CHUNK_HPSG", "CHUNK_HPDU", "CHUNK_HPDS", "CHUNK_NHSG", "CHUNK_HPGC", "CHUNK_REAE", "CHUNK_REAQ", "CHUNK_REAL", "mInstance" ],
  "methodNames" : [ "public static void register()", "public void connected()", "public void disconnected()", "public Chunk handleChunk(Chunk request)", "private Chunk handleHPIF(Chunk request)", "private Chunk handleHPSGNHSG(Chunk request, boolean isNative)", "private Chunk handleHPDU(Chunk request)", "private Chunk handleHPDS(Chunk request)", "private Chunk handleHPGC(Chunk request)", "private Chunk handleREAE(Chunk request)", "private Chunk handleREAQ(Chunk request)", "private Chunk handleREAL(Chunk request)" ]
}