{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/StringTrieBuilder.java",
  "packageName" : "android.icu.util",
  "className" : "StringTrieBuilder",
  "comment" : "\n * Base class for string trie builder classes.\n *\n * <p>This class is not intended for public subclassing.\n *\n * @author Markus W. Scherer\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "state",
    "type" : "State",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "strings",
    "type" : "StringBuilder",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "root",
    "type" : "Node",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "nodes",
    "type" : "HashMap<Node, Node>",
    "comment" : " Hash set of nodes, maps from nodes to integer 1.",
    "links" : [ ]
  }, {
    "name" : "lookupFinalValueNode",
    "type" : "ValueNode",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void addImpl(CharSequence s, int value)",
    "returnType" : "void",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected final void buildImpl(Option buildOption)",
    "returnType" : "void",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void clearImpl()",
    "returnType" : "void",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private final Node registerNode(Node newNode)",
    "returnType" : "Node",
    "comment" : "\n     * Makes sure that there is only one unique node registered that is\n     * equivalent to newNode, unless BUILDING_FAST.\n     * @param newNode Input node. The builder takes ownership.\n     * @return newNode if it is the first of its kind, or\n     *         an equivalent node if newNode is a duplicate.\n     ",
    "links" : [ ]
  }, {
    "name" : "private final ValueNode registerFinalValue(int value)",
    "returnType" : "ValueNode",
    "comment" : "\n     * Makes sure that there is only one unique FinalValueNode registered\n     * with this value.\n     * Avoids creating a node if the value is a duplicate.\n     * @param value A final value.\n     * @return A FinalValueNode with the given value.\n     ",
    "links" : [ ]
  }, {
    "name" : "private ValueNode createSuffixNode(CharSequence s, int start, int sValue)",
    "returnType" : "ValueNode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract boolean matchNodesCanHaveValues()",
    "returnType" : "boolean",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int getMaxBranchLinearSubNodeLength()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int getMinLinearMatch()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int getMaxLinearMatchLength()",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int write(int unit)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int write(int offset, int length)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int writeValueAndFinal(int i, boolean isFinal)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int writeValueAndType(boolean hasValue, int value, int node)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract int writeDeltaTo(int jumpTarget)",
    "returnType" : "int",
    "comment" : "\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected void addImpl(CharSequence s, int value)", "protected final void buildImpl(Option buildOption)", "protected void clearImpl()", "private final Node registerNode(Node newNode)", "private final ValueNode registerFinalValue(int value)", "private ValueNode createSuffixNode(CharSequence s, int start, int sValue)", "protected abstract boolean matchNodesCanHaveValues()", "protected abstract int getMaxBranchLinearSubNodeLength()", "protected abstract int getMinLinearMatch()", "protected abstract int getMaxLinearMatchLength()", "protected abstract int write(int unit)", "protected abstract int write(int offset, int length)", "protected abstract int writeValueAndFinal(int i, boolean isFinal)", "protected abstract int writeValueAndType(boolean hasValue, int value, int node)", "protected abstract int writeDeltaTo(int jumpTarget)" ],
  "variableNames" : [ "state", "strings", "root", "nodes", "lookupFinalValueNode" ]
}