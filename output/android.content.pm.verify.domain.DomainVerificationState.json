{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/verify/domain/DomainVerificationState.java",
  "packageName" : "android.content.pm.verify.domain",
  "className" : "DomainVerificationState",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STATE_NO_RESPONSE",
    "type" : "int",
    "comment" : "\n     * @see DomainVerificationInfo#STATE_NO_RESPONSE\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_SUCCESS",
    "type" : "int",
    "comment" : "\n     * @see DomainVerificationInfo#STATE_SUCCESS\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_APPROVED",
    "type" : "int",
    "comment" : "\n     * The system has chosen to ignore the verification agent's opinion on whether the domain should\n     * be verified. This will treat the domain as verified.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_DENIED",
    "type" : "int",
    "comment" : "\n     * The system has chosen to ignore the verification agent's opinion on whether the domain should\n     * be verified. This will treat the domain as unverified.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_MIGRATED",
    "type" : "int",
    "comment" : "\n     * The state was migrated from the previous intent filter verification API. This will treat the\n     * domain as verified, but it should be updated by the verification agent. The older API's\n     * collection and handling of verifying domains may lead to improperly migrated state.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_RESTORED",
    "type" : "int",
    "comment" : "\n     * The state was restored from a user backup or by the system. This is treated as if the domain\n     * was verified, but the verification agent may choose to re-verify this domain to be certain\n     * nothing has changed since the snapshot.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_LEGACY_FAILURE",
    "type" : "int",
    "comment" : "\n     * The domain was failed by a legacy intent filter verification agent from v1 of the API. This\n     * is made distinct from {@link #STATE_FIRST_VERIFIER_DEFINED} to prevent any v2 verification\n     * agent from misinterpreting the result, since {@link #STATE_FIRST_VERIFIER_DEFINED} is agent\n     * specific and can be defined as a special error code.\n     ",
    "links" : [ "#STATE_FIRST_VERIFIER_DEFINED" ]
  }, {
    "name" : "STATE_SYS_CONFIG",
    "type" : "int",
    "comment" : "\n     * The application has been granted auto verification for all domains by configuration on the\n     * system image.\n     *\n     * TODO: Can be stored per-package rather than for all domains for a package to save memory.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_PRE_VERIFIED",
    "type" : "int",
    "comment" : "\n     * The application has temporarily been granted auto verification for a set of domains as\n     * specified by a trusted installer during the installation. This will treat the domain as\n     * verified, but it should be updated by the verification agent.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_FIRST_VERIFIER_DEFINED",
    "type" : "int",
    "comment" : "\n     * @see DomainVerificationInfo#STATE_FIRST_VERIFIER_DEFINED\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static String stateToDebugString(@DomainVerificationState.State int state)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean isDefault(@State int state)",
    "returnType" : "boolean",
    "comment" : "\n     * For determining re-verify policy. This is hidden from the domain verification agent so that\n     * no behavior is made based on the result.\n     ",
    "links" : [ ]
  }, {
    "name" : " static boolean isVerified(@DomainVerificationState.State int state)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if a state considers the corresponding domain to be successfully verified. The domain\n     * verification agent may use this to determine whether or not to re-verify a domain.\n     ",
    "links" : [ ]
  }, {
    "name" : " static boolean isModifiable(@DomainVerificationState.State int state)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if a state is modifiable by the domain verification agent. This is useful as the\n     * platform may add new state codes in newer versions, and older verification agents can use\n     * this method to determine if a state can be changed without having to be aware of what the new\n     * state means.\n     ",
    "links" : [ ]
  }, {
    "name" : " static boolean shouldMigrate(@State int state)",
    "returnType" : "boolean",
    "comment" : "\n     * Whether the state is migrated when updating a package. Generally this is only for states\n     * that maintain verification state or were set by an explicit user or developer action.\n     ",
    "links" : [ ]
  }, {
    "name" : " static int convertToInfoState(@State int internalState)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static String stateToDebugString(@DomainVerificationState.State int state)", " static boolean isDefault(@State int state)", " static boolean isVerified(@DomainVerificationState.State int state)", " static boolean isModifiable(@DomainVerificationState.State int state)", " static boolean shouldMigrate(@State int state)", " static int convertToInfoState(@State int internalState)" ],
  "variableNames" : [ "STATE_NO_RESPONSE", "STATE_SUCCESS", "STATE_APPROVED", "STATE_DENIED", "STATE_MIGRATED", "STATE_RESTORED", "STATE_LEGACY_FAILURE", "STATE_SYS_CONFIG", "STATE_PRE_VERIFIED", "STATE_FIRST_VERIFIER_DEFINED" ]
}