{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/ccil/cowan/tagsoup/PYXWriter.java",
  "packageName" : "org.ccil.cowan.tagsoup",
  "className" : "PYXWriter",
  "comment" : "\nA ContentHandler that generates PYX format instead of XML.\nPrimarily useful for debugging.\n*",
  "links" : [ ],
  "variables" : [ {
    "name" : "theWriter",
    "type" : "PrintWriter",
    "comment" : " where we write to",
    "links" : [ ]
  }, {
    "name" : "dummy",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "attrName",
    "type" : "String",
    "comment" : " saved attribute name",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void adup(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void aname(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void aval(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cmnt(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void entity(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getEntity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void eof(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void etag(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void decl(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void gi(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cdsect(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void pcdata(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void pitarget(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void pi(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stagc(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stage(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void characters(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endDocument() throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endElement(String uri, String localname, String qname) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endPrefixMapping(String prefix) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void ignorableWhitespace(char[] buff, int offset, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void processingInstruction(String target, String data) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDocumentLocator(Locator locator)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void skippedEntity(String name) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startDocument() throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startElement(String uri, String localname, String qname, Attributes atts) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startPrefixMapping(String prefix, String uri) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void comment(char[] ch, int start, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endCDATA() throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endDTD() throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endEntity(String name) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startCDATA() throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startDTD(String name, String publicId, String systemId) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startEntity(String name) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void adup(char[] buff, int offset, int length) throws SAXException", "public void aname(char[] buff, int offset, int length) throws SAXException", "public void aval(char[] buff, int offset, int length) throws SAXException", "public void cmnt(char[] buff, int offset, int length) throws SAXException", "public void entity(char[] buff, int offset, int length) throws SAXException", "public int getEntity()", "public void eof(char[] buff, int offset, int length) throws SAXException", "public void etag(char[] buff, int offset, int length) throws SAXException", "public void decl(char[] buff, int offset, int length) throws SAXException", "public void gi(char[] buff, int offset, int length) throws SAXException", "public void cdsect(char[] buff, int offset, int length) throws SAXException", "public void pcdata(char[] buff, int offset, int length) throws SAXException", "public void pitarget(char[] buff, int offset, int length) throws SAXException", "public void pi(char[] buff, int offset, int length) throws SAXException", "public void stagc(char[] buff, int offset, int length) throws SAXException", "public void stage(char[] buff, int offset, int length) throws SAXException", "public void characters(char[] buff, int offset, int length) throws SAXException", "public void endDocument() throws SAXException", "public void endElement(String uri, String localname, String qname) throws SAXException", "public void endPrefixMapping(String prefix) throws SAXException", "public void ignorableWhitespace(char[] buff, int offset, int length) throws SAXException", "public void processingInstruction(String target, String data) throws SAXException", "public void setDocumentLocator(Locator locator)", "public void skippedEntity(String name) throws SAXException", "public void startDocument() throws SAXException", "public void startElement(String uri, String localname, String qname, Attributes atts) throws SAXException", "public void startPrefixMapping(String prefix, String uri) throws SAXException", "public void comment(char[] ch, int start, int length) throws SAXException", "public void endCDATA() throws SAXException", "public void endDTD() throws SAXException", "public void endEntity(String name) throws SAXException", "public void startCDATA() throws SAXException", "public void startDTD(String name, String publicId, String systemId) throws SAXException", "public void startEntity(String name) throws SAXException" ],
  "variableNames" : [ "theWriter", "dummy", "attrName" ]
}