{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssStatus.java",
  "packageName" : "android.location",
  "className" : "Builder",
  "comment" : "\n     * Builder class to help create new GnssStatus instances.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mSatellites",
    "type" : "ArrayList<GnssSvInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder addSatellite(@ConstellationType int constellationType, @IntRange(from = 1, to = 200) int svid, @FloatRange(from = 0, to = 63) float cn0DbHz, @FloatRange(from = -90, to = 90) float elevation, @FloatRange(from = 0, to = 360) float azimuth, boolean hasEphemeris, boolean hasAlmanac, boolean usedInFix, boolean hasCarrierFrequency, @FloatRange(from = 0) float carrierFrequency, boolean hasBasebandCn0DbHz, @FloatRange(from = 0, to = 63) float basebandCn0DbHz)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a new satellite to the Builder.\n         *\n         * @param constellationType one of the CONSTELLATION_* constants\n         * @param svid the space vehicle identifier\n         * @param cn0DbHz carrier-to-noise density at the antenna in dB-Hz\n         * @param elevation satellite elevation in degrees\n         * @param azimuth satellite azimuth in degrees\n         * @param hasEphemeris whether the satellite has ephemeris data\n         * @param hasAlmanac whether the satellite has almanac data\n         * @param usedInFix whether the satellite was used in the most recent location fix\n         * @param hasCarrierFrequency whether carrier frequency data is available\n         * @param carrierFrequency satellite carrier frequency in Hz\n         * @param hasBasebandCn0DbHz whether baseband carrier-to-noise density is available\n         * @param basebandCn0DbHz baseband carrier-to-noise density in dB-Hz\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearSatellites()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears all satellites in the Builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public GnssStatus build()",
    "returnType" : "GnssStatus",
    "comment" : "\n         * Builds a new GnssStatus based on the satellite information in the Builder.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder addSatellite(@ConstellationType int constellationType, @IntRange(from = 1, to = 200) int svid, @FloatRange(from = 0, to = 63) float cn0DbHz, @FloatRange(from = -90, to = 90) float elevation, @FloatRange(from = 0, to = 360) float azimuth, boolean hasEphemeris, boolean hasAlmanac, boolean usedInFix, boolean hasCarrierFrequency, @FloatRange(from = 0) float carrierFrequency, boolean hasBasebandCn0DbHz, @FloatRange(from = 0, to = 63) float basebandCn0DbHz)", "public Builder clearSatellites()", "public GnssStatus build()" ],
  "variableNames" : [ "mSatellites" ]
}