{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/AutomaticZenRule.java",
  "packageName" : "android.app",
  "className" : "Builder",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOwner",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConditionId",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterruptionFilter",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfigurationActivity",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPolicy",
    "type" : "ZenPolicy",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceEffects",
    "type" : "ZenDeviceEffects",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDescription",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIconResId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowManualInvocation",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCreationTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPkg",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setName(@NonNull String name)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the name of this rule.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setOwner(@Nullable ComponentName owner)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the component name of the\n         * {@link android.service.notification.ConditionProviderService} that manages this rule\n         * (but note that {@link android.service.notification.ConditionProviderService} is\n         * deprecated in favor of using {@link NotificationManager#setAutomaticZenRuleState} to\n         * notify the system about the state of your rule).\n         *\n         * <p>This is exclusive with {@link #setConfigurationActivity}; rules where a configuration\n         * activity is set will not use the component set here to determine whether the rule\n         * should be active.\n         ",
    "links" : [ "android.app.NotificationManager#setAutomaticZenRuleState", "android.service.notification.ConditionProviderService", "#setConfigurationActivity" ]
  }, {
    "name" : "public Builder setConditionId(@NonNull Uri conditionId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the representation of the state that causes this rule to become active.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setInterruptionFilter(@InterruptionFilter int interruptionFilter)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the interruption filter that is applied when this rule is active.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setEnabled(boolean enabled)",
    "returnType" : "Builder",
    "comment" : "\n         * Enables this rule. Rules are enabled by default.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setConfigurationActivity(@Nullable ComponentName configurationActivity)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the configuration activity - an activity that handles\n         * {@link NotificationManager#ACTION_AUTOMATIC_ZEN_RULE} that shows the user more\n         * information about this rule and/or allows them to configure it. This is required to be\n         * non-null for rules that are not backed by a\n         * {@link android.service.notification.ConditionProviderService}.\n         *\n         * <p>This is exclusive with {@link #setOwner}; rules where a configuration\n         * activity is set will not use the\n         * {@link android.service.notification.ConditionProviderService} supplied there to determine\n         * whether the rule should be active.\n         ",
    "links" : [ "android.service.notification.ConditionProviderService", "#setOwner", "android.app.NotificationManager#ACTION_AUTOMATIC_ZEN_RULE" ]
  }, {
    "name" : "public Builder setZenPolicy(@Nullable ZenPolicy policy)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the zen policy.\n         *\n         * <p>When updating an existing rule via {@link NotificationManager#updateAutomaticZenRule},\n         * a {@code null} value here means the previous policy is retained.\n         ",
    "links" : [ "android.app.NotificationManager#updateAutomaticZenRule" ]
  }, {
    "name" : "public Builder setDeviceEffects(@Nullable ZenDeviceEffects deviceEffects)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the {@link ZenDeviceEffects} associated to this rule. Device effects specify changes\n         * to the device behavior that should apply while the rule is active, but are not directly\n         * related to suppressing notifications (for example: disabling always-on display).\n         *\n         * <p>When updating an existing rule via {@link NotificationManager#updateAutomaticZenRule},\n         * a {@code null} value here means the previous set of effects is retained.\n         ",
    "links" : [ "android.service.notification.ZenDeviceEffects", "android.app.NotificationManager#updateAutomaticZenRule" ]
  }, {
    "name" : "public Builder setType(@Type int type)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the type of the rule.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setTriggerDescription(@Nullable String description)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a user visible description of when this rule will be active\n         * (see {@link Condition#STATE_TRUE}).\n         *\n         * <p>A description should be a (localized) string like \"Mon-Fri, 9pm-7am\" or\n         * \"When connected to [Car Name]\".\n         ",
    "links" : [ "android.service.notification.Condition#STATE_TRUE" ]
  }, {
    "name" : "public Builder setIconResId(@DrawableRes int iconResId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a resource id of a tintable vector drawable representing the rule in image form.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setManualInvocationAllowed(boolean allowManualInvocation)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether this rule can be manually activated by the user even when the triggering\n         * condition for the rule is not met.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setCreationTime(long creationTime)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the time at which this rule was created, in milliseconds since epoch\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public AutomaticZenRule build()",
    "returnType" : "AutomaticZenRule",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setName(@NonNull String name)", "public Builder setOwner(@Nullable ComponentName owner)", "public Builder setConditionId(@NonNull Uri conditionId)", "public Builder setInterruptionFilter(@InterruptionFilter int interruptionFilter)", "public Builder setEnabled(boolean enabled)", "public Builder setConfigurationActivity(@Nullable ComponentName configurationActivity)", "public Builder setZenPolicy(@Nullable ZenPolicy policy)", "public Builder setDeviceEffects(@Nullable ZenDeviceEffects deviceEffects)", "public Builder setType(@Type int type)", "public Builder setTriggerDescription(@Nullable String description)", "public Builder setIconResId(@DrawableRes int iconResId)", "public Builder setManualInvocationAllowed(boolean allowManualInvocation)", "public Builder setCreationTime(long creationTime)", "public AutomaticZenRule build()" ],
  "variableNames" : [ "mName", "mOwner", "mConditionId", "mInterruptionFilter", "mEnabled", "mConfigurationActivity", "mPolicy", "mDeviceEffects", "mType", "mDescription", "mIconResId", "mAllowManualInvocation", "mCreationTime", "mPkg" ]
}