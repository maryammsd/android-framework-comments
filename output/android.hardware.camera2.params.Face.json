{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/params/Face.java",
  "packageName" : "android.hardware.camera2.params",
  "className" : "Face",
  "comment" : "\n * Describes a face detected in an image.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ID_UNSUPPORTED",
    "type" : "int",
    "comment" : "\n     * The ID is {@code -1} when the optional set of fields is unsupported.\n     *\n     * @see #getId()\n     ",
    "links" : [ ]
  }, {
    "name" : "SCORE_MIN",
    "type" : "int",
    "comment" : "\n     * The minimum possible value for the confidence level.\n     *\n     * @see #getScore()\n     ",
    "links" : [ ]
  }, {
    "name" : "SCORE_MAX",
    "type" : "int",
    "comment" : "\n     * The maximum possible value for the confidence level.\n     *\n     * @see #getScore()\n     ",
    "links" : [ ]
  }, {
    "name" : "mBounds",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScore",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLeftEye",
    "type" : "Point",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRightEye",
    "type" : "Point",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMouth",
    "type" : "Point",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void init(@NonNull Rect bounds, int score, int id, @Nullable Point leftEyePosition, @Nullable Point rightEyePosition, @Nullable Point mouthPosition)",
    "returnType" : "void",
    "comment" : "\n     * Initialize the object (shared by constructors).\n     ",
    "links" : [ ]
  }, {
    "name" : "public Rect getBounds()",
    "returnType" : "Rect",
    "comment" : "\n     * Bounds of the face.\n     *\n     * <p>A rectangle relative to the sensor's\n     * {@link CameraCharacteristics#SENSOR_INFO_ACTIVE_ARRAY_SIZE}, with (0,0)\n     * representing the top-left corner of the active array rectangle.</p>\n     *\n     * <p>There is no constraints on the Rectangle value other than it\n     * is not-{@code null}.</p>\n     ",
    "links" : [ "android.hardware.camera2.CameraCharacteristics#SENSOR_INFO_ACTIVE_ARRAY_SIZE" ]
  }, {
    "name" : "public int getScore()",
    "returnType" : "int",
    "comment" : "\n     * The confidence level for the detection of the face.\n     *\n     * <p>The range is {@value #SCORE_MIN} to {@value #SCORE_MAX}.\n     * {@value #SCORE_MAX} is the highest confidence.</p>\n     *\n     * <p>Depending on the device, even very low-confidence faces may be\n     * listed, so applications should filter out faces with low confidence,\n     * depending on the use case. For a typical point-and-shoot camera\n     * application that wishes to display rectangles around detected faces,\n     * filtering out faces with confidence less than half of {@value #SCORE_MAX}\n     * is recommended.</p>\n     *\n     * @see #SCORE_MAX\n     * @see #SCORE_MIN\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "\n     * An unique id per face while the face is visible to the tracker.\n     *\n     * <p>\n     * If the face leaves the field-of-view and comes back, it will get a new\n     * id.</p>\n     *\n     * <p>This is an optional field and may not be supported on all devices.\n     * If the id is {@value #ID_UNSUPPORTED} then the leftEyePosition, rightEyePosition, and\n     * mouthPositions are guaranteed to be {@code null}. Otherwise, each of leftEyePosition,\n     * rightEyePosition, and mouthPosition may be independently null or not-null. When devices\n     * report the value of key {@link CaptureResult#STATISTICS_FACE_DETECT_MODE} as\n     * {@link CameraMetadata#STATISTICS_FACE_DETECT_MODE_SIMPLE} in {@link CaptureResult},\n     * the face id of each face is expected to be {@value #ID_UNSUPPORTED}.</p>\n     *\n     * <p>This value will either be {@value #ID_UNSUPPORTED} or\n     * otherwise greater than {@code 0}.</p>\n     *\n     * @see #ID_UNSUPPORTED\n     ",
    "links" : [ "android.hardware.camera2.CaptureResult#STATISTICS_FACE_DETECT_MODE", "android.hardware.camera2.CaptureResult", "android.hardware.camera2.CameraMetadata#STATISTICS_FACE_DETECT_MODE_SIMPLE" ]
  }, {
    "name" : "public Point getLeftEyePosition()",
    "returnType" : "Point",
    "comment" : "\n     * The coordinates of the center of the left eye.\n     *\n     * <p>The coordinates are in\n     * the same space as the ones for {@link #getBounds}. This is an\n     * optional field and may not be supported on all devices. If not\n     * supported, the value will always be set to null.\n     * This value will  always be null only if {@link #getId()} returns\n     * {@value #ID_UNSUPPORTED}.</p>\n     *\n     * @return The left eye position, or {@code null} if unknown.\n     ",
    "links" : [ "#getId()", "#getBounds" ]
  }, {
    "name" : "public Point getRightEyePosition()",
    "returnType" : "Point",
    "comment" : "\n     * The coordinates of the center of the right eye.\n     *\n     * <p>The coordinates are\n     * in the same space as the ones for {@link #getBounds}.This is an\n     * optional field and may not be supported on all devices. If not\n     * supported, the value will always be set to null.\n     * This value will  always be null only if {@link #getId()} returns\n     * {@value #ID_UNSUPPORTED}.</p>\n     *\n     * @return The right eye position, or {@code null} if unknown.\n     ",
    "links" : [ "#getId()", "#getBounds" ]
  }, {
    "name" : "public Point getMouthPosition()",
    "returnType" : "Point",
    "comment" : "\n     * The coordinates of the center of the mouth.\n     *\n     * <p>The coordinates are in\n     * the same space as the ones for {@link #getBounds}. This is an optional\n     * field and may not be supported on all devices. If not\n     * supported, the value will always be set to null.\n     * This value will  always be null only if {@link #getId()} returns\n     * {@value #ID_UNSUPPORTED}.</p>\n     * </p>\n     *\n     * @return The mouth position, or {@code null} if unknown.\n     ",
    "links" : [ "#getId()", "#getBounds" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Represent the Face as a string for debugging purposes.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void checkNotNull(String name, Object obj)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkNull(String name, Object obj)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkScore(int score)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkId(int id)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkFace(@Nullable Point leftEyePosition, @Nullable Point rightEyePosition, @Nullable Point mouthPosition)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void init(@NonNull Rect bounds, int score, int id, @Nullable Point leftEyePosition, @Nullable Point rightEyePosition, @Nullable Point mouthPosition)", "public Rect getBounds()", "public int getScore()", "public int getId()", "public Point getLeftEyePosition()", "public Point getRightEyePosition()", "public Point getMouthPosition()", "public String toString()", "private static void checkNotNull(String name, Object obj)", "private static void checkNull(String name, Object obj)", "private static void checkScore(int score)", "private static void checkId(int id)", "private static void checkFace(@Nullable Point leftEyePosition, @Nullable Point rightEyePosition, @Nullable Point mouthPosition)" ],
  "variableNames" : [ "ID_UNSUPPORTED", "SCORE_MIN", "SCORE_MAX", "mBounds", "mScore", "mId", "mLeftEye", "mRightEye", "mMouth" ]
}