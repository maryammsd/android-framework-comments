{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/QosPolicyParams.java",
  "packageName" : "android.net.wifi",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link QosPolicyParams}.\n     ",
  "links" : [ "android.net.wifi.QosPolicyParams" ],
  "variables" : [ {
    "name" : "mPolicyId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDirection",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSrcIp",
    "type" : "InetAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDstIp",
    "type" : "InetAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDscp",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserPriority",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSrcPort",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProtocol",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDstPort",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDstPortRange",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIpVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlowLabel",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQosCharacteristics",
    "type" : "QosCharacteristics",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setSourceAddress(@Nullable InetAddress value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that this policy matches packets with the provided source IP address.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDestinationAddress(@Nullable InetAddress value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that this policy matches packets with the provided destination IP address.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDscp(@IntRange(from = DSCP_ANY, to = 63) int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies the DSCP value. For uplink requests, this value will be applied to packets\n         * that match the classifier. For downlink requests, this will be part of the classifier.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUserPriority(@UserPriority int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that the provided User Priority should be applied to packets that\n         * match this classifier. Only applicable to downlink requests.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSourcePort(@IntRange(from = DscpPolicy.SOURCE_PORT_ANY, to = 65535) int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that this policy matches packets with the provided source port.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setProtocol(@Protocol int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that this policy matches packets with the provided protocol.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDestinationPort(@IntRange(from = DESTINATION_PORT_ANY, to = 65535) int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that this policy matches packets with the provided destination port.\n         * Only applicable to downlink requests.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDestinationPortRange(@IntRange(from = 0, to = 65535) int start, @IntRange(from = 0, to = 65535) int end)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that this policy matches packets with the provided destination port range.\n         * Only applicable to uplink requests.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setIpVersion(@IpVersion int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that this policy matches packets with the provided IP version.\n         * This argument is mandatory for downlink requests, and is ignored for uplink requests.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setFlowLabel(@Nullable byte[] value)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies that this policy matches packets with the provided flow label.\n         * Only applicable to downlink requests using IPv6.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setQosCharacteristics(@Nullable QosCharacteristics qosCharacteristics)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifies traffic flow parameters to use for this policy request.\n         * This argument is mandatory for uplink requests, but optional for downlink requests.\n         ",
    "links" : [ ]
  }, {
    "name" : "public QosPolicyParams build()",
    "returnType" : "QosPolicyParams",
    "comment" : "\n         * Construct a QosPolicyParams object with the specified parameters.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setSourceAddress(@Nullable InetAddress value)", "public Builder setDestinationAddress(@Nullable InetAddress value)", "public Builder setDscp(@IntRange(from = DSCP_ANY, to = 63) int value)", "public Builder setUserPriority(@UserPriority int value)", "public Builder setSourcePort(@IntRange(from = DscpPolicy.SOURCE_PORT_ANY, to = 65535) int value)", "public Builder setProtocol(@Protocol int value)", "public Builder setDestinationPort(@IntRange(from = DESTINATION_PORT_ANY, to = 65535) int value)", "public Builder setDestinationPortRange(@IntRange(from = 0, to = 65535) int start, @IntRange(from = 0, to = 65535) int end)", "public Builder setIpVersion(@IpVersion int value)", "public Builder setFlowLabel(@Nullable byte[] value)", "public Builder setQosCharacteristics(@Nullable QosCharacteristics qosCharacteristics)", "public QosPolicyParams build()" ],
  "variableNames" : [ "mPolicyId", "mDirection", "mSrcIp", "mDstIp", "mDscp", "mUserPriority", "mSrcPort", "mProtocol", "mDstPort", "mDstPortRange", "mIpVersion", "mFlowLabel", "mQosCharacteristics" ]
}