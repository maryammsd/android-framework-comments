{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/vcn/VcnCellUnderlyingNetworkTemplate.java",
  "packageName" : "android.net.vcn",
  "className" : "Builder",
  "comment" : " This class is used to incrementally build VcnCellUnderlyingNetworkTemplate objects. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mMeteredMatchCriteria",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowedNetworkPlmnIds",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowedSpecificCarrierIds",
    "type" : "Set<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCapabilitiesMatchCriteria",
    "type" : "Map<Integer, Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRoamingMatchCriteria",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOpportunisticMatchCriteria",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinEntryUpstreamBandwidthKbps",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinExitUpstreamBandwidthKbps",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinEntryDownstreamBandwidthKbps",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinExitDownstreamBandwidthKbps",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setMetered(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : " VcnUnderlyingNetworkTemplate#getMetered()}",
    "links" : [ ]
  }, {
    "name" : "public Builder setOperatorPlmnIds(@NonNull Set<String> operatorPlmnIds)",
    "returnType" : "Builder",
    "comment" : "\n         * Set operator PLMN IDs with which a network can match this template.\n         *\n         * <p>This is used to distinguish cases where roaming agreements may dictate a different\n         * priority from a partner's networks.\n         *\n         * @param operatorPlmnIds the matching operator PLMN IDs in String. Network with one of the\n         *     matching PLMN IDs can match this template. If the set is empty, any PLMN ID will\n         *     match. The default is an empty set. A valid PLMN is a concatenation of MNC and MCC,\n         *     and thus consists of 5 or 6 decimal digits.\n         * @see SubscriptionInfo#getMccString()\n         * @see SubscriptionInfo#getMncString()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSimSpecificCarrierIds(@NonNull Set<Integer> simSpecificCarrierIds)",
    "returnType" : "Builder",
    "comment" : "\n         * Set sim specific carrier IDs with which a network can match this template.\n         *\n         * @param simSpecificCarrierIds the matching sim specific carrier IDs. Network with one of\n         *     the sim specific carrier IDs can match this template. If the set is empty, any\n         *     carrier ID will match. The default is an empty set.\n         * @see TelephonyManager#getSimSpecificCarrierId()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setRoaming(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the matching criteria for roaming networks.\n         *\n         * <p>A template where setRoaming(MATCH_REQUIRED) will only match roaming networks (one\n         * without NET_CAPABILITY_NOT_ROAMING). A template where setRoaming(MATCH_FORBIDDEN) will\n         * only match a network that is not roaming (one with NET_CAPABILITY_NOT_ROAMING).\n         *\n         * @param matchCriteria the matching criteria for roaming networks. Defaults to {@link\n         *     #MATCH_ANY}.\n         * @see NetworkCapabilities#NET_CAPABILITY_NOT_ROAMING\n         ",
    "links" : [ "#MATCH_ANY" ]
  }, {
    "name" : "public Builder setOpportunistic(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the matching criteria for opportunistic cellular subscriptions.\n         *\n         * @param matchCriteria the matching criteria for opportunistic cellular subscriptions.\n         *     Defaults to {@link #MATCH_ANY}.\n         * @see SubscriptionManager#setOpportunistic(boolean, int)\n         ",
    "links" : [ "#MATCH_ANY" ]
  }, {
    "name" : "public Builder setMinUpstreamBandwidthKbps(int minEntryUpstreamBandwidthKbps, int minExitUpstreamBandwidthKbps)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the minimum upstream bandwidths that this template will match.\n         *\n         * <p>This template will not match a network that does not provide at least the bandwidth\n         * passed as the entry bandwidth, except in the case that the network is selected as the VCN\n         * Gateway Connection's underlying network, where it will continue to match until the\n         * bandwidth drops under the exit bandwidth.\n         *\n         * <p>The entry criteria MUST be greater than, or equal to the exit criteria to avoid the\n         * invalid case where a network fulfills the entry criteria, but at the same time fails the\n         * exit criteria.\n         *\n         * <p>Estimated bandwidth of a network is provided by the transport layer, and reported in\n         * {@link NetworkCapabilities}. The provided estimates will be used without modification.\n         *\n         * @param minEntryUpstreamBandwidthKbps the minimum accepted upstream bandwidth for networks\n         *     that ARE NOT the already-selected underlying network, or {@code 0} to disable this\n         *     requirement. Disabled by default.\n         * @param minExitUpstreamBandwidthKbps the minimum accepted upstream bandwidth for a network\n         *     that IS the already-selected underlying network, or {@code 0} to disable this\n         *     requirement. Disabled by default.\n         * @return this {@link Builder} instance, for chaining\n         ",
    "links" : [ "Builder", "android.net.NetworkCapabilities" ]
  }, {
    "name" : "public Builder setMinDownstreamBandwidthKbps(int minEntryDownstreamBandwidthKbps, int minExitDownstreamBandwidthKbps)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the minimum upstream bandwidths that this template will match.\n         *\n         * <p>This template will not match a network that does not provide at least the bandwidth\n         * passed as the entry bandwidth, except in the case that the network is selected as the VCN\n         * Gateway Connection's underlying network, where it will continue to match until the\n         * bandwidth drops under the exit bandwidth.\n         *\n         * <p>The entry criteria MUST be greater than, or equal to the exit criteria to avoid the\n         * invalid case where a network fulfills the entry criteria, but at the same time fails the\n         * exit criteria.\n         *\n         * <p>Estimated bandwidth of a network is provided by the transport layer, and reported in\n         * {@link NetworkCapabilities}. The provided estimates will be used without modification.\n         *\n         * @param minEntryDownstreamBandwidthKbps the minimum accepted downstream bandwidth for\n         *     networks that ARE NOT the already-selected underlying network, or {@code 0} to\n         *     disable this requirement. Disabled by default.\n         * @param minExitDownstreamBandwidthKbps the minimum accepted downstream bandwidth for a\n         *     network that IS the already-selected underlying network, or {@code 0} to disable this\n         *     requirement. Disabled by default.\n         * @return this {@link Builder} instance, for chaining\n         ",
    "links" : [ "Builder", "android.net.NetworkCapabilities" ]
  }, {
    "name" : "public Builder setCbs(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the matching criteria for CBS networks.\n         *\n         * <p>A template where {@code setCbs(MATCH_REQUIRED)} is called will only match CBS networks\n         * (ones with NET_CAPABILITY_CBS). A template where {@code setCbs(MATCH_FORBIDDEN)} is\n         * called will only match networks that do not support CBS (ones without\n         * NET_CAPABILITY_CBS).\n         *\n         * @param matchCriteria the matching criteria for CBS networks. Defaults to {@link\n         *     #MATCH_ANY}.\n         * @see NetworkCapabilities#NET_CAPABILITY_CBS\n         ",
    "links" : [ "#MATCH_ANY" ]
  }, {
    "name" : "public Builder setDun(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the matching criteria for DUN networks.\n         *\n         * <p>A template where {@code setDun(MATCH_REQUIRED)} is called will only match DUN networks\n         * (ones with NET_CAPABILITY_DUN). A template where {@code setDun(MATCH_FORBIDDEN)} is\n         * called will only match networks that do not support DUN (ones without\n         * NET_CAPABILITY_DUN).\n         *\n         * @param matchCriteria the matching criteria for DUN networks. Defaults to {@link\n         *     #MATCH_ANY}.\n         * @see NetworkCapabilities#NET_CAPABILITY_DUN\n         ",
    "links" : [ "#MATCH_ANY" ]
  }, {
    "name" : "public Builder setIms(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the matching criteria for IMS networks.\n         *\n         * <p>A template where {@code setIms(MATCH_REQUIRED)} is called will only match IMS networks\n         * (ones with NET_CAPABILITY_IMS). A template where {@code setIms(MATCH_FORBIDDEN)} is\n         * called will only match networks that do not support IMS (ones without\n         * NET_CAPABILITY_IMS).\n         *\n         * @param matchCriteria the matching criteria for IMS networks. Defaults to {@link\n         *     #MATCH_ANY}.\n         * @see NetworkCapabilities#NET_CAPABILITY_IMS\n         ",
    "links" : [ "#MATCH_ANY" ]
  }, {
    "name" : "public Builder setInternet(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the matching criteria for INTERNET networks.\n         *\n         * <p>A template where {@code setInternet(MATCH_REQUIRED)} is called will only match\n         * INTERNET networks (ones with NET_CAPABILITY_INTERNET). A template where {@code\n         * setInternet(MATCH_FORBIDDEN)} is called will only match networks that do not support\n         * INTERNET (ones without NET_CAPABILITY_INTERNET).\n         *\n         * @param matchCriteria the matching criteria for INTERNET networks. Defaults to {@link\n         *     #MATCH_REQUIRED}.\n         * @see NetworkCapabilities#NET_CAPABILITY_INTERNET\n         ",
    "links" : [ "#MATCH_REQUIRED" ]
  }, {
    "name" : "public Builder setMms(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the matching criteria for MMS networks.\n         *\n         * <p>A template where {@code setMms(MATCH_REQUIRED)} is called will only match MMS networks\n         * (ones with NET_CAPABILITY_MMS). A template where {@code setMms(MATCH_FORBIDDEN)} is\n         * called will only match networks that do not support MMS (ones without\n         * NET_CAPABILITY_MMS).\n         *\n         * @param matchCriteria the matching criteria for MMS networks. Defaults to {@link\n         *     #MATCH_ANY}.\n         * @see NetworkCapabilities#NET_CAPABILITY_MMS\n         ",
    "links" : [ "#MATCH_ANY" ]
  }, {
    "name" : "public Builder setRcs(@MatchCriteria int matchCriteria)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the matching criteria for RCS networks.\n         *\n         * <p>A template where {@code setRcs(MATCH_REQUIRED)} is called will only match RCS networks\n         * (ones with NET_CAPABILITY_RCS). A template where {@code setRcs(MATCH_FORBIDDEN)} is\n         * called will only match networks that do not support RCS (ones without\n         * NET_CAPABILITY_RCS).\n         *\n         * @param matchCriteria the matching criteria for RCS networks. Defaults to {@link\n         *     #MATCH_ANY}.\n         * @see NetworkCapabilities#NET_CAPABILITY_RCS\n         ",
    "links" : [ "#MATCH_ANY" ]
  }, {
    "name" : "public VcnCellUnderlyingNetworkTemplate build()",
    "returnType" : "VcnCellUnderlyingNetworkTemplate",
    "comment" : " Build the VcnCellUnderlyingNetworkTemplate. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setMetered(@MatchCriteria int matchCriteria)", "public Builder setOperatorPlmnIds(@NonNull Set<String> operatorPlmnIds)", "public Builder setSimSpecificCarrierIds(@NonNull Set<Integer> simSpecificCarrierIds)", "public Builder setRoaming(@MatchCriteria int matchCriteria)", "public Builder setOpportunistic(@MatchCriteria int matchCriteria)", "public Builder setMinUpstreamBandwidthKbps(int minEntryUpstreamBandwidthKbps, int minExitUpstreamBandwidthKbps)", "public Builder setMinDownstreamBandwidthKbps(int minEntryDownstreamBandwidthKbps, int minExitDownstreamBandwidthKbps)", "public Builder setCbs(@MatchCriteria int matchCriteria)", "public Builder setDun(@MatchCriteria int matchCriteria)", "public Builder setIms(@MatchCriteria int matchCriteria)", "public Builder setInternet(@MatchCriteria int matchCriteria)", "public Builder setMms(@MatchCriteria int matchCriteria)", "public Builder setRcs(@MatchCriteria int matchCriteria)", "public VcnCellUnderlyingNetworkTemplate build()" ],
  "variableNames" : [ "mMeteredMatchCriteria", "mAllowedNetworkPlmnIds", "mAllowedSpecificCarrierIds", "mCapabilitiesMatchCriteria", "mRoamingMatchCriteria", "mOpportunisticMatchCriteria", "mMinEntryUpstreamBandwidthKbps", "mMinExitUpstreamBandwidthKbps", "mMinEntryDownstreamBandwidthKbps", "mMinExitDownstreamBandwidthKbps" ]
}