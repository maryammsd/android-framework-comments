{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/operations/VariableSafeAbsRef.java",
  "packageName" : "org.apache.xpath.operations",
  "className" : "VariableSafeAbsRef",
  "comment" : "\n * This is a \"smart\" variable reference that is used in situations where \n * an absolute path is optimized into a variable reference, but may \n * be used in some situations where the document context may have changed.\n * For instance, in select=\"document(doc/@href)//name[//salary &gt; 7250]\", the \n * root in the predicate will be different for each node in the set.  While \n * this is easy to detect statically in this case, in other cases static \n * detection would be very hard or impossible.  So, this class does a dynamic check \n * to make sure the document context of the referenced variable is the same as \n * the current document context, and, if it is not, execute the referenced variable's \n * expression with the current context instead.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public XObject execute(XPathContext xctxt, boolean destructiveOK) throws javax.xml.transform.TransformerException",
    "returnType" : "XObject",
    "comment" : "\n   * Dereference the variable, and return the reference value.  Note that lazy \n   * evaluation will occur.  If a variable within scope is not found, a warning \n   * will be sent to the error listener, and an empty nodeset will be returned.\n   *\n   *\n   * @param xctxt The runtime execution context.\n   *\n   * @return The evaluated variable, or an empty nodeset if not found.\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public XObject execute(XPathContext xctxt, boolean destructiveOK) throws javax.xml.transform.TransformerException" ],
  "variableNames" : [ "serialVersionUID" ]
}