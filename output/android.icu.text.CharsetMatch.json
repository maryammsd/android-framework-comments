{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/CharsetMatch.java",
  "packageName" : "android.icu.text",
  "className" : "CharsetMatch",
  "comment" : "\n * This class represents a charset that has been identified by a CharsetDetector\n * as a possible encoding for a set of input data.  From an instance of this\n * class, you can ask for a confidence level in the charset identification,\n * or for Java Reader or String to access the original byte data in Unicode form.\n * <p>\n * Instances of this class are created only by CharsetDetectors.\n * <p>\n * Note:  this class has a natural ordering that is inconsistent with equals.\n *        The natural ordering is based on the match confidence value.\n *\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "fConfidence",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fRawInput",
    "type" : "byte[]",
    "comment" : " Original, untouched input bytes.",
    "links" : [ ]
  }, {
    "name" : "fRawLength",
    "type" : "int",
    "comment" : " Length of data in fRawInput array.",
    "links" : [ ]
  }, {
    "name" : "fInputStream",
    "type" : "InputStream",
    "comment" : " User's input stream, or null if the user",
    "links" : [ ]
  }, {
    "name" : "fCharsetName",
    "type" : "String",
    "comment" : " The name of the charset this CharsetMatch",
    "links" : [ ]
  }, {
    "name" : "fLang",
    "type" : "String",
    "comment" : " The language, if one was determined by",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Reader getReader()",
    "returnType" : "Reader",
    "comment" : "\n     * Create a java.io.Reader for reading the Unicode character data corresponding\n     * to the original byte data supplied to the Charset detect operation.\n     * <p>\n     * CAUTION:  if the source of the byte data was an InputStream, a Reader\n     * can be created for only one matching char set using this method.  If more\n     * than one charset needs to be tried, the caller will need to reset\n     * the InputStream and create InputStreamReaders itself, based on the charset name.\n     *\n     * @return the Reader for the Unicode character data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getString() throws java.io.IOException",
    "returnType" : "String",
    "comment" : "\n     * Create a Java String from Unicode character data corresponding\n     * to the original byte data supplied to the Charset detect operation.\n     *\n     * @return a String created from the converted input data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getString(int maxLength) throws java.io.IOException",
    "returnType" : "String",
    "comment" : "\n     * Create a Java String from Unicode character data corresponding\n     * to the original byte data supplied to the Charset detect operation.\n     * The length of the returned string is limited to the specified size;\n     * the string will be trunctated to this length if necessary.  A limit value of\n     * zero or less is ignored, and treated as no limit.\n     *\n     * @param maxLength The maximum length of the String to be created when the\n     *                  source of the data is an input stream, or -1 for\n     *                  unlimited length.\n     * @return a String created from the converted input data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getConfidence()",
    "returnType" : "int",
    "comment" : "\n     * Get an indication of the confidence in the charset detected.\n     * Confidence values range from 0-100, with larger numbers indicating\n     * a better match of the input data to the characteristics of the\n     * charset.\n     *\n     * @return the confidence in the charset match\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Get the name of the detected charset.\n     * The name will be one that can be used with other APIs on the\n     * platform that accept charset names.  It is the \"Canonical name\"\n     * as defined by the class java.nio.charset.Charset; for\n     * charsets that are registered with the IANA charset registry,\n     * this is the MIME-preferred registerd name.\n     *\n     * @see java.nio.charset.Charset\n     * @see java.io.InputStreamReader\n     *\n     * @return The name of the charset.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getLanguage()",
    "returnType" : "String",
    "comment" : "\n     * Get the ISO code for the language of the detected charset.\n     *\n     * @return The ISO code for the language or <code>null</code> if the language cannot be determined.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int compareTo(CharsetMatch other)",
    "returnType" : "int",
    "comment" : "\n     * Compare to other CharsetMatch objects.\n     * Comparison is based on the match confidence value, which\n     *   allows CharsetDetector.detectAll() to order its results.\n     *\n     * @param other the CharsetMatch object to compare against.\n     * @return  a negative integer, zero, or a positive integer as the\n     *          confidence level of this CharsetMatch\n     *          is less than, equal to, or greater than that of\n     *          the argument.\n     * @throws ClassCastException if the argument is not a CharsetMatch.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Reader getReader()", "public String getString() throws java.io.IOException", "public String getString(int maxLength) throws java.io.IOException", "public int getConfidence()", "public String getName()", "public String getLanguage()", "public int compareTo(CharsetMatch other)" ],
  "variableNames" : [ "fConfidence", "fRawInput", "fRawLength", "fInputStream", "fCharsetName", "fLang" ]
}