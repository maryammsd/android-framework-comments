{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothLeAudioCodecConfigMetadata.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothLeAudioCodecConfigMetadata",
  "comment" : "\n * A class representing the codec specific config metadata information defined in the Basic Audio\n * Profile.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SAMPLING_FREQUENCY_TYPE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FRAME_DURATION_TYPE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AUDIO_CHANNEL_LOCATION_TYPE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OCTETS_PER_FRAME_TYPE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioLocation",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSampleRate",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrameDuration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOctetsPerFrame",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRawMetadata",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_UNKNOWN",
    "type" : "int",
    "comment" : " Audio codec sampling frequency from metadata. ",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_8000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_16000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_24000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_32000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_44100",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_48000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_11025",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_22050",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_88200",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_96000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_176400",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_192000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_SAMPLING_FREQUENCY_384000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_FRAME_DURATION_UNKNOWN",
    "type" : "int",
    "comment" : " Audio codec config frame duration from metadata. ",
    "links" : [ ]
  }, {
    "name" : "CONFIG_FRAME_DURATION_7500",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_FRAME_DURATION_10000",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<BluetoothLeAudioCodecConfigMetadata>",
    "comment" : "\n     * A {@link Parcelable.Creator} to create {@link BluetoothLeAudioCodecConfigMetadata} from\n     * parcel.\n     *\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothLeAudioCodecConfigMetadata", "Parcelable.Creator" ]
  } ],
  "methods" : [ {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getAudioLocation()",
    "returnType" : "long",
    "comment" : "\n     * Get the audio location information as defined in the Generic Audio section of Bluetooth\n     * Assigned numbers.\n     *\n     * @return configured audio location, -1 if this metadata does not exist\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSampleRate()",
    "returnType" : "int",
    "comment" : "\n     * Get the audio sample rate information as defined in the Generic Audio section of Bluetooth\n     * Assigned numbers 6.12.4.1 Supported_Sampling_Frequencies.\n     *\n     * <p>Internally this is converted from Sampling_Frequency values as defined in 6.12.5.1\n     *\n     * @return configured sample rate from meta data, {@link\n     *     BluetoothLeAudioCodecConfig#SAMPLE_RATE_NONE} if this metadata does not exist\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothLeAudioCodecConfig#SAMPLE_RATE_NONE" ]
  }, {
    "name" : "public int getFrameDuration()",
    "returnType" : "int",
    "comment" : "\n     * Get the audio frame duration information as defined in the Generic Audio section of Bluetooth\n     * Assigned numbers 6.12.5.2 Frame_Duration.\n     *\n     * <p>Internally this is converted from Frame_Durations values as defined in 6.12.4.2\n     *\n     * @return configured frame duration from meta data, {@link\n     *     BluetoothLeAudioCodecConfig#FRAME_DURATION_NONE} if this metadata does not exist\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothLeAudioCodecConfig#FRAME_DURATION_NONE" ]
  }, {
    "name" : "public int getOctetsPerFrame()",
    "returnType" : "int",
    "comment" : "\n     * Get the audio octets per frame information as defined in the Generic Audio section of\n     * Bluetooth Assigned numbers.\n     *\n     * @return configured octets per frame from meta data 0 if this metadata does not exist\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getRawMetadata()",
    "returnType" : "byte[]",
    "comment" : "\n     * Get the raw bytes of stream metadata in Bluetooth LTV format.\n     *\n     * <p>Bluetooth LTV format for stream metadata is defined in the Generic Audio section of <a\n     * href=\"https://www.bluetooth.com/specifications/assigned-numbers/\">Bluetooth Assigned\n     * Numbers</a>, including metadata that was not covered by the getter methods in this class.\n     *\n     * @return raw bytes of stream metadata in Bluetooth LTV format\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static BluetoothLeAudioCodecConfigMetadata fromRawBytes(@NonNull byte[] rawBytes)",
    "returnType" : "BluetoothLeAudioCodecConfigMetadata",
    "comment" : "\n     * Construct a {@link BluetoothLeAudioCodecConfigMetadata} from raw bytes.\n     *\n     * <p>The byte array will be parsed and values for each getter will be populated\n     *\n     * <p>Raw metadata cannot be set using builder in order to maintain raw bytes and getter value\n     * consistency\n     *\n     * @param rawBytes raw bytes of stream metadata in Bluetooth LTV format\n     * @return parsed {@link BluetoothLeAudioCodecConfigMetadata} object\n     * @throws IllegalArgumentException if <var>rawBytes</var> is null or when the raw bytes cannot\n     *     be parsed to build the object\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothLeAudioCodecConfigMetadata" ]
  }, {
    "name" : "private static int convertToSampleRateBitset(int samplingFrequencyValue)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertToSamplingFrequencyValue(int sampleRateBitSet)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertToFrameDurationBitset(int frameDurationValue)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertToFrameDurationValue(int frameDurationBitset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean equals(@Nullable Object o)", "public int hashCode()", "public String toString()", "public long getAudioLocation()", "public int getSampleRate()", "public int getFrameDuration()", "public int getOctetsPerFrame()", "public byte[] getRawMetadata()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "public static BluetoothLeAudioCodecConfigMetadata fromRawBytes(@NonNull byte[] rawBytes)", "private static int convertToSampleRateBitset(int samplingFrequencyValue)", "private static int convertToSamplingFrequencyValue(int sampleRateBitSet)", "private static int convertToFrameDurationBitset(int frameDurationValue)", "private static int convertToFrameDurationValue(int frameDurationBitset)" ],
  "variableNames" : [ "SAMPLING_FREQUENCY_TYPE", "FRAME_DURATION_TYPE", "AUDIO_CHANNEL_LOCATION_TYPE", "OCTETS_PER_FRAME_TYPE", "mAudioLocation", "mSampleRate", "mFrameDuration", "mOctetsPerFrame", "mRawMetadata", "CONFIG_SAMPLING_FREQUENCY_UNKNOWN", "CONFIG_SAMPLING_FREQUENCY_8000", "CONFIG_SAMPLING_FREQUENCY_16000", "CONFIG_SAMPLING_FREQUENCY_24000", "CONFIG_SAMPLING_FREQUENCY_32000", "CONFIG_SAMPLING_FREQUENCY_44100", "CONFIG_SAMPLING_FREQUENCY_48000", "CONFIG_SAMPLING_FREQUENCY_11025", "CONFIG_SAMPLING_FREQUENCY_22050", "CONFIG_SAMPLING_FREQUENCY_88200", "CONFIG_SAMPLING_FREQUENCY_96000", "CONFIG_SAMPLING_FREQUENCY_176400", "CONFIG_SAMPLING_FREQUENCY_192000", "CONFIG_SAMPLING_FREQUENCY_384000", "CONFIG_FRAME_DURATION_UNKNOWN", "CONFIG_FRAME_DURATION_7500", "CONFIG_FRAME_DURATION_10000", "CREATOR" ]
}