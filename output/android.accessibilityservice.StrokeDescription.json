{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/accessibilityservice/GestureDescription.java",
  "packageName" : "android.accessibilityservice",
  "className" : "StrokeDescription",
  "comment" : "\n     * Immutable description of stroke that can be part of a gesture.\n     ",
  "variables" : [ {
    "name" : "INVALID_STROKE_ID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sIdCounter",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPath",
    "type" : "Path",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEndTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeToLengthConversion",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPathMeasure",
    "type" : "PathMeasure",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTapLocation",
    "type" : "float[]",
    "comment" : " The tap location is only set for zero-length paths",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContinued",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContinuedStrokeId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Path getPath()",
    "returnType" : "Path",
    "comment" : "\n         * Retrieve a copy of the path for this stroke\n         *\n         * @return A copy of the path\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getStartTime()",
    "returnType" : "long",
    "comment" : "\n         * Get the stroke's start time\n         *\n         * @return the start time for this stroke.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getDuration()",
    "returnType" : "long",
    "comment" : "\n         * Get the stroke's duration\n         *\n         * @return the duration for this stroke\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "\n         * Get the stroke's ID. The ID is used when a stroke is to be continued by another\n         * stroke in a future gesture.\n         *\n         * @return the ID of this stroke\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public StrokeDescription continueStroke(Path path, long startTime, long duration, boolean willContinue)",
    "returnType" : "StrokeDescription",
    "comment" : "\n         * Create a new stroke that will continue this one. This is only possible if this stroke\n         * will continue.\n         *\n         * @param path The path for the stroke that continues this one. The starting point of\n         *             this path must match the ending point of the stroke it continues.\n         * @param startTime The time, in milliseconds, from the time the gesture starts to the\n         *                  time this stroke should start. Must not be negative. This time is from\n         *                  the start of the new gesture, not the one being continued.\n         * @param duration The duration for the new stroke. Must not be negative.\n         * @param willContinue {@code true} if this stroke will be continued by one in the\n         *             next gesture {@code false} otherwise.\n         * @return\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean willContinue()",
    "returnType" : "boolean",
    "comment" : "\n         * Check if this stroke is marked to continue in the next gesture.\n         *\n         * @return {@code true} if the stroke is to be continued.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getContinuedStrokeId()",
    "returnType" : "int",
    "comment" : "\n         * Get the ID of the stroke that this one will continue.\n         *\n         * @return The ID of the stroke that this stroke continues, or 0 if no such stroke exists.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : " float getLength()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean getPosForTime(long time, float[] pos)",
    "returnType" : "boolean",
    "comment" : " Assumes hasPointForTime returns true ",
    "links" : [ ]
  }, {
    "name" : " boolean hasPointForTime(long time)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "INVALID_STROKE_ID", "sIdCounter", "mPath", "mStartTime", "mEndTime", "mTimeToLengthConversion", "mPathMeasure", "mTapLocation", "mId", "mContinued", "mContinuedStrokeId" ],
  "methodNames" : [ "public Path getPath()", "public long getStartTime()", "public long getDuration()", "public int getId()", "public StrokeDescription continueStroke(Path path, long startTime, long duration, boolean willContinue)", "public boolean willContinue()", "public int getContinuedStrokeId()", " float getLength()", " boolean getPosForTime(long time, float[] pos)", " boolean hasPointForTime(long time)" ]
}