{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/WindowContext.java",
  "packageName" : "android.app",
  "className" : "WindowContext",
  "comment" : "\n * {@link WindowContext} is a context for non-activity windows such as\n * {@link android.view.WindowManager.LayoutParams#TYPE_APPLICATION_OVERLAY} windows or system\n * windows. Its resources and configuration are adjusted to the area of the display that will be\n * used when a new window is added via {@link android.view.WindowManager#addView}.\n *\n * @see Context#createWindowContext(int, Bundle)\n * @hide\n ",
  "variables" : [ {
    "name" : "mWindowManager",
    "type" : "WindowManagerImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWms",
    "type" : "IWindowManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToken",
    "type" : "WindowTokenClient",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOwnsToken",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static ContextImpl createBaseWindowContext(Context outer, IBinder token)",
    "returnType" : "ContextImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object getSystemService(String name)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void release()",
    "returnType" : "void",
    "comment" : " Used for test to invoke because we can't invoke finalize directly. ",
    "links" : [ ]
  }, {
    "name" : " void destroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mWindowManager", "mWms", "mToken", "mOwnsToken" ],
  "methodNames" : [ "private static ContextImpl createBaseWindowContext(Context outer, IBinder token)", "public Object getSystemService(String name)", "protected void finalize() throws Throwable", "public void release()", " void destroy()" ]
}