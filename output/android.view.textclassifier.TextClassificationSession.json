{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/textclassifier/TextClassificationSession.java",
  "packageName" : "android.view.textclassifier",
  "className" : "TextClassificationSession",
  "comment" : "\n * Session-aware TextClassifier.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDelegate",
    "type" : "TextClassifier",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEventHelper",
    "type" : "SelectionEventHelper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionId",
    "type" : "TextClassificationSessionId",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClassificationContext",
    "type" : "TextClassificationContext",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCleaner",
    "type" : "Cleaner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDestroyed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public TextSelection suggestSelection(TextSelection.Request request)",
    "returnType" : "TextSelection",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void initializeRemoteSession()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TextClassification classifyText(TextClassification.Request request)",
    "returnType" : "TextClassification",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TextLinks generateLinks(TextLinks.Request request)",
    "returnType" : "TextLinks",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ConversationActions suggestConversationActions(ConversationActions.Request request)",
    "returnType" : "ConversationActions",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TextLanguage detectLanguage(TextLanguage.Request request)",
    "returnType" : "TextLanguage",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaxGenerateLinksTextLength()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSelectionEvent(SelectionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onTextClassifierEvent(TextClassifierEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isDestroyed()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private T checkDestroyedAndRun(Supplier<T> responseSupplier)",
    "returnType" : "T",
    "comment" : "\n     * Check whether the TextClassification Session was destroyed before and after the actual API\n     * invocation, and return response if not.\n     *\n     * @param responseSupplier a Supplier that represents a TextClassifier call\n     * @return the response of the TextClassifier call\n     * @throws IllegalStateException if this TextClassification session was destroyed before the\n     *                               call returned\n     * @see #isDestroyed()\n     * @see #destroy()\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public TextSelection suggestSelection(TextSelection.Request request)", "private void initializeRemoteSession()", "public TextClassification classifyText(TextClassification.Request request)", "public TextLinks generateLinks(TextLinks.Request request)", "public ConversationActions suggestConversationActions(ConversationActions.Request request)", "public TextLanguage detectLanguage(TextLanguage.Request request)", "public int getMaxGenerateLinksTextLength()", "public void onSelectionEvent(SelectionEvent event)", "public void onTextClassifierEvent(TextClassifierEvent event)", "public void destroy()", "public boolean isDestroyed()", "private T checkDestroyedAndRun(Supplier<T> responseSupplier)" ],
  "variableNames" : [ "LOG_TAG", "mDelegate", "mEventHelper", "mSessionId", "mClassificationContext", "mCleaner", "mLock", "mDestroyed" ]
}