{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/tv/TvTrackInfo.java",
  "packageName" : "android.media.tv",
  "className" : "Builder",
  "comment" : "\n     * A builder class for creating {@link TvTrackInfo} objects.\n     ",
  "variables" : [ {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLanguage",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDescription",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncoding",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncrypted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioChannelCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioSampleRate",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioDescription",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHardOfHearing",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSpokenSubtitle",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVideoWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVideoHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVideoFrameRate",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVideoPixelAspectRatio",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVideoActiveFormatDescription",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtra",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setLanguage(@NonNull String language)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the language information of the current track.\n         *\n         * @param language The language string encoded by either ISO 639-1 or ISO 639-2/T.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDescription(@NonNull CharSequence description)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a user readable description for the current track.\n         *\n         * @param description The user readable description.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setEncoding(@Nullable String encoding)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the encoding of the track.\n         *\n         * <p>For example of broadcast, codec information may be referred to broadcast standard\n         * (e.g. Component Descriptor of ETSI EN 300 468). In the case that track type is subtitle,\n         * mime type could be defined in broadcast standard (e.g. \"text/dvb.subtitle\" or\n         * \"text/dvb.teletext\" in ETSI TS 102 812 V1.3.1 section 7.6).\n         *\n         * @param encoding The encoding of the track in the form of mime type.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setEncrypted(boolean encrypted)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the encryption status of the track.\n         *\n         * <p>For example: ISO/IEC 13818-1 defines a CA descriptor that can be used to determine the\n         * encryption status of some broadcast streams.\n         *\n         * @param encrypted The encryption status of the track.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAudioChannelCount(int audioChannelCount)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the audio channel count. Valid only for {@link #TYPE_AUDIO} tracks.\n         *\n         * @param audioChannelCount The audio channel count.\n         * @throws IllegalStateException if not called on an audio track\n         ",
    "links" : [ "#TYPE_AUDIO" ]
  }, {
    "name" : "public Builder setAudioSampleRate(int audioSampleRate)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the audio sample rate, in the unit of Hz. Valid only for {@link #TYPE_AUDIO}\n         * tracks.\n         *\n         * @param audioSampleRate The audio sample rate.\n         * @throws IllegalStateException if not called on an audio track\n         ",
    "links" : [ "#TYPE_AUDIO" ]
  }, {
    "name" : "public Builder setAudioDescription(boolean audioDescription)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the audio description attribute of the audio. Valid only for {@link #TYPE_AUDIO}\n         * tracks.\n         *\n         * <p>For example of broadcast, audio description information may be referred to broadcast\n         * standard (e.g. ISO 639 Language Descriptor of ISO/IEC 13818-1, Supplementary Audio\n         * Language Descriptor, AC-3 Descriptor, Enhanced AC-3 Descriptor, AAC Descriptor of ETSI EN\n         * 300 468).\n         *\n         * @param audioDescription The audio description attribute of the audio.\n         * @throws IllegalStateException if not called on an audio track\n         ",
    "links" : [ "#TYPE_AUDIO" ]
  }, {
    "name" : "public Builder setHardOfHearing(boolean hardOfHearing)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the hard of hearing attribute of the track. Valid only for {@link #TYPE_AUDIO} and\n         * {@link #TYPE_SUBTITLE} tracks.\n         *\n         * <p>For example of broadcast, hard of hearing information may be referred to broadcast\n         * standard (e.g. ISO 639 Language Descriptor of ISO/IEC 13818-1, Supplementary Audio\n         * Language Descriptor, AC-3 Descriptor, Enhanced AC-3 Descriptor, AAC Descriptor of ETSI EN\n         * 300 468).\n         *\n         * @param hardOfHearing The hard of hearing attribute of the track.\n         * @throws IllegalStateException if not called on an audio track or a subtitle track\n         ",
    "links" : [ "#TYPE_AUDIO", "#TYPE_SUBTITLE" ]
  }, {
    "name" : "public Builder setSpokenSubtitle(boolean spokenSubtitle)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the spoken subtitle attribute of the audio. Valid only for {@link #TYPE_AUDIO}\n         * tracks.\n         *\n         * <p>For example of broadcast, spoken subtitle information may be referred to broadcast\n         * standard (e.g. Supplementary Audio Language Descriptor of ETSI EN 300 468).\n         *\n         * @param spokenSubtitle The spoken subtitle attribute of the audio.\n         * @throws IllegalStateException if not called on an audio track\n         ",
    "links" : [ "#TYPE_AUDIO" ]
  }, {
    "name" : "public Builder setVideoWidth(int videoWidth)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the width of the video, in the unit of pixels. Valid only for {@link #TYPE_VIDEO}\n         * tracks.\n         *\n         * @param videoWidth The width of the video.\n         * @throws IllegalStateException if not called on a video track\n         ",
    "links" : [ "#TYPE_VIDEO" ]
  }, {
    "name" : "public Builder setVideoHeight(int videoHeight)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the height of the video, in the unit of pixels. Valid only for {@link #TYPE_VIDEO}\n         * tracks.\n         *\n         * @param videoHeight The height of the video.\n         * @throws IllegalStateException if not called on a video track\n         ",
    "links" : [ "#TYPE_VIDEO" ]
  }, {
    "name" : "public Builder setVideoFrameRate(float videoFrameRate)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the frame rate of the video, in the unit fps (frames per rate). Valid only for\n         * {@link #TYPE_VIDEO} tracks.\n         *\n         * @param videoFrameRate The frame rate of the video.\n         * @throws IllegalStateException if not called on a video track\n         ",
    "links" : [ "#TYPE_VIDEO" ]
  }, {
    "name" : "public Builder setVideoPixelAspectRatio(float videoPixelAspectRatio)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the pixel aspect ratio (the ratio of a pixel's width to its height) of the video.\n         * Valid only for {@link #TYPE_VIDEO} tracks.\n         *\n         * <p>This is needed for applications to be able to scale the video properly for some video\n         * formats such as 720x576 4:3 and 720x576 16:9 where pixels are not square. By default,\n         * applications assume the value of 1.0 (square pixels), so it is not necessary to set the\n         * pixel aspect ratio for most video formats.\n         *\n         * @param videoPixelAspectRatio The pixel aspect ratio of the video.\n         * @throws IllegalStateException if not called on a video track\n         ",
    "links" : [ "#TYPE_VIDEO" ]
  }, {
    "name" : "public Builder setVideoActiveFormatDescription(byte videoActiveFormatDescription)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the Active Format Description (AFD) code of the video.\n         * Valid only for {@link #TYPE_VIDEO} tracks.\n         *\n         * <p>This is needed for applications to be able to scale the video properly based on the\n         * information about where in the coded picture the active video is.\n         * The complete list of values are defined in ETSI TS 101 154 V1.7.1 Annex B, ATSC A/53 Part\n         * 4 and SMPTE 2016-1-2007.\n         *\n         * @param videoActiveFormatDescription The AFD code of the video.\n         * @throws IllegalStateException if not called on a video track\n         ",
    "links" : [ "#TYPE_VIDEO" ]
  }, {
    "name" : "public Builder setExtra(@NonNull Bundle extra)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the extra information about the current track.\n         *\n         * @param extra The extra information.\n         ",
    "links" : [ ]
  }, {
    "name" : "public TvTrackInfo build()",
    "returnType" : "TvTrackInfo",
    "comment" : "\n         * Creates a {@link TvTrackInfo} instance with the specified fields.\n         *\n         * @return The new {@link TvTrackInfo} instance\n         ",
    "links" : [ "TvTrackInfo", "TvTrackInfo" ]
  } ],
  "variableNames" : [ "mId", "mType", "mLanguage", "mDescription", "mEncoding", "mEncrypted", "mAudioChannelCount", "mAudioSampleRate", "mAudioDescription", "mHardOfHearing", "mSpokenSubtitle", "mVideoWidth", "mVideoHeight", "mVideoFrameRate", "mVideoPixelAspectRatio", "mVideoActiveFormatDescription", "mExtra" ],
  "methodNames" : [ "public Builder setLanguage(@NonNull String language)", "public Builder setDescription(@NonNull CharSequence description)", "public Builder setEncoding(@Nullable String encoding)", "public Builder setEncrypted(boolean encrypted)", "public Builder setAudioChannelCount(int audioChannelCount)", "public Builder setAudioSampleRate(int audioSampleRate)", "public Builder setAudioDescription(boolean audioDescription)", "public Builder setHardOfHearing(boolean hardOfHearing)", "public Builder setSpokenSubtitle(boolean spokenSubtitle)", "public Builder setVideoWidth(int videoWidth)", "public Builder setVideoHeight(int videoHeight)", "public Builder setVideoFrameRate(float videoFrameRate)", "public Builder setVideoPixelAspectRatio(float videoPixelAspectRatio)", "public Builder setVideoActiveFormatDescription(byte videoActiveFormatDescription)", "public Builder setExtra(@NonNull Bundle extra)", "public TvTrackInfo build()" ]
}