{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/SearchResult.java",
  "packageName" : "android.app.appsearch",
  "className" : "SearchResult",
  "comment" : "\n * This class represents one of the results obtained from an AppSearch query.\n *\n * <p>This allows clients to obtain:\n *\n * <ul>\n *   <li>The document which matched, using {@link #getGenericDocument}\n *   <li>Information about which properties in the document matched, and \"snippet\" information\n *       containing textual summaries of the document's matches, using {@link #getMatchInfos}\n * </ul>\n *\n * <p>\"Snippet\" refers to a substring of text from the content of document that is returned as a\n * part of search result.\n *\n * @see SearchResults\n ",
  "links" : [ "#getGenericDocument", "#getMatchInfos" ],
  "variables" : [ {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SearchResult>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDocument",
    "type" : "GenericDocumentParcel",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMatchInfos",
    "type" : "List<MatchInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDatabaseName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRankingSignal",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mJoinedResults",
    "type" : "List<SearchResult>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDocumentCached",
    "type" : "GenericDocument",
    "comment" : " Cache of the {@link GenericDocument}. Comes from mDocument at first use. ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "mMatchInfosCached",
    "type" : "List<MatchInfo>",
    "comment" : " Cache of the inflated {@link MatchInfo}. Comes from inflating mMatchInfos at first use. ",
    "links" : [ "MatchInfo" ]
  } ],
  "methods" : [ {
    "name" : "public GenericDocument getGenericDocument()",
    "returnType" : "GenericDocument",
    "comment" : "\n     * Contains the matching {@link GenericDocument}.\n     *\n     * @return Document object which matched the query.\n     ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public List<MatchInfo> getMatchInfos()",
    "returnType" : "List<MatchInfo>",
    "comment" : "\n     * Returns a list of {@link MatchInfo}s providing information about how the document in {@link\n     * #getGenericDocument} matched the query.\n     *\n     * @return List of matches based on {@link SearchSpec}. If snippeting is disabled using {@link\n     *     SearchSpec.Builder#setSnippetCount} or {@link\n     *     SearchSpec.Builder#setSnippetCountPerProperty}, for all results after that value, this\n     *     method returns an empty list.\n     ",
    "links" : [ "SearchSpec.Builder#setSnippetCount", "#getGenericDocument", "MatchInfo", "SearchSpec.Builder#setSnippetCountPerProperty", "android.app.appsearch.SearchSpec" ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n     * Contains the package name of the app that stored the {@link GenericDocument}.\n     *\n     * @return Package name that stored the document\n     ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public String getDatabaseName()",
    "returnType" : "String",
    "comment" : "\n     * Contains the database name that stored the {@link GenericDocument}.\n     *\n     * @return Name of the database within which the document is stored\n     ",
    "links" : [ "android.app.appsearch.GenericDocument" ]
  }, {
    "name" : "public double getRankingSignal()",
    "returnType" : "double",
    "comment" : "\n     * Returns the ranking signal of the {@link GenericDocument}, according to the ranking strategy\n     * set in {@link SearchSpec.Builder#setRankingStrategy(int)}.\n     *\n     * <p>The meaning of the ranking signal and its value is determined by the selected ranking\n     * strategy:\n     *\n     * <ul>\n     *   <li>{@link SearchSpec#RANKING_STRATEGY_NONE} - this value will be 0\n     *   <li>{@link SearchSpec#RANKING_STRATEGY_DOCUMENT_SCORE} - the value returned by calling\n     *       {@link GenericDocument#getScore()} on the document returned by {@link\n     *       #getGenericDocument()}\n     *   <li>{@link SearchSpec#RANKING_STRATEGY_CREATION_TIMESTAMP} - the value returned by calling\n     *       {@link GenericDocument#getCreationTimestampMillis()} on the document returned by {@link\n     *       #getGenericDocument()}\n     *   <li>{@link SearchSpec#RANKING_STRATEGY_RELEVANCE_SCORE} - an arbitrary double value where a\n     *       higher value means more relevant\n     *   <li>{@link SearchSpec#RANKING_STRATEGY_USAGE_COUNT} - the number of times usage has been\n     *       reported for the document returned by {@link #getGenericDocument()}\n     *   <li>{@link SearchSpec#RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP} - the timestamp of the\n     *       most recent usage that has been reported for the document returned by {@link\n     *       #getGenericDocument()}\n     * </ul>\n     *\n     * @return Ranking signal of the document\n     ",
    "links" : [ "android.app.appsearch.SearchSpec#RANKING_STRATEGY_DOCUMENT_SCORE", "#getGenericDocument()", "android.app.appsearch.SearchSpec#RANKING_STRATEGY_USAGE_COUNT", "android.app.appsearch.GenericDocument#getScore()", "android.app.appsearch.GenericDocument#getCreationTimestampMillis()", "android.app.appsearch.SearchSpec#RANKING_STRATEGY_NONE", "android.app.appsearch.GenericDocument", "android.app.appsearch.SearchSpec#RANKING_STRATEGY_CREATION_TIMESTAMP", "android.app.appsearch.SearchSpec#RANKING_STRATEGY_USAGE_LAST_USED_TIMESTAMP", "SearchSpec.Builder#setRankingStrategy(int)", "android.app.appsearch.SearchSpec#RANKING_STRATEGY_RELEVANCE_SCORE" ]
  }, {
    "name" : "public List<SearchResult> getJoinedResults()",
    "returnType" : "List<SearchResult>",
    "comment" : "\n     * Gets a list of {@link SearchResult} joined from the join operation.\n     *\n     * <p>These joined documents match the outer document as specified in the {@link JoinSpec} with\n     * parentPropertyExpression and childPropertyExpression. They are ordered according to the\n     * {@link JoinSpec#getNestedSearchSpec}, and as many SearchResults as specified by {@link\n     * JoinSpec#getMaxJoinedResultCount} will be returned. If no {@link JoinSpec} was specified,\n     * this returns an empty list.\n     *\n     * <p>This method is inefficient to call repeatedly, as new {@link SearchResult} objects are\n     * created each time.\n     *\n     * @return a List of SearchResults containing joined documents.\n     ",
    "links" : [ "android.app.appsearch.JoinSpec#getNestedSearchSpec", "android.app.appsearch.JoinSpec#getMaxJoinedResultCount", "android.app.appsearch.JoinSpec", "android.app.appsearch.SearchResult" ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public GenericDocument getGenericDocument()", "public List<MatchInfo> getMatchInfos()", "public String getPackageName()", "public String getDatabaseName()", "public double getRankingSignal()", "public List<SearchResult> getJoinedResults()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "CREATOR", "mDocument", "mMatchInfos", "mPackageName", "mDatabaseName", "mRankingSignal", "mJoinedResults", "mDocumentCached", "mMatchInfosCached" ]
}