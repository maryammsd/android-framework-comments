{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/renderscript/Double2.java",
  "packageName" : "android.renderscript",
  "className" : "Double2",
  "comment" : "\n * Vector version of the basic double type.\n * Provides two double fields packed.\n ",
  "variables" : [ {
    "name" : "x",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "y",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Double2 add(Double2 a, Double2 b)",
    "returnType" : "Double2",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void add(Double2 value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public void add(double value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Double2 add(Double2 a, double b)",
    "returnType" : "Double2",
    "comment" : " @hide\n     * Vector add\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sub(Double2 value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Double2 sub(Double2 a, Double2 b)",
    "returnType" : "Double2",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void sub(double value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Double2 sub(Double2 a, double b)",
    "returnType" : "Double2",
    "comment" : " @hide\n     * Vector subtraction\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mul(Double2 value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Double2 mul(Double2 a, Double2 b)",
    "returnType" : "Double2",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void mul(double value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Double2 mul(Double2 a, double b)",
    "returnType" : "Double2",
    "comment" : " @hide\n     * Vector multiplication\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void div(Double2 value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Double2 div(Double2 a, Double2 b)",
    "returnType" : "Double2",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void div(double value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Double2 div(Double2 a, double b)",
    "returnType" : "Double2",
    "comment" : " @hide\n     * Vector division\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public double dotProduct(Double2 a)",
    "returnType" : "double",
    "comment" : " @hide\n     * Vector dot Product\n     *\n     * @param a\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Double dotProduct(Double2 a, Double2 b)",
    "returnType" : "Double",
    "comment" : " @hide\n     * Vector dot Product\n     *\n     * @param a\n     * @param b\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addMultiple(Double2 a, double factor)",
    "returnType" : "void",
    "comment" : " @hide\n     * Vector add Multiple\n     *\n     * @param a\n     * @param factor\n     ",
    "links" : [ ]
  }, {
    "name" : "public void set(Double2 a)",
    "returnType" : "void",
    "comment" : " @hide\n     * Set vector value by double2\n     *\n     * @param a\n     ",
    "links" : [ ]
  }, {
    "name" : "public void negate()",
    "returnType" : "void",
    "comment" : " @hide\n     * Set vector negate\n     ",
    "links" : [ ]
  }, {
    "name" : "public int length()",
    "returnType" : "int",
    "comment" : " @hide\n     * Get vector length\n     *\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public double elementSum()",
    "returnType" : "double",
    "comment" : " @hide\n     * Return the element sum of vector\n     *\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public double get(int i)",
    "returnType" : "double",
    "comment" : " @hide\n     * Get the vector field value by index\n     *\n     * @param i\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAt(int i, double value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Set the vector field value by index\n     *\n     * @param i\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addAt(int i, double value)",
    "returnType" : "void",
    "comment" : " @hide\n     * Add the vector field value by index\n     *\n     * @param i\n     * @param value\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setValues(double x, double y)",
    "returnType" : "void",
    "comment" : " @hide\n     * Set the vector field value\n     *\n     * @param x\n     * @param y\n     ",
    "links" : [ ]
  }, {
    "name" : "public void copyTo(double[] data, int offset)",
    "returnType" : "void",
    "comment" : " @hide\n     * Copy the vector to double array\n     *\n     * @param data\n     * @param offset\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "x", "y" ],
  "methodNames" : [ "public static Double2 add(Double2 a, Double2 b)", "public void add(Double2 value)", "public void add(double value)", "public static Double2 add(Double2 a, double b)", "public void sub(Double2 value)", "public static Double2 sub(Double2 a, Double2 b)", "public void sub(double value)", "public static Double2 sub(Double2 a, double b)", "public void mul(Double2 value)", "public static Double2 mul(Double2 a, Double2 b)", "public void mul(double value)", "public static Double2 mul(Double2 a, double b)", "public void div(Double2 value)", "public static Double2 div(Double2 a, Double2 b)", "public void div(double value)", "public static Double2 div(Double2 a, double b)", "public double dotProduct(Double2 a)", "public static Double dotProduct(Double2 a, Double2 b)", "public void addMultiple(Double2 a, double factor)", "public void set(Double2 a)", "public void negate()", "public int length()", "public double elementSum()", "public double get(int i)", "public void setAt(int i, double value)", "public void addAt(int i, double value)", "public void setValues(double x, double y)", "public void copyTo(double[] data, int offset)" ]
}