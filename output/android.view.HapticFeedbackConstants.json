{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/HapticFeedbackConstants.java",
  "packageName" : "android.view",
  "className" : "HapticFeedbackConstants",
  "comment" : "\n * Constants to be used to perform haptic feedback effects via\n * {@link View#performHapticFeedback(int)} \n ",
  "links" : [ "android.view.View#performHapticFeedback(int)" ],
  "variables" : [ {
    "name" : "NO_HAPTICS",
    "type" : "int",
    "comment" : "\n     * No haptic feedback should be performed. Applications may use this value to indicate skipping\n     * a call to {@link View#performHapticFeedback} entirely, or else rely that it will immediately\n     * return {@code false}.\n     ",
    "links" : [ "android.view.View#performHapticFeedback" ]
  }, {
    "name" : "LONG_PRESS",
    "type" : "int",
    "comment" : "\n     * The user has performed a long press on an object that is resulting\n     * in an action being performed.\n     ",
    "links" : [ ]
  }, {
    "name" : "VIRTUAL_KEY",
    "type" : "int",
    "comment" : "\n     * The user has pressed on a virtual on-screen key.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEYBOARD_TAP",
    "type" : "int",
    "comment" : "\n     * The user has pressed a soft keyboard key.\n     ",
    "links" : [ ]
  }, {
    "name" : "CLOCK_TICK",
    "type" : "int",
    "comment" : "\n     * The user has pressed either an hour or minute tick of a Clock.\n     ",
    "links" : [ ]
  }, {
    "name" : "CALENDAR_DATE",
    "type" : "int",
    "comment" : "\n     * The user has pressed either a day or month or year date of a Calendar.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CONTEXT_CLICK",
    "type" : "int",
    "comment" : "\n     * The user has performed a context click on an object.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEYBOARD_PRESS",
    "type" : "int",
    "comment" : "\n     * The user has pressed a virtual or software keyboard key.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEYBOARD_RELEASE",
    "type" : "int",
    "comment" : "\n     * The user has released a virtual keyboard key.\n     ",
    "links" : [ ]
  }, {
    "name" : "VIRTUAL_KEY_RELEASE",
    "type" : "int",
    "comment" : "\n     * The user has released a virtual key.\n     ",
    "links" : [ ]
  }, {
    "name" : "TEXT_HANDLE_MOVE",
    "type" : "int",
    "comment" : "\n     * The user has performed a selection/insertion handle move on text field.\n     ",
    "links" : [ ]
  }, {
    "name" : "DRAG_CROSSING",
    "type" : "int",
    "comment" : "\n     * The user has moved the dragged object within a droppable area.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "GESTURE_START",
    "type" : "int",
    "comment" : "\n     * The user has started a gesture (e.g. on the soft keyboard).\n     ",
    "links" : [ ]
  }, {
    "name" : "GESTURE_END",
    "type" : "int",
    "comment" : "\n     * The user has finished a gesture (e.g. on the soft keyboard).\n     ",
    "links" : [ ]
  }, {
    "name" : "EDGE_SQUEEZE",
    "type" : "int",
    "comment" : "\n     * The user's squeeze crossed the gesture's initiation threshold.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "EDGE_RELEASE",
    "type" : "int",
    "comment" : "\n     * The user's squeeze crossed the gesture's release threshold.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CONFIRM",
    "type" : "int",
    "comment" : "\n     * A haptic effect to signal the confirmation or successful completion of a user\n     * interaction.\n     ",
    "links" : [ ]
  }, {
    "name" : "REJECT",
    "type" : "int",
    "comment" : "\n     * A haptic effect to signal the rejection or failure of a user interaction.\n     ",
    "links" : [ ]
  }, {
    "name" : "SCROLL_TICK",
    "type" : "int",
    "comment" : "\n     * A haptic effect to provide texture while scrolling.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "SCROLL_ITEM_FOCUS",
    "type" : "int",
    "comment" : "\n     * A haptic effect to signal that a list element has been focused while scrolling.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "SCROLL_LIMIT",
    "type" : "int",
    "comment" : "\n     * A haptic effect to signal reaching the scrolling limits of a list while scrolling.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "TOGGLE_ON",
    "type" : "int",
    "comment" : "\n     * The user has toggled a switch or button into the on position.\n     ",
    "links" : [ ]
  }, {
    "name" : "TOGGLE_OFF",
    "type" : "int",
    "comment" : "\n     * The user has toggled a switch or button into the off position.\n     ",
    "links" : [ ]
  }, {
    "name" : "GESTURE_THRESHOLD_ACTIVATE",
    "type" : "int",
    "comment" : "\n     * The user is executing a swipe/drag-style gesture, such as pull-to-refresh, where the\n     * gesture action is “eligible” at a certain threshold of movement, and can be cancelled by\n     * moving back past the threshold. This constant indicates that the user's motion has just\n     * passed the threshold for the action to be activated on release.\n     *\n     * @see #GESTURE_THRESHOLD_DEACTIVATE\n     ",
    "links" : [ ]
  }, {
    "name" : "GESTURE_THRESHOLD_DEACTIVATE",
    "type" : "int",
    "comment" : "\n     * The user is executing a swipe/drag-style gesture, such as pull-to-refresh, where the\n     * gesture action is “eligible” at a certain threshold of movement, and can be cancelled by\n     * moving back past the threshold. This constant indicates that the user's motion has just\n     * re-crossed back \"under\" the threshold for the action to be activated, meaning the gesture is\n     * currently in a cancelled state.\n     *\n     * @see #GESTURE_THRESHOLD_ACTIVATE\n     ",
    "links" : [ ]
  }, {
    "name" : "DRAG_START",
    "type" : "int",
    "comment" : "\n     * The user has started a drag-and-drop gesture. The drag target has just been \"picked up\".\n     ",
    "links" : [ ]
  }, {
    "name" : "SEGMENT_TICK",
    "type" : "int",
    "comment" : "\n     * The user is switching between a series of potential choices, for example items in a list\n     * or discrete points on a slider.\n     *\n     * <p>See also {@link #SEGMENT_FREQUENT_TICK} for cases where density of choices is high, and\n     * the haptics should be lighter or suppressed for a better user experience.\n     ",
    "links" : [ "#SEGMENT_FREQUENT_TICK" ]
  }, {
    "name" : "SEGMENT_FREQUENT_TICK",
    "type" : "int",
    "comment" : "\n     * The user is switching between a series of many potential choices, for example minutes on a\n     * clock face, or individual percentages. This constant is expected to be very soft, so as\n     * not to be uncomfortable when performed a lot in quick succession. If the device can’t make\n     * a suitably soft vibration, then it may not make any vibration.\n     *\n     * <p>Some specializations of this constant exist for specific actions, notably\n     * {@link #CLOCK_TICK} and {@link #TEXT_HANDLE_MOVE}.\n     *\n     * <p>See also {@link #SEGMENT_TICK}.\n    ",
    "links" : [ "#TEXT_HANDLE_MOVE", "#SEGMENT_TICK", "#CLOCK_TICK" ]
  }, {
    "name" : "SAFE_MODE_ENABLED",
    "type" : "int",
    "comment" : "\n     * The phone has booted with safe mode enabled.\n     * This is a private constant.  Feel free to renumber as desired.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ASSISTANT_BUTTON",
    "type" : "int",
    "comment" : "\n     * Invocation of the voice assistant via hardware button.\n     * This is a private constant.  Feel free to renumber as desired.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "LONG_PRESS_POWER_BUTTON",
    "type" : "int",
    "comment" : "\n     * The user has performed a long press on the power button hardware that is resulting\n     * in an action being performed.\n     * This is a private constant.  Feel free to renumber as desired.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "BIOMETRIC_CONFIRM",
    "type" : "int",
    "comment" : "\n     * A haptic effect to signal the confirmation of a user biometric authentication\n     * (e.g. fingerprint reading).\n     * This is a private constant to be used only by system apps.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "BIOMETRIC_REJECT",
    "type" : "int",
    "comment" : "\n     * A haptic effect to signal the rejection of a user biometric authentication attempt\n     * (e.g. fingerprint reading).\n     * This is a private constant to be used only by system apps.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_IGNORE_VIEW_SETTING",
    "type" : "int",
    "comment" : "\n     * Flag for {@link View#performHapticFeedback(int, int)\n     * View.performHapticFeedback(int, int)}: Ignore the setting in the\n     * view for whether to perform haptic feedback, do it always.\n     ",
    "links" : [ "android.view.View#performHapticFeedback(int" ]
  }, {
    "name" : "FLAG_IGNORE_GLOBAL_SETTING",
    "type" : "int",
    "comment" : "\n     * Flag for {@link View#performHapticFeedback(int, int)\n     * View.performHapticFeedback(int, int)}: Ignore the global setting\n     * for whether to perform haptic feedback, do it always.\n     *\n     * @deprecated Starting from {@link android.os.Build.VERSION_CODES#TIRAMISU} only privileged\n     * apps can ignore user settings for touch feedback.\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#TIRAMISU", "android.view.View#performHapticFeedback(int" ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "NO_HAPTICS", "LONG_PRESS", "VIRTUAL_KEY", "KEYBOARD_TAP", "CLOCK_TICK", "CALENDAR_DATE", "CONTEXT_CLICK", "KEYBOARD_PRESS", "KEYBOARD_RELEASE", "VIRTUAL_KEY_RELEASE", "TEXT_HANDLE_MOVE", "DRAG_CROSSING", "GESTURE_START", "GESTURE_END", "EDGE_SQUEEZE", "EDGE_RELEASE", "CONFIRM", "REJECT", "SCROLL_TICK", "SCROLL_ITEM_FOCUS", "SCROLL_LIMIT", "TOGGLE_ON", "TOGGLE_OFF", "GESTURE_THRESHOLD_ACTIVATE", "GESTURE_THRESHOLD_DEACTIVATE", "DRAG_START", "SEGMENT_TICK", "SEGMENT_FREQUENT_TICK", "SAFE_MODE_ENABLED", "ASSISTANT_BUTTON", "LONG_PRESS_POWER_BUTTON", "BIOMETRIC_CONFIRM", "BIOMETRIC_REJECT", "FLAG_IGNORE_VIEW_SETTING", "FLAG_IGNORE_GLOBAL_SETTING" ]
}