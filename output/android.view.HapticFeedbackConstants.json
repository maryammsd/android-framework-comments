{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/HapticFeedbackConstants.java",
  "packageName" : "android.view",
  "className" : "HapticFeedbackConstants",
  "comment" : "\n * Constants to be used to perform haptic feedback effects via\n * {@link View#performHapticFeedback(int)} \n ",
  "variables" : [ {
    "name" : "LONG_PRESS",
    "type" : "int",
    "comment" : "\n     * The user has performed a long press on an object that is resulting\n     * in an action being performed.\n     ",
    "links" : [ ]
  }, {
    "name" : "VIRTUAL_KEY",
    "type" : "int",
    "comment" : "\n     * The user has pressed on a virtual on-screen key.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEYBOARD_TAP",
    "type" : "int",
    "comment" : "\n     * The user has pressed a soft keyboard key.\n     ",
    "links" : [ ]
  }, {
    "name" : "CLOCK_TICK",
    "type" : "int",
    "comment" : "\n     * The user has pressed either an hour or minute tick of a Clock.\n     ",
    "links" : [ ]
  }, {
    "name" : "CALENDAR_DATE",
    "type" : "int",
    "comment" : "\n     * The user has pressed either a day or month or year date of a Calendar.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CONTEXT_CLICK",
    "type" : "int",
    "comment" : "\n     * The user has performed a context click on an object.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEYBOARD_PRESS",
    "type" : "int",
    "comment" : "\n     * The user has pressed a virtual or software keyboard key.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEYBOARD_RELEASE",
    "type" : "int",
    "comment" : "\n     * The user has released a virtual keyboard key.\n     ",
    "links" : [ ]
  }, {
    "name" : "VIRTUAL_KEY_RELEASE",
    "type" : "int",
    "comment" : "\n     * The user has released a virtual key.\n     ",
    "links" : [ ]
  }, {
    "name" : "TEXT_HANDLE_MOVE",
    "type" : "int",
    "comment" : "\n     * The user has performed a selection/insertion handle move on text field.\n     ",
    "links" : [ ]
  }, {
    "name" : "ENTRY_BUMP",
    "type" : "int",
    "comment" : "\n     * The user unlocked the device\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DRAG_CROSSING",
    "type" : "int",
    "comment" : "\n     * The user has moved the dragged object within a droppable area.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "GESTURE_START",
    "type" : "int",
    "comment" : "\n     * The user has started a gesture (e.g. on the soft keyboard).\n     ",
    "links" : [ ]
  }, {
    "name" : "GESTURE_END",
    "type" : "int",
    "comment" : "\n     * The user has finished a gesture (e.g. on the soft keyboard).\n     ",
    "links" : [ ]
  }, {
    "name" : "EDGE_SQUEEZE",
    "type" : "int",
    "comment" : "\n     * The user's squeeze crossed the gesture's initiation threshold.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "EDGE_RELEASE",
    "type" : "int",
    "comment" : "\n     * The user's squeeze crossed the gesture's release threshold.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CONFIRM",
    "type" : "int",
    "comment" : "\n     * A haptic effect to signal the confirmation or successful completion of a user\n     * interaction.\n     ",
    "links" : [ ]
  }, {
    "name" : "REJECT",
    "type" : "int",
    "comment" : "\n     * A haptic effect to signal the rejection or failure of a user interaction.\n     ",
    "links" : [ ]
  }, {
    "name" : "SAFE_MODE_ENABLED",
    "type" : "int",
    "comment" : "\n     * The phone has booted with safe mode enabled.\n     * This is a private constant.  Feel free to renumber as desired.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_IGNORE_VIEW_SETTING",
    "type" : "int",
    "comment" : "\n     * Flag for {@link View#performHapticFeedback(int, int)\n     * View.performHapticFeedback(int, int)}: Ignore the setting in the\n     * view for whether to perform haptic feedback, do it always.\n     ",
    "links" : [ "android.view.View#performHapticFeedback(int" ]
  }, {
    "name" : "FLAG_IGNORE_GLOBAL_SETTING",
    "type" : "int",
    "comment" : "\n     * Flag for {@link View#performHapticFeedback(int, int)\n     * View.performHapticFeedback(int, int)}: Ignore the global setting\n     * for whether to perform haptic feedback, do it always.\n     ",
    "links" : [ "android.view.View#performHapticFeedback(int" ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "LONG_PRESS", "VIRTUAL_KEY", "KEYBOARD_TAP", "CLOCK_TICK", "CALENDAR_DATE", "CONTEXT_CLICK", "KEYBOARD_PRESS", "KEYBOARD_RELEASE", "VIRTUAL_KEY_RELEASE", "TEXT_HANDLE_MOVE", "ENTRY_BUMP", "DRAG_CROSSING", "GESTURE_START", "GESTURE_END", "EDGE_SQUEEZE", "EDGE_RELEASE", "CONFIRM", "REJECT", "SAFE_MODE_ENABLED", "FLAG_IGNORE_VIEW_SETTING", "FLAG_IGNORE_GLOBAL_SETTING" ],
  "methodNames" : [ ]
}