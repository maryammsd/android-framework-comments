{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/PerformanceHintManager.java",
  "packageName" : "android.os",
  "className" : "PerformanceHintManager",
  "comment" : " The PerformanceHintManager allows apps to send performance hint to system. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mNativeManagerPtr",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static PerformanceHintManager create() throws ServiceManager.ServiceNotFoundException",
    "returnType" : "PerformanceHintManager",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getPreferredUpdateRateNanos()",
    "returnType" : "long",
    "comment" : "\n     * Get preferred update rate information for this device.\n     *\n     * @return the preferred update rate supported by device software\n     ",
    "links" : [ ]
  }, {
    "name" : "public Session createHintSession(@NonNull int[] tids, long initialTargetWorkDurationNanos)",
    "returnType" : "Session",
    "comment" : "\n     * Creates a {@link Session} for the given set of threads and sets their initial target work\n     * duration.\n     *\n     * @param tids The list of threads to be associated with this session. They must be part of\n     *     this process' thread group\n     * @param initialTargetWorkDurationNanos The desired duration in nanoseconds for the new\n     *     session\n     * @return the new session if it is supported on this device, null if hint session is not\n     *     supported on this device or the tid doesn't belong to the application\n     * @throws IllegalArgumentException if the thread id list is empty, or\n     *                                  initialTargetWorkDurationNanos is non-positive\n     ",
    "links" : [ "Session" ]
  }, {
    "name" : "private static native long nativeAcquireManager()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nativeGetPreferredUpdateRateNanos(long nativeManagerPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nativeCreateSession(long nativeManagerPtr, int[] tids, long initialTargetWorkDurationNanos)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int[] nativeGetThreadIds(long nativeSessionPtr)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeUpdateTargetWorkDuration(long nativeSessionPtr, long targetDurationNanos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeReportActualWorkDuration(long nativeSessionPtr, long actualDurationNanos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeCloseSession(long nativeSessionPtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeSendHint(long nativeSessionPtr, int hint)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeSetThreads(long nativeSessionPtr, int[] tids)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeSetPreferPowerEfficiency(long nativeSessionPtr, boolean enabled)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeReportActualWorkDuration(long nativeSessionPtr, long workPeriodStartTimestampNanos, long actualTotalDurationNanos, long actualCpuDurationNanos, long actualGpuDurationNanos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static PerformanceHintManager create() throws ServiceManager.ServiceNotFoundException", "public long getPreferredUpdateRateNanos()", "public Session createHintSession(@NonNull int[] tids, long initialTargetWorkDurationNanos)", "private static native long nativeAcquireManager()", "private static native long nativeGetPreferredUpdateRateNanos(long nativeManagerPtr)", "private static native long nativeCreateSession(long nativeManagerPtr, int[] tids, long initialTargetWorkDurationNanos)", "private static native int[] nativeGetThreadIds(long nativeSessionPtr)", "private static native void nativeUpdateTargetWorkDuration(long nativeSessionPtr, long targetDurationNanos)", "private static native void nativeReportActualWorkDuration(long nativeSessionPtr, long actualDurationNanos)", "private static native void nativeCloseSession(long nativeSessionPtr)", "private static native void nativeSendHint(long nativeSessionPtr, int hint)", "private static native void nativeSetThreads(long nativeSessionPtr, int[] tids)", "private static native void nativeSetPreferPowerEfficiency(long nativeSessionPtr, boolean enabled)", "private static native void nativeReportActualWorkDuration(long nativeSessionPtr, long workPeriodStartTimestampNanos, long actualTotalDurationNanos, long actualCpuDurationNanos, long actualGpuDurationNanos)" ],
  "variableNames" : [ "mNativeManagerPtr" ]
}