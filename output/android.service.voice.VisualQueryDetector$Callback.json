{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/voice/VisualQueryDetector.java",
  "packageName" : "android.service.voice",
  "className" : "Callback",
  "comment" : "\n     * A class that lets a VoiceInteractionService implementation interact with visual query\n     * detection APIs.\n     *\n     * Note that methods in this callbacks are not thread-safe so the invocation of each\n     * methods will have different order from how they are called in the\n     * {@link VisualQueryDetectionService}. It is expected to pass a single thread executor or a\n     * serial executor as the callback executor when creating the {@link VisualQueryDetector}\n     * with {@link VoiceInteractionService#createVisualQueryDetector(\n     * PersistableBundle, SharedMemory, Executor, Callback)}.\n     ",
  "links" : [ "android.service.voice.VoiceInteractionService#createVisualQueryDetector(", "android.service.voice.VisualQueryDetectionService", "android.service.voice.VisualQueryDetector" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onQueryDetected(@NonNull String partialQuery)",
    "returnType" : "void",
    "comment" : "\n         * Called when the {@link VisualQueryDetectionService} starts to stream partial queries\n         * with {@link VisualQueryDetectionService#streamQuery(String)}.\n         *\n         * @param partialQuery The partial query in a text form being streamed.\n         ",
    "links" : [ "android.service.voice.VisualQueryDetectionService#streamQuery(String)", "android.service.voice.VisualQueryDetectionService" ]
  }, {
    "name" : " void onQueryDetected(@NonNull VisualQueryDetectedResult partialResult)",
    "returnType" : "void",
    "comment" : "\n         * Called when the {@link VisualQueryDetectionService} starts to stream partial results\n         * with {@link VisualQueryDetectionService#streamQuery(VisualQueryDetectedResult)}.\n         *\n         * @param partialResult The partial query in a text form being streamed.\n         ",
    "links" : [ "android.service.voice.VisualQueryDetectionService", "android.service.voice.VisualQueryDetectionService#streamQuery(VisualQueryDetectedResult)" ]
  }, {
    "name" : " void onQueryRejected()",
    "returnType" : "void",
    "comment" : "\n         * Called when the {@link VisualQueryDetectionService} decides to abandon the streamed\n         * partial queries with {@link VisualQueryDetectionService#rejectQuery()}.\n         ",
    "links" : [ "android.service.voice.VisualQueryDetectionService#rejectQuery()", "android.service.voice.VisualQueryDetectionService" ]
  }, {
    "name" : " void onQueryFinished()",
    "returnType" : "void",
    "comment" : "\n         *  Called when the {@link VisualQueryDetectionService} finishes streaming partial queries\n         *  with {@link VisualQueryDetectionService#finishQuery()}.\n         ",
    "links" : [ "android.service.voice.VisualQueryDetectionService#finishQuery()", "android.service.voice.VisualQueryDetectionService" ]
  }, {
    "name" : " void onVisualQueryDetectionServiceInitialized(int status)",
    "returnType" : "void",
    "comment" : "\n         * Called when the {@link VisualQueryDetectionService} is created by the system and given a\n         * short amount of time to report its initialization state.\n         *\n         * @param status Info about initialization state of {@link VisualQueryDetectionService}; the\n         * allowed values are\n         * {@link SandboxedDetectionInitializer#INITIALIZATION_STATUS_SUCCESS},\n         * 1<->{@link SandboxedDetectionInitializer#getMaxCustomInitializationStatus()},\n         * {@link SandboxedDetectionInitializer#INITIALIZATION_STATUS_UNKNOWN}.\n         ",
    "links" : [ "android.service.voice.VisualQueryDetectionService", "android.service.voice.SandboxedDetectionInitializer#INITIALIZATION_STATUS_UNKNOWN", "android.service.voice.SandboxedDetectionInitializer#INITIALIZATION_STATUS_SUCCESS", "android.service.voice.SandboxedDetectionInitializer#getMaxCustomInitializationStatus()" ]
  }, {
    "name" : " void onVisualQueryDetectionServiceRestarted()",
    "returnType" : "void",
    "comment" : "\n         * Called with the {@link VisualQueryDetectionService} is restarted.\n         *\n         * Clients are expected to call {@link HotwordDetector#updateState} to share the state with\n         * the newly created service.\n         ",
    "links" : [ "android.service.voice.HotwordDetector#updateState", "android.service.voice.VisualQueryDetectionService" ]
  }, {
    "name" : " void onFailure(@NonNull VisualQueryDetectionServiceFailure visualQueryDetectionServiceFailure)",
    "returnType" : "void",
    "comment" : "\n         * Called when the detection fails due to an error occurs in the\n         * {@link VisualQueryDetectionService}, {@link VisualQueryDetectionServiceFailure} will be\n         * reported to the detector.\n         *\n         * @param visualQueryDetectionServiceFailure It provides the error code, error message and\n         *                                           suggested action.\n         ",
    "links" : [ "android.service.voice.VisualQueryDetectionService", "android.service.voice.VisualQueryDetectionServiceFailure" ]
  }, {
    "name" : " void onUnknownFailure(@NonNull String errorMessage)",
    "returnType" : "void",
    "comment" : "\n         * Called when the detection fails due to an unknown error occurs, an error message\n         * will be reported to the detector.\n         *\n         * @param errorMessage It provides the error message.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onQueryDetected(@NonNull String partialQuery)", " void onQueryDetected(@NonNull VisualQueryDetectedResult partialResult)", " void onQueryRejected()", " void onQueryFinished()", " void onVisualQueryDetectionServiceInitialized(int status)", " void onVisualQueryDetectionServiceRestarted()", " void onFailure(@NonNull VisualQueryDetectionServiceFailure visualQueryDetectionServiceFailure)", " void onUnknownFailure(@NonNull String errorMessage)" ],
  "variableNames" : [ ]
}