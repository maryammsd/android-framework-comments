{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/filterfw/core/ShaderProgram.java",
  "packageName" : "android.filterfw.core",
  "className" : "ShaderProgram",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "shaderProgramId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxTileSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGLEnvironment",
    "type" : "GLEnvironment",
    "comment" : " are still programs living in it.",
    "links" : [ ]
  }, {
    "name" : "mTimer",
    "type" : "StopWatchMap",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void setTimer()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static ShaderProgram createIdentity(FilterContext context)",
    "returnType" : "ShaderProgram",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public GLEnvironment getGLEnvironment()",
    "returnType" : "GLEnvironment",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void process(Frame[] inputs, Frame output)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setHostValue(String variableName, Object value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object getHostValue(String variableName)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAttributeValues(String attributeName, float[] data, int componentCount)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAttributeValues(String attributeName, VertexFrame vertexData, int type, int componentCount, int strideInBytes, int offsetInBytes, boolean normalize)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSourceRegion(Quad region)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTargetRegion(Quad region)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSourceRect(float x, float y, float width, float height)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTargetRect(float x, float y, float width, float height)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setClearsOutput(boolean clears)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setClearColor(float r, float g, float b)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setBlendEnabled(boolean enable)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setBlendFunc(int sfactor, int dfactor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDrawMode(int drawMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setVertexCount(int count)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMaximumTileSize(int size)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void beginDrawing()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static GLEnvironment getGLEnvironment(FilterContext context)",
    "returnType" : "GLEnvironment",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean allocate(GLEnvironment glEnv, String vertexShader, String fragmentShader)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean deallocate()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean compileAndLink()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean shaderProcess(GLFrame[] inputs, GLFrame output)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setUniformValue(String name, Object value)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native Object getUniformValue(String name)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public native boolean setSourceRegion(float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setTargetRegion(float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native ShaderProgram nativeCreateIdentity(GLEnvironment glEnv)",
    "returnType" : "ShaderProgram",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderClearsOutput(boolean clears)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderBlendEnabled(boolean enable)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderBlendFunc(int sfactor, int dfactor)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderClearColor(float r, float g, float b)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderDrawMode(int drawMode)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderTileCounts(int xCount, int yCount)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderVertexCount(int vertexCount)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean beginShaderDrawing()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderAttributeValues(String attributeName, float[] data, int componentCount)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native boolean setShaderAttributeVertexFrame(String attributeName, VertexFrame vertexData, int type, int componentCount, int strideInBytes, int offsetInBytes, boolean normalize)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void setTimer()", "public static ShaderProgram createIdentity(FilterContext context)", "protected void finalize() throws Throwable", "public GLEnvironment getGLEnvironment()", "public void process(Frame[] inputs, Frame output)", "public void setHostValue(String variableName, Object value)", "public Object getHostValue(String variableName)", "public void setAttributeValues(String attributeName, float[] data, int componentCount)", "public void setAttributeValues(String attributeName, VertexFrame vertexData, int type, int componentCount, int strideInBytes, int offsetInBytes, boolean normalize)", "public void setSourceRegion(Quad region)", "public void setTargetRegion(Quad region)", "public void setSourceRect(float x, float y, float width, float height)", "public void setTargetRect(float x, float y, float width, float height)", "public void setClearsOutput(boolean clears)", "public void setClearColor(float r, float g, float b)", "public void setBlendEnabled(boolean enable)", "public void setBlendFunc(int sfactor, int dfactor)", "public void setDrawMode(int drawMode)", "public void setVertexCount(int count)", "public void setMaximumTileSize(int size)", "public void beginDrawing()", "private static GLEnvironment getGLEnvironment(FilterContext context)", "private native boolean allocate(GLEnvironment glEnv, String vertexShader, String fragmentShader)", "private native boolean deallocate()", "private native boolean compileAndLink()", "private native boolean shaderProcess(GLFrame[] inputs, GLFrame output)", "private native boolean setUniformValue(String name, Object value)", "private native Object getUniformValue(String name)", "public native boolean setSourceRegion(float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3)", "private native boolean setTargetRegion(float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3)", "private static native ShaderProgram nativeCreateIdentity(GLEnvironment glEnv)", "private native boolean setShaderClearsOutput(boolean clears)", "private native boolean setShaderBlendEnabled(boolean enable)", "private native boolean setShaderBlendFunc(int sfactor, int dfactor)", "private native boolean setShaderClearColor(float r, float g, float b)", "private native boolean setShaderDrawMode(int drawMode)", "private native boolean setShaderTileCounts(int xCount, int yCount)", "private native boolean setShaderVertexCount(int vertexCount)", "private native boolean beginShaderDrawing()", "private native boolean setShaderAttributeValues(String attributeName, float[] data, int componentCount)", "private native boolean setShaderAttributeVertexFrame(String attributeName, VertexFrame vertexData, int type, int componentCount, int strideInBytes, int offsetInBytes, boolean normalize)" ],
  "variableNames" : [ "shaderProgramId", "mMaxTileSize", "mGLEnvironment", "mTimer" ]
}