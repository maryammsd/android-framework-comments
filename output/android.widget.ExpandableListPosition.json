{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/ExpandableListPosition.java",
  "packageName" : "android.widget",
  "className" : "ExpandableListPosition",
  "comment" : "\n * ExpandableListPosition can refer to either a group's position or a child's\n * position. Referring to a child's position requires both a group position (the\n * group containing the child) and a child position (the child's position within\n * that group). To create objects, use {@link #obtainChildPosition(int, int)} or\n * {@link #obtainGroupPosition(int)}.\n ",
  "links" : [ "#obtainGroupPosition(int)", "#obtainChildPosition(int" ],
  "variables" : [ {
    "name" : "MAX_POOL_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sPool",
    "type" : "ArrayList<ExpandableListPosition>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHILD",
    "type" : "int",
    "comment" : "\n     * This data type represents a child position\n     ",
    "links" : [ ]
  }, {
    "name" : "GROUP",
    "type" : "int",
    "comment" : "\n     * This data type represents a group position\n     ",
    "links" : [ ]
  }, {
    "name" : "groupPos",
    "type" : "int",
    "comment" : "\n     * The position of either the group being referred to, or the parent\n     * group of the child being referred to\n     ",
    "links" : [ ]
  }, {
    "name" : "childPos",
    "type" : "int",
    "comment" : "\n     * The position of the child within its parent group \n     ",
    "links" : [ ]
  }, {
    "name" : "flatListPos",
    "type" : "int",
    "comment" : "\n     * The position of the item in the flat list (optional, used internally when\n     * the corresponding flat list position for the group or child is known)\n     ",
    "links" : [ ]
  }, {
    "name" : "type",
    "type" : "int",
    "comment" : "\n     * What type of position this ExpandableListPosition represents\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void resetState()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " long getPackedPosition()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static ExpandableListPosition obtainGroupPosition(int groupPosition)",
    "returnType" : "ExpandableListPosition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static ExpandableListPosition obtainChildPosition(int groupPosition, int childPosition)",
    "returnType" : "ExpandableListPosition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static ExpandableListPosition obtainPosition(long packedPosition)",
    "returnType" : "ExpandableListPosition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static ExpandableListPosition obtain(int type, int groupPos, int childPos, int flatListPos)",
    "returnType" : "ExpandableListPosition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ExpandableListPosition getRecycledOrCreate()",
    "returnType" : "ExpandableListPosition",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void recycle()",
    "returnType" : "void",
    "comment" : "\n     * Do not call this unless you obtained this via ExpandableListPosition.obtain().\n     * PositionMetadata will handle recycling its own children.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void resetState()", " long getPackedPosition()", " static ExpandableListPosition obtainGroupPosition(int groupPosition)", " static ExpandableListPosition obtainChildPosition(int groupPosition, int childPosition)", " static ExpandableListPosition obtainPosition(long packedPosition)", " static ExpandableListPosition obtain(int type, int groupPos, int childPos, int flatListPos)", "private static ExpandableListPosition getRecycledOrCreate()", "public void recycle()" ],
  "variableNames" : [ "MAX_POOL_SIZE", "sPool", "CHILD", "GROUP", "groupPos", "childPos", "flatListPos", "type" ]
}