{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/data/TokenIterator.java",
  "packageName" : "android.icu.impl.data",
  "className" : "TokenIterator",
  "comment" : "\n * An iterator class that returns successive string tokens from some\n * source.  String tokens are, in general, separated by Pattern_White_Space\n * in the source test.  Furthermore, they may be delimited by\n * either single or double quotes (opening and closing quotes must\n * match).  Escapes are processed using standard ICU unescaping.\n *\n * <p>2015-sep-03 TODO: Only used in android.icu.dev.test.format, move there.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "reader",
    "type" : "ResourceReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "line",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "buf",
    "type" : "StringBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "done",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "pos",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "lastpos",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String next() throws IOException",
    "returnType" : "String",
    "comment" : "\n     * Return the next token from this iterator, or null if the last\n     * token has been returned.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLineNumber()",
    "returnType" : "int",
    "comment" : "\n     * Return the one-based line number of the line of the last token returned by\n     * next(). Should only be called\n     * after a call to next(); otherwise the return\n     * value is undefined.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String describePosition()",
    "returnType" : "String",
    "comment" : "\n     * Return a string description of the position of the last line\n     * returned by readLine() or readLineSkippingComments().\n     ",
    "links" : [ ]
  }, {
    "name" : "private int nextToken(int position)",
    "returnType" : "int",
    "comment" : "\n     * Read the next token from 'this.line' and append it to\n     * 'this.buf'.  Tokens are separated by Pattern_White_Space.  Tokens\n     * may also be delimited by double or single quotes.  The closing\n     * quote must match the opening quote.  If a '#' is encountered,\n     * the rest of the line is ignored, unless it is backslash-escaped\n     * or within quotes.\n     * @param position the offset into the string\n     * @return offset to the next character to read from line, or if\n     * the end of the line is reached without scanning a valid token,\n     * -1\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String next() throws IOException", "public int getLineNumber()", "public String describePosition()", "private int nextToken(int position)" ],
  "variableNames" : [ "reader", "line", "buf", "done", "pos", "lastpos" ]
}