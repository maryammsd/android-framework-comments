{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/health/SystemHealthManager.java",
  "packageName" : "android.os.health",
  "className" : "SystemHealthManager",
  "comment" : "\n * Provides access to data about how various system resources are used by applications.\n * @more\n * <p>\n * If you are going to be using this class to log your application's resource usage,\n * please consider the amount of resources (battery, network, etc) that will be used\n * by the logging itself.  It can be substantial.\n * <p>\n * <b>Battery Usage</b><br>\n * Since Android version {@link android.os.Build.VERSION_CODES#Q}, the statistics related to power\n * (battery) usage are recorded since the device was last considered fully charged (for previous\n * versions, it is instead since the device was last unplugged).\n * It is expected that applications schedule more work to do while the device is\n * plugged in (e.g. using {@link android.app.job.JobScheduler JobScheduler}), and\n * while that can affect charging rates, it is still preferable to actually draining\n * the battery.\n ",
  "variables" : [ {
    "name" : "mBatteryStats",
    "type" : "IBatteryStats",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static SystemHealthManager from(Context context)",
    "returnType" : "SystemHealthManager",
    "comment" : "\n     * Obtain a SystemHealthManager object for the supplied context.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public HealthStats takeUidSnapshot(int uid)",
    "returnType" : "HealthStats",
    "comment" : "\n     * Return a {@link HealthStats} object containing a snapshot of system health\n     * metrics for the given uid (user-id, which in usually corresponds to application).\n     * @more\n     *\n     * An application must hold the {@link android.Manifest.permission#BATTERY_STATS\n     * android.permission.BATTERY_STATS} permission in order to retrieve any HealthStats\n     * other than its own.\n     *\n     * @param uid User ID for a given application.\n     * @return A {@link HealthStats} object containing the metrics for the requested\n     * application. The keys for this HealthStats object will be from the {@link UidHealthStats}\n     * class.\n     * @see Process#myUid() Process.myUid()\n     ",
    "links" : [ "HealthStats", "android.Manifest.permission#BATTERY_STATS", "HealthStats", "UidHealthStats" ]
  }, {
    "name" : "public HealthStats takeMyUidSnapshot()",
    "returnType" : "HealthStats",
    "comment" : "\n     * Return a {@link HealthStats} object containing a snapshot of system health\n     * metrics for the application calling this API. This method is the same as calling\n     * {@code takeUidSnapshot(Process.myUid())}.\n     *\n     * @return A {@link HealthStats} object containing the metrics for this application. The keys\n     * for this HealthStats object will be from the {@link UidHealthStats} class.\n     ",
    "links" : [ "HealthStats", "HealthStats", "UidHealthStats" ]
  }, {
    "name" : "public HealthStats[] takeUidSnapshots(int[] uids)",
    "returnType" : "HealthStats[]",
    "comment" : "\n     * Return a {@link HealthStats} object containing a snapshot of system health\n     * metrics for the given uids (user-id, which in usually corresponds to application).\n     * @more\n     *\n     * An application must hold the {@link android.Manifest.permission#BATTERY_STATS\n     * android.permission.BATTERY_STATS} permission in order to retrieve any HealthStats\n     * other than its own.\n     *\n     * @param uids An array of User IDs to retrieve.\n     * @return An array of {@link HealthStats} objects containing the metrics for each of\n     * the requested uids. The keys for this HealthStats object will be from the\n     * {@link UidHealthStats} class.\n     ",
    "links" : [ "HealthStats", "android.Manifest.permission#BATTERY_STATS", "HealthStats", "UidHealthStats" ]
  } ],
  "variableNames" : [ "mBatteryStats" ],
  "methodNames" : [ "public static SystemHealthManager from(Context context)", "public HealthStats takeUidSnapshot(int uid)", "public HealthStats takeMyUidSnapshot()", "public HealthStats[] takeUidSnapshots(int[] uids)" ]
}