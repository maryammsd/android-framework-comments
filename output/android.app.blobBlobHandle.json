{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/blob/BlobHandle.java",
  "packageName" : "android.app.blob",
  "className" : "BlobHandle",
  "comment" : " TODO: use datagen tool?",
  "variables" : [ {
    "name" : "ALGO_SHA_256",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SUPPORTED_ALGOS",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LIMIT_BLOB_TAG_LENGTH",
    "type" : "int",
    "comment" : " characters",
    "links" : [ ]
  }, {
    "name" : "LIMIT_BLOB_LABEL_LENGTH",
    "type" : "int",
    "comment" : " characters",
    "links" : [ ]
  }, {
    "name" : "algorithm",
    "type" : "String",
    "comment" : "\n     * Cyrptographically secure hash algorithm used to generate hash of the blob this handle is\n     * representing.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "digest",
    "type" : "byte[]",
    "comment" : "\n     * Hash of the blob this handle is representing using {@link #algorithm}.\n     *\n     * @hide\n     ",
    "links" : [ "#algorithm" ]
  }, {
    "name" : "label",
    "type" : "CharSequence",
    "comment" : "\n     * Label of the blob that can be surfaced to the user.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "expiryTimeMillis",
    "type" : "long",
    "comment" : "\n     * Time in milliseconds after which the blob should be invalidated and not\n     * allowed to be accessed by any other app, in {@link System#currentTimeMillis()} timebase.\n     *\n     * @hide\n     ",
    "links" : [ "System#currentTimeMillis" ]
  }, {
    "name" : "tag",
    "type" : "String",
    "comment" : "\n     * An opaque {@link String} associated with the blob.\n     *\n     * @hide\n     ",
    "links" : [ "String" ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<BlobHandle>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static BlobHandle create(@NonNull String algorithm, @NonNull byte[] digest, @NonNull CharSequence label, @CurrentTimeMillisLong long expiryTimeMillis, @NonNull String tag)",
    "returnType" : "BlobHandle",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static BlobHandle createWithSha256(@NonNull byte[] digest, @NonNull CharSequence label, @CurrentTimeMillisLong long expiryTimeMillis, @NonNull String tag)",
    "returnType" : "BlobHandle",
    "comment" : "\n     * Create a new blob identifier.\n     *\n     * <p> For two objects of {@link BlobHandle} to be considered equal, the following arguments\n     * must be equal:\n     * <ul>\n     * <li> {@code digest}\n     * <li> {@code label}\n     * <li> {@code expiryTimeMillis}\n     * <li> {@code tag}\n     * </ul>\n     *\n     * @param digest the SHA-256 hash of the blob this is representing.\n     * @param label a label indicating what the blob is, that can be surfaced to the user.\n     *              The length of the label cannot be more than 100 characters. It is recommended\n     *              to keep this brief. This may be truncated and ellipsized if it is too long\n     *              to be displayed to the user.\n     * @param expiryTimeMillis the time in secs after which the blob should be invalidated and not\n     *                         allowed to be accessed by any other app,\n     *                         in {@link System#currentTimeMillis()} timebase or {@code 0} to\n     *                         indicate that there is no expiry time associated with this blob.\n     * @param tag an opaque {@link String} associated with the blob. The length of the tag\n     *            cannot be more than 128 characters.\n     *\n     * @return a new instance of {@link BlobHandle} object.\n     ",
    "links" : [ "BlobHandle", "System#currentTimeMillis", "String", "BlobHandle" ]
  }, {
    "name" : "public byte[] getSha256Digest()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the SHA-256 hash of the blob that this object is representing.\n     *\n     * @see #createWithSha256(byte[], CharSequence, long, String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getLabel()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Returns the label associated with the blob that this object is representing.\n     *\n     * @see #createWithSha256(byte[], CharSequence, long, String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getExpiryTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the expiry time in milliseconds of the blob that this object is representing, in\n     *         {@link System#currentTimeMillis()} timebase.\n     *\n     * @see #createWithSha256(byte[], CharSequence, long, String)\n     ",
    "links" : [ "System#currentTimeMillis" ]
  }, {
    "name" : "public String getTag()",
    "returnType" : "String",
    "comment" : "\n     * Returns the opaque {@link String} associated with the blob this object is representing.\n     *\n     * @see #createWithSha256(byte[], CharSequence, long, String)\n     ",
    "links" : [ "String" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(IndentingPrintWriter fout, boolean dumpFull)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void assertIsValid()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String safeDigest(@NonNull byte[] digest)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static String encodeDigest(@NonNull byte[] digest)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isExpired()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void writeToXml(@NonNull XmlSerializer out) throws IOException",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static BlobHandle createFromXml(@NonNull XmlPullParser in) throws IOException",
    "returnType" : "BlobHandle",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "ALGO_SHA_256", "SUPPORTED_ALGOS", "LIMIT_BLOB_TAG_LENGTH", "LIMIT_BLOB_LABEL_LENGTH", "algorithm", "digest", "label", "expiryTimeMillis", "tag", "CREATOR" ],
  "methodNames" : [ "public static BlobHandle create(@NonNull String algorithm, @NonNull byte[] digest, @NonNull CharSequence label, @CurrentTimeMillisLong long expiryTimeMillis, @NonNull String tag)", "public static BlobHandle createWithSha256(@NonNull byte[] digest, @NonNull CharSequence label, @CurrentTimeMillisLong long expiryTimeMillis, @NonNull String tag)", "public byte[] getSha256Digest()", "public CharSequence getLabel()", "public long getExpiryTimeMillis()", "public String getTag()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(Object obj)", "public int hashCode()", "public void dump(IndentingPrintWriter fout, boolean dumpFull)", "public void assertIsValid()", "public String toString()", "public static String safeDigest(@NonNull byte[] digest)", "private static String encodeDigest(@NonNull byte[] digest)", "public boolean isExpired()", "public void writeToXml(@NonNull XmlSerializer out) throws IOException", "public static BlobHandle createFromXml(@NonNull XmlPullParser in) throws IOException" ]
}