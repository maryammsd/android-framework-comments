{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/Notification.java",
  "packageName" : "android.app",
  "className" : "DecoratedMediaCustomViewStyle",
  "comment" : "\n     * Notification style for media custom views that are decorated by the system\n     *\n     * <p>Instead of providing a media notification that is completely custom, a developer can set\n     * this style and still obtain system decorations like the notification header with the expand\n     * affordance and actions.\n     *\n     * <p>Use {@link android.app.Notification.Builder#setCustomContentView(RemoteViews)},\n     * {@link android.app.Notification.Builder#setCustomBigContentView(RemoteViews)} and\n     * {@link android.app.Notification.Builder#setCustomHeadsUpContentView(RemoteViews)} to set the\n     * corresponding custom views to display.\n     * <p>\n     * Contrary to {@link MediaStyle} a developer has to opt-in to the colorizing of the\n     * notification by using {@link Notification.Builder#setColorized(boolean)}.\n     * <p>\n     * To use this style with your Notification, feed it to\n     * {@link Notification.Builder#setStyle(android.app.Notification.Style)} like so:\n     * <pre class=\"prettyprint\">\n     * Notification noti = new Notification.Builder()\n     *     .setSmallIcon(R.drawable.ic_stat_player)\n     *     .setLargeIcon(albumArtBitmap))\n     *     .setCustomContentView(contentView);\n     *     .setStyle(<b>new Notification.DecoratedMediaCustomViewStyle()</b>\n     *          .setMediaSession(mySession))\n     *     .build();\n     * </pre>\n     *\n     * @see android.app.Notification.DecoratedCustomViewStyle\n     * @see android.app.Notification.MediaStyle\n     ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public boolean displayCustomViewInline()",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeContentView(boolean increasedHeight)",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeBigContentView()",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "private RemoteViews makeBigContentViewWithCustomContent(RemoteViews customRemoteView)",
    "returnType" : "RemoteViews",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeHeadsUpContentView(boolean increasedHeight)",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean areNotificationsVisiblyDifferent(Style other)",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "private RemoteViews buildIntoRemoteView(RemoteViews remoteViews, int id, RemoteViews customContent)",
    "returnType" : "RemoteViews",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public boolean displayCustomViewInline()", "public RemoteViews makeContentView(boolean increasedHeight)", "public RemoteViews makeBigContentView()", "private RemoteViews makeBigContentViewWithCustomContent(RemoteViews customRemoteView)", "public RemoteViews makeHeadsUpContentView(boolean increasedHeight)", "public boolean areNotificationsVisiblyDifferent(Style other)", "private RemoteViews buildIntoRemoteView(RemoteViews remoteViews, int id, RemoteViews customContent)" ]
}