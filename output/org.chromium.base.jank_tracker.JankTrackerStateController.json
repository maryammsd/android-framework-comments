{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/jank_tracker/JankTrackerStateController.java",
  "packageName" : "org.chromium.base.jank_tracker",
  "className" : "JankTrackerStateController",
  "comment" : "\n * A simple holder class to enable easy starting and stopping of metric listening as well as\n * periodic reporting. This is used by JankTrackerImpl to hold the listener reference and this class\n * should be hooked up to some sort of listener to when to start/stop listening and periodic\n * metrics.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrameMetricsListener",
    "type" : "FrameMetricsListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReportingScheduler",
    "type" : "JankReportingScheduler",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void startPeriodicReporting()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopPeriodicReporting()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startMetricCollection(Window window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopMetricCollection(Window window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void initialize()",
    "returnType" : "void",
    "comment" : " Extra methods for subclasses that need to perform extra work on initialization/destruction.",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void startPeriodicReporting()", "public void stopPeriodicReporting()", "public void startMetricCollection(Window window)", "public void stopMetricCollection(Window window)", "public void initialize()", "public void destroy()" ],
  "variableNames" : [ "TAG", "mFrameMetricsListener", "mReportingScheduler" ]
}