{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/slice/SliceMetrics.java",
  "packageName" : "android.app.slice",
  "className" : "SliceMetrics",
  "comment" : "\n * Metrics interface for slices.\n *\n * This is called by SliceView, so Slice developers should\n * not need to reference this class.\n *\n * @see androidx.slice.widget.SliceView\n * @deprecated Slice framework has been deprecated, it will not receive any updates from\n *          {@link android.os.Build.VANILLA_ICE_CREAM} and forward. If you are looking for a\n *          framework that sends displayable data from one app to another, consider using\n *          {@link android.app.appsearch.AppSearchManager}.\n ",
  "links" : [ "android.os.Build.VANILLA_ICE_CREAM", "android.app.appsearch.AppSearchManager" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMetricsLogger",
    "type" : "MetricsLogger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLogMaker",
    "type" : "LogMaker",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void logVisible()",
    "returnType" : "void",
    "comment" : "\n     * To be called whenever the slice becomes visible to the user.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void logHidden()",
    "returnType" : "void",
    "comment" : "\n     * To be called whenever the slice becomes invisible to the user.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void logTouch(int actionType, @NonNull Uri subSlice)",
    "returnType" : "void",
    "comment" : "\n     * To be called whenever the user invokes a discrete action via a slice.\n     *\n     * <P>\n     *     Use this for discrete events like a tap or the end of a drag,\n     *     not for a continuous streams of events, such as the motion during a gesture.\n     * </P>\n     *\n     * @see androidx.slice.widget.EventInfo#actionType\n     *\n     * @param actionType The type of the event.\n     * @param subSlice The URI of the sub-slice that is the subject of the interaction.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void logVisible()", "public void logHidden()", "public void logTouch(int actionType, @NonNull Uri subSlice)" ],
  "variableNames" : [ "TAG", "mMetricsLogger", "mLogMaker" ]
}