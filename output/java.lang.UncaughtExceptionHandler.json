{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/Thread.java",
  "packageName" : "java.lang",
  "className" : "UncaughtExceptionHandler",
  "comment" : "\n     * Interface for handlers invoked when a {@code Thread} abruptly\n     * terminates due to an uncaught exception.\n     * <p>When a thread is about to terminate due to an uncaught exception\n     * the Java Virtual Machine will query the thread for its\n     * {@code UncaughtExceptionHandler} using\n     * {@link #getUncaughtExceptionHandler} and will invoke the handler's\n     * {@code uncaughtException} method, passing the thread and the\n     * exception as arguments.\n     * If a thread has not had its {@code UncaughtExceptionHandler}\n     * explicitly set, then its {@code ThreadGroup} object acts as its\n     * {@code UncaughtExceptionHandler}. If the {@code ThreadGroup} object\n     * has no\n     * special requirements for dealing with the exception, it can forward\n     * the invocation to the {@linkplain #getDefaultUncaughtExceptionHandler\n     * default uncaught exception handler}.\n     *\n     * @see #setDefaultUncaughtExceptionHandler\n     * @see #setUncaughtExceptionHandler\n     * @see ThreadGroup#uncaughtException\n     * @since 1.5\n     ",
  "links" : [ "#getUncaughtExceptionHandler" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void uncaughtException(Thread t, Throwable e)",
    "returnType" : "void",
    "comment" : "\n         * Method invoked when the given thread terminates due to the\n         * given uncaught exception.\n         * <p>Any exception thrown by this method will be ignored by the\n         * Java Virtual Machine.\n         * @param t the thread\n         * @param e the exception\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void uncaughtException(Thread t, Throwable e)" ],
  "variableNames" : [ ]
}