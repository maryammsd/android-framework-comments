{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/SatellitePvt.java",
  "packageName" : "android.location",
  "className" : "Builder",
  "comment" : "\n     * Builder class for SatellitePvt.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "\n         * For documentation of below fields, see corresponding fields in {@link\n         * SatellitePvt}.\n         ",
    "links" : [ "android.location.SatellitePvt" ]
  }, {
    "name" : "mPositionEcef",
    "type" : "PositionEcef",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVelocityEcef",
    "type" : "VelocityEcef",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClockInfo",
    "type" : "ClockInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIonoDelayMeters",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTropoDelayMeters",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeOfClockSeconds",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeOfEphemerisSeconds",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIssueOfDataClock",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIssueOfDataEphemeris",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEphemerisSource",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setPositionEcef(@NonNull PositionEcef positionEcef)",
    "returnType" : "Builder",
    "comment" : "\n         * Set position ECEF.\n         *\n         * @param positionEcef position ECEF object\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVelocityEcef(@NonNull VelocityEcef velocityEcef)",
    "returnType" : "Builder",
    "comment" : "\n         * Set velocity ECEF.\n         *\n         * @param velocityEcef velocity ECEF object\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setClockInfo(@NonNull ClockInfo clockInfo)",
    "returnType" : "Builder",
    "comment" : "\n         * Set clock info.\n         *\n         * @param clockInfo clock info object\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "private void updateFlags()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Builder setIonoDelayMeters(@FloatRange(from = 0.0f, to = 100.0f) double ionoDelayMeters)",
    "returnType" : "Builder",
    "comment" : "\n         * Set ionospheric delay in meters.\n         *\n         * @param ionoDelayMeters ionospheric delay (meters)\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setTropoDelayMeters(@FloatRange(from = 0.0f, to = 100.0f) double tropoDelayMeters)",
    "returnType" : "Builder",
    "comment" : "\n         * Set tropospheric delay in meters.\n         *\n         * @param tropoDelayMeters tropospheric delay (meters)\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setTimeOfClockSeconds(@IntRange(from = 0) long timeOfClockSeconds)",
    "returnType" : "Builder",
    "comment" : "\n         * Set time of clock in seconds.\n         *\n         * <p>The value is in seconds since GPS epoch, regardless of the constellation.\n         *\n         * <p>The value is not encoded as in GPS ICD200 documentation.\n         *\n         * @param timeOfClockSeconds time of clock (seconds)\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setTimeOfEphemerisSeconds(@IntRange(from = 0) long timeOfEphemerisSeconds)",
    "returnType" : "Builder",
    "comment" : "\n         * Set time of ephemeris in seconds.\n         *\n         * <p>The value is in seconds since GPS epoch, regardless of the constellation.\n         *\n         * <p>The value is not encoded as in GPS ICD200 documentation.\n         *\n         * @param timeOfEphemerisSeconds time of ephemeris (seconds)\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setIssueOfDataClock(@IntRange(from = 0, to = 1023) int issueOfDataClock)",
    "returnType" : "Builder",
    "comment" : "\n         * Set issue of data, clock.\n         *\n         * @param issueOfDataClock issue of data, clock.\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setIssueOfDataEphemeris(@IntRange(from = 0, to = 1023) int issueOfDataEphemeris)",
    "returnType" : "Builder",
    "comment" : "\n         * Set issue of data, ephemeris.\n         *\n         * @param issueOfDataEphemeris issue of data, ephemeris.\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setEphemerisSource(@EphemerisSource int ephemerisSource)",
    "returnType" : "Builder",
    "comment" : "\n         * Set satellite ephemeris source.\n         *\n         * @param ephemerisSource satellite ephemeris source\n         * @return builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public SatellitePvt build()",
    "returnType" : "SatellitePvt",
    "comment" : "\n         * Build SatellitePvt object.\n         *\n         * @return instance of SatellitePvt\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setPositionEcef(@NonNull PositionEcef positionEcef)", "public Builder setVelocityEcef(@NonNull VelocityEcef velocityEcef)", "public Builder setClockInfo(@NonNull ClockInfo clockInfo)", "private void updateFlags()", "public Builder setIonoDelayMeters(@FloatRange(from = 0.0f, to = 100.0f) double ionoDelayMeters)", "public Builder setTropoDelayMeters(@FloatRange(from = 0.0f, to = 100.0f) double tropoDelayMeters)", "public Builder setTimeOfClockSeconds(@IntRange(from = 0) long timeOfClockSeconds)", "public Builder setTimeOfEphemerisSeconds(@IntRange(from = 0) long timeOfEphemerisSeconds)", "public Builder setIssueOfDataClock(@IntRange(from = 0, to = 1023) int issueOfDataClock)", "public Builder setIssueOfDataEphemeris(@IntRange(from = 0, to = 1023) int issueOfDataEphemeris)", "public Builder setEphemerisSource(@EphemerisSource int ephemerisSource)", "public SatellitePvt build()" ],
  "variableNames" : [ "mFlags", "mPositionEcef", "mVelocityEcef", "mClockInfo", "mIonoDelayMeters", "mTropoDelayMeters", "mTimeOfClockSeconds", "mTimeOfEphemerisSeconds", "mIssueOfDataClock", "mIssueOfDataEphemeris", "mEphemerisSource" ]
}