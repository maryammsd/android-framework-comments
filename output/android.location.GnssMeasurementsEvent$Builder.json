{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssMeasurementsEvent.java",
  "packageName" : "android.location",
  "className" : "Builder",
  "comment" : " Builder for {@link GnssMeasurementsEvent} ",
  "links" : [ "android.location.GnssMeasurementsEvent" ],
  "variables" : [ {
    "name" : "mFlag",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClock",
    "type" : "GnssClock",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMeasurements",
    "type" : "List<GnssMeasurement>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGnssAgcs",
    "type" : "List<GnssAutomaticGainControl>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsFullTracking",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setClock(@NonNull GnssClock clock)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the {@link GnssClock}.\n         ",
    "links" : [ "android.location.GnssClock" ]
  }, {
    "name" : "public Builder setMeasurements(@Nullable GnssMeasurement... measurements)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the collection of {@link GnssMeasurement}.\n         *\n         * This API exists for JNI since it is easier for JNI to work with an array than a\n         * collection.\n         * @hide\n         ",
    "links" : [ "android.location.GnssMeasurement" ]
  }, {
    "name" : "public Builder setMeasurements(@NonNull Collection<GnssMeasurement> measurements)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the collection of {@link GnssMeasurement}.\n         ",
    "links" : [ "android.location.GnssMeasurement" ]
  }, {
    "name" : "public Builder setGnssAutomaticGainControls(@Nullable GnssAutomaticGainControl... agcs)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the collection of {@link GnssAutomaticGainControl}.\n         *\n         * This API exists for JNI since it is easier for JNI to work with an array than a\n         * collection.\n         * @hide\n         ",
    "links" : [ "android.location.GnssAutomaticGainControl" ]
  }, {
    "name" : "public Builder setGnssAutomaticGainControls(@NonNull Collection<GnssAutomaticGainControl> agcs)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the collection of {@link GnssAutomaticGainControl}.\n         ",
    "links" : [ "android.location.GnssAutomaticGainControl" ]
  }, {
    "name" : "public Builder setIsFullTracking(boolean isFullTracking)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the GNSS chipset was in the full tracking mode at the time this event was\n         * produced.\n         *\n         * True indicates that this event was produced while the chipset was in full tracking\n         * mode, ie, the GNSS chipset switched off duty cycling. In this mode, no clock\n         * discontinuities are expected and, when supported, carrier phase should be continuous in\n         * good signal conditions. All non-blocklisted, healthy constellations, satellites and\n         * frequency bands that are meaningful to positioning accuracy must be tracked and reported\n         * in this mode.\n         *\n         * False indicates that the GNSS chipset may optimize power via duty cycling, constellations\n         * and frequency limits, etc.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearIsFullTracking()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears the full tracking mode indicator.\n         ",
    "links" : [ ]
  }, {
    "name" : "public GnssMeasurementsEvent build()",
    "returnType" : "GnssMeasurementsEvent",
    "comment" : " Builds a {@link GnssMeasurementsEvent} instance as specified by this builder. ",
    "links" : [ "android.location.GnssMeasurementsEvent" ]
  } ],
  "methodNames" : [ "public Builder setClock(@NonNull GnssClock clock)", "public Builder setMeasurements(@Nullable GnssMeasurement... measurements)", "public Builder setMeasurements(@NonNull Collection<GnssMeasurement> measurements)", "public Builder setGnssAutomaticGainControls(@Nullable GnssAutomaticGainControl... agcs)", "public Builder setGnssAutomaticGainControls(@NonNull Collection<GnssAutomaticGainControl> agcs)", "public Builder setIsFullTracking(boolean isFullTracking)", "public Builder clearIsFullTracking()", "public GnssMeasurementsEvent build()" ],
  "variableNames" : [ "mFlag", "mClock", "mMeasurements", "mGnssAgcs", "mIsFullTracking" ]
}