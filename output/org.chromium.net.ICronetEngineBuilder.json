{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/ICronetEngineBuilder.java",
  "packageName" : "org.chromium.net",
  "className" : "ICronetEngineBuilder",
  "comment" : "\n * Defines methods that the actual implementation of {@link CronetEngine.Builder} has to implement.\n * {@code CronetEngine.Builder} uses this interface to delegate the calls. For the documentation of\n * individual methods, please see the identically named methods in {@link\n * org.chromium.net.CronetEngine.Builder} and {@link\n * org.chromium.net.ExperimentalCronetEngine.Builder}.\n *\n * <p>{@hide internal class}\n ",
  "links" : [ "CronetEngine.Builder", "org.chromium.net.ExperimentalCronetEngine.Builder", "org.chromium.net.CronetEngine.Builder" ],
  "variables" : [ {
    "name" : "CONNECTION_MIGRATION_OPTIONS",
    "type" : "int",
    "comment" : " structures, hence we resort to plain old good ints.",
    "links" : [ ]
  }, {
    "name" : "DNS_OPTIONS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "QUIC_OPTIONS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract ICronetEngineBuilder addPublicKeyPins(String hostName, Set<byte[]> pinsSha256, boolean includeSubdomains, Date expirationDate)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : " Public API methods.",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder addQuicHint(String host, int port, int alternatePort)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder enableHttp2(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder enableHttpCache(int cacheMode, long maxSize)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder enablePublicKeyPinningBypassForLocalTrustAnchors(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder enableQuic(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder enableSdch(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enableBrotli(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setQuicOptions(QuicOptions quicOptions)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setDnsOptions(DnsOptions dnsOptions)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setConnectionMigrationOptions(ConnectionMigrationOptions connectionMigrationOptions)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder setExperimentalOptions(String options)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder setLibraryLoader(CronetEngine.Builder.LibraryLoader loader)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder setStoragePath(String value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ICronetEngineBuilder setUserAgent(String userAgent)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract String getDefaultUserAgent()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ExperimentalCronetEngine build()",
    "returnType" : "ExperimentalCronetEngine",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected Set<Integer> getSupportedConfigOptions()",
    "returnType" : "Set<Integer>",
    "comment" : "\n     * Returns the set of configuration options the builder is able to support natively. This is\n     * used internally to emulate newly added functionality using older APIs where possible.\n     *\n     * <p>The default implementation returns an empty set. Subclasses should override this method to\n     * reflect the supported options that are applicable to them.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder enableNetworkQualityEstimator(boolean value)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ICronetEngineBuilder setThreadPriority(int priority)",
    "returnType" : "ICronetEngineBuilder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract ICronetEngineBuilder addPublicKeyPins(String hostName, Set<byte[]> pinsSha256, boolean includeSubdomains, Date expirationDate)", "public abstract ICronetEngineBuilder addQuicHint(String host, int port, int alternatePort)", "public abstract ICronetEngineBuilder enableHttp2(boolean value)", "public abstract ICronetEngineBuilder enableHttpCache(int cacheMode, long maxSize)", "public abstract ICronetEngineBuilder enablePublicKeyPinningBypassForLocalTrustAnchors(boolean value)", "public abstract ICronetEngineBuilder enableQuic(boolean value)", "public abstract ICronetEngineBuilder enableSdch(boolean value)", "public ICronetEngineBuilder enableBrotli(boolean value)", "public ICronetEngineBuilder setQuicOptions(QuicOptions quicOptions)", "public ICronetEngineBuilder setDnsOptions(DnsOptions dnsOptions)", "public ICronetEngineBuilder setConnectionMigrationOptions(ConnectionMigrationOptions connectionMigrationOptions)", "public abstract ICronetEngineBuilder setExperimentalOptions(String options)", "public abstract ICronetEngineBuilder setLibraryLoader(CronetEngine.Builder.LibraryLoader loader)", "public abstract ICronetEngineBuilder setStoragePath(String value)", "public abstract ICronetEngineBuilder setUserAgent(String userAgent)", "public abstract String getDefaultUserAgent()", "public abstract ExperimentalCronetEngine build()", "protected Set<Integer> getSupportedConfigOptions()", "public ICronetEngineBuilder enableNetworkQualityEstimator(boolean value)", "public ICronetEngineBuilder setThreadPriority(int priority)" ],
  "variableNames" : [ "CONNECTION_MIGRATION_OPTIONS", "DNS_OPTIONS", "QUIC_OPTIONS" ]
}