{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/preference/PreferenceScreen.java",
  "packageName" : "android.preference",
  "className" : "PreferenceScreen",
  "comment" : "\n * Represents a top-level {@link Preference} that\n * is the root of a Preference hierarchy. A {@link PreferenceActivity}\n * points to an instance of this class to show the preferences. To instantiate\n * this class, use {@link PreferenceManager#createPreferenceScreen(Context)}.\n * <ul>\n * This class can appear in two places:\n * <li> When a {@link PreferenceActivity} points to this, it is used as the root\n * and is not shown (only the contained preferences are shown).\n * <li> When it appears inside another preference hierarchy, it is shown and\n * serves as the gateway to another screen of preferences (either by showing\n * another screen of preferences as a {@link Dialog} or via a\n * {@link Context#startActivity(android.content.Intent)} from the\n * {@link Preference#getIntent()}). The children of this {@link PreferenceScreen}\n * are NOT shown in the screen that this {@link PreferenceScreen} is shown in.\n * Instead, a separate screen will be shown when this preference is clicked.\n * </ul>\n * <p>Here's an example XML layout of a PreferenceScreen:</p>\n * <pre>\n&lt;PreferenceScreen\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        android:key=\"first_preferencescreen\"&gt;\n    &lt;CheckBoxPreference\n            android:key=\"wifi enabled\"\n            android:title=\"WiFi\" /&gt;\n    &lt;PreferenceScreen\n            android:key=\"second_preferencescreen\"\n            android:title=\"WiFi settings\"&gt;\n        &lt;CheckBoxPreference\n                android:key=\"prefer wifi\"\n                android:title=\"Prefer WiFi\" /&gt;\n        ... other preferences here ...\n    &lt;/PreferenceScreen&gt;\n&lt;/PreferenceScreen&gt; </pre>\n * <p>\n * In this example, the \"first_preferencescreen\" will be used as the root of the\n * hierarchy and given to a {@link PreferenceActivity}. The first screen will\n * show preferences \"WiFi\" (which can be used to quickly enable/disable WiFi)\n * and \"WiFi settings\". The \"WiFi settings\" is the \"second_preferencescreen\" and when\n * clicked will show another screen of preferences such as \"Prefer WiFi\" (and\n * the other preferences that are children of the \"second_preferencescreen\" tag).\n * \n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For information about building a settings UI with Preferences,\n * read the <a href=\"{@docRoot}guide/topics/ui/settings.html\">Settings</a>\n * guide.</p>\n * </div>\n *\n * @see PreferenceCategory\n *\n * @deprecated Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n *      <a href=\"{@docRoot}reference/androidx/preference/package-summary.html\">\n *      Preference Library</a> for consistent behavior across all devices. For more information on\n *      using the AndroidX Preference Library see\n *      <a href=\"{@docRoot}guide/topics/ui/settings.html\">Settings</a>.\n ",
  "variables" : [ {
    "name" : "mRootAdapter",
    "type" : "ListAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDialog",
    "type" : "Dialog",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListView",
    "type" : "ListView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLayoutResId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDividerDrawable",
    "type" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDividerSpecified",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ListAdapter getRootAdapter()",
    "returnType" : "ListAdapter",
    "comment" : "\n     * Returns an adapter that can be attached to a {@link PreferenceActivity}\n     * or {@link PreferenceFragment} to show the preferences contained in this\n     * {@link PreferenceScreen}.\n     * <p>\n     * This {@link PreferenceScreen} will NOT appear in the returned adapter, instead\n     * it appears in the hierarchy above this {@link PreferenceScreen}.\n     * <p>\n     * This adapter's {@link Adapter#getItem(int)} should always return a\n     * subclass of {@link Preference}.\n     * \n     * @return An adapter that provides the {@link Preference} contained in this\n     *         {@link PreferenceScreen}.\n     ",
    "links" : [ "PreferenceActivity", "PreferenceFragment", "PreferenceScreen", "PreferenceScreen", "PreferenceScreen", "Adapter#getItem", "Preference", "Preference", "PreferenceScreen" ]
  }, {
    "name" : "protected ListAdapter onCreateRootAdapter()",
    "returnType" : "ListAdapter",
    "comment" : "\n     * Creates the root adapter.\n     * \n     * @return An adapter that contains the preferences contained in this {@link PreferenceScreen}.\n     * @see #getRootAdapter()\n     ",
    "links" : [ "PreferenceScreen" ]
  }, {
    "name" : "public void bind(ListView listView)",
    "returnType" : "void",
    "comment" : "\n     * Binds a {@link ListView} to the preferences contained in this {@link PreferenceScreen} via\n     * {@link #getRootAdapter()}. It also handles passing list item clicks to the corresponding\n     * {@link Preference} contained by this {@link PreferenceScreen}.\n     * \n     * @param listView The list view to attach to.\n     ",
    "links" : [ "ListView", "PreferenceScreen", "#getRootAdapter", "Preference", "PreferenceScreen" ]
  }, {
    "name" : "protected void onClick()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void showDialog(Bundle state)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDismiss(DialogInterface dialog)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Dialog getDialog()",
    "returnType" : "Dialog",
    "comment" : "\n     * Used to get a handle to the dialog. \n     * This is useful for cases where we want to manipulate the dialog\n     * as we would with any other activity or view.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onItemClick(AdapterView parent, View view, int position, long id)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean isOnSameScreenAsChildren()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected Parcelable onSaveInstanceState()",
    "returnType" : "Parcelable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onRestoreInstanceState(Parcelable state)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mRootAdapter", "mDialog", "mListView", "mLayoutResId", "mDividerDrawable", "mDividerSpecified" ],
  "methodNames" : [ "public ListAdapter getRootAdapter()", "protected ListAdapter onCreateRootAdapter()", "public void bind(ListView listView)", "protected void onClick()", "private void showDialog(Bundle state)", "public void onDismiss(DialogInterface dialog)", "public Dialog getDialog()", "public void onItemClick(AdapterView parent, View view, int position, long id)", "protected boolean isOnSameScreenAsChildren()", "protected Parcelable onSaveInstanceState()", "protected void onRestoreInstanceState(Parcelable state)" ]
}