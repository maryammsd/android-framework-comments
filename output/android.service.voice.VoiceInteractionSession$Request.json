{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/voice/VoiceInteractionSession.java",
  "packageName" : "android.service.voice",
  "className" : "Request",
  "comment" : "\n     * Base class representing a request from a voice-driver app to perform a particular\n     * voice operation with the user.  See related subclasses for the types of requests\n     * that are possible.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mInterface",
    "type" : "IVoiceInteractorRequest",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallingPackage",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallingUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "IVoiceInteractorCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSession",
    "type" : "WeakReference<VoiceInteractionSession>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getCallingUid()",
    "returnType" : "int",
    "comment" : "\n         * Return the uid of the application that initiated the request.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getCallingPackage()",
    "returnType" : "String",
    "comment" : "\n         * Return the package name of the application that initiated the request.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n         * Return any additional extra information that was supplied as part of the request.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isActive()",
    "returnType" : "boolean",
    "comment" : "\n         * Check whether this request is currently active.  A request becomes inactive after\n         * calling {@link #cancel} or a final result method that completes the request.  After\n         * this point, further interactions with the request will result in\n         * {@link java.lang.IllegalStateException} errors; you should not catch these errors,\n         * but can use this method if you need to determine the state of the request.  Returns\n         * true if the request is still active.\n         ",
    "links" : [ "java.lang.IllegalStateException", "#cancel" ]
  }, {
    "name" : " void finishRequest()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancel()",
    "returnType" : "void",
    "comment" : "\n         * Ask the app to cancel this current request.\n         * This also finishes the request (it is no longer active).\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void dump(String prefix, FileDescriptor fd, PrintWriter writer, String[] args)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getCallingUid()", "public String getCallingPackage()", "public Bundle getExtras()", "public boolean isActive()", " void finishRequest()", "public void cancel()", "public String toString()", " void dump(String prefix, FileDescriptor fd, PrintWriter writer, String[] args)" ],
  "variableNames" : [ "mInterface", "mCallingPackage", "mCallingUid", "mCallback", "mSession", "mExtras" ]
}