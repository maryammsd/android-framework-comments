{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/StringMatcher.java",
  "packageName" : "android.icu.text",
  "className" : "StringMatcher",
  "comment" : "\n * An object that matches a fixed input string, implementing the\n * UnicodeMatcher API.  This object also implements the\n * UnicodeReplacer API, allowing it to emit the matched text as\n * output.  Since the match text may contain flexible match elements,\n * such as UnicodeSets, the emitted text is not the match pattern, but\n * instead a substring of the actual matched text.  Following\n * convention, the output text is the leftmost match seen up to this\n * point.\n *\n * A StringMatcher may represent a segment, in which case it has a\n * positive segment number.  This affects how the matcher converts\n * itself to a pattern but does not otherwise affect its function.\n *\n * A StringMatcher that is not a segment should not be used as a\n * UnicodeReplacer.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "pattern",
    "type" : "String",
    "comment" : "\n     * The text to be matched.\n     ",
    "links" : [ ]
  }, {
    "name" : "matchStart",
    "type" : "int",
    "comment" : "\n     * Start offset, in the match text, of the <em>rightmost</em>\n     * match.\n     ",
    "links" : [ ]
  }, {
    "name" : "matchLimit",
    "type" : "int",
    "comment" : "\n     * Limit offset, in the match text, of the <em>rightmost</em>\n     * match.\n     ",
    "links" : [ ]
  }, {
    "name" : "segmentNumber",
    "type" : "int",
    "comment" : "\n     * The segment number, 1-based, or 0 if not a segment.\n     ",
    "links" : [ ]
  }, {
    "name" : "data",
    "type" : "RuleBasedTransliterator.Data",
    "comment" : "\n     * Context object that maps stand-ins to matcher and replacer\n     * objects.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int matches(Replaceable text, int[] offset, int limit, boolean incremental)",
    "returnType" : "int",
    "comment" : "\n     * Implement UnicodeMatcher\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toPattern(boolean escapeUnprintable)",
    "returnType" : "String",
    "comment" : "\n     * Implement UnicodeMatcher\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean matchesIndexValue(int v)",
    "returnType" : "boolean",
    "comment" : "\n     * Implement UnicodeMatcher\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addMatchSetTo(UnicodeSet toUnionTo)",
    "returnType" : "void",
    "comment" : "\n     * Implementation of UnicodeMatcher API.  Union the set of all\n     * characters that may be matched by this object into the given\n     * set.\n     * @param toUnionTo the set into which to union the source characters\n     ",
    "links" : [ ]
  }, {
    "name" : "public int replace(Replaceable text, int start, int limit, int[] cursor)",
    "returnType" : "int",
    "comment" : "\n     * UnicodeReplacer API\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toReplacerPattern(boolean escapeUnprintable)",
    "returnType" : "String",
    "comment" : "\n     * UnicodeReplacer API\n     ",
    "links" : [ ]
  }, {
    "name" : "public void resetMatch()",
    "returnType" : "void",
    "comment" : "\n     * Remove any match data.  This must be called before performing a\n     * set of matches with this segment.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addReplacementSetTo(UnicodeSet toUnionTo)",
    "returnType" : "void",
    "comment" : "\n     * Union the set of all characters that may output by this object\n     * into the given set.\n     * @param toUnionTo the set into which to union the output characters\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int matches(Replaceable text, int[] offset, int limit, boolean incremental)", "public String toPattern(boolean escapeUnprintable)", "public boolean matchesIndexValue(int v)", "public void addMatchSetTo(UnicodeSet toUnionTo)", "public int replace(Replaceable text, int start, int limit, int[] cursor)", "public String toReplacerPattern(boolean escapeUnprintable)", "public void resetMatch()", "public void addReplacementSetTo(UnicodeSet toUnionTo)" ],
  "variableNames" : [ "pattern", "matchStart", "matchLimit", "segmentNumber", "data" ]
}