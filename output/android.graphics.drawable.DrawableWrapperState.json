{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/drawable/DrawableWrapper.java",
  "packageName" : "android.graphics.drawable",
  "className" : "DrawableWrapperState",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mThemeAttrs",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChangingConfigurations",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDensity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSrcDensityOverride",
    "type" : "int",
    "comment" : "\n         * The density to use when looking up resources from\n         * {@link Resources#getDrawableForDensity(int, int, Theme)}.\n         * A value of 0 means there is no override and the system density will be used.\n         * @hide\n         ",
    "links" : [ "android.content.res.Resources#getDrawableForDensity(int" ]
  }, {
    "name" : "mDrawableState",
    "type" : "Drawable.ConstantState",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void setDensity(int targetDensity)",
    "returnType" : "void",
    "comment" : "\n         * Sets the constant state density.\n         * <p>\n         * If the density has been previously set, dispatches the change to\n         * subclasses so that density-dependent properties may be scaled as\n         * necessary.\n         *\n         * @param targetDensity the new constant state density\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDensityChanged(int sourceDensity, int targetDensity)",
    "returnType" : "void",
    "comment" : "\n         * Called when the constant state density changes.\n         * <p>\n         * Subclasses with density-dependent constant state properties should\n         * override this method and scale their properties as necessary.\n         *\n         * @param sourceDensity the previous constant state density\n         * @param targetDensity the new constant state density\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean canApplyTheme()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Drawable newDrawable()",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract Drawable newDrawable(@Nullable Resources res)",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getChangingConfigurations()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canConstantState()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final void setDensity(int targetDensity)", " void onDensityChanged(int sourceDensity, int targetDensity)", "public boolean canApplyTheme()", "public Drawable newDrawable()", "public abstract Drawable newDrawable(@Nullable Resources res)", "public int getChangingConfigurations()", "public boolean canConstantState()" ],
  "variableNames" : [ "mThemeAttrs", "mChangingConfigurations", "mDensity", "mSrcDensityOverride", "mDrawableState" ]
}