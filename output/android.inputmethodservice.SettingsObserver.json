{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/inputmethodservice/InputMethodService.java",
  "packageName" : "android.inputmethodservice",
  "className" : "SettingsObserver",
  "comment" : "\n     * A {@link ContentObserver} to monitor {@link Settings.Secure#SHOW_IME_WITH_HARD_KEYBOARD}.\n     *\n     * <p>Note that {@link Settings.Secure#SHOW_IME_WITH_HARD_KEYBOARD} is not a public API.\n     * Basically this functionality still needs to be considered as implementation details.</p>\n     ",
  "variables" : [ {
    "name" : "mShowImeWithHardKeyboard",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "InputMethodService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static SettingsObserver createAndRegister(InputMethodService service)",
    "returnType" : "SettingsObserver",
    "comment" : "\n         * A factory method that internally enforces two-phase initialization to make sure that the\n         * object reference will not be escaped until the object is properly constructed.\n         *\n         * <p>NOTE: Currently {@link SettingsObserver} is accessed only from main thread.  Hence\n         * this enforcement of two-phase initialization may be unnecessary at the moment.</p>\n         *\n         * @param service {@link InputMethodService} that needs to receive the callback.\n         * @return {@link SettingsObserver} that is already registered to\n         * {@link android.content.ContentResolver}. The caller must call\n         * {@link SettingsObserver#unregister()}.\n         ",
    "links" : [ "android.content.ContentResolver", "android.inputmethodservice.InputMethodService", "#unregister()", "SettingsObserver" ]
  }, {
    "name" : " void unregister()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean shouldShowImeWithHardKeyboard()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onChange(boolean selfChange, Uri uri)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mShowImeWithHardKeyboard", "mService" ],
  "methodNames" : [ "public static SettingsObserver createAndRegister(InputMethodService service)", " void unregister()", "private boolean shouldShowImeWithHardKeyboard()", "public void onChange(boolean selfChange, Uri uri)", "public String toString()" ]
}