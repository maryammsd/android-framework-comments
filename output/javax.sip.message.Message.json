{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/sip/message/Message.java",
  "packageName" : "javax.sip.message",
  "className" : "Message",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void addFirst(Header header) throws SipException, NullPointerException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addHeader(Header header)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addLast(Header header) throws SipException, NullPointerException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Header getHeader(String headerName)",
    "returnType" : "Header",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setHeader(Header header)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removeFirst(String headerName) throws NullPointerException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removeLast(String headerName) throws NullPointerException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removeHeader(String headerName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ListIterator getHeaderNames()",
    "returnType" : "ListIterator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ListIterator getHeaders(String headerName)",
    "returnType" : "ListIterator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ListIterator getUnrecognizedHeaders()",
    "returnType" : "ListIterator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Object getApplicationData()",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setApplicationData(Object applicationData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ContentLengthHeader getContentLength()",
    "returnType" : "ContentLengthHeader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setContentLength(ContentLengthHeader contentLength)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ContentLanguageHeader getContentLanguage()",
    "returnType" : "ContentLanguageHeader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setContentLanguage(ContentLanguageHeader contentLanguage)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ContentEncodingHeader getContentEncoding()",
    "returnType" : "ContentEncodingHeader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setContentEncoding(ContentEncodingHeader contentEncoding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ContentDispositionHeader getContentDisposition()",
    "returnType" : "ContentDispositionHeader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setContentDisposition(ContentDispositionHeader contentDisposition)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Object getContent()",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " byte[] getRawContent()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setContent(Object content, ContentTypeHeader contentTypeHeader) throws ParseException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removeContent()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ExpiresHeader getExpires()",
    "returnType" : "ExpiresHeader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setExpires(ExpiresHeader expires)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String getSIPVersion()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setSIPVersion(String version) throws ParseException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Object clone()",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean equals(Object object)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " void addFirst(Header header) throws SipException, NullPointerException", " void addHeader(Header header)", " void addLast(Header header) throws SipException, NullPointerException", " Header getHeader(String headerName)", " void setHeader(Header header)", " void removeFirst(String headerName) throws NullPointerException", " void removeLast(String headerName) throws NullPointerException", " void removeHeader(String headerName)", " ListIterator getHeaderNames()", " ListIterator getHeaders(String headerName)", " ListIterator getUnrecognizedHeaders()", " Object getApplicationData()", " void setApplicationData(Object applicationData)", " ContentLengthHeader getContentLength()", " void setContentLength(ContentLengthHeader contentLength)", " ContentLanguageHeader getContentLanguage()", " void setContentLanguage(ContentLanguageHeader contentLanguage)", " ContentEncodingHeader getContentEncoding()", " void setContentEncoding(ContentEncodingHeader contentEncoding)", " ContentDispositionHeader getContentDisposition()", " void setContentDisposition(ContentDispositionHeader contentDisposition)", " Object getContent()", " byte[] getRawContent()", " void setContent(Object content, ContentTypeHeader contentTypeHeader) throws ParseException", " void removeContent()", " ExpiresHeader getExpires()", " void setExpires(ExpiresHeader expires)", " String getSIPVersion()", " void setSIPVersion(String version) throws ParseException", " Object clone()", " boolean equals(Object object)", " int hashCode()", " String toString()" ],
  "variableNames" : [ ]
}