{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/hdmi/HdmiSwitchClient.java",
  "packageName" : "android.hardware.hdmi",
  "className" : "HdmiSwitchClient",
  "comment" : "\n * An {@code HdmiSwitchClient} represents a HDMI-CEC switch device.\n *\n * <p>HdmiSwitchClient has a CEC device type of HdmiDeviceInfo.DEVICE_PURE_CEC_SWITCH, but it is\n * used by all Android devices that have multiple HDMI inputs, even if it is not a \"pure\" swicth\n * and has another device type like TV or Player.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static IHdmiControlCallback getCallbackWrapper(final OnSelectListener listener)",
    "returnType" : "IHdmiControlCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getDeviceType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void selectDevice(int logicalAddress, @NonNull OnSelectListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Selects a CEC logical device to be a new active source.\n     *\n     * @param logicalAddress logical address of the device to select\n     * @param listener listener to get the result with\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void selectPort(int portId, @NonNull OnSelectListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Selects a HDMI port to be a new route path.\n     *\n     * @param portId HDMI port to select\n     * @see {@link android.media.tv.TvInputHardwareInfo#getHdmiPortId()}\n     *     to get portId of a specific TV Input.\n     * @param listener listener to get the result with\n     *\n     * @hide\n     ",
    "links" : [ "android.media.tv.TvInputHardwareInfo#getHdmiPortId()" ]
  }, {
    "name" : "public void selectDevice(int logicalAddress, @NonNull @CallbackExecutor Executor executor, @NonNull OnSelectListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Selects a CEC logical device to be a new active source.\n     *\n     * @param logicalAddress logical address of the device to select\n     * @param executor executor to allow the develper to specify the thread upon which the listeners\n     *     will be invoked\n     * @param listener listener to get the result with\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void selectPort(int portId, @NonNull @CallbackExecutor Executor executor, @NonNull OnSelectListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Selects a HDMI port to be a new route path.\n     *\n     * @param portId HDMI port to select\n     * @param executor executor to allow the develper to specify the thread upon which the listeners\n     *     will be invoked\n     * @param listener listener to get the result with\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<HdmiDeviceInfo> getDeviceList()",
    "returnType" : "List<HdmiDeviceInfo>",
    "comment" : "\n     * Returns all the CEC devices connected to the device.\n     *\n     * <p>This only applies to device with multiple HDMI inputs\n     *\n     * @return list of {@link HdmiDeviceInfo} for connected CEC devices. Empty list is returned if\n     *     there is none.\n     *\n     * @hide\n     ",
    "links" : [ "android.hardware.hdmi.HdmiDeviceInfo" ]
  }, {
    "name" : "public List<HdmiPortInfo> getPortInfo()",
    "returnType" : "List<HdmiPortInfo>",
    "comment" : "\n     * Get the list of the HDMI input port configuration.\n     *\n     * <p>This returns an empty list when the current device does not have HDMI input.\n     *\n     * @return a list of {@link HdmiPortInfo}\n     ",
    "links" : [ "android.hardware.hdmi.HdmiPortInfo" ]
  } ],
  "variableNames" : [ "TAG" ],
  "methodNames" : [ "private static IHdmiControlCallback getCallbackWrapper(final OnSelectListener listener)", "public int getDeviceType()", "public void selectDevice(int logicalAddress, @NonNull OnSelectListener listener)", "public void selectPort(int portId, @NonNull OnSelectListener listener)", "public void selectDevice(int logicalAddress, @NonNull @CallbackExecutor Executor executor, @NonNull OnSelectListener listener)", "public void selectPort(int portId, @NonNull @CallbackExecutor Executor executor, @NonNull OnSelectListener listener)", "public List<HdmiDeviceInfo> getDeviceList()", "public List<HdmiPortInfo> getPortInfo()" ]
}