{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/filterfw/core/Frame.java",
  "packageName" : "android.filterfw.core",
  "className" : "Frame",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "NO_BINDING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TIMESTAMP_NOT_SET",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TIMESTAMP_UNKNOWN",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFormat",
    "type" : "FrameFormat",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrameManager",
    "type" : "FrameManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReadOnly",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReusable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRefCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBindingType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBindingId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimestamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public FrameFormat getFormat()",
    "returnType" : "FrameFormat",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCapacity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isReadOnly()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getBindingType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getBindingId()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setObjectValue(Object object)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract Object getObjectValue()",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void setInts(int[] ints)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract int[] getInts()",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void setFloats(float[] floats)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract float[] getFloats()",
    "returnType" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void setData(ByteBuffer buffer, int offset, int length)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setData(ByteBuffer buffer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setData(byte[] bytes, int offset, int length)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract ByteBuffer getData()",
    "returnType" : "ByteBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void setBitmap(Bitmap bitmap)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract Bitmap getBitmap()",
    "returnType" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTimestamp(long timestamp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getTimestamp()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDataFromFrame(Frame frame)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean requestResize(int[] newDimensions)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getRefCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Frame release()",
    "returnType" : "Frame",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Frame retain()",
    "returnType" : "Frame",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public FrameManager getFrameManager()",
    "returnType" : "FrameManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void assertFrameMutable()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void setReusable(boolean reusable)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void setFormat(FrameFormat format)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void setGenericObjectValue(Object value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected static Bitmap convertBitmapToRGBA(Bitmap bitmap)",
    "returnType" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void reset(FrameFormat newFormat)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onFrameStore()",
    "returnType" : "void",
    "comment" : "\n     * Called just before a frame is stored, such as when storing to a cache or context.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onFrameFetch()",
    "returnType" : "void",
    "comment" : "\n     * Called when a frame is fetched from an internal store such as a cache.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract boolean hasNativeAllocation()",
    "returnType" : "boolean",
    "comment" : " Core internal methods ///////////////////////////////////////////////////////////////////////",
    "links" : [ ]
  }, {
    "name" : "protected abstract void releaseNativeAllocation()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final int incRefCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final int decRefCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final boolean isReusable()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final void markReadOnly()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public FrameFormat getFormat()", "public int getCapacity()", "public boolean isReadOnly()", "public int getBindingType()", "public long getBindingId()", "public void setObjectValue(Object object)", "public abstract Object getObjectValue()", "public abstract void setInts(int[] ints)", "public abstract int[] getInts()", "public abstract void setFloats(float[] floats)", "public abstract float[] getFloats()", "public abstract void setData(ByteBuffer buffer, int offset, int length)", "public void setData(ByteBuffer buffer)", "public void setData(byte[] bytes, int offset, int length)", "public abstract ByteBuffer getData()", "public abstract void setBitmap(Bitmap bitmap)", "public abstract Bitmap getBitmap()", "public void setTimestamp(long timestamp)", "public long getTimestamp()", "public void setDataFromFrame(Frame frame)", "protected boolean requestResize(int[] newDimensions)", "public int getRefCount()", "public Frame release()", "public Frame retain()", "public FrameManager getFrameManager()", "protected void assertFrameMutable()", "protected void setReusable(boolean reusable)", "protected void setFormat(FrameFormat format)", "protected void setGenericObjectValue(Object value)", "protected static Bitmap convertBitmapToRGBA(Bitmap bitmap)", "protected void reset(FrameFormat newFormat)", "protected void onFrameStore()", "protected void onFrameFetch()", "protected abstract boolean hasNativeAllocation()", "protected abstract void releaseNativeAllocation()", " final int incRefCount()", " final int decRefCount()", " final boolean isReusable()", " final void markReadOnly()" ],
  "variableNames" : [ "NO_BINDING", "TIMESTAMP_NOT_SET", "TIMESTAMP_UNKNOWN", "mFormat", "mFrameManager", "mReadOnly", "mReusable", "mRefCount", "mBindingType", "mBindingId", "mTimestamp" ]
}