{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/quickaccesswallet/WalletCard.java",
  "packageName" : "android.service.quickaccesswallet",
  "className" : "WalletCard",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "CARD_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Unknown cards refer to cards whose types are unspecified.\n     ",
    "links" : [ ]
  }, {
    "name" : "CARD_TYPE_PAYMENT",
    "type" : "int",
    "comment" : "\n     * Payment cards refer to credit cards, debit cards or any other cards in the wallet used to\n     * make cash-equivalent payments.\n     ",
    "links" : [ ]
  }, {
    "name" : "CARD_TYPE_NON_PAYMENT",
    "type" : "int",
    "comment" : "\n     * Non-payment cards refer to any cards that are not used for cash-equivalent payment, including\n     * event tickets, flights, offers, loyalty cards, gift cards and transit tickets.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCardId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCardType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCardImage",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentDescription",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCardIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCardLabel",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNonPaymentCardSecondaryImage",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCardLocations",
    "type" : "List<Location>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WalletCard>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void writeIconIfNonNull(Icon icon, Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Utility function called by writeToParcel\n     ",
    "links" : [ ]
  }, {
    "name" : "private static WalletCard readFromParcel(Parcel source)",
    "returnType" : "WalletCard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getCardId()",
    "returnType" : "String",
    "comment" : "\n     * The card id must be unique within the list of cards returned.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCardType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the card type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Icon getCardImage()",
    "returnType" : "Icon",
    "comment" : "\n     * The visual representation of the card. If the card image Icon is a bitmap, it should have a\n     * width of {@link GetWalletCardsRequest#getCardWidthPx()} and a height of {@link\n     * GetWalletCardsRequest#getCardHeightPx()}.\n     ",
    "links" : [ "android.service.quickaccesswallet.GetWalletCardsRequest#getCardWidthPx()", "android.service.quickaccesswallet.GetWalletCardsRequest#getCardHeightPx()" ]
  }, {
    "name" : "public CharSequence getContentDescription()",
    "returnType" : "CharSequence",
    "comment" : "\n     * The content description of the card image.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PendingIntent getPendingIntent()",
    "returnType" : "PendingIntent",
    "comment" : "\n     * If the user performs a click on the card, this PendingIntent will be sent. If the device is\n     * locked, the wallet will first request device unlock before sending the pending intent.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Icon getCardIcon()",
    "returnType" : "Icon",
    "comment" : "\n     * An icon may be shown alongside the card image to convey information about how the card can be\n     * used, or if some other action must be taken before using the card. For example, an NFC logo\n     * could indicate that the card is NFC-enabled and will be provided to an NFC terminal if the\n     * phone is held in close proximity to the NFC reader.\n     *\n     * <p>If the supplied Icon is backed by a bitmap, it should have width and height\n     * {@link GetWalletCardsRequest#getIconSizePx()}.\n     ",
    "links" : [ "android.service.quickaccesswallet.GetWalletCardsRequest#getIconSizePx()" ]
  }, {
    "name" : "public CharSequence getCardLabel()",
    "returnType" : "CharSequence",
    "comment" : "\n     * A card label may be shown alongside the card image to convey information about how the card\n     * can be used, or if some other action must be taken before using the card. For example, an\n     * NFC-enabled card could be labeled \"Hold near reader\" to inform the user of how to use NFC\n     * cards when interacting with an NFC reader.\n     *\n     * <p>If the provided label is too long to fit on one line, it may be truncated and ellipsized.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Icon getNonPaymentCardSecondaryImage()",
    "returnType" : "Icon",
    "comment" : "\n     * Visual representation of the card when it is tapped. May include additional information\n     * unique to the card, such as a barcode or number. Only valid for CARD_TYPE_NON_PAYMENT.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<Location> getCardLocations()",
    "returnType" : "List<Location>",
    "comment" : " List of locations that this card might be useful at. ",
    "links" : [ ]
  }, {
    "name" : "public void removeCardLocations()",
    "returnType" : "void",
    "comment" : "\n     * Removes locations from card. Should be called if {@link\n     * PackageManager.FEATURE_WALLET_LOCATION_BASED_SUGGESTIONS} is disabled.\n     *\n     * @hide\n     ",
    "links" : [ "PackageManager.FEATURE_WALLET_LOCATION_BASED_SUGGESTIONS" ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "private void writeIconIfNonNull(Icon icon, Parcel dest, int flags)", "private static WalletCard readFromParcel(Parcel source)", "public String getCardId()", "public int getCardType()", "public Icon getCardImage()", "public CharSequence getContentDescription()", "public PendingIntent getPendingIntent()", "public Icon getCardIcon()", "public CharSequence getCardLabel()", "public Icon getNonPaymentCardSecondaryImage()", "public List<Location> getCardLocations()", "public void removeCardLocations()" ],
  "variableNames" : [ "CARD_TYPE_UNKNOWN", "CARD_TYPE_PAYMENT", "CARD_TYPE_NON_PAYMENT", "mCardId", "mCardType", "mCardImage", "mContentDescription", "mPendingIntent", "mCardIcon", "mCardLabel", "mNonPaymentCardSecondaryImage", "mCardLocations", "CREATOR" ]
}