{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/drawable/DrawableContainer.java",
  "packageName" : "android.graphics.drawable",
  "className" : "DrawableContainerState",
  "comment" : "\n     * A ConstantState that can contain several {@link Drawable}s.\n     *\n     * This class was made public to enable testing, and its visibility may change in a future\n     * release.\n     ",
  "links" : [ "android.graphics.drawable.Drawable" ],
  "variables" : [ {
    "name" : "mOwner",
    "type" : "DrawableContainer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSourceRes",
    "type" : "Resources",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDensity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChangingConfigurations",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChildrenChangingConfigurations",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDrawableFutures",
    "type" : "SparseArray<ConstantState>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDrawables",
    "type" : "Drawable[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumChildren",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVariablePadding",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCheckedPadding",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstantPadding",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstantSize",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCheckedConstantSize",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstantWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstantHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstantMinimumWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstantMinimumHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCheckedOpacity",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOpacity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCheckedStateful",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStateful",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCheckedConstantState",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCanConstantState",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDither",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMutated",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLayoutDirection",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnterFadeDuration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExitFadeDuration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoMirrored",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColorFilter",
    "type" : "ColorFilter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasColorFilter",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTintList",
    "type" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBlendMode",
    "type" : "BlendMode",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasTintList",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasTintMode",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getChangingConfigurations()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int addChild(Drawable dr)",
    "returnType" : "int",
    "comment" : "\n         * Adds the drawable to the end of the list of contained drawables.\n         *\n         * @param dr the drawable to add\n         * @return the position of the drawable within the container\n         ",
    "links" : [ ]
  }, {
    "name" : " void invalidateCache()",
    "returnType" : "void",
    "comment" : "\n         * Invalidates the cached opacity and statefulness.\n         ",
    "links" : [ ]
  }, {
    "name" : " final int getCapacity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void createAllFutures()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Drawable prepareDrawable(Drawable child)",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int getChildCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final Drawable[] getChildren()",
    "returnType" : "Drawable[]",
    "comment" : "\n         * @deprecated Use {@link #getChild} instead.\n         ",
    "links" : [ "#getChild" ]
  }, {
    "name" : "public final Drawable getChild(int index)",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final boolean setLayoutDirection(int layoutDirection, int currentIndex)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final void updateDensity(Resources res)",
    "returnType" : "void",
    "comment" : "\n         * Updates the source density based on the resources used to inflate\n         * density-dependent values.\n         *\n         * @param res the resources used to inflate density-dependent values\n         ",
    "links" : [ ]
  }, {
    "name" : " final void applyTheme(Theme theme)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canApplyTheme()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void mutate()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final void clearMutated()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void setVariablePadding(boolean variable)",
    "returnType" : "void",
    "comment" : "\n         * A boolean value indicating whether to use the maximum padding value\n         * of all frames in the set (false), or to use the padding value of the\n         * frame being shown (true). Default value is false.\n         ",
    "links" : [ ]
  }, {
    "name" : "public final Rect getConstantPadding()",
    "returnType" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void setConstantSize(boolean constant)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean isConstantSize()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int getConstantWidth()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int getConstantHeight()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int getConstantMinimumWidth()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int getConstantMinimumHeight()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void computeConstantSize()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void setEnterFadeDuration(int duration)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int getEnterFadeDuration()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void setExitFadeDuration(int duration)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int getExitFadeDuration()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int getOpacity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean isStateful()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void growArray(int oldSize, int newSize)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized boolean canConstantState()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getChangingConfigurations()", "public final int addChild(Drawable dr)", " void invalidateCache()", " final int getCapacity()", "private void createAllFutures()", "private Drawable prepareDrawable(Drawable child)", "public final int getChildCount()", "public final Drawable[] getChildren()", "public final Drawable getChild(int index)", " final boolean setLayoutDirection(int layoutDirection, int currentIndex)", " final void updateDensity(Resources res)", " final void applyTheme(Theme theme)", "public boolean canApplyTheme()", "private void mutate()", " final void clearMutated()", "public final void setVariablePadding(boolean variable)", "public final Rect getConstantPadding()", "public final void setConstantSize(boolean constant)", "public final boolean isConstantSize()", "public final int getConstantWidth()", "public final int getConstantHeight()", "public final int getConstantMinimumWidth()", "public final int getConstantMinimumHeight()", "protected void computeConstantSize()", "public final void setEnterFadeDuration(int duration)", "public final int getEnterFadeDuration()", "public final void setExitFadeDuration(int duration)", "public final int getExitFadeDuration()", "public final int getOpacity()", "public final boolean isStateful()", "public void growArray(int oldSize, int newSize)", "public synchronized boolean canConstantState()" ],
  "variableNames" : [ "mOwner", "mSourceRes", "mDensity", "mChangingConfigurations", "mChildrenChangingConfigurations", "mDrawableFutures", "mDrawables", "mNumChildren", "mVariablePadding", "mCheckedPadding", "mConstantPadding", "mConstantSize", "mCheckedConstantSize", "mConstantWidth", "mConstantHeight", "mConstantMinimumWidth", "mConstantMinimumHeight", "mCheckedOpacity", "mOpacity", "mCheckedStateful", "mStateful", "mCheckedConstantState", "mCanConstantState", "mDither", "mMutated", "mLayoutDirection", "mEnterFadeDuration", "mExitFadeDuration", "mAutoMirrored", "mColorFilter", "mHasColorFilter", "mTintList", "mBlendMode", "mHasTintList", "mHasTintMode" ]
}