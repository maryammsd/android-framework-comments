{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/templates/XUnresolvedVariableSimple.java",
  "packageName" : "org.apache.xalan.templates",
  "className" : "XUnresolvedVariableSimple",
  "comment" : "\n * This is the same as XUnresolvedVariable, but it assumes that the \n * context is already set up.  For use with psuedo variables.\n * Also, it holds an Expression object, instead of an ElemVariable.\n * It must only hold static context, since a single copy will be \n * held in the template.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public XObject execute(XPathContext xctxt) throws javax.xml.transform.TransformerException",
    "returnType" : "XObject",
    "comment" : "\n   * For support of literal objects in xpaths.\n   *\n   * @param xctxt The XPath execution context.\n   *\n   * @return This object.\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n   * Tell what kind of class this is.\n   *\n   * @return CLASS_UNRESOLVEDVARIABLE\n   ",
    "links" : [ ]
  }, {
    "name" : "public String getTypeString()",
    "returnType" : "String",
    "comment" : "\n   * Given a request type, return the equivalent string.\n   * For diagnostic purposes.\n   *\n   * @return An informational string.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public XObject execute(XPathContext xctxt) throws javax.xml.transform.TransformerException", "public int getType()", "public String getTypeString()" ],
  "variableNames" : [ "serialVersionUID" ]
}