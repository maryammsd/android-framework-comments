{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/util/apk/ZipUtils.java",
  "packageName" : "android.util.apk",
  "className" : "ZipUtils",
  "comment" : "\n * Assorted ZIP format helpers.\n *\n * <p>NOTE: Most helper methods operating on {@code ByteBuffer} instances expect that the byte\n * order of these buffers is little-endian.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ZIP_EOCD_REC_MIN_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ZIP_EOCD_REC_SIG",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ZIP_EOCD_CENTRAL_DIR_SIZE_FIELD_OFFSET",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ZIP_EOCD_CENTRAL_DIR_OFFSET_FIELD_OFFSET",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ZIP_EOCD_COMMENT_LENGTH_FIELD_OFFSET",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ZIP64_EOCD_LOCATOR_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ZIP64_EOCD_LOCATOR_SIG_REVERSE_BYTE_ORDER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UINT16_MAX_VALUE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static Pair<ByteBuffer, Long> findZipEndOfCentralDirectoryRecord(RandomAccessFile zip) throws IOException",
    "returnType" : "Pair<ByteBuffer, Long>",
    "comment" : "\n     * Returns the ZIP End of Central Directory record of the provided ZIP file.\n     *\n     * @return contents of the ZIP End of Central Directory record and the record's offset in the\n     *         file or {@code null} if the file does not contain the record.\n     *\n     * @throws IOException if an I/O error occurs while reading the file.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static Pair<ByteBuffer, Long> findZipEndOfCentralDirectoryRecord(RandomAccessFile zip, int maxCommentSize) throws IOException",
    "returnType" : "Pair<ByteBuffer, Long>",
    "comment" : "\n     * Returns the ZIP End of Central Directory record of the provided ZIP file.\n     *\n     * @param maxCommentSize maximum accepted size (in bytes) of EoCD comment field. The permitted\n     *        value is from 0 to 65535 inclusive. The smaller the value, the faster this method\n     *        locates the record, provided its comment field is no longer than this value.\n     *\n     * @return contents of the ZIP End of Central Directory record and the record's offset in the\n     *         file or {@code null} if the file does not contain the record.\n     *\n     * @throws IOException if an I/O error occurs while reading the file.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int findZipEndOfCentralDirectoryRecord(ByteBuffer zipContents)",
    "returnType" : "int",
    "comment" : "\n     * Returns the position at which ZIP End of Central Directory record starts in the provided\n     * buffer or {@code -1} if the record is not present.\n     *\n     * <p>NOTE: Byte order of {@code zipContents} must be little-endian.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final boolean isZip64EndOfCentralDirectoryLocatorPresent(RandomAccessFile zip, long zipEndOfCentralDirectoryPosition) throws IOException",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if the provided file contains a ZIP64 End of Central Directory\n     * Locator.\n     *\n     * @param zipEndOfCentralDirectoryPosition offset of the ZIP End of Central Directory record\n     *        in the file.\n     *\n     * @throws IOException if an I/O error occurs while reading the file.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long getZipEocdCentralDirectoryOffset(ByteBuffer zipEndOfCentralDirectory)",
    "returnType" : "long",
    "comment" : "\n     * Returns the offset of the start of the ZIP Central Directory in the archive.\n     *\n     * <p>NOTE: Byte order of {@code zipEndOfCentralDirectory} must be little-endian.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void setZipEocdCentralDirectoryOffset(ByteBuffer zipEndOfCentralDirectory, long offset)",
    "returnType" : "void",
    "comment" : "\n     * Sets the offset of the start of the ZIP Central Directory in the archive.\n     *\n     * <p>NOTE: Byte order of {@code zipEndOfCentralDirectory} must be little-endian.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long getZipEocdCentralDirectorySizeBytes(ByteBuffer zipEndOfCentralDirectory)",
    "returnType" : "long",
    "comment" : "\n     * Returns the size (in bytes) of the ZIP Central Directory.\n     *\n     * <p>NOTE: Byte order of {@code zipEndOfCentralDirectory} must be little-endian.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void assertByteOrderLittleEndian(ByteBuffer buffer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int getUnsignedInt16(ByteBuffer buffer, int offset)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static long getUnsignedInt32(ByteBuffer buffer, int offset)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void setUnsignedInt32(ByteBuffer buffer, int offset, long value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static Pair<ByteBuffer, Long> findZipEndOfCentralDirectoryRecord(RandomAccessFile zip) throws IOException", "private static Pair<ByteBuffer, Long> findZipEndOfCentralDirectoryRecord(RandomAccessFile zip, int maxCommentSize) throws IOException", "private static int findZipEndOfCentralDirectoryRecord(ByteBuffer zipContents)", "public static final boolean isZip64EndOfCentralDirectoryLocatorPresent(RandomAccessFile zip, long zipEndOfCentralDirectoryPosition) throws IOException", "public static long getZipEocdCentralDirectoryOffset(ByteBuffer zipEndOfCentralDirectory)", "public static void setZipEocdCentralDirectoryOffset(ByteBuffer zipEndOfCentralDirectory, long offset)", "public static long getZipEocdCentralDirectorySizeBytes(ByteBuffer zipEndOfCentralDirectory)", "private static void assertByteOrderLittleEndian(ByteBuffer buffer)", "private static int getUnsignedInt16(ByteBuffer buffer, int offset)", "private static long getUnsignedInt32(ByteBuffer buffer, int offset)", "private static void setUnsignedInt32(ByteBuffer buffer, int offset, long value)" ],
  "variableNames" : [ "ZIP_EOCD_REC_MIN_SIZE", "ZIP_EOCD_REC_SIG", "ZIP_EOCD_CENTRAL_DIR_SIZE_FIELD_OFFSET", "ZIP_EOCD_CENTRAL_DIR_OFFSET_FIELD_OFFSET", "ZIP_EOCD_COMMENT_LENGTH_FIELD_OFFSET", "ZIP64_EOCD_LOCATOR_SIZE", "ZIP64_EOCD_LOCATOR_SIG_REVERSE_BYTE_ORDER", "UINT16_MAX_VALUE" ]
}