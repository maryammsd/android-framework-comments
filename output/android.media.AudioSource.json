{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/MediaRecorder.java",
  "packageName" : "android.media",
  "className" : "AudioSource",
  "comment" : "\n     * Defines the audio source.\n     * An audio source defines both a default physical source of audio signal, and a recording\n     * configuration. These constants are for instance used\n     * in {@link MediaRecorder#setAudioSource(int)} or\n     * {@link AudioRecord.Builder#setAudioSource(int)}.\n     ",
  "variables" : [ {
    "name" : "AUDIO_SOURCE_INVALID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT",
    "type" : "int",
    "comment" : " Default audio source *",
    "links" : [ ]
  }, {
    "name" : "MIC",
    "type" : "int",
    "comment" : " Microphone audio source ",
    "links" : [ ]
  }, {
    "name" : "VOICE_UPLINK",
    "type" : "int",
    "comment" : " Voice call uplink (Tx) audio source.\n         * <p>\n         * Capturing from <code>VOICE_UPLINK</code> source requires the\n         * {@link android.Manifest.permission#CAPTURE_AUDIO_OUTPUT} permission.\n         * This permission is reserved for use by system components and is not available to\n         * third-party applications.\n         * </p>\n         ",
    "links" : [ "android.Manifest.permission#CAPTURE_AUDIO_OUTPUT" ]
  }, {
    "name" : "VOICE_DOWNLINK",
    "type" : "int",
    "comment" : " Voice call downlink (Rx) audio source.\n         * <p>\n         * Capturing from <code>VOICE_DOWNLINK</code> source requires the\n         * {@link android.Manifest.permission#CAPTURE_AUDIO_OUTPUT} permission.\n         * This permission is reserved for use by system components and is not available to\n         * third-party applications.\n         * </p>\n         ",
    "links" : [ "android.Manifest.permission#CAPTURE_AUDIO_OUTPUT" ]
  }, {
    "name" : "VOICE_CALL",
    "type" : "int",
    "comment" : " Voice call uplink + downlink audio source\n         * <p>\n         * Capturing from <code>VOICE_CALL</code> source requires the\n         * {@link android.Manifest.permission#CAPTURE_AUDIO_OUTPUT} permission.\n         * This permission is reserved for use by system components and is not available to\n         * third-party applications.\n         * </p>\n         ",
    "links" : [ "android.Manifest.permission#CAPTURE_AUDIO_OUTPUT" ]
  }, {
    "name" : "CAMCORDER",
    "type" : "int",
    "comment" : " Microphone audio source tuned for video recording, with the same orientation\n         *  as the camera if available. ",
    "links" : [ ]
  }, {
    "name" : "VOICE_RECOGNITION",
    "type" : "int",
    "comment" : " Microphone audio source tuned for voice recognition. ",
    "links" : [ ]
  }, {
    "name" : "VOICE_COMMUNICATION",
    "type" : "int",
    "comment" : " Microphone audio source tuned for voice communications such as VoIP. It\n         *  will for instance take advantage of echo cancellation or automatic gain control\n         *  if available.\n         ",
    "links" : [ ]
  }, {
    "name" : "REMOTE_SUBMIX",
    "type" : "int",
    "comment" : "\n         * Audio source for a submix of audio streams to be presented remotely.\n         * <p>\n         * An application can use this audio source to capture a mix of audio streams\n         * that should be transmitted to a remote receiver such as a Wifi display.\n         * While recording is active, these audio streams are redirected to the remote\n         * submix instead of being played on the device speaker or headset.\n         * </p><p>\n         * Certain streams are excluded from the remote submix, including\n         * {@link AudioManager#STREAM_RING}, {@link AudioManager#STREAM_ALARM},\n         * and {@link AudioManager#STREAM_NOTIFICATION}.  These streams will continue\n         * to be presented locally as usual.\n         * </p><p>\n         * Capturing the remote submix audio requires the\n         * {@link android.Manifest.permission#CAPTURE_AUDIO_OUTPUT} permission.\n         * This permission is reserved for use by system components and is not available to\n         * third-party applications.\n         * </p>\n         ",
    "links" : [ "android.media.AudioManager#STREAM_NOTIFICATION", "android.media.AudioManager#STREAM_RING", "android.media.AudioManager#STREAM_ALARM", "android.Manifest.permission#CAPTURE_AUDIO_OUTPUT" ]
  }, {
    "name" : "UNPROCESSED",
    "type" : "int",
    "comment" : " Microphone audio source tuned for unprocessed (raw) sound if available, behaves like\n         *  {@link #DEFAULT} otherwise. ",
    "links" : [ "#DEFAULT" ]
  }, {
    "name" : "VOICE_PERFORMANCE",
    "type" : "int",
    "comment" : "\n         * Source for capturing audio meant to be processed in real time and played back for live\n         * performance (e.g karaoke).\n         * <p>\n         * The capture path will minimize latency and coupling with\n         * playback path.\n         * </p>\n         ",
    "links" : [ ]
  }, {
    "name" : "ECHO_REFERENCE",
    "type" : "int",
    "comment" : "\n         * Source for an echo canceller to capture the reference signal to be cancelled.\n         * <p>\n         * The echo reference signal will be captured as close as possible to the DAC in order\n         * to include all post processing applied to the playback path.\n         * </p><p>\n         * Capturing the echo reference requires the\n         * {@link android.Manifest.permission#CAPTURE_AUDIO_OUTPUT} permission.\n         * This permission is reserved for use by system components and is not available to\n         * third-party applications.\n         * </p>\n         * @hide\n         ",
    "links" : [ "android.Manifest.permission#CAPTURE_AUDIO_OUTPUT" ]
  }, {
    "name" : "RADIO_TUNER",
    "type" : "int",
    "comment" : "\n         * Audio source for capturing broadcast radio tuner output.\n         * Capturing the radio tuner output requires the\n         * {@link android.Manifest.permission#CAPTURE_AUDIO_OUTPUT} permission.\n         * This permission is reserved for use by system components and is not available to\n         * third-party applications.\n         * @hide\n         ",
    "links" : [ "android.Manifest.permission#CAPTURE_AUDIO_OUTPUT" ]
  }, {
    "name" : "HOTWORD",
    "type" : "int",
    "comment" : "\n         * Audio source for preemptible, low-priority software hotword detection\n         * It presents the same gain and pre-processing tuning as {@link #VOICE_RECOGNITION}.\n         * <p>\n         * An application should use this audio source when it wishes to do\n         * always-on software hotword detection, while gracefully giving in to any other application\n         * that might want to read from the microphone.\n         * </p>\n         * This is a hidden audio source.\n         * @hide\n         ",
    "links" : [ "#VOICE_RECOGNITION" ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "AUDIO_SOURCE_INVALID", "DEFAULT", "MIC", "VOICE_UPLINK", "VOICE_DOWNLINK", "VOICE_CALL", "CAMCORDER", "VOICE_RECOGNITION", "VOICE_COMMUNICATION", "REMOTE_SUBMIX", "UNPROCESSED", "VOICE_PERFORMANCE", "ECHO_REFERENCE", "RADIO_TUNER", "HOTWORD" ],
  "methodNames" : [ ]
}