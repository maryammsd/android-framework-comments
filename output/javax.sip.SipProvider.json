{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/sip/SipProvider.java",
  "packageName" : "javax.sip",
  "className" : "SipProvider",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void setListeningPoint(ListeningPoint listeningPoint) throws ObjectInUseException",
    "returnType" : "void",
    "comment" : "\n     * @deprecated\n     * @see #addListeningPoint(ListeningPoint)\n     ",
    "links" : [ ]
  }, {
    "name" : " void addListeningPoint(ListeningPoint listeningPoint) throws ObjectInUseException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removeListeningPoint(ListeningPoint listeningPoint) throws ObjectInUseException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removeListeningPoints()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ListeningPoint getListeningPoint()",
    "returnType" : "ListeningPoint",
    "comment" : "\n     * @deprecated\n     * @see #getListeningPoints()\n     ",
    "links" : [ ]
  }, {
    "name" : " ListeningPoint getListeningPoint(String transport)",
    "returnType" : "ListeningPoint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ListeningPoint[] getListeningPoints()",
    "returnType" : "ListeningPoint[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void addSipListener(SipListener sipListener) throws TooManyListenersException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void removeSipListener(SipListener sipListener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " CallIdHeader getNewCallId()",
    "returnType" : "CallIdHeader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ClientTransaction getNewClientTransaction(Request request) throws TransactionUnavailableException",
    "returnType" : "ClientTransaction",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ServerTransaction getNewServerTransaction(Request request) throws TransactionAlreadyExistsException, TransactionUnavailableException",
    "returnType" : "ServerTransaction",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Dialog getNewDialog(Transaction transaction) throws SipException",
    "returnType" : "Dialog",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isAutomaticDialogSupportEnabled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setAutomaticDialogSupportEnabled(boolean flag)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " SipStack getSipStack()",
    "returnType" : "SipStack",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void sendRequest(Request request) throws SipException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void sendResponse(Response response) throws SipException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " void setListeningPoint(ListeningPoint listeningPoint) throws ObjectInUseException", " void addListeningPoint(ListeningPoint listeningPoint) throws ObjectInUseException", " void removeListeningPoint(ListeningPoint listeningPoint) throws ObjectInUseException", " void removeListeningPoints()", " ListeningPoint getListeningPoint()", " ListeningPoint getListeningPoint(String transport)", " ListeningPoint[] getListeningPoints()", " void addSipListener(SipListener sipListener) throws TooManyListenersException", " void removeSipListener(SipListener sipListener)", " CallIdHeader getNewCallId()", " ClientTransaction getNewClientTransaction(Request request) throws TransactionUnavailableException", " ServerTransaction getNewServerTransaction(Request request) throws TransactionAlreadyExistsException, TransactionUnavailableException", " Dialog getNewDialog(Transaction transaction) throws SipException", " boolean isAutomaticDialogSupportEnabled()", " void setAutomaticDialogSupportEnabled(boolean flag)", " SipStack getSipStack()", " void sendRequest(Request request) throws SipException", " void sendResponse(Response response) throws SipException" ],
  "variableNames" : [ ]
}