{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/xml/sax/SAXException.java",
  "packageName" : "org.xml.sax",
  "className" : "SAXException",
  "comment" : "\n * Encapsulate a general SAX error or warning.\n *\n * <blockquote>\n * <em>This module, both source code and documentation, is in the\n * Public Domain, and comes with <strong>NO WARRANTY</strong>.</em>\n * See <a href='http://www.saxproject.org'>http://www.saxproject.org</a>\n * for further information.\n * </blockquote>\n *\n * <p>This class can contain basic error or warning information from\n * either the XML parser or the application: a parser writer or\n * application writer can subclass it to provide additional\n * functionality.  SAX handlers may throw this exception or\n * any exception subclassed from it.</p>\n *\n * <p>If the application needs to pass through other types of\n * exceptions, it must wrap those exceptions in a SAXException\n * or an exception derived from a SAXException.</p>\n *\n * <p>If the parser or application needs to include information about a\n * specific location in an XML document, it should use the\n * {@link org.xml.sax.SAXParseException SAXParseException} subclass.</p>\n *\n * @since SAX 1.0\n * @author David Megginson\n * @version 2.0.1 (sax2r2)\n * @see org.xml.sax.SAXParseException\n ",
  "links" : [ "org.xml.sax.SAXParseException" ],
  "variables" : [ {
    "name" : "exception",
    "type" : "Exception",
    "comment" : "\n     * @serial The embedded exception if tunnelling, or null.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getMessage()",
    "returnType" : "String",
    "comment" : "\n     * Return a detail message for this exception.\n     *\n     * <p>If there is an embedded exception, and if the SAXException\n     * has no detail message of its own, this method will return\n     * the detail message from the embedded exception.</p>\n     *\n     * @return The error or warning message.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Exception getException()",
    "returnType" : "Exception",
    "comment" : "\n     * Return the embedded exception, if any.\n     *\n     * @return The embedded exception, or null if there is none.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Override toString to pick up any embedded exception.\n     *\n     * @return A string representation of this exception.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getMessage()", "public Exception getException()", "public String toString()" ],
  "variableNames" : [ "exception" ]
}