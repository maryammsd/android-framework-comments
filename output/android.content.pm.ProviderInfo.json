{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/ProviderInfo.java",
  "packageName" : "android.content.pm",
  "className" : "ProviderInfo",
  "comment" : "\n * Holds information about a specific\n * {@link android.content.ContentProvider content provider}. This is returned by\n * {@link android.content.pm.PackageManager#resolveContentProvider(java.lang.String, int)\n * PackageManager.resolveContentProvider()}.\n ",
  "links" : [ "android.content.pm.PackageManager#resolveContentProvider(java.lang.String", "android.content.ContentProvider" ],
  "variables" : [ {
    "name" : "authority",
    "type" : "String",
    "comment" : " The name provider is published under content:// ",
    "links" : [ ]
  }, {
    "name" : "readPermission",
    "type" : "String",
    "comment" : " Optional permission required for read-only access this content\n     * provider. ",
    "links" : [ ]
  }, {
    "name" : "writePermission",
    "type" : "String",
    "comment" : " Optional permission required for read/write access this content\n     * provider. ",
    "links" : [ ]
  }, {
    "name" : "grantUriPermissions",
    "type" : "boolean",
    "comment" : " If true, additional permissions to specific Uris in this content\n     * provider can be granted, as per the\n     * {@link android.R.styleable#AndroidManifestProvider_grantUriPermissions\n     * grantUriPermissions} attribute.\n     ",
    "links" : [ "android.R.styleable#AndroidManifestProvider_grantUriPermissionsgrantUriPermissions" ]
  }, {
    "name" : "forceUriPermissions",
    "type" : "boolean",
    "comment" : " If true, always apply URI permission grants, as per the\n     * {@link android.R.styleable#AndroidManifestProvider_forceUriPermissions\n     * forceUriPermissions} attribute.\n     ",
    "links" : [ "android.R.styleable#AndroidManifestProvider_forceUriPermissionsforceUriPermissions" ]
  }, {
    "name" : "uriPermissionPatterns",
    "type" : "PatternMatcher[]",
    "comment" : "\n     * If non-null, these are the patterns that are allowed for granting URI\n     * permissions.  Any URI that does not match one of these patterns will not\n     * allowed to be granted.  If null, all URIs are allowed.  The\n     * {@link PackageManager#GET_URI_PERMISSION_PATTERNS\n     * PackageManager.GET_URI_PERMISSION_PATTERNS} flag must be specified for\n     * this field to be filled in.\n     ",
    "links" : [ "android.content.pm.PackageManager#GET_URI_PERMISSION_PATTERNSPackageManager.GET_URI_PERMISSION_PATTERNS" ]
  }, {
    "name" : "pathPermissions",
    "type" : "PathPermission[]",
    "comment" : "\n     * If non-null, these are path-specific permissions that are allowed for\n     * accessing the provider.  Any permissions listed here will allow a\n     * holding client to access the provider, and the provider will check\n     * the URI it provides when making calls against the patterns here.\n     ",
    "links" : [ ]
  }, {
    "name" : "multiprocess",
    "type" : "boolean",
    "comment" : " If true, this content provider allows multiple instances of itself\n     *  to run in different process.  If false, a single instances is always\n     *  run in {@link #processName}. ",
    "links" : [ "#processName" ]
  }, {
    "name" : "initOrder",
    "type" : "int",
    "comment" : " Used to control initialization order of single-process providers\n     *  running in the same process.  Higher goes first. ",
    "links" : [ ]
  }, {
    "name" : "FLAG_VISIBLE_TO_INSTANT_APP",
    "type" : "int",
    "comment" : "\n     * Bit in {@link #flags} indicating if the provider is visible to ephemeral applications.\n     * @hide\n     ",
    "links" : [ "#flags" ]
  }, {
    "name" : "FLAG_SYSTEM_USER_ONLY",
    "type" : "int",
    "comment" : "\n     * Bit in {@link #flags}: If set, this provider will only be available\n     * for the system user.\n     * Set from the android.R.attr#systemUserOnly attribute.\n     * In Sync with {@link ActivityInfo#FLAG_SYSTEM_USER_ONLY}\n     * @hide\n     ",
    "links" : [ "android.content.pm.ActivityInfo#FLAG_SYSTEM_USER_ONLY", "#flags" ]
  }, {
    "name" : "FLAG_SINGLE_USER",
    "type" : "int",
    "comment" : "\n     * Bit in {@link #flags}: If set, a single instance of the provider will\n     * run for all users on the device.  Set from the\n     * {@link android.R.attr#singleUser} attribute.\n     ",
    "links" : [ "android.R.attr#singleUser", "#flags" ]
  }, {
    "name" : "flags",
    "type" : "int",
    "comment" : "\n     * Options that have been set in the provider declaration in the\n     * manifest.\n     * These include: {@link #FLAG_SINGLE_USER}.\n     ",
    "links" : [ "#FLAG_SINGLE_USER" ]
  }, {
    "name" : "isSyncable",
    "type" : "boolean",
    "comment" : "\n     * Whether or not this provider is syncable.\n     * @deprecated This flag is now being ignored. The current way to make a provider\n     * syncable is to provide a SyncAdapter service for a given provider/account type. \n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ProviderInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void dump(Printer pw, String prefix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(Printer pw, String prefix, int dumpFlags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int parcelableFlags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void dump(Printer pw, String prefix)", "public void dump(Printer pw, String prefix, int dumpFlags)", "public int describeContents()", "public void writeToParcel(Parcel out, int parcelableFlags)", "public String toString()" ],
  "variableNames" : [ "authority", "readPermission", "writePermission", "grantUriPermissions", "forceUriPermissions", "uriPermissionPatterns", "pathPermissions", "multiprocess", "initOrder", "FLAG_VISIBLE_TO_INSTANT_APP", "FLAG_SYSTEM_USER_ONLY", "FLAG_SINGLE_USER", "flags", "isSyncable", "CREATOR" ]
}