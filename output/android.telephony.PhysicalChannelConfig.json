{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/PhysicalChannelConfig.java",
  "packageName" : "android.telephony",
  "className" : "PhysicalChannelConfig",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "CONNECTION_PRIMARY_SERVING",
    "type" : "int",
    "comment" : "\n     * UE has connection to cell for signalling and possibly data (3GPP 36.331, 25.331).\n     *\n     * @deprecated Use {@link  CellInfo#CONNECTION_PRIMARY_SERVING} instead.\n     ",
    "links" : [ "android.telephony.CellInfo#CONNECTION_PRIMARY_SERVING" ]
  }, {
    "name" : "CONNECTION_SECONDARY_SERVING",
    "type" : "int",
    "comment" : "\n     * UE has connection to cell for data (3GPP 36.331, 25.331).\n     *\n     * @deprecated Use {@link  CellInfo#CONNECTION_SECONDARY_SERVING} instead.\n     ",
    "links" : [ "android.telephony.CellInfo#CONNECTION_SECONDARY_SERVING" ]
  }, {
    "name" : "CONNECTION_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Connection status is unknown.\n     *\n     * @deprecated Use {@link  CellInfo#CONNECTION_UNKNOWN} instead.\n     ",
    "links" : [ "android.telephony.CellInfo#CONNECTION_UNKNOWN" ]
  }, {
    "name" : "CHANNEL_NUMBER_UNKNOWN",
    "type" : "int",
    "comment" : " Channel number is unknown. ",
    "links" : [ ]
  }, {
    "name" : "PHYSICAL_CELL_ID_UNKNOWN",
    "type" : "int",
    "comment" : " Physical Cell Id is unknown. ",
    "links" : [ ]
  }, {
    "name" : "PHYSICAL_CELL_ID_MAXIMUM_VALUE",
    "type" : "int",
    "comment" : " Physical Cell Id's maximum value is 1007. ",
    "links" : [ ]
  }, {
    "name" : "CELL_BANDWIDTH_UNKNOWN",
    "type" : "int",
    "comment" : " Cell bandwidth is unknown. ",
    "links" : [ ]
  }, {
    "name" : "FREQUENCY_UNKNOWN",
    "type" : "int",
    "comment" : " The frequency is unknown. ",
    "links" : [ ]
  }, {
    "name" : "BAND_UNKNOWN",
    "type" : "int",
    "comment" : " The band is unknown. ",
    "links" : [ ]
  }, {
    "name" : "mCellConnectionStatus",
    "type" : "int",
    "comment" : "\n     * Connection status of the cell.\n     *\n     * <p>One of {@link #CONNECTION_PRIMARY_SERVING}, {@link #CONNECTION_SECONDARY_SERVING}.\n     ",
    "links" : [ "#CONNECTION_SECONDARY_SERVING", "#CONNECTION_PRIMARY_SERVING" ]
  }, {
    "name" : "mCellBandwidthDownlinkKhz",
    "type" : "int",
    "comment" : "\n     * Downlink cell bandwidth, in kHz.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCellBandwidthUplinkKhz",
    "type" : "int",
    "comment" : "\n     * Uplink cell bandwidth, in kHz.\n     ",
    "links" : [ ]
  }, {
    "name" : "mNetworkType",
    "type" : "int",
    "comment" : "\n     * The radio technology for this physical channel.\n     ",
    "links" : [ ]
  }, {
    "name" : "mFrequencyRange",
    "type" : "int",
    "comment" : "\n     * The rough frequency range for this physical channel.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDownlinkFrequency",
    "type" : "int",
    "comment" : "\n     * The frequency of Downlink.\n     ",
    "links" : [ ]
  }, {
    "name" : "mUplinkFrequency",
    "type" : "int",
    "comment" : "\n     * The frequency of Uplink.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDownlinkChannelNumber",
    "type" : "int",
    "comment" : "\n     * Downlink Absolute Radio Frequency Channel Number\n     ",
    "links" : [ ]
  }, {
    "name" : "mUplinkChannelNumber",
    "type" : "int",
    "comment" : "\n     * Uplink Absolute Radio Frequency Channel Number\n     ",
    "links" : [ ]
  }, {
    "name" : "mContextIds",
    "type" : "int[]",
    "comment" : "\n     * A list of data calls mapped to this physical channel. An empty list means the physical\n     * channel has no data call mapped to it.\n     ",
    "links" : [ ]
  }, {
    "name" : "mPhysicalCellId",
    "type" : "int",
    "comment" : "\n     * The physical cell identifier for this cell - PCI, PSC, {@link #PHYSICAL_CELL_ID_UNKNOWN}\n     * if unknown.\n     ",
    "links" : [ "#PHYSICAL_CELL_ID_UNKNOWN" ]
  }, {
    "name" : "mBand",
    "type" : "int",
    "comment" : "\n     * This is the band which is being used.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<PhysicalChannelConfig>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCellBandwidthDownlinkKhz()",
    "returnType" : "int",
    "comment" : "\n     * @return Downlink cell bandwidth in kHz, {@link #CELL_BANDWIDTH_UNKNOWN} if unknown.\n     ",
    "links" : [ "#CELL_BANDWIDTH_UNKNOWN" ]
  }, {
    "name" : "public int getCellBandwidthUplinkKhz()",
    "returnType" : "int",
    "comment" : "\n     * @return Uplink cell bandwidth in kHz, {@link #CELL_BANDWIDTH_UNKNOWN} if unknown.\n     ",
    "links" : [ "#CELL_BANDWIDTH_UNKNOWN" ]
  }, {
    "name" : "public int[] getContextIds()",
    "returnType" : "int[]",
    "comment" : "\n     * Get the list of data call ids mapped to this physical channel. This list is sorted into\n     * ascending numerical order. Each id in this list must match the id in\n     * {@link com.android.internal.telephony.dataconnection.DataConnection}. An empty list means the\n     * physical channel has no data call mapped to it.\n     *\n     * @return an integer list indicates the data call ids,\n     * @hide\n     ",
    "links" : [ "com.android.internal.telephony.dataconnection.DataConnection" ]
  }, {
    "name" : "public int getFrequencyRange()",
    "returnType" : "int",
    "comment" : "\n     * @return the rough frequency range for this physical channel,\n     * {@link ServiceState#FREQUENCY_RANGE_UNKNOWN} if unknown.\n     * @see {@link ServiceState#FREQUENCY_RANGE_LOW}\n     * @see {@link ServiceState#FREQUENCY_RANGE_MID}\n     * @see {@link ServiceState#FREQUENCY_RANGE_HIGH}\n     * @see {@link ServiceState#FREQUENCY_RANGE_MMWAVE}\n     * @hide\n     ",
    "links" : [ "android.telephony.ServiceState#FREQUENCY_RANGE_UNKNOWN", "android.telephony.ServiceState#FREQUENCY_RANGE_HIGH", "android.telephony.ServiceState#FREQUENCY_RANGE_LOW", "android.telephony.ServiceState#FREQUENCY_RANGE_MMWAVE", "android.telephony.ServiceState#FREQUENCY_RANGE_MID" ]
  }, {
    "name" : "public int getDownlinkChannelNumber()",
    "returnType" : "int",
    "comment" : "\n     * @return Downlink Absolute Radio Frequency Channel Number,\n     * {@link #CHANNEL_NUMBER_UNKNOWN} if unknown.\n     ",
    "links" : [ "#CHANNEL_NUMBER_UNKNOWN" ]
  }, {
    "name" : "public int getUplinkChannelNumber()",
    "returnType" : "int",
    "comment" : "\n     * @return Uplink Absolute Radio Frequency Channel Number,\n     * {@link #CHANNEL_NUMBER_UNKNOWN} if unknown.\n     ",
    "links" : [ "#CHANNEL_NUMBER_UNKNOWN" ]
  }, {
    "name" : "public int getBand()",
    "returnType" : "int",
    "comment" : "\n     * The valid bands are {@link AccessNetworkConstants.GeranBand},\n     * {@link AccessNetworkConstants.UtranBand}, {@link AccessNetworkConstants.EutranBand} and\n     * {@link AccessNetworkConstants.NgranBands}.\n     *\n     * @return the frequency band, {@link #BAND_UNKNOWN} if unknown. ",
    "links" : [ "#BAND_UNKNOWN", "AccessNetworkConstants.EutranBand", "AccessNetworkConstants.UtranBand", "AccessNetworkConstants.GeranBand", "AccessNetworkConstants.NgranBands" ]
  }, {
    "name" : "public int getDownlinkFrequencyKhz()",
    "returnType" : "int",
    "comment" : "\n     * @return The downlink frequency in kHz, {@link #FREQUENCY_UNKNOWN} if unknown.\n     ",
    "links" : [ "#FREQUENCY_UNKNOWN" ]
  }, {
    "name" : "public int getUplinkFrequencyKhz()",
    "returnType" : "int",
    "comment" : "\n     * @return The uplink frequency in kHz, {@link #FREQUENCY_UNKNOWN} if unknown.\n     ",
    "links" : [ "#FREQUENCY_UNKNOWN" ]
  }, {
    "name" : "public int getPhysicalCellId()",
    "returnType" : "int",
    "comment" : "\n     * The physical cell ID which differentiates cells using the same radio channel.\n     *\n     * In GERAN, this value is the BSIC. The range is [0-63].\n     * Reference: 3GPP TS 3.03 section 4.2.2.\n     *\n     * In UTRAN, this value is primary scrambling code. The range is [0, 511].\n     * Reference: 3GPP TS 25.213 section 5.2.2.\n     *\n     * In EUTRAN, this value is physical layer cell identity. The range is [0, 503].\n     * Reference: 3GPP TS 36.211 section 6.11.\n     *\n     * In 5G RAN, this value is physical layer cell identity. The range is [0, 1007].\n     * Reference: 3GPP TS 38.211 section 7.4.2.1.\n     *\n     * @return the physical cell identifier for this cell, {@link #PHYSICAL_CELL_ID_UNKNOWN}\n     * if {@link android.telephony.CellInfo#UNAVAILABLE}.\n     ",
    "links" : [ "#PHYSICAL_CELL_ID_UNKNOWN", "android.telephony.CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getNetworkType()",
    "returnType" : "int",
    "comment" : "\n     * @return The network type for this physical channel,\n     * {@link TelephonyManager#NETWORK_TYPE_UNKNOWN} if unknown.\n     ",
    "links" : [ "android.telephony.TelephonyManager#NETWORK_TYPE_UNKNOWN" ]
  }, {
    "name" : "public int getConnectionStatus()",
    "returnType" : "int",
    "comment" : "\n     * Gets the connection status of the cell.\n     *\n     * @see #CONNECTION_PRIMARY_SERVING\n     * @see #CONNECTION_SECONDARY_SERVING\n     * @see #CONNECTION_UNKNOWN\n     *\n     * @return Connection status of the cell, {@link #CONNECTION_UNKNOWN} if unknown.\n     ",
    "links" : [ "#CONNECTION_UNKNOWN" ]
  }, {
    "name" : "public PhysicalChannelConfig createLocationInfoSanitizedCopy()",
    "returnType" : "PhysicalChannelConfig",
    "comment" : "\n     * Return a copy of this PhysicalChannelConfig object but redact all the location info.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private String getConnectionStatusString()",
    "returnType" : "String",
    "comment" : "\n     * @return String representation of the connection status\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private void setDownlinkFrequency()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setUplinkFrequency()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setFrequencyRange()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int getCellBandwidthDownlinkKhz()", "public int getCellBandwidthUplinkKhz()", "public int[] getContextIds()", "public int getFrequencyRange()", "public int getDownlinkChannelNumber()", "public int getUplinkChannelNumber()", "public int getBand()", "public int getDownlinkFrequencyKhz()", "public int getUplinkFrequencyKhz()", "public int getPhysicalCellId()", "public int getNetworkType()", "public int getConnectionStatus()", "public PhysicalChannelConfig createLocationInfoSanitizedCopy()", "private String getConnectionStatusString()", "private void setDownlinkFrequency()", "private void setUplinkFrequency()", "private void setFrequencyRange()", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "CONNECTION_PRIMARY_SERVING", "CONNECTION_SECONDARY_SERVING", "CONNECTION_UNKNOWN", "CHANNEL_NUMBER_UNKNOWN", "PHYSICAL_CELL_ID_UNKNOWN", "PHYSICAL_CELL_ID_MAXIMUM_VALUE", "CELL_BANDWIDTH_UNKNOWN", "FREQUENCY_UNKNOWN", "BAND_UNKNOWN", "mCellConnectionStatus", "mCellBandwidthDownlinkKhz", "mCellBandwidthUplinkKhz", "mNetworkType", "mFrequencyRange", "mDownlinkFrequency", "mUplinkFrequency", "mDownlinkChannelNumber", "mUplinkChannelNumber", "mContextIds", "mPhysicalCellId", "mBand", "CREATOR" ]
}