{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/location/NanoAppState.java",
  "packageName" : "android.hardware.location",
  "className" : "NanoAppState",
  "comment" : "\n * A class describing the nanoapp state information resulting from a query to a Context Hub\n * through {@link ContextHubManager.queryNanoApps(ContextHubInfo)}. It contains metadata about\n * the nanoapp running on a Context Hub.\n *\n * See \"struct chreNanoappInfo\" in the CHRE API (system/chre/chre_api) for additional details.\n *\n * @hide\n ",
  "links" : [ "ContextHubManager.queryNanoApps(ContextHubInfo)" ],
  "variables" : [ {
    "name" : "mNanoAppId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNanoAppVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNanoAppPermissions",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNanoAppRpcServiceList",
    "type" : "List<NanoAppRpcService>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<NanoAppState>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getNanoAppId()",
    "returnType" : "long",
    "comment" : "\n     * @return the unique ID of this nanoapp, which must never change once released on Android.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getNanoAppVersion()",
    "returnType" : "long",
    "comment" : "\n     * The software version of this service, which follows the sematic\n     * versioning scheme (see semver.org). It follows the format\n     * major.minor.patch, where major and minor versions take up one byte\n     * each, and the patch version takes up the final 2 (lower) bytes.\n     * I.e. the version is encoded as 0xMMmmpppp, where MM, mm, pppp are\n     * the major, minor, patch versions, respectively.\n     *\n     * @return the app version\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if the app is enabled at the Context Hub, {@code false} otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<String> getNanoAppPermissions()",
    "returnType" : "List<String>",
    "comment" : "\n     * @return A read-only list of Android permissions that are all required to communicate with\n     *   this nanoapp.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<NanoAppRpcService> getRpcServices()",
    "returnType" : "List<NanoAppRpcService>",
    "comment" : "\n     * @return A read-only list of RPC services supported by this nanoapp.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public long getNanoAppId()", "public long getNanoAppVersion()", "public boolean isEnabled()", "public List<String> getNanoAppPermissions()", "public List<NanoAppRpcService> getRpcServices()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)" ],
  "variableNames" : [ "mNanoAppId", "mNanoAppVersion", "mIsEnabled", "mNanoAppPermissions", "mNanoAppRpcServiceList", "CREATOR" ]
}