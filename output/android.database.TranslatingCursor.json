{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/database/TranslatingCursor.java",
  "packageName" : "android.database",
  "className" : "TranslatingCursor",
  "comment" : "\n * Cursor that supports deprecation of {@code _data} like columns which represent raw filepaths,\n * typically by replacing values with fake paths that the OS then offers to redirect to\n * {@link ContentResolver#openFileDescriptor(Uri, String)}, which developers\n * should be using directly.\n *\n * @hide\n ",
  "links" : [ "android.content.ContentResolver#openFileDescriptor(Uri" ],
  "variables" : [ {
    "name" : "mConfig",
    "type" : "Config",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTranslator",
    "type" : "Translator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDropLast",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAuxiliaryColumnIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTranslateColumnIndices",
    "type" : "ArraySet<Integer>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getColumnCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String[] getColumnNames()",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static Cursor query(@NonNull Config config, @NonNull Translator translator, SQLiteQueryBuilder qb, SQLiteDatabase db, String[] projectionIn, String selection, String[] selectionArgs, String groupBy, String having, String sortOrder, String limit, CancellationSignal signal)",
    "returnType" : "Cursor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void fillWindow(int position, CursorWindow window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CursorWindow getWindow()",
    "returnType" : "CursorWindow",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Cursor getWrappedCursor()",
    "returnType" : "Cursor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public double getDouble(int columnIndex)",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getFloat(int columnIndex)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInt(int columnIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getLong(int columnIndex)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public short getShort(int columnIndex)",
    "returnType" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getString(int columnIndex)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void copyStringToBuffer(int columnIndex, CharArrayBuffer buffer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] getBlob(int columnIndex)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getType(int columnIndex)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isNull(int columnIndex)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getColumnCount()", "public String[] getColumnNames()", "public static Cursor query(@NonNull Config config, @NonNull Translator translator, SQLiteQueryBuilder qb, SQLiteDatabase db, String[] projectionIn, String selection, String[] selectionArgs, String groupBy, String having, String sortOrder, String limit, CancellationSignal signal)", "public void fillWindow(int position, CursorWindow window)", "public CursorWindow getWindow()", "public Cursor getWrappedCursor()", "public double getDouble(int columnIndex)", "public float getFloat(int columnIndex)", "public int getInt(int columnIndex)", "public long getLong(int columnIndex)", "public short getShort(int columnIndex)", "public String getString(int columnIndex)", "public void copyStringToBuffer(int columnIndex, CharArrayBuffer buffer)", "public byte[] getBlob(int columnIndex)", "public int getType(int columnIndex)", "public boolean isNull(int columnIndex)" ],
  "variableNames" : [ "mConfig", "mTranslator", "mDropLast", "mAuxiliaryColumnIndex", "mTranslateColumnIndices" ]
}