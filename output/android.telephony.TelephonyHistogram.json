{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/TelephonyHistogram.java",
  "packageName" : "android.telephony",
  "className" : "TelephonyHistogram",
  "comment" : "\n * Parcelable class to store Telephony histogram.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mCategory",
    "type" : "int",
    "comment" : " RIL calls. Similarly we can have any other Telephony histogram.",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "int",
    "comment" : " Unique Id identifying a sample within particular category of histogram",
    "links" : [ ]
  }, {
    "name" : "mMinTimeMs",
    "type" : "int",
    "comment" : " Min time taken in ms",
    "links" : [ ]
  }, {
    "name" : "mMaxTimeMs",
    "type" : "int",
    "comment" : " Max time taken in ms",
    "links" : [ ]
  }, {
    "name" : "mAverageTimeMs",
    "type" : "int",
    "comment" : " Average time taken in ms",
    "links" : [ ]
  }, {
    "name" : "mSampleCount",
    "type" : "int",
    "comment" : " Total count of samples",
    "links" : [ ]
  }, {
    "name" : "mInitialTimings",
    "type" : "int[]",
    "comment" : " Array storing time taken for first #RANGE_CALCULATION_COUNT samples of histogram.",
    "links" : [ ]
  }, {
    "name" : "mBucketCount",
    "type" : "int",
    "comment" : " Total number of time ranges expected (must be greater than 1)",
    "links" : [ ]
  }, {
    "name" : "mBucketEndPoints",
    "type" : "int[]",
    "comment" : " after totalTimeCount is #RANGE_CALCULATION_COUNT.",
    "links" : [ ]
  }, {
    "name" : "mBucketCounters",
    "type" : "int[]",
    "comment" : " Array storing counts for each time range starting from smallest value range",
    "links" : [ ]
  }, {
    "name" : "TELEPHONY_CATEGORY_RIL",
    "type" : "int",
    "comment" : "\n     * Constant for Telephony category\n     ",
    "links" : [ ]
  }, {
    "name" : "RANGE_CALCULATION_COUNT",
    "type" : "int",
    "comment" : " Count of Histogram samples after which time buckets are created.",
    "links" : [ ]
  }, {
    "name" : "ABSENT",
    "type" : "int",
    "comment" : " Constant used to indicate #initialTimings is null while parceling",
    "links" : [ ]
  }, {
    "name" : "PRESENT",
    "type" : "int",
    "comment" : " Constant used to indicate #initialTimings is not null while parceling",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<TelephonyHistogram>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getCategory()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMinTime()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaxTime()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getAverageTime()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSampleCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int[] getInitialTimings()",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getBucketCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getBucketEndPoints()",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getBucketCounters()",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int[] getDeepCopyOfArray(int[] array)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addToBucketCounter(int[] bucketEndPoints, int[] bucketCounters, int time)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void calculateBucketEndPoints(int[] bucketEndPoints)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addTimeTaken(int time)",
    "returnType" : "void",
    "comment" : " using values stored in initialTimings[]. Thereafter bucketCounters[] will always be updated.",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getCategory()", "public int getId()", "public int getMinTime()", "public int getMaxTime()", "public int getAverageTime()", "public int getSampleCount()", "private int[] getInitialTimings()", "public int getBucketCount()", "public int[] getBucketEndPoints()", "public int[] getBucketCounters()", "private int[] getDeepCopyOfArray(int[] array)", "private void addToBucketCounter(int[] bucketEndPoints, int[] bucketCounters, int time)", "private void calculateBucketEndPoints(int[] bucketEndPoints)", "public void addTimeTaken(int time)", "public String toString()", "public void writeToParcel(Parcel out, int flags)", "public int describeContents()" ],
  "variableNames" : [ "mCategory", "mId", "mMinTimeMs", "mMaxTimeMs", "mAverageTimeMs", "mSampleCount", "mInitialTimings", "mBucketCount", "mBucketEndPoints", "mBucketCounters", "TELEPHONY_CATEGORY_RIL", "RANGE_CALCULATION_COUNT", "ABSENT", "PRESENT", "CREATOR" ]
}