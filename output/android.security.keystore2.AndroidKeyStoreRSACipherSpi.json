{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/keystore2/AndroidKeyStoreRSACipherSpi.java",
  "packageName" : "android.security.keystore2",
  "className" : "AndroidKeyStoreRSACipherSpi",
  "comment" : "\n * Base class for {@link CipherSpi} providing Android KeyStore backed RSA encryption/decryption.\n *\n * @hide\n ",
  "links" : [ "javax.crypto.CipherSpi" ],
  "variables" : [ {
    "name" : "mKeymasterPadding",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeymasterPaddingOverride",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mModulusSizeBytes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected String getTransform()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected final void initKey(int opmode, Key key) throws InvalidKeyException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean adjustConfigForEncryptingWithPrivateKey()",
    "returnType" : "boolean",
    "comment" : "\n     * Adjusts the configuration of this cipher for encrypting using the private key.\n     *\n     * <p>The default implementation does nothing and refuses to adjust the configuration.\n     *\n     * @return {@code true} if the configuration has been adjusted, {@code false} if encrypting\n     *         using private key is not permitted for this cipher.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected final void resetAll()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected final void resetWhilePreservingInitState()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void addAlgorithmSpecificParametersToBegin(@NonNull List<KeyParameter> parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void loadAlgorithmSpecificParametersFromBeginResult(KeyParameter[] parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected final int engineGetBlockSize()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected final byte[] engineGetIV()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected final int engineGetOutputSize(int inputLen)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected final int getModulusSizeBytes()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected final void setKeymasterPaddingOverride(int keymasterPadding)",
    "returnType" : "void",
    "comment" : "\n     * Overrides the default padding of the crypto operation.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected final int getKeymasterPaddingOverride()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected String getTransform()", "protected final void initKey(int opmode, Key key) throws InvalidKeyException", "protected boolean adjustConfigForEncryptingWithPrivateKey()", "protected final void resetAll()", "protected final void resetWhilePreservingInitState()", "protected void addAlgorithmSpecificParametersToBegin(@NonNull List<KeyParameter> parameters)", "protected void loadAlgorithmSpecificParametersFromBeginResult(KeyParameter[] parameters)", "protected final int engineGetBlockSize()", "protected final byte[] engineGetIV()", "protected final int engineGetOutputSize(int inputLen)", "protected final int getModulusSizeBytes()", "protected final void setKeymasterPaddingOverride(int keymasterPadding)", "protected final int getKeymasterPaddingOverride()" ],
  "variableNames" : [ "mKeymasterPadding", "mKeymasterPaddingOverride", "mModulusSizeBytes" ]
}