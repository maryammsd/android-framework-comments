{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/templates/RedundentExprEliminator.java",
  "packageName" : "org.apache.xalan.templates",
  "className" : "MultistepExprHolder",
  "comment" : "\n   * Since we want to sort multistep expressions by length, use \n   * a linked list with elements of type MultistepExprHolder.\n   ",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_exprOwner",
    "type" : "ExpressionOwner",
    "comment" : " Will change to null once we have processed this item.",
    "links" : [ ]
  }, {
    "name" : "m_stepCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_next",
    "type" : "MultistepExprHolder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Object clone() throws CloneNotSupportedException",
    "returnType" : "Object",
    "comment" : "\n\t * Clone this object.\n\t ",
    "links" : [ ]
  }, {
    "name" : " MultistepExprHolder addInSortedOrder(ExpressionOwner exprOwner, int stepCount)",
    "returnType" : "MultistepExprHolder",
    "comment" : "\n\t * Add a new MultistepExprHolder in sorted order in the list.\n\t * \n\t * @param exprOwner the owner of the expression we are holding.\n\t *                  It must hold a LocationPathIterator.\n\t * @param stepCount The number of steps in the location path.\n\t * @return The new head of the linked list.\n\t ",
    "links" : [ ]
  }, {
    "name" : " MultistepExprHolder unlink(MultistepExprHolder itemToRemove)",
    "returnType" : "MultistepExprHolder",
    "comment" : "\n\t * Remove the given element from the list.  'this' should \n\t * be the head of the list.  If the item to be removed is not \n\t * found, an assertion will be made.\n\t * \n\t * @param itemToRemove The item to remove from the list.\n\t * @return The head of the list, which may have changed if itemToRemove \n\t * is the same as this element.  Null if the item to remove is the \n\t * only item in the list.\n\t ",
    "links" : [ ]
  }, {
    "name" : " int getLength()",
    "returnType" : "int",
    "comment" : "\n\t * Get the number of linked list items.\n\t ",
    "links" : [ ]
  }, {
    "name" : "protected void diagnose()",
    "returnType" : "void",
    "comment" : "\n     * Print diagnostics out for the multistep list.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Object clone() throws CloneNotSupportedException", " MultistepExprHolder addInSortedOrder(ExpressionOwner exprOwner, int stepCount)", " MultistepExprHolder unlink(MultistepExprHolder itemToRemove)", " int getLength()", "protected void diagnose()" ],
  "variableNames" : [ "m_exprOwner", "m_stepCount", "m_next" ]
}