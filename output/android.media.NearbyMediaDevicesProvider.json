{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/NearbyMediaDevicesProvider.java",
  "packageName" : "android.media",
  "className" : "NearbyMediaDevicesProvider",
  "comment" : "\n * An interface that provides information about nearby devices that are able to play media.\n * <p>\n * External clients can implement this interface and pass it to the system via\n * {@link StatusBarManager#registerNearbyMediaDevicesProvider} to inform the system of nearby media\n * devices.\n * <p>\n * @hide\n ",
  "links" : [ "android.app.StatusBarManager#registerNearbyMediaDevicesProvider" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void registerNearbyDevicesCallback(@NonNull Consumer<List<NearbyDevice>> callback)",
    "returnType" : "void",
    "comment" : "\n     * Registers a callback that should be notified each time nearby media device(s) change.\n     * <p>\n     * When a callback is newly registered, it should be immediately notified of the current nearby\n     * media devices. Afterwards, the list of devices passed to the callback should always contain\n     * the full set of nearby media devices any time you get an update. If a device is no longer\n     * valid (went offline, e.g.) then it should be omitted from the list in the next update.\n     * <p>\n     * @param callback the callback that will consume updates to the nearby media devices.\n     ",
    "links" : [ ]
  }, {
    "name" : " void unregisterNearbyDevicesCallback(@NonNull Consumer<List<NearbyDevice>> callback)",
    "returnType" : "void",
    "comment" : "\n     * Unregisters a callback. @see #registerNearbyDevicesCallback.\n     * <p>\n     * @param callback the callback to unregister.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void registerNearbyDevicesCallback(@NonNull Consumer<List<NearbyDevice>> callback)", " void unregisterNearbyDevicesCallback(@NonNull Consumer<List<NearbyDevice>> callback)" ],
  "variableNames" : [ ]
}