{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/patterns/FunctionPattern.java",
  "packageName" : "org.apache.xpath.patterns",
  "className" : "FunctionPattern",
  "comment" : "\n * Match pattern step that contains a function.\n * @xsl.usage advanced\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_functionExpr",
    "type" : "Expression",
    "comment" : "\n   * Should be a {@link org.apache.xpath.functions.Function expression}.\n   *  @serial   \n   ",
    "links" : [ "org.apache.xpath.functions.Function" ]
  } ],
  "methods" : [ {
    "name" : "public final void calcScore()",
    "returnType" : "void",
    "comment" : "\n   * Static calc of match score.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void fixupVariables(java.util.Vector vars, int globalsSize)",
    "returnType" : "void",
    "comment" : "\n   * This function is used to fixup variables from QNames to stack frame \n   * indexes at stylesheet build time.\n   * @param vars List of QNames that correspond to variables.  This list \n   * should be searched backwards for the first qualified name that \n   * corresponds to the variable reference qname.  The position of the \n   * QName in the vector from the start of the vector will be its position \n   * in the stack frame (but variables above the globalsTop value will need \n   * to be offset to the current stack frame).\n   ",
    "links" : [ ]
  }, {
    "name" : "public XObject execute(XPathContext xctxt, int context) throws javax.xml.transform.TransformerException",
    "returnType" : "XObject",
    "comment" : "\n   * Test a node to see if it matches the given node test.\n   *\n   * @param xctxt XPath runtime context.\n   *\n   * @return {@link org.apache.xpath.patterns.NodeTest#SCORE_NODETEST},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_NONE},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_NSWILD},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_QNAME}, or\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_OTHER}.\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ "org.apache.xpath.patterns.NodeTest#SCORE_NONE", "org.apache.xpath.patterns.NodeTest#SCORE_QNAME", "org.apache.xpath.patterns.NodeTest#SCORE_OTHER", "org.apache.xpath.patterns.NodeTest#SCORE_NODETEST", "org.apache.xpath.patterns.NodeTest#SCORE_NSWILD" ]
  }, {
    "name" : "public XObject execute(XPathContext xctxt, int context, DTM dtm, int expType) throws javax.xml.transform.TransformerException",
    "returnType" : "XObject",
    "comment" : "\n   * Test a node to see if it matches the given node test.\n   *\n   * @param xctxt XPath runtime context.\n   *\n   * @return {@link org.apache.xpath.patterns.NodeTest#SCORE_NODETEST},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_NONE},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_NSWILD},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_QNAME}, or\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_OTHER}.\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ "org.apache.xpath.patterns.NodeTest#SCORE_NONE", "org.apache.xpath.patterns.NodeTest#SCORE_QNAME", "org.apache.xpath.patterns.NodeTest#SCORE_OTHER", "org.apache.xpath.patterns.NodeTest#SCORE_NODETEST", "org.apache.xpath.patterns.NodeTest#SCORE_NSWILD" ]
  }, {
    "name" : "public XObject execute(XPathContext xctxt) throws javax.xml.transform.TransformerException",
    "returnType" : "XObject",
    "comment" : "\n   * Test a node to see if it matches the given node test.\n   *\n   * @param xctxt XPath runtime context.\n   *\n   * @return {@link org.apache.xpath.patterns.NodeTest#SCORE_NODETEST},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_NONE},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_NSWILD},\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_QNAME}, or\n   *         {@link org.apache.xpath.patterns.NodeTest#SCORE_OTHER}.\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ "org.apache.xpath.patterns.NodeTest#SCORE_NONE", "org.apache.xpath.patterns.NodeTest#SCORE_QNAME", "org.apache.xpath.patterns.NodeTest#SCORE_OTHER", "org.apache.xpath.patterns.NodeTest#SCORE_NODETEST", "org.apache.xpath.patterns.NodeTest#SCORE_NSWILD" ]
  }, {
    "name" : "protected void callSubtreeVisitors(XPathVisitor visitor)",
    "returnType" : "void",
    "comment" : "\n   * Call the visitor for the function.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final void calcScore()", "public void fixupVariables(java.util.Vector vars, int globalsSize)", "public XObject execute(XPathContext xctxt, int context) throws javax.xml.transform.TransformerException", "public XObject execute(XPathContext xctxt, int context, DTM dtm, int expType) throws javax.xml.transform.TransformerException", "public XObject execute(XPathContext xctxt) throws javax.xml.transform.TransformerException", "protected void callSubtreeVisitors(XPathVisitor visitor)" ],
  "variableNames" : [ "serialVersionUID", "m_functionExpr" ]
}