{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/CallLog.java",
  "packageName" : "android.provider",
  "className" : "CallLog",
  "comment" : "\n * The CallLog provider contains information about placed and received calls.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VERBOSE_LOG",
    "type" : "boolean",
    "comment" : " DON'T SUBMIT WITH TRUE.",
    "links" : [ ]
  }, {
    "name" : "AUTHORITY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n     * The content:// style URL for this provider\n     ",
    "links" : [ ]
  }, {
    "name" : "CALL_COMPOSER_SEGMENT",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CALL_COMPOSER_PICTURE_URI",
    "type" : "Uri",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SHADOW_AUTHORITY",
    "type" : "String",
    "comment" : "\n     * The \"shadow\" provider stores calllog when the real calllog provider is encrypted.  The\n     * real provider will alter copy from it when it starts, and remove the entries in the shadow.\n     *\n     * <p>See the comment in {@link Calls#addCall} for the details.\n     *\n     * @hide\n     ",
    "links" : [ "#addCall" ]
  }, {
    "name" : "SHADOW_CALL_COMPOSER_PICTURE_URI",
    "type" : "Uri",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void storeCallComposerPicture(@NonNull Context context, @NonNull InputStream input, @CallbackExecutor @NonNull Executor executor, @NonNull OutcomeReceiver<Uri, CallComposerLoggingException> callback)",
    "returnType" : "void",
    "comment" : "\n     * Supplies a call composer picture to the call log for persistent storage.\n     *\n     * This method is used by Telephony to store pictures selected by the user or sent from the\n     * remote party as part of a voice call with call composer. The {@link Uri} supplied in the\n     * callback can be used to retrieve the image via {@link ContentResolver#openFile} or stored in\n     * the {@link Calls} table in the {@link Calls#COMPOSER_PHOTO_URI} column.\n     *\n     * The caller is responsible for closing the {@link InputStream} after the callback indicating\n     * success or failure.\n     *\n     * @param context An instance of {@link Context}. The picture will be stored to the user\n     *                corresponding to {@link Context#getUser()}.\n     * @param input An input stream from which the picture to store should be read. The input data\n     *              must be decodeable as either a JPEG, PNG, or GIF image.\n     * @param executor The {@link Executor} on which to perform the file transfer operation and\n     *                 call the supplied callback.\n     * @param callback Callback that's called after the picture is successfully stored or when an\n     *                 error occurs.\n     * @hide\n     ",
    "links" : [ "android.content.Context", "#COMPOSER_PHOTO_URI", "android.net.Uri", "Calls", "android.content.ContentResolver#openFile", "android.annotation.CallbackExecutor", "java.io.InputStream", "android.content.Context#getUser()" ]
  }, {
    "name" : "private static Uri storeCallComposerPictureAtUri(Context context, Uri insertionUri, boolean forAllUsers, byte[] picData) throws CallComposerLoggingException",
    "returnType" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void sendCallComposerError(OutcomeReceiver<?, CallComposerLoggingException> cb, int error)",
    "returnType" : "void",
    "comment" : " Only call on the correct executor.",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void storeCallComposerPicture(@NonNull Context context, @NonNull InputStream input, @CallbackExecutor @NonNull Executor executor, @NonNull OutcomeReceiver<Uri, CallComposerLoggingException> callback)", "private static Uri storeCallComposerPictureAtUri(Context context, Uri insertionUri, boolean forAllUsers, byte[] picData) throws CallComposerLoggingException", "private static void sendCallComposerError(OutcomeReceiver<?, CallComposerLoggingException> cb, int error)" ],
  "variableNames" : [ "LOG_TAG", "VERBOSE_LOG", "AUTHORITY", "CONTENT_URI", "CALL_COMPOSER_SEGMENT", "CALL_COMPOSER_PICTURE_URI", "SHADOW_AUTHORITY", "SHADOW_CALL_COMPOSER_PICTURE_URI" ]
}