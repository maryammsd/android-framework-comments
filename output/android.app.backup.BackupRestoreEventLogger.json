{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/backup/BackupRestoreEventLogger.java",
  "packageName" : "android.app.backup",
  "className" : "BackupRestoreEventLogger",
  "comment" : "\n * Class to log B&R stats for each data type that is backed up and restored by the calling app.\n *\n * The logger instance is designed to accept a limited number of unique\n * {link @BackupRestoreDataType} values, as determined by the underlying implementation. Apps are\n * expected to have a small pre-defined set of data type values they use. Attempts to log too many\n * unique values will be rejected.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DATA_TYPES_ALLOWED",
    "type" : "int",
    "comment" : "\n     * Max number of unique data types for which an instance of this logger can store info. Attempts\n     * to use more distinct data type values will be rejected.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mOperationType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResults",
    "type" : "Map<String, DataTypeResult>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHashDigest",
    "type" : "MessageDigest",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void logItemsBackedUp(@NonNull @BackupRestoreDataType String dataType, int count)",
    "returnType" : "void",
    "comment" : "\n     * Report progress during a backup operation. Call this method for each distinct data type that\n     * your {@code BackupAgent} implementation handles for any items of that type that have been\n     * successfully backed up. Repeated calls to this method with the same {@code dataType} will\n     * increase the total count of items associated with this data type by {@code count}.\n     *\n     * This method should be called from a {@link BackupAgent} implementation during an ongoing\n     * backup operation.\n     *\n     * @param dataType the type of data being backed.\n     * @param count number of items of the given type that have been successfully backed up.\n     ",
    "links" : [ "android.app.backup.BackupAgent" ]
  }, {
    "name" : "public void logItemsBackupFailed(@NonNull @BackupRestoreDataType String dataType, int count, @Nullable @BackupRestoreError String error)",
    "returnType" : "void",
    "comment" : "\n     * Report errors during a backup operation. Call this method whenever items of a certain data\n     * type failed to back up. Repeated calls to this method with the same {@code dataType} /\n     * {@code error} will increase the total count of items associated with this data type / error\n     * by {@code count}.\n     *\n     * This method should be called from a {@link BackupAgent} implementation during an ongoing\n     * backup operation.\n     *\n     * @param dataType the type of data being backed.\n     * @param count number of items of the given type that have failed to back up.\n     * @param error optional, the error that has caused the failure.\n     ",
    "links" : [ "android.app.backup.BackupAgent" ]
  }, {
    "name" : "public void logBackupMetadata(@NonNull @BackupRestoreDataType String dataType, @NonNull String metaData)",
    "returnType" : "void",
    "comment" : "\n     * Report metadata associated with a data type that is currently being backed up, e.g. name of\n     * the selected wallpaper file / package. Repeated calls to this method with the same {@code\n     * dataType} will overwrite the previously supplied {@code metaData} value.\n     *\n     * The logger does not store or transmit the provided metadata value. Instead, it’s replaced\n     * with the SHA-256 hash of the provided string.\n     *\n     * This method should be called from a {@link BackupAgent} implementation during an ongoing\n     * backup operation.\n     *\n     * @param dataType the type of data being backed up.\n     * @param metaData the metadata associated with the data type.\n     ",
    "links" : [ "android.app.backup.BackupAgent" ]
  }, {
    "name" : "public void logItemsRestored(@NonNull @BackupRestoreDataType String dataType, int count)",
    "returnType" : "void",
    "comment" : "\n     * Report progress during a restore operation. Call this method for each distinct data type that\n     * your {@code BackupAgent} implementation handles if any items of that type have been\n     * successfully restored. Repeated calls to this method with the same {@code dataType} will\n     * increase the total count of items associated with this data type by {@code count}.\n     *\n     * This method should either be called from a {@link BackupAgent} implementation during an\n     * ongoing restore operation or during any delayed restore actions the package had scheduled\n     * earlier (e.g. complete the restore once a certain dependency becomes available on the\n     * device).\n     *\n     * @param dataType the type of data being restored.\n     * @param count number of items of the given type that have been successfully restored.\n     ",
    "links" : [ "android.app.backup.BackupAgent" ]
  }, {
    "name" : "public void logItemsRestoreFailed(@NonNull @BackupRestoreDataType String dataType, int count, @Nullable @BackupRestoreError String error)",
    "returnType" : "void",
    "comment" : "\n     * Report errors during a restore operation. Call this method whenever items of a certain data\n     * type failed to restore. Repeated calls to this method with the same {@code dataType} /\n     * {@code error} will increase the total count of items associated with this data type / error\n     * by {@code count}.\n     *\n     * This method should either be called from a {@link BackupAgent} implementation during an\n     * ongoing restore operation or during any delayed restore actions the package had scheduled\n     * earlier (e.g. complete the restore once a certain dependency becomes available on the\n     * device).\n     *\n     * @param dataType the type of data being restored.\n     * @param count number of items of the given type that have failed to restore.\n     * @param error optional, the error that has caused the failure.\n     ",
    "links" : [ "android.app.backup.BackupAgent" ]
  }, {
    "name" : "public void logRestoreMetadata(@NonNull @BackupRestoreDataType String dataType, @NonNull String metadata)",
    "returnType" : "void",
    "comment" : "\n     * Report metadata associated with a data type that is currently being restored, e.g. name of\n     * the selected wallpaper file / package. Repeated calls to this method with the same\n     * {@code dataType} will overwrite the previously supplied {@code metaData} value.\n     *\n     * The logger does not store or transmit the provided metadata value. Instead, it’s replaced\n     * with the SHA-256 hash of the provided string.\n     *\n     * This method should either be called from a {@link BackupAgent} implementation during an\n     * ongoing restore operation or during any delayed restore actions the package had scheduled\n     * earlier (e.g. complete the restore once a certain dependency becomes available on the\n     * device).\n     *\n     * @param dataType the type of data being restored.\n     * @param metadata the metadata associated with the data type.\n     ",
    "links" : [ "android.app.backup.BackupAgent" ]
  }, {
    "name" : "public List<DataTypeResult> getLoggingResults()",
    "returnType" : "List<DataTypeResult>",
    "comment" : "\n     * Get the contents of this logger. This method should only be used by B&R code in Android\n     * Framework.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getOperationType()",
    "returnType" : "int",
    "comment" : "\n     * Get the operation type for which this logger was created. This method should only be used\n     * by B&R code in Android Framework.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void clearData()",
    "returnType" : "void",
    "comment" : "\n     * Clears data logged. This method should only be used by B&R code in Android Framework.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private void logSuccess(@OperationType int operationType, @BackupRestoreDataType String dataType, int count)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void logFailure(@OperationType int operationType, @NonNull @BackupRestoreDataType String dataType, int count, @Nullable @BackupRestoreError String error)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void logMetaData(@OperationType int operationType, @NonNull @BackupRestoreDataType String dataType, @NonNull String metaData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private DataTypeResult getDataTypeResult(@OperationType int operationType, @BackupRestoreDataType String dataType)",
    "returnType" : "DataTypeResult",
    "comment" : "\n     * Get the result container for the given data type.\n     *\n     * @return {@code DataTypeResult} object corresponding to the given {@code dataType} or\n     *         {@code null} if the logger can't accept logs for the given data type.\n     ",
    "links" : [ ]
  }, {
    "name" : "private byte[] getMetaDataHash(String metaData)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getDataTypesAllowed()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void logItemsBackedUp(@NonNull @BackupRestoreDataType String dataType, int count)", "public void logItemsBackupFailed(@NonNull @BackupRestoreDataType String dataType, int count, @Nullable @BackupRestoreError String error)", "public void logBackupMetadata(@NonNull @BackupRestoreDataType String dataType, @NonNull String metaData)", "public void logItemsRestored(@NonNull @BackupRestoreDataType String dataType, int count)", "public void logItemsRestoreFailed(@NonNull @BackupRestoreDataType String dataType, int count, @Nullable @BackupRestoreError String error)", "public void logRestoreMetadata(@NonNull @BackupRestoreDataType String dataType, @NonNull String metadata)", "public List<DataTypeResult> getLoggingResults()", "public int getOperationType()", "public void clearData()", "private void logSuccess(@OperationType int operationType, @BackupRestoreDataType String dataType, int count)", "private void logFailure(@OperationType int operationType, @NonNull @BackupRestoreDataType String dataType, int count, @Nullable @BackupRestoreError String error)", "private void logMetaData(@OperationType int operationType, @NonNull @BackupRestoreDataType String dataType, @NonNull String metaData)", "private DataTypeResult getDataTypeResult(@OperationType int operationType, @BackupRestoreDataType String dataType)", "private byte[] getMetaDataHash(String metaData)", "private int getDataTypesAllowed()" ],
  "variableNames" : [ "TAG", "DATA_TYPES_ALLOWED", "mOperationType", "mResults", "mHashDigest" ]
}