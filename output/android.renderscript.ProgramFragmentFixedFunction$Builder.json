{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/renderscript/ProgramFragmentFixedFunction.java",
  "packageName" : "android.renderscript",
  "className" : "Builder",
  "comment" : "\n     * @deprecated in API 16\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MAX_TEXTURE",
    "type" : "int",
    "comment" : "\n         * @deprecated in API 16\n         ",
    "links" : [ ]
  }, {
    "name" : "mNumTextures",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPointSpriteEnable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVaryingColorEnable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRS",
    "type" : "RenderScript",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSlots",
    "type" : "Slot[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void buildShaderString()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Builder setTexture(EnvMode env, Format fmt, int slot) throws IllegalArgumentException",
    "returnType" : "Builder",
    "comment" : "\n         * @deprecated in API 16\n         * Adds a texture to be fetched as part of the fixed function\n         * fragment program\n         *\n         * @param env specifies how the texture is combined with the\n         *            current color\n         * @param fmt specifies the format of the texture and how its\n         *            components will be used to combine with the\n         *            current color\n         * @param slot index of the texture to apply the operations on\n         *\n         * @return this\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPointSpriteTexCoordinateReplacement(boolean enable)",
    "returnType" : "Builder",
    "comment" : "\n         * @deprecated in API 16\n         * Specifies whether the texture coordinate passed from the\n         * vertex program is replaced with an openGL internal point\n         * sprite texture coordinate\n         *\n         *",
    "links" : [ ]
  }, {
    "name" : "public Builder setVaryingColor(boolean enable)",
    "returnType" : "Builder",
    "comment" : "\n         * @deprecated in API 16\n         * Specifies whether the varying color passed from the vertex\n         * program or the constant color set on the fragment program is\n         * used in the final color calculation in the fixed function\n         * fragment shader\n         *\n         *",
    "links" : [ ]
  }, {
    "name" : "public ProgramFragmentFixedFunction create()",
    "returnType" : "ProgramFragmentFixedFunction",
    "comment" : "\n         * @deprecated in API 16\n        * Creates the fixed function fragment program from the current\n        * state of the builder.\n        *\n        ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void buildShaderString()", "public Builder setTexture(EnvMode env, Format fmt, int slot) throws IllegalArgumentException", "public Builder setPointSpriteTexCoordinateReplacement(boolean enable)", "public Builder setVaryingColor(boolean enable)", "public ProgramFragmentFixedFunction create()" ],
  "variableNames" : [ "MAX_TEXTURE", "mNumTextures", "mPointSpriteEnable", "mVaryingColorEnable", "mShader", "mRS", "mSlots" ]
}