{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/webkit/CacheManager.java",
  "packageName" : "android.webkit",
  "className" : "CacheResult",
  "comment" : "\n     * Represents a resource stored in the HTTP cache. Instances of this class\n     * can be obtained by calling\n     * {@link CacheManager#getCacheFile CacheManager.getCacheFile(String, Map<String, String>))}.\n     *\n     * @deprecated Access to the HTTP cache will be removed in a future release.\n     ",
  "variables" : [ {
    "name" : "httpStatusCode",
    "type" : "int",
    "comment" : " these fields are saved to the database",
    "links" : [ ]
  }, {
    "name" : "contentLength",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "expires",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "expiresString",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "localPath",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "lastModified",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "etag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mimeType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "location",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "encoding",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "contentdisposition",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "crossDomain",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "inStream",
    "type" : "InputStream",
    "comment" : " these fields are NOT saved to the database",
    "links" : [ ]
  }, {
    "name" : "outStream",
    "type" : "OutputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "outFile",
    "type" : "File",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getHttpStatusCode()",
    "returnType" : "int",
    "comment" : "\n         * Gets the status code of this cache entry.\n         *\n         * @return the status code of this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getContentLength()",
    "returnType" : "long",
    "comment" : "\n         * Gets the content length of this cache entry.\n         *\n         * @return the content length of this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getLocalPath()",
    "returnType" : "String",
    "comment" : "\n         * Gets the path of the file used to store the content of this cache\n         * entry, relative to the base directory of the cache. See\n         * {@link CacheManager#getCacheFileBaseDir CacheManager.getCacheFileBaseDir()}.\n         *\n         * @return the path of the file used to store this cache entry\n         ",
    "links" : [ "android.webkit.CacheManager#getCacheFileBaseDir" ]
  }, {
    "name" : "public long getExpires()",
    "returnType" : "long",
    "comment" : "\n         * Gets the expiry date of this cache entry, expressed in milliseconds\n         * since midnight, January 1, 1970 UTC.\n         *\n         * @return the expiry date of this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getExpiresString()",
    "returnType" : "String",
    "comment" : "\n         * Gets the expiry date of this cache entry, expressed as a string.\n         *\n         * @return the expiry date of this cache entry\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getLastModified()",
    "returnType" : "String",
    "comment" : "\n         * Gets the date at which this cache entry was last modified, expressed\n         * as a string.\n         *\n         * @return the date at which this cache entry was last modified\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getETag()",
    "returnType" : "String",
    "comment" : "\n         * Gets the entity tag of this cache entry.\n         *\n         * @return the entity tag of this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getMimeType()",
    "returnType" : "String",
    "comment" : "\n         * Gets the MIME type of this cache entry.\n         *\n         * @return the MIME type of this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getLocation()",
    "returnType" : "String",
    "comment" : "\n         * Gets the value of the HTTP 'Location' header with which this cache\n         * entry was received.\n         *\n         * @return the HTTP 'Location' header for this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getEncoding()",
    "returnType" : "String",
    "comment" : "\n         * Gets the encoding of this cache entry.\n         *\n         * @return the encoding of this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getContentDisposition()",
    "returnType" : "String",
    "comment" : "\n         * Gets the value of the HTTP 'Content-Disposition' header with which\n         * this cache entry was received.\n         *\n         * @return the HTTP 'Content-Disposition' header for this cache entry\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "public InputStream getInputStream()",
    "returnType" : "InputStream",
    "comment" : "\n         * Gets the input stream to the content of this cache entry, to allow\n         * content to be read. See\n         * {@link CacheManager#getCacheFile CacheManager.getCacheFile(String, Map<String, String>)}.\n         *\n         * @return an input stream to the content of this cache entry\n         ",
    "links" : [ "android.webkit.CacheManager#getCacheFile" ]
  }, {
    "name" : "public OutputStream getOutputStream()",
    "returnType" : "OutputStream",
    "comment" : " Note that this is always null for objects returned by getCacheFile()!",
    "links" : [ ]
  }, {
    "name" : "public void setInputStream(InputStream stream)",
    "returnType" : "void",
    "comment" : "\n         * Sets an input stream to the content of this cache entry.\n         *\n         * @param stream an input stream to the content of this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setEncoding(String encoding)",
    "returnType" : "void",
    "comment" : "\n         * Sets the encoding of this cache entry.\n         *\n         * @param encoding the encoding of this cache entry\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setContentLength(long contentLength)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "httpStatusCode", "contentLength", "expires", "expiresString", "localPath", "lastModified", "etag", "mimeType", "location", "encoding", "contentdisposition", "crossDomain", "inStream", "outStream", "outFile" ],
  "methodNames" : [ "public int getHttpStatusCode()", "public long getContentLength()", "public String getLocalPath()", "public long getExpires()", "public String getExpiresString()", "public String getLastModified()", "public String getETag()", "public String getMimeType()", "public String getLocation()", "public String getEncoding()", "public String getContentDisposition()", "public InputStream getInputStream()", "public OutputStream getOutputStream()", "public void setInputStream(InputStream stream)", "public void setEncoding(String encoding)", "public void setContentLength(long contentLength)" ]
}