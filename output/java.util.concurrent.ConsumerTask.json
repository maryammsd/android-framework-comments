{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/SubmissionPublisher.java",
  "packageName" : "java.util.concurrent",
  "className" : "ConsumerTask",
  "comment" : "\n     * A task for consuming buffer items and signals, created and\n     * executed whenever they become available. A task consumes as\n     * many items/signals as possible before terminating, at which\n     * point another task is created when needed. The dual Runnable\n     * and ForkJoinTask declaration saves overhead when executed by\n     * ForkJoinPools, without impacting other kinds of Executors.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "consumer",
    "type" : "BufferedSubscription<T>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final Void getRawResult()",
    "returnType" : "Void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void setRawResult(Void v)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean exec()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void run()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final Void getRawResult()", "public final void setRawResult(Void v)", "public final boolean exec()", "public final void run()" ],
  "variableNames" : [ "consumer" ]
}