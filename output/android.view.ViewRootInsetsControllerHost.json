{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/ViewRootInsetsControllerHost.java",
  "packageName" : "android.view",
  "className" : "ViewRootInsetsControllerHost",
  "comment" : "\n * Implements {@link InsetsController.Host} for {@link ViewRootImpl}s.\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mViewRoot",
    "type" : "ViewRootImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mApplier",
    "type" : "SyncRtSurfaceTransactionApplier",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Handler getHandler()",
    "returnType" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyInsetsChanged()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addOnPreDrawRunnable(Runnable r)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dispatchWindowInsetsAnimationPrepare(@NonNull WindowInsetsAnimation animation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WindowInsetsAnimation.Bounds dispatchWindowInsetsAnimationStart(@NonNull WindowInsetsAnimation animation, @NonNull WindowInsetsAnimation.Bounds bounds)",
    "returnType" : "WindowInsetsAnimation.Bounds",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WindowInsets dispatchWindowInsetsAnimationProgress(@NonNull WindowInsets insets, @NonNull List<WindowInsetsAnimation> runningAnimations)",
    "returnType" : "WindowInsets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dispatchWindowInsetsAnimationEnd(@NonNull WindowInsetsAnimation animation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void applySurfaceParams(SyncRtSurfaceTransactionApplier.SurfaceParams... params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void postInsetsAnimationCallback(Runnable r)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateCompatSysUiVisibility(int type, boolean visible, boolean hasControl)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onInsetsModified(InsetsState insetsState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasAnimationCallbacks()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSystemBarsAppearance(int appearance, int mask)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSystemBarsAppearance()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSystemBarsBehavior(int behavior)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSystemBarsBehavior()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void releaseSurfaceControlFromRt(SurfaceControl surfaceControl)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InputMethodManager getInputMethodManager()",
    "returnType" : "InputMethodManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getRootViewTitle()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int dipToPx(int dips)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public IBinder getWindowToken()",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mViewRoot", "mApplier" ],
  "methodNames" : [ "public Handler getHandler()", "public void notifyInsetsChanged()", "public void addOnPreDrawRunnable(Runnable r)", "public void dispatchWindowInsetsAnimationPrepare(@NonNull WindowInsetsAnimation animation)", "public WindowInsetsAnimation.Bounds dispatchWindowInsetsAnimationStart(@NonNull WindowInsetsAnimation animation, @NonNull WindowInsetsAnimation.Bounds bounds)", "public WindowInsets dispatchWindowInsetsAnimationProgress(@NonNull WindowInsets insets, @NonNull List<WindowInsetsAnimation> runningAnimations)", "public void dispatchWindowInsetsAnimationEnd(@NonNull WindowInsetsAnimation animation)", "public void applySurfaceParams(SyncRtSurfaceTransactionApplier.SurfaceParams... params)", "public void postInsetsAnimationCallback(Runnable r)", "public void updateCompatSysUiVisibility(int type, boolean visible, boolean hasControl)", "public void onInsetsModified(InsetsState insetsState)", "public boolean hasAnimationCallbacks()", "public void setSystemBarsAppearance(int appearance, int mask)", "public int getSystemBarsAppearance()", "public void setSystemBarsBehavior(int behavior)", "public int getSystemBarsBehavior()", "public void releaseSurfaceControlFromRt(SurfaceControl surfaceControl)", "public InputMethodManager getInputMethodManager()", "public String getRootViewTitle()", "public int dipToPx(int dips)", "public IBinder getWindowToken()" ]
}