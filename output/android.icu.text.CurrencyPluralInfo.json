{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/CurrencyPluralInfo.java",
  "packageName" : "android.icu.text",
  "className" : "CurrencyPluralInfo",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "tripleCurrencySign",
    "type" : "char[]",
    "comment" : " triple currency sign char array",
    "links" : [ ]
  }, {
    "name" : "tripleCurrencyStr",
    "type" : "String",
    "comment" : " triple currency sign string",
    "links" : [ ]
  }, {
    "name" : "defaultCurrencyPluralPatternChar",
    "type" : "char[]",
    "comment" : " default currency plural pattern char array",
    "links" : [ ]
  }, {
    "name" : "defaultCurrencyPluralPattern",
    "type" : "String",
    "comment" : " default currency plural pattern string",
    "links" : [ ]
  }, {
    "name" : "pluralCountToCurrencyUnitPattern",
    "type" : "Map<String, String>",
    "comment" : " in which {0} is the amount number, and {1} is the currency plural name).",
    "links" : [ ]
  }, {
    "name" : "pluralRules",
    "type" : "PluralRules",
    "comment" : "\n     * The plural rule is used to format currency plural name,\n     * for example: \"3.00 US Dollars\".\n     * If there are 3 currency signs in the currency pattern,\n     * the 3 currency signs will be replaced by the currency plural name.\n     ",
    "links" : [ ]
  }, {
    "name" : "ulocale",
    "type" : "ULocale",
    "comment" : " locale",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static CurrencyPluralInfo getInstance()",
    "returnType" : "CurrencyPluralInfo",
    "comment" : "\n     * Gets a CurrencyPluralInfo instance for the default locale.\n     *\n     * @return A CurrencyPluralInfo instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyPluralInfo getInstance(Locale locale)",
    "returnType" : "CurrencyPluralInfo",
    "comment" : "\n     * Gets a CurrencyPluralInfo instance for the given locale.\n     *\n     * @param locale the locale.\n     * @return A CurrencyPluralInfo instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyPluralInfo getInstance(ULocale locale)",
    "returnType" : "CurrencyPluralInfo",
    "comment" : "\n     * Gets a CurrencyPluralInfo instance for the given locale.\n     *\n     * @param locale the locale.\n     * @return A CurrencyPluralInfo instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PluralRules getPluralRules()",
    "returnType" : "PluralRules",
    "comment" : "\n     * Gets plural rules of this locale, used for currency plural format\n     *\n     * @return plural rule\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getCurrencyPluralPattern(String pluralCount)",
    "returnType" : "String",
    "comment" : "\n     * Given a plural count, gets currency plural pattern of this locale,\n     * used for currency plural format\n     *\n     * @param  pluralCount currency plural count\n     * @return a currency plural pattern based on plural count\n     ",
    "links" : [ ]
  }, {
    "name" : "public ULocale getLocale()",
    "returnType" : "ULocale",
    "comment" : "\n     * Get locale\n     *\n     * @return locale\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setPluralRules(String ruleDescription)",
    "returnType" : "void",
    "comment" : "\n     * Set plural rules.  These are initially set in the constructor based on the locale,\n     * and usually do not need to be changed.\n     *\n     * @param ruleDescription new plural rule description\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setCurrencyPluralPattern(String pluralCount, String pattern)",
    "returnType" : "void",
    "comment" : "\n     * Set currency plural patterns.  These are initially set in the constructor based on the\n     * locale, and usually do not need to be changed.\n     *\n     * The decimal digits part of the pattern cannot be specified via this method.  All plural\n     * forms will use the same decimal pattern as set in the constructor of DecimalFormat.  For\n     * example, you can't set \"0.0\" for plural \"few\" but \"0.00\" for plural \"many\".\n     *\n     * @param pluralCount the plural count for which the currency pattern will\n     *                    be overridden.\n     * @param pattern     the new currency plural pattern\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setLocale(ULocale loc)",
    "returnType" : "void",
    "comment" : "\n     * Set locale.  This also sets both the plural rules and the currency plural patterns to be\n     * the defaults for the locale.\n     *\n     * @param loc the new locale to set\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "\n     * Standard override\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object a)",
    "returnType" : "boolean",
    "comment" : "\n     * Override equals\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * Override hashCode\n     *\n     * @hide original deprecated declaration\n     ",
    "links" : [ ]
  }, {
    "name" : " String select(double number)",
    "returnType" : "String",
    "comment" : "\n     * Given a number, returns the keyword of the first rule that applies\n     * to the number.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public String select(PluralRules.FixedDecimal numberInfo)",
    "returnType" : "String",
    "comment" : "\n     * Given a number, returns the keyword of the first rule that applies\n     * to the number.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public Iterator<String> pluralPatternIterator()",
    "returnType" : "Iterator<String>",
    "comment" : "\n     * Currency plural pattern iterator.\n     *\n     * @return a iterator on the currency plural pattern key set.\n     * @deprecated This API is ICU internal only.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "private void initialize(ULocale uloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setupCurrencyPluralPattern(ULocale uloc)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static CurrencyPluralInfo getInstance()", "public static CurrencyPluralInfo getInstance(Locale locale)", "public static CurrencyPluralInfo getInstance(ULocale locale)", "public PluralRules getPluralRules()", "public String getCurrencyPluralPattern(String pluralCount)", "public ULocale getLocale()", "public void setPluralRules(String ruleDescription)", "public void setCurrencyPluralPattern(String pluralCount, String pattern)", "public void setLocale(ULocale loc)", "public Object clone()", "public boolean equals(Object a)", "public int hashCode()", " String select(double number)", "public String select(PluralRules.FixedDecimal numberInfo)", "public Iterator<String> pluralPatternIterator()", "private void initialize(ULocale uloc)", "private void setupCurrencyPluralPattern(ULocale uloc)" ],
  "variableNames" : [ "serialVersionUID", "tripleCurrencySign", "tripleCurrencyStr", "defaultCurrencyPluralPatternChar", "defaultCurrencyPluralPattern", "pluralCountToCurrencyUnitPattern", "pluralRules", "ulocale" ]
}