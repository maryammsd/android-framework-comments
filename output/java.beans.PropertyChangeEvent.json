{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/beans/PropertyChangeEvent.java",
  "packageName" : "java.beans",
  "className" : "PropertyChangeEvent",
  "comment" : "\n * A \"PropertyChange\" event gets delivered whenever a bean changes a \"bound\"\n * or \"constrained\" property.  A PropertyChangeEvent object is sent as an\n * argument to the PropertyChangeListener and VetoableChangeListener methods.\n * <P>\n * Normally PropertyChangeEvents are accompanied by the name and the old\n * and new value of the changed property.  If the new value is a primitive\n * type (such as int or boolean) it must be wrapped as the\n * corresponding java.lang.* Object type (such as Integer or Boolean).\n * <P>\n * Null values may be provided for the old and the new values if their\n * true values are not known.\n * <P>\n * An event source may send a null object as the name to indicate that an\n * arbitrary set of if its properties have changed.  In this case the\n * old and new values should also be null.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "propertyName",
    "type" : "String",
    "comment" : "\n     * name of the property that changed.  May be null, if not known.\n     * @serial\n     ",
    "links" : [ ]
  }, {
    "name" : "newValue",
    "type" : "Object",
    "comment" : "\n     * New value for property.  May be null if not known.\n     * @serial\n     ",
    "links" : [ ]
  }, {
    "name" : "oldValue",
    "type" : "Object",
    "comment" : "\n     * Previous value for property.  May be null if not known.\n     * @serial\n     ",
    "links" : [ ]
  }, {
    "name" : "propagationId",
    "type" : "Object",
    "comment" : "\n     * Propagation ID.  May be null.\n     * @serial\n     * @see #getPropagationId\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getPropertyName()",
    "returnType" : "String",
    "comment" : "\n     * Gets the programmatic name of the property that was changed.\n     *\n     * @return  The programmatic name of the property that was changed.\n     *          May be null if multiple properties have changed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object getNewValue()",
    "returnType" : "Object",
    "comment" : "\n     * Gets the new value for the property, expressed as an Object.\n     *\n     * @return  The new value for the property, expressed as an Object.\n     *          May be null if multiple properties have changed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object getOldValue()",
    "returnType" : "Object",
    "comment" : "\n     * Gets the old value for the property, expressed as an Object.\n     *\n     * @return  The old value for the property, expressed as an Object.\n     *          May be null if multiple properties have changed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setPropagationId(Object propagationId)",
    "returnType" : "void",
    "comment" : "\n     * Sets the propagationId object for the event.\n     *\n     * @param propagationId  The propagationId object for the event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object getPropagationId()",
    "returnType" : "Object",
    "comment" : "\n     * The \"propagationId\" field is reserved for future use.  In Beans 1.0\n     * the sole requirement is that if a listener catches a PropertyChangeEvent\n     * and then fires a PropertyChangeEvent of its own, then it should\n     * make sure that it propagates the propagationId field from its\n     * incoming event to its outgoing event.\n     *\n     * @return the propagationId object associated with a bound/constrained\n     *          property update.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a string representation of the object.\n     *\n     * @return a string representation of the object\n     *\n     * @since 1.7\n     ",
    "links" : [ ]
  }, {
    "name" : " void appendTo(StringBuilder sb)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getPropertyName()", "public Object getNewValue()", "public Object getOldValue()", "public void setPropagationId(Object propagationId)", "public Object getPropagationId()", "public String toString()", " void appendTo(StringBuilder sb)" ],
  "variableNames" : [ "serialVersionUID", "propertyName", "newValue", "oldValue", "propagationId" ]
}