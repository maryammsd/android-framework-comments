{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/health/connect/ReadRecordsRequestUsingFilters.java",
  "packageName" : "android.health.connect",
  "className" : "Builder",
  "comment" : " Builder class for {@link ReadRecordsRequestUsingFilters} ",
  "links" : [ "android.health.connect.ReadRecordsRequestUsingFilters" ],
  "variables" : [ {
    "name" : "mRecordType",
    "type" : "Class<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDataOrigins",
    "type" : "Set<DataOrigin>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeRangeFilter",
    "type" : "TimeRangeFilter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPageSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPageToken",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAscending",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsOrderingSet",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder<T> addDataOrigins(@NonNull DataOrigin dataOrigin)",
    "returnType" : "Builder<T>",
    "comment" : "\n         * Sets the data origin filter based on which the read operation is to be performed\n         *\n         * @param dataOrigin Adds {@link DataOrigin} for which to read records.\n         *     <p>If no {@link DataOrigin} is added then records by all {@link DataOrigin}s will be\n         *     read\n         ",
    "links" : [ "android.health.connect.datatypes.DataOrigin" ]
  }, {
    "name" : "public Builder<T> setTimeRangeFilter(@Nullable TimeRangeFilter timeRangeFilter)",
    "returnType" : "Builder<T>",
    "comment" : "\n         * Sets time range b/w which the read operation is to be performed\n         *\n         * @param timeRangeFilter Time range b/w which the read operation is to be performed.\n         *     <p>If not time range filter is present all the records will be read without any time\n         *     constraints.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder<T> setPageSize(@IntRange(from = 1, to = 5000) int pageSize)",
    "returnType" : "Builder<T>",
    "comment" : "\n         * Sets maximum number of records to be returned by the read operation\n         *\n         * @param pageSize number of records to be returned by the read operation.\n         *     <p>This sets to limit number of rows returned by a read. If not set default is 1000\n         *     and maximum of 5000 records can be sent.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder<T> setPageToken(long pageToken)",
    "returnType" : "Builder<T>",
    "comment" : "\n         * Sets page token to read the requested page of the result.\n         *\n         * @param pageToken to read the requested page of the result. -1 if none available\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder<T> setAscending(boolean ascending)",
    "returnType" : "Builder<T>",
    "comment" : "\n         * Sets ordering of results to be returned based on start time. Ordering cannot be set along\n         * with page token for subsequent requests. IllegalState exception is thrown when ordering\n         * is set along with the page token.\n         *\n         * @param ascending specifies sorting order of results, if set to true records are sorted on\n         *     start time in ascending fashion, else if set to false then in descending.\n         ",
    "links" : [ ]
  }, {
    "name" : "public ReadRecordsRequestUsingFilters<T> build()",
    "returnType" : "ReadRecordsRequestUsingFilters<T>",
    "comment" : "\n         * Returns an Object of {@link ReadRecordsRequestUsingFilters}\n         *\n         * <p>For subsequent read requests, {@link ReadRecordsRequestUsingFilters} does not allow\n         * both pageToken and sort order to be set together.\n         *\n         * <p>If pageToken is set then records will be sorted in same order as the previous result\n         *\n         * <p>If both pageToken and sortOrder are not set then by default records will be sorted by\n         * start time in ascending order.\n         *\n         * @throws IllegalStateException if both pageToken and sort order is set.\n         ",
    "links" : [ "android.health.connect.ReadRecordsRequestUsingFilters" ]
  } ],
  "methodNames" : [ "public Builder<T> addDataOrigins(@NonNull DataOrigin dataOrigin)", "public Builder<T> setTimeRangeFilter(@Nullable TimeRangeFilter timeRangeFilter)", "public Builder<T> setPageSize(@IntRange(from = 1, to = 5000) int pageSize)", "public Builder<T> setPageToken(long pageToken)", "public Builder<T> setAscending(boolean ascending)", "public ReadRecordsRequestUsingFilters<T> build()" ],
  "variableNames" : [ "mRecordType", "mDataOrigins", "mTimeRangeFilter", "mPageSize", "mPageToken", "mAscending", "mIsOrderingSet" ]
}