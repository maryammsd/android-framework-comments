{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telecom/Connection.java",
  "packageName" : "android.telecom",
  "className" : "RttTextStream",
  "comment" : "\n     * Provides methods to read and write RTT data to/from the in-call app.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "READ_BUFFER_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPipeFromInCall",
    "type" : "InputStreamReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPipeToInCall",
    "type" : "OutputStreamWriter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFdFromInCall",
    "type" : "ParcelFileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFdToInCall",
    "type" : "ParcelFileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFromInCallFileInputStream",
    "type" : "FileInputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReadBuffer",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void write(String input) throws IOException",
    "returnType" : "void",
    "comment" : "\n         * Writes the string {@param input} into the text stream to the UI for this RTT call. Since\n         * RTT transmits text in real-time, this method should be called as often as text snippets\n         * are received from the remote user, even if it is only one character.\n         * <p>\n         * This method is not thread-safe -- calling it from multiple threads simultaneously may\n         * lead to interleaved text.\n         *\n         * @param input The message to send to the in-call app.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String read() throws IOException",
    "returnType" : "String",
    "comment" : "\n         * Reads a string from the in-call app, blocking if there is no data available. Returns\n         * {@code null} if the RTT conversation has been terminated and there is no further data\n         * to read.\n         * <p>\n         * This method is not thread-safe -- calling it from multiple threads simultaneously may\n         * lead to interleaved text.\n         *\n         * @return A string containing text entered by the user, or {@code null} if the\n         * conversation has been terminated or if there was an error while reading.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String readImmediately() throws IOException",
    "returnType" : "String",
    "comment" : "\n         * Non-blocking version of {@link #read()}. Returns {@code null} if there is nothing to\n         * be read.\n         *\n         * @return A string containing text entered by the user, or {@code null} if the user has\n         * not entered any new text yet.\n         ",
    "links" : [ "#read()" ]
  }, {
    "name" : "public ParcelFileDescriptor getFdFromInCall()",
    "returnType" : "ParcelFileDescriptor",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public ParcelFileDescriptor getFdToInCall()",
    "returnType" : "ParcelFileDescriptor",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void write(String input) throws IOException", "public String read() throws IOException", "public String readImmediately() throws IOException", "public ParcelFileDescriptor getFdFromInCall()", "public ParcelFileDescriptor getFdToInCall()" ],
  "variableNames" : [ "READ_BUFFER_SIZE", "mPipeFromInCall", "mPipeToInCall", "mFdFromInCall", "mFdToInCall", "mFromInCallFileInputStream", "mReadBuffer" ]
}