{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/SensorPrivacyManager.java",
  "packageName" : "android.hardware",
  "className" : "OnSensorPrivacyChangedListener",
  "comment" : "\n     * A class implementing this interface can register with the {@link\n     * android.hardware.SensorPrivacyManager} to receive notification when the sensor privacy\n     * state changes.\n     *\n     * @hide\n     ",
  "links" : [ "android.hardware.SensorPrivacyManager" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onSensorPrivacyChanged(@NonNull SensorPrivacyChangedParams params)",
    "returnType" : "void",
    "comment" : "\n         * Callback invoked when the sensor privacy state changes.\n         *\n         * @param params Parameters describing the new state\n         ",
    "links" : [ ]
  }, {
    "name" : " void onSensorPrivacyChanged(int sensor, boolean enabled)",
    "returnType" : "void",
    "comment" : "\n         * Callback invoked when the sensor privacy state changes.\n         *\n         * @param sensor the sensor whose state is changing\n         * @param enabled true if sensor privacy is enabled, false otherwise.\n         *\n         * @deprecated Please use\n         * {@link #onSensorPrivacyChanged(SensorPrivacyChangedParams)}\n         ",
    "links" : [ "#onSensorPrivacyChanged(SensorPrivacyChangedParams)" ]
  } ],
  "methodNames" : [ " void onSensorPrivacyChanged(@NonNull SensorPrivacyChangedParams params)", " void onSensorPrivacyChanged(int sensor, boolean enabled)" ],
  "variableNames" : [ ]
}