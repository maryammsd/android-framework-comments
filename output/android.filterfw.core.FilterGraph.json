{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/filterfw/core/FilterGraph.java",
  "packageName" : "android.filterfw.core",
  "className" : "FilterGraph",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mFilters",
    "type" : "HashSet<Filter>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNameMap",
    "type" : "HashMap<String, Filter>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreconnections",
    "type" : "HashMap<OutputPort, LinkedList<InputPort>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AUTOBRANCH_OFF",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AUTOBRANCH_SYNCED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AUTOBRANCH_UNSYNCED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPECHECK_OFF",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPECHECK_DYNAMIC",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPECHECK_STRICT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsReady",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoBranchMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTypeCheckMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDiscardUnconnectedOutputs",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLogVerbose",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean addFilter(Filter filter)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean containsFilter(Filter filter)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Filter getFilter(String name)",
    "returnType" : "Filter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void connect(Filter source, String outputName, Filter target, String inputName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void connect(String sourceName, String outputName, String targetName, String inputName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Set<Filter> getFilters()",
    "returnType" : "Set<Filter>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void beginProcessing()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void flushFrames()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void closeFilters(FilterContext context)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isReady()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAutoBranchMode(int autoBranchMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDiscardUnconnectedOutputs(boolean discard)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTypeCheckMode(int typeCheckMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void tearDown(FilterContext context)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean readyForProcessing(Filter filter, Set<Filter> processed)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void runTypeCheck()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateOutputs(Filter filter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void runTypeCheckOn(Filter filter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void checkConnections()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void discardUnconnectedOutputs()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void removeFilter(Filter filter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void preconnect(OutputPort outPort, InputPort inPort)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void connectPorts()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private HashSet<Filter> getSourceFilters()",
    "returnType" : "HashSet<Filter>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setupFilters()",
    "returnType" : "void",
    "comment" : " Core internal methods /////////////////////////////////////////////////////////////////////////",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean addFilter(Filter filter)", "public boolean containsFilter(Filter filter)", "public Filter getFilter(String name)", "public void connect(Filter source, String outputName, Filter target, String inputName)", "public void connect(String sourceName, String outputName, String targetName, String inputName)", "public Set<Filter> getFilters()", "public void beginProcessing()", "public void flushFrames()", "public void closeFilters(FilterContext context)", "public boolean isReady()", "public void setAutoBranchMode(int autoBranchMode)", "public void setDiscardUnconnectedOutputs(boolean discard)", "public void setTypeCheckMode(int typeCheckMode)", "public void tearDown(FilterContext context)", "private boolean readyForProcessing(Filter filter, Set<Filter> processed)", "private void runTypeCheck()", "private void updateOutputs(Filter filter)", "private void runTypeCheckOn(Filter filter)", "private void checkConnections()", "private void discardUnconnectedOutputs()", "private void removeFilter(Filter filter)", "private void preconnect(OutputPort outPort, InputPort inPort)", "private void connectPorts()", "private HashSet<Filter> getSourceFilters()", " void setupFilters()" ],
  "variableNames" : [ "mFilters", "mNameMap", "mPreconnections", "AUTOBRANCH_OFF", "AUTOBRANCH_SYNCED", "AUTOBRANCH_UNSYNCED", "TYPECHECK_OFF", "TYPECHECK_DYNAMIC", "TYPECHECK_STRICT", "mIsReady", "mAutoBranchMode", "mTypeCheckMode", "mDiscardUnconnectedOutputs", "mLogVerbose", "TAG" ]
}