{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/tuner/frontend/DvbtFrontendSettings.java",
  "packageName" : "android.media.tv.tuner.frontend",
  "className" : "DvbtFrontendSettings",
  "comment" : "\n * Frontend settings for DVBT.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TRANSMISSION_MODE_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Transmission Mode undefined.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_AUTO",
    "type" : "int",
    "comment" : "\n     * Hardware is able to detect and set Transmission Mode automatically\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_2K",
    "type" : "int",
    "comment" : "\n     * 2K Transmission Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_8K",
    "type" : "int",
    "comment" : "\n     * 8K Transmission Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_4K",
    "type" : "int",
    "comment" : "\n     * 4K Transmission Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_1K",
    "type" : "int",
    "comment" : "\n     * 1K Transmission Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_16K",
    "type" : "int",
    "comment" : "\n     * 16K Transmission Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_32K",
    "type" : "int",
    "comment" : "\n     * 32K Transmission Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_EXTENDED_8K",
    "type" : "int",
    "comment" : "\n     * 8K Transmission Extended Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_EXTENDED_16K",
    "type" : "int",
    "comment" : "\n     * 16K Transmission Extended Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "TRANSMISSION_MODE_EXTENDED_32K",
    "type" : "int",
    "comment" : "\n     * 32K Transmission Extended Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "BANDWIDTH_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Bandwidth undefined.\n     ",
    "links" : [ ]
  }, {
    "name" : "BANDWIDTH_AUTO",
    "type" : "int",
    "comment" : "\n     * Hardware is able to detect and set Bandwidth automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "BANDWIDTH_8MHZ",
    "type" : "int",
    "comment" : "\n     * 8 MHz bandwidth.\n     ",
    "links" : [ ]
  }, {
    "name" : "BANDWIDTH_7MHZ",
    "type" : "int",
    "comment" : "\n     * 7 MHz bandwidth.\n     ",
    "links" : [ ]
  }, {
    "name" : "BANDWIDTH_6MHZ",
    "type" : "int",
    "comment" : "\n     * 6 MHz bandwidth.\n     ",
    "links" : [ ]
  }, {
    "name" : "BANDWIDTH_5MHZ",
    "type" : "int",
    "comment" : "\n     * 5 MHz bandwidth.\n     ",
    "links" : [ ]
  }, {
    "name" : "BANDWIDTH_1_7MHZ",
    "type" : "int",
    "comment" : "\n     * 1,7 MHz bandwidth.\n     ",
    "links" : [ ]
  }, {
    "name" : "BANDWIDTH_10MHZ",
    "type" : "int",
    "comment" : "\n     * 10 MHz bandwidth.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Constellation not defined.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_AUTO",
    "type" : "int",
    "comment" : "\n     * Hardware is able to detect and set Constellation automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_QPSK",
    "type" : "int",
    "comment" : "\n     * QPSK Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_16QAM",
    "type" : "int",
    "comment" : "\n     * 16QAM Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_64QAM",
    "type" : "int",
    "comment" : "\n     * 64QAM Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_256QAM",
    "type" : "int",
    "comment" : "\n     * 256QAM Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_QPSK_R",
    "type" : "int",
    "comment" : "\n     * QPSK Rotated Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_16QAM_R",
    "type" : "int",
    "comment" : "\n     * 16QAM Rotated Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_64QAM_R",
    "type" : "int",
    "comment" : "\n     * 64QAM Rotated Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "CONSTELLATION_256QAM_R",
    "type" : "int",
    "comment" : "\n     * 256QAM Rotated Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Hierarchy undefined.\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_AUTO",
    "type" : "int",
    "comment" : "\n     * Hardware is able to detect and set Hierarchy automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_NON_NATIVE",
    "type" : "int",
    "comment" : "\n     * Non-native Hierarchy\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_1_NATIVE",
    "type" : "int",
    "comment" : "\n     * 1-native Hierarchy\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_2_NATIVE",
    "type" : "int",
    "comment" : "\n     * 2-native Hierarchy\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_4_NATIVE",
    "type" : "int",
    "comment" : "\n     * 4-native Hierarchy\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_NON_INDEPTH",
    "type" : "int",
    "comment" : "\n     * Non-indepth Hierarchy\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_1_INDEPTH",
    "type" : "int",
    "comment" : "\n     * 1-indepth Hierarchy\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_2_INDEPTH",
    "type" : "int",
    "comment" : "\n     * 2-indepth Hierarchy\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERARCHY_4_INDEPTH",
    "type" : "int",
    "comment" : "\n     * 4-indepth Hierarchy\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Code rate undefined.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_AUTO",
    "type" : "int",
    "comment" : "\n     * Hardware is able to detect and set code rate automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_1_2",
    "type" : "int",
    "comment" : "\n     * 1/2 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_2_3",
    "type" : "int",
    "comment" : "\n     * 2/3 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_3_4",
    "type" : "int",
    "comment" : "\n     * 3/4 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_5_6",
    "type" : "int",
    "comment" : "\n     * 5/6 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_7_8",
    "type" : "int",
    "comment" : "\n     * 7/8 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_3_5",
    "type" : "int",
    "comment" : "\n     * 4/5 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_4_5",
    "type" : "int",
    "comment" : "\n     * 4/5 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_6_7",
    "type" : "int",
    "comment" : "\n     * 6/7 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "CODERATE_8_9",
    "type" : "int",
    "comment" : "\n     * 8/9 code rate.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Guard Interval undefined.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_AUTO",
    "type" : "int",
    "comment" : "\n     * Hardware is able to detect and set Guard Interval automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_1_32",
    "type" : "int",
    "comment" : "\n     * 1/32 Guard Interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_1_16",
    "type" : "int",
    "comment" : "\n     * 1/16 Guard Interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_1_8",
    "type" : "int",
    "comment" : "\n     * 1/8 Guard Interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_1_4",
    "type" : "int",
    "comment" : "\n     * 1/4 Guard Interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_1_128",
    "type" : "int",
    "comment" : "\n     * 1/128 Guard Interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_19_128",
    "type" : "int",
    "comment" : "\n     * 19/128 Guard Interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "GUARD_INTERVAL_19_256",
    "type" : "int",
    "comment" : "\n     * 19/256 Guard Interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "STANDARD_AUTO",
    "type" : "int",
    "comment" : "\n     * Hardware is able to detect and set Standard automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "STANDARD_T",
    "type" : "int",
    "comment" : "\n     * T standard.\n     ",
    "links" : [ ]
  }, {
    "name" : "STANDARD_T2",
    "type" : "int",
    "comment" : "\n     * T2 standard.\n     ",
    "links" : [ ]
  }, {
    "name" : "PLP_MODE_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Physical Layer Pipe (PLP) Mode undefined.\n     ",
    "links" : [ ]
  }, {
    "name" : "PLP_MODE_AUTO",
    "type" : "int",
    "comment" : "\n     * Hardware is able to detect and set Physical Layer Pipe (PLP) Mode automatically.\n     ",
    "links" : [ ]
  }, {
    "name" : "PLP_MODE_MANUAL",
    "type" : "int",
    "comment" : "\n     * Physical Layer Pipe (PLP) manual Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "mTransmissionMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBandwidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstellation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHierarchy",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHpCodeRate",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLpCodeRate",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGuardInterval",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsHighPriority",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStandard",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsMiso",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlpMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlpId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlpGroupId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getTransmissionMode()",
    "returnType" : "int",
    "comment" : "\n     * Gets Transmission Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBandwidth()",
    "returnType" : "int",
    "comment" : "\n     * Gets Bandwidth.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getConstellation()",
    "returnType" : "int",
    "comment" : "\n     * Gets Constellation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getHierarchy()",
    "returnType" : "int",
    "comment" : "\n     * Gets Hierarchy.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getHighPriorityCodeRate()",
    "returnType" : "int",
    "comment" : "\n     * Gets Code Rate for High Priority level.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLowPriorityCodeRate()",
    "returnType" : "int",
    "comment" : "\n     * Gets Code Rate for Low Priority level.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getGuardInterval()",
    "returnType" : "int",
    "comment" : "\n     * Gets Guard Interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isHighPriority()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether it's high priority.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getStandard()",
    "returnType" : "int",
    "comment" : "\n     * Gets Standard.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMiso()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether it's MISO.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPlpMode()",
    "returnType" : "int",
    "comment" : "\n     * Gets Physical Layer Pipe (PLP) Mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPlpId()",
    "returnType" : "int",
    "comment" : "\n     * Gets Physical Layer Pipe (PLP) ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPlpGroupId()",
    "returnType" : "int",
    "comment" : "\n     * Gets Physical Layer Pipe (PLP) group ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean isExtendedTransmissionMode(@TransmissionMode int transmissionMode)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isExtendedConstellation(@Constellation int constellation)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static Builder builder()",
    "returnType" : "Builder",
    "comment" : "\n     * Creates a builder for {@link DvbtFrontendSettings}.\n     ",
    "links" : [ "android.media.tv.tuner.frontend.DvbtFrontendSettings" ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getTransmissionMode()", "public int getBandwidth()", "public int getConstellation()", "public int getHierarchy()", "public int getHighPriorityCodeRate()", "public int getLowPriorityCodeRate()", "public int getGuardInterval()", "public boolean isHighPriority()", "public int getStandard()", "public boolean isMiso()", "public int getPlpMode()", "public int getPlpId()", "public int getPlpGroupId()", "private static boolean isExtendedTransmissionMode(@TransmissionMode int transmissionMode)", "private static boolean isExtendedConstellation(@Constellation int constellation)", "public static Builder builder()", "public int getType()" ],
  "variableNames" : [ "TRANSMISSION_MODE_UNDEFINED", "TRANSMISSION_MODE_AUTO", "TRANSMISSION_MODE_2K", "TRANSMISSION_MODE_8K", "TRANSMISSION_MODE_4K", "TRANSMISSION_MODE_1K", "TRANSMISSION_MODE_16K", "TRANSMISSION_MODE_32K", "TRANSMISSION_MODE_EXTENDED_8K", "TRANSMISSION_MODE_EXTENDED_16K", "TRANSMISSION_MODE_EXTENDED_32K", "BANDWIDTH_UNDEFINED", "BANDWIDTH_AUTO", "BANDWIDTH_8MHZ", "BANDWIDTH_7MHZ", "BANDWIDTH_6MHZ", "BANDWIDTH_5MHZ", "BANDWIDTH_1_7MHZ", "BANDWIDTH_10MHZ", "CONSTELLATION_UNDEFINED", "CONSTELLATION_AUTO", "CONSTELLATION_QPSK", "CONSTELLATION_16QAM", "CONSTELLATION_64QAM", "CONSTELLATION_256QAM", "CONSTELLATION_QPSK_R", "CONSTELLATION_16QAM_R", "CONSTELLATION_64QAM_R", "CONSTELLATION_256QAM_R", "HIERARCHY_UNDEFINED", "HIERARCHY_AUTO", "HIERARCHY_NON_NATIVE", "HIERARCHY_1_NATIVE", "HIERARCHY_2_NATIVE", "HIERARCHY_4_NATIVE", "HIERARCHY_NON_INDEPTH", "HIERARCHY_1_INDEPTH", "HIERARCHY_2_INDEPTH", "HIERARCHY_4_INDEPTH", "CODERATE_UNDEFINED", "CODERATE_AUTO", "CODERATE_1_2", "CODERATE_2_3", "CODERATE_3_4", "CODERATE_5_6", "CODERATE_7_8", "CODERATE_3_5", "CODERATE_4_5", "CODERATE_6_7", "CODERATE_8_9", "GUARD_INTERVAL_UNDEFINED", "GUARD_INTERVAL_AUTO", "GUARD_INTERVAL_1_32", "GUARD_INTERVAL_1_16", "GUARD_INTERVAL_1_8", "GUARD_INTERVAL_1_4", "GUARD_INTERVAL_1_128", "GUARD_INTERVAL_19_128", "GUARD_INTERVAL_19_256", "STANDARD_AUTO", "STANDARD_T", "STANDARD_T2", "PLP_MODE_UNDEFINED", "PLP_MODE_AUTO", "PLP_MODE_MANUAL", "mTransmissionMode", "mBandwidth", "mConstellation", "mHierarchy", "mHpCodeRate", "mLpCodeRate", "mGuardInterval", "mIsHighPriority", "mStandard", "mIsMiso", "mPlpMode", "mPlpId", "mPlpGroupId" ]
}