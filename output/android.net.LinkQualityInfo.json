{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/LinkQualityInfo.java",
  "packageName" : "android.net",
  "className" : "LinkQualityInfo",
  "comment" : "\n *  Class that represents useful attributes of generic network links\n *  such as the upload/download throughput or packet error rate.\n *  Generally speaking, you should be dealing with instances of\n *  LinkQualityInfo subclasses, such as {@link android.net.WifiLinkQualityInfo}\n *  or {@link android.net.MobileLinkQualityInfo} which provide additional\n *  information.\n *  @hide\n ",
  "links" : [ "android.net.MobileLinkQualityInfo", "android.net.WifiLinkQualityInfo" ],
  "variables" : [ {
    "name" : "UNKNOWN_INT",
    "type" : "int",
    "comment" : "\n     * Represents a value that you can use to test if an integer field is set to a good value\n     ",
    "links" : [ ]
  }, {
    "name" : "UNKNOWN_LONG",
    "type" : "long",
    "comment" : "\n     * Represents a value that you can use to test if a long field is set to a good value\n     ",
    "links" : [ ]
  }, {
    "name" : "NORMALIZED_MIN_SIGNAL_STRENGTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NORMALIZED_MAX_SIGNAL_STRENGTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NORMALIZED_SIGNAL_STRENGTH_RANGE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkType",
    "type" : "int",
    "comment" : " Network type as defined by ConnectivityManager ",
    "links" : [ ]
  }, {
    "name" : "mNormalizedSignalStrength",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPacketCount",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPacketErrorCount",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTheoreticalTxBandwidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTheoreticalRxBandwidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTheoreticalLatency",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastDataSampleTime",
    "type" : "long",
    "comment" : " Timestamp when last sample was made available ",
    "links" : [ ]
  }, {
    "name" : "mDataSampleDuration",
    "type" : "int",
    "comment" : " Sample duration in millisecond ",
    "links" : [ ]
  }, {
    "name" : "OBJECT_TYPE_LINK_QUALITY_INFO",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OBJECT_TYPE_WIFI_LINK_QUALITY_INFO",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OBJECT_TYPE_MOBILE_LINK_QUALITY_INFO",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<LinkQualityInfo>",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * Implement the Parcelable interface\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags, int objectType)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void initializeFromParcel(Parcel in)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNetworkType()",
    "returnType" : "int",
    "comment" : "\n     * returns the type of network this link is connected to\n     * @return network type as defined by {@link android.net.ConnectivityManager} or\n     * {@link android.net.LinkQualityInfo#UNKNOWN_INT}\n     ",
    "links" : [ "android.net.ConnectivityManager", "android.net.LinkQualityInfo#UNKNOWN_INT" ]
  }, {
    "name" : "public void setNetworkType(int networkType)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNormalizedSignalStrength()",
    "returnType" : "int",
    "comment" : "\n     * returns the signal strength normalized across multiple types of networks\n     * @return an integer value from 0 - 99 or {@link android.net.LinkQualityInfo#UNKNOWN_INT}\n     ",
    "links" : [ "android.net.LinkQualityInfo#UNKNOWN_INT" ]
  }, {
    "name" : "public void setNormalizedSignalStrength(int normalizedSignalStrength)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getPacketCount()",
    "returnType" : "long",
    "comment" : "\n     * returns the total number of packets sent or received in sample duration\n     * @return number of packets or {@link android.net.LinkQualityInfo#UNKNOWN_LONG}\n     ",
    "links" : [ "android.net.LinkQualityInfo#UNKNOWN_LONG" ]
  }, {
    "name" : "public void setPacketCount(long packetCount)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getPacketErrorCount()",
    "returnType" : "long",
    "comment" : "\n     * returns the total number of packets errors encountered in sample duration\n     * @return number of errors or {@link android.net.LinkQualityInfo#UNKNOWN_LONG}\n     ",
    "links" : [ "android.net.LinkQualityInfo#UNKNOWN_LONG" ]
  }, {
    "name" : "public void setPacketErrorCount(long packetErrorCount)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTheoreticalTxBandwidth()",
    "returnType" : "int",
    "comment" : "\n     * returns the theoretical upload bandwidth of this network\n     * @return bandwidth in Kbps or {@link android.net.LinkQualityInfo#UNKNOWN_INT}\n     ",
    "links" : [ "android.net.LinkQualityInfo#UNKNOWN_INT" ]
  }, {
    "name" : "public void setTheoreticalTxBandwidth(int theoreticalTxBandwidth)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTheoreticalRxBandwidth()",
    "returnType" : "int",
    "comment" : "\n     * returns the theoretical download bandwidth of this network\n     * @return bandwidth in Kbps or {@link android.net.LinkQualityInfo#UNKNOWN_INT}\n     ",
    "links" : [ "android.net.LinkQualityInfo#UNKNOWN_INT" ]
  }, {
    "name" : "public void setTheoreticalRxBandwidth(int theoreticalRxBandwidth)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTheoreticalLatency()",
    "returnType" : "int",
    "comment" : "\n     * returns the theoretical latency of this network\n     * @return latency in milliseconds or {@link android.net.LinkQualityInfo#UNKNOWN_INT}\n     ",
    "links" : [ "android.net.LinkQualityInfo#UNKNOWN_INT" ]
  }, {
    "name" : "public void setTheoreticalLatency(int theoreticalLatency)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getLastDataSampleTime()",
    "returnType" : "long",
    "comment" : "\n     * returns the time stamp of the last sample\n     * @return milliseconds elapsed since start and sample time or\n     * {@link android.net.LinkQualityInfo#UNKNOWN_LONG}\n     ",
    "links" : [ "android.net.LinkQualityInfo#UNKNOWN_LONG" ]
  }, {
    "name" : "public void setLastDataSampleTime(long lastDataSampleTime)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDataSampleDuration()",
    "returnType" : "int",
    "comment" : "\n     * returns the sample duration used\n     * @return duration in milliseconds or {@link android.net.LinkQualityInfo#UNKNOWN_INT}\n     ",
    "links" : [ "android.net.LinkQualityInfo#UNKNOWN_INT" ]
  }, {
    "name" : "public void setDataSampleDuration(int dataSampleDuration)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void writeToParcel(Parcel dest, int flags, int objectType)", "protected void initializeFromParcel(Parcel in)", "public int getNetworkType()", "public void setNetworkType(int networkType)", "public int getNormalizedSignalStrength()", "public void setNormalizedSignalStrength(int normalizedSignalStrength)", "public long getPacketCount()", "public void setPacketCount(long packetCount)", "public long getPacketErrorCount()", "public void setPacketErrorCount(long packetErrorCount)", "public int getTheoreticalTxBandwidth()", "public void setTheoreticalTxBandwidth(int theoreticalTxBandwidth)", "public int getTheoreticalRxBandwidth()", "public void setTheoreticalRxBandwidth(int theoreticalRxBandwidth)", "public int getTheoreticalLatency()", "public void setTheoreticalLatency(int theoreticalLatency)", "public long getLastDataSampleTime()", "public void setLastDataSampleTime(long lastDataSampleTime)", "public int getDataSampleDuration()", "public void setDataSampleDuration(int dataSampleDuration)" ],
  "variableNames" : [ "UNKNOWN_INT", "UNKNOWN_LONG", "NORMALIZED_MIN_SIGNAL_STRENGTH", "NORMALIZED_MAX_SIGNAL_STRENGTH", "NORMALIZED_SIGNAL_STRENGTH_RANGE", "mNetworkType", "mNormalizedSignalStrength", "mPacketCount", "mPacketErrorCount", "mTheoreticalTxBandwidth", "mTheoreticalRxBandwidth", "mTheoreticalLatency", "mLastDataSampleTime", "mDataSampleDuration", "OBJECT_TYPE_LINK_QUALITY_INFO", "OBJECT_TYPE_WIFI_LINK_QUALITY_INFO", "OBJECT_TYPE_MOBILE_LINK_QUALITY_INFO", "CREATOR" ]
}