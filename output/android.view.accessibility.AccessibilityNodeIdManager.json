{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/accessibility/AccessibilityNodeIdManager.java",
  "packageName" : "android.view.accessibility",
  "className" : "AccessibilityNodeIdManager",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mIdsToViews",
    "type" : "WeakSparseArray<View>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sIdManager",
    "type" : "AccessibilityNodeIdManager",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static synchronized AccessibilityNodeIdManager getInstance()",
    "returnType" : "AccessibilityNodeIdManager",
    "comment" : "\n     * Gets singleton.\n     * @return The instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void registerViewWithId(View view, int id)",
    "returnType" : "void",
    "comment" : "\n     * Register view to be kept track of by the accessibility system.\n     * Must be paired with unregisterView, otherwise this will leak.\n     * @param view The view to be registered.\n     * @param id The accessibilityViewId of the view.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void unregisterViewWithId(int id)",
    "returnType" : "void",
    "comment" : "\n     * Unregister view, accessibility won't keep track of this view after this call.\n     * @param id The id returned from registerView when the view as first associated.\n     ",
    "links" : [ ]
  }, {
    "name" : "public View findView(int id)",
    "returnType" : "View",
    "comment" : "\n     * Accessibility uses this to find the view in the hierarchy.\n     * @param id The accessibility view id.\n     * @return The view.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static synchronized AccessibilityNodeIdManager getInstance()", "public void registerViewWithId(View view, int id)", "public void unregisterViewWithId(int id)", "public View findView(int id)" ],
  "variableNames" : [ "mIdsToViews", "sIdManager" ]
}