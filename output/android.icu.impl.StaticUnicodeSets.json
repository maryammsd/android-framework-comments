{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/StaticUnicodeSets.java",
  "packageName" : "android.icu.impl",
  "className" : "StaticUnicodeSets",
  "comment" : "\n * This class statically initializes UnicodeSets, originally built for number parsing. Microbenchmarks\n * show this to bring a very sizeable performance boost.\n *\n * IMPORTANT ASSUMPTION FOR NUMBER PARSING: All of the sets contain code points (no strings) and they are\n * all case-folded. If this assumption were ever broken, logic in classes such as SymbolMatcher would\n * need to be updated in order to return well-formed sets upon calls to getLeadCodePoints().\n *\n * @author sffc\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "unicodeSets",
    "type" : "Map<Key, UnicodeSet>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static UnicodeSet get(Key key)",
    "returnType" : "UnicodeSet",
    "comment" : "\n     * Gets the static-allocated UnicodeSet according to the provided key.\n     *\n     * @param key\n     *            The desired UnicodeSet according to the enum in this file.\n     * @return The requested UnicodeSet. Guaranteed to be frozen and non-null, but may be empty if an\n     *         error occurred during data loading.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Key chooseFrom(String str, Key key1)",
    "returnType" : "Key",
    "comment" : "\n     * Checks if the UnicodeSet given by key1 contains the given string.\n     *\n     * @param str\n     *            The string to check.\n     * @param key1\n     *            The set to check.\n     * @return key1 if the set contains str, or COUNT if not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Key chooseFrom(String str, Key key1, Key key2)",
    "returnType" : "Key",
    "comment" : "\n     * Checks if the UnicodeSet given by either key1 or key2 contains the string.\n     *\n     * Exported as U_COMMON_API for numparse_decimal.cpp\n     *\n     * @param str\n     *            The string to check.\n     * @param key1\n     *            The first set to check.\n     * @param key2\n     *            The second set to check.\n     * @return key1 if that set contains str; key2 if that set contains str; or COUNT if neither set\n     *         contains str.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Key chooseCurrency(String str)",
    "returnType" : "Key",
    "comment" : "\n     * Looks through all Currency-related sets for the given string, returning the first match or null if\n     * no match was round.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static UnicodeSet computeUnion(Key k1, Key k2)",
    "returnType" : "UnicodeSet",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static UnicodeSet computeUnion(Key k1, Key k2, Key k3)",
    "returnType" : "UnicodeSet",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void saveSet(Key key, String unicodeSetPattern)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static UnicodeSet get(Key key)", "public static Key chooseFrom(String str, Key key1)", "public static Key chooseFrom(String str, Key key1, Key key2)", "public static Key chooseCurrency(String str)", "private static UnicodeSet computeUnion(Key k1, Key k2)", "private static UnicodeSet computeUnion(Key k1, Key k2, Key k3)", "private static void saveSet(Key key, String unicodeSetPattern)" ],
  "variableNames" : [ "unicodeSets" ]
}