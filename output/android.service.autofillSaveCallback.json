{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/autofill/SaveCallback.java",
  "packageName" : "android.service.autofill",
  "className" : "SaveCallback",
  "comment" : "\n * Handles save requests from the {@link AutofillService} into the {@link Activity} being\n * autofilled.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "ISaveCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCalled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onSuccess()",
    "returnType" : "void",
    "comment" : "\n     * Notifies the Android System that an\n     * {@link AutofillService#onSaveRequest(SaveRequest, SaveCallback)} was successfully handled\n     * by the service.\n     *\n     * @throws IllegalStateException if this method, {@link #onSuccess(IntentSender)}, or\n     * {@link #onFailure(CharSequence)} was already called.\n     ",
    "links" : [ "AutofillService#onSaveRequest", "#onSuccess", "#onFailure" ]
  }, {
    "name" : "public void onSuccess(@NonNull IntentSender intentSender)",
    "returnType" : "void",
    "comment" : "\n     * Notifies the Android System that an\n     * {@link AutofillService#onSaveRequest(SaveRequest, SaveCallback)} was successfully handled\n     * by the service.\n     *\n     * <p>This method is useful when the service requires extra work&mdash;for example, launching an\n     * activity asking the user to authenticate first &mdash;before it can process the request,\n     * as the intent will be launched from the context of the activity being autofilled and hence\n     * will be part of that activity's stack.\n     *\n     * @param intentSender intent that will be launched from the context of activity being\n     * autofilled.\n     *\n     * @throws IllegalStateException if this method, {@link #onSuccess()},\n     * or {@link #onFailure(CharSequence)} was already called.\n     ",
    "links" : [ "AutofillService#onSaveRequest", "#onSuccess", "#onFailure" ]
  }, {
    "name" : "private void onSuccessInternal(@Nullable IntentSender intentSender)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onFailure(CharSequence message)",
    "returnType" : "void",
    "comment" : "\n     * Notifies the Android System that an\n     * {@link AutofillService#onSaveRequest(SaveRequest, SaveCallback)} could not be handled\n     * by the service.\n     *\n     * <p>This method is just used for logging purposes, the Android System won't call the service\n     * again in case of failures&mdash;if you need to recover from the failure, just save the\n     * {@link SaveRequest} and try again later.\n     *\n     * <p><b>Note: </b>for apps targeting {@link android.os.Build.VERSION_CODES#Q} or higher, this\n     * method just logs the message on {@code logcat}; for apps targetting older SDKs, it also\n     * displays the message to user using a {@link android.widget.Toast}.\n     *\n     * @param message error message. <b>Note: </b> this message should <b>not</b> contain PII\n     * (Personally Identifiable Information, such as username or email address).\n     *\n     * @throws IllegalStateException if this method, {@link #onSuccess()},\n     * or {@link #onSuccess(IntentSender)} was already called.\n     ",
    "links" : [ "AutofillService#onSaveRequest", "SaveRequest", "android.os.Build.VERSION_CODES#Q", "android.widget.Toast", "#onSuccess", "#onSuccess" ]
  }, {
    "name" : "private void assertNotCalled()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mCallback", "mCalled" ],
  "methodNames" : [ "public void onSuccess()", "public void onSuccess(@NonNull IntentSender intentSender)", "private void onSuccessInternal(@Nullable IntentSender intentSender)", "public void onFailure(CharSequence message)", "private void assertNotCalled()" ]
}