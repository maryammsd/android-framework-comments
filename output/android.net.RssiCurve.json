{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/RssiCurve.java",
  "packageName" : "android.net",
  "className" : "RssiCurve",
  "comment" : "\n * A curve defining the network score over a range of RSSI values.\n *\n * <p>For each RSSI bucket, the score may be any byte. Scores have no absolute meaning and are only\n * considered relative to other scores assigned by the same scorer. Networks with no score are\n * treated equivalently to a network with score {@link Byte#MIN_VALUE}, and will not be used.\n *\n * <p>For example, consider a curve starting at -110 dBm with a bucket width of 10 and the\n * following buckets: {@code [-20, -10, 0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120]}.\n * This represents a linear curve between -110 dBm and 30 dBm. It scores progressively higher at\n * stronger signal strengths.\n *\n * <p>A network can be assigned a fixed score independent of RSSI by setting\n * {@link #rssiBuckets} to a one-byte array whose element is the fixed score. {@link #start}\n * should be set to the lowest RSSI value at which this fixed score should apply, and\n * {@link #bucketWidth} should be set such that {@code start + bucketWidth} is equal to the\n * highest RSSI value at which this fixed score should apply.\n *\n * <p>Note that RSSI values below -110 dBm or above 30 dBm are unlikely to cause any difference\n * in connectivity behavior from those endpoints. That is, the connectivity framework will treat\n * a network with a -120 dBm signal exactly as it would treat one with a -110 dBm signal.\n * Therefore, graphs which specify scores outside this range may be truncated to this range by\n * the system.\n *\n * @see ScoredNetwork\n * @hide\n ",
  "variables" : [ {
    "name" : "DEFAULT_ACTIVE_NETWORK_RSSI_BOOST",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "start",
    "type" : "int",
    "comment" : " The starting dBm of the curve. ",
    "links" : [ ]
  }, {
    "name" : "bucketWidth",
    "type" : "int",
    "comment" : " The width of each RSSI bucket, in dBm. ",
    "links" : [ ]
  }, {
    "name" : "rssiBuckets",
    "type" : "byte[]",
    "comment" : " The score for each RSSI bucket. ",
    "links" : [ ]
  }, {
    "name" : "activeNetworkRssiBoost",
    "type" : "int",
    "comment" : "\n     * The RSSI boost to give this network when active, in dBm.\n     *\n     * <p>When the system is connected to this network, it will pretend that the network has this\n     * much higher of an RSSI. This is to avoid switching networks when another network has only a\n     * slightly higher score.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<RssiCurve>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte lookupScore(int rssi)",
    "returnType" : "byte",
    "comment" : "\n     * Lookup the score for a given RSSI value.\n     *\n     * @param rssi The RSSI to lookup. If the RSSI falls below the start of the curve, the score at\n     *         the start of the curve will be returned. If it falls after the end of the curve, the\n     *         score at the end of the curve will be returned.\n     * @return the score for the given RSSI.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte lookupScore(int rssi, boolean isActiveNetwork)",
    "returnType" : "byte",
    "comment" : "\n     * Lookup the score for a given RSSI value.\n     *\n     * @param rssi The RSSI to lookup. If the RSSI falls below the start of the curve, the score at\n     *         the start of the curve will be returned. If it falls after the end of the curve, the\n     *         score at the end of the curve will be returned.\n     * @param isActiveNetwork Whether this network is currently active.\n     * @return the score for the given RSSI.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "\n     * Determine if two RSSI curves are defined in the same way.\n     *\n     * <p>Note that two curves can be equivalent but defined differently, e.g. if one bucket in one\n     * curve is split into two buckets in another. For the purpose of this method, these curves are\n     * not considered equal to each other.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "DEFAULT_ACTIVE_NETWORK_RSSI_BOOST", "start", "bucketWidth", "rssiBuckets", "activeNetworkRssiBoost", "CREATOR" ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "public byte lookupScore(int rssi)", "public byte lookupScore(int rssi, boolean isActiveNetwork)", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public String toString()" ]
}