{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/rtt/RangingRequest.java",
  "packageName" : "android.net.wifi.rtt",
  "className" : "Builder",
  "comment" : "\n     * Builder class used to construct {@link RangingRequest} objects.\n     ",
  "variables" : [ {
    "name" : "mRttPeers",
    "type" : "List<ResponderConfig>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder addAccessPoint(@NonNull ScanResult apInfo)",
    "returnType" : "Builder",
    "comment" : "\n         * Add the device specified by the {@link ScanResult} to the list of devices with\n         * which to measure range. The total number of peers added to a request cannot exceed the\n         * limit specified by {@link #getMaxPeers()}.\n         * <p>\n         * Ranging may not be supported if the Access Point does not support IEEE 802.11mc. Use\n         * {@link ScanResult#is80211mcResponder()} to verify the Access Point's capabilities. If\n         * not supported the result status will be\n         * {@link RangingResult#STATUS_RESPONDER_DOES_NOT_SUPPORT_IEEE80211MC}.\n         *\n         * @param apInfo Information of an Access Point (AP) obtained in a Scan Result.\n         * @return The builder to facilitate chaining\n         *         {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ "ScanResult", "#getMaxPeers", "ScanResult#is80211mcResponder", "RangingResult#STATUS_RESPONDER_DOES_NOT_SUPPORT_IEEE80211MC" ]
  }, {
    "name" : "public Builder addAccessPoints(@NonNull List<ScanResult> apInfos)",
    "returnType" : "Builder",
    "comment" : "\n         * Add the devices specified by the {@link ScanResult}s to the list of devices with\n         * which to measure range. The total number of peers added to a request cannot exceed the\n         * limit specified by {@link #getMaxPeers()}.\n         * <p>\n         * Ranging may not be supported if the Access Point does not support IEEE 802.11mc. Use\n         * {@link ScanResult#is80211mcResponder()} to verify the Access Point's capabilities. If\n         * not supported the result status will be\n         * {@link RangingResult#STATUS_RESPONDER_DOES_NOT_SUPPORT_IEEE80211MC}.\n         *\n         * @param apInfos Information of an Access Points (APs) obtained in a Scan Result.\n         * @return The builder to facilitate chaining\n         *         {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ "ScanResult", "#getMaxPeers", "ScanResult#is80211mcResponder", "RangingResult#STATUS_RESPONDER_DOES_NOT_SUPPORT_IEEE80211MC" ]
  }, {
    "name" : "public Builder addWifiAwarePeer(@NonNull MacAddress peerMacAddress)",
    "returnType" : "Builder",
    "comment" : "\n         * Add the device specified by the {@code peerMacAddress} to the list of devices with\n         * which to measure range.\n         * <p>\n         * The MAC address may be obtained out-of-band from a peer Wi-Fi Aware device. A Wi-Fi\n         * Aware device may obtain its MAC address using the {@link IdentityChangedListener}\n         * provided to\n         * {@link WifiAwareManager#attach(AttachCallback, IdentityChangedListener, Handler)}.\n         * <p>\n         * Note: in order to use this API the device must support Wi-Fi Aware\n         * {@link android.net.wifi.aware}. The peer device which is being ranged to must be\n         * configured to publish a service (with any name) with:\n         * <li>Type {@link android.net.wifi.aware.PublishConfig#PUBLISH_TYPE_UNSOLICITED}.\n         * <li>Ranging enabled\n         * {@link android.net.wifi.aware.PublishConfig.Builder#setRangingEnabled(boolean)}.\n         *\n         * @param peerMacAddress The MAC address of the Wi-Fi Aware peer.\n         * @return The builder, to facilitate chaining {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ "IdentityChangedListener", "WifiAwareManager#attach", "android.net.wifi.aware", "android.net.wifi.aware.PublishConfig#PUBLISH_TYPE_UNSOLICITED", "android.net.wifi.aware.PublishConfig.Builder#setRangingEnabled" ]
  }, {
    "name" : "public Builder addWifiAwarePeer(@NonNull PeerHandle peerHandle)",
    "returnType" : "Builder",
    "comment" : "\n         * Add a device specified by a {@link PeerHandle} to the list of devices with which to\n         * measure range.\n         * <p>\n         * The {@link PeerHandle} may be obtained as part of the Wi-Fi Aware discovery process. E.g.\n         * using {@link DiscoverySessionCallback#onServiceDiscovered(PeerHandle, byte[], List)}.\n         * <p>\n         * Note: in order to use this API the device must support Wi-Fi Aware\n         * {@link android.net.wifi.aware}. The peer device which is being ranged to must be\n         * configured to publish a service (with any name) with:\n         * <li>Type {@link android.net.wifi.aware.PublishConfig#PUBLISH_TYPE_UNSOLICITED}.\n         * <li>Ranging enabled\n         * {@link android.net.wifi.aware.PublishConfig.Builder#setRangingEnabled(boolean)}.\n         *\n         * @param peerHandle The peer handler of the peer Wi-Fi Aware device.\n         * @return The builder, to facilitate chaining {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ "PeerHandle", "PeerHandle", "DiscoverySessionCallback#onServiceDiscovered", "android.net.wifi.aware", "android.net.wifi.aware.PublishConfig#PUBLISH_TYPE_UNSOLICITED", "android.net.wifi.aware.PublishConfig.Builder#setRangingEnabled" ]
  }, {
    "name" : "public Builder addResponder(@NonNull ResponderConfig responder)",
    "returnType" : "Builder",
    "comment" : "\n         * Add the Responder device specified by the {@link ResponderConfig} to the list of devices\n         * with which to measure range. The total number of peers added to the request cannot exceed\n         * the limit specified by {@link #getMaxPeers()}.\n         *\n         * @param responder Information on the RTT Responder.\n         * @return The builder, to facilitate chaining {@code builder.setXXX(..).setXXX(..)}.\n         *\n         * @hide\n         ",
    "links" : [ "ResponderConfig", "#getMaxPeers" ]
  }, {
    "name" : "public RangingRequest build()",
    "returnType" : "RangingRequest",
    "comment" : "\n         * Build {@link RangingRequest} given the current configurations made on the\n         * builder.\n         ",
    "links" : [ "RangingRequest" ]
  } ],
  "variableNames" : [ "mRttPeers" ],
  "methodNames" : [ "public Builder addAccessPoint(@NonNull ScanResult apInfo)", "public Builder addAccessPoints(@NonNull List<ScanResult> apInfos)", "public Builder addWifiAwarePeer(@NonNull MacAddress peerMacAddress)", "public Builder addWifiAwarePeer(@NonNull PeerHandle peerHandle)", "public Builder addResponder(@NonNull ResponderConfig responder)", "public RangingRequest build()" ]
}