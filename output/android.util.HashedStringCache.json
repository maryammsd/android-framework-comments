{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/HashedStringCache.java",
  "packageName" : "android.util",
  "className" : "HashedStringCache",
  "comment" : "\n * HashedStringCache provides hashing functionality with an underlying LRUCache and expiring salt.\n * Salt and expiration time are being stored under the tag passed in by the calling package --\n * intended usage is the calling package name.\n * @hide\n ",
  "variables" : [ {
    "name" : "sHashedStringCache",
    "type" : "HashedStringCache",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UTF_8",
    "type" : "Charset",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HASH_CACHE_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HASH_LENGTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HASH_SALT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HASH_SALT_DATE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HASH_SALT_GEN",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DAYS_TO_MILLIS",
    "type" : "long",
    "comment" : " For privacy we need to rotate the salt regularly",
    "links" : [ ]
  }, {
    "name" : "MAX_SALT_DAYS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHashes",
    "type" : "LruCache<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSecureRandom",
    "type" : "SecureRandom",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreferenceLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDigester",
    "type" : "MessageDigest",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSalt",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSaltGen",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSharedPreferences",
    "type" : "SharedPreferences",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static HashedStringCache getInstance()",
    "returnType" : "HashedStringCache",
    "comment" : "\n     * @return - instance of the HashedStringCache\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public HashResult hashString(Context context, String tag, String clearText, int saltExpirationDays)",
    "returnType" : "HashResult",
    "comment" : "\n     * Take the string and context and create a hash of the string. Trigger refresh on salt if salt\n     * is more than 7 days old\n     * @param context - callers context to retrieve SharedPreferences\n     * @param clearText - string that needs to be hashed\n     * @param tag - class name to use for storing values in shared preferences\n     * @param saltExpirationDays - number of days we may keep the same salt\n     *                           special value -1 will short-circuit and always return null.\n     * @return - HashResult containing the hashed string and the generation of the hash salt, null\n     *      if clearText string is empty\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean checkNeedsNewSalt(String tag, int saltExpirationDays, long saltDate)",
    "returnType" : "boolean",
    "comment" : "\n     * Populates the mSharedPreferences and checks if there is a salt present and if it's older than\n     * 7 days\n     * @param tag - class name to use for storing values in shared preferences\n     * @param saltExpirationDays - number of days we may keep the same salt\n     * @param saltDate - the date retrieved from configuration\n     * @return - true if no salt or salt is older than 7 days\n     ",
    "links" : [ ]
  }, {
    "name" : "private void populateSaltValues(Context context, String tag, int saltExpirationDays)",
    "returnType" : "void",
    "comment" : "\n     * Populate the salt and saltGen member variables if they aren't already set / need refreshing.\n     * @param context - to get sharedPreferences\n     * @param tag - class name to use for storing values in shared preferences\n     * @param saltExpirationDays - number of days we may keep the same salt\n     ",
    "links" : [ ]
  }, {
    "name" : "private SharedPreferences getHashSharedPreferences(Context context)",
    "returnType" : "SharedPreferences",
    "comment" : "\n     * Android:ui doesn't have persistent preferences, so need to fall back on this hack originally\n     * from ChooserActivity.java\n     * @param context\n     * @return\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "sHashedStringCache", "UTF_8", "HASH_CACHE_SIZE", "HASH_LENGTH", "HASH_SALT", "HASH_SALT_DATE", "HASH_SALT_GEN", "DAYS_TO_MILLIS", "MAX_SALT_DAYS", "mHashes", "mSecureRandom", "mPreferenceLock", "mDigester", "mSalt", "mSaltGen", "mSharedPreferences", "TAG", "DEBUG" ],
  "methodNames" : [ "public static HashedStringCache getInstance()", "public HashResult hashString(Context context, String tag, String clearText, int saltExpirationDays)", "private boolean checkNeedsNewSalt(String tag, int saltExpirationDays, long saltDate)", "private void populateSaltValues(Context context, String tag, int saltExpirationDays)", "private SharedPreferences getHashSharedPreferences(Context context)" ]
}