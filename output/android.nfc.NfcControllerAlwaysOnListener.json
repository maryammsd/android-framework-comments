{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/nfc/NfcControllerAlwaysOnListener.java",
  "packageName" : "android.nfc",
  "className" : "NfcControllerAlwaysOnListener",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAdapter",
    "type" : "INfcAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListenerMap",
    "type" : "Map<ControllerAlwaysOnListener, Executor>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCurrentState",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsRegistered",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void register(@NonNull Executor executor, @NonNull ControllerAlwaysOnListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Register a {@link ControllerAlwaysOnListener} with this\n     * {@link NfcControllerAlwaysOnListener}\n     *\n     * @param executor an {@link Executor} to execute given listener\n     * @param listener user implementation of the {@link ControllerAlwaysOnListener}\n     ",
    "links" : [ "android.nfc.NfcAdapter.ControllerAlwaysOnListener", "android.nfc.NfcControllerAlwaysOnListener", "java.util.concurrent.Executor" ]
  }, {
    "name" : "public void unregister(@NonNull ControllerAlwaysOnListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Unregister the specified {@link ControllerAlwaysOnListener}\n     *\n     * @param listener user implementation of the {@link ControllerAlwaysOnListener}\n     ",
    "links" : [ "android.nfc.NfcAdapter.ControllerAlwaysOnListener" ]
  }, {
    "name" : "private void sendCurrentState(@NonNull ControllerAlwaysOnListener listener)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onControllerAlwaysOnChanged(boolean isEnabled)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void register(@NonNull Executor executor, @NonNull ControllerAlwaysOnListener listener)", "public void unregister(@NonNull ControllerAlwaysOnListener listener)", "private void sendCurrentState(@NonNull ControllerAlwaysOnListener listener)", "public void onControllerAlwaysOnChanged(boolean isEnabled)" ],
  "variableNames" : [ "TAG", "mAdapter", "mListenerMap", "mCurrentState", "mIsRegistered" ]
}