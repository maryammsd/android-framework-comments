{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/function/IntBinaryOperator.java",
  "packageName" : "java.util.function",
  "className" : "IntBinaryOperator",
  "comment" : "\n * Represents an operation upon two {@code int}-valued operands and producing an\n * {@code int}-valued result.   This is the primitive type specialization of\n * {@link BinaryOperator} for {@code int}.\n *\n * <p>This is a <a href=\"package-summary.html\">functional interface</a>\n * whose functional method is {@link #applyAsInt(int, int)}.\n *\n * @see BinaryOperator\n * @see IntUnaryOperator\n * @since 1.8\n ",
  "links" : [ "#applyAsInt(int", "java.util.function.BinaryOperator" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " int applyAsInt(int left, int right)",
    "returnType" : "int",
    "comment" : "\n     * Applies this operator to the given operands.\n     *\n     * @param left the first operand\n     * @param right the second operand\n     * @return the operator result\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " int applyAsInt(int left, int right)" ],
  "variableNames" : [ ]
}