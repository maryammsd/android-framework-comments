{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/TextViewTranslationCallback.java",
  "packageName" : "android.widget",
  "className" : "TextViewTranslationCallback",
  "comment" : "\n * Default implementation for {@link ViewTranslationCallback} for {@link TextView} components.\n * This class handles how to display the translated information for {@link TextView}.\n *\n * @hide\n ",
  "links" : [ "android.view.translation.ViewTranslationCallback", "android.widget.TextView" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTranslationTransformation",
    "type" : "TranslationTransformationMethod",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsShowingTranslation",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimationRunning",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsTextPaddingEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOriginalIsTextSelectable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOriginalFocusable",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOriginalFocusableInTouchMode",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOriginalClickable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOriginalLongClickable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPaddedText",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimationDurationMillis",
    "type" : "int",
    "comment" : " default value",
    "links" : [ ]
  }, {
    "name" : "mContentDescription",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "COMPAT_PAD_CHARACTER",
    "type" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAnimator",
    "type" : "ValueAnimator",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void clearTranslationTransformation()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onShowTranslation(@NonNull View view)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean onHideTranslation(@NonNull View view)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean onClearTranslation(@NonNull View view)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isShowingTranslation()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAnimationRunning()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the view is running animation to show or hide the translation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void enableContentPadding()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isTextPaddingEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether readers of the view text should receive padded text for compatibility\n     * reasons. The view's original text will be padded to match the length of the translated text.\n     ",
    "links" : [ ]
  }, {
    "name" : " CharSequence getPaddedText(CharSequence text, CharSequence translatedText)",
    "returnType" : "CharSequence",
    "comment" : "\n     * Returns the view's original text with padding added. If the translated text isn't longer than\n     * the original text, returns the original text itself.\n     *\n     * @param text the view's original text\n     * @param translatedText the view's translated text\n     * @see #isTextPaddingEnabled()\n     ",
    "links" : [ ]
  }, {
    "name" : "private CharSequence computePaddedText(CharSequence text, CharSequence translatedText)",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAnimationDurationMillis(int durationMillis)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void runChangeTextWithAnimationIfNeeded(TextView view, Runnable changeTextRunnable)",
    "returnType" : "void",
    "comment" : "\n     * Applies a simple text alpha animation when toggling between original and translated text. The\n     * text is fully faded out, then swapped to the new text, then the fading is reversed.\n     *\n     * @param changeTextRunnable the operation to run on the view after the text is faded out, to\n     * change to displaying the original or translated text.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int colorWithAlpha(int color, int newAlpha)",
    "returnType" : "int",
    "comment" : "\n     * Returns {@code color} with alpha changed to {@code newAlpha}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void clearTranslationTransformation()", "public boolean onShowTranslation(@NonNull View view)", "public boolean onHideTranslation(@NonNull View view)", "public boolean onClearTranslation(@NonNull View view)", "public boolean isShowingTranslation()", "public boolean isAnimationRunning()", "public void enableContentPadding()", " boolean isTextPaddingEnabled()", " CharSequence getPaddedText(CharSequence text, CharSequence translatedText)", "private CharSequence computePaddedText(CharSequence text, CharSequence translatedText)", "public void setAnimationDurationMillis(int durationMillis)", "private void runChangeTextWithAnimationIfNeeded(TextView view, Runnable changeTextRunnable)", "private static int colorWithAlpha(int color, int newAlpha)" ],
  "variableNames" : [ "TAG", "DEBUG", "mTranslationTransformation", "mIsShowingTranslation", "mAnimationRunning", "mIsTextPaddingEnabled", "mOriginalIsTextSelectable", "mOriginalFocusable", "mOriginalFocusableInTouchMode", "mOriginalClickable", "mOriginalLongClickable", "mPaddedText", "mAnimationDurationMillis", "mContentDescription", "COMPAT_PAD_CHARACTER", "mAnimator" ]
}