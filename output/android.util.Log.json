{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/Log.java",
  "packageName" : "android.util",
  "className" : "Log",
  "comment" : "\n * Mock Log implementation for testing on non android host.\n ",
  "variables" : [ {
    "name" : "VERBOSE",
    "type" : "int",
    "comment" : "\n     * Priority constant for the println method; use Log.v.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "int",
    "comment" : "\n     * Priority constant for the println method; use Log.d.\n     ",
    "links" : [ ]
  }, {
    "name" : "INFO",
    "type" : "int",
    "comment" : "\n     * Priority constant for the println method; use Log.i.\n     ",
    "links" : [ ]
  }, {
    "name" : "WARN",
    "type" : "int",
    "comment" : "\n     * Priority constant for the println method; use Log.w.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR",
    "type" : "int",
    "comment" : "\n     * Priority constant for the println method; use Log.e.\n     ",
    "links" : [ ]
  }, {
    "name" : "ASSERT",
    "type" : "int",
    "comment" : "\n     * Priority constant for the println method.\n     ",
    "links" : [ ]
  }, {
    "name" : "LOG_ID_MAIN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "LOG_ID_RADIO",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "LOG_ID_EVENTS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "LOG_ID_SYSTEM",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "LOG_ID_CRASH",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int v(String tag, String msg)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #VERBOSE} log message.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     ",
    "links" : [ "#VERBOSE" ]
  }, {
    "name" : "public static int v(String tag, String msg, Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #VERBOSE} log message and log the exception.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     * @param tr An exception to log\n     ",
    "links" : [ "#VERBOSE" ]
  }, {
    "name" : "public static int d(String tag, String msg)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #DEBUG} log message.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     ",
    "links" : [ "#DEBUG" ]
  }, {
    "name" : "public static int d(String tag, String msg, Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #DEBUG} log message and log the exception.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     * @param tr An exception to log\n     ",
    "links" : [ "#DEBUG" ]
  }, {
    "name" : "public static int i(String tag, String msg)",
    "returnType" : "int",
    "comment" : "\n     * Send an {@link #INFO} log message.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     ",
    "links" : [ "#INFO" ]
  }, {
    "name" : "public static int i(String tag, String msg, Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #INFO} log message and log the exception.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     * @param tr An exception to log\n     ",
    "links" : [ "#INFO" ]
  }, {
    "name" : "public static int w(String tag, String msg)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #WARN} log message.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     ",
    "links" : [ "#WARN" ]
  }, {
    "name" : "public static int w(String tag, String msg, Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #WARN} log message and log the exception.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     * @param tr An exception to log\n     ",
    "links" : [ "#WARN" ]
  }, {
    "name" : "public static int w(String tag, Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #WARN} log message and log the exception.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param tr An exception to log\n     ",
    "links" : [ "#WARN" ]
  }, {
    "name" : "public static int e(String tag, String msg)",
    "returnType" : "int",
    "comment" : "\n     * Send an {@link #ERROR} log message.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     ",
    "links" : [ "#ERROR" ]
  }, {
    "name" : "public static int e(String tag, String msg, Throwable tr)",
    "returnType" : "int",
    "comment" : "\n     * Send a {@link #ERROR} log message and log the exception.\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     * @param tr An exception to log\n     ",
    "links" : [ "#ERROR" ]
  }, {
    "name" : "public static String getStackTraceString(Throwable tr)",
    "returnType" : "String",
    "comment" : "\n     * Handy function to get a loggable stack trace from a Throwable\n     * @param tr An exception to log\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int println(int priority, String tag, String msg)",
    "returnType" : "int",
    "comment" : "\n     * Low-level logging call.\n     * @param priority The priority/type of this log message\n     * @param tag Used to identify the source of a log message.  It usually identifies\n     *        the class or activity where the log call occurs.\n     * @param msg The message you would like logged.\n     * @return The number of bytes written.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int println(int bufID, int priority, String tag, String msg)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "VERBOSE", "DEBUG", "INFO", "WARN", "ERROR", "ASSERT", "LOG_ID_MAIN", "LOG_ID_RADIO", "LOG_ID_EVENTS", "LOG_ID_SYSTEM", "LOG_ID_CRASH" ],
  "methodNames" : [ "public static int v(String tag, String msg)", "public static int v(String tag, String msg, Throwable tr)", "public static int d(String tag, String msg)", "public static int d(String tag, String msg, Throwable tr)", "public static int i(String tag, String msg)", "public static int i(String tag, String msg, Throwable tr)", "public static int w(String tag, String msg)", "public static int w(String tag, String msg, Throwable tr)", "public static int w(String tag, Throwable tr)", "public static int e(String tag, String msg)", "public static int e(String tag, String msg, Throwable tr)", "public static String getStackTraceString(Throwable tr)", "public static int println(int priority, String tag, String msg)", "public static int println(int bufID, int priority, String tag, String msg)" ]
}