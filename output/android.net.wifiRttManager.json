{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/RttManager.java",
  "packageName" : "android.net.wifi",
  "className" : "RttManager",
  "comment" : " @hide ",
  "variables" : [ {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_TYPE_UNSPECIFIED",
    "type" : "int",
    "comment" : " @deprecated It is Not supported anymore. ",
    "links" : [ ]
  }, {
    "name" : "RTT_TYPE_ONE_SIDED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_TYPE_TWO_SIDED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_TYPE_11_V",
    "type" : "int",
    "comment" : " @deprecated It is not supported anymore. ",
    "links" : [ ]
  }, {
    "name" : "RTT_TYPE_11_MC",
    "type" : "int",
    "comment" : " @deprecated It is not supported anymore. ",
    "links" : [ ]
  }, {
    "name" : "RTT_PEER_TYPE_UNSPECIFIED",
    "type" : "int",
    "comment" : " @deprecated It is not supported anymore. ",
    "links" : [ ]
  }, {
    "name" : "RTT_PEER_TYPE_AP",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_PEER_TYPE_STA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_PEER_P2P_GO",
    "type" : "int",
    "comment" : " requires NAN ",
    "links" : [ ]
  }, {
    "name" : "RTT_PEER_P2P_CLIENT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_PEER_NAN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_CHANNEL_WIDTH_20",
    "type" : "int",
    "comment" : "\n     * @deprecated It is not supported anymore.\n     * Use {@link android.net.wifi.RttManager#RTT_BW_20_SUPPORT} API.\n     ",
    "links" : [ "android.net.wifi.RttManager#RTT_BW_20_SUPPORT" ]
  }, {
    "name" : "RTT_CHANNEL_WIDTH_40",
    "type" : "int",
    "comment" : "\n     * @deprecated It is not supported anymore.\n     * Use {@link android.net.wifi.RttManager#RTT_BW_40_SUPPORT} API.\n     ",
    "links" : [ "android.net.wifi.RttManager#RTT_BW_40_SUPPORT" ]
  }, {
    "name" : "RTT_CHANNEL_WIDTH_80",
    "type" : "int",
    "comment" : "\n     * @deprecated It is not supported anymore.\n     * Use {@link android.net.wifi.RttManager#RTT_BW_80_SUPPORT} API.\n     ",
    "links" : [ "android.net.wifi.RttManager#RTT_BW_80_SUPPORT" ]
  }, {
    "name" : "RTT_CHANNEL_WIDTH_160",
    "type" : "int",
    "comment" : "@deprecated It is not supported anymore.\n     * Use {@link android.net.wifi.RttManager#RTT_BW_160_SUPPORT} API.\n     ",
    "links" : [ "android.net.wifi.RttManager#RTT_BW_160_SUPPORT" ]
  }, {
    "name" : "RTT_CHANNEL_WIDTH_80P80",
    "type" : "int",
    "comment" : "@deprecated not supported anymore",
    "links" : [ ]
  }, {
    "name" : "RTT_CHANNEL_WIDTH_5",
    "type" : "int",
    "comment" : "@deprecated It is not supported anymore.\n     * Use {@link android.net.wifi.RttManager#RTT_BW_5_SUPPORT} API.\n     ",
    "links" : [ "android.net.wifi.RttManager#RTT_BW_5_SUPPORT" ]
  }, {
    "name" : "RTT_CHANNEL_WIDTH_10",
    "type" : "int",
    "comment" : "@deprecated It is not supported anymore.\n     * Use {@link android.net.wifi.RttManager#RTT_BW_10_SUPPORT} API.\n     ",
    "links" : [ "android.net.wifi.RttManager#RTT_BW_10_SUPPORT" ]
  }, {
    "name" : "RTT_CHANNEL_WIDTH_UNSPECIFIED",
    "type" : "int",
    "comment" : " @deprecated channel info must be specified. ",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_SUCCESS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAILURE",
    "type" : "int",
    "comment" : " General failure",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_NO_RSP",
    "type" : "int",
    "comment" : " Destination does not respond to RTT request",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_REJECTED",
    "type" : "int",
    "comment" : " RTT request is rejected by the destination. Double side RTT only",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_NOT_SCHEDULED_YET",
    "type" : "int",
    "comment" : " ",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_TM_TIMEOUT",
    "type" : "int",
    "comment" : " Timing measurement timeout",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_AP_ON_DIFF_CHANNEL",
    "type" : "int",
    "comment" : " Destination is on a different channel from the RTT Request",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_NO_CAPABILITY",
    "type" : "int",
    "comment" : " This type of Ranging is not support by Hardware",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_ABORTED",
    "type" : "int",
    "comment" : " Request abort fro uncertain reason",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_INVALID_TS",
    "type" : "int",
    "comment" : " The T1-T4 or TOD/TOA Timestamp is illegal",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_PROTOCOL",
    "type" : "int",
    "comment" : " 11mc protocol level failed, eg, unrecognized FTMR/FTM frame",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_SCHEDULE",
    "type" : "int",
    "comment" : " Request can not be scheduled by hardware",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_BUSY_TRY_LATER",
    "type" : "int",
    "comment" : " destination is busy now, you can try after a specified time from destination",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_INVALID_REQ",
    "type" : "int",
    "comment" : " Bad Request argument",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_NO_WIFI",
    "type" : "int",
    "comment" : " Wifi is not enabled",
    "links" : [ ]
  }, {
    "name" : "RTT_STATUS_FAIL_FTM_PARAM_OVERRIDE",
    "type" : "int",
    "comment" : " Responder overrides param info, cannot range with new params 2-side RTT only",
    "links" : [ ]
  }, {
    "name" : "REASON_UNSPECIFIED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "REASON_NOT_AVAILABLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "REASON_INVALID_LISTENER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "REASON_INVALID_REQUEST",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "REASON_PERMISSION_DENIED",
    "type" : "int",
    "comment" : " Do not have required permission ",
    "links" : [ ]
  }, {
    "name" : "REASON_INITIATOR_NOT_ALLOWED_WHEN_RESPONDER_ON",
    "type" : "int",
    "comment" : " Ranging failed because responder role is enabled in STA mode.",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTION_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_BW_5_SUPPORT",
    "type" : "int",
    "comment" : "\n     * RTT BW supported bit mask, used as RTT param bandWidth too\n     ",
    "links" : [ ]
  }, {
    "name" : "RTT_BW_10_SUPPORT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_BW_20_SUPPORT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_BW_40_SUPPORT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_BW_80_SUPPORT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RTT_BW_160_SUPPORT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PREAMBLE_LEGACY",
    "type" : "int",
    "comment" : "\n     * RTT Preamble Support bit mask\n     ",
    "links" : [ ]
  }, {
    "name" : "PREAMBLE_HT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PREAMBLE_VHT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BASE",
    "type" : "int",
    "comment" : " private methods ",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_START_RANGING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_STOP_RANGING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_FAILED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_SUCCEEDED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_ABORTED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_ENABLE_RESPONDER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_DISABLE_RESPONDER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_ENALBE_RESPONDER_SUCCEEDED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_ENALBE_RESPONDER_FAILED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CMD_OP_REG_BINDER",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mNewService",
    "type" : "WifiRttManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRttCapabilities",
    "type" : "RttCapabilities",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Capabilities getCapabilities()",
    "returnType" : "Capabilities",
    "comment" : " @deprecated Use the new {@link android.net.wifi.RttManager#getRttCapabilities()} API.",
    "links" : [ "android.net.wifi.RttManager#getRttCapabilities" ]
  }, {
    "name" : "public RttCapabilities getRttCapabilities()",
    "returnType" : "RttCapabilities",
    "comment" : "\n     * This method is deprecated. Please use the {@link WifiRttManager} API.\n     ",
    "links" : [ "WifiRttManager" ]
  }, {
    "name" : "public void startRanging(RttParams[] params, RttListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Request to start an RTT ranging\n     * <p>\n     * This method is deprecated. Please use the\n     * {@link WifiRttManager#startRanging(RangingRequest, java.util.concurrent.Executor, RangingResultCallback)}\n     * API.\n     *\n     * @param params  -- RTT request Parameters\n     * @param listener -- Call back to inform RTT result\n     * @exception throw IllegalArgumentException when params are illegal\n     *            throw IllegalStateException when RttCapabilities do not exist\n     ",
    "links" : [ "WifiRttManager#startRanging" ]
  }, {
    "name" : "public void stopRanging(RttListener listener)",
    "returnType" : "void",
    "comment" : "\n     * This method is deprecated and performs no function. Please use the {@link WifiRttManager}\n     * API.\n     ",
    "links" : [ "WifiRttManager" ]
  }, {
    "name" : "public void enableResponder(ResponderCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Enable Wi-Fi RTT responder mode on the device. The enabling result will be delivered via\n     * {@code callback}.\n     * <p>\n     * Note calling this method with the same callback when the responder is already enabled won't\n     * change the responder state, a cached {@link ResponderConfig} from the last enabling will be\n     * returned through the callback.\n     * <p>\n     * This method is deprecated and will throw an {@link UnsupportedOperationException}\n     * exception. Please use the {@link WifiRttManager} API to perform a Wi-Fi Aware peer-to-peer\n     * ranging.\n     *\n     * @param callback Callback for responder enabling/disabling result.\n     * @throws IllegalArgumentException If {@code callback} is null.\n     ",
    "links" : [ "ResponderConfig", "UnsupportedOperationException", "WifiRttManager" ]
  }, {
    "name" : "public void disableResponder(ResponderCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Disable Wi-Fi RTT responder mode on the device. The {@code callback} needs to be the\n     * same one used in {@link #enableResponder(ResponderCallback)}.\n     * <p>\n     * Calling this method when responder isn't enabled won't have any effect. The callback can be\n     * reused for enabling responder after this method is called.\n     * <p>\n     * This method is deprecated and will throw an {@link UnsupportedOperationException}\n     * exception. Please use the {@link WifiRttManager} API to perform a Wi-Fi Aware peer-to-peer\n     * ranging.\n     *\n     * @param callback The same callback used for enabling responder.\n     * @throws IllegalArgumentException If {@code callback} is null.\n     ",
    "links" : [ "#enableResponder", "UnsupportedOperationException", "WifiRttManager" ]
  } ],
  "variableNames" : [ "DBG", "TAG", "RTT_TYPE_UNSPECIFIED", "RTT_TYPE_ONE_SIDED", "RTT_TYPE_TWO_SIDED", "RTT_TYPE_11_V", "RTT_TYPE_11_MC", "RTT_PEER_TYPE_UNSPECIFIED", "RTT_PEER_TYPE_AP", "RTT_PEER_TYPE_STA", "RTT_PEER_P2P_GO", "RTT_PEER_P2P_CLIENT", "RTT_PEER_NAN", "RTT_CHANNEL_WIDTH_20", "RTT_CHANNEL_WIDTH_40", "RTT_CHANNEL_WIDTH_80", "RTT_CHANNEL_WIDTH_160", "RTT_CHANNEL_WIDTH_80P80", "RTT_CHANNEL_WIDTH_5", "RTT_CHANNEL_WIDTH_10", "RTT_CHANNEL_WIDTH_UNSPECIFIED", "RTT_STATUS_SUCCESS", "RTT_STATUS_FAILURE", "RTT_STATUS_FAIL_NO_RSP", "RTT_STATUS_FAIL_REJECTED", "RTT_STATUS_FAIL_NOT_SCHEDULED_YET", "RTT_STATUS_FAIL_TM_TIMEOUT", "RTT_STATUS_FAIL_AP_ON_DIFF_CHANNEL", "RTT_STATUS_FAIL_NO_CAPABILITY", "RTT_STATUS_ABORTED", "RTT_STATUS_FAIL_INVALID_TS", "RTT_STATUS_FAIL_PROTOCOL", "RTT_STATUS_FAIL_SCHEDULE", "RTT_STATUS_FAIL_BUSY_TRY_LATER", "RTT_STATUS_INVALID_REQ", "RTT_STATUS_NO_WIFI", "RTT_STATUS_FAIL_FTM_PARAM_OVERRIDE", "REASON_UNSPECIFIED", "REASON_NOT_AVAILABLE", "REASON_INVALID_LISTENER", "REASON_INVALID_REQUEST", "REASON_PERMISSION_DENIED", "REASON_INITIATOR_NOT_ALLOWED_WHEN_RESPONDER_ON", "DESCRIPTION_KEY", "RTT_BW_5_SUPPORT", "RTT_BW_10_SUPPORT", "RTT_BW_20_SUPPORT", "RTT_BW_40_SUPPORT", "RTT_BW_80_SUPPORT", "RTT_BW_160_SUPPORT", "PREAMBLE_LEGACY", "PREAMBLE_HT", "PREAMBLE_VHT", "BASE", "CMD_OP_START_RANGING", "CMD_OP_STOP_RANGING", "CMD_OP_FAILED", "CMD_OP_SUCCEEDED", "CMD_OP_ABORTED", "CMD_OP_ENABLE_RESPONDER", "CMD_OP_DISABLE_RESPONDER", "CMD_OP_ENALBE_RESPONDER_SUCCEEDED", "CMD_OP_ENALBE_RESPONDER_FAILED", "CMD_OP_REG_BINDER", "mNewService", "mContext", "mRttCapabilities" ],
  "methodNames" : [ "public Capabilities getCapabilities()", "public RttCapabilities getRttCapabilities()", "public void startRanging(RttParams[] params, RttListener listener)", "public void stopRanging(RttListener listener)", "public void enableResponder(ResponderCallback callback)", "public void disableResponder(ResponderCallback callback)" ]
}