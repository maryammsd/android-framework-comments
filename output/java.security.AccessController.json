{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/AccessController.java",
  "packageName" : "java.security",
  "className" : "AccessController",
  "comment" : "\n * Android doesn't support {@link SecurityManager}. Do not use this class.\n ",
  "links" : [ "SecurityManager" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static T doPrivileged(PrivilegedAction<T> action)",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivilegedWithCombiner(PrivilegedAction<T> action)",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivileged(PrivilegedAction<T> action, AccessControlContext context)",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivilegedWithCombiner(PrivilegedAction<T> action, AccessControlContext context, Permission... perms)",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivileged(PrivilegedExceptionAction<T> action) throws PrivilegedActionException",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivilegedWithCombiner(PrivilegedExceptionAction<T> action) throws PrivilegedActionException",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivileged(PrivilegedExceptionAction<T> action, AccessControlContext context) throws PrivilegedActionException",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivileged(PrivilegedExceptionAction<T> action, AccessControlContext context, Permission... perms) throws PrivilegedActionException",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivilegedWithCombiner(PrivilegedExceptionAction<T> action, AccessControlContext context, Permission... perms) throws PrivilegedActionException",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static T doPrivileged(PrivilegedAction<T> action, AccessControlContext context, Permission... perms)",
    "returnType" : "T",
    "comment" : "\n     * Calls {@code action.run()}.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static AccessControlContext getContext()",
    "returnType" : "AccessControlContext",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void checkPermission(Permission perm) throws AccessControlException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static T doPrivileged(PrivilegedAction<T> action)", "public static T doPrivilegedWithCombiner(PrivilegedAction<T> action)", "public static T doPrivileged(PrivilegedAction<T> action, AccessControlContext context)", "public static T doPrivilegedWithCombiner(PrivilegedAction<T> action, AccessControlContext context, Permission... perms)", "public static T doPrivileged(PrivilegedExceptionAction<T> action) throws PrivilegedActionException", "public static T doPrivilegedWithCombiner(PrivilegedExceptionAction<T> action) throws PrivilegedActionException", "public static T doPrivileged(PrivilegedExceptionAction<T> action, AccessControlContext context) throws PrivilegedActionException", "public static T doPrivileged(PrivilegedExceptionAction<T> action, AccessControlContext context, Permission... perms) throws PrivilegedActionException", "public static T doPrivilegedWithCombiner(PrivilegedExceptionAction<T> action, AccessControlContext context, Permission... perms) throws PrivilegedActionException", "public static T doPrivileged(PrivilegedAction<T> action, AccessControlContext context, Permission... perms)", "public static AccessControlContext getContext()", "public static void checkPermission(Permission perm) throws AccessControlException" ],
  "variableNames" : [ ]
}