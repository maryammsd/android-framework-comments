{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/uwb/RangingSession.java",
  "packageName" : "android.uwb",
  "className" : "Callback",
  "comment" : "\n     * Interface for receiving {@link RangingSession} events\n     ",
  "links" : [ "android.uwb.RangingSession" ],
  "variables" : [ {
    "name" : "REASON_UNKNOWN",
    "type" : "int",
    "comment" : "\n         * Indicates that the session was closed or failed to open due to an unknown reason\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_LOCAL_REQUEST",
    "type" : "int",
    "comment" : "\n         * Indicates that the session was closed or failed to open because\n         * {@link AutoCloseable#close()} or {@link RangingSession#close()} was called\n         ",
    "links" : [ "#close()", "android.uwb.RangingSession#close()" ]
  }, {
    "name" : "REASON_REMOTE_REQUEST",
    "type" : "int",
    "comment" : "\n         * Indicates that the session was closed or failed to open due to an explicit request from\n         * the remote device.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_BAD_PARAMETERS",
    "type" : "int",
    "comment" : "\n         * Indicates that the session was closed or failed to open due to erroneous parameters\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_GENERIC_ERROR",
    "type" : "int",
    "comment" : "\n         * Indicates an error on this device besides the error code already listed\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_MAX_SESSIONS_REACHED",
    "type" : "int",
    "comment" : "\n         * Indicates that the number of currently open sessions supported by the device and\n         * additional sessions may not be opened.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_SYSTEM_POLICY",
    "type" : "int",
    "comment" : "\n         * Indicates that the local system policy caused the change, such\n         * as privacy policy, power management policy, permissions, and more.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_PROTOCOL_SPECIFIC_ERROR",
    "type" : "int",
    "comment" : "\n         * Indicates a protocol specific error. The associated {@link PersistableBundle} should be\n         * consulted for additional information.\n         ",
    "links" : [ "android.os.PersistableBundle" ]
  }, {
    "name" : "REASON_MAX_RR_RETRY_REACHED",
    "type" : "int",
    "comment" : "\n         * Indicates that the max number of retry attempts for a ranging attempt has been reached.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_SERVICE_DISCOVERY_FAILURE",
    "type" : "int",
    "comment" : "\n         * Indicates a failure to discover the service after activation.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_SERVICE_CONNECTION_FAILURE",
    "type" : "int",
    "comment" : "\n         * Indicates a failure to connect to the service after discovery.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_SE_NOT_SUPPORTED",
    "type" : "int",
    "comment" : "\n         * The device doesnâ€™t support FiRA Applet.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_SE_INTERACTION_FAILURE",
    "type" : "int",
    "comment" : "\n         * SE interactions failed.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_INSUFFICIENT_SLOTS_PER_RR",
    "type" : "int",
    "comment" : "\n         * Indicate insufficient slots per ranging round.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_SYSTEM_REGULATION",
    "type" : "int",
    "comment" : "\n         * Indicate that a system regulation caused the change, such as no allowed UWB channels in\n         * the country.\n         ",
    "links" : [ ]
  }, {
    "name" : "REASON_INBAND_SESSION_STOP",
    "type" : "int",
    "comment" : "\n         * Indicates session was stopped due to inband signal.\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTROLEE_FAILURE_REASON_MAX_CONTROLEE_REACHED",
    "type" : "int",
    "comment" : "\n         * Indicates that the session has reached the max number of controlees supported by the\n         * device. This is applicable to only one to many sessions and sent in response to a\n         * request to add a new controlee to an ongoing session.\n         ",
    "links" : [ ]
  }, {
    "name" : "DATA_FAILURE_REASON_DATA_SIZE_TOO_LARGE",
    "type" : "int",
    "comment" : "\n         * Indicates that the size of the data being sent or received is too large.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void onOpened(@NonNull RangingSession session)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when {@link UwbManager#openRangingSession(PersistableBundle, Executor, Callback)}\n         * is successful\n         *\n         * @param session the newly opened {@link RangingSession}\n         ",
    "links" : [ "android.uwb.UwbManager#openRangingSession(PersistableBundle", "android.uwb.RangingSession" ]
  }, {
    "name" : " void onOpenFailed(@Reason int reason, @NonNull PersistableBundle params)",
    "returnType" : "void",
    "comment" : "\n         * Invoked if {@link UwbManager#openRangingSession(PersistableBundle, Executor, Callback)}}\n         * fails\n         *\n         * @param reason the failure reason\n         * @param params protocol specific parameters\n         ",
    "links" : [ "android.uwb.UwbManager#openRangingSession(PersistableBundle" ]
  }, {
    "name" : " void onStarted(@NonNull PersistableBundle sessionInfo)",
    "returnType" : "void",
    "comment" : "\n         * Invoked either,\n         *  - when {@link RangingSession#start(PersistableBundle)} is successful if the session is\n         *    using a custom profile, OR\n         *  - when platform starts ranging after OOB discovery + negotiation if the session is\n         *    using a platform defined profile.\n         * @param sessionInfo session specific parameters from the lower layers\n         ",
    "links" : [ "android.uwb.RangingSession#start(PersistableBundle)" ]
  }, {
    "name" : " void onStartFailed(@Reason int reason, @NonNull PersistableBundle params)",
    "returnType" : "void",
    "comment" : "\n         * Invoked either,\n         *   - when {@link RangingSession#start(PersistableBundle)} fails if\n         *     the session is using a custom profile, OR\n         *   - when platform fails ranging after OOB discovery + negotiation if the\n         *     session is using a platform defined profile.\n         *\n         * @param reason the failure reason\n         * @param params protocol specific parameters\n         ",
    "links" : [ "android.uwb.RangingSession#start(PersistableBundle)" ]
  }, {
    "name" : " void onReconfigured(@NonNull PersistableBundle params)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a request to reconfigure the session succeeds\n         *\n         * @param params the updated ranging configuration\n         ",
    "links" : [ ]
  }, {
    "name" : " void onReconfigureFailed(@Reason int reason, @NonNull PersistableBundle params)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a request to reconfigure the session fails\n         *\n         * @param reason reason the session failed to be reconfigured\n         * @param params protocol specific failure reasons\n         ",
    "links" : [ ]
  }, {
    "name" : " void onStopped(@Reason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a request to stop the session succeeds\n         *\n         * @param reason reason for the session stop\n         * @param parameters protocol specific parameters related to the stop reason\n         ",
    "links" : [ ]
  }, {
    "name" : " void onStopFailed(@Reason int reason, @NonNull PersistableBundle params)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a request to stop the session fails\n         *\n         * @param reason reason the session failed to be stopped\n         * @param params protocol specific failure reasons\n         ",
    "links" : [ ]
  }, {
    "name" : " void onClosed(@Reason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when session is either closed spontaneously, or per user request via\n         * {@link RangingSession#close()} or {@link AutoCloseable#close()}.\n         *\n         * @param reason reason for the session closure\n         * @param parameters protocol specific parameters related to the close reason\n         ",
    "links" : [ "#close()", "android.uwb.RangingSession#close()" ]
  }, {
    "name" : " void onReportReceived(@NonNull RangingReport rangingReport)",
    "returnType" : "void",
    "comment" : "\n         * Called once per ranging interval even when a ranging measurement fails\n         *\n         * @param rangingReport ranging report for this interval's measurements\n         ",
    "links" : [ ]
  }, {
    "name" : " void onControleeAdded(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a new controlee is added to an ongoing one-to many session.\n         *\n         * @param parameters protocol specific parameters for the new controlee\n         ",
    "links" : [ ]
  }, {
    "name" : " void onControleeAddFailed(@ControleeFailureReason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a new controlee is added to an ongoing one-to many session.\n         *\n         * @param reason reason for the controlee add failure\n         * @param parameters protocol specific parameters related to the failure\n         ",
    "links" : [ ]
  }, {
    "name" : " void onControleeRemoved(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when an existing controlee is removed from an ongoing one-to many session.\n         *\n         * @param parameters protocol specific parameters for the existing controlee\n         ",
    "links" : [ ]
  }, {
    "name" : " void onControleeRemoveFailed(@ControleeFailureReason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a new controlee is added to an ongoing one-to many session.\n         *\n         * @param reason reason for the controlee remove failure\n         * @param parameters protocol specific parameters related to the failure\n         ",
    "links" : [ ]
  }, {
    "name" : " void onPaused(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when an ongoing session is successfully pauseed.\n         *\n         * @param parameters protocol specific parameters sent for suspension\n         ",
    "links" : [ ]
  }, {
    "name" : " void onPauseFailed(@Reason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when an ongoing session suspension fails.\n         *\n         * @param reason reason for the suspension failure\n         * @param parameters protocol specific parameters for suspension failure\n         ",
    "links" : [ ]
  }, {
    "name" : " void onResumed(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a pauseed session is successfully resumed.\n         *\n         * @param parameters protocol specific parameters sent for suspension\n         ",
    "links" : [ ]
  }, {
    "name" : " void onResumeFailed(@Reason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a pauseed session resumption fails.\n         *\n         * @param reason reason for the resumption failure\n         * @param parameters protocol specific parameters for resumption failure\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDataSent(@NonNull UwbAddress remoteDeviceAddress, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when data is successfully sent via {@link RangingSession#sendData(UwbAddress,\n         * PersistableBundle, byte[])}.\n         *\n         * @param remoteDeviceAddress remote device's address\n         * @param parameters protocol specific parameters sent for suspension\n         ",
    "links" : [ "android.uwb.RangingSession#sendData(UwbAddress" ]
  }, {
    "name" : " void onDataSendFailed(@NonNull UwbAddress remoteDeviceAddress, @DataFailureReason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when data send to a remote device via {@link RangingSession#sendData(UwbAddress,\n         * PersistableBundle, byte[])} fails.\n         *\n         * @param remoteDeviceAddress remote device's address\n         * @param reason reason for the resumption failure\n         * @param parameters protocol specific parameters for resumption failure\n         ",
    "links" : [ "android.uwb.RangingSession#sendData(UwbAddress" ]
  }, {
    "name" : " void onDataReceived(@NonNull UwbAddress remoteDeviceAddress, @NonNull PersistableBundle parameters, @NonNull byte[] data)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when data is received successfully from a remote device.\n         * The data is received piggybacked over RRM (initiator -> responder) or\n         * RIM (responder -> initiator).\n         * <p> This is only functional on a FIRA 2.0 compliant device.\n         *\n         * @param remoteDeviceAddress remote device's address\n         * @param data Raw data received\n         * @param parameters protocol specific parameters for the received data\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDataReceiveFailed(@NonNull UwbAddress remoteDeviceAddress, @DataFailureReason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when data receive from a remote device fails.\n         *\n         * @param remoteDeviceAddress remote device's address\n         * @param reason reason for the reception failure\n         * @param parameters protocol specific parameters for resumption failure\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDataTransferPhaseConfigured(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when set data transfer phase config is called successfully\n         *\n         * @param parameters protocol specific parameters for set data transfer phase config success\n         ",
    "links" : [ ]
  }, {
    "name" : " void onDataTransferPhaseConfigFailed(@Reason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when set data transfer phase config is failed\n         *\n         * @param parameters protocol specific parameters for set data transfer phase config failure\n         ",
    "links" : [ ]
  }, {
    "name" : " void onServiceDiscovered(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when service is discovered via OOB.\n         * <p>\n         * If this a one to many session, this can be invoked multiple times to indicate different\n         * peers being discovered.\n         * </p>\n         *\n         * @param parameters protocol specific params for discovered service.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onServiceConnected(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when service is connected via OOB.\n         * <p>\n         * If this a one to many session, this can be invoked multiple times to indicate different\n         * peers being connected.\n         * </p>\n         *\n         * @param parameters protocol specific params for connected service.\n         ",
    "links" : [ ]
  }, {
    "name" : " void onRangingRoundsUpdateDtTagStatus(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when a response/status is received for active ranging rounds update.\n         *\n         * @param parameters bundle of ranging rounds update status\n         ",
    "links" : [ ]
  }, {
    "name" : " void onHybridSessionControllerConfigured(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when hybrid session controller is successfully configured.\n         *\n         * @param parameters protocol specific parameters sent for HUS session configuration\n         ",
    "links" : [ ]
  }, {
    "name" : " void onHybridSessionControllerConfigurationFailed(@RangingChangeReason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when hybrid session controller configuration fails.\n         *\n         * @param parameters protocol specific parameters for configuration failure\n         ",
    "links" : [ ]
  }, {
    "name" : " void onHybridSessionControleeConfigured(@NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * Invoked when hybrid session controlee is successfully configured.\n         *\n         * @param parameters protocol specific parameters sent for HUS session configuration\n         ",
    "links" : [ ]
  }, {
    "name" : " void onHybridSessionControleeConfigurationFailed(@RangingChangeReason int reason, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "\n         *Invoked when hybrid session controlee configuration fails.\n         *\n         * @param parameters protocol specific parameters for configuration failure\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void onOpened(@NonNull RangingSession session)", " void onOpenFailed(@Reason int reason, @NonNull PersistableBundle params)", " void onStarted(@NonNull PersistableBundle sessionInfo)", " void onStartFailed(@Reason int reason, @NonNull PersistableBundle params)", " void onReconfigured(@NonNull PersistableBundle params)", " void onReconfigureFailed(@Reason int reason, @NonNull PersistableBundle params)", " void onStopped(@Reason int reason, @NonNull PersistableBundle parameters)", " void onStopFailed(@Reason int reason, @NonNull PersistableBundle params)", " void onClosed(@Reason int reason, @NonNull PersistableBundle parameters)", " void onReportReceived(@NonNull RangingReport rangingReport)", " void onControleeAdded(@NonNull PersistableBundle parameters)", " void onControleeAddFailed(@ControleeFailureReason int reason, @NonNull PersistableBundle parameters)", " void onControleeRemoved(@NonNull PersistableBundle parameters)", " void onControleeRemoveFailed(@ControleeFailureReason int reason, @NonNull PersistableBundle parameters)", " void onPaused(@NonNull PersistableBundle parameters)", " void onPauseFailed(@Reason int reason, @NonNull PersistableBundle parameters)", " void onResumed(@NonNull PersistableBundle parameters)", " void onResumeFailed(@Reason int reason, @NonNull PersistableBundle parameters)", " void onDataSent(@NonNull UwbAddress remoteDeviceAddress, @NonNull PersistableBundle parameters)", " void onDataSendFailed(@NonNull UwbAddress remoteDeviceAddress, @DataFailureReason int reason, @NonNull PersistableBundle parameters)", " void onDataReceived(@NonNull UwbAddress remoteDeviceAddress, @NonNull PersistableBundle parameters, @NonNull byte[] data)", " void onDataReceiveFailed(@NonNull UwbAddress remoteDeviceAddress, @DataFailureReason int reason, @NonNull PersistableBundle parameters)", " void onDataTransferPhaseConfigured(@NonNull PersistableBundle parameters)", " void onDataTransferPhaseConfigFailed(@Reason int reason, @NonNull PersistableBundle parameters)", " void onServiceDiscovered(@NonNull PersistableBundle parameters)", " void onServiceConnected(@NonNull PersistableBundle parameters)", " void onRangingRoundsUpdateDtTagStatus(@NonNull PersistableBundle parameters)", " void onHybridSessionControllerConfigured(@NonNull PersistableBundle parameters)", " void onHybridSessionControllerConfigurationFailed(@RangingChangeReason int reason, @NonNull PersistableBundle parameters)", " void onHybridSessionControleeConfigured(@NonNull PersistableBundle parameters)", " void onHybridSessionControleeConfigurationFailed(@RangingChangeReason int reason, @NonNull PersistableBundle parameters)" ],
  "variableNames" : [ "REASON_UNKNOWN", "REASON_LOCAL_REQUEST", "REASON_REMOTE_REQUEST", "REASON_BAD_PARAMETERS", "REASON_GENERIC_ERROR", "REASON_MAX_SESSIONS_REACHED", "REASON_SYSTEM_POLICY", "REASON_PROTOCOL_SPECIFIC_ERROR", "REASON_MAX_RR_RETRY_REACHED", "REASON_SERVICE_DISCOVERY_FAILURE", "REASON_SERVICE_CONNECTION_FAILURE", "REASON_SE_NOT_SUPPORTED", "REASON_SE_INTERACTION_FAILURE", "REASON_INSUFFICIENT_SLOTS_PER_RR", "REASON_SYSTEM_REGULATION", "REASON_INBAND_SESSION_STOP", "CONTROLEE_FAILURE_REASON_MAX_CONTROLEE_REACHED", "DATA_FAILURE_REASON_DATA_SIZE_TOO_LARGE" ]
}