{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/WindowlessWindowManager.java",
  "packageName" : "android.view",
  "className" : "WindowlessWindowManager",
  "comment" : "\n* A simplistic implementation of IWindowSession. Rather than managing Surfaces\n* as children of the display, it manages Surfaces as children of a given root.\n*\n* By parcelling the root surface, the app can offer another app content for embedding.\n* @hide\n",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStateForWindow",
    "type" : "HashMap<IBinder, State>",
    "comment" : "\n     * Used to store SurfaceControl we've built for clients to\n     * reconfigure them if relayout is called.\n     ",
    "links" : [ ]
  }, {
    "name" : "mResizeCompletionForWindow",
    "type" : "HashMap<IBinder, ResizeCompleteCallback>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSurfaceSession",
    "type" : "SurfaceSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRootSurface",
    "type" : "SurfaceControl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfiguration",
    "type" : "Configuration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRealWm",
    "type" : "IWindowSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHostInputToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mForceHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mForceWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void setConfiguration(Configuration configuration)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setCompletionCallback(IBinder window, ResizeCompleteCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Utility API.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void setTouchRegion(IBinder window, @Nullable Region region)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int addToDisplay(IWindow window, int seq, WindowManager.LayoutParams attrs, int viewVisibility, int displayId, Rect outFrame, Rect outContentInsets, Rect outStableInsets, DisplayCutout.ParcelableWrapper outDisplayCutout, InputChannel outInputChannel, InsetsState outInsetsState, InsetsSourceControl[] outActiveControls)",
    "returnType" : "int",
    "comment" : "\n     * IWindowSession implementation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int addToDisplayAsUser(IWindow window, int seq, WindowManager.LayoutParams attrs, int viewVisibility, int displayId, int userId, Rect outFrame, Rect outContentInsets, Rect outStableInsets, DisplayCutout.ParcelableWrapper outDisplayCutout, InputChannel outInputChannel, InsetsState outInsetsState, InsetsSourceControl[] outActiveControls)",
    "returnType" : "int",
    "comment" : "\n     * IWindowSession implementation. Currently this class doesn't need to support for multi-user.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int addToDisplayWithoutInputChannel(android.view.IWindow window, int seq, android.view.WindowManager.LayoutParams attrs, int viewVisibility, int layerStackId, android.graphics.Rect outContentInsets, android.graphics.Rect outStableInsets, android.view.InsetsState insetsState)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void remove(android.view.IWindow window) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isOpaque(WindowManager.LayoutParams attrs)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected SurfaceControl getSurfaceControl(View rootView)",
    "returnType" : "SurfaceControl",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int relayout(IWindow window, int seq, WindowManager.LayoutParams inAttrs, int requestedWidth, int requestedHeight, int viewFlags, int flags, long frameNumber, Rect outFrame, Rect outContentInsets, Rect outVisibleInsets, Rect outStableInsets, Rect outBackdropFrame, DisplayCutout.ParcelableWrapper cutout, MergedConfiguration mergedConfiguration, SurfaceControl outSurfaceControl, InsetsState outInsetsState, InsetsSourceControl[] outActiveControls, Point outSurfaceSize, SurfaceControl outBLASTSurfaceControl)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void prepareToReplaceWindows(android.os.IBinder appToken, boolean childrenOnly)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean outOfMemory(android.view.IWindow window)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTransparentRegion(android.view.IWindow window, android.graphics.Region region)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setInsets(android.view.IWindow window, int touchableInsets, android.graphics.Rect contentInsets, android.graphics.Rect visibleInsets, android.graphics.Region touchableRegion)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getDisplayFrame(android.view.IWindow window, android.graphics.Rect outDisplayFrame)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishDrawing(android.view.IWindow window, android.view.SurfaceControl.Transaction postDrawTransaction)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setInTouchMode(boolean showFocus)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean getInTouchMode()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean performHapticFeedback(int effectId, boolean always)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.os.IBinder performDrag(android.view.IWindow window, int flags, android.view.SurfaceControl surface, int touchSource, float touchX, float touchY, float thumbCenterX, float thumbCenterY, android.content.ClipData data)",
    "returnType" : "android.os.IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void reportDropResult(android.view.IWindow window, boolean consumed)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancelDragAndDrop(android.os.IBinder dragToken, boolean skipAnimation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dragRecipientEntered(android.view.IWindow window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dragRecipientExited(android.view.IWindow window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setWallpaperPosition(android.os.IBinder windowToken, float x, float y, float xstep, float ystep)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setWallpaperZoomOut(android.os.IBinder windowToken, float zoom)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setShouldZoomOutWallpaper(android.os.IBinder windowToken, boolean shouldZoom)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void wallpaperOffsetsComplete(android.os.IBinder window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setWallpaperDisplayOffset(android.os.IBinder windowToken, int x, int y)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.os.Bundle sendWallpaperCommand(android.os.IBinder window, java.lang.String action, int x, int y, int z, android.os.Bundle extras, boolean sync)",
    "returnType" : "android.os.Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void wallpaperCommandComplete(android.os.IBinder window, android.os.Bundle result)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRectangleOnScreenRequested(android.os.IBinder token, android.graphics.Rect rectangle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.view.IWindowId getWindowId(android.os.IBinder window)",
    "returnType" : "android.view.IWindowId",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void pokeDrawLock(android.os.IBinder window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean startMovingTask(android.view.IWindow window, float startX, float startY)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishMovingTask(android.view.IWindow window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updatePointerIcon(android.view.IWindow window)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void reparentDisplayContent(android.view.IWindow window, android.view.SurfaceControl sc, int displayId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateDisplayContentLocation(android.view.IWindow window, int x, int y, int displayId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateTapExcludeRegion(android.view.IWindow window, android.graphics.Region region)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void insetsModified(android.view.IWindow window, android.view.InsetsState state)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void reportSystemGestureExclusionChanged(android.view.IWindow window, java.util.List<android.graphics.Rect> exclusionRects)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void grantInputChannel(int displayId, SurfaceControl surface, IWindow window, IBinder hostInputToken, int flags, int type, InputChannel outInputChannel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateInputChannel(IBinder channelToken, int displayId, SurfaceControl surface, int flags, Region region)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.os.IBinder asBinder()",
    "returnType" : "android.os.IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getSurfaceWidth(WindowManager.LayoutParams attrs)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getSurfaceHeight(WindowManager.LayoutParams attrs)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mStateForWindow", "mResizeCompletionForWindow", "mSurfaceSession", "mRootSurface", "mConfiguration", "mRealWm", "mHostInputToken", "mForceHeight", "mForceWidth" ],
  "methodNames" : [ "protected void setConfiguration(Configuration configuration)", " void setCompletionCallback(IBinder window, ResizeCompleteCallback callback)", "protected void setTouchRegion(IBinder window, @Nullable Region region)", "public int addToDisplay(IWindow window, int seq, WindowManager.LayoutParams attrs, int viewVisibility, int displayId, Rect outFrame, Rect outContentInsets, Rect outStableInsets, DisplayCutout.ParcelableWrapper outDisplayCutout, InputChannel outInputChannel, InsetsState outInsetsState, InsetsSourceControl[] outActiveControls)", "public int addToDisplayAsUser(IWindow window, int seq, WindowManager.LayoutParams attrs, int viewVisibility, int displayId, int userId, Rect outFrame, Rect outContentInsets, Rect outStableInsets, DisplayCutout.ParcelableWrapper outDisplayCutout, InputChannel outInputChannel, InsetsState outInsetsState, InsetsSourceControl[] outActiveControls)", "public int addToDisplayWithoutInputChannel(android.view.IWindow window, int seq, android.view.WindowManager.LayoutParams attrs, int viewVisibility, int layerStackId, android.graphics.Rect outContentInsets, android.graphics.Rect outStableInsets, android.view.InsetsState insetsState)", "public void remove(android.view.IWindow window) throws RemoteException", "private boolean isOpaque(WindowManager.LayoutParams attrs)", "protected SurfaceControl getSurfaceControl(View rootView)", "public int relayout(IWindow window, int seq, WindowManager.LayoutParams inAttrs, int requestedWidth, int requestedHeight, int viewFlags, int flags, long frameNumber, Rect outFrame, Rect outContentInsets, Rect outVisibleInsets, Rect outStableInsets, Rect outBackdropFrame, DisplayCutout.ParcelableWrapper cutout, MergedConfiguration mergedConfiguration, SurfaceControl outSurfaceControl, InsetsState outInsetsState, InsetsSourceControl[] outActiveControls, Point outSurfaceSize, SurfaceControl outBLASTSurfaceControl)", "public void prepareToReplaceWindows(android.os.IBinder appToken, boolean childrenOnly)", "public boolean outOfMemory(android.view.IWindow window)", "public void setTransparentRegion(android.view.IWindow window, android.graphics.Region region)", "public void setInsets(android.view.IWindow window, int touchableInsets, android.graphics.Rect contentInsets, android.graphics.Rect visibleInsets, android.graphics.Region touchableRegion)", "public void getDisplayFrame(android.view.IWindow window, android.graphics.Rect outDisplayFrame)", "public void finishDrawing(android.view.IWindow window, android.view.SurfaceControl.Transaction postDrawTransaction)", "public void setInTouchMode(boolean showFocus)", "public boolean getInTouchMode()", "public boolean performHapticFeedback(int effectId, boolean always)", "public android.os.IBinder performDrag(android.view.IWindow window, int flags, android.view.SurfaceControl surface, int touchSource, float touchX, float touchY, float thumbCenterX, float thumbCenterY, android.content.ClipData data)", "public void reportDropResult(android.view.IWindow window, boolean consumed)", "public void cancelDragAndDrop(android.os.IBinder dragToken, boolean skipAnimation)", "public void dragRecipientEntered(android.view.IWindow window)", "public void dragRecipientExited(android.view.IWindow window)", "public void setWallpaperPosition(android.os.IBinder windowToken, float x, float y, float xstep, float ystep)", "public void setWallpaperZoomOut(android.os.IBinder windowToken, float zoom)", "public void setShouldZoomOutWallpaper(android.os.IBinder windowToken, boolean shouldZoom)", "public void wallpaperOffsetsComplete(android.os.IBinder window)", "public void setWallpaperDisplayOffset(android.os.IBinder windowToken, int x, int y)", "public android.os.Bundle sendWallpaperCommand(android.os.IBinder window, java.lang.String action, int x, int y, int z, android.os.Bundle extras, boolean sync)", "public void wallpaperCommandComplete(android.os.IBinder window, android.os.Bundle result)", "public void onRectangleOnScreenRequested(android.os.IBinder token, android.graphics.Rect rectangle)", "public android.view.IWindowId getWindowId(android.os.IBinder window)", "public void pokeDrawLock(android.os.IBinder window)", "public boolean startMovingTask(android.view.IWindow window, float startX, float startY)", "public void finishMovingTask(android.view.IWindow window)", "public void updatePointerIcon(android.view.IWindow window)", "public void reparentDisplayContent(android.view.IWindow window, android.view.SurfaceControl sc, int displayId)", "public void updateDisplayContentLocation(android.view.IWindow window, int x, int y, int displayId)", "public void updateTapExcludeRegion(android.view.IWindow window, android.graphics.Region region)", "public void insetsModified(android.view.IWindow window, android.view.InsetsState state)", "public void reportSystemGestureExclusionChanged(android.view.IWindow window, java.util.List<android.graphics.Rect> exclusionRects)", "public void grantInputChannel(int displayId, SurfaceControl surface, IWindow window, IBinder hostInputToken, int flags, int type, InputChannel outInputChannel)", "public void updateInputChannel(IBinder channelToken, int displayId, SurfaceControl surface, int flags, Region region)", "public android.os.IBinder asBinder()", "private int getSurfaceWidth(WindowManager.LayoutParams attrs)", "private int getSurfaceHeight(WindowManager.LayoutParams attrs)" ]
}