{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/pm/ResolveInfo.java",
  "packageName" : "android.content.pm",
  "className" : "ResolveInfo",
  "comment" : "\n * Information that is returned from resolving an intent\n * against an IntentFilter. This partially corresponds to\n * information collected from the AndroidManifest.xml's\n * &lt;intent&gt; tags.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INTENT_FORWARDER_ACTIVITY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "activityInfo",
    "type" : "ActivityInfo",
    "comment" : "\n     * The activity or broadcast receiver that corresponds to this resolution\n     * match, if this resolution is for an activity or broadcast receiver.\n     * Exactly one of {@link #activityInfo}, {@link #serviceInfo}, or\n     * {@link #providerInfo} will be non-null.\n     ",
    "links" : [ "#activityInfo", "#serviceInfo", "#providerInfo" ]
  }, {
    "name" : "serviceInfo",
    "type" : "ServiceInfo",
    "comment" : "\n     * The service that corresponds to this resolution match, if this resolution\n     * is for a service. Exactly one of {@link #activityInfo},\n     * {@link #serviceInfo}, or {@link #providerInfo} will be non-null.\n     ",
    "links" : [ "#activityInfo", "#serviceInfo", "#providerInfo" ]
  }, {
    "name" : "providerInfo",
    "type" : "ProviderInfo",
    "comment" : "\n     * The provider that corresponds to this resolution match, if this\n     * resolution is for a provider. Exactly one of {@link #activityInfo},\n     * {@link #serviceInfo}, or {@link #providerInfo} will be non-null.\n     ",
    "links" : [ "#activityInfo", "#serviceInfo", "#providerInfo" ]
  }, {
    "name" : "auxiliaryInfo",
    "type" : "AuxiliaryResolveInfo",
    "comment" : "\n     * An auxiliary response that may modify the resolved information. This is\n     * only set under certain circumstances; such as when resolving instant apps\n     * or components defined in un-installed splits.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "isInstantAppAvailable",
    "type" : "boolean",
    "comment" : "\n     * Whether or not an instant app is available for the resolved intent.\n     ",
    "links" : [ ]
  }, {
    "name" : "filter",
    "type" : "IntentFilter",
    "comment" : "\n     * The IntentFilter that was matched for this ResolveInfo.\n     ",
    "links" : [ ]
  }, {
    "name" : "priority",
    "type" : "int",
    "comment" : "\n     * The declared priority of this match.  Comes from the \"priority\"\n     * attribute or, if not set, defaults to 0.  Higher values are a higher\n     * priority.\n     ",
    "links" : [ ]
  }, {
    "name" : "preferredOrder",
    "type" : "int",
    "comment" : "\n     * Order of result according to the user's preference.  If the user\n     * has not set a preference for this result, the value is 0; higher\n     * values are a higher priority.\n     ",
    "links" : [ ]
  }, {
    "name" : "match",
    "type" : "int",
    "comment" : "\n     * The system's evaluation of how well the activity matches the\n     * IntentFilter.  This is a match constant, a combination of\n     * {@link IntentFilter#MATCH_CATEGORY_MASK IntentFilter.MATCH_CATEGORY_MASK}\n     * and {@link IntentFilter#MATCH_ADJUSTMENT_MASK IntentFiler.MATCH_ADJUSTMENT_MASK}.\n     ",
    "links" : [ "IntentFilter#MATCH_CATEGORY_MASK", "IntentFilter#MATCH_ADJUSTMENT_MASK" ]
  }, {
    "name" : "specificIndex",
    "type" : "int",
    "comment" : "\n     * Only set when returned by\n     * {@link PackageManager#queryIntentActivityOptions}, this tells you\n     * which of the given specific intents this result came from.  0 is the\n     * first in the list, < 0 means it came from the generic Intent query.\n     ",
    "links" : [ "PackageManager#queryIntentActivityOptions" ]
  }, {
    "name" : "isDefault",
    "type" : "boolean",
    "comment" : "\n     * This filter has specified the Intent.CATEGORY_DEFAULT, meaning it\n     * would like to be considered a default action that the user can\n     * perform on this data.\n     ",
    "links" : [ ]
  }, {
    "name" : "labelRes",
    "type" : "int",
    "comment" : "\n     * A string resource identifier (in the package's resources) of this\n     * match's label.  From the \"label\" attribute or, if not set, 0.\n     ",
    "links" : [ ]
  }, {
    "name" : "nonLocalizedLabel",
    "type" : "CharSequence",
    "comment" : "\n     * The actual string retrieve from <var>labelRes</var> or null if none\n     * was provided.\n     ",
    "links" : [ ]
  }, {
    "name" : "icon",
    "type" : "int",
    "comment" : "\n     * A drawable resource identifier (in the package's resources) of this\n     * match's icon.  From the \"icon\" attribute or, if not set, 0. It is\n     * set only if the icon can be obtained by resource id alone.\n     ",
    "links" : [ ]
  }, {
    "name" : "resolvePackageName",
    "type" : "String",
    "comment" : "\n     * Optional -- if non-null, the {@link #labelRes} and {@link #icon}\n     * resources will be loaded from this package, rather than the one\n     * containing the resolved component.\n     ",
    "links" : [ "#labelRes", "#icon" ]
  }, {
    "name" : "targetUserId",
    "type" : "int",
    "comment" : "\n     * If not equal to UserHandle.USER_CURRENT, then the intent will be forwarded to this user.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "noResourceId",
    "type" : "boolean",
    "comment" : "\n     * Set to true if the icon cannot be obtained by resource ids alone.\n     * It is set to true for ResolveInfos from the managed profile: They need to\n     * have their icon badged, so it cannot be obtained by resource ids alone.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "iconResourceId",
    "type" : "int",
    "comment" : "\n     * Same as {@link #icon} but it will always correspond to \"icon\" attribute\n     * regardless of {@link #noResourceId} value.\n     * @hide\n     ",
    "links" : [ "#icon", "#noResourceId" ]
  }, {
    "name" : "system",
    "type" : "boolean",
    "comment" : "\n     * @hide Target comes from system process?\n     ",
    "links" : [ ]
  }, {
    "name" : "handleAllWebDataURI",
    "type" : "boolean",
    "comment" : "\n     * Will be set to {@code true} if the {@link IntentFilter} responsible for intent\n     * resolution is classified as a \"browser\".\n     *\n     * @hide\n     ",
    "links" : [ "IntentFilter" ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<ResolveInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ComponentInfo getComponentInfo()",
    "returnType" : "ComponentInfo",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence loadLabel(PackageManager pm)",
    "returnType" : "CharSequence",
    "comment" : "\n     * Retrieve the current textual label associated with this resolution.  This\n     * will call back on the given PackageManager to load the label from\n     * the application.\n     *\n     * @param pm A PackageManager from which the label can be loaded; usually\n     * the PackageManager from which you originally retrieved this item.\n     *\n     * @return Returns a CharSequence containing the resolutions's label.  If the\n     * item does not have a label, its name is returned.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int resolveLabelResId()",
    "returnType" : "int",
    "comment" : "\n     * @return The resource that would be used when loading\n     * the label for this resolve info.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int resolveIconResId()",
    "returnType" : "int",
    "comment" : "\n     * @return The resource that would be used when loading\n     * the icon for this resolve info.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Drawable loadIcon(PackageManager pm)",
    "returnType" : "Drawable",
    "comment" : "\n     * Retrieve the current graphical icon associated with this resolution.  This\n     * will call back on the given PackageManager to load the icon from\n     * the application.\n     *\n     * @param pm A PackageManager from which the icon can be loaded; usually\n     * the PackageManager from which you originally retrieved this item.\n     *\n     * @return Returns a Drawable containing the resolution's icon.  If the\n     * item does not have an icon, the default activity icon is returned.\n     ",
    "links" : [ ]
  }, {
    "name" : " final int getIconResourceInternal()",
    "returnType" : "int",
    "comment" : "\n     * Return the icon resource identifier to use for this match.  If the\n     * match defines an icon, that is used; else if the activity defines\n     * an icon, that is used; else, the application icon is used.\n     * This function does not check noResourceId flag.\n     *\n     * @return The icon associated with this match.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final int getIconResource()",
    "returnType" : "int",
    "comment" : "\n     * Return the icon resource identifier to use for this match.  If the\n     * match defines an icon, that is used; else if the activity defines\n     * an icon, that is used; else, the application icon is used.\n     *\n     * @return The icon associated with this match.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void dump(Printer pw, String prefix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(Printer pw, String prefix, int dumpFlags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCrossProfileIntentForwarderActivity()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether this resolution represents the intent forwarder activity.\n     *\n     * @return whether this resolution represents the intent forwarder activity\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int parcelableFlags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "INTENT_FORWARDER_ACTIVITY", "activityInfo", "serviceInfo", "providerInfo", "auxiliaryInfo", "isInstantAppAvailable", "filter", "priority", "preferredOrder", "match", "specificIndex", "isDefault", "labelRes", "nonLocalizedLabel", "icon", "resolvePackageName", "targetUserId", "noResourceId", "iconResourceId", "system", "handleAllWebDataURI", "CREATOR" ],
  "methodNames" : [ "public ComponentInfo getComponentInfo()", "public CharSequence loadLabel(PackageManager pm)", "public int resolveLabelResId()", "public int resolveIconResId()", "public Drawable loadIcon(PackageManager pm)", " final int getIconResourceInternal()", "public final int getIconResource()", "public void dump(Printer pw, String prefix)", "public void dump(Printer pw, String prefix, int dumpFlags)", "public boolean isCrossProfileIntentForwarderActivity()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int parcelableFlags)" ]
}