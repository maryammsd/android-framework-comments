{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/ScrollCaptureTarget.java",
  "packageName" : "android.view",
  "className" : "ScrollCaptureTarget",
  "comment" : "\n * A target collects the set of contextual information for a ScrollCaptureHandler discovered during\n * a {@link View#dispatchScrollCaptureSearch scroll capture search}.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mContainingView",
    "type" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "ScrollCaptureCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLocalVisibleRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPositionInWindow",
    "type" : "Point",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHint",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScrollBounds",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmpFloatArr",
    "type" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMatrixViewLocalToWindow",
    "type" : "Matrix",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmpRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getHint()",
    "returnType" : "int",
    "comment" : " @return the hint that the {@code containing view} had during the scroll capture search ",
    "links" : [ ]
  }, {
    "name" : "public ScrollCaptureCallback getCallback()",
    "returnType" : "ScrollCaptureCallback",
    "comment" : " @return the {@link ScrollCaptureCallback} for this target ",
    "links" : [ "android.view.ScrollCaptureCallback" ]
  }, {
    "name" : "public View getContainingView()",
    "returnType" : "View",
    "comment" : " @return the {@code containing view} for this {@link ScrollCaptureCallback callback} ",
    "links" : [ "android.view.ScrollCaptureCallback" ]
  }, {
    "name" : "public Rect getLocalVisibleRect()",
    "returnType" : "Rect",
    "comment" : "\n     * Returns the un-clipped, visible bounds of the containing view during the scroll capture\n     * search. This is used to determine on-screen area to assist in selecting the primary target.\n     *\n     * @return the visible bounds of the {@code containing view} in view-local coordinates\n     ",
    "links" : [ ]
  }, {
    "name" : "public Point getPositionInWindow()",
    "returnType" : "Point",
    "comment" : " @return the position of the {@code containing view} within the window ",
    "links" : [ ]
  }, {
    "name" : "public Rect getScrollBounds()",
    "returnType" : "Rect",
    "comment" : " @return the {@code scroll bounds} for this {@link ScrollCaptureCallback callback} ",
    "links" : [ "android.view.ScrollCaptureCallback" ]
  }, {
    "name" : "public void setScrollBounds(@Nullable Rect scrollBounds)",
    "returnType" : "void",
    "comment" : "\n     * Sets the scroll bounds rect to the intersection of provided rect and the current bounds of\n     * the {@code containing view}.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void zero(float[] pointArray)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void roundIntoPoint(Point pointObj, float[] pointArray)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updatePositionInWindow()",
    "returnType" : "void",
    "comment" : "\n     * Refresh the value of {@link #mLocalVisibleRect} and {@link #mPositionInWindow} based on the\n     * current state of the {@code containing view}.\n     ",
    "links" : [ "#mPositionInWindow", "#mLocalVisibleRect" ]
  } ],
  "variableNames" : [ "mContainingView", "mCallback", "mLocalVisibleRect", "mPositionInWindow", "mHint", "mScrollBounds", "mTmpFloatArr", "mMatrixViewLocalToWindow", "mTmpRect" ],
  "methodNames" : [ "public int getHint()", "public ScrollCaptureCallback getCallback()", "public View getContainingView()", "public Rect getLocalVisibleRect()", "public Point getPositionInWindow()", "public Rect getScrollBounds()", "public void setScrollBounds(@Nullable Rect scrollBounds)", "private static void zero(float[] pointArray)", "private static void roundIntoPoint(Point pointObj, float[] pointArray)", "public void updatePositionInWindow()" ]
}