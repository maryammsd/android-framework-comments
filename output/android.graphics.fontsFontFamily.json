{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/fonts/FontFamily.java",
  "packageName" : "android.graphics.fonts",
  "className" : "FontFamily",
  "comment" : "\n * A font family class can be used for creating Typeface.\n *\n * <p>\n * A font family is a bundle of fonts for drawing text in various styles.\n * For example, you can bundle regular style font and bold style font into a single font family,\n * then system will select the correct style font from family for drawing.\n *\n * <pre>\n *  FontFamily family = new FontFamily.Builder(new Font.Builder(\"regular.ttf\").build())\n *      .addFont(new Font.Builder(\"bold.ttf\").build()).build();\n *  Typeface typeface = new Typeface.Builder2(family).build();\n *\n *  SpannableStringBuilder ssb = new SpannableStringBuilder(\"Hello, World.\");\n *  ssb.setSpan(new StyleSpan(Typeface.Bold), 6, 12, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n *\n *  textView.setTypeface(typeface);\n *  textView.setText(ssb);\n * </pre>\n *\n * In this example, \"Hello, \" is drawn with \"regular.ttf\", and \"World.\" is drawn with \"bold.ttf\".\n *\n * If there is no font exactly matches with the text style, the system will select the closest font.\n * </p>\n *\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFonts",
    "type" : "ArrayList<Font>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNativePtr",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Font getFont(@IntRange(from = 0) int index)",
    "returnType" : "Font",
    "comment" : "\n     * Returns a font\n     *\n     * @param index an index of the font\n     * @return a registered font\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSize()",
    "returnType" : "int",
    "comment" : "\n     * Returns the number of fonts in this FontFamily.\n     *\n     * @return the number of fonts registered in this family.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getNativePtr()",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mFonts", "mNativePtr" ],
  "methodNames" : [ "public Font getFont(@IntRange(from = 0) int index)", "public int getSize()", "public long getNativePtr()" ]
}