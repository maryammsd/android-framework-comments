{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/AutomaticZenRule.java",
  "packageName" : "android.app",
  "className" : "AutomaticZenRule",
  "comment" : "\n * Rule instance information for a zen (aka DND or Attention Management) mode.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ENABLED",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "DISABLED",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Rule is of an unknown type. This is the default value if not provided by the owning app,\n     * and the value returned if the true type was added in an API level lower than the calling\n     * app's targetSdk.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_OTHER",
    "type" : "int",
    "comment" : "\n     * Rule is of a known type, but not one of the specific types.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_SCHEDULE_TIME",
    "type" : "int",
    "comment" : "\n     * The type for rules triggered according to a time-based schedule.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_SCHEDULE_CALENDAR",
    "type" : "int",
    "comment" : "\n     * The type for rules triggered by calendar events.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_BEDTIME",
    "type" : "int",
    "comment" : "\n     * The type for rules triggered by bedtime/sleeping, like time of day, or snore detection.\n     *\n     * <p>Only the 'Wellbeing' app may own rules of this type.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_DRIVING",
    "type" : "int",
    "comment" : "\n     * The type for rules triggered by driving detection, like Bluetooth connections or vehicle\n     * sounds.\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_IMMERSIVE",
    "type" : "int",
    "comment" : "\n     * The type for rules triggered by the user entering an immersive activity, like opening an app\n     * using {@link WindowInsetsController#hide(int)}.\n     ",
    "links" : [ "android.view.WindowInsetsController#hide(int)" ]
  }, {
    "name" : "TYPE_THEATER",
    "type" : "int",
    "comment" : "\n     * The type for rules that have a {@link ZenPolicy} that implies that the\n     * device should not make sound and potentially hide some visual effects; may be triggered\n     * when entering a location where silence is requested, like a theater.\n     ",
    "links" : [ "android.service.notification.ZenPolicy" ]
  }, {
    "name" : "TYPE_MANAGED",
    "type" : "int",
    "comment" : "\n     * The type for rules created and managed by a device owner. These rules may not be fully\n     * editable by the device user.\n     *\n     * <p>Only a 'Device Owner' app may own rules of this type.\n     ",
    "links" : [ ]
  }, {
    "name" : "FIELD_NAME",
    "type" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FIELD_INTERRUPTION_FILTER",
    "type" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "enabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "name",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "interruptionFilter",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "conditionId",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "owner",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "configurationActivity",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "creationTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mZenPolicy",
    "type" : "ZenPolicy",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceEffects",
    "type" : "ZenDeviceEffects",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mModified",
    "type" : "boolean",
    "comment" : " TODO: b/310620812 - Remove this once FLAG_MODES_API is inlined.",
    "links" : [ ]
  }, {
    "name" : "mPkg",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIconResId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTriggerDescription",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowManualInvocation",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_STRING_LENGTH",
    "type" : "int",
    "comment" : "\n     * The maximum string length for any string contained in this automatic zen rule. This pertains\n     * both to fields in the rule itself (such as its name) and items with sub-fields.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_DESC_LENGTH",
    "type" : "int",
    "comment" : "\n     * The maximum string length for the trigger description rule, given UI constraints.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AutomaticZenRule>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ComponentName getOwner()",
    "returnType" : "ComponentName",
    "comment" : "\n     * Returns the {@link ComponentName} of the condition provider service that owns this rule.\n     ",
    "links" : [ "android.content.ComponentName" ]
  }, {
    "name" : "public ComponentName getConfigurationActivity()",
    "returnType" : "ComponentName",
    "comment" : "\n     * Returns the {@link ComponentName} of the activity that shows configuration options\n     * for this rule.\n     ",
    "links" : [ "android.content.ComponentName" ]
  }, {
    "name" : "public Uri getConditionId()",
    "returnType" : "Uri",
    "comment" : "\n     * Returns the representation of the state that causes this rule to become active.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInterruptionFilter()",
    "returnType" : "int",
    "comment" : "\n     * Returns the interruption filter that is applied when this rule is active.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of this rule.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether this rule is enabled.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isModified()",
    "returnType" : "boolean",
    "comment" : " TODO: b/310620812 - Consider removing completely. Seems not be used anywhere except tests.",
    "links" : [ ]
  }, {
    "name" : "public ZenPolicy getZenPolicy()",
    "returnType" : "ZenPolicy",
    "comment" : "\n     * Gets the zen policy.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ZenDeviceEffects getDeviceEffects()",
    "returnType" : "ZenDeviceEffects",
    "comment" : " Gets the {@link ZenDeviceEffects} of this rule. ",
    "links" : [ "android.service.notification.ZenDeviceEffects" ]
  }, {
    "name" : "public long getCreationTime()",
    "returnType" : "long",
    "comment" : "\n     * Returns the time this rule was created, represented as milliseconds since the epoch.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setConditionId(Uri conditionId)",
    "returnType" : "void",
    "comment" : "\n     * Sets the representation of the state that causes this rule to become active.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setInterruptionFilter(@InterruptionFilter int interruptionFilter)",
    "returnType" : "void",
    "comment" : "\n     * Sets the interruption filter that is applied when this rule is active.\n     * @param interruptionFilter The do not disturb mode to enter when this rule is active.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setName(String name)",
    "returnType" : "void",
    "comment" : "\n     * Sets the name of this rule.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setEnabled(boolean enabled)",
    "returnType" : "void",
    "comment" : "\n     * Enables this rule.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setModified(boolean modified)",
    "returnType" : "void",
    "comment" : "\n     * Sets modified state of this rule.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setZenPolicy(@Nullable ZenPolicy zenPolicy)",
    "returnType" : "void",
    "comment" : "\n     * Sets the zen policy.\n     *\n     * <p>When updating an existing rule via {@link NotificationManager#updateAutomaticZenRule},\n     * a {@code null} value here means the previous policy is retained.\n     ",
    "links" : [ "android.app.NotificationManager#updateAutomaticZenRule" ]
  }, {
    "name" : "public void setDeviceEffects(@Nullable ZenDeviceEffects deviceEffects)",
    "returnType" : "void",
    "comment" : "\n     * Sets the {@link ZenDeviceEffects} associated to this rule. Device effects specify changes to\n     * the device behavior that should apply while the rule is active, but are not directly related\n     * to suppressing notifications (for example: disabling always-on display).\n     *\n     * <p>When updating an existing rule via {@link NotificationManager#updateAutomaticZenRule},\n     * a {@code null} value here means the previous set of effects is retained.\n     ",
    "links" : [ "android.service.notification.ZenDeviceEffects", "android.app.NotificationManager#updateAutomaticZenRule" ]
  }, {
    "name" : "public void setConfigurationActivity(@Nullable ComponentName componentName)",
    "returnType" : "void",
    "comment" : "\n     * Sets the configuration activity - an activity that handles\n     * {@link NotificationManager#ACTION_AUTOMATIC_ZEN_RULE} that shows the user more information\n     * about this rule and/or allows them to configure it. This is required to be non-null for rules\n     * that are not backed by a {@link android.service.notification.ConditionProviderService}.\n     *\n     * <p>This is exclusive with the {@code owner} supplied in the constructor; rules where a\n     * configuration activity is set will not use the\n     * {@link android.service.notification.ConditionProviderService} supplied there to determine\n     * whether the rule should be active.\n     ",
    "links" : [ "android.service.notification.ConditionProviderService", "android.app.NotificationManager#ACTION_AUTOMATIC_ZEN_RULE" ]
  }, {
    "name" : "public void setPackageName(String pkgName)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * Gets the type of the rule.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setType(@Type int type)",
    "returnType" : "void",
    "comment" : "\n     * Sets the type of the rule.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTriggerDescription()",
    "returnType" : "String",
    "comment" : "\n     * Gets the user visible description of when this rule is active\n     * (see {@link Condition#STATE_TRUE}).\n     ",
    "links" : [ "android.service.notification.Condition#STATE_TRUE" ]
  }, {
    "name" : "public void setTriggerDescription(@Nullable String triggerDescription)",
    "returnType" : "void",
    "comment" : "\n     * Sets a user visible description of when this rule will be active\n     * (see {@link Condition#STATE_TRUE}).\n     *\n     * A description should be a (localized) string like \"Mon-Fri, 9pm-7am\" or\n     * \"When connected to [Car Name]\".\n     * @hide\n     ",
    "links" : [ "android.service.notification.Condition#STATE_TRUE" ]
  }, {
    "name" : "public int getIconResId()",
    "returnType" : "int",
    "comment" : "\n     * Gets the resource id of the drawable icon for this rule.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIconResId(int iconResId)",
    "returnType" : "void",
    "comment" : "\n     * Sets a resource id of a tintable vector drawable representing the rule in image form.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isManualInvocationAllowed()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether this rule can be manually activated by the user even when the triggering\n     * condition for the rule is not met.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setManualInvocationAllowed(boolean allowManualInvocation)",
    "returnType" : "void",
    "comment" : "\n     * Sets whether this rule can be manually activated by the user even when the triggering\n     * condition for the rule is not met.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void validate()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static int checkValidType(@Type int type)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String fieldsToString(@ModifiableField int bitmask)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ComponentName getTrimmedComponentName(ComponentName cn)",
    "returnType" : "ComponentName",
    "comment" : "\n     * If the package or class name of the provided ComponentName are longer than MAX_STRING_LENGTH,\n     * return a trimmed version that truncates each of the package and class name at the max length.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String getTrimmedString(String input)",
    "returnType" : "String",
    "comment" : "\n     * Returns a truncated copy of the string if the string is longer than MAX_STRING_LENGTH.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String getTrimmedString(String input, int length)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Uri getTrimmedUri(Uri input)",
    "returnType" : "Uri",
    "comment" : "\n     * Returns a truncated copy of the Uri by trimming the string representation to the maximum\n     * string length.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ComponentName getOwner()", "public ComponentName getConfigurationActivity()", "public Uri getConditionId()", "public int getInterruptionFilter()", "public String getName()", "public boolean isEnabled()", "public boolean isModified()", "public ZenPolicy getZenPolicy()", "public ZenDeviceEffects getDeviceEffects()", "public long getCreationTime()", "public void setConditionId(Uri conditionId)", "public void setInterruptionFilter(@InterruptionFilter int interruptionFilter)", "public void setName(String name)", "public void setEnabled(boolean enabled)", "public void setModified(boolean modified)", "public void setZenPolicy(@Nullable ZenPolicy zenPolicy)", "public void setDeviceEffects(@Nullable ZenDeviceEffects deviceEffects)", "public void setConfigurationActivity(@Nullable ComponentName componentName)", "public void setPackageName(String pkgName)", "public String getPackageName()", "public int getType()", "public void setType(@Type int type)", "public String getTriggerDescription()", "public void setTriggerDescription(@Nullable String triggerDescription)", "public int getIconResId()", "public void setIconResId(int iconResId)", "public boolean isManualInvocationAllowed()", "public void setManualInvocationAllowed(boolean allowManualInvocation)", "public void validate()", "private static int checkValidType(@Type int type)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public String toString()", "public static String fieldsToString(@ModifiableField int bitmask)", "public boolean equals(@Nullable Object o)", "public int hashCode()", "private static ComponentName getTrimmedComponentName(ComponentName cn)", "private static String getTrimmedString(String input)", "private static String getTrimmedString(String input, int length)", "private static Uri getTrimmedUri(Uri input)" ],
  "variableNames" : [ "ENABLED", "DISABLED", "TYPE_UNKNOWN", "TYPE_OTHER", "TYPE_SCHEDULE_TIME", "TYPE_SCHEDULE_CALENDAR", "TYPE_BEDTIME", "TYPE_DRIVING", "TYPE_IMMERSIVE", "TYPE_THEATER", "TYPE_MANAGED", "FIELD_NAME", "FIELD_INTERRUPTION_FILTER", "enabled", "name", "interruptionFilter", "conditionId", "owner", "configurationActivity", "creationTime", "mZenPolicy", "mDeviceEffects", "mModified", "mPkg", "mType", "mIconResId", "mTriggerDescription", "mAllowManualInvocation", "MAX_STRING_LENGTH", "MAX_DESC_LENGTH", "CREATOR" ]
}