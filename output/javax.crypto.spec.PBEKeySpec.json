{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/crypto/spec/PBEKeySpec.java",
  "packageName" : "javax.crypto.spec",
  "className" : "PBEKeySpec",
  "comment" : "\n * A user-chosen password that can be used with password-based encryption\n * (<i>PBE</i>).\n *\n * <p>The password can be viewed as some kind of raw key material, from which\n * the encryption mechanism that uses it derives a cryptographic key.\n *\n * <p>Different PBE mechanisms may consume different bits of each password\n * character. For example, the PBE mechanism defined in\n * <a href=\"http://www.ietf.org/rfc/rfc2898.txt\">\n * PKCS #5</a> looks at only the low order 8 bits of each character, whereas\n * PKCS #12 looks at all 16 bits of each character.\n *\n * <p>You convert the password characters to a PBE key by creating an\n * instance of the appropriate secret-key factory. For example, a secret-key\n * factory for PKCS #5 will construct a PBE key from only the low order 8 bits\n * of each password character, whereas a secret-key factory for PKCS #12 will\n * take all 16 bits of each character.\n *\n * <p>Also note that this class stores passwords as char arrays instead of\n * <code>String</code> objects (which would seem more logical), because the\n * String class is immutable and there is no way to overwrite its\n * internal value when the password stored in it is no longer needed. Hence,\n * this class requests the password as a char array, so it can be overwritten\n * when done.\n *\n * @author Jan Luehe\n * @author Valerie Peng\n *\n * @see javax.crypto.SecretKeyFactory\n * @see PBEParameterSpec\n * @since 1.4\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "password",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "salt",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "iterationCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "keyLength",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void clearPassword()",
    "returnType" : "void",
    "comment" : "\n     * Clears the internal copy of the password.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public final char[] getPassword()",
    "returnType" : "char[]",
    "comment" : "\n     * Returns a copy of the password.\n     *\n     * <p> Note: this method returns a copy of the password. It is\n     * the caller's responsibility to zero out the password information after\n     * it is no longer needed.\n     *\n     * @exception IllegalStateException if password has been cleared by\n     * calling <code>clearPassword</code> method.\n     * @return the password.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final byte[] getSalt()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns a copy of the salt or null if not specified.\n     *\n     * <p> Note: this method should return a copy of the salt. It is\n     * the caller's responsibility to zero out the salt information after\n     * it is no longer needed.\n     *\n     * @return the salt.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final int getIterationCount()",
    "returnType" : "int",
    "comment" : "\n     * Returns the iteration count or 0 if not specified.\n     *\n     * @return the iteration count.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final int getKeyLength()",
    "returnType" : "int",
    "comment" : "\n     * Returns the to-be-derived key length or 0 if not specified.\n     *\n     * <p> Note: this is used to indicate the preference on key length\n     * for variable-key-size ciphers. The actual key size depends on\n     * each provider's implementation.\n     *\n     * @return the to-be-derived key length.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final void clearPassword()", "public final char[] getPassword()", "public final byte[] getSalt()", "public final int getIterationCount()", "public final int getKeyLength()" ],
  "variableNames" : [ "password", "salt", "iterationCount", "keyLength" ]
}