{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/om/OverlayInfo.java",
  "packageName" : "android.content.om",
  "className" : "OverlayInfo",
  "comment" : "\n * An immutable information about an overlay.\n *\n * <p>Applications calling {@link OverlayManager#getOverlayInfosForTarget(String)} get the\n * information list of the registered overlays. Each element in the list presents the information of\n * the particular overlay.\n *\n * <!-- For OverlayManagerService, it isn't public part and hidden by HTML comment. -->\n * <!--\n * Immutable overlay information about a package. All PackageInfos that\n * represent an overlay package will have a corresponding OverlayInfo.\n * -->\n *\n * @see OverlayManager#getOverlayInfosForTarget(String)\n ",
  "links" : [ "android.content.om.OverlayManager#getOverlayInfosForTarget(String)" ],
  "variables" : [ {
    "name" : "STATE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * An internal state used as the initial state of an overlay. OverlayInfo\n     * objects exposed outside the {@link\n     * com.android.server.om.OverlayManagerService} should never have this\n     * state.\n     *\n     * @hide\n     ",
    "links" : [ "com.android.server.om.OverlayManagerService" ]
  }, {
    "name" : "STATE_MISSING_TARGET",
    "type" : "int",
    "comment" : "\n     * The target package of the overlay is not installed. The overlay cannot be enabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_NO_IDMAP",
    "type" : "int",
    "comment" : "\n     * Creation of idmap file failed (e.g. no matching resources). The overlay\n     * cannot be enabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_DISABLED",
    "type" : "int",
    "comment" : "\n     * The overlay is currently disabled. It can be enabled.\n     *\n     * @see IOverlayManager#setEnabled\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_ENABLED",
    "type" : "int",
    "comment" : "\n     * The overlay is currently enabled. It can be disabled.\n     *\n     * @see IOverlayManager#setEnabled\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_TARGET_IS_BEING_REPLACED",
    "type" : "int",
    "comment" : "\n     * The target package is currently being upgraded or downgraded; the state\n     * will change once the package installation has finished.\n     * @hide\n     *\n     * @deprecated No longer used. Caused invalid transitions from enabled -> upgrading -> enabled,\n     * where an update is propagated when nothing has changed. Can occur during --dont-kill\n     * installs when code and resources are hot swapped and the Activity should not be relaunched.\n     * In all other cases, the process and therefore Activity is killed, so the state loop is\n     * irrelevant.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_OVERLAY_IS_BEING_REPLACED",
    "type" : "int",
    "comment" : "\n     * The overlay package is currently being upgraded or downgraded; the state\n     * will change once the package installation has finished.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_ENABLED_IMMUTABLE",
    "type" : "int",
    "comment" : "\n     * The overlay package is currently enabled because it is marked as\n     * 'immutable'. It cannot be disabled but will change state if for instance\n     * its target is uninstalled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_SYSTEM_UPDATE_UNINSTALL",
    "type" : "int",
    "comment" : "\n     * The target package needs to be refreshed as a result of a system update uninstall, which\n     * must recalculate the state of overlays against the newly enabled system package, which may\n     * differ in resources/policy from the /data variant that was uninstalled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CATEGORY_THEME",
    "type" : "String",
    "comment" : "\n     * Overlay category: theme.\n     * <p>\n     * Change how Android (including the status bar, dialogs, ...) looks.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "packageName",
    "type" : "String",
    "comment" : "\n     * Package name of the overlay package\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "overlayName",
    "type" : "String",
    "comment" : "\n     * The unique name within the package of the overlay.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "targetPackageName",
    "type" : "String",
    "comment" : "\n     * Package name of the target package\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "targetOverlayableName",
    "type" : "String",
    "comment" : "\n     * Name of the target overlayable declaration.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "category",
    "type" : "String",
    "comment" : "\n     * Category of the overlay package\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "baseCodePath",
    "type" : "String",
    "comment" : "\n     * Full path to the base APK for this overlay package\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "state",
    "type" : "int",
    "comment" : "\n     * The state of this OverlayInfo as defined by the STATE_* constants in this class.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "userId",
    "type" : "int",
    "comment" : "\n     * User handle for which this overlay applies\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "priority",
    "type" : "int",
    "comment" : "\n     * Priority as configured by {@link com.android.internal.content.om.OverlayConfig}.\n     * Not intended to be exposed to 3rd party.\n     *\n     * @hide\n     ",
    "links" : [ "com.android.internal.content.om.OverlayConfig" ]
  }, {
    "name" : "isMutable",
    "type" : "boolean",
    "comment" : "\n     * isMutable as configured by {@link com.android.internal.content.om.OverlayConfig}.\n     * If false, the overlay is unconditionally loaded and cannot be unloaded. Not intended to be\n     * exposed to 3rd party.\n     *\n     * @hide\n     ",
    "links" : [ "com.android.internal.content.om.OverlayConfig" ]
  }, {
    "name" : "mIdentifierCached",
    "type" : "OverlayIdentifier",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "isFabricated",
    "type" : "boolean",
    "comment" : "\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<OverlayInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n     * {@inheritDoc}\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getOverlayName()",
    "returnType" : "String",
    "comment" : "\n     * Get the overlay name from the registered fabricated overlay.\n     *\n     * @return the overlay name\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTargetPackageName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the target overlaid package.\n     *\n     * @return the target package name\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getCategory()",
    "returnType" : "String",
    "comment" : "\n     * Returns the category of the current overlay.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getUserId()",
    "returnType" : "int",
    "comment" : "\n     * Returns user handle for which this overlay applies to.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTargetOverlayableName()",
    "returnType" : "String",
    "comment" : "\n     * Return the target overlayable name.\n     *\n     * @return the name of the target overlayable resources set\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFabricated()",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getBaseCodePath()",
    "returnType" : "String",
    "comment" : "\n     * Full path to the base APK or fabricated overlay for this overlay package.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public OverlayIdentifier getOverlayIdentifier()",
    "returnType" : "OverlayIdentifier",
    "comment" : "\n     * Get the unique identifier from the overlay information.\n     *\n     * <p>The return value of this function can be used to unregister the related overlay.\n     *\n     * @return an identifier representing the current overlay.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void ensureValidState()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Return true if this overlay is enabled, i.e. should be used to overlay\n     * the resources in the target package.\n     *\n     * Disabled overlay packages are installed but are currently not in use.\n     *\n     * @return true if the overlay is enabled, else false.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String stateToString(@State int state)",
    "returnType" : "String",
    "comment" : "\n     * Translate a state to a human readable string. Only intended for\n     * debugging purposes.\n     *\n     * @return a human readable String representing the state.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getPackageName()", "public String getOverlayName()", "public String getTargetPackageName()", "public String getCategory()", "public int getUserId()", "public String getTargetOverlayableName()", "public boolean isFabricated()", "public String getBaseCodePath()", "public OverlayIdentifier getOverlayIdentifier()", "private void ensureValidState()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean isEnabled()", "public static String stateToString(@State int state)", "public int hashCode()", "public boolean equals(@Nullable Object obj)", "public String toString()" ],
  "variableNames" : [ "STATE_UNKNOWN", "STATE_MISSING_TARGET", "STATE_NO_IDMAP", "STATE_DISABLED", "STATE_ENABLED", "STATE_TARGET_IS_BEING_REPLACED", "STATE_OVERLAY_IS_BEING_REPLACED", "STATE_ENABLED_IMMUTABLE", "STATE_SYSTEM_UPDATE_UNINSTALL", "CATEGORY_THEME", "packageName", "overlayName", "targetPackageName", "targetOverlayableName", "category", "baseCodePath", "state", "userId", "priority", "isMutable", "mIdentifierCached", "isFabricated", "CREATOR" ]
}