{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/pm/DataLoaderManager.java",
  "packageName" : "android.content.pm",
  "className" : "DataLoaderManager",
  "comment" : "\n * Data loader manager takes care of data loaders of different packages. It provides methods to\n * initialize a data loader binder service (binding and creating it), to return a binder of the data\n * loader binder service and to destroy a data loader binder service.\n * @see com.android.server.pm.DataLoaderManagerService\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IDataLoaderManager",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean bindToDataLoader(int dataLoaderId, @NonNull DataLoaderParamsParcel params, @NonNull IDataLoaderStatusListener listener)",
    "returnType" : "boolean",
    "comment" : "\n     * Finds a data loader binder service and binds to it. This requires PackageManager.\n     *\n     * @param dataLoaderId ID for the new data loader binder service.\n     * @param params       DataLoaderParamsParcel object that contains data loader params, including\n     *                     its package name, class name, and additional parameters.\n     * @param listener     Callback for the data loader service to report status back to the\n     *                     caller.\n     * @return false if 1) target ID collides with a data loader that is already bound to data\n     * loader manager; 2) package name is not specified; 3) fails to find data loader package;\n     * or 4) fails to bind to the specified data loader service, otherwise return true.\n     ",
    "links" : [ ]
  }, {
    "name" : "public IDataLoader getDataLoader(int dataLoaderId)",
    "returnType" : "IDataLoader",
    "comment" : "\n     * Returns a binder interface of the data loader binder service, given its ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void unbindFromDataLoader(int dataLoaderId)",
    "returnType" : "void",
    "comment" : "\n     * Unbinds from a data loader binder service, specified by its ID.\n     * DataLoader will receive destroy notification.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mService" ],
  "methodNames" : [ "public boolean bindToDataLoader(int dataLoaderId, @NonNull DataLoaderParamsParcel params, @NonNull IDataLoaderStatusListener listener)", "public IDataLoader getDataLoader(int dataLoaderId)", "public void unbindFromDataLoader(int dataLoaderId)" ]
}