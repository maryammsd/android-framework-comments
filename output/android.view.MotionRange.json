{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/InputDevice.java",
  "packageName" : "android.view",
  "className" : "MotionRange",
  "comment" : "\n     * Provides information about the range of values for a particular {@link MotionEvent} axis.\n     *\n     * @see InputDevice#getMotionRange(int)\n     ",
  "variables" : [ {
    "name" : "mAxis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSource",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMin",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMax",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlat",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFuzz",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResolution",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getAxis()",
    "returnType" : "int",
    "comment" : "\n         * Gets the axis id.\n         * @return The axis id.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSource()",
    "returnType" : "int",
    "comment" : "\n         * Gets the source for which the axis is defined.\n         * @return The source.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFromSource(int source)",
    "returnType" : "boolean",
    "comment" : "\n         * Determines whether the event is from the given source.\n         *\n         * @param source The input source to check against. This can be a specific device type,\n         * such as {@link InputDevice#SOURCE_TOUCH_NAVIGATION}, or a more generic device class,\n         * such as {@link InputDevice#SOURCE_CLASS_POINTER}.\n         * @return Whether the event is from the given source.\n         ",
    "links" : [ "android.view.InputDevice#SOURCE_TOUCH_NAVIGATION", "android.view.InputDevice#SOURCE_CLASS_POINTER" ]
  }, {
    "name" : "public float getMin()",
    "returnType" : "float",
    "comment" : "\n         * Gets the inclusive minimum value for the axis.\n         * @return The inclusive minimum value.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getMax()",
    "returnType" : "float",
    "comment" : "\n         * Gets the inclusive maximum value for the axis.\n         * @return The inclusive maximum value.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getRange()",
    "returnType" : "float",
    "comment" : "\n         * Gets the range of the axis (difference between maximum and minimum).\n         * @return The range of values.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getFlat()",
    "returnType" : "float",
    "comment" : "\n         * Gets the extent of the center flat position with respect to this axis.\n         * <p>\n         * For example, a flat value of 8 means that the center position is between -8 and +8.\n         * This value is mainly useful for calibrating self-centering devices.\n         * </p>\n         * @return The extent of the center flat position.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getFuzz()",
    "returnType" : "float",
    "comment" : "\n         * Gets the error tolerance for input device measurements with respect to this axis.\n         * <p>\n         * For example, a value of 2 indicates that the measured value may be up to +/- 2 units\n         * away from the actual value due to noise and device sensitivity limitations.\n         * </p>\n         * @return The error tolerance.\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getResolution()",
    "returnType" : "float",
    "comment" : "\n         * Gets the resolution for input device measurements with respect to this axis.\n         * @return The resolution in units per millimeter, or units per radian for rotational axes.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mAxis", "mSource", "mMin", "mMax", "mFlat", "mFuzz", "mResolution" ],
  "methodNames" : [ "public int getAxis()", "public int getSource()", "public boolean isFromSource(int source)", "public float getMin()", "public float getMax()", "public float getRange()", "public float getFlat()", "public float getFuzz()", "public float getResolution()" ]
}