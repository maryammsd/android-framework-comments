{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/WebChromeClient.java",
  "packageName" : "android.webkit",
  "className" : "FileChooserParams",
  "comment" : "\n     * Parameters used in the {@link #onShowFileChooser} method.\n     ",
  "links" : [ "#onShowFileChooser" ],
  "variables" : [ {
    "name" : "MODE_OPEN",
    "type" : "int",
    "comment" : " Open single file. Requires that the file exists before allowing the user to pick it. ",
    "links" : [ ]
  }, {
    "name" : "MODE_OPEN_MULTIPLE",
    "type" : "int",
    "comment" : " Like Open but allows multiple files to be selected. ",
    "links" : [ ]
  }, {
    "name" : "MODE_OPEN_FOLDER",
    "type" : "int",
    "comment" : " Like Open but allows a folder to be selected. The implementation should enumerate\n            all files selected by this operation.\n            This feature is not supported at the moment.\n            @hide ",
    "links" : [ ]
  }, {
    "name" : "MODE_SAVE",
    "type" : "int",
    "comment" : "  Allows picking a nonexistent file and saving it. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Uri[] parseResult(int resultCode, Intent data)",
    "returnType" : "Uri[]",
    "comment" : "\n         * Parse the result returned by the file picker activity. This method should be used with\n         * {@link #createIntent}. Refer to {@link #createIntent} for how to use it.\n         *\n         * <p class=\"note\"><b>Note:</b> The intent returned by the file picker activity\n         * should be treated as untrusted. A third-party app handling the implicit\n         * intent created by {@link #createIntent} might return Uris that the third-party\n         * app itself does not have access to, such as your own app's sensitive data files.\n         * WebView does not enforce any restrictions on the returned Uris. It is the\n         * app's responsibility to ensure that the untrusted source (such as a third-party\n         * app) has access the Uris it has returned and that the Uris are not pointing\n         * to any sensitive data files.</p>\n         *\n         * @param resultCode the integer result code returned by the file picker activity.\n         * @param data the intent returned by the file picker activity.\n         * @return the Uris of selected file(s) or {@code null} if the resultCode indicates\n         *         activity canceled or any other error.\n         ",
    "links" : [ "#createIntent" ]
  }, {
    "name" : "public abstract int getMode()",
    "returnType" : "int",
    "comment" : "\n         * Returns file chooser mode.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract String[] getAcceptTypes()",
    "returnType" : "String[]",
    "comment" : "\n         * Returns an array of acceptable MIME types. The returned MIME type\n         * could be partial such as audio/*. The array will be empty if no\n         * acceptable types are specified.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean isCaptureEnabled()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns preference for a live media captured value (e.g. Camera, Microphone).\n         * True indicates capture is enabled, {@code false} disabled.\n         *\n         * Use <code>getAcceptTypes</code> to determine suitable capture devices.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract CharSequence getTitle()",
    "returnType" : "CharSequence",
    "comment" : "\n         * Returns the title to use for this file selector. If {@code null} a default title should\n         * be used.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract String getFilenameHint()",
    "returnType" : "String",
    "comment" : "\n         * The file name of a default selection if specified, or {@code null}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Intent createIntent()",
    "returnType" : "Intent",
    "comment" : "\n         * Creates an intent that would start a file picker for file selection.\n         * The Intent supports choosing files from simple file sources available\n         * on the device. Some advanced sources (for example, live media capture)\n         * may not be supported and applications wishing to support these sources\n         * or more advanced file operations should build their own Intent.\n         *\n         * <p>How to use:\n         * <ol>\n         *   <li>Build an intent using {@link #createIntent}</li>\n         *   <li>Fire the intent using {@link android.app.Activity#startActivityForResult}.</li>\n         *   <li>Check for ActivityNotFoundException and take a user friendly action if thrown.</li>\n         *   <li>Listen the result using {@link android.app.Activity#onActivityResult}</li>\n         *   <li>Parse the result using {@link #parseResult} only if media capture was not\n         *   requested.</li>\n         *   <li>Send the result using filePathCallback of {@link\n         *   WebChromeClient#onShowFileChooser}</li>\n         * </ol>\n         *\n         * <p class=\"note\"><b>Note:</b> The created intent may be handled by\n         * third-party applications on device. The received result must be treated\n         * as untrusted as it can contain Uris pointing to your own app's sensitive\n         * data files. Your app should check the resultant Uris in {@link #parseResult}\n         * before calling the <code>filePathCallback</code>.</p>\n         *\n         * @return an Intent that supports basic file chooser sources.\n         ",
    "links" : [ "#createIntent", "android.app.Activity#startActivityForResult", "android.app.Activity#onActivityResult", "#parseResult", "android.webkit.WebChromeClient#onShowFileChooser" ]
  } ],
  "methodNames" : [ "public static Uri[] parseResult(int resultCode, Intent data)", "public abstract int getMode()", "public abstract String[] getAcceptTypes()", "public abstract boolean isCaptureEnabled()", "public abstract CharSequence getTitle()", "public abstract String getFilenameHint()", "public abstract Intent createIntent()" ],
  "variableNames" : [ "MODE_OPEN", "MODE_OPEN_MULTIPLE", "MODE_OPEN_FOLDER", "MODE_SAVE" ]
}