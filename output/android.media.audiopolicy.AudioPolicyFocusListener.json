{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/audiopolicy/AudioPolicy.java",
  "packageName" : "android.media.audiopolicy",
  "className" : "AudioPolicyFocusListener",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onAudioFocusGrant(AudioFocusInfo afi, int requestResult)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAudioFocusLoss(AudioFocusInfo afi, boolean wasNotified)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAudioFocusRequest(AudioFocusInfo afi, int requestResult)",
    "returnType" : "void",
    "comment" : "\n         * Called whenever an application requests audio focus.\n         * Only ever called if the {@link AudioPolicy} was built with\n         * {@link AudioPolicy.Builder#setIsAudioFocusPolicy(boolean)} set to {@code true}.\n         * @param afi information about the focus request and the requester\n         * @param requestResult deprecated after the addition of\n         *     {@link AudioManager#setFocusRequestResult(AudioFocusInfo, int, AudioPolicy)}\n         *     in Android P, always equal to {@link #AUDIOFOCUS_REQUEST_GRANTED}.\n         ",
    "links" : [ "android.media.AudioManager#setFocusRequestResult(AudioFocusInfo", "AudioPolicy.Builder#setIsAudioFocusPolicy(boolean)", "#AUDIOFOCUS_REQUEST_GRANTED", "android.media.audiopolicy.AudioPolicy" ]
  }, {
    "name" : "public void onAudioFocusAbandon(AudioFocusInfo afi)",
    "returnType" : "void",
    "comment" : "\n         * Called whenever an application abandons audio focus.\n         * Only ever called if the {@link AudioPolicy} was built with\n         * {@link AudioPolicy.Builder#setIsAudioFocusPolicy(boolean)} set to {@code true}.\n         * @param afi information about the focus request being abandoned and the original\n         *     requester.\n         ",
    "links" : [ "AudioPolicy.Builder#setIsAudioFocusPolicy(boolean)", "android.media.audiopolicy.AudioPolicy" ]
  } ],
  "methodNames" : [ "public void onAudioFocusGrant(AudioFocusInfo afi, int requestResult)", "public void onAudioFocusLoss(AudioFocusInfo afi, boolean wasNotified)", "public void onAudioFocusRequest(AudioFocusInfo afi, int requestResult)", "public void onAudioFocusAbandon(AudioFocusInfo afi)" ],
  "variableNames" : [ ]
}