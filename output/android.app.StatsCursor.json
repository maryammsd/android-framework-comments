{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/StatsCursor.java",
  "packageName" : "android.app",
  "className" : "StatsCursor",
  "comment" : "\n * Custom cursor implementation to hold a cross-process cursor to pass data to caller.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mMatrixCursor",
    "type" : "MatrixCursor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColumnTypes",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColumnNames",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRowCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getCount()",
    "returnType" : "int",
    "comment" : "\n     * Returns the numbers of rows in the cursor.\n     *\n     * @return the number of rows in the cursor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String[] getColumnNames()",
    "returnType" : "String[]",
    "comment" : "\n     * Returns a string array holding the names of all of the columns in the\n     * result set in the order in which they were listed in the result.\n     *\n     * @return the names of the columns returned in this query.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getString(int column)",
    "returnType" : "String",
    "comment" : "\n     * Returns the value of the requested column as a String.\n     *\n     * @param column the zero-based index of the target column.\n     * @return the value of that column as a String.\n     ",
    "links" : [ ]
  }, {
    "name" : "public short getShort(int column)",
    "returnType" : "short",
    "comment" : "\n     * Returns the value of the requested column as a short.\n     *\n     * @param column the zero-based index of the target column.\n     * @return the value of that column as a short.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInt(int column)",
    "returnType" : "int",
    "comment" : "\n     * Returns the value of the requested column as an int.\n     *\n     * @param column the zero-based index of the target column.\n     * @return the value of that column as an int.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getLong(int column)",
    "returnType" : "long",
    "comment" : "\n     * Returns the value of the requested column as a long.\n     *\n     * @param column the zero-based index of the target column.\n     * @return the value of that column as a long.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getFloat(int column)",
    "returnType" : "float",
    "comment" : "\n     * Returns the value of the requested column as a float.\n     *\n     * @param column the zero-based index of the target column.\n     * @return the value of that column as a float.\n     ",
    "links" : [ ]
  }, {
    "name" : "public double getDouble(int column)",
    "returnType" : "double",
    "comment" : "\n     * Returns the value of the requested column as a double.\n     *\n     * @param column the zero-based index of the target column.\n     * @return the value of that column as a double.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isNull(int column)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns <code>true</code> if the value in the indicated column is null.\n     *\n     * @param column the zero-based index of the target column.\n     * @return whether the column value is null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getType(int column)",
    "returnType" : "int",
    "comment" : "\n     * Returns the data type of the given column's value.\n     *\n     * @param column the zero-based index of the target column.\n     * @return column value type\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean onMove(int oldPosition, int newPosition)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getCount()", "public String[] getColumnNames()", "public String getString(int column)", "public short getShort(int column)", "public int getInt(int column)", "public long getLong(int column)", "public float getFloat(int column)", "public double getDouble(int column)", "public boolean isNull(int column)", "public int getType(int column)", "public boolean onMove(int oldPosition, int newPosition)" ],
  "variableNames" : [ "mMatrixCursor", "mColumnTypes", "mColumnNames", "mRowCount" ]
}