{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/security/net/config/NetworkSecurityTrustManager.java",
  "packageName" : "android.security.net.config",
  "className" : "NetworkSecurityTrustManager",
  "comment" : "\n * {@link X509ExtendedTrustManager} that implements the trust anchor and pinning for a\n * given {@link NetworkSecurityConfig}.\n * @hide\n ",
  "variables" : [ {
    "name" : "mDelegate",
    "type" : "TrustManagerImpl",
    "comment" : " TODO: Replace this with a general X509TrustManager and use duck-typing.",
    "links" : [ ]
  }, {
    "name" : "mNetworkSecurityConfig",
    "type" : "NetworkSecurityConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIssuersLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIssuers",
    "type" : "X509Certificate[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkClientTrusted(X509Certificate[] certs, String authType, Socket socket) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkClientTrusted(X509Certificate[] certs, String authType, SSLEngine engine) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkServerTrusted(X509Certificate[] certs, String authType) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkServerTrusted(X509Certificate[] certs, String authType, Socket socket) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void checkServerTrusted(X509Certificate[] certs, String authType, SSLEngine engine) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<X509Certificate> checkServerTrusted(X509Certificate[] certs, String authType, String host) throws CertificateException",
    "returnType" : "List<X509Certificate>",
    "comment" : "\n     * Hostname aware version of {@link #checkServerTrusted(X509Certificate[], String)}.\n     * This interface is used by conscrypt and android.net.http.X509TrustManagerExtensions do not\n     * modify without modifying those callers.\n     ",
    "links" : [ "#checkServerTrusted(X509Certificate" ]
  }, {
    "name" : "private void checkPins(List<X509Certificate> chain) throws CertificateException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isPinningEnforced(List<X509Certificate> chain) throws CertificateException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public X509Certificate[] getAcceptedIssuers()",
    "returnType" : "X509Certificate[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void handleTrustStorageUpdate()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mDelegate", "mNetworkSecurityConfig", "mIssuersLock", "mIssuers" ],
  "methodNames" : [ "public void checkClientTrusted(X509Certificate[] chain, String authType) throws CertificateException", "public void checkClientTrusted(X509Certificate[] certs, String authType, Socket socket) throws CertificateException", "public void checkClientTrusted(X509Certificate[] certs, String authType, SSLEngine engine) throws CertificateException", "public void checkServerTrusted(X509Certificate[] certs, String authType) throws CertificateException", "public void checkServerTrusted(X509Certificate[] certs, String authType, Socket socket) throws CertificateException", "public void checkServerTrusted(X509Certificate[] certs, String authType, SSLEngine engine) throws CertificateException", "public List<X509Certificate> checkServerTrusted(X509Certificate[] certs, String authType, String host) throws CertificateException", "private void checkPins(List<X509Certificate> chain) throws CertificateException", "private boolean isPinningEnforced(List<X509Certificate> chain) throws CertificateException", "public X509Certificate[] getAcceptedIssuers()", "public void handleTrustStorageUpdate()" ]
}