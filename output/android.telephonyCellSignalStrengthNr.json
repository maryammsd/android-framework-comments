{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/CellSignalStrengthNr.java",
  "packageName" : "android.telephony",
  "className" : "CellSignalStrengthNr",
  "comment" : "\n * 5G NR signal strength related information.\n ",
  "variables" : [ {
    "name" : "UNKNOWN_ASU_LEVEL",
    "type" : "int",
    "comment" : "\n     * The value is used to indicate that the asu level is unknown.\n     * Reference: 3GPP TS 27.007 section 8.69.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "VDBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSsRsrpThresholds",
    "type" : "int[]",
    "comment" : " Boundaries: [-140 dB, -44 dB]",
    "links" : [ ]
  }, {
    "name" : "mSsRsrqThresholds",
    "type" : "int[]",
    "comment" : " Boundaries: [-20 dB, -3 dB]",
    "links" : [ ]
  }, {
    "name" : "mSsSinrThresholds",
    "type" : "int[]",
    "comment" : " Boundaries: [-23 dB, 40 dB]",
    "links" : [ ]
  }, {
    "name" : "USE_SSRSRP",
    "type" : "int",
    "comment" : "\n     * Indicates SSRSRP is considered for {@link #getLevel()} and reporting from modem.\n     *\n     * @hide\n     ",
    "links" : [ "#getLevel" ]
  }, {
    "name" : "USE_SSRSRQ",
    "type" : "int",
    "comment" : "\n     * Indicates SSRSRQ is considered for {@link #getLevel()} and reporting from modem.\n     *\n     * @hide\n     ",
    "links" : [ "#getLevel" ]
  }, {
    "name" : "USE_SSSINR",
    "type" : "int",
    "comment" : "\n     * Indicates SSSINR is considered for {@link #getLevel()} and reporting from modem.\n     *\n     * @hide\n     ",
    "links" : [ "#getLevel" ]
  }, {
    "name" : "mCsiRsrp",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCsiRsrq",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCsiSinr",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSsRsrp",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSsRsrq",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSsSinr",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParametersUseForLevel",
    "type" : "int",
    "comment" : "\n     * Bit-field integer to determine whether to use SS reference signal received power (SSRSRP),\n     * SS reference signal received quality (SSRSRQ), or/and SS signal-to-noise and interference\n     * ratio (SSSINR) for the number of 5G NR signal bars. If multiple measures are set bit, the\n     * parameter whose value is smallest is used to indicate the signal bar.\n     *\n     *  SSRSRP = 1 << 0,\n     *  SSRSRQ = 1 << 1,\n     *  SSSINR = 1 << 2,\n     *\n     * For example, if both SSRSRP and SSSINR are used, the value of key is 5 (1 << 0 | 1 << 2).\n     * If the key is invalid or not configured, a default value (SSRSRP = 1 << 0) will apply.\n     ",
    "links" : [ ]
  }, {
    "name" : "sInvalid",
    "type" : "CellSignalStrengthNr",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<CellSignalStrengthNr>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static int flip(int val)",
    "returnType" : "int",
    "comment" : "\n     * Flip sign cell strength value when taking in the value from hal\n     * @param val cell strength value\n     * @return flipped value\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSsRsrp()",
    "returnType" : "int",
    "comment" : "\n     * Reference: 3GPP TS 38.215.\n     * Range: -140 dBm to -44 dBm.\n     * @return SS reference signal received power, {@link CellInfo#UNAVAILABLE} means unreported\n     * value.\n     ",
    "links" : [ "CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getSsRsrq()",
    "returnType" : "int",
    "comment" : "\n     * Reference: 3GPP TS 38.215.\n     * Range: -20 dB to -3 dB.\n     * @return SS reference signal received quality, {@link CellInfo#UNAVAILABLE} means unreported\n     * value.\n     ",
    "links" : [ "CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getSsSinr()",
    "returnType" : "int",
    "comment" : "\n     * Reference: 3GPP TS 38.215 Sec 5.1.*, 3GPP TS 38.133 10.1.16.1\n     * Range: -23 dB to 40 dB\n     * @return SS signal-to-noise and interference ratio, {@link CellInfo#UNAVAILABLE} means\n     * unreported value.\n     ",
    "links" : [ "CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getCsiRsrp()",
    "returnType" : "int",
    "comment" : "\n     * Reference: 3GPP TS 38.215.\n     * Range: -140 dBm to -44 dBm.\n     * @return CSI reference signal received power, {@link CellInfo#UNAVAILABLE} means unreported\n     * value.\n     ",
    "links" : [ "CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getCsiRsrq()",
    "returnType" : "int",
    "comment" : "\n     * Reference: 3GPP TS 38.215.\n     * Range: -20 dB to -3 dB.\n     * @return CSI reference signal received quality, {@link CellInfo#UNAVAILABLE} means unreported\n     * value.\n     ",
    "links" : [ "CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getCsiSinr()",
    "returnType" : "int",
    "comment" : "\n     * Reference: 3GPP TS 38.215 Sec 5.1.*, 3GPP TS 38.133 10.1.16.1\n     * Range: -23 dB to 23 dB\n     * @return CSI signal-to-noise and interference ratio, {@link CellInfo#UNAVAILABLE} means\n     * unreported value.\n     ",
    "links" : [ "CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setDefaultValues()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getLevel()",
    "returnType" : "int",
    "comment" : " {@inheritDoc} ",
    "links" : [ ]
  }, {
    "name" : "private boolean isLevelForParameter(@SignalLevelAndReportCriteriaSource int parameterType)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the given parameter type is considered to use for {@link #getLevel()}.\n     *\n     * Note: if multiple parameter types are considered, the smaller level for one of the\n     * parameters would be returned by {@link #getLevel()}\n     *\n     * @param parameterType bitwise OR of {@link #USE_SSRSRP}, {@link #USE_SSRSRQ},\n     *         {@link #USE_SSSINR}\n     * @return {@code true} if the level is calculated based on the given parameter type;\n     *      {@code false} otherwise.\n     *\n     ",
    "links" : [ "#getLevel", "#getLevel", "#USE_SSRSRP", "#USE_SSRSRQ", "#USE_SSSINR" ]
  }, {
    "name" : "public void updateLevel(PersistableBundle cc, ServiceState ss)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private int updateLevelWithMeasure(int measure, int[] thresholds)",
    "returnType" : "int",
    "comment" : "\n     * Update level with corresponding measure and thresholds.\n     *\n     * @param measure corresponding signal measure\n     * @param thresholds corresponding signal thresholds\n     * @return level of the signal strength\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the RSRP in ASU.\n     *\n     * Asu is calculated based on 3GPP RSRP. Refer to 3GPP 27.007 (Ver 10.3.0) Sec 8.69\n     *\n     * @return RSRP in ASU 0..97, 255, or UNAVAILABLE\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the SS-RSRP as dBm value -140..-44dBm or {@link CellInfo#UNAVAILABLE UNAVAILABLE}.\n     ",
    "links" : [ "CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public CellSignalStrengthNr copy()",
    "returnType" : "CellSignalStrengthNr",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isValid()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "UNKNOWN_ASU_LEVEL", "VDBG", "TAG", "mSsRsrpThresholds", "mSsRsrqThresholds", "mSsSinrThresholds", "USE_SSRSRP", "USE_SSRSRQ", "USE_SSSINR", "mCsiRsrp", "mCsiRsrq", "mCsiSinr", "mSsRsrp", "mSsRsrq", "mSsSinr", "mLevel", "mParametersUseForLevel", "sInvalid", "CREATOR" ],
  "methodNames" : [ "private static int flip(int val)", "public int getSsRsrp()", "public int getSsRsrq()", "public int getSsSinr()", "public int getCsiRsrp()", "public int getCsiRsrq()", "public int getCsiSinr()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void setDefaultValues()", "public int getLevel()", "private boolean isLevelForParameter(@SignalLevelAndReportCriteriaSource int parameterType)", "public void updateLevel(PersistableBundle cc, ServiceState ss)", "private int updateLevelWithMeasure(int measure, int[] thresholds)", "public int getAsuLevel()", "public int getDbm()", "public CellSignalStrengthNr copy()", "public int hashCode()", "public boolean isValid()", "public boolean equals(Object obj)", "public String toString()" ]
}