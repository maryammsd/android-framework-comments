{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/ScheduledThreadPoolExecutor.java",
  "packageName" : "java.util.concurrent",
  "className" : "ScheduledFutureTask",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "sequenceNumber",
    "type" : "long",
    "comment" : " Sequence number to break ties FIFO ",
    "links" : [ ]
  }, {
    "name" : "time",
    "type" : "long",
    "comment" : " The nanoTime-based time when the task is enabled to execute. ",
    "links" : [ ]
  }, {
    "name" : "period",
    "type" : "long",
    "comment" : "\n         * Period for repeating tasks, in nanoseconds.\n         * A positive value indicates fixed-rate execution.\n         * A negative value indicates fixed-delay execution.\n         * A value of 0 indicates a non-repeating (one-shot) task.\n         ",
    "links" : [ ]
  }, {
    "name" : "outerTask",
    "type" : "RunnableScheduledFuture<V>",
    "comment" : " The actual task to be re-enqueued by reExecutePeriodic ",
    "links" : [ ]
  }, {
    "name" : "heapIndex",
    "type" : "int",
    "comment" : "\n         * Index into delay queue, to support faster cancellation.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getDelay(TimeUnit unit)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int compareTo(Delayed other)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isPeriodic()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns {@code true} if this is a periodic (not a one-shot) action.\n         *\n         * @return {@code true} if periodic\n         ",
    "links" : [ ]
  }, {
    "name" : "private void setNextRunTime()",
    "returnType" : "void",
    "comment" : "\n         * Sets the next time to run for a periodic task.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean cancel(boolean mayInterruptIfRunning)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void run()",
    "returnType" : "void",
    "comment" : "\n         * Overrides FutureTask version so as to reset/requeue if periodic.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public long getDelay(TimeUnit unit)", "public int compareTo(Delayed other)", "public boolean isPeriodic()", "private void setNextRunTime()", "public boolean cancel(boolean mayInterruptIfRunning)", "public void run()" ],
  "variableNames" : [ "sequenceNumber", "time", "period", "outerTask", "heapIndex" ]
}