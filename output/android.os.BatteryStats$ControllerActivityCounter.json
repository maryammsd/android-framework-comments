{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/BatteryStats.java",
  "packageName" : "android.os",
  "className" : "ControllerActivityCounter",
  "comment" : "\n     * Container class that aggregates counters for transmit, receive, and idle state of a\n     * radio controller.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract LongCounter getIdleTimeCounter()",
    "returnType" : "LongCounter",
    "comment" : "\n         * @return a non-null {@link LongCounter} representing time spent (milliseconds) in the\n         * idle state.\n         ",
    "links" : [ "LongCounter" ]
  }, {
    "name" : "public abstract LongCounter getScanTimeCounter()",
    "returnType" : "LongCounter",
    "comment" : "\n         * @return a non-null {@link LongCounter} representing time spent (milliseconds) in the\n         * scan state.\n         ",
    "links" : [ "LongCounter" ]
  }, {
    "name" : "public abstract LongCounter getSleepTimeCounter()",
    "returnType" : "LongCounter",
    "comment" : "\n         * @return a non-null {@link LongCounter} representing time spent (milliseconds) in the\n         * sleep state.\n         ",
    "links" : [ "LongCounter" ]
  }, {
    "name" : "public abstract LongCounter getRxTimeCounter()",
    "returnType" : "LongCounter",
    "comment" : "\n         * @return a non-null {@link LongCounter} representing time spent (milliseconds) in the\n         * receive state.\n         ",
    "links" : [ "LongCounter" ]
  }, {
    "name" : "public abstract LongCounter[] getTxTimeCounters()",
    "returnType" : "LongCounter[]",
    "comment" : "\n         * An array of {@link LongCounter}, representing various transmit levels, where each level\n         * may draw a different amount of power. The levels themselves are controller-specific.\n         * @return non-null array of {@link LongCounter}s representing time spent (milliseconds) in\n         * various transmit level states.\n         ",
    "links" : [ "LongCounter" ]
  }, {
    "name" : "public abstract LongCounter getPowerCounter()",
    "returnType" : "LongCounter",
    "comment" : "\n         * @return a non-null {@link LongCounter} representing the power consumed by the controller\n         * in all states, measured in milli-ampere-milliseconds (mAms). The counter may always\n         * yield a value of 0 if the device doesn't support power calculations.\n         ",
    "links" : [ "LongCounter" ]
  }, {
    "name" : "public abstract LongCounter getMonitoredRailChargeConsumedMaMs()",
    "returnType" : "LongCounter",
    "comment" : "\n         * @return a non-null {@link LongCounter} representing total power monitored on the rails\n         * in mAms (miliamps-milliseconds). The counter may always yield a value of 0 if the device\n         * doesn't support power rail monitoring.\n         ",
    "links" : [ "LongCounter" ]
  } ],
  "methodNames" : [ "public abstract LongCounter getIdleTimeCounter()", "public abstract LongCounter getScanTimeCounter()", "public abstract LongCounter getSleepTimeCounter()", "public abstract LongCounter getRxTimeCounter()", "public abstract LongCounter[] getTxTimeCounters()", "public abstract LongCounter getPowerCounter()", "public abstract LongCounter getMonitoredRailChargeConsumedMaMs()" ],
  "variableNames" : [ ]
}