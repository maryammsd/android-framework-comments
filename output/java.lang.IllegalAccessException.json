{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/IllegalAccessException.java",
  "packageName" : "java.lang",
  "className" : "IllegalAccessException",
  "comment" : "\n * An IllegalAccessException is thrown when an application tries\n * to reflectively create an instance (other than an array),\n * set or get a field, or invoke a method, but the currently\n * executing method does not have access to the definition of\n * the specified class, field, method or constructor.\n *\n * @see     Class#newInstance()\n * @see     java.lang.reflect.Field#set(Object, Object)\n * @see     java.lang.reflect.Field#setBoolean(Object, boolean)\n * @see     java.lang.reflect.Field#setByte(Object, byte)\n * @see     java.lang.reflect.Field#setShort(Object, short)\n * @see     java.lang.reflect.Field#setChar(Object, char)\n * @see     java.lang.reflect.Field#setInt(Object, int)\n * @see     java.lang.reflect.Field#setLong(Object, long)\n * @see     java.lang.reflect.Field#setFloat(Object, float)\n * @see     java.lang.reflect.Field#setDouble(Object, double)\n * @see     java.lang.reflect.Field#get(Object)\n * @see     java.lang.reflect.Field#getBoolean(Object)\n * @see     java.lang.reflect.Field#getByte(Object)\n * @see     java.lang.reflect.Field#getShort(Object)\n * @see     java.lang.reflect.Field#getChar(Object)\n * @see     java.lang.reflect.Field#getInt(Object)\n * @see     java.lang.reflect.Field#getLong(Object)\n * @see     java.lang.reflect.Field#getFloat(Object)\n * @see     java.lang.reflect.Field#getDouble(Object)\n * @see     java.lang.reflect.Method#invoke(Object, Object[])\n * @see     java.lang.reflect.Constructor#newInstance(Object[])\n * @since   1.0\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "serialVersionUID" ]
}