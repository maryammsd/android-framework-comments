{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/autofill/augmented/FillWindow.java",
  "packageName" : "android.service.autofill.augmented",
  "className" : "FillWindow",
  "comment" : "\n * Handle to a window used to display the augmented autofill UI.\n *\n * <p>The steps to create an augmented autofill UI are:\n *\n * <ol>\n *   <li>Gets the {@link PresentationParams} from the {@link FillRequest}.\n *   <li>Gets the {@link Area} to display the UI (for example, through\n *   {@link PresentationParams#getSuggestionArea()}.\n *   <li>Creates a {@link View} that must fit in the {@link Area#getBounds() area boundaries}.\n *   <li>Set the proper listeners to the view (for example, a click listener that\n *   triggers {@link FillController#autofill(java.util.List)}\n *   <li>Call {@link #update(Area, View, long)} with these arguments.\n *   <li>Create a {@link FillResponse} with the {@link FillWindow}.\n *   <li>Pass such {@link FillResponse} to {@link FillCallback#onSuccess(FillResponse)}.\n * </ol>\n *\n * @hide\n ",
  "links" : [ "android.service.autofill.augmented.PresentationParams.Area", "android.service.autofill.augmented.PresentationParams#getSuggestionArea()", "#update(Area", "android.service.autofill.augmented.FillController#autofill(java.util.List)", "android.view.View", "android.service.autofill.augmented.FillResponse", "android.service.autofill.augmented.FillCallback#onSuccess(FillResponse)", "android.service.autofill.augmented.PresentationParams.Area#getBounds()", "android.service.autofill.augmented.FillRequest", "android.service.autofill.augmented.FillWindow", "android.service.autofill.augmented.PresentationParams" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCloseGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUiThreadHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWm",
    "type" : "WindowManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFillView",
    "type" : "View",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShowing",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBounds",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUpdateCalled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDestroyed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProxy",
    "type" : "AutofillProxy",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean update(@NonNull Area area, @NonNull View rootView, long flags)",
    "returnType" : "boolean",
    "comment" : "\n     * Updates the content of the window.\n     *\n     * @param rootView new root view\n     * @param area coordinates to render the view.\n     * @param flags currently not used.\n     *\n     * @return boolean whether the window was updated or not.\n     *\n     * @throws IllegalArgumentException if the area is not compatible with this window\n     ",
    "links" : [ ]
  }, {
    "name" : " void show()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void hide()",
    "returnType" : "void",
    "comment" : "\n     * Hides the window.\n     *\n     * <p>The window is not destroyed and can be shown again\n     ",
    "links" : [ ]
  }, {
    "name" : "private void handleShow(WindowManager.LayoutParams p)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleHide()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "\n     * Destroys the window.\n     *\n     * <p>Once destroyed, this window cannot be used anymore\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void checkNotDestroyedLocked()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(@NonNull String prefix, @NonNull PrintWriter pw)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean update(@NonNull Area area, @NonNull View rootView, long flags)", " void show()", "private void hide()", "private void handleShow(WindowManager.LayoutParams p)", "private void handleHide()", "public void destroy()", "protected void finalize() throws Throwable", "private void checkNotDestroyedLocked()", "public void dump(@NonNull String prefix, @NonNull PrintWriter pw)", "public void close()" ],
  "variableNames" : [ "TAG", "mLock", "mCloseGuard", "mUiThreadHandler", "mWm", "mFillView", "mShowing", "mBounds", "mUpdateCalled", "mDestroyed", "mProxy" ]
}