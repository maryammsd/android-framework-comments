{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/widget/Editor.java",
  "packageName" : "android.widget",
  "className" : "EditOperation",
  "comment" : "\n     * An operation to undo a single \"edit\" to a text view.\n     ",
  "variables" : [ {
    "name" : "TYPE_INSERT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_DELETE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_REPLACE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOldText",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNewText",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStart",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOldCursorPos",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNewCursorPos",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrozen",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsComposition",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.ClassLoaderCreator<EditOperation>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getNewTextEnd()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getOldTextEnd()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void commit()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void undo()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void redo()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean mergeWith(EditOperation edit)",
    "returnType" : "boolean",
    "comment" : "\n         * Attempts to merge this existing operation with a new edit.\n         * @param edit The new edit operation.\n         * @return If the merge succeeded, returns true. Otherwise returns false and leaves this\n         * object unchanged.\n         ",
    "links" : [ ]
  }, {
    "name" : "private boolean mergeInsertWith(EditOperation edit)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean mergeDeleteWith(EditOperation edit)",
    "returnType" : "boolean",
    "comment" : " TODO: Support forward delete.",
    "links" : [ ]
  }, {
    "name" : "private boolean mergeReplaceWith(EditOperation edit)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forceMergeWith(EditOperation edit)",
    "returnType" : "void",
    "comment" : "\n         * Forcibly creates a single merged edit operation by simulating the entire text\n         * contents being replaced.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static void modifyText(Editable text, int deleteFrom, int deleteTo, CharSequence newText, int newTextInsertAt, int newCursorPos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String getTypeString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TYPE_INSERT", "TYPE_DELETE", "TYPE_REPLACE", "mType", "mOldText", "mNewText", "mStart", "mOldCursorPos", "mNewCursorPos", "mFrozen", "mIsComposition", "CREATOR" ],
  "methodNames" : [ "public void writeToParcel(Parcel dest, int flags)", "private int getNewTextEnd()", "private int getOldTextEnd()", "public void commit()", "public void undo()", "public void redo()", "private boolean mergeWith(EditOperation edit)", "private boolean mergeInsertWith(EditOperation edit)", "private boolean mergeDeleteWith(EditOperation edit)", "private boolean mergeReplaceWith(EditOperation edit)", "public void forceMergeWith(EditOperation edit)", "private static void modifyText(Editable text, int deleteFrom, int deleteTo, CharSequence newText, int newTextInsertAt, int newCursorPos)", "private String getTypeString()", "public String toString()" ]
}