{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/xmlpull/v1/XmlPullParserFactory.java",
  "packageName" : "org.xmlpull.v1",
  "className" : "XmlPullParserFactory",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "PROPERTY_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "parserClasses",
    "type" : "ArrayList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "serializerClasses",
    "type" : "ArrayList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "classNamesLocation",
    "type" : "String",
    "comment" : " Unused, but we have to keep it because it's public API. ",
    "links" : [ ]
  }, {
    "name" : "features",
    "type" : "HashMap<String, Boolean>",
    "comment" : " TODO: This can't be made final because it's a public API.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setFeature(String name, boolean state) throws XmlPullParserException",
    "returnType" : "void",
    "comment" : "\n     * Set the features to be set when XML Pull Parser is created by this factory.\n     * <p><b>NOTE:</b> factory features are not used for XML Serializer.\n     *\n     * @param name string with URI identifying feature\n     * @param state if true feature will be set; if false will be ignored\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getFeature(String name)",
    "returnType" : "boolean",
    "comment" : "\n     * Return the current value of the feature with given name.\n     * <p><b>NOTE:</b> factory features are not used for XML Serializer.\n     *\n     * @param name The name of feature to be retrieved.\n     * @return The value of named feature.\n     *     Unknown features are <string>always</strong> returned as false\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNamespaceAware(boolean awareness)",
    "returnType" : "void",
    "comment" : "\n     * Specifies that the parser produced by this factory will provide\n     * support for XML namespaces.\n     * By default the value of this is set to false.\n     *\n     * @param awareness true if the parser produced by this code\n     *    will provide support for XML namespaces;  false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isNamespaceAware()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether or not the factory is configured to produce\n     * parsers which are namespace aware\n     * (it simply set feature XmlPullParser.FEATURE_PROCESS_NAMESPACES to true or false).\n     *\n     * @return  true if the factory is configured to produce parsers\n     *    which are namespace aware; false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setValidating(boolean validating)",
    "returnType" : "void",
    "comment" : "\n     * Specifies that the parser produced by this factory will be validating\n     * (it simply set feature XmlPullParser.FEATURE_VALIDATION to true or false).\n     *\n     * By default the value of this is set to false.\n     *\n     * @param validating - if true the parsers created by this factory  must be validating.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isValidating()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public XmlPullParser newPullParser() throws XmlPullParserException",
    "returnType" : "XmlPullParser",
    "comment" : "\n     * Creates a new instance of a XML Pull Parser\n     * using the currently configured factory features.\n     *\n     * @return A new instance of a XML Pull Parser.\n     ",
    "links" : [ ]
  }, {
    "name" : "private XmlPullParser getParserInstance() throws XmlPullParserException",
    "returnType" : "XmlPullParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private XmlSerializer getSerializerInstance() throws XmlPullParserException",
    "returnType" : "XmlSerializer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static XmlPullParserException newInstantiationException(String message, ArrayList<Exception> exceptions)",
    "returnType" : "XmlPullParserException",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public XmlSerializer newSerializer() throws XmlPullParserException",
    "returnType" : "XmlSerializer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static XmlPullParserFactory newInstance() throws XmlPullParserException",
    "returnType" : "XmlPullParserFactory",
    "comment" : "\n     * Creates a new instance of a PullParserFactory that can be used\n     * to create XML pull parsers. The factory will always return instances\n     * of Android's built-in {@link XmlPullParser} and {@link XmlSerializer}.\n     ",
    "links" : [ "org.xmlpull.v1.XmlSerializer", "org.xmlpull.v1.XmlPullParser" ]
  }, {
    "name" : "public static XmlPullParserFactory newInstance(String unused, Class unused2) throws XmlPullParserException",
    "returnType" : "XmlPullParserFactory",
    "comment" : "\n     * Creates a factory that always returns instances of Android's built-in\n     * {@link XmlPullParser} and {@link XmlSerializer} implementation. This\n     * <b>does not</b> support factories capable of creating arbitrary parser\n     * and serializer implementations. Both arguments to this method are unused.\n     ",
    "links" : [ "org.xmlpull.v1.XmlSerializer", "org.xmlpull.v1.XmlPullParser" ]
  } ],
  "methodNames" : [ "public void setFeature(String name, boolean state) throws XmlPullParserException", "public boolean getFeature(String name)", "public void setNamespaceAware(boolean awareness)", "public boolean isNamespaceAware()", "public void setValidating(boolean validating)", "public boolean isValidating()", "public XmlPullParser newPullParser() throws XmlPullParserException", "private XmlPullParser getParserInstance() throws XmlPullParserException", "private XmlSerializer getSerializerInstance() throws XmlPullParserException", "private static XmlPullParserException newInstantiationException(String message, ArrayList<Exception> exceptions)", "public XmlSerializer newSerializer() throws XmlPullParserException", "public static XmlPullParserFactory newInstance() throws XmlPullParserException", "public static XmlPullParserFactory newInstance(String unused, Class unused2) throws XmlPullParserException" ],
  "variableNames" : [ "PROPERTY_NAME", "parserClasses", "serializerClasses", "classNamesLocation", "features" ]
}