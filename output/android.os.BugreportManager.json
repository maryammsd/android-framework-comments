{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/BugreportManager.java",
  "packageName" : "android.os",
  "className" : "BugreportManager",
  "comment" : "\n * Class that provides a privileged API to capture and consume bugreports.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INTENT_UI_INTENSIVE_BUGREPORT_DUMPS_FINISHED",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "IDumpstate",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void startBugreport(@NonNull ParcelFileDescriptor bugreportFd, @Nullable ParcelFileDescriptor screenshotFd, @NonNull BugreportParams params, @NonNull @CallbackExecutor Executor executor, @NonNull BugreportCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Starts a bugreport.\n     *\n     * <p>This starts a bugreport in the background. However the call itself can take several\n     * seconds to return in the worst case. {@code callback} will receive progress and status\n     * updates.\n     *\n     * <p>The bugreport artifacts will be copied over to the given file descriptors only if the\n     * user consents to sharing with the calling app.\n     *\n     * <p>{@link BugreportManager} takes ownership of {@code bugreportFd} and {@code screenshotFd}.\n     *\n     * @param bugreportFd file to write the bugreport. This should be opened in write-only,\n     *     append mode.\n     * @param screenshotFd file to write the screenshot, if necessary. This should be opened\n     *     in write-only, append mode.\n     * @param params options that specify what kind of a bugreport should be taken\n     * @param callback callback for progress and status updates\n     ",
    "links" : [ "android.os.BugreportManager" ]
  }, {
    "name" : "public void cancelBugreport()",
    "returnType" : "void",
    "comment" : "\n     * Cancels a currently running bugreport.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void requestBugreport(@NonNull BugreportParams params, @Nullable CharSequence shareTitle, @Nullable CharSequence shareDescription)",
    "returnType" : "void",
    "comment" : "\n     * Requests a bugreport.\n     *\n     * <p>This requests the platform/system to take a bugreport and makes the final bugreport\n     * available to the user. The user may choose to share it with another app, but the bugreport\n     * is never given back directly to the app that requested it.\n     *\n     * @param params           {@link BugreportParams} that specify what kind of a bugreport should\n     *                         be taken, please note that not all kinds of bugreport allow for a\n     *                         progress notification\n     * @param shareTitle       title on the final share notification\n     * @param shareDescription description on the final share notification\n     ",
    "links" : [ "android.os.BugreportParams" ]
  } ],
  "variableNames" : [ "TAG", "INTENT_UI_INTENSIVE_BUGREPORT_DUMPS_FINISHED", "mContext", "mBinder" ],
  "methodNames" : [ "public void startBugreport(@NonNull ParcelFileDescriptor bugreportFd, @Nullable ParcelFileDescriptor screenshotFd, @NonNull BugreportParams params, @NonNull @CallbackExecutor Executor executor, @NonNull BugreportCallback callback)", "public void cancelBugreport()", "public void requestBugreport(@NonNull BugreportParams params, @Nullable CharSequence shareTitle, @Nullable CharSequence shareDescription)" ]
}