{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/input/VirtualStylusMotionEvent.java",
  "packageName" : "android.hardware.input",
  "className" : "VirtualStylusMotionEvent",
  "comment" : "\n * An event describing a stylus interaction originating from a remote device.\n *\n * The tool type, location and action are required; tilts and pressure are optional.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TILT_MIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TILT_MAX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PRESSURE_MIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PRESSURE_MAX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TOOL_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TOOL_TYPE_STYLUS",
    "type" : "int",
    "comment" : " Tool type indicating that a stylus is the origin of the event. ",
    "links" : [ ]
  }, {
    "name" : "TOOL_TYPE_ERASER",
    "type" : "int",
    "comment" : " Tool type indicating that an eraser is the origin of the event. ",
    "links" : [ ]
  }, {
    "name" : "ACTION_UNKNOWN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ACTION_DOWN",
    "type" : "int",
    "comment" : "\n     * Action indicating the stylus has been pressed down to the screen. ACTION_DOWN with pressure\n     * {@code 0} indicates that the stylus is hovering over the screen, and non-zero pressure\n     * indicates that the stylus is touching the screen.\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_UP",
    "type" : "int",
    "comment" : " Action indicating the stylus has been lifted from the screen. ",
    "links" : [ ]
  }, {
    "name" : "ACTION_MOVE",
    "type" : "int",
    "comment" : " Action indicating the stylus has been moved along the screen. ",
    "links" : [ ]
  }, {
    "name" : "mToolType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAction",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPressure",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTiltX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTiltY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEventTimeNanos",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<VirtualStylusMotionEvent>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getToolType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the tool type associated with this event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAction()",
    "returnType" : "int",
    "comment" : "\n     * Returns the action associated with this event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getX()",
    "returnType" : "int",
    "comment" : "\n     * Returns the x-axis location associated with this event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getY()",
    "returnType" : "int",
    "comment" : "\n     * Returns the y-axis location associated with this event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPressure()",
    "returnType" : "int",
    "comment" : "\n     * Returns the pressure associated with this event. {@code 0} pressure indicates that the stylus\n     * is hovering, otherwise the stylus is touching the screen. Returns {@code 255} if omitted.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTiltX()",
    "returnType" : "int",
    "comment" : "\n     * Returns the plane angle (in degrees, in the range of [{@code -90}, {@code 90}]) between the\n     * y-z plane and the plane containing both the stylus axis and the y axis. A positive tiltX is\n     * to the right, in the direction of increasing x values. {@code 0} tilt indicates that the\n     * stylus is perpendicular to the x-axis. Returns {@code 0} if omitted.\n     *\n     * @see Builder#setTiltX\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTiltY()",
    "returnType" : "int",
    "comment" : "\n     * Returns the plane angle (in degrees, in the range of [{@code -90}, {@code 90}]) between the\n     * x-z plane and the plane containing both the stylus axis and the x axis. A positive tiltY is\n     * towards the user, in the direction of increasing y values. {@code 0} tilt indicates that the\n     * stylus is perpendicular to the y-axis. Returns {@code 0} if omitted.\n     *\n     * @see Builder#setTiltY\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getEventTimeNanos()",
    "returnType" : "long",
    "comment" : "\n     * Returns the time this event occurred, in the {@link SystemClock#uptimeMillis()} time base but\n     * with nanosecond (instead of millisecond) precision.\n     *\n     * @see InputEvent#getEventTime()\n     ",
    "links" : [ "android.os.SystemClock#uptimeMillis()" ]
  } ],
  "methodNames" : [ "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public int getToolType()", "public int getAction()", "public int getX()", "public int getY()", "public int getPressure()", "public int getTiltX()", "public int getTiltY()", "public long getEventTimeNanos()" ],
  "variableNames" : [ "TILT_MIN", "TILT_MAX", "PRESSURE_MIN", "PRESSURE_MAX", "TOOL_TYPE_UNKNOWN", "TOOL_TYPE_STYLUS", "TOOL_TYPE_ERASER", "ACTION_UNKNOWN", "ACTION_DOWN", "ACTION_UP", "ACTION_MOVE", "mToolType", "mAction", "mX", "mY", "mPressure", "mTiltX", "mTiltY", "mEventTimeNanos", "CREATOR" ]
}