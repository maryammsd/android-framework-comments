{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/vibrator/VibratorFrequencyProfile.java",
  "packageName" : "android.os.vibrator",
  "className" : "VibratorFrequencyProfile",
  "comment" : "\n * Describes the output of a {@link android.os.Vibrator} for different vibration frequencies.\n *\n * <p>The profile contains the minimum and maximum supported vibration frequencies, if the device\n * supports independent frequency control.\n *\n * <p>It also describes the relative output acceleration of a vibration at different supported\n * frequencies. The acceleration is defined by a relative amplitude value between 0 and 1,\n * inclusive, where 0 represents the vibrator off state and 1 represents the maximum output\n * acceleration that the vibrator can reach across all supported frequencies.\n *\n * <p>The measurements are returned as an array of uniformly distributed amplitude values for\n * frequencies between the minimum and maximum supported ones. The measurement interval is the\n * frequency increment between each pair of amplitude values.\n *\n * <p>Vibrators without independent frequency control do not have a frequency profile.\n * @hide\n ",
  "links" : [ "android.os.Vibrator" ],
  "variables" : [ {
    "name" : "mFrequencyProfile",
    "type" : "VibratorInfo.FrequencyProfile",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public float[] getMaxAmplitudeMeasurements()",
    "returnType" : "float[]",
    "comment" : "\n     * Measurements of the maximum relative amplitude the vibrator can achieve for each supported\n     * frequency.\n     *\n     * <p>The frequency of a measurement is determined as:\n     *\n     * {@code getMinFrequency() + measurementIndex * getMaxAmplitudeMeasurementInterval()}\n     *\n     * <p>The returned list will not be empty, and will have entries representing frequencies from\n     * {@link #getMinFrequency()} to {@link #getMaxFrequency()}, inclusive.\n     *\n     * @return Array of maximum relative amplitude measurements.\n     * @hide\n     ",
    "links" : [ "#getMinFrequency()", "#getMaxFrequency()" ]
  }, {
    "name" : "public float getMaxAmplitudeMeasurementInterval()",
    "returnType" : "float",
    "comment" : "\n     * Gets the frequency interval used to measure the maximum relative amplitudes.\n     *\n     * @return the frequency interval used for the measurement, in hertz.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getMinFrequency()",
    "returnType" : "float",
    "comment" : "\n     * Gets the minimum frequency supported by the vibrator.\n     *\n     * @return the minimum frequency supported by the vibrator, in hertz.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getMaxFrequency()",
    "returnType" : "float",
    "comment" : "\n     * Gets the maximum frequency supported by the vibrator.\n     *\n     * @return the maximum frequency supported by the vibrator, in hertz.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public float[] getMaxAmplitudeMeasurements()", "public float getMaxAmplitudeMeasurementInterval()", "public float getMinFrequency()", "public float getMaxFrequency()" ],
  "variableNames" : [ "mFrequencyProfile" ]
}