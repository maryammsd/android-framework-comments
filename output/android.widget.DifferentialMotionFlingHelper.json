{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/DifferentialMotionFlingHelper.java",
  "packageName" : "android.widget",
  "className" : "DifferentialMotionFlingHelper",
  "comment" : "\n * Helper for controlling differential motion flings.\n *\n * <p><b>Differential motion</b> here refers to motions that report change in position instead of\n * absolution position. For instance, differential data points of 2, -1, 5 represent: there was\n * a movement by \"2\" units, then by \"-1\" units, then by \"5\" units. Examples of motions reported\n * differentially include motions from {@link MotionEvent#AXIS_SCROLL}.\n *\n * <p>The client should call {@link #onMotionEvent} when a differential motion event happens on\n * the target View (that is, the View on which we want to fling), and this class processes the event\n * to orchestrate fling.\n *\n * <p>Note that this helper class currently works to control fling only in one direction at a time.\n * As such, it works independently of horizontal/vertical orientations. It requests its client to\n * start/stop fling, and it's up to the client to choose the fling direction based on its specific\n * internal configurations and/or preferences.\n *\n * @hide\n ",
  "links" : [ "#onMotionEvent", "android.view.MotionEvent#AXIS_SCROLL" ],
  "variables" : [ {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTarget",
    "type" : "DifferentialMotionFlingTarget",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVelocityThresholdCalculator",
    "type" : "FlingVelocityThresholdCalculator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVelocityProvider",
    "type" : "DifferentialVelocityProvider",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWidgetFeatureFlags",
    "type" : "FeatureFlags",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVelocityTracker",
    "type" : "VelocityTracker",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastFlingVelocity",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastProcessedAxis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastProcessedSource",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastProcessedDeviceId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlingVelocityThresholds",
    "type" : "int[]",
    "comment" : " Initialize min and max to +infinity and 0, to effectively disable fling at start.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onMotionEvent(MotionEvent event, int axis)",
    "returnType" : "void",
    "comment" : "\n     * Called to report when a differential motion happens on the View that's the target for fling.\n     *\n     * @param event the {@link MotionEvent} being reported.\n     * @param axis the axis being processed by the target View.\n     ",
    "links" : [ "android.view.MotionEvent" ]
  }, {
    "name" : "private boolean calculateFlingVelocityThresholds(MotionEvent event, int axis)",
    "returnType" : "boolean",
    "comment" : "\n     * Calculates fling velocity thresholds based on the provided event and axis, and returns {@code\n     * true} if there has been a change of any params that may affect fling velocity thresholds.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void calculateFlingVelocityThresholds(Context context, int[] buffer, MotionEvent event, int axis)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private float getCurrentVelocity(MotionEvent event, int axis)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void recycleVelocityTracker()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static float getCurrentVelocity(VelocityTracker vt, MotionEvent event, int axis)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onMotionEvent(MotionEvent event, int axis)", "private boolean calculateFlingVelocityThresholds(MotionEvent event, int axis)", "private static void calculateFlingVelocityThresholds(Context context, int[] buffer, MotionEvent event, int axis)", "private float getCurrentVelocity(MotionEvent event, int axis)", "private void recycleVelocityTracker()", "private static float getCurrentVelocity(VelocityTracker vt, MotionEvent event, int axis)" ],
  "variableNames" : [ "mContext", "mTarget", "mVelocityThresholdCalculator", "mVelocityProvider", "mWidgetFeatureFlags", "mVelocityTracker", "mLastFlingVelocity", "mLastProcessedAxis", "mLastProcessedSource", "mLastProcessedDeviceId", "mFlingVelocityThresholds" ]
}