{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/CaseMap.java",
  "packageName" : "android.icu.text",
  "className" : "Title",
  "comment" : "\n     * Titlecasing options and methods. Immutable.\n     *\n     * @see #toTitle()\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEFAULT",
    "type" : "Title",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OMIT_UNCHANGED",
    "type" : "Title",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Title wholeString()",
    "returnType" : "Title",
    "comment" : "\n         * Returns an instance that behaves like this one but\n         * titlecases the string as a whole rather than each word.\n         * (Titlecases only the character at index 0, possibly adjusted.)\n         *\n         * <p>It is an error to specify multiple titlecasing iterator options together,\n         * including both an option and an explicit BreakIterator.\n         *\n         * @return an options object with this option.\n         * @see #adjustToCased()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Title sentences()",
    "returnType" : "Title",
    "comment" : "\n         * Returns an instance that behaves like this one but\n         * titlecases sentences rather than words.\n         * (Titlecases only the first character of each sentence, possibly adjusted.)\n         *\n         * <p>It is an error to specify multiple titlecasing iterator options together,\n         * including both an option and an explicit BreakIterator.\n         *\n         * @return an options object with this option.\n         * @see #adjustToCased()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Title omitUnchangedText()",
    "returnType" : "Title",
    "comment" : "\n         * {@inheritDoc}\n         ",
    "links" : [ ]
  }, {
    "name" : "public Title noLowercase()",
    "returnType" : "Title",
    "comment" : "\n         * Returns an instance that behaves like this one but\n         * does not lowercase non-initial parts of words when titlecasing.\n         *\n         * <p>By default, titlecasing will titlecase the character at each\n         * (possibly adjusted) BreakIterator index and\n         * lowercase all other characters up to the next iterator index.\n         * With this option, the other characters will not be modified.\n         *\n         * @return an options object with this option.\n         * @see UCharacter#TITLECASE_NO_LOWERCASE\n         * @see #adjustToCased()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Title noBreakAdjustment()",
    "returnType" : "Title",
    "comment" : "\n         * Returns an instance that behaves like this one but\n         * does not adjust the titlecasing BreakIterator indexes;\n         * titlecases exactly the characters at breaks from the iterator.\n         *\n         * <p>By default, titlecasing will take each break iterator index,\n         * adjust it to the next relevant character (see {@link #adjustToCased()}),\n         * and titlecase that one.\n         *\n         * <p>Other characters are lowercased.\n         *\n         * @return an options object with this option.\n         * @see UCharacter#TITLECASE_NO_BREAK_ADJUSTMENT\n         ",
    "links" : [ "#adjustToCased()" ]
  }, {
    "name" : "public Title adjustToCased()",
    "returnType" : "Title",
    "comment" : "\n         * Returns an instance that behaves like this one but\n         * adjusts each titlecasing BreakIterator index to the next cased character.\n         * (See the Unicode Standard, chapter 3, Default Case Conversion, R3 toTitlecase(X).)\n         *\n         * <p>This used to be the default index adjustment in ICU.\n         * Since ICU 60, the default index adjustment is to the next character that is\n         * a letter, number, symbol, or private use code point.\n         * (Uncased modifier letters are skipped.)\n         * The difference in behavior is small for word titlecasing,\n         * but the new adjustment is much better for whole-string and sentence titlecasing:\n         * It yields \"49ers\" and \"«丰(abc)»\" instead of \"49Ers\" and \"«丰(Abc)»\".\n         *\n         * <p>It is an error to specify multiple titlecasing adjustment options together.\n         *\n         * @return an options object with this option.\n         * @see #noBreakAdjustment()\n         ",
    "links" : [ ]
  }, {
    "name" : "public String apply(Locale locale, BreakIterator iter, CharSequence src)",
    "returnType" : "String",
    "comment" : "\n         * Titlecases a string.\n         * Casing is locale-dependent and context-sensitive.\n         * The result may be longer or shorter than the original.\n         *\n         * <p>Titlecasing uses a break iterator to find the first characters of words\n         * that are to be titlecased. It titlecases those characters and lowercases\n         * all others. (This can be modified with options bits.)\n         *\n         * @param locale    The locale ID. Can be null for {@link Locale#getDefault}.\n         *                  (See {@link ULocale#toLocale}.)\n         * @param iter      A break iterator to find the first characters of words that are to be titlecased.\n         *                  It is set to the source string (setText())\n         *                  and used one or more times for iteration (first() and next()).\n         *                  If null, then a word break iterator for the locale is used\n         *                  (or something equivalent).\n         * @param src       The original string.\n         * @return the result string.\n         *\n         * @see UCharacter#toUpperCase(Locale, String)\n         ",
    "links" : [ "java.util.Locale#getDefault", "android.icu.util.ULocale#toLocale" ]
  }, {
    "name" : "public A apply(Locale locale, BreakIterator iter, CharSequence src, A dest, Edits edits)",
    "returnType" : "A",
    "comment" : "\n         * Titlecases a string and optionally records edits (see {@link #omitUnchangedText}).\n         * Casing is locale-dependent and context-sensitive.\n         * The result may be longer or shorter than the original.\n         *\n         * <p>Titlecasing uses a break iterator to find the first characters of words\n         * that are to be titlecased. It titlecases those characters and lowercases\n         * all others. (This can be modified with options bits.)\n         *\n         * @param locale    The locale ID. Can be null for {@link Locale#getDefault}.\n         *                  (See {@link ULocale#toLocale}.)\n         * @param iter      A break iterator to find the first characters of words that are to be titlecased.\n         *                  It is set to the source string (setText())\n         *                  and used one or more times for iteration (first() and next()).\n         *                  If null, then a word break iterator for the locale is used\n         *                  (or something equivalent).\n         * @param src       The original string.\n         * @param dest      A buffer for the result string. Must not be null.\n         * @param edits     Records edits for index mapping, working with styled text,\n         *                  and getting only changes (if any).\n         *                  This function calls edits.reset() first. edits can be null.\n         * @return dest with the result string (or only changes) appended.\n         *\n         * @see UCharacter#toTitleCase(Locale, String, BreakIterator, int)\n         ",
    "links" : [ "java.util.Locale#getDefault", "android.icu.util.ULocale#toLocale", "#omitUnchangedText" ]
  } ],
  "methodNames" : [ "public Title wholeString()", "public Title sentences()", "public Title omitUnchangedText()", "public Title noLowercase()", "public Title noBreakAdjustment()", "public Title adjustToCased()", "public String apply(Locale locale, BreakIterator iter, CharSequence src)", "public A apply(Locale locale, BreakIterator iter, CharSequence src, A dest, Edits edits)" ],
  "variableNames" : [ "DEFAULT", "OMIT_UNCHANGED" ]
}