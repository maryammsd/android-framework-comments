{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/mbms/GroupCall.java",
  "packageName" : "android.telephony.mbms",
  "className" : "GroupCall",
  "comment" : "\n * Class used to represent a single MBMS group call. After a call has been started with\n * {@link MbmsGroupCallSession#startGroupCall},\n * this class is used to hold information about the call and control it.\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_STOPPED",
    "type" : "int",
    "comment" : "\n     * Indicates that the group call is in a stopped state\n     *\n     * This can be reported after network action or after calling {@link #close}.\n     ",
    "links" : [ "#close" ]
  }, {
    "name" : "STATE_STARTED",
    "type" : "int",
    "comment" : "\n     * Indicates that the group call is started.\n     *\n     * Data can be transmitted and received in this state.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_STALLED",
    "type" : "int",
    "comment" : "\n     * Indicates that the group call is stalled.\n     *\n     * This may be due to a network issue or the device being temporarily out of range.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_NONE",
    "type" : "int",
    "comment" : "\n     * Indicates that the middleware does not have a reason to provide for the state change.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_BY_USER_REQUEST",
    "type" : "int",
    "comment" : "\n     * State changed due to a call to {@link #close()} or\n     * {@link MbmsGroupCallSession#startGroupCall}\n     ",
    "links" : [ "#close", "MbmsGroupCallSession#startGroupCall" ]
  }, {
    "name" : "REASON_FREQUENCY_CONFLICT",
    "type" : "int",
    "comment" : "\n     * State changed due to a frequency conflict with another requested call.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_OUT_OF_MEMORY",
    "type" : "int",
    "comment" : "\n     * State changed due to the middleware running out of memory\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_NOT_CONNECTED_TO_HOMECARRIER_LTE",
    "type" : "int",
    "comment" : "\n     * State changed due to the device leaving the home carrier's LTE network.\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_LEFT_MBMS_BROADCAST_AREA",
    "type" : "int",
    "comment" : "\n     * State changed due to the device leaving the area where this call is being broadcast.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSubscriptionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmgi",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParentSession",
    "type" : "MbmsGroupCallSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "InternalGroupCallCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IMbmsGroupCallService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getTmgi()",
    "returnType" : "long",
    "comment" : "\n     * Retrieve the TMGI (Temporary Mobile Group Identity) corresponding to this call.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void updateGroupCall(@NonNull List<Integer> saiList, @NonNull List<Integer> frequencyList)",
    "returnType" : "void",
    "comment" : "\n     * Send an update to the middleware when the SAI (Service Area Identifier) list and frequency\n     * information of the group call has * changed. Callers must obtain this information from the\n     * wireless carrier independently.\n     * @param saiList New list of SAIs that the call is available on.\n     * @param frequencyList New list of frequencies that the call is available on.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Stop this group call. Further operations on this object will fail with an\n     * {@link IllegalStateException}.\n     *\n     * May throw an {@link IllegalStateException}\n     ",
    "links" : [ "IllegalStateException", "IllegalStateException" ]
  }, {
    "name" : "public InternalGroupCallCallback getCallback()",
    "returnType" : "InternalGroupCallCallback",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void sendErrorToApp(int errorCode, String message)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "STATE_STOPPED", "STATE_STARTED", "STATE_STALLED", "REASON_NONE", "REASON_BY_USER_REQUEST", "REASON_FREQUENCY_CONFLICT", "REASON_OUT_OF_MEMORY", "REASON_NOT_CONNECTED_TO_HOMECARRIER_LTE", "REASON_LEFT_MBMS_BROADCAST_AREA", "mSubscriptionId", "mTmgi", "mParentSession", "mCallback", "mService" ],
  "methodNames" : [ "public long getTmgi()", "public void updateGroupCall(@NonNull List<Integer> saiList, @NonNull List<Integer> frequencyList)", "public void close()", "public InternalGroupCallCallback getCallback()", "private void sendErrorToApp(int errorCode, String message)" ]
}