{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/compat/Compatibility.java",
  "packageName" : "android.compat",
  "className" : "Compatibility",
  "comment" : "\n * Internal APIs for logging and gating compatibility changes.\n *\n * @see ChangeId\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "sCallbacks",
    "type" : "Callbacks",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void reportChange(@ChangeId long changeId)",
    "returnType" : "void",
    "comment" : "\n     * Reports that a compatibility change is affecting the current process now.\n     *\n     * <p>Calls to this method from a non-app process are ignored. This allows code implementing\n     * APIs that are used by apps and by other code (e.g. the system server) to report changes\n     * regardless of the process it's running in. When called in a non-app process, this method is\n     * a no-op.\n     *\n     * <p>Note: for changes that are gated using {@link #isChangeEnabled(long)}, you do not need to\n     * call this API directly. The change will be reported for you in the case that\n     * {@link #isChangeEnabled(long)} returns {@code true}.\n     *\n     * @param changeId The ID of the compatibility change taking effect.\n     ",
    "links" : [ "#isChangeEnabled(long)" ]
  }, {
    "name" : "public static boolean isChangeEnabled(@ChangeId long changeId)",
    "returnType" : "boolean",
    "comment" : "\n     * Query if a given compatibility change is enabled for the current process. This method should\n     * only be called by code running inside a process of the affected app.\n     *\n     * <p>If this method returns {@code true}, the calling code should implement the compatibility\n     * change, resulting in differing behaviour compared to earlier releases. If this method returns\n     * {@code false}, the calling code should behave as it did in earlier releases.\n     *\n     * <p>When this method returns {@code true}, it will also report the change as\n     * {@link #reportChange(long)} would, so there is no need to call that method directly.\n     *\n     * @param changeId The ID of the compatibility change in question.\n     * @return {@code true} if the change is enabled for the current app.\n     ",
    "links" : [ "#reportChange(long)" ]
  }, {
    "name" : "public static void setCallbacks(Callbacks callbacks)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void setOverrides(ChangeConfig overrides)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void clearOverrides()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "sCallbacks" ],
  "methodNames" : [ "public static void reportChange(@ChangeId long changeId)", "public static boolean isChangeEnabled(@ChangeId long changeId)", "public static void setCallbacks(Callbacks callbacks)", "public static void setOverrides(ChangeConfig overrides)", "public static void clearOverrides()" ]
}