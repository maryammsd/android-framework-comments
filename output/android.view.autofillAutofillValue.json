{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/autofill/AutofillValue.java",
  "packageName" : "android.view.autofill",
  "className" : "AutofillValue",
  "comment" : "\n * Abstracts how a {@link View} can be autofilled by an\n * {@link android.service.autofill.AutofillService}.\n *\n * <p>Each {@link AutofillValue} is associated with a {@code type}, as defined by\n * {@link View#getAutofillType()}.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mValue",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AutofillValue>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public CharSequence getTextValue()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Gets the value to autofill a text field.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_TEXT} for more info.</p>\n     *\n     * @throws IllegalStateException if the value is not a text value\n     ",
    "links" : [ "View#AUTOFILL_TYPE_TEXT" ]
  }, {
    "name" : "public boolean isText()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if this is a text value.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_TEXT} for more info.</p>\n     ",
    "links" : [ "View#AUTOFILL_TYPE_TEXT" ]
  }, {
    "name" : "public boolean getToggleValue()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets the value to autofill a toggable field.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_TOGGLE} for more info.</p>\n     *\n     * @throws IllegalStateException if the value is not a toggle value\n     ",
    "links" : [ "View#AUTOFILL_TYPE_TOGGLE" ]
  }, {
    "name" : "public boolean isToggle()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if this is a toggle value.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_TOGGLE} for more info.</p>\n     ",
    "links" : [ "View#AUTOFILL_TYPE_TOGGLE" ]
  }, {
    "name" : "public int getListValue()",
    "returnType" : "int",
    "comment" : "\n     * Gets the value to autofill a selection list field.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_LIST} for more info.</p>\n     *\n     * @throws IllegalStateException if the value is not a list value\n     ",
    "links" : [ "View#AUTOFILL_TYPE_LIST" ]
  }, {
    "name" : "public boolean isList()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if this is a list value.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_LIST} for more info.</p>\n     ",
    "links" : [ "View#AUTOFILL_TYPE_LIST" ]
  }, {
    "name" : "public long getDateValue()",
    "returnType" : "long",
    "comment" : "\n     * Gets the value to autofill a date field.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_DATE} for more info.</p>\n     *\n     * @throws IllegalStateException if the value is not a date value\n     ",
    "links" : [ "View#AUTOFILL_TYPE_DATE" ]
  }, {
    "name" : "public boolean isDate()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if this is a date value.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_DATE} for more info.</p>\n     ",
    "links" : [ "View#AUTOFILL_TYPE_DATE" ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "\n     * Used to define whether a field is empty so it's not sent to service on save.\n     *\n     * <p>Only applies to some types, like text.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static AutofillValue forText(@Nullable CharSequence value)",
    "returnType" : "AutofillValue",
    "comment" : "\n     * Creates a new {@link AutofillValue} to autofill a {@link View} representing a text field.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_TEXT} for more info.\n     *\n     * <p><b>Note:</b> This method is not thread safe and can throw an exception if the\n     * {@code value} is modified by a different thread before it returns.\n     ",
    "links" : [ "AutofillValue", "View", "View#AUTOFILL_TYPE_TEXT" ]
  }, {
    "name" : "public static AutofillValue forToggle(boolean value)",
    "returnType" : "AutofillValue",
    "comment" : "\n     * Creates a new {@link AutofillValue} to autofill a {@link View} representing a toggable\n     * field.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_TOGGLE} for more info.\n     ",
    "links" : [ "AutofillValue", "View", "View#AUTOFILL_TYPE_TOGGLE" ]
  }, {
    "name" : "public static AutofillValue forList(int value)",
    "returnType" : "AutofillValue",
    "comment" : "\n     * Creates a new {@link AutofillValue} to autofill a {@link View} representing a selection\n     * list.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_LIST} for more info.\n     ",
    "links" : [ "AutofillValue", "View", "View#AUTOFILL_TYPE_LIST" ]
  }, {
    "name" : "public static AutofillValue forDate(long value)",
    "returnType" : "AutofillValue",
    "comment" : "\n     * Creates a new {@link AutofillValue} to autofill a {@link View} representing a date.\n     *\n     * <p>See {@link View#AUTOFILL_TYPE_DATE} for more info.\n     ",
    "links" : [ "AutofillValue", "View", "View#AUTOFILL_TYPE_DATE" ]
  } ],
  "variableNames" : [ "TAG", "mType", "mValue", "CREATOR" ],
  "methodNames" : [ "public CharSequence getTextValue()", "public boolean isText()", "public boolean getToggleValue()", "public boolean isToggle()", "public int getListValue()", "public boolean isList()", "public long getDateValue()", "public boolean isDate()", "public boolean isEmpty()", "public int hashCode()", "public boolean equals(Object obj)", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)", "public static AutofillValue forText(@Nullable CharSequence value)", "public static AutofillValue forToggle(boolean value)", "public static AutofillValue forList(int value)", "public static AutofillValue forDate(long value)" ]
}