{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/effect/EffectFactory.java",
  "packageName" : "android.media.effect",
  "className" : "EffectFactory",
  "comment" : "\n * <p>The EffectFactory class defines the list of available Effects, and provides functionality to\n * inspect and instantiate them. Some effects may not be available on all platforms, so before\n * creating a certain effect, the application should confirm that the effect is supported on this\n * platform by calling {@link #isEffectSupported(String)}.</p>\n ",
  "variables" : [ {
    "name" : "mEffectContext",
    "type" : "EffectContext",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EFFECT_PACKAGES",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EFFECT_IDENTITY",
    "type" : "String",
    "comment" : "\n     * <p>Copies the input texture to the output.</p>\n     * <p>Available parameters: None</p>\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_BRIGHTNESS",
    "type" : "String",
    "comment" : "\n     * <p>Adjusts the brightness of the image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>brightness</code></td>\n     *     <td>The brightness multiplier.</td>\n     *     <td>Positive float. 1.0 means no change;\n               larger values will increase brightness.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_CONTRAST",
    "type" : "String",
    "comment" : "\n     * <p>Adjusts the contrast of the image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>contrast</code></td>\n     *     <td>The contrast multiplier.</td>\n     *     <td>Float. 1.0 means no change;\n               larger values will increase contrast.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_FISHEYE",
    "type" : "String",
    "comment" : "\n     * <p>Applies a fisheye lens distortion to the image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>scale</code></td>\n     *     <td>The scale of the distortion.</td>\n     *     <td>Float, between 0 and 1. Zero means no distortion.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_BACKDROPPER",
    "type" : "String",
    "comment" : "\n     * <p>Replaces the background of the input frames with frames from a\n     * selected video.  Requires an initial learning period with only the\n     * background visible before the effect becomes active. The effect will wait\n     * until it does not see any motion in the scene before learning the\n     * background and starting the effect.</p>\n     *\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>source</code></td>\n     *     <td>A URI for the background video to use. This parameter must be\n     *         supplied before calling apply() for the first time.</td>\n     *     <td>String, such as from\n     *         {@link android.net.Uri#toString Uri.toString()}</td>\n     * </tr>\n     * </table>\n     *\n     * <p>If the update listener is set for this effect using\n     * {@link Effect#setUpdateListener}, it will be called when the effect has\n     * finished learning the background, with a null value for the info\n     * parameter.</p>\n     ",
    "links" : [ "android.media.effect.Effect#setUpdateListener", "android.net.Uri#toString" ]
  }, {
    "name" : "EFFECT_AUTOFIX",
    "type" : "String",
    "comment" : "\n     * <p>Attempts to auto-fix the image based on histogram equalization.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>scale</code></td>\n     *     <td>The scale of the adjustment.</td>\n     *     <td>Float, between 0 and 1. Zero means no adjustment, while 1 indicates the maximum\n     *     amount of adjustment.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_BLACKWHITE",
    "type" : "String",
    "comment" : "\n     * <p>Adjusts the range of minimal and maximal color pixel intensities.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>black</code></td>\n     *     <td>The value of the minimal pixel.</td>\n     *     <td>Float, between 0 and 1.</td>\n     * </tr>\n     * <tr><td><code>white</code></td>\n     *     <td>The value of the maximal pixel.</td>\n     *     <td>Float, between 0 and 1.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_CROP",
    "type" : "String",
    "comment" : "\n     * <p>Crops an upright rectangular area from the image. If the crop region falls outside of\n     * the image bounds, the results are undefined.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>xorigin</code></td>\n     *     <td>The origin's x-value.</td>\n     *     <td>Integer, between 0 and width of the image.</td>\n     * </tr>\n     * <tr><td><code>yorigin</code></td>\n     *     <td>The origin's y-value.</td>\n     *     <td>Integer, between 0 and height of the image.</td>\n     * </tr>\n     * <tr><td><code>width</code></td>\n     *     <td>The width of the cropped image.</td>\n     *     <td>Integer, between 1 and the width of the image minus xorigin.</td>\n     * </tr>\n     * <tr><td><code>height</code></td>\n     *     <td>The height of the cropped image.</td>\n     *     <td>Integer, between 1 and the height of the image minus yorigin.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_CROSSPROCESS",
    "type" : "String",
    "comment" : "\n     * <p>Applies a cross process effect on image, in which the red and green channels are\n     * enhanced while the blue channel is restricted.</p>\n     * <p>Available parameters: None</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_DOCUMENTARY",
    "type" : "String",
    "comment" : "\n     * <p>Applies black and white documentary style effect on image..</p>\n     * <p>Available parameters: None</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_BITMAPOVERLAY",
    "type" : "String",
    "comment" : "\n     * <p>Overlays a bitmap (with premultiplied alpha channel) onto the input image. The bitmap\n     * is stretched to fit the input image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>bitmap</code></td>\n     *     <td>The overlay bitmap.</td>\n     *     <td>A non-null Bitmap instance.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_DUOTONE",
    "type" : "String",
    "comment" : "\n     * <p>Representation of photo using only two color tones.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>first_color</code></td>\n     *     <td>The first color tone.</td>\n     *     <td>Integer, representing an ARGB color with 8 bits per channel. May be created using\n     *     {@link android.graphics.Color Color} class.</td>\n     * </tr>\n     * <tr><td><code>second_color</code></td>\n     *     <td>The second color tone.</td>\n     *     <td>Integer, representing an ARGB color with 8 bits per channel. May be created using\n     *     {@link android.graphics.Color Color} class.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ "android.graphics.Color" ]
  }, {
    "name" : "EFFECT_FILLLIGHT",
    "type" : "String",
    "comment" : "\n     * <p>Applies back-light filling to the image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>strength</code></td>\n     *     <td>The strength of the backlight.</td>\n     *     <td>Float, between 0 and 1. Zero means no change.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_FLIP",
    "type" : "String",
    "comment" : "\n     * <p>Flips image vertically and/or horizontally.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>vertical</code></td>\n     *     <td>Whether to flip image vertically.</td>\n     *     <td>Boolean</td>\n     * </tr>\n     * <tr><td><code>horizontal</code></td>\n     *     <td>Whether to flip image horizontally.</td>\n     *     <td>Boolean</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_GRAIN",
    "type" : "String",
    "comment" : "\n     * <p>Applies film grain effect to image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>strength</code></td>\n     *     <td>The strength of the grain effect.</td>\n     *     <td>Float, between 0 and 1. Zero means no change.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_GRAYSCALE",
    "type" : "String",
    "comment" : "\n     * <p>Converts image to grayscale.</p>\n     * <p>Available parameters: None</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_LOMOISH",
    "type" : "String",
    "comment" : "\n     * <p>Applies lomo-camera style effect to image.</p>\n     * <p>Available parameters: None</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_NEGATIVE",
    "type" : "String",
    "comment" : "\n     * <p>Inverts the image colors.</p>\n     * <p>Available parameters: None</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_POSTERIZE",
    "type" : "String",
    "comment" : "\n     * <p>Applies posterization effect to image.</p>\n     * <p>Available parameters: None</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_REDEYE",
    "type" : "String",
    "comment" : "\n     * <p>Removes red eyes on specified region.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>centers</code></td>\n     *     <td>Multiple center points (x, y) of the red eye regions.</td>\n     *     <td>An array of floats, where (f[2*i], f[2*i+1]) specifies the center of the i'th eye.\n     *     Coordinate values are expected to be normalized between 0 and 1.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_ROTATE",
    "type" : "String",
    "comment" : "\n     * <p>Rotates the image. The output frame size must be able to fit the rotated version of\n     * the input image. Note that the rotation snaps to a the closest multiple of 90 degrees.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>angle</code></td>\n     *     <td>The angle of rotation in degrees.</td>\n     *     <td>Integer value. This will be rounded to the nearest multiple of 90.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_SATURATE",
    "type" : "String",
    "comment" : "\n     * <p>Adjusts color saturation of image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>scale</code></td>\n     *     <td>The scale of color saturation.</td>\n     *     <td>Float, between -1 and 1. 0 means no change, while -1 indicates full desaturation,\n     *     i.e. grayscale.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_SEPIA",
    "type" : "String",
    "comment" : "\n     * <p>Converts image to sepia tone.</p>\n     * <p>Available parameters: None</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_SHARPEN",
    "type" : "String",
    "comment" : "\n     * <p>Sharpens the image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>scale</code></td>\n     *     <td>The degree of sharpening.</td>\n     *     <td>Float, between 0 and 1. 0 means no change.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_STRAIGHTEN",
    "type" : "String",
    "comment" : "\n     * <p>Rotates the image according to the specified angle, and crops the image so that no\n     * non-image portions are visible.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>angle</code></td>\n     *     <td>The angle of rotation.</td>\n     *     <td>Float, between -45 and +45.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_TEMPERATURE",
    "type" : "String",
    "comment" : "\n     * <p>Adjusts color temperature of the image.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>scale</code></td>\n     *     <td>The value of color temperature.</td>\n     *     <td>Float, between 0 and 1, with 0 indicating cool, and 1 indicating warm. A value of\n     *     of 0.5 indicates no change.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  }, {
    "name" : "EFFECT_TINT",
    "type" : "String",
    "comment" : "\n     * <p>Tints the photo with specified color.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>tint</code></td>\n     *     <td>The color of the tint.</td>\n     *     <td>Integer, representing an ARGB color with 8 bits per channel. May be created using\n     *     {@link android.graphics.Color Color} class.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ "android.graphics.Color" ]
  }, {
    "name" : "EFFECT_VIGNETTE",
    "type" : "String",
    "comment" : "\n     * <p>Adds a vignette effect to image, i.e. fades away the outer image edges.</p>\n     * <p>Available parameters:</p>\n     * <table>\n     * <tr><td>Parameter name</td><td>Meaning</td><td>Valid values</td></tr>\n     * <tr><td><code>scale</code></td>\n     *     <td>The scale of vignetting.</td>\n     *     <td>Float, between 0 and 1. 0 means no change.</td>\n     * </tr>\n     * </table>\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Effect createEffect(String effectName)",
    "returnType" : "Effect",
    "comment" : "\n     * Instantiate a new effect with the given effect name.\n     *\n     * <p>The effect's parameters will be set to their default values.</p>\n     *\n     * <p>Note that the EGL context associated with the current EffectContext need not be made\n     * current when creating an effect. This allows the host application to instantiate effects\n     * before any EGL context has become current.</p>\n     *\n     * @param effectName The name of the effect to create.\n     * @return A new Effect instance.\n     * @throws IllegalArgumentException if the effect with the specified name is not supported or\n     *         not known.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isEffectSupported(String effectName)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if an effect is supported on this platform.\n     *\n     * <p>Some effects may only be available on certain platforms. Use this method before\n     * instantiating an effect to make sure it is supported.</p>\n     *\n     * @param effectName The name of the effect.\n     * @return true, if the effect is supported on this platform.\n     * @throws IllegalArgumentException if the effect name is not known.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static Class getEffectClassByName(String className)",
    "returnType" : "Class",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Effect instantiateEffect(Class effectClass, String name)",
    "returnType" : "Effect",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mEffectContext", "EFFECT_PACKAGES", "EFFECT_IDENTITY", "EFFECT_BRIGHTNESS", "EFFECT_CONTRAST", "EFFECT_FISHEYE", "EFFECT_BACKDROPPER", "EFFECT_AUTOFIX", "EFFECT_BLACKWHITE", "EFFECT_CROP", "EFFECT_CROSSPROCESS", "EFFECT_DOCUMENTARY", "EFFECT_BITMAPOVERLAY", "EFFECT_DUOTONE", "EFFECT_FILLLIGHT", "EFFECT_FLIP", "EFFECT_GRAIN", "EFFECT_GRAYSCALE", "EFFECT_LOMOISH", "EFFECT_NEGATIVE", "EFFECT_POSTERIZE", "EFFECT_REDEYE", "EFFECT_ROTATE", "EFFECT_SATURATE", "EFFECT_SEPIA", "EFFECT_SHARPEN", "EFFECT_STRAIGHTEN", "EFFECT_TEMPERATURE", "EFFECT_TINT", "EFFECT_VIGNETTE" ],
  "methodNames" : [ "public Effect createEffect(String effectName)", "public static boolean isEffectSupported(String effectName)", "private static Class getEffectClassByName(String className)", "private Effect instantiateEffect(Class effectClass, String name)" ]
}