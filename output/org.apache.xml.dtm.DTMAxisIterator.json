{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/dtm/DTMAxisIterator.java",
  "packageName" : "org.apache.xml.dtm",
  "className" : "DTMAxisIterator",
  "comment" : "\n * This class iterates over a single XPath Axis, and returns node handles.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "END",
    "type" : "int",
    "comment" : " Specifies the end of the iteration, and is the same as DTM.NULL.  ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int next()",
    "returnType" : "int",
    "comment" : "\n   * Get the next node in the iteration.\n   *\n   * @return The next node handle in the iteration, or END.\n   ",
    "links" : [ ]
  }, {
    "name" : "public DTMAxisIterator reset()",
    "returnType" : "DTMAxisIterator",
    "comment" : "\n   * Resets the iterator to the last start node.\n   *\n   * @return A DTMAxisIterator, which may or may not be the same as this \n   *         iterator.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getLast()",
    "returnType" : "int",
    "comment" : "\n   * @return the number of nodes in this iterator.  This may be an expensive \n   * operation when called the first time.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getPosition()",
    "returnType" : "int",
    "comment" : "\n   * @return The position of the current node in the set, as defined by XPath.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setMark()",
    "returnType" : "void",
    "comment" : "\n   * Remembers the current node for the next call to gotoMark().\n   ",
    "links" : [ ]
  }, {
    "name" : "public void gotoMark()",
    "returnType" : "void",
    "comment" : "\n   * Restores the current node remembered by setMark().\n   ",
    "links" : [ ]
  }, {
    "name" : "public DTMAxisIterator setStartNode(int node)",
    "returnType" : "DTMAxisIterator",
    "comment" : "\n   * Set start to END should 'close' the iterator,\n   * i.e. subsequent call to next() should return END.\n   *\n   * @param node Sets the root of the iteration.\n   *\n   * @return A DTMAxisIterator set to the start of the iteration.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getStartNode()",
    "returnType" : "int",
    "comment" : "\n   * Get start to END should 'close' the iterator,\n   * i.e. subsequent call to next() should return END.\n   *\n   * @return The root node of the iteration.\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean isReverse()",
    "returnType" : "boolean",
    "comment" : "\n   * @return true if this iterator has a reversed axis, else false.\n   ",
    "links" : [ ]
  }, {
    "name" : "public DTMAxisIterator cloneIterator()",
    "returnType" : "DTMAxisIterator",
    "comment" : "\n   * @return a deep copy of this iterator. The clone should not be reset \n   * from its current position.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setRestartable(boolean isRestartable)",
    "returnType" : "void",
    "comment" : "\n   * Set if restartable.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getNodeByPosition(int position)",
    "returnType" : "int",
    "comment" : "\n   * Return the node at the given position.\n   * \n   * @param position The position\n   * @return The node at the given position.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int next()", "public DTMAxisIterator reset()", "public int getLast()", "public int getPosition()", "public void setMark()", "public void gotoMark()", "public DTMAxisIterator setStartNode(int node)", "public int getStartNode()", "public boolean isReverse()", "public DTMAxisIterator cloneIterator()", "public void setRestartable(boolean isRestartable)", "public int getNodeByPosition(int position)" ],
  "variableNames" : [ "END" ]
}