{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/display/VirtualDisplayConfig.java",
  "packageName" : "android.hardware.display",
  "className" : "VirtualDisplayConfig",
  "comment" : "\n * Holds configuration used to create {@link VirtualDisplay} instances.\n *\n * @see DisplayManager#createVirtualDisplay(VirtualDisplayConfig, Handler, VirtualDisplay.Callback)\n * @see MediaProjection#createVirtualDisplay(String, int, int, int, int, Surface,\n * VirtualDisplay.Callback, Handler)\n ",
  "links" : [ "android.hardware.display.VirtualDisplay" ],
  "variables" : [ {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDensityDpi",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUniqueId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayIdToMirror",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowManagerMirroringEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayCategories",
    "type" : "ArraySet<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestedRefreshRate",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsHomeSupported",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<VirtualDisplayConfig>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the virtual display.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getWidth()",
    "returnType" : "int",
    "comment" : "\n     * Returns the width of the virtual display in pixels.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getHeight()",
    "returnType" : "int",
    "comment" : "\n     * Returns the height of the virtual display in pixels.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDensityDpi()",
    "returnType" : "int",
    "comment" : "\n     * Returns the density of the virtual display in dpi.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : "\n     * Returns the virtual display flags.\n     *\n     * @see Builder#setFlags\n     ",
    "links" : [ ]
  }, {
    "name" : "public Surface getSurface()",
    "returnType" : "Surface",
    "comment" : "\n     * Returns the surface to which the content of the virtual display should be rendered, if any.\n     *\n     * @see Builder#setSurface\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getUniqueId()",
    "returnType" : "String",
    "comment" : "\n     * Returns the unique identifier for the display. Shouldn't be displayed to the user.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDisplayIdToMirror()",
    "returnType" : "int",
    "comment" : "\n     * Returns the id of the display that the virtual display should mirror, or\n     * {@link android.view.Display#DEFAULT_DISPLAY} if there is none.\n     * @hide\n     ",
    "links" : [ "android.view.Display#DEFAULT_DISPLAY" ]
  }, {
    "name" : "public boolean isWindowManagerMirroringEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether if WindowManager is responsible for mirroring content to this VirtualDisplay, or\n     * if DisplayManager should record contents instead.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isHomeSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether this virtual display supports showing home activity and wallpaper.\n     *\n     * @see Builder#setHomeSupported\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<String> getDisplayCategories()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Returns the display categories.\n     *\n     * @see Builder#setDisplayCategories\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getRequestedRefreshRate()",
    "returnType" : "float",
    "comment" : "\n     * Returns the refresh rate of a virtual display in frames per second, or zero if it is using a\n     * default refresh rate chosen by the system.\n     *\n     * @see Builder#setRequestedRefreshRate\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getName()", "public int getWidth()", "public int getHeight()", "public int getDensityDpi()", "public int getFlags()", "public Surface getSurface()", "public String getUniqueId()", "public int getDisplayIdToMirror()", "public boolean isWindowManagerMirroringEnabled()", "public boolean isHomeSupported()", "public Set<String> getDisplayCategories()", "public float getRequestedRefreshRate()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "mName", "mWidth", "mHeight", "mDensityDpi", "mFlags", "mSurface", "mUniqueId", "mDisplayIdToMirror", "mWindowManagerMirroringEnabled", "mDisplayCategories", "mRequestedRefreshRate", "mIsHomeSupported", "CREATOR" ]
}