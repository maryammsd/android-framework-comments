{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ipsec/ike/SaProposal.java",
  "packageName" : "android.net.ipsec.ike",
  "className" : "Builder",
  "comment" : "\n     * This class is an abstract Builder for building a SaProposal.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ERROR_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProposedEncryptAlgos",
    "type" : "LinkedHashSet<EncryptionTransform>",
    "comment" : " Use LinkedHashSet to ensure uniqueness and that ordering is maintained.",
    "links" : [ ]
  }, {
    "name" : "mProposedPrfs",
    "type" : "LinkedHashSet<PrfTransform>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProposedIntegrityAlgos",
    "type" : "LinkedHashSet<IntegrityTransform>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProposedDhGroups",
    "type" : "LinkedHashSet<DhGroupTransform>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasAead",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected static boolean isAead(@EncryptionAlgorithm int algorithm)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected EncryptionTransform[] buildEncryptAlgosOrThrow()",
    "returnType" : "EncryptionTransform[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void validateAndAddEncryptAlgo(@EncryptionAlgorithm int algorithm, int keyLength, boolean isChild)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void validateAndAddIntegrityAlgo(@IntegrityAlgorithm int algorithm, boolean isChild)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void addDh(@DhGroup int dhGroup)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected static boolean isAead(@EncryptionAlgorithm int algorithm)", "protected EncryptionTransform[] buildEncryptAlgosOrThrow()", "protected void validateAndAddEncryptAlgo(@EncryptionAlgorithm int algorithm, int keyLength, boolean isChild)", "protected void validateAndAddIntegrityAlgo(@IntegrityAlgorithm int algorithm, boolean isChild)", "protected void addDh(@DhGroup int dhGroup)" ],
  "variableNames" : [ "ERROR_TAG", "mProposedEncryptAlgos", "mProposedPrfs", "mProposedIntegrityAlgos", "mProposedDhGroups", "mHasAead" ]
}