{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/StringPrepParseException.java",
  "packageName" : "android.icu.text",
  "className" : "StringPrepParseException",
  "comment" : "\n * Exception that signals an error has occurred while parsing the\n * input to StringPrep or IDNA.\n *\n * @author Ram Viswanadha\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : " Generated by serialver from JDK 1.4.1_01",
    "links" : [ ]
  }, {
    "name" : "INVALID_CHAR_FOUND",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "ILLEGAL_CHAR_FOUND",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "PROHIBITED_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "UNASSIGNED_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "CHECK_BIDI_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "STD3_ASCII_RULES_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "ACE_PREFIX_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "VERIFICATION_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "LABEL_TOO_LONG_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "BUFFER_OVERFLOW_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "ZERO_LENGTH_LABEL",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "DOMAIN_NAME_TOO_LONG_ERROR",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "error",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "line",
    "type" : "int",
    "comment" : "\n     * The line on which the error occurred.  If the parse engine\n     * is not using this field, it should set it to zero.  Otherwise\n     * it should be a positive integer. The default value of this field\n     * is -1. It will be set to 0 if the code populating this struct is not\n     * using line numbers.\n     ",
    "links" : [ ]
  }, {
    "name" : "preContext",
    "type" : "StringBuffer",
    "comment" : "\n     * Textual context before the error.  Null-terminated.\n     * May be the empty string if not implemented by parser.\n     ",
    "links" : [ ]
  }, {
    "name" : "postContext",
    "type" : "StringBuffer",
    "comment" : "\n     * Textual context after the error.  Null-terminated.\n     * May be the empty string if not implemented by parser.\n     ",
    "links" : [ ]
  }, {
    "name" : "PARSE_CONTEXT_LEN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean equals(Object other)",
    "returnType" : "boolean",
    "comment" : "\n     * Compare this ParseException to another and evaluate if they are equal.\n     * The comparison works only on the type of error and does not compare\n     * the rules strings, if any, for equality.\n     *\n     * @param other The exception that this object should be compared to\n     * @return true if the objects are equal, false if unequal\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * Mock implementation of hashCode(). This implementation always returns a constant\n     * value. When Java assertion is enabled, this method triggers an assertion failure.\n     * @return a hash code value for this object.\n     * @hide original deprecated declaration\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns the position of error in the rules string\n     *\n     * @return String\n     ",
    "links" : [ ]
  }, {
    "name" : "private void setPreContext(String str, int pos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setPreContext(char[] str, int pos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setPostContext(String str, int pos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setPostContext(char[] str, int pos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setContext(String str, int pos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getError()",
    "returnType" : "int",
    "comment" : "\n     * Returns the error code of this exception.\n     * This method is only used for testing to verify the error.\n     * @return The error code\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean equals(Object other)", "public int hashCode()", "public String toString()", "private void setPreContext(String str, int pos)", "private void setPreContext(char[] str, int pos)", "private void setPostContext(String str, int pos)", "private void setPostContext(char[] str, int pos)", "private void setContext(String str, int pos)", "public int getError()" ],
  "variableNames" : [ "serialVersionUID", "INVALID_CHAR_FOUND", "ILLEGAL_CHAR_FOUND", "PROHIBITED_ERROR", "UNASSIGNED_ERROR", "CHECK_BIDI_ERROR", "STD3_ASCII_RULES_ERROR", "ACE_PREFIX_ERROR", "VERIFICATION_ERROR", "LABEL_TOO_LONG_ERROR", "BUFFER_OVERFLOW_ERROR", "ZERO_LENGTH_LABEL", "DOMAIN_NAME_TOO_LONG_ERROR", "error", "line", "preContext", "postContext", "PARSE_CONTEXT_LEN" ]
}