{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/SystemVibratorManager.java",
  "packageName" : "android.os",
  "className" : "SystemVibratorManager",
  "comment" : "\n * VibratorManager implementation that controls the system vibrators.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IVibratorManagerService",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToken",
    "type" : "Binder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVibratorIds",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVibrators",
    "type" : "SparseArray<Vibrator>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListeners",
    "type" : "ArrayMap<Vibrator.OnVibratorStateChangedListener, OnVibratorStateChangedListenerDelegate>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int[] getVibratorIds()",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Vibrator getVibrator(int vibratorId)",
    "returnType" : "Vibrator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Vibrator getDefaultVibrator()",
    "returnType" : "Vibrator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean setAlwaysOnEffect(int uid, String opPkg, int alwaysOnId, @Nullable CombinedVibration effect, @Nullable VibrationAttributes attributes)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void vibrate(int uid, String opPkg, @NonNull CombinedVibration effect, String reason, @Nullable VibrationAttributes attributes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void performHapticFeedback(int constant, boolean always, String reason, boolean fromIme)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancel()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void cancel(int usageFilter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void cancelVibration(int usageFilter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int[] getVibratorIds()", "public Vibrator getVibrator(int vibratorId)", "public Vibrator getDefaultVibrator()", "public boolean setAlwaysOnEffect(int uid, String opPkg, int alwaysOnId, @Nullable CombinedVibration effect, @Nullable VibrationAttributes attributes)", "public void vibrate(int uid, String opPkg, @NonNull CombinedVibration effect, String reason, @Nullable VibrationAttributes attributes)", "public void performHapticFeedback(int constant, boolean always, String reason, boolean fromIme)", "public void cancel()", "public void cancel(int usageFilter)", "private void cancelVibration(int usageFilter)" ],
  "variableNames" : [ "TAG", "mService", "mContext", "mUid", "mToken", "mLock", "mVibratorIds", "mVibrators", "mListeners" ]
}