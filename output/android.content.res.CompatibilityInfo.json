{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/res/CompatibilityInfo.java",
  "packageName" : "android.content.res",
  "className" : "CompatibilityInfo",
  "comment" : "\n * CompatibilityInfo class keeps the information about the screen compatibility mode that the\n * application is running under.\n * \n *  {@hide} \n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEFAULT_COMPATIBILITY_INFO",
    "type" : "CompatibilityInfo",
    "comment" : " default compatibility info object for compatible applications ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_NORMAL_SHORT_DIMENSION",
    "type" : "int",
    "comment" : "\n     * This is the number of pixels we would like to have along the\n     * short axis of an app that needs to run on a normal size screen.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAXIMUM_ASPECT_RATIO",
    "type" : "float",
    "comment" : "\n     * This is the maximum aspect ratio we will allow while keeping\n     * applications in a compatible screen size.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCompatibilityFlags",
    "type" : "int",
    "comment" : "\n     *  A compatibility flags\n     ",
    "links" : [ ]
  }, {
    "name" : "SCALING_REQUIRED",
    "type" : "int",
    "comment" : "\n     * A flag mask to tell if the application needs scaling (when mApplicationScale != 1.0f)\n     * {@see compatibilityFlag}\n     ",
    "links" : [ ]
  }, {
    "name" : "ALWAYS_NEEDS_COMPAT",
    "type" : "int",
    "comment" : "\n     * Application must always run in compatibility mode?\n     ",
    "links" : [ ]
  }, {
    "name" : "NEVER_NEEDS_COMPAT",
    "type" : "int",
    "comment" : "\n     * Application never should run in compatibility mode?\n     ",
    "links" : [ ]
  }, {
    "name" : "NEEDS_SCREEN_COMPAT",
    "type" : "int",
    "comment" : "\n     * Set if the application needs to run in screen size compatibility mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "NEEDS_COMPAT_RES",
    "type" : "int",
    "comment" : "\n     * Set if the application needs to run in with compat resources.\n     ",
    "links" : [ ]
  }, {
    "name" : "HAS_OVERRIDE_SCALING",
    "type" : "int",
    "comment" : "\n     * Set if the application needs to be forcibly downscaled\n     ",
    "links" : [ ]
  }, {
    "name" : "applicationDensity",
    "type" : "int",
    "comment" : "\n     * The effective screen density we have selected for this application.\n     ",
    "links" : [ ]
  }, {
    "name" : "applicationScale",
    "type" : "float",
    "comment" : "\n     * Application's scale.\n     ",
    "links" : [ ]
  }, {
    "name" : "applicationInvertedScale",
    "type" : "float",
    "comment" : "\n     * Application's inverted scale.\n     ",
    "links" : [ ]
  }, {
    "name" : "applicationDensityScale",
    "type" : "float",
    "comment" : "\n     * Application's density scale.\n     *\n     * <p>In most cases this is equal to {@link #applicationScale}, but in some cases e.g.\n     * Automotive the requirement is to just scale the density and keep the resolution the same.\n     * This is used for artificially making apps look zoomed in to compensate for the user distance\n     * from the screen.\n     ",
    "links" : [ "#applicationScale" ]
  }, {
    "name" : "applicationDensityInvertedScale",
    "type" : "float",
    "comment" : "\n     * Application's density inverted scale.\n     ",
    "links" : [ ]
  }, {
    "name" : "sOverrideInvertedScale",
    "type" : "float",
    "comment" : " The process level override inverted scale. See {@link #HAS_OVERRIDE_SCALING}. ",
    "links" : [ "#HAS_OVERRIDE_SCALING" ]
  }, {
    "name" : "sOverrideDensityInvertScale",
    "type" : "float",
    "comment" : " The process level override inverted density scale. See {@link #HAS_OVERRIDE_SCALING}. ",
    "links" : [ "#HAS_OVERRIDE_SCALING" ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<CompatibilityInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isScalingRequired()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if the scaling is required\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasOverrideScaling()",
    "returnType" : "boolean",
    "comment" : " Returns {@code true} if {@link #sOverrideInvertedScale} should be set. ",
    "links" : [ "#sOverrideInvertedScale" ]
  }, {
    "name" : "public boolean supportsScreen()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean neverSupportsScreen()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean alwaysSupportsScreen()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean needsCompatResources()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Translator getTranslator()",
    "returnType" : "Translator",
    "comment" : "\n     * Returns the translator which translates the coordinates in compatibility mode.\n     * @param params the window's parameter\n     ",
    "links" : [ ]
  }, {
    "name" : "public void applyDisplayMetricsIfNeeded(DisplayMetrics inoutDm, boolean applyToSize)",
    "returnType" : "void",
    "comment" : " Applies the compatibility adjustment to the display metrics. ",
    "links" : [ ]
  }, {
    "name" : "public void applyToDisplayMetrics(DisplayMetrics inoutDm)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void scaleDisplayMetrics(float invertScale, float densityInvertScale, DisplayMetrics inoutDm, boolean applyToSize)",
    "returnType" : "void",
    "comment" : " Scales the density of the given display metrics. ",
    "links" : [ ]
  }, {
    "name" : "public void applyToConfiguration(int displayDensity, Configuration inoutConfig)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void scaleConfiguration(float invertScale, Configuration inoutConfig)",
    "returnType" : "void",
    "comment" : " Scales the density and bounds of the given configuration. ",
    "links" : [ ]
  }, {
    "name" : "public static void scaleConfiguration(float invertScale, float densityInvertScale, Configuration inoutConfig)",
    "returnType" : "void",
    "comment" : " Scales the density and bounds of the given configuration. ",
    "links" : [ ]
  }, {
    "name" : "public static void applyOverrideScaleIfNeeded(Configuration config)",
    "returnType" : "void",
    "comment" : " @see #sOverrideInvertedScale ",
    "links" : [ ]
  }, {
    "name" : "public static void applyOverrideScaleIfNeeded(MergedConfiguration mergedConfig)",
    "returnType" : "void",
    "comment" : " @see #sOverrideInvertedScale ",
    "links" : [ ]
  }, {
    "name" : "private static boolean hasOverrideScale()",
    "returnType" : "boolean",
    "comment" : " Returns {@code true} if this process is in a environment with override scale. ",
    "links" : [ ]
  }, {
    "name" : "public static void setOverrideInvertedScale(float invertScale)",
    "returnType" : "void",
    "comment" : " @see #sOverrideInvertedScale ",
    "links" : [ ]
  }, {
    "name" : "public static void setOverrideInvertedScale(float invertScale, float densityInvertScale)",
    "returnType" : "void",
    "comment" : " @see #sOverrideInvertedScale ",
    "links" : [ ]
  }, {
    "name" : "public static float getOverrideInvertedScale()",
    "returnType" : "float",
    "comment" : " @see #sOverrideInvertedScale ",
    "links" : [ ]
  }, {
    "name" : "public static float getOverrideDensityInvertedScale()",
    "returnType" : "float",
    "comment" : " @see #sOverrideDensityInvertScale ",
    "links" : [ ]
  }, {
    "name" : "public static float computeCompatibleScaling(DisplayMetrics dm, DisplayMetrics outDm)",
    "returnType" : "float",
    "comment" : "\n     * Compute the frame Rect for applications runs under compatibility mode.\n     *\n     * @param dm the display metrics used to compute the frame size.\n     * @param outDm If non-null the width and height will be set to their scaled values.\n     * @return Returns the scaling factor for the window.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isScalingRequired()", "public boolean hasOverrideScaling()", "public boolean supportsScreen()", "public boolean neverSupportsScreen()", "public boolean alwaysSupportsScreen()", "public boolean needsCompatResources()", "public Translator getTranslator()", "public void applyDisplayMetricsIfNeeded(DisplayMetrics inoutDm, boolean applyToSize)", "public void applyToDisplayMetrics(DisplayMetrics inoutDm)", "private static void scaleDisplayMetrics(float invertScale, float densityInvertScale, DisplayMetrics inoutDm, boolean applyToSize)", "public void applyToConfiguration(int displayDensity, Configuration inoutConfig)", "public static void scaleConfiguration(float invertScale, Configuration inoutConfig)", "public static void scaleConfiguration(float invertScale, float densityInvertScale, Configuration inoutConfig)", "public static void applyOverrideScaleIfNeeded(Configuration config)", "public static void applyOverrideScaleIfNeeded(MergedConfiguration mergedConfig)", "private static boolean hasOverrideScale()", "public static void setOverrideInvertedScale(float invertScale)", "public static void setOverrideInvertedScale(float invertScale, float densityInvertScale)", "public static float getOverrideInvertedScale()", "public static float getOverrideDensityInvertedScale()", "public static float computeCompatibleScaling(DisplayMetrics dm, DisplayMetrics outDm)", "public boolean equals(@Nullable Object o)", "public String toString()", "public int hashCode()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ],
  "variableNames" : [ "DEFAULT_COMPATIBILITY_INFO", "DEFAULT_NORMAL_SHORT_DIMENSION", "MAXIMUM_ASPECT_RATIO", "mCompatibilityFlags", "SCALING_REQUIRED", "ALWAYS_NEEDS_COMPAT", "NEVER_NEEDS_COMPAT", "NEEDS_SCREEN_COMPAT", "NEEDS_COMPAT_RES", "HAS_OVERRIDE_SCALING", "applicationDensity", "applicationScale", "applicationInvertedScale", "applicationDensityScale", "applicationDensityInvertedScale", "sOverrideInvertedScale", "sOverrideDensityInvertScale", "CREATOR" ]
}