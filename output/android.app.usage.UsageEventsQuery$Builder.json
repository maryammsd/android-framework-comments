{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/usage/UsageEventsQuery.java",
  "packageName" : "android.app.usage",
  "className" : "Builder",
  "comment" : "\n     * Builder for UsageEventsQuery.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mBeginTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEndTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEventTypes",
    "type" : "ArraySet<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageNames",
    "type" : "ArraySet<String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public UsageEventsQuery build()",
    "returnType" : "UsageEventsQuery",
    "comment" : "\n         * Builds a read-only UsageEventsQuery object.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setEventTypes(@NonNull @Event.EventType int... eventTypes)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the list of usage event types to be included in the query.\n         *\n         * <p>Note: </p> An empty array will be returned by\n         * {@link UsageEventsQuery#getEventTypes()} without calling this method, which indicates\n         * querying for all event types. Apps are encouraged to provide a list of event types.\n         * Only the matching types supplied will be used to query.\n         *\n         * @param eventTypes the array of the usage event types. See {@link UsageEvents.Event}.\n         * @throws NullPointerException if {@code eventTypes} is {@code null} or empty.\n         * @throws IllegalArgumentException if any of event types are invalid.\n         * @see UsageEventsQuery#getEventTypes()\n         * @see UsageStatsManager#queryEvents(UsageEventsQuery)\n         ",
    "links" : [ "UsageEvents.Event", "android.app.usage.UsageEventsQuery#getEventTypes()" ]
  }, {
    "name" : "public Builder setUserId(@UserIdInt int userId)",
    "returnType" : "Builder",
    "comment" : "\n         * Specifices the user id for the query.\n         * @param userId for whom the query should be performed.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPackageNames(@NonNull String... pkgNames)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the list of package names to be included in the query.\n         *\n         * <p>Note: </p> An empty {@code Set} will be returned by\n         * {@link UsageEventsQuery#getPackageNames()} without calling this method, which indicates\n         * querying usage events for all packages. Apps are encouraged to provide a list of package\n         * names. Only the matching names supplied will be used to query.\n         *\n         * @param pkgNames the array of the package names, each package name should be a non-empty\n         *                 string, {@code null} or empty string(\"\") is omitted.\n         * @see UsageEventsQuery#getPackageNames()\n         * @see UsageStatsManager#queryEvents(UsageEventsQuery)\n         * @throws NullPointerException if {@code pkgNames} is {@code null} or empty.\n         ",
    "links" : [ "android.app.usage.UsageEventsQuery#getPackageNames()" ]
  } ],
  "methodNames" : [ "public UsageEventsQuery build()", "public Builder setEventTypes(@NonNull @Event.EventType int... eventTypes)", "public Builder setUserId(@UserIdInt int userId)", "public Builder setPackageNames(@NonNull String... pkgNames)" ],
  "variableNames" : [ "mBeginTimeMillis", "mEndTimeMillis", "mEventTypes", "mUserId", "mPackageNames" ]
}