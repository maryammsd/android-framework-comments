{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/spec/EdECPrivateKeySpec.java",
  "packageName" : "java.security.spec",
  "className" : "EdECPrivateKeySpec",
  "comment" : "\n * A class representing elliptic curve private keys as defined in\n * <a href=\"https://tools.ietf.org/html/rfc8032\">RFC 8032: Edwards-Curve\n * Digital Signature Algorithm (EdDSA)</a>, including the curve and other\n * algorithm parameters. The private key is a bit string represented using\n * a byte array. This class only supports bit string lengths that are a\n * multiple of 8.\n *\n * @since 15\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "params",
    "type" : "NamedParameterSpec",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "bytes",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public NamedParameterSpec getParams()",
    "returnType" : "NamedParameterSpec",
    "comment" : "\n     * Get the algorithm parameters that define the curve and other settings.\n     *\n     * @return the algorithm parameters.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getBytes()",
    "returnType" : "byte[]",
    "comment" : "\n     * Get the byte array representing the private key. A new copy of the array\n     * is returned each time this method is called.\n     *\n     * @return the private key as a byte array.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public NamedParameterSpec getParams()", "public byte[] getBytes()" ],
  "variableNames" : [ "params", "bytes" ]
}