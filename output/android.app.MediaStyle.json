{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/Notification.java",
  "packageName" : "android.app",
  "className" : "MediaStyle",
  "comment" : "\n     * Notification style for media playback notifications.\n     *\n     * In the expanded form, {@link Notification#bigContentView}, up to 5\n     * {@link Notification.Action}s specified with\n     * {@link Notification.Builder#addAction(Action) addAction} will be\n     * shown as icon-only pushbuttons, suitable for transport controls. The Bitmap given to\n     * {@link Notification.Builder#setLargeIcon(android.graphics.Bitmap) setLargeIcon()} will be\n     * treated as album artwork.\n     * <p>\n     * Unlike the other styles provided here, MediaStyle can also modify the standard-size\n     * {@link Notification#contentView}; by providing action indices to\n     * {@link #setShowActionsInCompactView(int...)} you can promote up to 3 actions to be displayed\n     * in the standard view alongside the usual content.\n     * <p>\n     * Notifications created with MediaStyle will have their category set to\n     * {@link Notification#CATEGORY_TRANSPORT CATEGORY_TRANSPORT} unless you set a different\n     * category using {@link Notification.Builder#setCategory(String) setCategory()}.\n     * <p>\n     * Finally, if you attach a {@link android.media.session.MediaSession.Token} using\n     * {@link android.app.Notification.MediaStyle#setMediaSession(MediaSession.Token)},\n     * the System UI can identify this as a notification representing an active media session\n     * and respond accordingly (by showing album artwork in the lockscreen, for example).\n     *\n     * <p>\n     * Starting at {@link android.os.Build.VERSION_CODES#O Android O} any notification that has a\n     * media session attached with {@link #setMediaSession(MediaSession.Token)} will be colorized.\n     * You can opt-out of this behavior by using {@link Notification.Builder#setColorized(boolean)}.\n     * <p>\n     *\n     * To use this style with your Notification, feed it to\n     * {@link Notification.Builder#setStyle(android.app.Notification.Style)} like so:\n     * <pre class=\"prettyprint\">\n     * Notification noti = new Notification.Builder()\n     *     .setSmallIcon(R.drawable.ic_stat_player)\n     *     .setContentTitle(&quot;Track title&quot;)\n     *     .setContentText(&quot;Artist - Album&quot;)\n     *     .setLargeIcon(albumArtBitmap))\n     *     .setStyle(<b>new Notification.MediaStyle()</b>\n     *         .setMediaSession(mySession))\n     *     .build();\n     * </pre>\n     *\n     * @see Notification#bigContentView\n     * @see Notification.Builder#setColorized(boolean)\n     ",
  "variables" : [ {
    "name" : "MAX_MEDIA_BUTTONS_IN_COMPACT",
    "type" : "int",
    "comment" : " (notification_template_material_media and notification_template_material_big_media).",
    "links" : [ ]
  }, {
    "name" : "MAX_MEDIA_BUTTONS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MEDIA_BUTTON_IDS",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActionsToShowInCompact",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToken",
    "type" : "MediaSession.Token",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public MediaStyle setShowActionsInCompactView(int... actions)",
    "returnType" : "MediaStyle",
    "comment" : "\n         * Request up to 3 actions (by index in the order of addition) to be shown in the compact\n         * notification view.\n         *\n         * @param actions the indices of the actions to show in the compact notification view\n         ",
    "links" : [ ]
  }, {
    "name" : "public MediaStyle setMediaSession(MediaSession.Token token)",
    "returnType" : "MediaStyle",
    "comment" : "\n         * Attach a {@link android.media.session.MediaSession.Token} to this Notification\n         * to provide additional playback information and control to the SystemUI.\n         ",
    "links" : [ "android.media.session.MediaSession.Token" ]
  }, {
    "name" : "public Notification buildStyled(Notification wip)",
    "returnType" : "Notification",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeContentView(boolean increasedHeight)",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeBigContentView()",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeHeadsUpContentView(boolean increasedHeight)",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void addExtras(Bundle extras)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "protected void restoreFromExtras(Bundle extras)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean areNotificationsVisiblyDifferent(Style other)",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "private void bindMediaActionButton(RemoteViews container, @IdRes int buttonId, Action action, StandardTemplateParams p)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private RemoteViews makeMediaContentView()",
    "returnType" : "RemoteViews",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getActionColor(StandardTemplateParams p)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private RemoteViews makeMediaBigContentView()",
    "returnType" : "RemoteViews",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleImage(RemoteViews contentView)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean hasProgress()",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "MAX_MEDIA_BUTTONS_IN_COMPACT", "MAX_MEDIA_BUTTONS", "MEDIA_BUTTON_IDS", "mActionsToShowInCompact", "mToken" ],
  "methodNames" : [ "public MediaStyle setShowActionsInCompactView(int... actions)", "public MediaStyle setMediaSession(MediaSession.Token token)", "public Notification buildStyled(Notification wip)", "public RemoteViews makeContentView(boolean increasedHeight)", "public RemoteViews makeBigContentView()", "public RemoteViews makeHeadsUpContentView(boolean increasedHeight)", "public void addExtras(Bundle extras)", "protected void restoreFromExtras(Bundle extras)", "public boolean areNotificationsVisiblyDifferent(Style other)", "private void bindMediaActionButton(RemoteViews container, @IdRes int buttonId, Action action, StandardTemplateParams p)", "private RemoteViews makeMediaContentView()", "private int getActionColor(StandardTemplateParams p)", "private RemoteViews makeMediaBigContentView()", "private void handleImage(RemoteViews contentView)", "protected boolean hasProgress()" ]
}