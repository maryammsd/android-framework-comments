{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/templates/ElemWhen.java",
  "packageName" : "org.apache.xalan.templates",
  "className" : "ElemWhen",
  "comment" : "\n * Implement xsl:when.\n * <pre>\n * <!ELEMENT xsl:when %template;>\n * <!ATTLIST xsl:when\n *   test %expr; #REQUIRED\n *   %space-att;\n * >\n * </pre>\n * @see <a href=\"http://www.w3.org/TR/xslt#section-Conditional-Processing-with-xsl:choose\">XXX in XSLT Specification</a>\n * @xsl.usage advanced\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_test",
    "type" : "XPath",
    "comment" : "\n   * Each xsl:when element has a single attribute, test,\n   * which specifies an expression.\n   * @serial\n   ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setTest(XPath v)",
    "returnType" : "void",
    "comment" : "\n   * Set the \"test\" attribute.\n   * Each xsl:when element has a single attribute, test,\n   * which specifies an expression.\n   *\n   * @param v Value to set for the \"test\" attribute.\n   ",
    "links" : [ ]
  }, {
    "name" : "public XPath getTest()",
    "returnType" : "XPath",
    "comment" : "\n   * Get the \"test\" attribute.\n   * Each xsl:when element has a single attribute, test,\n   * which specifies an expression.\n   *\n   * @return Value of the \"test\" attribute.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int getXSLToken()",
    "returnType" : "int",
    "comment" : "\n   * Get an integer representation of the element type.\n   *\n   * @return An integer representation of the element, defined in the\n   *     Constants class.\n   * @see org.apache.xalan.templates.Constants\n   ",
    "links" : [ ]
  }, {
    "name" : "public void compose(StylesheetRoot sroot) throws javax.xml.transform.TransformerException",
    "returnType" : "void",
    "comment" : "\n   * This function is called after everything else has been\n   * recomposed, and allows the template to set remaining\n   * values that may be based on some other property that\n   * depends on recomposition.\n   ",
    "links" : [ ]
  }, {
    "name" : "public String getNodeName()",
    "returnType" : "String",
    "comment" : "\n   * Return the node name.\n   *\n   * @return The node name\n   ",
    "links" : [ ]
  }, {
    "name" : "protected void callChildVisitors(XSLTVisitor visitor, boolean callAttrs)",
    "returnType" : "void",
    "comment" : "\n   * Call the children visitors.\n   * @param visitor The visitor whose appropriate method will be called.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setTest(XPath v)", "public XPath getTest()", "public int getXSLToken()", "public void compose(StylesheetRoot sroot) throws javax.xml.transform.TransformerException", "public String getNodeName()", "protected void callChildVisitors(XSLTVisitor visitor, boolean callAttrs)" ],
  "variableNames" : [ "serialVersionUID", "m_test" ]
}