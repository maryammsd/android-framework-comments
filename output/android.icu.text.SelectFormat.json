{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/SelectFormat.java",
  "packageName" : "android.icu.text",
  "className" : "SelectFormat",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : " Generated by serialver from JDK 1.5",
    "links" : [ ]
  }, {
    "name" : "pattern",
    "type" : "String",
    "comment" : "\n     * The applied pattern string.\n     ",
    "links" : [ ]
  }, {
    "name" : "msgPattern",
    "type" : "MessagePattern",
    "comment" : "\n     * The MessagePattern which contains the parsed structure of the pattern string.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void reset()",
    "returnType" : "void",
    "comment" : "\n     * Resets the <code>SelectFormat</code> object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void applyPattern(String pattern)",
    "returnType" : "void",
    "comment" : "\n     * Sets the pattern used by this select format.\n     * Patterns and their interpretation are specified in the class description.\n     *\n     * @param pattern the pattern for this select format.\n     * @throws IllegalArgumentException when the pattern is not a valid select format pattern.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toPattern()",
    "returnType" : "String",
    "comment" : "\n     * Returns the pattern for this <code>SelectFormat</code>\n     *\n     * @return the pattern string\n     ",
    "links" : [ ]
  }, {
    "name" : " static int findSubMessage(MessagePattern pattern, int partIndex, String keyword)",
    "returnType" : "int",
    "comment" : "package",
    "links" : [ ]
  }, {
    "name" : "public final String format(String keyword)",
    "returnType" : "String",
    "comment" : "\n     * Selects the phrase for the given keyword.\n     *\n     * @param keyword a phrase selection keyword.\n     * @return the string containing the formatted select message.\n     * @throws IllegalArgumentException when the given keyword is not a \"pattern identifier\"\n     ",
    "links" : [ ]
  }, {
    "name" : "public StringBuffer format(Object keyword, StringBuffer toAppendTo, FieldPosition pos)",
    "returnType" : "StringBuffer",
    "comment" : "\n     * Selects the phrase for the given keyword.\n     * and appends the formatted message to the given <code>StringBuffer</code>.\n     * @param keyword a phrase selection keyword.\n     * @param toAppendTo the selected phrase will be appended to this\n     *        <code>StringBuffer</code>.\n     * @param pos will be ignored by this method.\n     * @throws IllegalArgumentException when the given keyword is not a String\n     *         or not a \"pattern identifier\"\n     * @return the string buffer passed in as toAppendTo, with formatted text\n     *         appended.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object parseObject(String source, ParsePosition pos)",
    "returnType" : "Object",
    "comment" : "\n     * This method is not supported by <code>SelectFormat</code>.\n     * @param source the string to be parsed.\n     * @param pos defines the position where parsing is to begin,\n     * and upon return, the position where parsing left off.  If the position\n     * has not changed upon return, then parsing failed.\n     * @return nothing because this method is not supported.\n     * @throws UnsupportedOperationException thrown always.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void reset()", "public void applyPattern(String pattern)", "public String toPattern()", " static int findSubMessage(MessagePattern pattern, int partIndex, String keyword)", "public final String format(String keyword)", "public StringBuffer format(Object keyword, StringBuffer toAppendTo, FieldPosition pos)", "public Object parseObject(String source, ParsePosition pos)", "public boolean equals(Object obj)", "public int hashCode()", "public String toString()", "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException" ],
  "variableNames" : [ "serialVersionUID", "pattern", "msgPattern" ]
}