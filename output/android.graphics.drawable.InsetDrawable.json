{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/drawable/InsetDrawable.java",
  "packageName" : "android.graphics.drawable",
  "className" : "InsetDrawable",
  "comment" : "\n * A Drawable that insets another Drawable by a specified distance or fraction of the content bounds.\n * This is used when a View needs a background that is smaller than\n * the View's actual bounds.\n *\n * <p>It can be defined in an XML file with the <code>&lt;inset></code> element. For more\n * information, see the guide to <a\n * href=\"{@docRoot}guide/topics/resources/drawable-resource.html\">Drawable Resources</a>.</p>\n *\n * @attr ref android.R.styleable#InsetDrawable_visible\n * @attr ref android.R.styleable#InsetDrawable_drawable\n * @attr ref android.R.styleable#InsetDrawable_insetLeft\n * @attr ref android.R.styleable#InsetDrawable_insetRight\n * @attr ref android.R.styleable#InsetDrawable_insetTop\n * @attr ref android.R.styleable#InsetDrawable_insetBottom\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mTmpRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmpInsetRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "InsetState",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void inflate(@NonNull Resources r, @NonNull XmlPullParser parser, @NonNull AttributeSet attrs, @Nullable Theme theme) throws XmlPullParserException, IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void applyTheme(@NonNull Theme t)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void verifyRequiredAttributes(@NonNull TypedArray a) throws XmlPullParserException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateStateFromTypedArray(@NonNull TypedArray a)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private InsetValue getInset(@NonNull TypedArray a, int index, InsetValue defaultValue)",
    "returnType" : "InsetValue",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void getInsets(Rect out)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean getPadding(Rect padding)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Insets getOpticalInsets()",
    "returnType" : "Insets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getOpacity()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void onBoundsChange(Rect bounds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getIntrinsicWidth()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getIntrinsicHeight()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getOutline(@NonNull Outline outline)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " DrawableWrapperState mutateConstantState()",
    "returnType" : "DrawableWrapperState",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void inflate(@NonNull Resources r, @NonNull XmlPullParser parser, @NonNull AttributeSet attrs, @Nullable Theme theme) throws XmlPullParserException, IOException", "public void applyTheme(@NonNull Theme t)", "private void verifyRequiredAttributes(@NonNull TypedArray a) throws XmlPullParserException", "private void updateStateFromTypedArray(@NonNull TypedArray a)", "private InsetValue getInset(@NonNull TypedArray a, int index, InsetValue defaultValue)", "private void getInsets(Rect out)", "public boolean getPadding(Rect padding)", "public Insets getOpticalInsets()", "public int getOpacity()", "protected void onBoundsChange(Rect bounds)", "public int getIntrinsicWidth()", "public int getIntrinsicHeight()", "public void getOutline(@NonNull Outline outline)", " DrawableWrapperState mutateConstantState()" ],
  "variableNames" : [ "mTmpRect", "mTmpInsetRect", "mState" ]
}