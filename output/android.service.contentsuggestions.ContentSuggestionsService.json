{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/contentsuggestions/ContentSuggestionsService.java",
  "packageName" : "android.service.contentsuggestions",
  "className" : "ContentSuggestionsService",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The action for the intent used to define the content suggestions service.\n     *\n     * <p>To be supported, the service must also require the\n     * * {@link android.Manifest.permission#BIND_CONTENT_SUGGESTIONS_SERVICE} permission so\n     * * that other applications can not abuse it.\n     ",
    "links" : [ "android.Manifest.permission#BIND_CONTENT_SUGGESTIONS_SERVICE" ]
  }, {
    "name" : "mInterface",
    "type" : "IContentSuggestionsService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onCreate()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final IBinder onBind(Intent intent)",
    "returnType" : "IBinder",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onProcessContextImage(int taskId, @Nullable Bitmap contextImage, @NonNull Bundle extras)",
    "returnType" : "void",
    "comment" : "\n     * Called by the system to provide the snapshot for the task associated with the given\n     * {@param taskId}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onSuggestContentSelections(@NonNull SelectionsRequest request, @NonNull ContentSuggestionsManager.SelectionsCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Content selections have been request through {@link ContentSuggestionsManager}, implementer\n     * should reply on the callback with selections.\n     ",
    "links" : [ "android.app.contentsuggestions.ContentSuggestionsManager" ]
  }, {
    "name" : "public abstract void onClassifyContentSelections(@NonNull ClassificationsRequest request, @NonNull ContentSuggestionsManager.ClassificationsCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Content classifications have been request through {@link ContentSuggestionsManager},\n     * implementer should reply on the callback with classifications.\n     ",
    "links" : [ "android.app.contentsuggestions.ContentSuggestionsManager" ]
  }, {
    "name" : "public abstract void onNotifyInteraction(@NonNull String requestId, @NonNull Bundle interaction)",
    "returnType" : "void",
    "comment" : "\n     * User interactions have been reported through {@link ContentSuggestionsManager}, implementer\n     * should handle those interactions.\n     ",
    "links" : [ "android.app.contentsuggestions.ContentSuggestionsManager" ]
  }, {
    "name" : "private ContentSuggestionsManager.SelectionsCallback wrapSelectionsCallback(ISelectionsCallback callback)",
    "returnType" : "ContentSuggestionsManager.SelectionsCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ContentSuggestionsManager.ClassificationsCallback wrapClassificationCallback(IClassificationsCallback callback)",
    "returnType" : "ContentSuggestionsManager.ClassificationsCallback",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onCreate()", "public final IBinder onBind(Intent intent)", "public abstract void onProcessContextImage(int taskId, @Nullable Bitmap contextImage, @NonNull Bundle extras)", "public abstract void onSuggestContentSelections(@NonNull SelectionsRequest request, @NonNull ContentSuggestionsManager.SelectionsCallback callback)", "public abstract void onClassifyContentSelections(@NonNull ClassificationsRequest request, @NonNull ContentSuggestionsManager.ClassificationsCallback callback)", "public abstract void onNotifyInteraction(@NonNull String requestId, @NonNull Bundle interaction)", "private ContentSuggestionsManager.SelectionsCallback wrapSelectionsCallback(ISelectionsCallback callback)", "private ContentSuggestionsManager.ClassificationsCallback wrapClassificationCallback(IClassificationsCallback callback)" ],
  "variableNames" : [ "TAG", "mHandler", "SERVICE_INTERFACE", "mInterface" ]
}