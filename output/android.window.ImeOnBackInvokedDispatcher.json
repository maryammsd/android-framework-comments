{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/ImeOnBackInvokedDispatcher.java",
  "packageName" : "android.window",
  "className" : "ImeOnBackInvokedDispatcher",
  "comment" : "\n * A {@link OnBackInvokedDispatcher} for IME that forwards {@link OnBackInvokedCallback}\n * registrations from the IME process to the app process to be registered on the app window.\n * <p>\n * The app process creates and propagates an instance of {@link ImeOnBackInvokedDispatcher}\n * to the IME to be set on the IME window's {@link WindowOnBackInvokedDispatcher}.\n * <p>\n * @see WindowOnBackInvokedDispatcher#setImeOnBackInvokedDispatcher\n *\n * @hide\n ",
  "links" : [ "android.window.OnBackInvokedCallback", "android.window.WindowOnBackInvokedDispatcher", "android.window.OnBackInvokedDispatcher", "android.window.ImeOnBackInvokedDispatcher" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_KEY_ID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_KEY_CALLBACK",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_KEY_PRIORITY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_CODE_REGISTER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_CODE_UNREGISTER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_CODE_START_DISPATCHING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_CODE_STOP_DISPATCHING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResultReceiver",
    "type" : "ResultReceiver",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgressAnimator",
    "type" : "BackProgressAnimator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTouchTracker",
    "type" : "BackTouchTracker",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : " the ViewRootImpl holding IME's WindowOnBackInvokedDispatcher is created on.",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ImeOnBackInvokedDispatcher>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImeCallbacks",
    "type" : "ArrayList<ImeOnBackInvokedCallback>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected WindowOnBackInvokedDispatcher getReceivingDispatcher()",
    "returnType" : "WindowOnBackInvokedDispatcher",
    "comment" : "\n     * Override this method to return the {@link WindowOnBackInvokedDispatcher} of the window\n     * that should receive the forwarded callback.\n     ",
    "links" : [ "android.window.WindowOnBackInvokedDispatcher" ]
  }, {
    "name" : " void setHandler(@NonNull Handler handler)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerOnBackInvokedCallback(@OnBackInvokedDispatcher.Priority int priority, @NonNull OnBackInvokedCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterOnBackInvokedCallback(@NonNull OnBackInvokedCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setProgressThresholds(float linearDistance, float maxDistance, float nonLinearFactor)",
    "returnType" : "void",
    "comment" : " Sets the progress thresholds for touch tracking ",
    "links" : [ ]
  }, {
    "name" : "private void receive(int resultCode, Bundle resultData, @NonNull WindowOnBackInvokedDispatcher receivingDispatcher)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void registerReceivedCallback(@NonNull IOnBackInvokedCallback iCallback, @OnBackInvokedDispatcher.Priority int priority, int callbackId, @NonNull WindowOnBackInvokedDispatcher receivingDispatcher)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void unregisterReceivedCallback(int callbackId, OnBackInvokedDispatcher receivingDispatcher)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void sendStopDispatching()",
    "returnType" : "void",
    "comment" : " Notifies the app process that we've stopped dispatching to an IME callback ",
    "links" : [ ]
  }, {
    "name" : "private void sendStartDispatching()",
    "returnType" : "void",
    "comment" : " Notifies the app process that we've started dispatching to an IME callback ",
    "links" : [ ]
  }, {
    "name" : "private void receiveStopDispatching(@NonNull WindowOnBackInvokedDispatcher receivingDispatcher)",
    "returnType" : "void",
    "comment" : " Receives IME's message that dispatching has started. ",
    "links" : [ ]
  }, {
    "name" : "private void receiveStartDispatching(@NonNull WindowOnBackInvokedDispatcher receivingDispatcher)",
    "returnType" : "void",
    "comment" : " Receives IME's message that dispatching has stopped. ",
    "links" : [ ]
  }, {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : " Clears all registered callbacks on the instance. ",
    "links" : [ ]
  }, {
    "name" : "public void switchRootView(ViewRootImpl previous, ViewRootImpl current)",
    "returnType" : "void",
    "comment" : "\n     * Transfers {@link ImeOnBackInvokedCallback}s registered on one {@link ViewRootImpl} to\n     * another {@link ViewRootImpl} on focus change.\n     *\n     * @param previous the previously focused {@link ViewRootImpl}.\n     * @param current the currently focused {@link ViewRootImpl}.\n     ",
    "links" : [ "ImeOnBackInvokedCallback", "android.view.ViewRootImpl" ]
  } ],
  "methodNames" : [ "protected WindowOnBackInvokedDispatcher getReceivingDispatcher()", " void setHandler(@NonNull Handler handler)", "public void registerOnBackInvokedCallback(@OnBackInvokedDispatcher.Priority int priority, @NonNull OnBackInvokedCallback callback)", "public void unregisterOnBackInvokedCallback(@NonNull OnBackInvokedCallback callback)", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public void setProgressThresholds(float linearDistance, float maxDistance, float nonLinearFactor)", "private void receive(int resultCode, Bundle resultData, @NonNull WindowOnBackInvokedDispatcher receivingDispatcher)", "private void registerReceivedCallback(@NonNull IOnBackInvokedCallback iCallback, @OnBackInvokedDispatcher.Priority int priority, int callbackId, @NonNull WindowOnBackInvokedDispatcher receivingDispatcher)", "private void unregisterReceivedCallback(int callbackId, OnBackInvokedDispatcher receivingDispatcher)", "private void sendStopDispatching()", "private void sendStartDispatching()", "private void receiveStopDispatching(@NonNull WindowOnBackInvokedDispatcher receivingDispatcher)", "private void receiveStartDispatching(@NonNull WindowOnBackInvokedDispatcher receivingDispatcher)", "public void clear()", "public void switchRootView(ViewRootImpl previous, ViewRootImpl current)" ],
  "variableNames" : [ "TAG", "RESULT_KEY_ID", "RESULT_KEY_CALLBACK", "RESULT_KEY_PRIORITY", "RESULT_CODE_REGISTER", "RESULT_CODE_UNREGISTER", "RESULT_CODE_START_DISPATCHING", "RESULT_CODE_STOP_DISPATCHING", "mResultReceiver", "mProgressAnimator", "mTouchTracker", "mHandler", "CREATOR", "mImeCallbacks" ]
}