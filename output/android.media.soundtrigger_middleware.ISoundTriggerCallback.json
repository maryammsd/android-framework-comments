{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/soundtrigger_middleware/ISoundTriggerCallback.java",
  "packageName" : "android.media.soundtrigger_middleware",
  "className" : "ISoundTriggerCallback",
  "comment" : "\n * Main interface for a client to get notifications of events coming from this module.\n * \n * {@hide}\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onRecognition(int modelHandle, android.media.soundtrigger_middleware.RecognitionEventSys event, int captureSession) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Invoked whenever a recognition event is triggered (typically, on recognition, but also in\n   * case of external aborting of a recognition or a forced recognition event - see the status\n   * code in the event for determining).\n   * In case of abortion, the caller may retry after the next onRecognitionAvailabilityChange()\n   * callback.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onPhraseRecognition(int modelHandle, android.media.soundtrigger_middleware.PhraseRecognitionEventSys event, int captureSession) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Invoked whenever a phrase recognition event is triggered (typically, on recognition, but\n   * also in case of external aborting of a recognition or a forced recognition event - see the\n   * status code in the event for determining).\n   * In case of abortion, the caller may retry after the next onRecognitionAvailabilityChange()\n   * callback.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onResourcesAvailable() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Notifies the client that some start/load operations that have previously failed for resource\n   * reasons (threw a ServiceSpecificException(RESOURCE_CONTENTION) or have been preempted) may\n   * now succeed. This is not a guarantee, but a hint for the client to retry.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onModelUnloaded(int modelHandle) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Notifies the client that a model had been preemptively unloaded by the service.\n   * The caller may retry after the next onRecognitionAvailabilityChange() callback.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void onModuleDied() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n   * Notifies the client that the associated module has crashed and restarted. The module instance\n   * is no longer usable and will throw a ServiceSpecificException with a Status.DEAD_OBJECT code\n   * for every call. The client should detach, then re-attach to the module in order to get a new,\n   * usable instance. All state for this module has been lost.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onRecognition(int modelHandle, android.media.soundtrigger_middleware.RecognitionEventSys event, int captureSession) throws android.os.RemoteException", "public void onPhraseRecognition(int modelHandle, android.media.soundtrigger_middleware.PhraseRecognitionEventSys event, int captureSession) throws android.os.RemoteException", "public void onResourcesAvailable() throws android.os.RemoteException", "public void onModelUnloaded(int modelHandle) throws android.os.RemoteException", "public void onModuleDied() throws android.os.RemoteException" ],
  "variableNames" : [ "DESCRIPTOR" ]
}