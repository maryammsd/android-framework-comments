{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/p2p/WifiP2pManager.java",
  "packageName" : "android.net.wifi.p2p",
  "className" : "ExternalApproverRequestListener",
  "comment" : "\n     * Interface for callback invocation when an incoming request is received.\n     *\n     * This callback is registered by\n     * {@link #addExternalApprover(Channel, MacAddress, ExternalApproverRequestListener)}.\n     ",
  "links" : [ "#addExternalApprover(Channel" ],
  "variables" : [ {
    "name" : "REQUEST_TYPE_NEGOTIATION",
    "type" : "int",
    "comment" : "\n         * This device received a negotiation request from another peer.\n         *\n         * Used in {@link #onConnectionRequested(int, WifiP2pConfig, WifiP2pDevice)}.\n         ",
    "links" : [ "#onConnectionRequested(int" ]
  }, {
    "name" : "REQUEST_TYPE_INVITATION",
    "type" : "int",
    "comment" : "\n         * This device received an invitation request from GO to join the group.\n         *\n         * Used in {@link #onConnectionRequested(int, WifiP2pConfig, WifiP2pDevice)}.\n         ",
    "links" : [ "#onConnectionRequested(int" ]
  }, {
    "name" : "REQUEST_TYPE_JOIN",
    "type" : "int",
    "comment" : "\n         * This GO device received a request from a peer to join the group.\n         *\n         * Used in {@link #onConnectionRequested(int, WifiP2pConfig, WifiP2pDevice)}.\n         ",
    "links" : [ "#onConnectionRequested(int" ]
  }, {
    "name" : "APPROVER_DETACH_REASON_REMOVE",
    "type" : "int",
    "comment" : "\n         * Detached by a call to\n         * {@link #removeExternalApprover(Channel, MacAddress, ActionListener)}.\n         *\n         * Used in {@link #onDetached(MacAddress, int)}.\n         ",
    "links" : [ "#removeExternalApprover(Channel", "#onDetached(MacAddress" ]
  }, {
    "name" : "APPROVER_DETACH_REASON_FAILURE",
    "type" : "int",
    "comment" : "\n         * Detached due to a framework failure.\n         *\n         * Used in {@link #onDetached(MacAddress, int)}.\n         ",
    "links" : [ "#onDetached(MacAddress" ]
  }, {
    "name" : "APPROVER_DETACH_REASON_REPLACE",
    "type" : "int",
    "comment" : "\n         * Detached when a new approver replaces an old one.\n         *\n         * Used in {@link #onDetached(MacAddress, int)}.\n         ",
    "links" : [ "#onDetached(MacAddress" ]
  }, {
    "name" : "APPROVER_DETACH_REASON_CLOSE",
    "type" : "int",
    "comment" : "\n         * Detached since the {@link WifiP2pManager} channel was closed, e.g.\n         * by using {@link Channel#close()} method.\n         *\n         * Used in {@link #onDetached(MacAddress, int)}.\n         ",
    "links" : [ "android.net.wifi.p2p.WifiP2pManager", "com.android.internal.util.AsyncChannel#close()", "#onDetached(MacAddress" ]
  } ],
  "methods" : [ {
    "name" : " void onAttached(@NonNull MacAddress deviceAddress)",
    "returnType" : "void",
    "comment" : "\n         * Called when an approver registration via\n         * {@link #addExternalApprover(Channel, MacAddress, ExternalApproverRequestListener)}\n         * is successful.\n         *\n         * @param deviceAddress is the peer MAC address used in the registration.\n         ",
    "links" : [ "#addExternalApprover(Channel" ]
  }, {
    "name" : " void onDetached(@NonNull MacAddress deviceAddress, @ApproverDetachReason int reason)",
    "returnType" : "void",
    "comment" : "\n         * Called when an approver registration via\n         * {@link #addExternalApprover(Channel, MacAddress, ExternalApproverRequestListener)}\n         * has failed.\n         *\n         * @param deviceAddress is the peer MAC address used in the registration.\n         * @param reason is the failure reason.\n         ",
    "links" : [ "#addExternalApprover(Channel" ]
  }, {
    "name" : " void onConnectionRequested(@RequestType int requestType, @NonNull WifiP2pConfig config, @NonNull WifiP2pDevice device)",
    "returnType" : "void",
    "comment" : "\n         * Called when there is an incoming connection request\n         * which matches a peer (identified by its {@link MacAddress}) registered by the external\n         * approver through\n         * {@link #addExternalApprover(Channel, MacAddress, ExternalApproverRequestListener)}.\n         * The external approver is expected to follow up with a connection decision using the\n         * {@link #setConnectionRequestResult(Channel, MacAddress, int, ActionListener)} with\n         * {@link #CONNECTION_REQUEST_ACCEPT}, {@link #CONNECTION_REQUEST_REJECT}, or\n         * {@link #CONNECTION_REQUEST_DEFER_TO_SERVICE}.\n         *\n         * @param requestType is one of {@link #REQUEST_TYPE_NEGOTIATION},\n         *        {@link #REQUEST_TYPE_INVITATION}, and {@link #REQUEST_TYPE_JOIN}.\n         * @param config is the peer configuration.\n         * @param device is the peer information.\n         ",
    "links" : [ "#REQUEST_TYPE_JOIN", "#CONNECTION_REQUEST_REJECT", "android.net.MacAddress", "#REQUEST_TYPE_INVITATION", "#addExternalApprover(Channel", "#CONNECTION_REQUEST_ACCEPT", "#setConnectionRequestResult(Channel", "#REQUEST_TYPE_NEGOTIATION", "#CONNECTION_REQUEST_DEFER_TO_SERVICE" ]
  }, {
    "name" : " void onPinGenerated(@NonNull MacAddress deviceAddress, @NonNull String pin)",
    "returnType" : "void",
    "comment" : "\n         * Called when a PIN is generated by the WiFi service.\n         *\n         * The external approver can display the PIN, exchange the PIN via Out-Of-Band way\n         * or ask the wifi service to show the PIN as usual using the\n         * {@link #setConnectionRequestResult(Channel, MacAddress, int, ActionListener)}\n         * with {@link #CONNECTION_REQUEST_DEFER_SHOW_PIN_TO_SERVICE}.\n         *\n         * @param deviceAddress is the peer MAC address used in the registration.\n         * @param pin is the WPS PIN.\n         ",
    "links" : [ "#setConnectionRequestResult(Channel", "#CONNECTION_REQUEST_DEFER_SHOW_PIN_TO_SERVICE" ]
  } ],
  "methodNames" : [ " void onAttached(@NonNull MacAddress deviceAddress)", " void onDetached(@NonNull MacAddress deviceAddress, @ApproverDetachReason int reason)", " void onConnectionRequested(@RequestType int requestType, @NonNull WifiP2pConfig config, @NonNull WifiP2pDevice device)", " void onPinGenerated(@NonNull MacAddress deviceAddress, @NonNull String pin)" ],
  "variableNames" : [ "REQUEST_TYPE_NEGOTIATION", "REQUEST_TYPE_INVITATION", "REQUEST_TYPE_JOIN", "APPROVER_DETACH_REASON_REMOVE", "APPROVER_DETACH_REASON_FAILURE", "APPROVER_DETACH_REASON_REPLACE", "APPROVER_DETACH_REASON_CLOSE" ]
}