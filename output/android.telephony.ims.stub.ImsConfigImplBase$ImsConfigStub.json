{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/stub/ImsConfigImplBase.java",
  "packageName" : "android.telephony.ims.stub",
  "className" : "ImsConfigStub",
  "comment" : "\n     * Implements the IImsConfig AIDL interface, which is called by potentially many processes\n     * in order to get/set configuration parameters.\n     *\n     * It holds an object of ImsConfigImplBase class which is usually extended by ImsConfigImpl\n     * with actual implementations from vendors. This class caches provisioned values from\n     * ImsConfigImpl layer because queries through ImsConfigImpl can be slow. When query goes in,\n     * it first checks cache layer. If missed, it will call the vendor implementation of\n     * ImsConfigImplBase API.\n     * and cache the return value if the set succeeds.\n     *\n     * Provides APIs to get/set the IMS service feature/capability/parameters.\n     * The config items include:\n     * 1) Items provisioned by the operator.\n     * 2) Items configured by user. Mainly service feature class.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mImsConfigImplBaseWeakReference",
    "type" : "WeakReference<ImsConfigImplBase>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProvisionedIntValue",
    "type" : "HashMap<Integer, Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProvisionedStringValue",
    "type" : "HashMap<Integer, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void addImsConfigCallback(IImsConfigCallback c) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeImsConfigCallback(IImsConfigCallback c) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getConfigInt(int item) throws RemoteException",
    "returnType" : "int",
    "comment" : "\n         * Gets the value for ims service/capabilities parameters. It first checks its local cache,\n         * if missed, it will call ImsConfigImplBase.getConfigInt.\n         * Synchronous blocking call.\n         *\n         * @param item integer key\n         * @return value in Integer format or {@link #CONFIG_RESULT_UNKNOWN} if\n         * unavailable.\n         ",
    "links" : [ "#CONFIG_RESULT_UNKNOWN" ]
  }, {
    "name" : "public String getConfigString(int item) throws RemoteException",
    "returnType" : "String",
    "comment" : "\n         * Gets the value for ims service/capabilities parameters. It first checks its local cache,\n         * if missed, it will call #ImsConfigImplBase.getConfigString.\n         * Synchronous blocking call.\n         *\n         * @param item integer key\n         * @return value in String format.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int setConfigInt(int item, int value) throws RemoteException",
    "returnType" : "int",
    "comment" : "\n         * Sets the value for IMS service/capabilities parameters by the operator device\n         * management entity. It sets the config item value in the provisioned storage\n         * from which the main value is derived, and write it into local cache.\n         * Synchronous blocking call.\n         *\n         * @param item integer key\n         * @param value in Integer format.\n         * @return the result of setting the configuration value, defined as either\n         * {@link #CONFIG_RESULT_FAILED} or {@link #CONFIG_RESULT_SUCCESS}.\n         ",
    "links" : [ "#CONFIG_RESULT_FAILED", "#CONFIG_RESULT_SUCCESS" ]
  }, {
    "name" : "public int setConfigString(int item, String value) throws RemoteException",
    "returnType" : "int",
    "comment" : "\n         * Sets the value for IMS service/capabilities parameters by the operator device\n         * management entity. It sets the config item value in the provisioned storage\n         * from which the main value is derived, and write it into local cache.\n         * Synchronous blocking call.\n         *\n         * @param item as defined in com.android.ims.ImsConfig#ConfigConstants.\n         * @param value in String format.\n         * @return the result of setting the configuration value, defined as either\n         * {@link #CONFIG_RESULT_FAILED} or {@link #CONFIG_RESULT_SUCCESS}.\n         ",
    "links" : [ "#CONFIG_RESULT_FAILED", "#CONFIG_RESULT_SUCCESS" ]
  }, {
    "name" : "public void updateImsCarrierConfigs(PersistableBundle bundle) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ImsConfigImplBase getImsConfigImpl() throws RemoteException",
    "returnType" : "ImsConfigImplBase",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyRcsAutoConfigurationReceived(byte[] config, boolean isCompressed) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyRcsAutoConfigurationRemoved() throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void notifyImsConfigChanged(int item, int value) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void notifyImsConfigChanged(int item, String value) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void updateCachedValue(int item, int value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void updateCachedValue(int item, String value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addRcsConfigCallback(IRcsConfigCallback c) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeRcsConfigCallback(IRcsConfigCallback c) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void triggerRcsReconfiguration() throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setRcsClientConfiguration(RcsClientConfiguration rcc) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyIntImsConfigChanged(int item, int value) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyStringImsConfigChanged(int item, String value) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearCachedValue()",
    "returnType" : "void",
    "comment" : "\n         * Clear cached configuration value.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void executeMethodAsync(Runnable r, String errorLogName) throws RemoteException",
    "returnType" : "void",
    "comment" : " the future to return.",
    "links" : [ ]
  }, {
    "name" : "private T executeMethodAsyncForResult(Supplier<T> r, String errorLogName) throws RemoteException",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void addImsConfigCallback(IImsConfigCallback c) throws RemoteException", "public void removeImsConfigCallback(IImsConfigCallback c) throws RemoteException", "public int getConfigInt(int item) throws RemoteException", "public String getConfigString(int item) throws RemoteException", "public int setConfigInt(int item, int value) throws RemoteException", "public int setConfigString(int item, String value) throws RemoteException", "public void updateImsCarrierConfigs(PersistableBundle bundle) throws RemoteException", "private ImsConfigImplBase getImsConfigImpl() throws RemoteException", "public void notifyRcsAutoConfigurationReceived(byte[] config, boolean isCompressed) throws RemoteException", "public void notifyRcsAutoConfigurationRemoved() throws RemoteException", "private void notifyImsConfigChanged(int item, int value) throws RemoteException", "private void notifyImsConfigChanged(int item, String value) throws RemoteException", "protected void updateCachedValue(int item, int value)", "protected void updateCachedValue(int item, String value)", "public void addRcsConfigCallback(IRcsConfigCallback c) throws RemoteException", "public void removeRcsConfigCallback(IRcsConfigCallback c) throws RemoteException", "public void triggerRcsReconfiguration() throws RemoteException", "public void setRcsClientConfiguration(RcsClientConfiguration rcc) throws RemoteException", "public void notifyIntImsConfigChanged(int item, int value) throws RemoteException", "public void notifyStringImsConfigChanged(int item, String value) throws RemoteException", "public void clearCachedValue()", "private void executeMethodAsync(Runnable r, String errorLogName) throws RemoteException", "private T executeMethodAsyncForResult(Supplier<T> r, String errorLogName) throws RemoteException" ],
  "variableNames" : [ "mImsConfigImplBaseWeakReference", "mProvisionedIntValue", "mProvisionedStringValue", "mLock", "mExecutor" ]
}