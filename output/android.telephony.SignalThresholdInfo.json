{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/SignalThresholdInfo.java",
  "packageName" : "android.telephony",
  "className" : "SignalThresholdInfo",
  "comment" : "\n * Defines the threshold value of the signal strength.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SIGNAL_MEASUREMENT_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Unknown signal measurement type.\n     ",
    "links" : [ ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_RSSI",
    "type" : "int",
    "comment" : "\n     * Received Signal Strength Indication.\n     * Range: -113 dBm and -51 dBm\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#GERAN},\n     *           {@link AccessNetworkConstants.AccessNetworkType#CDMA2000}\n     * Reference: 3GPP TS 27.007 section 8.5.\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#CDMA2000", "AccessNetworkConstants.AccessNetworkType#GERAN" ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_RSCP",
    "type" : "int",
    "comment" : "\n     * Received Signal Code Power.\n     * Range: -120 dBm to -25 dBm;\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#UTRAN}\n     * Reference: 3GPP TS 25.123, section 9.1.1.1\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#UTRAN" ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_RSRP",
    "type" : "int",
    "comment" : "\n     * Reference Signal Received Power.\n     * Range: -140 dBm to -44 dBm;\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#EUTRAN}\n     * Reference: 3GPP TS 36.133 9.1.4\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#EUTRAN" ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_RSRQ",
    "type" : "int",
    "comment" : "\n     * Reference Signal Received Quality\n     * Range: -34 dB to 3 dB;\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#EUTRAN}\n     * Reference: 3GPP TS 36.133 9.1.7\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#EUTRAN" ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_RSSNR",
    "type" : "int",
    "comment" : "\n     * Reference Signal Signal to Noise Ratio\n     * Range: -20 dB to 30 dB;\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#EUTRAN}\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#EUTRAN" ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_SSRSRP",
    "type" : "int",
    "comment" : "\n     * 5G SS reference signal received power.\n     * Range: -140 dBm to -44 dBm.\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#NGRAN}\n     * Reference: 3GPP TS 38.215.\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#NGRAN" ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_SSRSRQ",
    "type" : "int",
    "comment" : "\n     * 5G SS reference signal received quality.\n     * Range: -43 dB to 20 dB.\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#NGRAN}\n     * Reference: 3GPP TS 38.133 section 10.1.11.1.\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#NGRAN" ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_SSSINR",
    "type" : "int",
    "comment" : "\n     * 5G SS signal-to-noise and interference ratio.\n     * Range: -23 dB to 40 dB\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#NGRAN}\n     * Reference: 3GPP TS 38.215 section 5.1.*, 3GPP TS 38.133 section 10.1.16.1.\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#NGRAN" ]
  }, {
    "name" : "SIGNAL_MEASUREMENT_TYPE_ECNO",
    "type" : "int",
    "comment" : "\n     * The ratio between the received energy from the pilot signal CPICH per chip (Ec) to the\n     * noise density (No).\n     * Range: -24 dBm to 1 dBm.\n     * Used RAN: {@link AccessNetworkConstants.AccessNetworkType#UTRAN}\n     * Reference: 3GPP TS 25.215 5.1.5\n     ",
    "links" : [ "AccessNetworkConstants.AccessNetworkType#UTRAN" ]
  }, {
    "name" : "mSignalMeasurementType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHysteresisMs",
    "type" : "int",
    "comment" : "\n     * A hysteresis time in milliseconds to prevent flapping.\n     * A value of 0 disables hysteresis\n     ",
    "links" : [ ]
  }, {
    "name" : "mHysteresisDb",
    "type" : "int",
    "comment" : "\n     * An interval in dB defining the required magnitude change between reports.\n     * hysteresisDb must be smaller than the smallest threshold delta.\n     * An interval value of 0 disables hysteresis.\n     ",
    "links" : [ ]
  }, {
    "name" : "mThresholds",
    "type" : "int[]",
    "comment" : "\n     * List of threshold values.\n     * Range and unit must reference specific SignalMeasurementType\n     * The threshold values for which to apply criteria.\n     * A vector size of 0 disables the use of thresholds for reporting.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsEnabled",
    "type" : "boolean",
    "comment" : "\n     * {@code true} means modem must trigger the report based on the criteria;\n     * {@code false} means modem must not trigger the report based on the criteria.\n     ",
    "links" : [ ]
  }, {
    "name" : "mRan",
    "type" : "int",
    "comment" : "\n     * The radio access network type associated with the signal thresholds.\n     ",
    "links" : [ ]
  }, {
    "name" : "HYSTERESIS_MS_DISABLED",
    "type" : "int",
    "comment" : "\n     * Indicates the hysteresisMs is disabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "HYSTERESIS_DB_DEFAULT",
    "type" : "int",
    "comment" : "\n     * Indicates the default hysteresis value in dB.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "HYSTERESIS_DB_MINIMUM",
    "type" : "int",
    "comment" : "\n     * Indicates the hysteresisDb value is not set and to be initialised to default value.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "SIGNAL_RSSI_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSSI}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSSI" ]
  }, {
    "name" : "SIGNAL_RSSI_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSSI}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSSI" ]
  }, {
    "name" : "SIGNAL_RSCP_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSCP}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSCP" ]
  }, {
    "name" : "SIGNAL_RSCP_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSCP}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSCP" ]
  }, {
    "name" : "SIGNAL_RSRP_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSRP}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSRP" ]
  }, {
    "name" : "SIGNAL_RSRP_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSRP}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSRP" ]
  }, {
    "name" : "SIGNAL_RSRQ_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSRQ}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSRQ" ]
  }, {
    "name" : "SIGNAL_RSRQ_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSRQ}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSRQ" ]
  }, {
    "name" : "SIGNAL_RSSNR_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSSNR}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSSNR" ]
  }, {
    "name" : "SIGNAL_RSSNR_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_RSSNR}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_RSSNR" ]
  }, {
    "name" : "SIGNAL_SSRSRP_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_SSRSRP}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_SSRSRP" ]
  }, {
    "name" : "SIGNAL_SSRSRP_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_SSRSRP}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_SSRSRP" ]
  }, {
    "name" : "SIGNAL_SSRSRQ_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_SSRSRQ}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_SSRSRQ" ]
  }, {
    "name" : "SIGNAL_SSRSRQ_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_SSRSRQ}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_SSRSRQ" ]
  }, {
    "name" : "SIGNAL_SSSINR_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_SSSINR}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_SSSINR" ]
  }, {
    "name" : "SIGNAL_SSSINR_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_SSSINR}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_SSSINR" ]
  }, {
    "name" : "SIGNAL_ECNO_MIN_VALUE",
    "type" : "int",
    "comment" : "\n     * Minimum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_ECNO}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_ECNO" ]
  }, {
    "name" : "SIGNAL_ECNO_MAX_VALUE",
    "type" : "int",
    "comment" : "\n     * Maximum valid value for {@link #SIGNAL_MEASUREMENT_TYPE_ECNO}.\n     *\n     * @hide\n     ",
    "links" : [ "#SIGNAL_MEASUREMENT_TYPE_ECNO" ]
  }, {
    "name" : "MINIMUM_NUMBER_OF_THRESHOLDS_ALLOWED",
    "type" : "int",
    "comment" : "\n     * The minimum number of thresholds allowed in each SignalThresholdInfo.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "MAXIMUM_NUMBER_OF_THRESHOLDS_ALLOWED",
    "type" : "int",
    "comment" : "\n     * The maximum number of thresholds allowed in each SignalThresholdInfo.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SignalThresholdInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getRadioAccessNetworkType()",
    "returnType" : "int",
    "comment" : "\n     * Get the radio access network type.\n     *\n     * @return radio access network type\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSignalMeasurementType()",
    "returnType" : "int",
    "comment" : "\n     * Get the signal measurement type.\n     *\n     * @return the SignalMeasurementType value\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getHysteresisMs()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getHysteresisDb()",
    "returnType" : "int",
    "comment" : "\n     * Get measurement hysteresis db.\n     *\n     * @return hysteresis db value\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int[] getThresholds()",
    "returnType" : "int[]",
    "comment" : "\n     * Get the signal strength thresholds.\n     *\n     * Signal strength thresholds are a list of integer used for suggesting signal level and signal\n     * reporting criteria. The range and unit must reference specific SignalMeasurementType.\n     *\n     * Please refer to https://source.android.com/devices/tech/connect/signal-strength on how signal\n     * strength thresholds are used for signal strength reporting.\n     *\n     * @return array of integer of the signal thresholds\n     *\n     * @see #SIGNAL_MEASUREMENT_TYPE_RSSI\n     * @see #SIGNAL_MEASUREMENT_TYPE_RSCP\n     * @see #SIGNAL_MEASUREMENT_TYPE_RSRP\n     * @see #SIGNAL_MEASUREMENT_TYPE_RSRQ\n     * @see #SIGNAL_MEASUREMENT_TYPE_RSSNR\n     * @see #SIGNAL_MEASUREMENT_TYPE_SSRSRP\n     * @see #SIGNAL_MEASUREMENT_TYPE_SSRSRQ\n     * @see #SIGNAL_MEASUREMENT_TYPE_SSSINR\n     * @see #SIGNAL_MEASUREMENT_TYPE_ECNO\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getMinimumNumberOfThresholdsAllowed()",
    "returnType" : "int",
    "comment" : "\n     * Get the minimum number of thresholds allowed in each SignalThresholdInfo.\n     *\n     * @return the minimum number of thresholds allowed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getMaximumNumberOfThresholdsAllowed()",
    "returnType" : "int",
    "comment" : "\n     * Get the maximum number of threshold allowed in each SignalThresholdInfo.\n     *\n     * @return the maximum number of thresholds allowed\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isValidThreshold(@SignalMeasurementType int type, int threshold)",
    "returnType" : "boolean",
    "comment" : "\n     * Return true if signal measurement type is valid and the threshold value is in range.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean isValidRanWithMeasurementType(@AccessNetworkConstants.RadioAccessNetworkType int ran, @SignalMeasurementType int type)",
    "returnType" : "boolean",
    "comment" : "\n     * Return true if the radio access type is allowed to set with the measurement type.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void validateRanWithMeasurementType(@AccessNetworkConstants.RadioAccessNetworkType int ran, @SignalMeasurementType int signalMeasurement)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void validateThresholdRange(@SignalMeasurementType int signalMeasurement, int[] thresholds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getRadioAccessNetworkType()", "public int getSignalMeasurementType()", "public int getHysteresisMs()", "public int getHysteresisDb()", "public boolean isEnabled()", "public int[] getThresholds()", "public static int getMinimumNumberOfThresholdsAllowed()", "public static int getMaximumNumberOfThresholdsAllowed()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public String toString()", "private static boolean isValidThreshold(@SignalMeasurementType int type, int threshold)", "private static boolean isValidRanWithMeasurementType(@AccessNetworkConstants.RadioAccessNetworkType int ran, @SignalMeasurementType int type)", "private void validateRanWithMeasurementType(@AccessNetworkConstants.RadioAccessNetworkType int ran, @SignalMeasurementType int signalMeasurement)", "private void validateThresholdRange(@SignalMeasurementType int signalMeasurement, int[] thresholds)" ],
  "variableNames" : [ "SIGNAL_MEASUREMENT_TYPE_UNKNOWN", "SIGNAL_MEASUREMENT_TYPE_RSSI", "SIGNAL_MEASUREMENT_TYPE_RSCP", "SIGNAL_MEASUREMENT_TYPE_RSRP", "SIGNAL_MEASUREMENT_TYPE_RSRQ", "SIGNAL_MEASUREMENT_TYPE_RSSNR", "SIGNAL_MEASUREMENT_TYPE_SSRSRP", "SIGNAL_MEASUREMENT_TYPE_SSRSRQ", "SIGNAL_MEASUREMENT_TYPE_SSSINR", "SIGNAL_MEASUREMENT_TYPE_ECNO", "mSignalMeasurementType", "mHysteresisMs", "mHysteresisDb", "mThresholds", "mIsEnabled", "mRan", "HYSTERESIS_MS_DISABLED", "HYSTERESIS_DB_DEFAULT", "HYSTERESIS_DB_MINIMUM", "SIGNAL_RSSI_MIN_VALUE", "SIGNAL_RSSI_MAX_VALUE", "SIGNAL_RSCP_MIN_VALUE", "SIGNAL_RSCP_MAX_VALUE", "SIGNAL_RSRP_MIN_VALUE", "SIGNAL_RSRP_MAX_VALUE", "SIGNAL_RSRQ_MIN_VALUE", "SIGNAL_RSRQ_MAX_VALUE", "SIGNAL_RSSNR_MIN_VALUE", "SIGNAL_RSSNR_MAX_VALUE", "SIGNAL_SSRSRP_MIN_VALUE", "SIGNAL_SSRSRP_MAX_VALUE", "SIGNAL_SSRSRQ_MIN_VALUE", "SIGNAL_SSRSRQ_MAX_VALUE", "SIGNAL_SSSINR_MIN_VALUE", "SIGNAL_SSSINR_MAX_VALUE", "SIGNAL_ECNO_MIN_VALUE", "SIGNAL_ECNO_MAX_VALUE", "MINIMUM_NUMBER_OF_THRESHOLDS_ALLOWED", "MAXIMUM_NUMBER_OF_THRESHOLDS_ALLOWED", "CREATOR" ]
}