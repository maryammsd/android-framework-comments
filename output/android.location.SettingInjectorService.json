{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/SettingInjectorService.java",
  "packageName" : "android.location",
  "className" : "SettingInjectorService",
  "comment" : "\n * Dynamically specifies the summary (subtitle) and enabled status of a preference injected into\n * the list of app settings displayed by the system settings app\n * <p/>\n * For use only by apps that are included in the system image, for preferences that affect multiple\n * apps. Location settings that apply only to one app should be shown within that app,\n * rather than in the system settings.\n * <p/>\n * To add a preference to the list, a subclass of {@link SettingInjectorService} must be declared in\n * the manifest as so:\n *\n * <pre>\n *     &lt;service android:name=\"com.example.android.injector.MyInjectorService\" &gt;\n *         &lt;intent-filter&gt;\n *             &lt;action android:name=\"android.location.SettingInjectorService\" /&gt;\n *         &lt;/intent-filter&gt;\n *\n *         &lt;meta-data\n *             android:name=\"android.location.SettingInjectorService\"\n *             android:resource=\"@xml/my_injected_location_setting\" /&gt;\n *     &lt;/service&gt;\n * </pre>\n * The resource file specifies the static data for the setting:\n * <pre>\n *     &lt;injected-location-setting xmlns:android=\"http://schemas.android.com/apk/res/android\"\n *         android:title=\"@string/injected_setting_title\"\n *         android:icon=\"@drawable/ic_acme_corp\"\n *         android:settingsActivity=\"com.example.android.injector.MySettingActivity\"\n *     /&gt;\n * </pre>\n * Here:\n * <ul>\n * <li>title: The {@link android.preference.Preference#getTitle()} value. The title should make\n * it clear which apps are affected by the setting, typically by including the name of the\n * developer. For example, \"Acme Corp. ads preferences.\" </li>\n *\n * <li>icon: The {@link android.preference.Preference#getIcon()} value. Typically this will be a\n * generic icon for the developer rather than the icon for an individual app.</li>\n *\n * <li>settingsActivity: the activity which is launched to allow the user to modify the setting\n * value.  The activity must be in the same package as the subclass of\n * {@link SettingInjectorService}. The activity should use your own branding to help emphasize\n * to the user that it is not part of the system settings.</li>\n * </ul>\n *\n * To ensure a good user experience, your {@link android.app.Application#onCreate()},\n * {@link #onGetSummary()}, and {@link #onGetEnabled()} methods must all be fast. If any are slow,\n * it can delay the display of settings values for other apps as well. Note further that all are\n * called on your app's UI thread.\n * <p/>\n * For compactness, only one copy of a given setting should be injected. If each account has a\n * distinct value for the setting, then the {@link #onGetSummary()} value should represent a summary\n * of the state across all of the accounts and {@code settingsActivity} should display the value for\n * each account.\n ",
  "links" : [ "android.preference.Preference#getTitle()", "android.app.Application#onCreate()", "android.preference.Preference#getIcon()", "#onGetEnabled()", "#onGetSummary()", "android.location.SettingInjectorService" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ACTION_SERVICE_INTENT",
    "type" : "String",
    "comment" : "\n     * Intent action that must be declared in the manifest for the subclass. Used to start the\n     * service to read the dynamic status for the setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "META_DATA_NAME",
    "type" : "String",
    "comment" : "\n     * Name of the meta-data tag used to specify the resource file that includes the settings\n     * attributes.\n     ",
    "links" : [ ]
  }, {
    "name" : "ATTRIBUTES_NAME",
    "type" : "String",
    "comment" : "\n     * Name of the XML tag that includes the attributes for the setting.\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_INJECTED_SETTING_CHANGED",
    "type" : "String",
    "comment" : "\n     * Intent action a client should broadcast when the value of one of its injected settings has\n     * changed, so that the setting can be updated in the UI.\n     ",
    "links" : [ ]
  }, {
    "name" : "SUMMARY_KEY",
    "type" : "String",
    "comment" : "\n     * Name of the bundle key for the string specifying the summary for the setting (e.g., \"ON\" or\n     * \"OFF\").\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "ENABLED_KEY",
    "type" : "String",
    "comment" : "\n     * Name of the bundle key for the string specifying whether the setting is currently enabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "MESSENGER_KEY",
    "type" : "String",
    "comment" : "\n     * Name of the intent key used to specify the messenger\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final IBinder onBind(Intent intent)",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void onStart(Intent intent, int startId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int onStartCommand(Intent intent, int flags, int startId)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void onHandleIntent(Intent intent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void sendStatus(Intent intent, String summary, boolean enabled)",
    "returnType" : "void",
    "comment" : "\n     * Send the enabled values back to the caller via the messenger encoded in the\n     * intent.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract String onGetSummary()",
    "returnType" : "String",
    "comment" : "\n     * Returns the {@link android.preference.Preference#getSummary()} value (allowed to be null or\n     * empty). Should not perform unpredictably-long operations such as network access--see the\n     * running-time comments in the class-level javadoc.\n     * <p/>\n     * This method is called on KitKat, and Q+ devices.\n     *\n     * @return the {@link android.preference.Preference#getSummary()} value\n     ",
    "links" : [ "android.preference.Preference#getSummary()" ]
  }, {
    "name" : "protected abstract boolean onGetEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns the {@link android.preference.Preference#isEnabled()} value. Should not perform\n     * unpredictably-long operations such as network access--see the running-time comments in the\n     * class-level javadoc.\n     * <p/>\n     * Note that to prevent churn in the settings list, there is no support for dynamically choosing\n     * to hide a setting. Instead you should have this method return false, which will disable the\n     * setting and its link to your setting activity. One reason why you might choose to do this is\n     * if {@link android.provider.Settings.Secure#LOCATION_MODE} is {@link\n     * android.provider.Settings.Secure#LOCATION_MODE_OFF}.\n     * <p/>\n     * It is possible that the user may click on the setting before this method returns, so your\n     * settings activity must handle the case where it is invoked even though the setting is\n     * disabled. The simplest approach may be to simply call {@link android.app.Activity#finish()}\n     * when disabled.\n     *\n     * @return the {@link android.preference.Preference#isEnabled()} value\n     ",
    "links" : [ "android.provider.Settings.Secure#LOCATION_MODE", "android.preference.Preference#isEnabled()", "android.app.Activity#finish()", "android.provider.Settings.Secure#LOCATION_MODE_OFF" ]
  }, {
    "name" : "public static final void refreshSettings(@NonNull Context context)",
    "returnType" : "void",
    "comment" : "\n     * Sends a broadcast to refresh the injected settings on location settings page.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final IBinder onBind(Intent intent)", "public final void onStart(Intent intent, int startId)", "public final int onStartCommand(Intent intent, int flags, int startId)", "private void onHandleIntent(Intent intent)", "private void sendStatus(Intent intent, String summary, boolean enabled)", "protected abstract String onGetSummary()", "protected abstract boolean onGetEnabled()", "public static final void refreshSettings(@NonNull Context context)" ],
  "variableNames" : [ "TAG", "ACTION_SERVICE_INTENT", "META_DATA_NAME", "ATTRIBUTES_NAME", "ACTION_INJECTED_SETTING_CHANGED", "SUMMARY_KEY", "ENABLED_KEY", "MESSENGER_KEY", "mName" ]
}