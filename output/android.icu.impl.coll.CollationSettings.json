{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/coll/CollationSettings.java",
  "packageName" : "android.icu.impl.coll",
  "className" : "CollationSettings",
  "comment" : "\n * Collation settings/options/attributes.\n * These are the values that can be changed via API.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "CHECK_FCD",
    "type" : "int",
    "comment" : "\n     * Options bit 0: Perform the FCD check on the input text and deliver normalized text.\n     ",
    "links" : [ ]
  }, {
    "name" : "NUMERIC",
    "type" : "int",
    "comment" : "\n     * Options bit 1: Numeric collation.\n     * Also known as CODAN = COllate Digits As Numbers.\n     *\n     * Treat digit sequences as numbers with CE sequences in numeric order,\n     * rather than returning a normal CE for each digit.\n     ",
    "links" : [ ]
  }, {
    "name" : "SHIFTED",
    "type" : "int",
    "comment" : "\n     * \"Shifted\" alternate handling, see ALTERNATE_MASK.\n     ",
    "links" : [ ]
  }, {
    "name" : "ALTERNATE_MASK",
    "type" : "int",
    "comment" : "\n     * Options bits 3..2: Alternate-handling mask. 0 for non-ignorable.\n     * Reserve values 8 and 0xc for shift-trimmed and blanked.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_VARIABLE_SHIFT",
    "type" : "int",
    "comment" : "\n     * Options bits 6..4: The 3-bit maxVariable value bit field is shifted by this value.\n     ",
    "links" : [ ]
  }, {
    "name" : "MAX_VARIABLE_MASK",
    "type" : "int",
    "comment" : " maxVariable options bit mask before shifting. ",
    "links" : [ ]
  }, {
    "name" : "UPPER_FIRST",
    "type" : "int",
    "comment" : "\n     * Options bit 8: Sort uppercase first if caseLevel or caseFirst is on.\n     ",
    "links" : [ ]
  }, {
    "name" : "CASE_FIRST",
    "type" : "int",
    "comment" : "\n     * Options bit 9: Keep the case bits in the tertiary weight (they trump other tertiary values)\n     * unless case level is on (when they are *moved* into the separate case level).\n     * By default, the case bits are removed from the tertiary weight (ignored).\n     *\n     * When CASE_FIRST is off, UPPER_FIRST must be off too, corresponding to\n     * the tri-value UCOL_CASE_FIRST attribute: UCOL_OFF vs. UCOL_LOWER_FIRST vs. UCOL_UPPER_FIRST.\n     ",
    "links" : [ ]
  }, {
    "name" : "CASE_FIRST_AND_UPPER_MASK",
    "type" : "int",
    "comment" : "\n     * Options bit mask for caseFirst and upperFirst, before shifting.\n     * Same value as caseFirst==upperFirst.\n     ",
    "links" : [ ]
  }, {
    "name" : "CASE_LEVEL",
    "type" : "int",
    "comment" : "\n     * Options bit 10: Insert the case level between the secondary and tertiary levels.\n     ",
    "links" : [ ]
  }, {
    "name" : "BACKWARD_SECONDARY",
    "type" : "int",
    "comment" : "\n     * Options bit 11: Compare secondary weights backwards. (\"French secondary\")\n     ",
    "links" : [ ]
  }, {
    "name" : "STRENGTH_SHIFT",
    "type" : "int",
    "comment" : "\n     * Options bits 15..12: The 4-bit strength value bit field is shifted by this value.\n     * It is the top used bit field in the options. (No need to mask after shifting.)\n     ",
    "links" : [ ]
  }, {
    "name" : "STRENGTH_MASK",
    "type" : "int",
    "comment" : " Strength options bit mask before shifting. ",
    "links" : [ ]
  }, {
    "name" : "MAX_VAR_SPACE",
    "type" : "int",
    "comment" : " maxVariable values ",
    "links" : [ ]
  }, {
    "name" : "MAX_VAR_PUNCT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_VAR_SYMBOL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_VAR_CURRENCY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "options",
    "type" : "int",
    "comment" : " CHECK_FCD etc. ",
    "links" : [ ]
  }, {
    "name" : "variableTop",
    "type" : "long",
    "comment" : " Variable-top primary weight. ",
    "links" : [ ]
  }, {
    "name" : "reorderTable",
    "type" : "byte[]",
    "comment" : "\n     * 256-byte table for reordering permutation of primary lead bytes; null if no reordering.\n     * A 0 entry at a non-zero index means that the primary lead byte is \"split\"\n     * (there are different offsets for primaries that share that lead byte)\n     * and the reordering offset must be determined via the reorderRanges.\n     ",
    "links" : [ ]
  }, {
    "name" : "minHighNoReorder",
    "type" : "long",
    "comment" : " Limit of last reordered range. 0 if no reordering or no split bytes. ",
    "links" : [ ]
  }, {
    "name" : "reorderRanges",
    "type" : "long[]",
    "comment" : "\n     * Primary-weight ranges for script reordering,\n     * to be used by reorder(p) for split-reordered primary lead bytes.\n     *\n     * <p>Each entry is a (limit, offset) pair.\n     * The upper 16 bits of the entry are the upper 16 bits of the\n     * exclusive primary limit of a range.\n     * Primaries between the previous limit and this one have their lead bytes\n     * modified by the signed offset (-0xff..+0xff) stored in the lower 16 bits.\n     *\n     * <p>CollationData.makeReorderRanges() writes a full list where the first range\n     * (at least for terminators and separators) has a 0 offset.\n     * The last range has a non-zero offset.\n     * minHighNoReorder is set to the limit of that last range.\n     *\n     * <p>In the settings object, the initial ranges before the first split lead byte\n     * are omitted for efficiency; they are handled by reorder(p) via the reorderTable.\n     * If there are no split-reordered lead bytes, then no ranges are needed.\n     ",
    "links" : [ ]
  }, {
    "name" : "reorderCodes",
    "type" : "int[]",
    "comment" : " Array of reorder codes; ignored if length == 0. ",
    "links" : [ ]
  }, {
    "name" : "EMPTY_INT_ARRAY",
    "type" : "int[]",
    "comment" : " Reorder codes from the public setter API must be cloned.",
    "links" : [ ]
  }, {
    "name" : "fastLatinOptions",
    "type" : "int",
    "comment" : " Options for CollationFastLatin. Negative if disabled. ",
    "links" : [ ]
  }, {
    "name" : "fastLatinPrimaries",
    "type" : "char[]",
    "comment" : " mutable contents",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public CollationSettings clone()",
    "returnType" : "CollationSettings",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void resetReordering()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void aliasReordering(CollationData data, int[] codesAndRanges, int codesLength, byte[] table)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setReordering(CollationData data, int[] codes)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setReorderArrays(int[] codes, int[] ranges, int rangesStart, int rangesLength, byte[] table)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setReorderRanges(int[] ranges, int rangesStart, int rangesLength)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void copyReorderingFrom(CollationSettings other)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasReordering()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean reorderTableHasSplitBytes(byte[] table)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long reorder(long p)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private long reorderEx(long p)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setStrength(int value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setStrengthDefault(int defaultOptions)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getStrength(int options)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getStrength()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFlag(int bit, boolean value)",
    "returnType" : "void",
    "comment" : " Sets the options bit for an on/off attribute. ",
    "links" : [ ]
  }, {
    "name" : "public void setFlagDefault(int bit, int defaultOptions)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean getFlag(int bit)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCaseFirst(int value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setCaseFirstDefault(int defaultOptions)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCaseFirst()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAlternateHandlingShifted(boolean value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAlternateHandlingDefault(int defaultOptions)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean getAlternateHandling()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMaxVariable(int value, int defaultOptions)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaxVariable()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean isTertiaryWithCaseBits(int options)",
    "returnType" : "boolean",
    "comment" : "\n     * Include case bits in the tertiary level if caseLevel=off and caseFirst!=off.\n     ",
    "links" : [ ]
  }, {
    "name" : " static int getTertiaryMask(int options)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean sortsTertiaryUpperCaseFirst(int options)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean dontCheckFCD()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean hasBackwardSecondary()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isNumeric()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public CollationSettings clone()", "public boolean equals(Object other)", "public int hashCode()", "public void resetReordering()", " void aliasReordering(CollationData data, int[] codesAndRanges, int codesLength, byte[] table)", "public void setReordering(CollationData data, int[] codes)", "private void setReorderArrays(int[] codes, int[] ranges, int rangesStart, int rangesLength, byte[] table)", "private void setReorderRanges(int[] ranges, int rangesStart, int rangesLength)", "public void copyReorderingFrom(CollationSettings other)", "public boolean hasReordering()", "private static boolean reorderTableHasSplitBytes(byte[] table)", "public long reorder(long p)", "private long reorderEx(long p)", "public void setStrength(int value)", "public void setStrengthDefault(int defaultOptions)", " static int getStrength(int options)", "public int getStrength()", "public void setFlag(int bit, boolean value)", "public void setFlagDefault(int bit, int defaultOptions)", "public boolean getFlag(int bit)", "public void setCaseFirst(int value)", "public void setCaseFirstDefault(int defaultOptions)", "public int getCaseFirst()", "public void setAlternateHandlingShifted(boolean value)", "public void setAlternateHandlingDefault(int defaultOptions)", "public boolean getAlternateHandling()", "public void setMaxVariable(int value, int defaultOptions)", "public int getMaxVariable()", " static boolean isTertiaryWithCaseBits(int options)", " static int getTertiaryMask(int options)", " static boolean sortsTertiaryUpperCaseFirst(int options)", "public boolean dontCheckFCD()", " boolean hasBackwardSecondary()", "public boolean isNumeric()" ],
  "variableNames" : [ "CHECK_FCD", "NUMERIC", "SHIFTED", "ALTERNATE_MASK", "MAX_VARIABLE_SHIFT", "MAX_VARIABLE_MASK", "UPPER_FIRST", "CASE_FIRST", "CASE_FIRST_AND_UPPER_MASK", "CASE_LEVEL", "BACKWARD_SECONDARY", "STRENGTH_SHIFT", "STRENGTH_MASK", "MAX_VAR_SPACE", "MAX_VAR_PUNCT", "MAX_VAR_SYMBOL", "MAX_VAR_CURRENCY", "options", "variableTop", "reorderTable", "minHighNoReorder", "reorderRanges", "reorderCodes", "EMPTY_INT_ARRAY", "fastLatinOptions", "fastLatinPrimaries" ]
}