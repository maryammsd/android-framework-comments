{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/MediaStore.java",
  "packageName" : "android.provider",
  "className" : "Files",
  "comment" : "\n     * Media provider table containing an index of all files in the media storage,\n     * including non-media files.  This should be used by applications that work with\n     * non-media file types (text, HTML, PDF, etc) as well as applications that need to\n     * work with multiple media file types in a single query.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TABLE",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "EXTERNAL_CONTENT_URI",
    "type" : "Uri",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Uri getContentUri(String volumeName)",
    "returnType" : "Uri",
    "comment" : "\n         * Get the content:// style URI for the files table on the\n         * given volume.\n         *\n         * @param volumeName the name of the volume to get the URI for\n         * @return the URI to the files table on the given volume\n         ",
    "links" : [ ]
  }, {
    "name" : "public static final Uri getContentUri(String volumeName, long rowId)",
    "returnType" : "Uri",
    "comment" : "\n         * Get the content:// style URI for a single row in the files table on the\n         * given volume.\n         *\n         * @param volumeName the name of the volume to get the URI for\n         * @param rowId the file to get the URI for\n         * @return the URI to the files table on the given volume\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri getMtpObjectsUri(@NonNull String volumeName)",
    "returnType" : "Uri",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public static final Uri getMtpObjectsUri(@NonNull String volumeName, long fileId)",
    "returnType" : "Uri",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public static final Uri getMtpReferencesUri(@NonNull String volumeName, long fileId)",
    "returnType" : "Uri",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public static final Uri getDirectoryUri(String volumeName)",
    "returnType" : "Uri",
    "comment" : "\n         * Used to trigger special logic for directories.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static final Uri getContentUriForPath(String path)",
    "returnType" : "Uri",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Uri getContentUri(String volumeName)", "public static final Uri getContentUri(String volumeName, long rowId)", "public static Uri getMtpObjectsUri(@NonNull String volumeName)", "public static final Uri getMtpObjectsUri(@NonNull String volumeName, long fileId)", "public static final Uri getMtpReferencesUri(@NonNull String volumeName, long fileId)", "public static final Uri getDirectoryUri(String volumeName)", "public static final Uri getContentUriForPath(String path)" ],
  "variableNames" : [ "TABLE", "EXTERNAL_CONTENT_URI" ]
}