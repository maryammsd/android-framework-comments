{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/SipDelegateImsConfiguration.java",
  "packageName" : "android.telephony.ims",
  "className" : "SipDelegateImsConfiguration",
  "comment" : "\n * @hide\n * @removed Use {@link SipDelegateConfiguration} instead.\n ",
  "links" : [ "android.telephony.ims.SipDelegateConfiguration" ],
  "variables" : [ {
    "name" : "IPTYPE_IPV4",
    "type" : "String",
    "comment" : "\n     * IPV4 Address type.\n     * <p>\n     * Used as a potential value for {@link #KEY_SIP_CONFIG_IPTYPE_STRING}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IPTYPE_STRING" ]
  }, {
    "name" : "IPTYPE_IPV6",
    "type" : "String",
    "comment" : "\n     * IPV6 Address type.\n     * <p>\n     * Used as a potential value for {@link #KEY_SIP_CONFIG_IPTYPE_STRING}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IPTYPE_STRING" ]
  }, {
    "name" : "SIP_TRANSPORT_UDP",
    "type" : "String",
    "comment" : "\n     * The SIP transport uses UDP.\n     * <p>\n     * Used as a potential value for {@link #KEY_SIP_CONFIG_TRANSPORT_TYPE_STRING}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_TRANSPORT_TYPE_STRING" ]
  }, {
    "name" : "SIP_TRANSPORT_TCP",
    "type" : "String",
    "comment" : "\n     * The SIP transport uses TCP.\n     * <p>\n     * Used as a potential value for {@link #KEY_SIP_CONFIG_TRANSPORT_TYPE_STRING}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_TRANSPORT_TYPE_STRING" ]
  }, {
    "name" : "KEY_SIP_CONFIG_IS_COMPACT_FORM_ENABLED_BOOL",
    "type" : "String",
    "comment" : "\n     * Flag specifying if SIP compact form is enabled\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_IS_KEEPALIVE_ENABLED_BOOL",
    "type" : "String",
    "comment" : "\n     * Flag specifying if SIP keepalives are enabled\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_MAX_PAYLOAD_SIZE_ON_UDP_INT",
    "type" : "String",
    "comment" : "\n     * Maximum SIP payload to be sent on UDP. If the SIP message payload is greater than max udp\n     * payload size, then TCP must be used\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_TRANSPORT_TYPE_STRING",
    "type" : "String",
    "comment" : "\n     * Transport protocol used for SIP signaling.\n     * Available options are: {@link #SIP_TRANSPORT_UDP }, {@link #SIP_TRANSPORT_TCP }\n     ",
    "links" : [ "#SIP_TRANSPORT_UDP", "#SIP_TRANSPORT_TCP" ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_PUBLIC_USER_ID_STRING",
    "type" : "String",
    "comment" : "\n     * IMS public user identifier string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_PRIVATE_USER_ID_STRING",
    "type" : "String",
    "comment" : "\n     * IMS private user identifier string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_HOME_DOMAIN_STRING",
    "type" : "String",
    "comment" : "\n     * IMS home domain string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_IMEI_STRING",
    "type" : "String",
    "comment" : "\n     * IMEI string. Application can include the Instance-ID feature tag \" +sip.instance\" in the\n     * Contact header with a value of the device IMEI in the form \"urn:gsma:imei:<device IMEI>\".\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_IPTYPE_STRING",
    "type" : "String",
    "comment" : "\n     * IP address type for SIP signaling.\n     * Available options are: {@link #IPTYPE_IPV6}, {@link #IPTYPE_IPV4}\n     ",
    "links" : [ "#IPTYPE_IPV6", "#IPTYPE_IPV4" ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_DEFAULT_IPADDRESS_STRING",
    "type" : "String",
    "comment" : "\n     * Local IPaddress used for SIP signaling.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_DEFAULT_PORT_INT",
    "type" : "String",
    "comment" : "\n     * Local port used for sending SIP traffic\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_SERVER_DEFAULT_IPADDRESS_STRING",
    "type" : "String",
    "comment" : "\n     * SIP server / PCSCF default ip address\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_SERVER_DEFAULT_PORT_INT",
    "type" : "String",
    "comment" : "\n     * SIP server / PCSCF port used for sending SIP traffic\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_IS_NAT_ENABLED_BOOL",
    "type" : "String",
    "comment" : "\n     * Flag specifying if Network Address Translation is enabled and UE is behind a NAT.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_PUBLIC_IPADDRESS_WITH_NAT_STRING",
    "type" : "String",
    "comment" : "\n     * UE's public IPaddress when UE is behind a NAT.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_NAT_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_NAT_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_PUBLIC_PORT_WITH_NAT_INT",
    "type" : "String",
    "comment" : "\n     * UE's public SIP port when UE is behind a NAT.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_NAT_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_NAT_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_IS_GRUU_ENABLED_BOOL",
    "type" : "String",
    "comment" : "\n     * Flag specifying if Globally routable user-agent uri (GRUU) is enabled as per TS 23.808\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_PUBLIC_GRUU_STRING",
    "type" : "String",
    "comment" : "\n     * UE's Globally routable user-agent uri if this feature is enabled.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_GRUU_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_GRUU_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL",
    "type" : "String",
    "comment" : "\n     * Flag specifying if SIP over IPSec is enabled.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_IPSEC_CLIENT_PORT_INT",
    "type" : "String",
    "comment" : "\n     * UE's SIP port used to send traffic when IPSec is enabled.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_IPSEC_SERVER_PORT_INT",
    "type" : "String",
    "comment" : "\n     * UE's SIP port used to receive traffic when IPSec is enabled.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_UE_IPSEC_OLD_CLIENT_PORT_INT",
    "type" : "String",
    "comment" : "\n     * UE's SIP port used for the previous IPsec security association if IPSec is enabled.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_SERVER_IPSEC_CLIENT_PORT_INT",
    "type" : "String",
    "comment" : "\n     * Port number used by the SIP server to send SIP traffic when IPSec is enabled.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_SERVER_IPSEC_SERVER_PORT_INT",
    "type" : "String",
    "comment" : "\n     * Port number used by the SIP server to receive incoming SIP traffic when IPSec is enabled.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_SERVER_IPSEC_OLD_CLIENT_PORT_INT",
    "type" : "String",
    "comment" : "\n     * Port number used by the SIP server to send SIP traffic on the previous IPSec security\n     * association when IPSec is enabled.\n     * <p>\n     * This key will not exist if {@link #KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL} is {@code false}.\n     ",
    "links" : [ "#KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL" ]
  }, {
    "name" : "KEY_SIP_CONFIG_AUTHENTICATION_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * SIP Authentication header string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_AUTHENTICATION_NONCE_STRING",
    "type" : "String",
    "comment" : "\n     * SIP Authentication nonce string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_SERVICE_ROUTE_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * SIP service route header string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_SECURITY_VERIFY_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * SIP security verify header string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_PATH_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * SIP Path header string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_USER_AGENT_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * The SIP User-Agent header value used by the IMS stack during IMS registration.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_URI_USER_PART_STRING",
    "type" : "String",
    "comment" : "\n     * SIP User part string in contact header\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_P_ACCESS_NETWORK_INFO_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * SIP P-access-network-info header string\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_P_LAST_ACCESS_NETWORK_INFO_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * The SIP P-last-access-network-info header value, populated for networks that require this\n     * information to be provided in outgoing SIP messages.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_CELLULAR_NETWORK_INFO_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * The Cellular-Network-Info header value (See 3GPP 24.229, section 7.2.15), populated for\n     * networks that require this information to be provided as part of outgoing SIP messages.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIP_CONFIG_P_ASSOCIATED_URI_HEADER_STRING",
    "type" : "String",
    "comment" : "\n     * SIP P-associated-uri header string\n     ",
    "links" : [ ]
  }, {
    "name" : "mVersion",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBundle",
    "type" : "PersistableBundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SipDelegateImsConfiguration>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean containsKey(@NonNull String key)",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if this configuration object has a an entry for the key specified,\n     * {@code false} if it does not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getString(@NonNull String key)",
    "returnType" : "String",
    "comment" : "\n     * @return the string value associated with a given key or {@code null} if it doesn't exist.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInt(@NonNull String key, int defaultValue)",
    "returnType" : "int",
    "comment" : "\n     * @return the integer value associated with a given key if it exists or the supplied default\n     * value if it does not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getBoolean(@NonNull String key, boolean defaultValue)",
    "returnType" : "boolean",
    "comment" : "\n     * @return the boolean value associated with a given key or the supplied default value if the\n     * value doesn't exist in the bundle.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PersistableBundle copyBundle()",
    "returnType" : "PersistableBundle",
    "comment" : "\n     * @return a shallow copy of the full configuration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getVersion()",
    "returnType" : "long",
    "comment" : "\n     * An integer representing the version number of this SipDelegateImsConfiguration.\n     * {@link SipMessage}s that are created using this configuration will also have a this\n     * version number associated with them, which will allow the IMS service to validate that the\n     * {@link SipMessage} was using the latest configuration during creation and not a stale\n     * configuration due to race conditions between the configuration being updated and the RCS\n     * application not receiving the updated configuration before generating a new message.\n     * <p>\n     * The version number should be a positive number that starts at 0 and increments sequentially\n     * as new {@link SipDelegateImsConfiguration} instances are created to update the IMS\n     * configuration state.\n     *\n     * @return the version number associated with this {@link SipDelegateImsConfiguration}.\n     ",
    "links" : [ "android.telephony.ims.SipMessage", "android.telephony.ims.SipDelegateImsConfiguration" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SipDelegateConfiguration toNewConfig()",
    "returnType" : "SipDelegateConfiguration",
    "comment" : "\n     * Temporary helper to transition from old form of config to new form.\n     * @return new config\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private InetSocketAddress getSocketAddr(String ipAddr, int port)",
    "returnType" : "InetSocketAddress",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean containsKey(@NonNull String key)", "public String getString(@NonNull String key)", "public int getInt(@NonNull String key, int defaultValue)", "public boolean getBoolean(@NonNull String key, boolean defaultValue)", "public PersistableBundle copyBundle()", "public long getVersion()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public SipDelegateConfiguration toNewConfig()", "private InetSocketAddress getSocketAddr(String ipAddr, int port)" ],
  "variableNames" : [ "IPTYPE_IPV4", "IPTYPE_IPV6", "SIP_TRANSPORT_UDP", "SIP_TRANSPORT_TCP", "KEY_SIP_CONFIG_IS_COMPACT_FORM_ENABLED_BOOL", "KEY_SIP_CONFIG_IS_KEEPALIVE_ENABLED_BOOL", "KEY_SIP_CONFIG_MAX_PAYLOAD_SIZE_ON_UDP_INT", "KEY_SIP_CONFIG_TRANSPORT_TYPE_STRING", "KEY_SIP_CONFIG_UE_PUBLIC_USER_ID_STRING", "KEY_SIP_CONFIG_UE_PRIVATE_USER_ID_STRING", "KEY_SIP_CONFIG_HOME_DOMAIN_STRING", "KEY_SIP_CONFIG_IMEI_STRING", "KEY_SIP_CONFIG_IPTYPE_STRING", "KEY_SIP_CONFIG_UE_DEFAULT_IPADDRESS_STRING", "KEY_SIP_CONFIG_UE_DEFAULT_PORT_INT", "KEY_SIP_CONFIG_SERVER_DEFAULT_IPADDRESS_STRING", "KEY_SIP_CONFIG_SERVER_DEFAULT_PORT_INT", "KEY_SIP_CONFIG_IS_NAT_ENABLED_BOOL", "KEY_SIP_CONFIG_UE_PUBLIC_IPADDRESS_WITH_NAT_STRING", "KEY_SIP_CONFIG_UE_PUBLIC_PORT_WITH_NAT_INT", "KEY_SIP_CONFIG_IS_GRUU_ENABLED_BOOL", "KEY_SIP_CONFIG_UE_PUBLIC_GRUU_STRING", "KEY_SIP_CONFIG_IS_IPSEC_ENABLED_BOOL", "KEY_SIP_CONFIG_UE_IPSEC_CLIENT_PORT_INT", "KEY_SIP_CONFIG_UE_IPSEC_SERVER_PORT_INT", "KEY_SIP_CONFIG_UE_IPSEC_OLD_CLIENT_PORT_INT", "KEY_SIP_CONFIG_SERVER_IPSEC_CLIENT_PORT_INT", "KEY_SIP_CONFIG_SERVER_IPSEC_SERVER_PORT_INT", "KEY_SIP_CONFIG_SERVER_IPSEC_OLD_CLIENT_PORT_INT", "KEY_SIP_CONFIG_AUTHENTICATION_HEADER_STRING", "KEY_SIP_CONFIG_AUTHENTICATION_NONCE_STRING", "KEY_SIP_CONFIG_SERVICE_ROUTE_HEADER_STRING", "KEY_SIP_CONFIG_SECURITY_VERIFY_HEADER_STRING", "KEY_SIP_CONFIG_PATH_HEADER_STRING", "KEY_SIP_CONFIG_USER_AGENT_HEADER_STRING", "KEY_SIP_CONFIG_URI_USER_PART_STRING", "KEY_SIP_CONFIG_P_ACCESS_NETWORK_INFO_HEADER_STRING", "KEY_SIP_CONFIG_P_LAST_ACCESS_NETWORK_INFO_HEADER_STRING", "KEY_SIP_CONFIG_CELLULAR_NETWORK_INFO_HEADER_STRING", "KEY_SIP_CONFIG_P_ASSOCIATED_URI_HEADER_STRING", "mVersion", "mBundle", "CREATOR" ]
}