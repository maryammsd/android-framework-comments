{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/TtmlRenderer.java",
  "packageName" : "android.media",
  "className" : "TtmlUtils",
  "comment" : "\n * A class which provides utillity methods for TTML parsing.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG_TT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_HEAD",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_BODY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_DIV",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_P",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_SPAN",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_BR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_STYLE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_STYLING",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_LAYOUT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_REGION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_METADATA",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_SMPTE_IMAGE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_SMPTE_DATA",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG_SMPTE_INFORMATION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PCDATA",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTR_BEGIN",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTR_DURATION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTR_END",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INVALID_TIMESTAMP",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CLOCK_TIME",
    "type" : "Pattern",
    "comment" : "\n     * Time expression RE according to the spec:\n     * http://www.w3.org/TR/ttaf1-dfxp/#timing-value-timeExpression\n     ",
    "links" : [ ]
  }, {
    "name" : "OFFSET_TIME",
    "type" : "Pattern",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static long parseTimeExpression(String time, int frameRate, int subframeRate, int tickRate) throws NumberFormatException",
    "returnType" : "long",
    "comment" : "\n     * Parses the given time expression and returns a timestamp in millisecond.\n     * <p>\n     * For the format of the time expression, please refer <a href=\n     * \"http://www.w3.org/TR/ttaf1-dfxp/#timing-value-timeExpression\">timeExpression</a>\n     *\n     * @param time A string which includes time expression.\n     * @param frameRate the framerate of the stream.\n     * @param subframeRate the sub-framerate of the stream\n     * @param tickRate the tick rate of the stream.\n     * @return the parsed timestamp in micro-second.\n     * @throws NumberFormatException if the given string does not match to the\n     *             format.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String applyDefaultSpacePolicy(String in)",
    "returnType" : "String",
    "comment" : "\n     * Applies <a href\n     * src=\"http://www.w3.org/TR/ttaf1-dfxp/#content-attribute-space\">the\n     * default space policy</a> to the given string.\n     *\n     * @param in A string to apply the policy.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String applySpacePolicy(String in, boolean treatLfAsSpace)",
    "returnType" : "String",
    "comment" : "\n     * Applies the space policy to the given string. This applies <a href\n     * src=\"http://www.w3.org/TR/ttaf1-dfxp/#content-attribute-space\">the\n     * default space policy</a> with linefeed-treatment as treat-as-space\n     * or preserve.\n     *\n     * @param in A string to apply the policy.\n     * @param treatLfAsSpace Whether convert line feeds to spaces or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String extractText(TtmlNode root, long startUs, long endUs)",
    "returnType" : "String",
    "comment" : "\n     * Returns the timed text for the given time period.\n     *\n     * @param root The root node of the TTML document.\n     * @param startUs The start time of the time period in microsecond.\n     * @param endUs The end time of the time period in microsecond.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void extractText(TtmlNode node, long startUs, long endUs, StringBuilder out, boolean inPTag)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String extractTtmlFragment(TtmlNode root, long startUs, long endUs)",
    "returnType" : "String",
    "comment" : "\n     * Returns a TTML fragment string for the given time period.\n     *\n     * @param root The root node of the TTML document.\n     * @param startUs The start time of the time period in microsecond.\n     * @param endUs The end time of the time period in microsecond.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void extractTtmlFragment(TtmlNode node, long startUs, long endUs, StringBuilder out)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static long parseTimeExpression(String time, int frameRate, int subframeRate, int tickRate) throws NumberFormatException", "public static String applyDefaultSpacePolicy(String in)", "public static String applySpacePolicy(String in, boolean treatLfAsSpace)", "public static String extractText(TtmlNode root, long startUs, long endUs)", "private static void extractText(TtmlNode node, long startUs, long endUs, StringBuilder out, boolean inPTag)", "public static String extractTtmlFragment(TtmlNode root, long startUs, long endUs)", "private static void extractTtmlFragment(TtmlNode node, long startUs, long endUs, StringBuilder out)" ],
  "variableNames" : [ "TAG_TT", "TAG_HEAD", "TAG_BODY", "TAG_DIV", "TAG_P", "TAG_SPAN", "TAG_BR", "TAG_STYLE", "TAG_STYLING", "TAG_LAYOUT", "TAG_REGION", "TAG_METADATA", "TAG_SMPTE_IMAGE", "TAG_SMPTE_DATA", "TAG_SMPTE_INFORMATION", "PCDATA", "ATTR_BEGIN", "ATTR_DURATION", "ATTR_END", "INVALID_TIMESTAMP", "CLOCK_TIME", "OFFSET_TIME" ]
}