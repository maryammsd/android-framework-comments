{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/accessibilityservice/AccessibilityService.java",
  "packageName" : "android.accessibilityservice",
  "className" : "IAccessibilityServiceClientWrapper",
  "comment" : "\n     * Implements the internal {@link IAccessibilityServiceClient} interface to convert\n     * incoming calls to it back to calls on an {@link AccessibilityService}.\n     *\n     * @hide\n     ",
  "variables" : [ {
    "name" : "DO_INIT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_INTERRUPT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_ACCESSIBILITY_EVENT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_GESTURE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_CLEAR_ACCESSIBILITY_CACHE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_KEY_EVENT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_MAGNIFICATION_CHANGED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_SOFT_KEYBOARD_SHOW_MODE_CHANGED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_GESTURE_COMPLETE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_FINGERPRINT_ACTIVE_CHANGED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_FINGERPRINT_GESTURE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ACCESSIBILITY_BUTTON_CLICKED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ACCESSIBILITY_BUTTON_AVAILABILITY_CHANGED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DO_ON_SYSTEM_ACTIONS_CHANGED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCaller",
    "type" : "HandlerCaller",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "Callbacks",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void init(IAccessibilityServiceConnection connection, int connectionId, IBinder windowToken)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onInterrupt()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAccessibilityEvent(AccessibilityEvent event, boolean serviceWantsEvent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onGesture(AccessibilityGestureEvent gestureInfo)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearAccessibilityCache()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onKeyEvent(KeyEvent event, int sequence)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onMagnificationChanged(int displayId, @NonNull Region region, float scale, float centerX, float centerY)",
    "returnType" : "void",
    "comment" : " Magnification changed callbacks for different displays ",
    "links" : [ ]
  }, {
    "name" : "public void onSoftKeyboardShowModeChanged(int showMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onPerformGestureResult(int sequence, boolean successfully)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onFingerprintCapturingGesturesChanged(boolean active)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onFingerprintGesture(int gesture)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAccessibilityButtonClicked(int displayId)",
    "returnType" : "void",
    "comment" : " Accessibility button clicked callbacks for different displays ",
    "links" : [ ]
  }, {
    "name" : "public void onAccessibilityButtonAvailabilityChanged(boolean available)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSystemActionsChanged()",
    "returnType" : "void",
    "comment" : " This is called when the system action list is changed. ",
    "links" : [ ]
  }, {
    "name" : "public void executeMessage(Message message)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "DO_INIT", "DO_ON_INTERRUPT", "DO_ON_ACCESSIBILITY_EVENT", "DO_ON_GESTURE", "DO_CLEAR_ACCESSIBILITY_CACHE", "DO_ON_KEY_EVENT", "DO_ON_MAGNIFICATION_CHANGED", "DO_ON_SOFT_KEYBOARD_SHOW_MODE_CHANGED", "DO_GESTURE_COMPLETE", "DO_ON_FINGERPRINT_ACTIVE_CHANGED", "DO_ON_FINGERPRINT_GESTURE", "DO_ACCESSIBILITY_BUTTON_CLICKED", "DO_ACCESSIBILITY_BUTTON_AVAILABILITY_CHANGED", "DO_ON_SYSTEM_ACTIONS_CHANGED", "mCaller", "mCallback", "mConnectionId" ],
  "methodNames" : [ "public void init(IAccessibilityServiceConnection connection, int connectionId, IBinder windowToken)", "public void onInterrupt()", "public void onAccessibilityEvent(AccessibilityEvent event, boolean serviceWantsEvent)", "public void onGesture(AccessibilityGestureEvent gestureInfo)", "public void clearAccessibilityCache()", "public void onKeyEvent(KeyEvent event, int sequence)", "public void onMagnificationChanged(int displayId, @NonNull Region region, float scale, float centerX, float centerY)", "public void onSoftKeyboardShowModeChanged(int showMode)", "public void onPerformGestureResult(int sequence, boolean successfully)", "public void onFingerprintCapturingGesturesChanged(boolean active)", "public void onFingerprintGesture(int gesture)", "public void onAccessibilityButtonClicked(int displayId)", "public void onAccessibilityButtonAvailabilityChanged(boolean available)", "public void onSystemActionsChanged()", "public void executeMessage(Message message)" ]
}