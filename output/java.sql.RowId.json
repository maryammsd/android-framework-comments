{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/sql/RowId.java",
  "packageName" : "java.sql",
  "className" : "RowId",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * Compares this <code>RowId</code> to the specified object. The result is\n     * <code>true</code> if and only if the argument is not null and is a RowId\n     * object that represents the same ROWID as  this object.\n     * <p>\n     * It is important\n     * to consider both the origin and the valid lifetime of a <code>RowId</code>\n     * when comparing it to another <code>RowId</code>. If both are valid, and\n     * both are from the same table on the same data source, then if they are equal\n     * they identify\n     * the same row; if one or more is no longer guaranteed to be valid, or if\n     * they originate from different data sources, or different tables on the\n     * same data source, they  may be equal but still\n     * not identify the same row.\n     *\n     * @param obj the <code>Object</code> to compare this <code>RowId</code> object\n     *     against.\n     * @return true if the <code>RowId</code>s are equal; false otherwise\n     * @since 1.6\n     ",
    "links" : [ ]
  }, {
    "name" : " byte[] getBytes()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns an array of bytes representing the value of the SQL <code>ROWID</code>\n     * designated by this <code>java.sql.RowId</code> object.\n     *\n     * @return an array of bytes, whose length is determined by the driver supplying\n     *     the connection, representing the value of the ROWID designated by this\n     *     java.sql.RowId object.\n     ",
    "links" : [ ]
  }, {
    "name" : " String toString()",
    "returnType" : "String",
    "comment" : "\n      * Returns a String representing the value of the SQL ROWID designated by this\n      * <code>java.sql.RowId</code> object.\n      * <p>\n      *Like <code>java.sql.Date.toString()</code>\n      * returns the contents of its DATE as the <code>String</code> \"2004-03-17\"\n      * rather than as  DATE literal in SQL (which would have been the <code>String</code>\n      * DATE \"2004-03-17\"), toString()\n      * returns the contents of its ROWID in a form specific to the driver supplying\n      * the connection, and possibly not as a <code>ROWID</code> literal.\n      *\n      * @return a String whose format is determined by the driver supplying the\n      *     connection, representing the value of the <code>ROWID</code> designated\n      *     by this <code>java.sql.RowId</code>  object.\n      ",
    "links" : [ ]
  }, {
    "name" : " int hashCode()",
    "returnType" : "int",
    "comment" : "\n      * Returns a hash code value of this <code>RowId</code> object.\n      *\n      * @return a hash code for the <code>RowId</code>\n      ",
    "links" : [ ]
  } ],
  "methodNames" : [ " boolean equals(Object obj)", " byte[] getBytes()", " String toString()", " int hashCode()" ],
  "variableNames" : [ ]
}