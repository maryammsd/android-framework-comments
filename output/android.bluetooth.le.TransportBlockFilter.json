{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/le/TransportBlockFilter.java",
  "packageName" : "android.bluetooth.le",
  "className" : "TransportBlockFilter",
  "comment" : "\n * Wrapper for filter input for Transport Discovery Data Transport Blocks. This class represents the\n * filter for a Transport Block from a Transport Discovery Data advertisement data.\n *\n * @see ScanFilter\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mOrgId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTdsFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTdsFlagsMask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransportData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransportDataMask",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWifiNanHash",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WIFI_NAN_HASH_LENGTH_BYTES",
    "type" : "int",
    "comment" : "\n     * Length of a Wi-FI NAN hash in bytes/\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TransportBlockFilter>",
    "comment" : "\n     * Creator for {@link TransportBlockFilter} so that we can create it from {@link Parcel}.\n     *\n     * @hide\n     ",
    "links" : [ "android.bluetooth.le.TransportBlockFilter", "android.os.Parcel" ]
  } ],
  "methods" : [ {
    "name" : "public int getOrgId()",
    "returnType" : "int",
    "comment" : "\n     * Get Organization ID assigned by Bluetooth SIG. For more details refer to Transport Discovery\n     * Service Organization IDs in <a\n     * href=\"https://www.bluetooth.com/specifications/assigned-numbers/\">Bluetooth Assigned\n     * Numbers</a>\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTdsFlags()",
    "returnType" : "int",
    "comment" : "\n     * Get Transport Discovery Service (TDS) flags to filter Transport Discovery Blocks\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTdsFlagsMask()",
    "returnType" : "int",
    "comment" : "\n     * Get masks for filtering Transport Discovery Service (TDS) flags in Transport Discovery Blocks\n     *\n     * @return a bitmask to select which bits in {@code tdsFlag} to match. 0 means no bit in\n     *     tdsFlags will be used for matching\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getTransportData()",
    "returnType" : "byte[]",
    "comment" : "\n     * Get data to filter Transport Discovery Blocks.\n     *\n     * <p>Cannot be used when {@code orgId} is {@link OrganizationId\n     * #WIFI_ALLIANCE_NEIGHBOR_AWARENESS_NETWORKING}\n     *\n     * @return Data to filter Transport Discovery Blocks, null if not used\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothAssignedNumbers.OrganizationId#WIFI_ALLIANCE_NEIGHBOR_AWARENESS_NETWORKING" ]
  }, {
    "name" : "public byte[] getTransportDataMask()",
    "returnType" : "byte[]",
    "comment" : "\n     * Get masks for filtering data in Transport Discovery Blocks.\n     *\n     * <p>Cannot be used when {@code orgId} is {@link\n     * OrganizationId#WIFI_ALLIANCE_NEIGHBOR_AWARENESS_NETWORKING}\n     *\n     * @return a byte array with matching length to {@code transportData} to select which bit to use\n     *     in filter, null is not used\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothAssignedNumbers.OrganizationId#WIFI_ALLIANCE_NEIGHBOR_AWARENESS_NETWORKING" ]
  }, {
    "name" : "public byte[] getWifiNanHash()",
    "returnType" : "byte[]",
    "comment" : "\n     * Get hashed bloom filter value to filter {@link\n     * OrganizationId#WIFI_ALLIANCE_NEIGHBOR_AWARENESS_NETWORKING} services in Transport Discovery\n     * Blocks.\n     *\n     * <p>Can only be used when {@code orgId} is {@link\n     * OrganizationId#WIFI_ALLIANCE_NEIGHBOR_AWARENESS_NETWORKING}.\n     *\n     * @return 8 octets Wi-Fi NAN defined bloom filter hash, null if not used\n     * @hide\n     ",
    "links" : [ "android.bluetooth.BluetoothAssignedNumbers.OrganizationId#WIFI_ALLIANCE_NEIGHBOR_AWARENESS_NETWORKING" ]
  }, {
    "name" : " boolean matches(ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if a scan result matches this transport block filter.\n     *\n     * @param scanResult scan result to match\n     * @return true if matches\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " Get a human-readable string for this object. ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getOrgId()", "public int getTdsFlags()", "public int getTdsFlagsMask()", "public byte[] getTransportData()", "public byte[] getTransportDataMask()", "public byte[] getWifiNanHash()", " boolean matches(ScanResult scanResult)", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public int hashCode()", "public boolean equals(@Nullable Object obj)" ],
  "variableNames" : [ "mOrgId", "mTdsFlags", "mTdsFlagsMask", "mTransportData", "mTransportDataMask", "mWifiNanHash", "WIFI_NAN_HASH_LENGTH_BYTES", "CREATOR" ]
}