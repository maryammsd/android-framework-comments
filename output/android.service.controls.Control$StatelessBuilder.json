{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/controls/Control.java",
  "packageName" : "android.service.controls",
  "className" : "StatelessBuilder",
  "comment" : "\n     * Builder class for {@link Control}.\n     *\n     * This class facilitates the creation of {@link Control} with no state. Must be used to\n     * provide controls for {@link ControlsProviderService#createPublisherForAllAvailable} and\n     * {@link ControlsProviderService#createPublisherForSuggested}.\n     *\n     * It provides the following defaults for non-optional parameters:\n     * <ul>\n     *     <li> Device type: {@link DeviceTypes#TYPE_UNKNOWN}\n     *     <li> Title: {@code \"\"}\n     *     <li> Subtitle: {@code \"\"}\n     * </ul>\n     * This fixes the values relating to state of the {@link Control} as required by\n     * {@link ControlsProviderService#createPublisherForAllAvailable}:\n     * <ul>\n     *     <li> Status: {@link #STATUS_UNKNOWN}\n     *     <li> Control template: {@link ControlTemplate#getNoTemplateObject}\n     *     <li> Status text: {@code \"\"}\n     *     <li> Auth Required: {@code true}\n     * </ul>\n     ",
  "links" : [ "android.service.controls.ControlsProviderService#createPublisherForSuggested", "android.service.controls.DeviceTypes#TYPE_UNKNOWN", "android.service.controls.templates.ControlTemplate#getNoTemplateObject", "android.service.controls.Control", "android.service.controls.ControlsProviderService#createPublisherForAllAvailable", "#STATUS_UNKNOWN" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControlId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubtitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStructure",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mZone",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomColor",
    "type" : "ColorStateList",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public StatelessBuilder setControlId(@NonNull String controlId)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * @param controlId the identifier for the {@link Control}\n         * @return {@code this}\n         ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public StatelessBuilder setDeviceType(@DeviceTypes.DeviceType int deviceType)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * @param deviceType type of device represented by this {@link Control}, used to\n         *                   determine the default icon and color\n         * @return {@code this}\n         ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public StatelessBuilder setTitle(@NonNull CharSequence title)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * @param title the user facing name of the {@link Control}\n         * @return {@code this}\n         ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public StatelessBuilder setSubtitle(@NonNull CharSequence subtitle)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * @param subtitle additional information about the {@link Control}, to appear underneath\n         *                 the title\n         * @return {@code this}\n         ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public StatelessBuilder setStructure(@Nullable CharSequence structure)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * Optional top-level group to help define the {@link Control}'s location, visible to the\n         * user. If not present, the application name will be used as the top-level group. A\n         * structure contains zones which contains controls.\n         *\n         * @param structure name of the structure containing the control\n         * @return {@code this}\n         ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public StatelessBuilder setZone(@Nullable CharSequence zone)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * Optional group name to help define the {@link Control}'s location within a structure,\n         * visible to the user. A structure contains zones which contains controls.\n         *\n         * @param zone name of the zone containing the control\n         * @return {@code this}\n         ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public StatelessBuilder setAppIntent(@NonNull PendingIntent appIntent)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * @param appIntent a {@link PendingIntent} linking to an Activity for the {@link Control}\n         * @return {@code this}\n         ",
    "links" : [ "android.app.PendingIntent", "android.service.controls.Control" ]
  }, {
    "name" : "public StatelessBuilder setCustomIcon(@Nullable Icon customIcon)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * Optional icon to be shown with the {@link Control}. It is highly recommended\n         * to let the system default the icon unless the default icon is not suitable.\n         *\n         * @param customIcon icon to show\n         * @return {@code this}\n         ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public StatelessBuilder setCustomColor(@Nullable ColorStateList customColor)",
    "returnType" : "StatelessBuilder",
    "comment" : "\n         * Optional color to be shown with the {@link Control}. It is highly recommended\n         * to let the system default the color unless the default is not suitable for the\n         * application.\n         *\n         * @param customColor background color to use\n         * @return {@code this}\n         ",
    "links" : [ "android.service.controls.Control" ]
  }, {
    "name" : "public Control build()",
    "returnType" : "Control",
    "comment" : "\n         * @return a valid {@link Control}\n         ",
    "links" : [ "android.service.controls.Control" ]
  } ],
  "methodNames" : [ "public StatelessBuilder setControlId(@NonNull String controlId)", "public StatelessBuilder setDeviceType(@DeviceTypes.DeviceType int deviceType)", "public StatelessBuilder setTitle(@NonNull CharSequence title)", "public StatelessBuilder setSubtitle(@NonNull CharSequence subtitle)", "public StatelessBuilder setStructure(@Nullable CharSequence structure)", "public StatelessBuilder setZone(@Nullable CharSequence zone)", "public StatelessBuilder setAppIntent(@NonNull PendingIntent appIntent)", "public StatelessBuilder setCustomIcon(@Nullable Icon customIcon)", "public StatelessBuilder setCustomColor(@Nullable ColorStateList customColor)", "public Control build()" ],
  "variableNames" : [ "TAG", "mControlId", "mDeviceType", "mTitle", "mSubtitle", "mStructure", "mZone", "mAppIntent", "mCustomIcon", "mCustomColor" ]
}