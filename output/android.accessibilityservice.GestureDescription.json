{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/accessibilityservice/GestureDescription.java",
  "packageName" : "android.accessibilityservice",
  "className" : "GestureDescription",
  "comment" : "\n * Accessibility services with the\n * {@link android.R.styleable#AccessibilityService_canPerformGestures} property can dispatch\n * gestures. This class describes those gestures. Gestures are made up of one or more strokes.\n * Gestures are immutable once built and will be dispatched to the specified display.\n * <p>\n * Spatial dimensions throughout are in screen pixels. Time is measured in milliseconds.\n ",
  "variables" : [ {
    "name" : "MAX_STROKE_COUNT",
    "type" : "int",
    "comment" : " Gestures may contain no more than this many strokes ",
    "links" : [ ]
  }, {
    "name" : "MAX_GESTURE_DURATION_MS",
    "type" : "long",
    "comment" : "\n     * Upper bound on total gesture duration. Nearly all gestures will be much shorter.\n     ",
    "links" : [ ]
  }, {
    "name" : "mStrokes",
    "type" : "List<StrokeDescription>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTempPos",
    "type" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int getMaxStrokeCount()",
    "returnType" : "int",
    "comment" : "\n     * Get the upper limit for the number of strokes a gesture may contain.\n     *\n     * @return The maximum number of strokes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long getMaxGestureDuration()",
    "returnType" : "long",
    "comment" : "\n     * Get the upper limit on a gesture's duration.\n     *\n     * @return The maximum duration in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getStrokeCount()",
    "returnType" : "int",
    "comment" : "\n     * Get the number of stroke in the gesture.\n     *\n     * @return the number of strokes in this gesture\n     ",
    "links" : [ ]
  }, {
    "name" : "public StrokeDescription getStroke(@IntRange(from = 0) int index)",
    "returnType" : "StrokeDescription",
    "comment" : "\n     * Read a stroke from the gesture\n     *\n     * @param index the index of the stroke\n     *\n     * @return A description of the stroke.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDisplayId()",
    "returnType" : "int",
    "comment" : "\n     * Returns the ID of the display this gesture is sent on, for use with\n     * {@link android.hardware.display.DisplayManager#getDisplay(int)}.\n     *\n     * @return The logical display id.\n     ",
    "links" : [ "android.hardware.display.DisplayManager#getDisplay(int)" ]
  }, {
    "name" : "private long getNextKeyPointAtLeast(long offset)",
    "returnType" : "long",
    "comment" : "\n     * Return the smallest key point (where a path starts or ends) that is at least a specified\n     * offset\n     * @param offset the minimum start time\n     * @return The next key time that is at least the offset or -1 if one can't be found\n     ",
    "links" : [ ]
  }, {
    "name" : "private int getPointsForTime(long time, TouchPoint[] touchPoints)",
    "returnType" : "int",
    "comment" : "\n     * Get the points that correspond to a particular moment in time.\n     * @param time The time of interest\n     * @param touchPoints An array to hold the current touch points. Must be preallocated to at\n     * least the number of paths in the gesture to prevent going out of bounds\n     * @return The number of points found, and thus the number of elements set in each array\n     ",
    "links" : [ ]
  }, {
    "name" : "private static long getTotalDuration(List<StrokeDescription> paths)",
    "returnType" : "long",
    "comment" : " counts against total duration",
    "links" : [ ]
  } ],
  "variableNames" : [ "MAX_STROKE_COUNT", "MAX_GESTURE_DURATION_MS", "mStrokes", "mTempPos", "mDisplayId" ],
  "methodNames" : [ "public static int getMaxStrokeCount()", "public static long getMaxGestureDuration()", "public int getStrokeCount()", "public StrokeDescription getStroke(@IntRange(from = 0) int index)", "public int getDisplayId()", "private long getNextKeyPointAtLeast(long offset)", "private int getPointsForTime(long time, TouchPoint[] touchPoints)", "private static long getTotalDuration(List<StrokeDescription> paths)" ]
}