{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/VolumeInfo.java",
  "packageName" : "android.media",
  "className" : "VolumeInfo",
  "comment" : "\n * @hide\n * A class to represent volume information.\n * Can be used to represent volume associated with a stream type or {@link AudioVolumeGroup}.\n * Volume index is optional when used to represent a category of volume.\n * Volume ranges are supported too, making the representation of volume changes agnostic regarding\n * the range of values that are supported (e.g. can be used to map BT A2DP absolute volume range to\n * internal range).\n ",
  "links" : [ "android.media.audiopolicy.AudioVolumeGroup" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUsesStreamType",
    "type" : "boolean",
    "comment" : " false implies AudioVolumeGroup is used",
    "links" : [ ]
  }, {
    "name" : "mHasMuteCommand",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsMuted",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinVolIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxVolIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolGroup",
    "type" : "AudioVolumeGroup",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStreamType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sService",
    "type" : "IAudioService",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sDefaultVolumeInfo",
    "type" : "VolumeInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INDEX_NOT_SET",
    "type" : "int",
    "comment" : "\n     * A value used to express no volume index has been set.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<VolumeInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean hasStreamType()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether this instance has a stream type associated to it.\n     * Note this method returning true implies {@link #hasVolumeGroup()} returns false.\n     * (e.g. {@link AudioManager#STREAM_MUSIC}).\n     * @return true if it has stream type information\n     ",
    "links" : [ "android.media.AudioManager#STREAM_MUSIC", "#hasVolumeGroup()" ]
  }, {
    "name" : "public int getStreamType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the associated stream type, or will throw if {@link #hasStreamType()} returned false.\n     * @return a stream type value, see AudioManager.STREAM_*\n     * @throws IllegalStateException when called on a VolumeInfo not configured for\n     *      stream types.\n     ",
    "links" : [ "#hasStreamType()" ]
  }, {
    "name" : "public boolean hasVolumeGroup()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether this instance has a {@link AudioVolumeGroup} associated to it.\n     * Note this method returning true implies {@link #hasStreamType()} returns false.\n     * @return true if it has volume group information\n     ",
    "links" : [ "android.media.audiopolicy.AudioVolumeGroup", "#hasStreamType()" ]
  }, {
    "name" : "public AudioVolumeGroup getVolumeGroup()",
    "returnType" : "AudioVolumeGroup",
    "comment" : "\n     * Returns the associated volume group, or will throw if {@link #hasVolumeGroup()} returned\n     * false.\n     * @return the volume group corresponding to this VolumeInfo\n     * @throws IllegalStateException when called on a VolumeInfo not configured for\n     * volume groups.\n     ",
    "links" : [ "#hasVolumeGroup()" ]
  }, {
    "name" : "public boolean hasMuteCommand()",
    "returnType" : "boolean",
    "comment" : "\n     * Return whether this instance is conveying a mute state\n     * @return true if the muted state was explicitly set for this instance\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMuted()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether this instance is conveying a mute state that was explicitly set\n     * by {@link Builder#setMuted(boolean)}, false otherwise\n     * @return true if the volume state is muted\n     ",
    "links" : [ "#setMuted(boolean)" ]
  }, {
    "name" : "public int getVolumeIndex()",
    "returnType" : "int",
    "comment" : "\n     * Returns the volume index.\n     * @return a volume index, or {@link #INDEX_NOT_SET} if no index was set, in which case this\n     *      instance is used to express a volume representation type (stream vs group) and\n     *      optionally its volume range\n     ",
    "links" : [ "#INDEX_NOT_SET" ]
  }, {
    "name" : "public int getMinVolumeIndex()",
    "returnType" : "int",
    "comment" : "\n     * Returns the minimum volume index.\n     * @return the minimum volume index, or {@link #INDEX_NOT_SET} if no minimum index was set.\n     ",
    "links" : [ "#INDEX_NOT_SET" ]
  }, {
    "name" : "public int getMaxVolumeIndex()",
    "returnType" : "int",
    "comment" : "\n     * Returns the maximum volume index.\n     * @return the maximum volume index, or {@link #INDEX_NOT_SET} if no maximum index was\n     *      set.\n     ",
    "links" : [ "#INDEX_NOT_SET" ]
  }, {
    "name" : "public static VolumeInfo getDefaultVolumeInfo()",
    "returnType" : "VolumeInfo",
    "comment" : "\n     * Returns the default info for the platform, typically initialized\n     * to STREAM_MUSIC with min/max initialized to the associated range\n     * @return the default VolumeInfo for the device\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : " Parcelable",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean hasStreamType()", "public int getStreamType()", "public boolean hasVolumeGroup()", "public AudioVolumeGroup getVolumeGroup()", "public boolean hasMuteCommand()", "public boolean isMuted()", "public int getVolumeIndex()", "public int getMinVolumeIndex()", "public int getMaxVolumeIndex()", "public static VolumeInfo getDefaultVolumeInfo()", "public int hashCode()", "public boolean equals(Object o)", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "TAG", "mUsesStreamType", "mHasMuteCommand", "mIsMuted", "mVolIndex", "mMinVolIndex", "mMaxVolIndex", "mVolGroup", "mStreamType", "sService", "sDefaultVolumeInfo", "INDEX_NOT_SET", "CREATOR" ]
}