{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/usb/UsbInterface.java",
  "packageName" : "android.hardware.usb",
  "className" : "UsbInterface",
  "comment" : "\n * A class representing an interface on a {@link UsbDevice}.\n * USB devices can have one or more interfaces, each one providing a different\n * piece of functionality, separate from the other interfaces.\n * An interface will have one or more {@link UsbEndpoint}s, which are the\n * channels by which the host transfers data with the device.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For more information about communicating with USB hardware, read the\n * <a href=\"{@docRoot}guide/topics/usb/index.html\">USB</a> developer guide.</p>\n * </div>\n ",
  "variables" : [ {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAlternateSetting",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClass",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubclass",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProtocol",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEndpoints",
    "type" : "Parcelable[]",
    "comment" : " All endpoints of this interface, only null during creation ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<UsbInterface>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : "\n     * Returns the interface's bInterfaceNumber field.\n     * This is an integer that along with the alternate setting uniquely identifies\n     * the interface on the device.\n     *\n     * @return the interface's ID\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAlternateSetting()",
    "returnType" : "int",
    "comment" : "\n     * Returns the interface's bAlternateSetting field.\n     * This is an integer that along with the ID uniquely identifies\n     * the interface on the device.\n     * {@link UsbDeviceConnection#setInterface} can be used to switch between\n     * two interfaces with the same ID but different alternate setting.\n     *\n     * @return the interface's alternate setting\n     ",
    "links" : [ "android.hardware.usb.UsbDeviceConnection#setInterface" ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the interface's name.\n     *\n     * @return the interface's name, or {@code null} if the property could not be read\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceClass()",
    "returnType" : "int",
    "comment" : "\n     * Returns the interface's class field.\n     * Some useful constants for USB classes can be found in {@link UsbConstants}\n     *\n     * @return the interface's class\n     ",
    "links" : [ "android.hardware.usb.UsbConstants" ]
  }, {
    "name" : "public int getInterfaceSubclass()",
    "returnType" : "int",
    "comment" : "\n     * Returns the interface's subclass field.\n     *\n     * @return the interface's subclass\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceProtocol()",
    "returnType" : "int",
    "comment" : "\n     * Returns the interface's protocol field.\n     *\n     * @return the interface's protocol\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEndpointCount()",
    "returnType" : "int",
    "comment" : "\n     * Returns the number of {@link android.hardware.usb.UsbEndpoint}s this interface contains.\n     *\n     * @return the number of endpoints\n     ",
    "links" : [ "android.hardware.usb.UsbEndpoint" ]
  }, {
    "name" : "public UsbEndpoint getEndpoint(int index)",
    "returnType" : "UsbEndpoint",
    "comment" : "\n     * Returns the {@link android.hardware.usb.UsbEndpoint} at the given index.\n     *\n     * @return the endpoint\n     ",
    "links" : [ "android.hardware.usb.UsbEndpoint" ]
  }, {
    "name" : "public void setEndpoints(Parcelable[] endpoints)",
    "returnType" : "void",
    "comment" : "\n     * Only used by UsbService implementation\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mId", "mAlternateSetting", "mName", "mClass", "mSubclass", "mProtocol", "mEndpoints", "CREATOR" ],
  "methodNames" : [ "public int getId()", "public int getAlternateSetting()", "public String getName()", "public int getInterfaceClass()", "public int getInterfaceSubclass()", "public int getInterfaceProtocol()", "public int getEndpointCount()", "public UsbEndpoint getEndpoint(int index)", "public void setEndpoints(Parcelable[] endpoints)", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ]
}