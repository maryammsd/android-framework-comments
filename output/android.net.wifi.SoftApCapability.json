{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/SoftApCapability.java",
  "packageName" : "android.net.wifi",
  "className" : "SoftApCapability",
  "comment" : "\n * A class representing capability of the SoftAp.\n * {@see WifiManager}\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMPTY_INT_ARRAY",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SOFTAP_FEATURE_ACS_OFFLOAD",
    "type" : "long",
    "comment" : "\n     * Support for automatic channel selection in driver (ACS).\n     * Driver will auto select best channel based on interference to optimize performance.\n     *\n     * flag when {@code R.bool.config_wifi_softap_acs_supported} is true.\n     *\n     * <p>\n     * Use {@link WifiManager.SoftApCallback#onInfoChanged(SoftApInfo)} and\n     * {@link SoftApInfo#getFrequency()} and {@link SoftApInfo#getBandwidth()} to get\n     * driver channel selection result.\n     ",
    "links" : [ "android.net.wifi.SoftApInfo#getFrequency()", "WifiManager.SoftApCallback#onInfoChanged(SoftApInfo)", "android.net.wifi.SoftApInfo#getBandwidth()" ]
  }, {
    "name" : "SOFTAP_FEATURE_CLIENT_FORCE_DISCONNECT",
    "type" : "long",
    "comment" : "\n     * Support for client force disconnect.\n     * flag when {@code R.bool.config_wifiSofapClientForceDisconnectSupported} is true\n     *\n     * <p>\n     * Several Soft AP client control features, e.g. specifying the maximum number of\n     * Soft AP clients, only work when this feature support is present.\n     * Check feature support before invoking\n     * {@link SoftApConfiguration.Builder#setMaxNumberOfClients(int)}\n     ",
    "links" : [ "SoftApConfiguration.Builder#setMaxNumberOfClients(int)" ]
  }, {
    "name" : "SOFTAP_FEATURE_WPA3_SAE",
    "type" : "long",
    "comment" : "\n     * Support for WPA3 Simultaneous Authentication of Equals (WPA3-SAE).\n     *\n     * flag when {@code config_wifi_softap_sae_supported} is true.\n     ",
    "links" : [ ]
  }, {
    "name" : "SOFTAP_FEATURE_MAC_ADDRESS_CUSTOMIZATION",
    "type" : "long",
    "comment" : "\n     * Support for MAC address customization.\n     * flag when {@code R.bool.config_wifiSoftapMacAddressCustomizationSupported} is true\n     *\n     * <p>\n     * Check feature support before invoking\n     * {@link SoftApConfiguration.Builder#setBssid(MacAddress)} or\n     * {@link SoftApConfiguration.Builder#setMacRandomizationSetting(int)} with\n     * {@link SoftApConfiguration#RANDOMIZATION_PERSISTENT}\n     ",
    "links" : [ "SoftApConfiguration.Builder#setBssid(MacAddress)", "SoftApConfiguration.Builder#setMacRandomizationSetting(int)", "android.net.wifi.SoftApConfiguration#RANDOMIZATION_PERSISTENT" ]
  }, {
    "name" : "SOFTAP_FEATURE_IEEE80211_AX",
    "type" : "long",
    "comment" : "\n     * Support for 802.11ax SAP.\n     * flag when {@code R.bool.config_wifiSoftapIeee80211axSupported} is true\n     *\n     * <p>\n     * Check feature support before invoking\n     * {@link SoftApConfiguration.Builder#setIeee80211axEnabled(boolean)}\n     ",
    "links" : [ "SoftApConfiguration.Builder#setIeee80211axEnabled(boolean)" ]
  }, {
    "name" : "SOFTAP_FEATURE_BAND_24G_SUPPORTED",
    "type" : "long",
    "comment" : "\n     * Support for 2.4G Band.\n     * flag when {@code R.bool.config_wifiSoftap24ghzSupported} is true\n     ",
    "links" : [ ]
  }, {
    "name" : "SOFTAP_FEATURE_BAND_5G_SUPPORTED",
    "type" : "long",
    "comment" : "\n     * Support for 5G Band.\n     * flag when {@code R.bool.config_wifiSoftap5ghzSupported} is true\n     ",
    "links" : [ ]
  }, {
    "name" : "SOFTAP_FEATURE_BAND_6G_SUPPORTED",
    "type" : "long",
    "comment" : "\n     * Support for 6G Band.\n     * flag when {@code R.bool.config_wifiSoftap6ghzSupported} is true\n     ",
    "links" : [ ]
  }, {
    "name" : "SOFTAP_FEATURE_BAND_60G_SUPPORTED",
    "type" : "long",
    "comment" : "\n     * Support for 60G Band.\n     * flag when {@code R.bool.config_wifiSoftap60ghzSupported} is true\n     ",
    "links" : [ ]
  }, {
    "name" : "SOFTAP_FEATURE_IEEE80211_BE",
    "type" : "long",
    "comment" : "\n     * Support for 802.11be SAP.\n     * flag when {@code R.bool.config_wifiSoftapIeee80211beSupported} is true\n     *\n     * <p>\n     * Use this flag with {@link #areFeaturesSupported(long)}\n     * to verify that 802.11be is supported before enabling it using\n     * {@link SoftApConfiguration.Builder#setIeee80211beEnabled(boolean)}\n     ",
    "links" : [ "#areFeaturesSupported(long)", "SoftApConfiguration.Builder#setIeee80211beEnabled(boolean)" ]
  }, {
    "name" : "SOFTAP_FEATURE_WPA3_OWE_TRANSITION",
    "type" : "long",
    "comment" : "\n     * Support for WPA3-Opportunistic Wireless Encryption (OWE) transition.\n     * flag when {@code R.bool.config_wifiSoftapOweTransitionSupported} is true.\n     ",
    "links" : [ ]
  }, {
    "name" : "SOFTAP_FEATURE_WPA3_OWE",
    "type" : "long",
    "comment" : "\n     * Support for WPA3-Opportunistic Wireless Encryption (OWE).\n     * flag when {@code R.bool.config_wifiSoftapOweSupported} is true.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSupportedFeatures",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaximumSupportedClientNumber",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedChannelListIn24g",
    "type" : "int[]",
    "comment" : "\n     * A list storing supported 2.4G channels.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSupportedChannelListIn5g",
    "type" : "int[]",
    "comment" : "\n     * A list storing supported 5G channels.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSupportedChannelListIn6g",
    "type" : "int[]",
    "comment" : "\n     * A list storing supported 6G channels.\n     ",
    "links" : [ ]
  }, {
    "name" : "mSupportedChannelListIn60g",
    "type" : "int[]",
    "comment" : "\n     * A list storing supported 60G channels.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCountryCodeFromDriver",
    "type" : "String",
    "comment" : "\n     * A base country code which is used when querying the supported channel list.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SoftApCapability>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setCountryCode(String countryCode)",
    "returnType" : "void",
    "comment" : "\n     * Set the country code which is used when querying the supported channel list.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getCountryCode()",
    "returnType" : "String",
    "comment" : "\n     * Get the country code which is used when querying the supported channel list.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxSupportedClients()",
    "returnType" : "int",
    "comment" : "\n     * Get the maximum supported client numbers which AP resides on.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMaxSupportedClients(int maxClient)",
    "returnType" : "void",
    "comment" : "\n     * Set the maximum supported client numbers which AP resides on.\n     *\n     * @param maxClient maximum supported client numbers for the softap.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean areFeaturesSupported(@HotspotFeatures long features)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true when all of the queried features are supported, otherwise false.\n     *\n     * @param features One or combination of {@code SOFTAP_FEATURE_}, for instance:\n     * {@link #SOFTAP_FEATURE_ACS_OFFLOAD}, {@link #SOFTAP_FEATURE_CLIENT_FORCE_DISCONNECT} or\n     * {@link #SOFTAP_FEATURE_WPA3_SAE}.\n     ",
    "links" : [ "#SOFTAP_FEATURE_CLIENT_FORCE_DISCONNECT", "#SOFTAP_FEATURE_ACS_OFFLOAD", "#SOFTAP_FEATURE_WPA3_SAE" ]
  }, {
    "name" : "public void setSupportedFeatures(boolean value, @HotspotFeatures long features)",
    "returnType" : "void",
    "comment" : "\n     * Set SoftAp Capabilities\n     * @param value Boolean to set value 0 or 1\n     * @param features @HotspotFeatures represents which feature to access\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean setSupportedChannelList(@BandType int band, @Nullable int[] supportedChannelList)",
    "returnType" : "boolean",
    "comment" : "\n     * Set supported channel list in target band type.\n     *\n     * @param band One of the following band types:\n     * {@link SoftApConfiguration#BAND_2GHZ}, {@link SoftApConfiguration#BAND_5GHZ},\n     * {@link SoftApConfiguration#BAND_6GHZ}, or {@link SoftApConfiguration#BAND_60GHZ}.\n     * @param supportedChannelList supported channel list in target band\n     * @return true if band and supportedChannelList are valid, otherwise false.\n     *\n     * @throws IllegalArgumentException when band type is invalid.\n     * @hide\n     ",
    "links" : [ "android.net.wifi.SoftApConfiguration#BAND_5GHZ", "android.net.wifi.SoftApConfiguration#BAND_6GHZ", "android.net.wifi.SoftApConfiguration#BAND_2GHZ", "android.net.wifi.SoftApConfiguration#BAND_60GHZ" ]
  }, {
    "name" : "public int[] getSupportedChannelList(@BandType int band)",
    "returnType" : "int[]",
    "comment" : "\n     * Returns a list of the supported channels in the given band.\n     * The result depends on the on the country code that has been set.\n     * Can be used to set the channel of the AP with the\n     * {@link SoftApConfiguration.Builder#setChannel(int, int)} API.\n     *\n     * @param band One of the following band types:\n     * {@link SoftApConfiguration#BAND_2GHZ}, {@link SoftApConfiguration#BAND_5GHZ},\n     * {@link SoftApConfiguration#BAND_6GHZ}, {@link SoftApConfiguration#BAND_60GHZ}.\n     * @return List of supported channels for the band. An empty list will be returned if the\n     * channels are obsolete. This happens when country code has changed but the channels\n     * are not updated from HAL when Wifi is disabled.\n     *\n     * @throws IllegalArgumentException when band type is invalid.\n     ",
    "links" : [ "android.net.wifi.SoftApConfiguration#BAND_5GHZ", "android.net.wifi.SoftApConfiguration#BAND_6GHZ", "SoftApConfiguration.Builder#setChannel(int", "android.net.wifi.SoftApConfiguration#BAND_2GHZ", "android.net.wifi.SoftApConfiguration#BAND_60GHZ" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setCountryCode(String countryCode)", "public String getCountryCode()", "public int getMaxSupportedClients()", "public void setMaxSupportedClients(int maxClient)", "public boolean areFeaturesSupported(@HotspotFeatures long features)", "public void setSupportedFeatures(boolean value, @HotspotFeatures long features)", "public boolean setSupportedChannelList(@BandType int band, @Nullable int[] supportedChannelList)", "public int[] getSupportedChannelList(@BandType int band)", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public boolean equals(@Nullable Object o)", "public int hashCode()" ],
  "variableNames" : [ "TAG", "EMPTY_INT_ARRAY", "SOFTAP_FEATURE_ACS_OFFLOAD", "SOFTAP_FEATURE_CLIENT_FORCE_DISCONNECT", "SOFTAP_FEATURE_WPA3_SAE", "SOFTAP_FEATURE_MAC_ADDRESS_CUSTOMIZATION", "SOFTAP_FEATURE_IEEE80211_AX", "SOFTAP_FEATURE_BAND_24G_SUPPORTED", "SOFTAP_FEATURE_BAND_5G_SUPPORTED", "SOFTAP_FEATURE_BAND_6G_SUPPORTED", "SOFTAP_FEATURE_BAND_60G_SUPPORTED", "SOFTAP_FEATURE_IEEE80211_BE", "SOFTAP_FEATURE_WPA3_OWE_TRANSITION", "SOFTAP_FEATURE_WPA3_OWE", "mSupportedFeatures", "mMaximumSupportedClientNumber", "mSupportedChannelListIn24g", "mSupportedChannelListIn5g", "mSupportedChannelListIn6g", "mSupportedChannelListIn60g", "mCountryCodeFromDriver", "CREATOR" ]
}