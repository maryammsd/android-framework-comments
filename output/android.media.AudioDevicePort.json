{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/AudioDevicePort.java",
  "packageName" : "android.media",
  "className" : "AudioDevicePort",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAddress",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncapsulationModes",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncapsulationMetadataTypes",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static AudioDevicePort createForTesting(int type, @NonNull String name, @NonNull String address)",
    "returnType" : "AudioDevicePort",
    "comment" : " down the stack.",
    "links" : [ ]
  }, {
    "name" : "public int type()",
    "returnType" : "int",
    "comment" : "\n     * Get the device type (e.g AudioManager.DEVICE_OUT_SPEAKER)\n     ",
    "links" : [ ]
  }, {
    "name" : "public String address()",
    "returnType" : "String",
    "comment" : "\n     * Get the device address. Address format varies with the device type.\n     * - USB devices ({@link AudioManager#DEVICE_OUT_USB_DEVICE},\n     * {@link AudioManager#DEVICE_IN_USB_DEVICE}) use an address composed of the ALSA card number\n     * and device number: \"card=2;device=1\"\n     * - Bluetooth devices ({@link AudioManager#DEVICE_OUT_BLUETOOTH_SCO},\n     * {@link AudioManager#DEVICE_OUT_BLUETOOTH_SCO},\n     * {@link AudioManager#DEVICE_OUT_BLUETOOTH_A2DP}),\n     * {@link AudioManager#DEVICE_OUT_BLE_HEADSET}, {@link AudioManager#DEVICE_OUT_BLE_SPEAKER})\n     * use the MAC address of the bluetooth device in the form \"00:11:22:AA:BB:CC\" as reported by\n     * {@link BluetoothDevice#getAddress()}.\n     * - Bluetooth LE broadcast group ({@link AudioManager#DEVICE_OUT_BLE_BROADCAST} use the group number.\n     * - Devices that do not have an address will indicate an empty string \"\".\n     ",
    "links" : [ "android.media.AudioManager#DEVICE_OUT_BLUETOOTH_SCO", "android.media.AudioManager#DEVICE_OUT_BLE_HEADSET", "android.media.AudioManager#DEVICE_OUT_USB_DEVICE", "android.media.AudioManager#DEVICE_OUT_BLE_SPEAKER", "android.media.AudioManager#DEVICE_OUT_BLE_BROADCAST", "#getAddress()", "android.media.AudioManager#DEVICE_IN_USB_DEVICE", "android.media.AudioManager#DEVICE_OUT_BLUETOOTH_A2DP" ]
  }, {
    "name" : "public int[] encapsulationModes()",
    "returnType" : "int[]",
    "comment" : "\n     * Get supported encapsulation modes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] encapsulationMetadataTypes()",
    "returnType" : "int[]",
    "comment" : "\n     * Get supported encapsulation metadata types.\n     ",
    "links" : [ ]
  }, {
    "name" : "public AudioDevicePortConfig buildConfig(int samplingRate, int channelMask, int format, AudioGainConfig gain)",
    "returnType" : "AudioDevicePortConfig",
    "comment" : "\n     * Build a specific configuration of this audio device port for use by methods\n     * like AudioManager.connectAudioPatch().\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static AudioDevicePort createForTesting(int type, @NonNull String name, @NonNull String address)", "public int type()", "public String address()", "public int[] encapsulationModes()", "public int[] encapsulationMetadataTypes()", "public AudioDevicePortConfig buildConfig(int samplingRate, int channelMask, int format, AudioGainConfig gain)", "public boolean equals(Object o)", "public String toString()" ],
  "variableNames" : [ "mType", "mAddress", "mEncapsulationModes", "mEncapsulationMetadataTypes" ]
}