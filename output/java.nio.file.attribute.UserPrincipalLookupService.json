{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/file/attribute/UserPrincipalLookupService.java",
  "packageName" : "java.nio.file.attribute",
  "className" : "UserPrincipalLookupService",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract UserPrincipal lookupPrincipalByName(String name) throws IOException",
    "returnType" : "UserPrincipal",
    "comment" : "\n     * Lookup a user principal by name.\n     *\n     * @param   name\n     *          the string representation of the user principal to lookup\n     *\n     * @return  a user principal\n     *\n     * @throws  UserPrincipalNotFoundException\n     *          the principal does not exist\n     * @throws  IOException\n     *          if an I/O error occurs\n     * @throws  SecurityException\n     *          In the case of the default provider, and a security manager is\n     *          installed, it checks\n     *          {@link RuntimePermission}{@code (\"lookupUserInformation\")}\n     ",
    "links" : [ "RuntimePermission" ]
  }, {
    "name" : "public abstract GroupPrincipal lookupPrincipalByGroupName(String group) throws IOException",
    "returnType" : "GroupPrincipal",
    "comment" : "\n     * Lookup a group principal by group name.\n     *\n     * <p> Where an implementation does not support any notion of group then\n     * this method always throws {@link UserPrincipalNotFoundException}. Where\n     * the namespace for user accounts and groups is the same, then this method\n     * is identical to invoking {@link #lookupPrincipalByName\n     * lookupPrincipalByName}.\n     *\n     * @param   group\n     *          the string representation of the group to lookup\n     *\n     * @return  a group principal\n     *\n     * @throws  UserPrincipalNotFoundException\n     *          the principal does not exist or is not a group\n     * @throws  IOException\n     *          if an I/O error occurs\n     * @throws  SecurityException\n     *          In the case of the default provider, and a security manager is\n     *          installed, it checks\n     *          {@link RuntimePermission}{@code (\"lookupUserInformation\")}\n     ",
    "links" : [ "java.nio.file.attribute.UserPrincipalNotFoundException", "#lookupPrincipalByNamelookupPrincipalByName", "RuntimePermission" ]
  } ],
  "methodNames" : [ "public abstract UserPrincipal lookupPrincipalByName(String name) throws IOException", "public abstract GroupPrincipal lookupPrincipalByGroupName(String group) throws IOException" ],
  "variableNames" : [ ]
}