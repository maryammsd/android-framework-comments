{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/autofill/FillCallback.java",
  "packageName" : "android.service.autofill",
  "className" : "FillCallback",
  "comment" : "\n * <p><code>FillCallback</code> handles autofill requests from the {@link AutofillService} into\n * the {@link Activity} being autofilled.\n *\n * <p>To learn about using Autofill services in your app, read\n * <a href=\"/guide/topics/text/autofill-services\">Build autofill services</a>.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "IFillCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCalled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onSuccess(@Nullable FillResponse response)",
    "returnType" : "void",
    "comment" : "\n     * Notifies the Android System that a fill request\n     * ({@link AutofillService#onFillRequest(FillRequest, android.os.CancellationSignal,\n     * FillCallback)}) was successfully fulfilled by the service.\n     *\n     * <p>This method should always be called, even if the service doesn't have the heuristics to\n     * fulfill the request (in which case it should be called with {@code null}).\n     *\n     * <p>See the main {@link AutofillService} documentation for more details and examples.\n     *\n     * @param response autofill information for that activity, or {@code null} when the service\n     * cannot autofill the activity.\n     *\n     * @throws IllegalStateException if this method or {@link #onFailure(CharSequence)} was already\n     * called.\n     ",
    "links" : [ "#onFailure(CharSequence)", "android.service.autofill.AutofillService#onFillRequest(FillRequest", "android.service.autofill.AutofillService" ]
  }, {
    "name" : "public void onFailure(@Nullable CharSequence message)",
    "returnType" : "void",
    "comment" : "\n     * Notifies the Android System that a fill request (\n     * {@link AutofillService#onFillRequest(FillRequest, android.os.CancellationSignal,\n     * FillCallback)}) could not be fulfilled by the service (for example, because the user data was\n     * not available yet), so the request could be retried later.\n     *\n     * <p><b>Note: </b>this method should not be used when the service didn't have the heursitics to\n     * fulfill the request; in this case, the service should call {@link #onSuccess(FillResponse)\n     * onSuccess(null)} instead.\n     *\n     * <p><b>Note: </b>prior to {@link android.os.Build.VERSION_CODES#Q}, this\n     * method was not working as intended and the service should always call\n     * {@link #onSuccess(FillResponse) onSuccess(null)} instead.\n     *\n     * <p><b>Note: </b>for apps targeting {@link android.os.Build.VERSION_CODES#Q} or higher, this\n     * method just logs the message on {@code logcat}; for apps targetting older SDKs, it also\n     * displays the message to user using a {@link android.widget.Toast}. Generally speaking, you\n     * should not display an error to the user if the request failed, unless the request had the\n     * {@link FillRequest#FLAG_MANUAL_REQUEST} flag.\n     *\n     * @param message error message. <b>Note: </b> this message should <b>not</b> contain PII\n     * (Personally Identifiable Information, such as username or email address).\n     *\n     * @throws IllegalStateException if this method or {@link #onSuccess(FillResponse)} was already\n     * called.\n     ",
    "links" : [ "android.service.autofill.FillRequest#FLAG_MANUAL_REQUEST", "android.os.Build.VERSION_CODES#Q", "android.widget.Toast", "android.service.autofill.AutofillService#onFillRequest(FillRequest", "#onSuccess(FillResponse)" ]
  }, {
    "name" : "private void assertNotCalled()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mCallback", "mRequestId", "mCalled" ],
  "methodNames" : [ "public void onSuccess(@Nullable FillResponse response)", "public void onFailure(@Nullable CharSequence message)", "private void assertNotCalled()" ]
}