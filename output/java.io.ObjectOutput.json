{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/io/ObjectOutput.java",
  "packageName" : "java.io",
  "className" : "ObjectOutput",
  "comment" : "\n * ObjectOutput extends the DataOutput interface to include writing of objects.\n * DataOutput includes methods for output of primitive types, ObjectOutput\n * extends that interface to include objects, arrays, and Strings.\n *\n * @author  unascribed\n * @see java.io.InputStream\n * @see java.io.ObjectOutputStream\n * @see java.io.ObjectInputStream\n * @since   1.1\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void writeObject(Object obj) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Write an object to the underlying storage or stream.  The\n     * class that implements this interface defines how the object is\n     * written.\n     *\n     * @param obj the object to be written\n     * @exception IOException Any of the usual Input/Output related exceptions.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void write(int b) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes a byte. This method will block until the byte is actually\n     * written.\n     * @param b the byte\n     * @exception IOException If an I/O error has occurred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void write(byte[] b) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes an array of bytes. This method will block until the bytes\n     * are actually written.\n     * @param b the data to be written\n     * @exception IOException If an I/O error has occurred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void write(byte[] b, int off, int len) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes a sub array of bytes.\n     * @param b the data to be written\n     * @param off       the start offset in the data\n     * @param len       the number of bytes that are written\n     * @exception IOException If an I/O error has occurred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void flush() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Flushes the stream. This will write any buffered\n     * output bytes.\n     * @exception IOException If an I/O error has occurred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Closes the stream. This method must be called\n     * to release any resources associated with the\n     * stream.\n     * @exception IOException If an I/O error has occurred.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void writeObject(Object obj) throws IOException", "public void write(int b) throws IOException", "public void write(byte[] b) throws IOException", "public void write(byte[] b, int off, int len) throws IOException", "public void flush() throws IOException", "public void close() throws IOException" ],
  "variableNames" : [ ]
}