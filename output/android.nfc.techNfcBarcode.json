{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/nfc/tech/NfcBarcode.java",
  "packageName" : "android.nfc.tech",
  "className" : "NfcBarcode",
  "comment" : "\n * Provides access to tags containing just a barcode.\n *\n * <p>Acquire an {@link NfcBarcode} object using {@link #get}.\n *\n ",
  "variables" : [ {
    "name" : "TYPE_KOVIO",
    "type" : "int",
    "comment" : " Kovio Tags ",
    "links" : [ ]
  }, {
    "name" : "TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_BARCODE_TYPE",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static NfcBarcode get(Tag tag)",
    "returnType" : "NfcBarcode",
    "comment" : "\n     * Get an instance of {@link NfcBarcode} for the given tag.\n     *\n     * <p>Returns null if {@link NfcBarcode} was not enumerated in {@link Tag#getTechList}.\n     *\n     * <p>Does not cause any RF activity and does not block.\n     *\n     * @param tag an NfcBarcode compatible tag\n     * @return NfcBarcode object\n     ",
    "links" : [ "NfcBarcode", "NfcBarcode", "Tag#getTechList" ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the NFC Barcode tag type.\n     *\n     * <p>Currently only one of {@link #TYPE_KOVIO} or {@link #TYPE_UNKNOWN}.\n     *\n     * <p>Does not cause any RF activity and does not block.\n     *\n     * @return the NFC Barcode tag type\n     ",
    "links" : [ "#TYPE_KOVIO", "#TYPE_UNKNOWN" ]
  }, {
    "name" : "public byte[] getBarcode()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the barcode of an NfcBarcode tag.\n     *\n     * <p> Tags of {@link #TYPE_KOVIO} return 16 bytes:\n     *     <ul>\n     *     <p> The first byte is 0x80 ORd with a manufacturer ID, corresponding\n     *       to ISO/IEC 7816-6.\n     *     <p> The second byte describes the payload data format. Defined data\n     *       format types include the following:<ul>\n     *       <li>0x00: Reserved for manufacturer assignment</li>\n     *       <li>0x01: 96-bit URL with \"http://www.\" prefix</li>\n     *       <li>0x02: 96-bit URL with \"https://www.\" prefix</li>\n     *       <li>0x03: 96-bit URL with \"http://\" prefix</li>\n     *       <li>0x04: 96-bit URL with \"https://\" prefix</li>\n     *       <li>0x05: 96-bit GS1 EPC</li>\n     *       <li>0x06-0xFF: reserved</li>\n     *       </ul>\n     *     <p>The following 12 bytes are payload:<ul>\n     *       <li> In case of a URL payload, the payload is encoded in US-ASCII,\n     *            following the limitations defined in RFC3987.\n     *            {@see <a href=\"http://www.ietf.org/rfc/rfc3987.txt\">RFC 3987</a>}</li>\n     *       <li> In case of GS1 EPC data, see <a href=\"http://www.gs1.org/gsmp/kc/epcglobal/tds/\">\n     *            GS1 Electronic Product Code (EPC) Tag Data Standard (TDS)</a> for more details.\n     *       </li>\n     *     </ul>\n     *     <p>The last 2 bytes comprise the CRC.\n     *     </ul>\n     * <p>Does not cause any RF activity and does not block.\n     *\n     * @return a byte array containing the barcode\n     * @see <a href=\"http://www.thinfilm.no/docs/thinfilm-nfc-barcode-datasheet.pdf\">\n     *      Thinfilm NFC Barcode tag specification (previously Kovio NFC Barcode)</a>\n     * @see <a href=\"http://www.thinfilm.no/docs/thinfilm-nfc-barcode-data-format.pdf\">\n     *      Thinfilm NFC Barcode data format (previously Kovio NFC Barcode)</a>\n     ",
    "links" : [ "#TYPE_KOVIO" ]
  } ],
  "variableNames" : [ "TYPE_KOVIO", "TYPE_UNKNOWN", "EXTRA_BARCODE_TYPE", "mType" ],
  "methodNames" : [ "public static NfcBarcode get(Tag tag)", "public int getType()", "public byte[] getBarcode()" ]
}