{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/CameraInjectionSession.java",
  "packageName" : "android.hardware.camera2",
  "className" : "CameraInjectionSession",
  "comment" : "\n * <p>The CameraInjectionSession class is what determines when injection is active.</p>\n *\n * <p>Your application must declare the\n * {@link android.Manifest.permission#CAMERA_INJECT_EXTERNAL_CAMERA CAMERA} permission in its\n * manifest in order to use camera injection function.</p>\n *\n * @hide\n * @see CameraManager#injectCamera\n * @see android.Manifest.permission#CAMERA_INJECT_EXTERNAL_CAMERA\n ",
  "links" : [ "android.Manifest.permission#CAMERA_INJECT_EXTERNAL_CAMERA" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void close()",
    "returnType" : "void",
    "comment" : "\n     * Close the external camera and switch back to the internal camera.\n     *\n     * <p>Call the method when app streaming stops or the app exits, it switch back to the internal\n     * camera.</p>\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void close()" ],
  "variableNames" : [ ]
}