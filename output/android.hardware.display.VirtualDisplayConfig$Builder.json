{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/display/VirtualDisplayConfig.java",
  "packageName" : "android.hardware.display",
  "className" : "Builder",
  "comment" : "\n     * A builder for {@link VirtualDisplayConfig}.\n     ",
  "links" : [ "android.hardware.display.VirtualDisplayConfig" ],
  "variables" : [ {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDensityDpi",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSurface",
    "type" : "Surface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUniqueId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayIdToMirror",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowManagerMirroringEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayCategories",
    "type" : "ArraySet<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestedRefreshRate",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsHomeSupported",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setFlags(@VirtualDisplayFlag int flags)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the virtual display flags, a combination of\n         * {@link DisplayManager#VIRTUAL_DISPLAY_FLAG_PUBLIC},\n         * {@link DisplayManager#VIRTUAL_DISPLAY_FLAG_PRESENTATION},\n         * {@link DisplayManager#VIRTUAL_DISPLAY_FLAG_SECURE},\n         * {@link DisplayManager#VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY},\n         * or {@link DisplayManager#VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR}.\n         ",
    "links" : [ "android.hardware.display.DisplayManager#VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY", "android.hardware.display.DisplayManager#VIRTUAL_DISPLAY_FLAG_PUBLIC", "android.hardware.display.DisplayManager#VIRTUAL_DISPLAY_FLAG_SECURE", "android.hardware.display.DisplayManager#VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR", "android.hardware.display.DisplayManager#VIRTUAL_DISPLAY_FLAG_PRESENTATION" ]
  }, {
    "name" : "public Builder setSurface(@Nullable Surface surface)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the surface to which the content of the virtual display should be rendered.\n         *\n         * <p>The surface can also be set after the display creation using\n         * {@link VirtualDisplay#setSurface(Surface)}.\n         ",
    "links" : [ "android.hardware.display.VirtualDisplay#setSurface(Surface)" ]
  }, {
    "name" : "public Builder setUniqueId(@Nullable String uniqueId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the unique identifier for the display.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDisplayIdToMirror(int displayIdToMirror)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the id of the display that the virtual display should mirror.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setWindowManagerMirroringEnabled(boolean windowManagerMirroringEnabled)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether WindowManager is responsible for mirroring content to this VirtualDisplay.\n         * If unset or false, DisplayManager should record contents instead.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDisplayCategories(@NonNull Set<String> displayCategories)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the display categories.\n         *\n         * <p>The categories of the display indicate the type of activities allowed to run on that\n         * display. Activities can declare a display category using\n         * {@link android.content.pm.ActivityInfo#requiredDisplayCategory}.\n         ",
    "links" : [ "android.content.pm.ActivityInfo#requiredDisplayCategory" ]
  }, {
    "name" : "public Builder addDisplayCategory(@NonNull String displayCategory)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a display category.\n         *\n         * @see #setDisplayCategories\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setRequestedRefreshRate(@FloatRange(from = 0.0f) float requestedRefreshRate)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the refresh rate of a virtual display in frames per second.\n         *\n         * <p>For best results, specify a divisor of the physical refresh rate, e.g., 30 or 60 on\n         * a 120hz display. If an arbitrary refresh rate is specified, the rate will be rounded up\n         * to a divisor of the physical display. If unset or zero, the virtual display will be\n         * refreshed at the physical display refresh rate.\n         *\n         * @see Display#getRefreshRate()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHomeSupported(boolean isHomeSupported)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether this display supports showing home activities and wallpaper.\n         *\n         * <p>If set to {@code true}, then the home activity relevant to this display will be\n         * automatically launched upon the display creation. If unset or set to {@code false}, the\n         * display will not host any activities upon creation.</p>\n         *\n         * <p>Note: setting to {@code true} requires the display to be trusted and to not mirror\n         * content of other displays. If the display is not trusted, or if it mirrors content of\n         * other displays, this property is ignored.</p>\n         *\n         * @param isHomeSupported whether home activities are supported on the display\n         * @see DisplayManager#VIRTUAL_DISPLAY_FLAG_TRUSTED\n         * @see DisplayManager#VIRTUAL_DISPLAY_FLAG_AUTO_MIRROR\n         * @see DisplayManager#VIRTUAL_DISPLAY_FLAG_OWN_CONTENT_ONLY\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public VirtualDisplayConfig build()",
    "returnType" : "VirtualDisplayConfig",
    "comment" : "\n         * Builds the {@link VirtualDisplayConfig} instance.\n         ",
    "links" : [ "android.hardware.display.VirtualDisplayConfig" ]
  } ],
  "methodNames" : [ "public Builder setFlags(@VirtualDisplayFlag int flags)", "public Builder setSurface(@Nullable Surface surface)", "public Builder setUniqueId(@Nullable String uniqueId)", "public Builder setDisplayIdToMirror(int displayIdToMirror)", "public Builder setWindowManagerMirroringEnabled(boolean windowManagerMirroringEnabled)", "public Builder setDisplayCategories(@NonNull Set<String> displayCategories)", "public Builder addDisplayCategory(@NonNull String displayCategory)", "public Builder setRequestedRefreshRate(@FloatRange(from = 0.0f) float requestedRefreshRate)", "public Builder setHomeSupported(boolean isHomeSupported)", "public VirtualDisplayConfig build()" ],
  "variableNames" : [ "mName", "mWidth", "mHeight", "mDensityDpi", "mFlags", "mSurface", "mUniqueId", "mDisplayIdToMirror", "mWindowManagerMirroringEnabled", "mDisplayCategories", "mRequestedRefreshRate", "mIsHomeSupported" ]
}