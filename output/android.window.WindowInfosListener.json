{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/WindowInfosListener.java",
  "packageName" : "android.window",
  "className" : "WindowInfosListener",
  "comment" : "\n * Listener for getting {@link InputWindowHandle} updates from SurfaceFlinger.\n * @hide\n ",
  "links" : [ "android.view.InputWindowHandle" ],
  "variables" : [ {
    "name" : "mNativeListener",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onWindowInfosChanged(InputWindowHandle[] windowHandles, DisplayInfo[] displayInfos)",
    "returnType" : "void",
    "comment" : "\n     * Called when WindowInfos in SurfaceFlinger have changed.\n     * @param windowHandles Reverse Z ordered array of window information that was on screen,\n     *                      where the first value is the topmost window.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Pair<InputWindowHandle[], DisplayInfo[]> register()",
    "returnType" : "Pair<InputWindowHandle[], DisplayInfo[]>",
    "comment" : "\n     * Register the WindowInfosListener.\n     *\n     * Registering WindowInfosListeners should only be done within system_server and shell.\n     *\n     * @return The cached values for InputWindowHandles and DisplayInfos. This is the last updated\n     * value that was sent from SurfaceFlinger to this particular process. If there was nothing\n     * registered previously, then the data can be empty.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void unregister()",
    "returnType" : "void",
    "comment" : "\n     * Unregisters the WindowInfosListener.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static native long nativeCreate(WindowInfosListener thiz)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native Pair<InputWindowHandle[], DisplayInfo[]> nativeRegister(long ptr)",
    "returnType" : "Pair<InputWindowHandle[], DisplayInfo[]>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeUnregister(long ptr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nativeGetFinalizer()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onWindowInfosChanged(InputWindowHandle[] windowHandles, DisplayInfo[] displayInfos)", "public Pair<InputWindowHandle[], DisplayInfo[]> register()", "public void unregister()", "private static native long nativeCreate(WindowInfosListener thiz)", "private static native Pair<InputWindowHandle[], DisplayInfo[]> nativeRegister(long ptr)", "private static native void nativeUnregister(long ptr)", "private static native long nativeGetFinalizer()" ],
  "variableNames" : [ "mNativeListener" ]
}