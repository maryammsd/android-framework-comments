{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaSession2.java",
  "packageName" : "android.media",
  "className" : "Builder",
  "comment" : "\n     * This API is not generally intended for third party application developers.\n     * Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n     * <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n     * Library</a> for consistent behavior across all devices.\n     * <p>\n     * Builder for {@link MediaSession2}.\n     * <p>\n     * Any incoming event from the {@link MediaController2} will be handled on the callback\n     * executor. If it's not set, {@link Context#getMainExecutor()} will be used by default.\n     ",
  "links" : [ "android.media.MediaController2", "android.media.MediaSession2", "android.content.Context#getMainExecutor()" ],
  "variables" : [ {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionActivity",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallbackExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "SessionCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setSessionActivity(@Nullable PendingIntent pi)",
    "returnType" : "Builder",
    "comment" : "\n         * Set an intent for launching UI for this Session. This can be used as a\n         * quick link to an ongoing media screen. The intent should be for an\n         * activity that may be started using {@link Context#startActivity(Intent)}.\n         *\n         * @param pi The intent to launch to show UI for this session.\n         * @return The Builder to allow chaining\n         ",
    "links" : [ "android.content.Context#startActivity(Intent)" ]
  }, {
    "name" : "public Builder setId(@NonNull String id)",
    "returnType" : "Builder",
    "comment" : "\n         * Set ID of the session. If it's not set, an empty string will be used to create a session.\n         * <p>\n         * Use this if and only if your app supports multiple playback at the same time and also\n         * wants to provide external apps to have finer controls of them.\n         *\n         * @param id id of the session. Must be unique per package.\n         * @throws IllegalArgumentException if id is {@code null}.\n         * @return The Builder to allow chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSessionCallback(@NonNull Executor executor, @NonNull SessionCallback callback)",
    "returnType" : "Builder",
    "comment" : "\n         * Set callback for the session and its executor.\n         *\n         * @param executor callback executor\n         * @param callback session callback.\n         * @return The Builder to allow chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setExtras(@NonNull Bundle extras)",
    "returnType" : "Builder",
    "comment" : "\n         * Set extras for the session token. If null or not set, {@link Session2Token#getExtras()}\n         * will return an empty {@link Bundle}. An {@link IllegalArgumentException} will be thrown\n         * if the bundle contains any non-framework Parcelable objects.\n         *\n         * @return The Builder to allow chaining\n         * @see Session2Token#getExtras()\n         ",
    "links" : [ "android.os.Bundle", "android.media.Session2Token#getExtras()", "IllegalArgumentException" ]
  }, {
    "name" : "public MediaSession2 build()",
    "returnType" : "MediaSession2",
    "comment" : "\n         * Build {@link MediaSession2}.\n         *\n         * @return a new session\n         * @throws IllegalStateException if the session with the same id is already exists for the\n         *      package.\n         ",
    "links" : [ "android.media.MediaSession2" ]
  } ],
  "methodNames" : [ "public Builder setSessionActivity(@Nullable PendingIntent pi)", "public Builder setId(@NonNull String id)", "public Builder setSessionCallback(@NonNull Executor executor, @NonNull SessionCallback callback)", "public Builder setExtras(@NonNull Bundle extras)", "public MediaSession2 build()" ],
  "variableNames" : [ "mContext", "mId", "mSessionActivity", "mCallbackExecutor", "mCallback", "mExtras" ]
}