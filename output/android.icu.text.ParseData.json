{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/TransliteratorParser.java",
  "packageName" : "android.icu.text",
  "className" : "ParseData",
  "comment" : "\n     * This class implements the SymbolTable interface.  It is used\n     * during parsing to give UnicodeSet access to variables that\n     * have been defined so far.  Note that it uses variablesVector,\n     * _not_ data.variables.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public char[] lookup(String name)",
    "returnType" : "char[]",
    "comment" : "\n         * Implement SymbolTable API.\n         ",
    "links" : [ ]
  }, {
    "name" : "public UnicodeMatcher lookupMatcher(int ch)",
    "returnType" : "UnicodeMatcher",
    "comment" : "\n         * Implement SymbolTable API.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String parseReference(String text, ParsePosition pos, int limit)",
    "returnType" : "String",
    "comment" : "\n         * Implement SymbolTable API.  Parse out a symbol reference\n         * name.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isMatcher(int ch)",
    "returnType" : "boolean",
    "comment" : "\n         * Return true if the given character is a matcher standin or a plain\n         * character (non standin).\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isReplacer(int ch)",
    "returnType" : "boolean",
    "comment" : "\n         * Return true if the given character is a replacer standin or a plain\n         * character (non standin).\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public char[] lookup(String name)", "public UnicodeMatcher lookupMatcher(int ch)", "public String parseReference(String text, ParsePosition pos, int limit)", "public boolean isMatcher(int ch)", "public boolean isReplacer(int ch)" ],
  "variableNames" : [ ]
}