{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/StreamSpliterators.java",
  "packageName" : "java.util.stream",
  "className" : "UnorderedSliceSpliterator",
  "comment" : "\n     * A slice Spliterator that does not preserve order, if any, of a source\n     * Spliterator.\n     *\n     * Note: The source spliterator may report {@code ORDERED} since that\n     * spliterator be the result of a previous pipeline stage that was\n     * collected to a {@code Node}. It is the order of the pipeline stage\n     * that governs whether this slice spliterator is to be used or not.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "CHUNK_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "s",
    "type" : "T_SPLITR",
    "comment" : " The spliterator to slice",
    "links" : [ ]
  }, {
    "name" : "unlimited",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "chunkSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "skipThreshold",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "permits",
    "type" : "AtomicLong",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected final long acquirePermits(long numElements)",
    "returnType" : "long",
    "comment" : "\n         * Acquire permission to skip or process elements.  The caller must\n         * first acquire the elements, then consult this method for guidance\n         * as to what to do with the data.\n         *\n         * <p>We use an {@code AtomicLong} to atomically maintain a counter,\n         * which is initialized as skip+limit if we are limiting, or skip only\n         * if we are not limiting.  The user should consult the method\n         * {@code checkPermits()} before acquiring data elements.\n         *\n         * @param numElements the number of elements the caller has in hand\n         * @return the number of elements that should be processed; any\n         * remaining elements should be discarded.\n         ",
    "links" : [ ]
  }, {
    "name" : "protected final PermitStatus permitStatus()",
    "returnType" : "PermitStatus",
    "comment" : " Call to check if permits might be available before acquiring data ",
    "links" : [ ]
  }, {
    "name" : "public final T_SPLITR trySplit()",
    "returnType" : "T_SPLITR",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract T_SPLITR makeSpliterator(T_SPLITR s)",
    "returnType" : "T_SPLITR",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final long estimateSize()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int characteristics()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected final long acquirePermits(long numElements)", "protected final PermitStatus permitStatus()", "public final T_SPLITR trySplit()", "protected abstract T_SPLITR makeSpliterator(T_SPLITR s)", "public final long estimateSize()", "public final int characteristics()" ],
  "variableNames" : [ "CHUNK_SIZE", "s", "unlimited", "chunkSize", "skipThreshold", "permits" ]
}