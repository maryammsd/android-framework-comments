{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/ConnectivityDiagnosticsManager.java",
  "packageName" : "android.net",
  "className" : "ConnectivityReport",
  "comment" : " Class that includes connectivity information for a specific Network at a specific time. ",
  "variables" : [ {
    "name" : "NETWORK_VALIDATION_RESULT_INVALID",
    "type" : "int",
    "comment" : "\n         * The overall status of the network is that it is invalid; it neither provides\n         * connectivity nor has been exempted from validation.\n         ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_VALIDATION_RESULT_VALID",
    "type" : "int",
    "comment" : " TODO: link to INetworkMonitor.NETWORK_VALIDATION_RESULT_VALID",
    "links" : [ ]
  }, {
    "name" : "NETWORK_VALIDATION_RESULT_PARTIALLY_VALID",
    "type" : "int",
    "comment" : " TODO: link to INetworkMonitor.NETWORK_VALIDATION_RESULT_PARTIAL;",
    "links" : [ ]
  }, {
    "name" : "NETWORK_VALIDATION_RESULT_SKIPPED",
    "type" : "int",
    "comment" : "\n         * Due to the properties of the network, validation was not performed.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_NETWORK_VALIDATION_RESULT",
    "type" : "String",
    "comment" : "\n         * The overall validation result for the Network being reported on.\n         *\n         * <p>The possible values for this key are:\n         * {@link #NETWORK_VALIDATION_RESULT_INVALID},\n         * {@link #NETWORK_VALIDATION_RESULT_VALID},\n         * {@link #NETWORK_VALIDATION_RESULT_PARTIALLY_VALID},\n         * {@link #NETWORK_VALIDATION_RESULT_SKIPPED}.\n         *\n         * @see android.net.NetworkCapabilities#NET_CAPABILITY_VALIDATED\n         ",
    "links" : [ "#NETWORK_VALIDATION_RESULT_PARTIALLY_VALID", "#NETWORK_VALIDATION_RESULT_INVALID", "#NETWORK_VALIDATION_RESULT_SKIPPED", "#NETWORK_VALIDATION_RESULT_VALID" ]
  }, {
    "name" : "NETWORK_PROBE_DNS",
    "type" : "int",
    "comment" : " TODO: link to INetworkMonitor.NETWORK_VALIDATION_PROBE_DNS",
    "links" : [ ]
  }, {
    "name" : "NETWORK_PROBE_HTTP",
    "type" : "int",
    "comment" : " TODO: link to INetworkMonitor.NETWORK_VALIDATION_PROBE_HTTP",
    "links" : [ ]
  }, {
    "name" : "NETWORK_PROBE_HTTPS",
    "type" : "int",
    "comment" : " TODO: link to INetworkMonitor.NETWORK_VALIDATION_PROBE_HTTPS;",
    "links" : [ ]
  }, {
    "name" : "NETWORK_PROBE_FALLBACK",
    "type" : "int",
    "comment" : " TODO: link to INetworkMonitor.NETWORK_VALIDATION_FALLBACK",
    "links" : [ ]
  }, {
    "name" : "NETWORK_PROBE_PRIVATE_DNS",
    "type" : "int",
    "comment" : " TODO: link to INetworkMonitor.NETWORK_VALIDATION_PROBE_PRIVDNS",
    "links" : [ ]
  }, {
    "name" : "KEY_NETWORK_PROBES_SUCCEEDED_BITMASK",
    "type" : "String",
    "comment" : "\n         * A bitmask of network validation probes that succeeded.\n         *\n         * <p>The possible bits values reported by this key are:\n         * {@link #NETWORK_PROBE_DNS},\n         * {@link #NETWORK_PROBE_HTTP},\n         * {@link #NETWORK_PROBE_HTTPS},\n         * {@link #NETWORK_PROBE_FALLBACK},\n         * {@link #NETWORK_PROBE_PRIVATE_DNS}.\n         ",
    "links" : [ "#NETWORK_PROBE_HTTP", "#NETWORK_PROBE_HTTPS", "#NETWORK_PROBE_DNS", "#NETWORK_PROBE_FALLBACK", "#NETWORK_PROBE_PRIVATE_DNS" ]
  }, {
    "name" : "KEY_NETWORK_PROBES_ATTEMPTED_BITMASK",
    "type" : "String",
    "comment" : "\n         * A bitmask of network validation probes that were attempted.\n         *\n         * <p>These probes may have failed or may be incomplete at the time of this report.\n         *\n         * <p>The possible bits values reported by this key are:\n         * {@link #NETWORK_PROBE_DNS},\n         * {@link #NETWORK_PROBE_HTTP},\n         * {@link #NETWORK_PROBE_HTTPS},\n         * {@link #NETWORK_PROBE_FALLBACK},\n         * {@link #NETWORK_PROBE_PRIVATE_DNS}.\n         ",
    "links" : [ "#NETWORK_PROBE_HTTP", "#NETWORK_PROBE_HTTPS", "#NETWORK_PROBE_DNS", "#NETWORK_PROBE_FALLBACK", "#NETWORK_PROBE_PRIVATE_DNS" ]
  }, {
    "name" : "mNetwork",
    "type" : "Network",
    "comment" : " The Network for which this ConnectivityReport applied ",
    "links" : [ ]
  }, {
    "name" : "mReportTimestamp",
    "type" : "long",
    "comment" : "\n         * The timestamp for the report. The timestamp is taken from {@link\n         * System#currentTimeMillis}.\n         ",
    "links" : [ "#currentTimeMillis" ]
  }, {
    "name" : "mLinkProperties",
    "type" : "LinkProperties",
    "comment" : " LinkProperties available on the Network at the reported timestamp ",
    "links" : [ ]
  }, {
    "name" : "mNetworkCapabilities",
    "type" : "NetworkCapabilities",
    "comment" : " NetworkCapabilities available on the Network at the reported timestamp ",
    "links" : [ ]
  }, {
    "name" : "mAdditionalInfo",
    "type" : "PersistableBundle",
    "comment" : " PersistableBundle that may contain additional info about the report ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<ConnectivityReport>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Network getNetwork()",
    "returnType" : "Network",
    "comment" : "\n         * Returns the Network for this ConnectivityReport.\n         *\n         * @return The Network for which this ConnectivityReport applied\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getReportTimestamp()",
    "returnType" : "long",
    "comment" : "\n         * Returns the epoch timestamp (milliseconds) for when this report was taken.\n         *\n         * @return The timestamp for the report. Taken from {@link System#currentTimeMillis}.\n         ",
    "links" : [ "#currentTimeMillis" ]
  }, {
    "name" : "public LinkProperties getLinkProperties()",
    "returnType" : "LinkProperties",
    "comment" : "\n         * Returns the LinkProperties available when this report was taken.\n         *\n         * @return LinkProperties available on the Network at the reported timestamp\n         ",
    "links" : [ ]
  }, {
    "name" : "public NetworkCapabilities getNetworkCapabilities()",
    "returnType" : "NetworkCapabilities",
    "comment" : "\n         * Returns the NetworkCapabilities when this report was taken.\n         *\n         * @return NetworkCapabilities available on the Network at the reported timestamp\n         ",
    "links" : [ ]
  }, {
    "name" : "public PersistableBundle getAdditionalInfo()",
    "returnType" : "PersistableBundle",
    "comment" : "\n         * Returns a PersistableBundle with additional info for this report.\n         *\n         * @return PersistableBundle that may contain additional info about the report\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " {@inheritDoc} ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " {@inheritDoc} ",
    "links" : [ ]
  } ],
  "variableNames" : [ "NETWORK_VALIDATION_RESULT_INVALID", "NETWORK_VALIDATION_RESULT_VALID", "NETWORK_VALIDATION_RESULT_PARTIALLY_VALID", "NETWORK_VALIDATION_RESULT_SKIPPED", "KEY_NETWORK_VALIDATION_RESULT", "NETWORK_PROBE_DNS", "NETWORK_PROBE_HTTP", "NETWORK_PROBE_HTTPS", "NETWORK_PROBE_FALLBACK", "NETWORK_PROBE_PRIVATE_DNS", "KEY_NETWORK_PROBES_SUCCEEDED_BITMASK", "KEY_NETWORK_PROBES_ATTEMPTED_BITMASK", "mNetwork", "mReportTimestamp", "mLinkProperties", "mNetworkCapabilities", "mAdditionalInfo", "CREATOR" ],
  "methodNames" : [ "public Network getNetwork()", "public long getReportTimestamp()", "public LinkProperties getLinkProperties()", "public NetworkCapabilities getNetworkCapabilities()", "public PersistableBundle getAdditionalInfo()", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ]
}