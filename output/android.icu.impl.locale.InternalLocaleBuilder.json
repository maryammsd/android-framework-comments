{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/locale/InternalLocaleBuilder.java",
  "packageName" : "android.icu.impl.locale",
  "className" : "InternalLocaleBuilder",
  "comment" : "\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "JDKIMPL",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_language",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_script",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_region",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_variant",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PRIVUSE_KEY",
    "type" : "CaseInsensitiveChar",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_extensions",
    "type" : "HashMap<CaseInsensitiveChar, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_uattributes",
    "type" : "HashSet<CaseInsensitiveString>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_ukeywords",
    "type" : "HashMap<CaseInsensitiveString, String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public InternalLocaleBuilder setLanguage(String language) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder setScript(String script) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder setRegion(String region) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder setVariant(String variant) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder addUnicodeLocaleAttribute(String attribute) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder removeUnicodeLocaleAttribute(String attribute) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder setUnicodeLocaleKeyword(String key, String type) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder setExtension(char singleton, String value) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder setExtensions(String subtags) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "\n     * Set extension/private subtags in a single string representation\n     ",
    "links" : [ ]
  }, {
    "name" : "private InternalLocaleBuilder setExtensions(List<String> bcpExtensions, String privateuse)",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "\n     * Set a list of BCP47 extensions and private use subtags\n     * BCP47 extensions are already validated and well-formed, but may contain duplicates\n     ",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder setLanguageTag(LanguageTag langtag)",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "\n     * Reset Builder's internal state with the given language tag\n     ",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder setLocale(BaseLocale base, LocaleExtensions extensions) throws LocaleSyntaxException",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder clear()",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InternalLocaleBuilder clearExtensions()",
    "returnType" : "InternalLocaleBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public BaseLocale getBaseLocale()",
    "returnType" : "BaseLocale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public LocaleExtensions getLocaleExtensions()",
    "returnType" : "LocaleExtensions",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String removePrivateuseVariant(String privuseVal)",
    "returnType" : "String",
    "comment" : "\n     * Remove special private use subtag sequence identified by \"lvariant\"\n     * and return the rest. Only used by LocaleExtensions\n     ",
    "links" : [ ]
  }, {
    "name" : "private int checkVariants(String variants, String sep)",
    "returnType" : "int",
    "comment" : "\n     * Check if the given variant subtags separated by the given\n     * separator(s) are valid\n     ",
    "links" : [ ]
  }, {
    "name" : "private void setUnicodeLocaleExtension(String subtags)",
    "returnType" : "void",
    "comment" : "\n     * Private methods parsing Unicode Locale Extension subtags.\n     * Duplicated attributes/keywords will be ignored.\n     * The input must be a valid extension subtags (excluding singleton).\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public InternalLocaleBuilder setLanguage(String language) throws LocaleSyntaxException", "public InternalLocaleBuilder setScript(String script) throws LocaleSyntaxException", "public InternalLocaleBuilder setRegion(String region) throws LocaleSyntaxException", "public InternalLocaleBuilder setVariant(String variant) throws LocaleSyntaxException", "public InternalLocaleBuilder addUnicodeLocaleAttribute(String attribute) throws LocaleSyntaxException", "public InternalLocaleBuilder removeUnicodeLocaleAttribute(String attribute) throws LocaleSyntaxException", "public InternalLocaleBuilder setUnicodeLocaleKeyword(String key, String type) throws LocaleSyntaxException", "public InternalLocaleBuilder setExtension(char singleton, String value) throws LocaleSyntaxException", "public InternalLocaleBuilder setExtensions(String subtags) throws LocaleSyntaxException", "private InternalLocaleBuilder setExtensions(List<String> bcpExtensions, String privateuse)", "public InternalLocaleBuilder setLanguageTag(LanguageTag langtag)", "public InternalLocaleBuilder setLocale(BaseLocale base, LocaleExtensions extensions) throws LocaleSyntaxException", "public InternalLocaleBuilder clear()", "public InternalLocaleBuilder clearExtensions()", "public BaseLocale getBaseLocale()", "public LocaleExtensions getLocaleExtensions()", " static String removePrivateuseVariant(String privuseVal)", "private int checkVariants(String variants, String sep)", "private void setUnicodeLocaleExtension(String subtags)" ],
  "variableNames" : [ "JDKIMPL", "_language", "_script", "_region", "_variant", "PRIVUSE_KEY", "_extensions", "_uattributes", "_ukeywords" ]
}