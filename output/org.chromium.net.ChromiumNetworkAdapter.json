{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/ChromiumNetworkAdapter.java",
  "packageName" : "org.chromium.net",
  "className" : "ChromiumNetworkAdapter",
  "comment" : " Wrapper class for network requests. ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static URLConnection openConnection(URL url, NetworkTrafficAnnotationTag trafficAnnotation) throws IOException",
    "returnType" : "URLConnection",
    "comment" : "\n     * Wrapper around URL#openConnection(), with an extra argument for static analysis/privacy\n     * auditing.\n     *\n     * @param url the URL to open connection to.\n     * @param traffic_annotation an object documenting this network request: what it's used for,\n     *     what data gets sent, what triggers it, etc.\n     * @return a URLConnection linking to the URL.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static URLConnection openConnection(URL url, Proxy proxy, NetworkTrafficAnnotationTag trafficAnnotation) throws IOException",
    "returnType" : "URLConnection",
    "comment" : "\n     * Wrapper around URL#openConnection(Proxy), with an extra argument for static analysis/privacy\n     * auditing.\n     *\n     * @param url the URL to open connection to.\n     * @param proxy the Proxy through which this connection will be made.\n     * @param traffic_annotation an object documenting this network request: what it's used for,\n     *     what data gets sent, what triggers it, etc.\n     * @return a URLConnection linking to the URL.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static InputStream openStream(URL url, NetworkTrafficAnnotationTag trafficAnnotation) throws IOException",
    "returnType" : "InputStream",
    "comment" : "\n     * Wrapper around URL#openStream(), with an extra argument for static analysis/privacy\n     * auditing.\n     *\n     * @param url the URL to open connection to.\n     * @param traffic_annotation an object documenting this network request: what it's used for,\n     *     what data gets sent, what triggers it, etc.\n     * @return an InputStream linking to the URL.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static URLConnection openConnection(URL url, NetworkTrafficAnnotationTag trafficAnnotation) throws IOException", "public static URLConnection openConnection(URL url, Proxy proxy, NetworkTrafficAnnotationTag trafficAnnotation) throws IOException", "public static InputStream openStream(URL url, NetworkTrafficAnnotationTag trafficAnnotation) throws IOException" ],
  "variableNames" : [ ]
}