{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/accessibilityservice/MagnificationConfig.java",
  "packageName" : "android.accessibilityservice",
  "className" : "MagnificationConfig",
  "comment" : "\n * This class describes the magnification config for {@link AccessibilityService} to control the\n * magnification.\n *\n * <p>\n * When the magnification config uses {@link #MAGNIFICATION_MODE_DEFAULT},\n * {@link AccessibilityService} will be able to control the activated magnifier on the display.\n * If there is no magnifier activated, it controls the last-activated magnification mode.\n * If there is no magnifier activated before, it controls full-screen magnifier by default.\n * </p>\n *\n * <p>\n * When the magnification config uses {@link #MAGNIFICATION_MODE_FULLSCREEN}.\n * {@link AccessibilityService} will be able to control full-screen magnifier on the display.\n * </p>\n *\n * <p>\n * When the magnification config uses {@link #MAGNIFICATION_MODE_WINDOW} and the platform\n * supports {@link android.content.pm.PackageManager#FEATURE_WINDOW_MAGNIFICATION} feature.\n * {@link AccessibilityService} will be able to control window magnifier on the display.\n * </p>\n *\n * <p>\n * If the other magnification configs, scale centerX and centerY, are not set by the\n * {@link Builder}, the configs should be current values or default values. And the center\n * position ordinarily is the center of the screen.\n * </p>\n ",
  "links" : [ "android.accessibilityservice.AccessibilityService", "#MAGNIFICATION_MODE_WINDOW", "#MAGNIFICATION_MODE_DEFAULT", "android.content.pm.PackageManager#FEATURE_WINDOW_MAGNIFICATION", "Builder", "#MAGNIFICATION_MODE_FULLSCREEN" ],
  "variables" : [ {
    "name" : "MAGNIFICATION_MODE_DEFAULT",
    "type" : "int",
    "comment" : " The controlling magnification mode. It controls the activated magnifier. ",
    "links" : [ ]
  }, {
    "name" : "MAGNIFICATION_MODE_FULLSCREEN",
    "type" : "int",
    "comment" : " The controlling magnification mode. It controls full-screen magnifier. ",
    "links" : [ ]
  }, {
    "name" : "MAGNIFICATION_MODE_WINDOW",
    "type" : "int",
    "comment" : "\n     * The controlling magnification mode. It is valid if the platform supports\n     * {@link android.content.pm.PackageManager#FEATURE_WINDOW_MAGNIFICATION} feature.\n     ",
    "links" : [ "android.content.pm.PackageManager#FEATURE_WINDOW_MAGNIFICATION" ]
  }, {
    "name" : "mMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActivated",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScale",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCenterX",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCenterY",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<MagnificationConfig>",
    "comment" : "\n     * @see Parcelable.Creator\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getMode()",
    "returnType" : "int",
    "comment" : "\n     * Returns the magnification mode that is the current activated mode or the controlling mode of\n     * the config.\n     *\n     * @return The magnification mode\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isActivated()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns the activated state of the controlling magnifier. The controlling magnifier can be\n     * activated even if the scale returned by {@link MagnificationConfig#getScale()} equals to 1.0.\n     *\n     * @return {@code true} if the magnifier is activated and showing on screen,\n     *         {@code false} otherwise.\n     ",
    "links" : [ "android.accessibilityservice.MagnificationConfig#getScale()" ]
  }, {
    "name" : "public float getScale()",
    "returnType" : "float",
    "comment" : "\n     * Returns the magnification scale of the controlling magnifier\n     *\n     * @return The magnification scale\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getCenterX()",
    "returnType" : "float",
    "comment" : "\n     * Returns the screen-relative X coordinate of the center of the magnification viewport.\n     *\n     * @return The X coordinate\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getCenterY()",
    "returnType" : "float",
    "comment" : "\n     * Returns the screen-relative Y coordinate of the center of the magnification viewport.\n     *\n     * @return The Y coordinate\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getMode()", "public boolean isActivated()", "public float getScale()", "public float getCenterX()", "public float getCenterY()", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel parcel, int flags)" ],
  "variableNames" : [ "MAGNIFICATION_MODE_DEFAULT", "MAGNIFICATION_MODE_FULLSCREEN", "MAGNIFICATION_MODE_WINDOW", "mMode", "mActivated", "mScale", "mCenterX", "mCenterY", "CREATOR" ]
}