{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/tracing/perfetto/DataSourceInstance.java",
  "packageName" : "android.tracing.perfetto",
  "className" : "DataSourceInstance",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mDataSource",
    "type" : "DataSource",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInstanceIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void onStart(StartCallbackArguments args)",
    "returnType" : "void",
    "comment" : "\n     * Executed when the tracing instance starts running.\n     * <p>\n     * NOTE: This callback executes on the Perfetto internal thread and is blocking.\n     *       Anything that is run in this callback should execute quickly.\n     *\n     * @param args Start arguments.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onFlush(FlushCallbackArguments args)",
    "returnType" : "void",
    "comment" : "\n     * Executed when a flush is triggered.\n     * <p>\n     * NOTE: This callback executes on the Perfetto internal thread and is blocking.\n     *       Anything that is run in this callback should execute quickly.\n     * @param args Flush arguments.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void onStop(StopCallbackArguments args)",
    "returnType" : "void",
    "comment" : "\n     * Executed when the tracing instance is stopped.\n     * <p>\n     * NOTE: This callback executes on the Perfetto internal thread and is blocking.\n     *       Anything that is run in this callback should execute quickly.\n     * @param args Stop arguments.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void release()",
    "returnType" : "void",
    "comment" : "\n     * Release the lock on the datasource once you are finished using it.\n     * Only required to be called when instance was retrieved with\n     * `DataSource#getDataSourceInstanceLocked`.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final int getInstanceIndex()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected void onStart(StartCallbackArguments args)", "protected void onFlush(FlushCallbackArguments args)", "protected void onStop(StopCallbackArguments args)", "public final void close()", "public void release()", "public final int getInstanceIndex()" ],
  "variableNames" : [ "mDataSource", "mInstanceIndex" ]
}