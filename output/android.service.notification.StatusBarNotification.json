{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/notification/StatusBarNotification.java",
  "packageName" : "android.service.notification",
  "className" : "StatusBarNotification",
  "comment" : "\n * Class encapsulating a Notification. Sent by the NotificationManagerService to clients including\n * the status bar and any {@link android.service.notification.NotificationListenerService}s.\n ",
  "links" : [ "android.service.notification.NotificationListenerService" ],
  "variables" : [ {
    "name" : "MAX_LOG_TAG_LENGTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "pkg",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "id",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "tag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "key",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "groupKey",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "overrideGroupKey",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "uid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "opPkg",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "initialPid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "notification",
    "type" : "Notification",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "user",
    "type" : "UserHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "postTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInstanceId",
    "type" : "InstanceId",
    "comment" : " Not final, see setInstanceId()",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : " used for inflation & icon expansion",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<StatusBarNotification>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int getUidFromKey(@NonNull String key)",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getPkgFromKey(@NonNull String key)",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private String key()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String groupKey()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isGroup()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if this notification is part of a group.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAppGroup()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if application asked that this notification be part of a group.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StatusBarNotification cloneLight()",
    "returnType" : "StatusBarNotification",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public StatusBarNotification clone()",
    "returnType" : "StatusBarNotification",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StatusBarNotification cloneShallow(Notification notification)",
    "returnType" : "StatusBarNotification",
    "comment" : "\n     * @param notification Some kind of clone of this.notification.\n     * @return A shallow copy of self, with notification in place of this.notification.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isOngoing()",
    "returnType" : "boolean",
    "comment" : "\n     * Convenience method to check the notification's flags for\n     * {@link Notification#FLAG_ONGOING_EVENT}.\n     ",
    "links" : [ "android.app.Notification#FLAG_ONGOING_EVENT" ]
  }, {
    "name" : "public boolean isNonDismissable()",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     *\n     * Convenience method to check the notification's flags for\n     * {@link Notification#FLAG_NO_DISMISS}.\n     ",
    "links" : [ "android.app.Notification#FLAG_NO_DISMISS" ]
  }, {
    "name" : "public boolean isClearable()",
    "returnType" : "boolean",
    "comment" : "\n     * Convenience method to check the notification's flags for\n     * either {@link Notification#FLAG_ONGOING_EVENT} or\n     * {@link Notification#FLAG_NO_CLEAR}.\n     ",
    "links" : [ "android.app.Notification#FLAG_NO_CLEAR", "android.app.Notification#FLAG_ONGOING_EVENT" ]
  }, {
    "name" : "public int getUserId()",
    "returnType" : "int",
    "comment" : "\n     * Returns a userid for whom this notification is intended.\n     *\n     * @deprecated Use {@link #getUser()} instead.\n     ",
    "links" : [ "#getUser()" ]
  }, {
    "name" : "public int getNormalizedUserId()",
    "returnType" : "int",
    "comment" : "\n     * Like {@link #getUserId()} but handles special users.\n     * @hide\n     ",
    "links" : [ "#getUserId()" ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : " The package that the notification belongs to. ",
    "links" : [ ]
  }, {
    "name" : "public int getId()",
    "returnType" : "int",
    "comment" : " The id supplied to {@link android.app.NotificationManager#notify(int, Notification)}. ",
    "links" : [ "android.app.NotificationManager#notify(int" ]
  }, {
    "name" : "public String getTag()",
    "returnType" : "String",
    "comment" : "\n     * The tag supplied to {@link android.app.NotificationManager#notify(int, Notification)},\n     * or null if no tag was specified.\n     ",
    "links" : [ "android.app.NotificationManager#notify(int" ]
  }, {
    "name" : "public int getUid()",
    "returnType" : "int",
    "comment" : "\n     * The notifying app's ({@link #getPackageName()}'s) uid.\n     ",
    "links" : [ "#getPackageName()" ]
  }, {
    "name" : "public String getOpPkg()",
    "returnType" : "String",
    "comment" : "\n     * The package that posted the notification.\n     * <p> Might be different from {@link #getPackageName()} if the app owning the notification has\n     * a {@link NotificationManager#setNotificationDelegate(String) notification delegate}.\n     ",
    "links" : [ "#getPackageName()", "android.app.NotificationManager#setNotificationDelegate(String)" ]
  }, {
    "name" : "public int getInitialPid()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public Notification getNotification()",
    "returnType" : "Notification",
    "comment" : "\n     * The {@link android.app.Notification} supplied to\n     * {@link android.app.NotificationManager#notify(int, Notification)}.\n     ",
    "links" : [ "android.app.Notification", "android.app.NotificationManager#notify(int" ]
  }, {
    "name" : "public UserHandle getUser()",
    "returnType" : "UserHandle",
    "comment" : "\n     * The {@link android.os.UserHandle} for whom this notification is intended.\n     ",
    "links" : [ "android.os.UserHandle" ]
  }, {
    "name" : "public long getPostTime()",
    "returnType" : "long",
    "comment" : "\n     * The time (in {@link System#currentTimeMillis} time) the notification was posted,\n     * which may be different than {@link android.app.Notification#when}.\n     ",
    "links" : [ "#currentTimeMillis", "android.app.Notification#when" ]
  }, {
    "name" : "public String getKey()",
    "returnType" : "String",
    "comment" : "\n     * A unique instance key for this notification record.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getGroupKey()",
    "returnType" : "String",
    "comment" : "\n     * A key that indicates the group with which this message ranks.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getGroup()",
    "returnType" : "String",
    "comment" : "\n     * The ID passed to setGroup(), or the override, or null.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setOverrideGroupKey(String overrideGroupKey)",
    "returnType" : "void",
    "comment" : "\n     * Sets the override group key.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getOverrideGroupKey()",
    "returnType" : "String",
    "comment" : "\n     * Returns the override group key.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void clearPackageContext()",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public InstanceId getInstanceId()",
    "returnType" : "InstanceId",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setInstanceId(InstanceId instanceId)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Context getPackageContext(Context context)",
    "returnType" : "Context",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public LogMaker getLogMaker()",
    "returnType" : "LogMaker",
    "comment" : "\n     * Returns a LogMaker that contains all basic information of the notification.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getShortcutId()",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getGroupLogTag()",
    "returnType" : "String",
    "comment" : "\n     *  Returns a probably-unique string based on the notification's group name,\n     *  with no more than MAX_LOG_TAG_LENGTH characters.\n     * @return String based on group name of notification.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getChannelIdLogTag()",
    "returnType" : "String",
    "comment" : "\n     *  Returns a probably-unique string based on the notification's channel ID,\n     *  with no more than MAX_LOG_TAG_LENGTH characters.\n     * @return String based on channel ID of notification.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private String shortenTag(String logTag)",
    "returnType" : "String",
    "comment" : " fill the maximum size.",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int getUidFromKey(@NonNull String key)", "public static String getPkgFromKey(@NonNull String key)", "private String key()", "private String groupKey()", "public boolean isGroup()", "public boolean isAppGroup()", "public void writeToParcel(Parcel out, int flags)", "public int describeContents()", "public StatusBarNotification cloneLight()", "public StatusBarNotification clone()", "public StatusBarNotification cloneShallow(Notification notification)", "public String toString()", "public boolean isOngoing()", "public boolean isNonDismissable()", "public boolean isClearable()", "public int getUserId()", "public int getNormalizedUserId()", "public String getPackageName()", "public int getId()", "public String getTag()", "public int getUid()", "public String getOpPkg()", "public int getInitialPid()", "public Notification getNotification()", "public UserHandle getUser()", "public long getPostTime()", "public String getKey()", "public String getGroupKey()", "public String getGroup()", "public void setOverrideGroupKey(String overrideGroupKey)", "public String getOverrideGroupKey()", "public void clearPackageContext()", "public InstanceId getInstanceId()", "public void setInstanceId(InstanceId instanceId)", "public Context getPackageContext(Context context)", "public LogMaker getLogMaker()", "public String getShortcutId()", "public String getGroupLogTag()", "public String getChannelIdLogTag()", "private String shortenTag(String logTag)" ],
  "variableNames" : [ "MAX_LOG_TAG_LENGTH", "pkg", "id", "tag", "key", "groupKey", "overrideGroupKey", "uid", "opPkg", "initialPid", "notification", "user", "postTime", "mInstanceId", "mContext", "CREATOR" ]
}