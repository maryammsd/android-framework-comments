{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/pm/LauncherActivityInfo.java",
  "packageName" : "android.content.pm",
  "className" : "LauncherActivityInfo",
  "comment" : "\n * A representation of an activity that can belong to this user or a managed\n * profile associated with this user. It can be used to query the label, icon\n * and badged icon for the activity.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPm",
    "type" : "PackageManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActivityInfo",
    "type" : "ActivityInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mComponentName",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUser",
    "type" : "UserHandle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ComponentName getComponentName()",
    "returnType" : "ComponentName",
    "comment" : "\n     * Returns the component name of this activity.\n     *\n     * @return ComponentName of the activity\n     ",
    "links" : [ ]
  }, {
    "name" : "public UserHandle getUser()",
    "returnType" : "UserHandle",
    "comment" : "\n     * Returns the user handle of the user profile that this activity belongs to. In order to\n     * persist the identity of the profile, do not store the UserHandle. Instead retrieve its\n     * serial number from UserManager. You can convert the serial number back to a UserHandle\n     * for later use.\n     *\n     * @see UserManager#getSerialNumberForUser(UserHandle)\n     * @see UserManager#getUserForSerialNumber(long)\n     *\n     * @return The UserHandle of the profile.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getLabel()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Retrieves the label for the activity.\n     *\n     * @return The label for the activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Drawable getIcon(int density)",
    "returnType" : "Drawable",
    "comment" : "\n     * Returns the icon for this activity, without any badging for the profile.\n     * @param density The preferred density of the icon, zero for default density. Use\n     * density DPI values from {@link DisplayMetrics}.\n     * @see #getBadgedIcon(int)\n     * @see DisplayMetrics\n     * @return The drawable associated with the activity.\n     ",
    "links" : [ "DisplayMetrics" ]
  }, {
    "name" : "public int getApplicationFlags()",
    "returnType" : "int",
    "comment" : "\n     * Returns the application flags from the ApplicationInfo of the activity.\n     *\n     * @return Application flags\n     * @hide remove before shipping\n     ",
    "links" : [ ]
  }, {
    "name" : "public ApplicationInfo getApplicationInfo()",
    "returnType" : "ApplicationInfo",
    "comment" : "\n     * Returns the application info for the appliction this activity belongs to.\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getFirstInstallTime()",
    "returnType" : "long",
    "comment" : "\n     * Returns the time at which the package was first installed.\n     *\n     * @return The time of installation of the package, in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name for the acitivty from  android:name in the manifest.\n     * @return the name from android:name for the acitivity.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Drawable getBadgedIcon(int density)",
    "returnType" : "Drawable",
    "comment" : "\n     * Returns the activity icon with badging appropriate for the profile.\n     * @param density Optional density for the icon, or 0 to use the default density. Use\n     * {@link DisplayMetrics} for DPI values.\n     * @see DisplayMetrics\n     * @return A badged icon for the activity.\n     ",
    "links" : [ "DisplayMetrics" ]
  } ],
  "variableNames" : [ "TAG", "mPm", "mActivityInfo", "mComponentName", "mUser" ],
  "methodNames" : [ "public ComponentName getComponentName()", "public UserHandle getUser()", "public CharSequence getLabel()", "public Drawable getIcon(int density)", "public int getApplicationFlags()", "public ApplicationInfo getApplicationInfo()", "public long getFirstInstallTime()", "public String getName()", "public Drawable getBadgedIcon(int density)" ]
}