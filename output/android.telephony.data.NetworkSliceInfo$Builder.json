{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/data/NetworkSliceInfo.java",
  "packageName" : "android.telephony.data",
  "className" : "Builder",
  "comment" : "\n     * Provides a convenient way to set the fields of a {@link NetworkSliceInfo} when creating a\n     * new instance.\n     *\n     * <p>The example below shows how you might create a new {@code SliceInfo}:\n     *\n     * <pre><code>\n     *\n     * SliceInfo response = new SliceInfo.Builder()\n     *     .setSliceServiceType(SLICE_SERVICE_TYPE_URLLC)\n     *     .build();\n     * </code></pre>\n     ",
  "links" : [ "android.telephony.data.NetworkSliceInfo" ],
  "variables" : [ {
    "name" : "mSliceServiceType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSliceDifferentiator",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMappedHplmnSliceServiceType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMappedHplmnSliceDifferentiator",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setSliceServiceType(@SliceServiceType int mSliceServiceType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the Slice Service Type.\n         *\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSliceDifferentiator(@IntRange(from = MIN_SLICE_DIFFERENTIATOR, to = MAX_SLICE_DIFFERENTIATOR) int sliceDifferentiator)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the Slice Differentiator.\n         * <p/>\n         * A value of {@link #SLICE_DIFFERENTIATOR_NO_SLICE} indicates that there is no\n         * corresponding Slice.\n         *\n         * @throws IllegalArgumentException if the parameter is not in the expected range.\n         *\n         * @return The same instance of the builder.\n         ",
    "links" : [ "#SLICE_DIFFERENTIATOR_NO_SLICE" ]
  }, {
    "name" : "public Builder setMappedHplmnSliceServiceType(@SliceServiceType int mappedHplmnSliceServiceType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the HPLMN Slice Service Type.\n         *\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMappedHplmnSliceDifferentiator(@IntRange(from = MIN_SLICE_DIFFERENTIATOR, to = MAX_SLICE_DIFFERENTIATOR) int mappedHplmnSliceDifferentiator)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the HPLMN Slice Differentiator.\n         * <p/>\n         * A value of {@link #SLICE_DIFFERENTIATOR_NO_SLICE} indicates that there is no\n         * corresponding Slice of the HPLMN.\n         *\n         * @throws IllegalArgumentException if the parameter is not in the expected range.\n         *\n         * @return The same instance of the builder.\n         ",
    "links" : [ "#SLICE_DIFFERENTIATOR_NO_SLICE" ]
  }, {
    "name" : "public Builder setStatus(@SliceStatus int status)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the slice status.\n         *\n         * @throws IllegalArgumentException if the status is invalid.\n         *\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public NetworkSliceInfo build()",
    "returnType" : "NetworkSliceInfo",
    "comment" : "\n         * Build the {@link NetworkSliceInfo}.\n         *\n         * @return the {@link NetworkSliceInfo} object.\n         ",
    "links" : [ "android.telephony.data.NetworkSliceInfo" ]
  } ],
  "methodNames" : [ "public Builder setSliceServiceType(@SliceServiceType int mSliceServiceType)", "public Builder setSliceDifferentiator(@IntRange(from = MIN_SLICE_DIFFERENTIATOR, to = MAX_SLICE_DIFFERENTIATOR) int sliceDifferentiator)", "public Builder setMappedHplmnSliceServiceType(@SliceServiceType int mappedHplmnSliceServiceType)", "public Builder setMappedHplmnSliceDifferentiator(@IntRange(from = MIN_SLICE_DIFFERENTIATOR, to = MAX_SLICE_DIFFERENTIATOR) int mappedHplmnSliceDifferentiator)", "public Builder setStatus(@SliceStatus int status)", "public NetworkSliceInfo build()" ],
  "variableNames" : [ "mSliceServiceType", "mSliceDifferentiator", "mMappedHplmnSliceServiceType", "mMappedHplmnSliceDifferentiator", "mStatus" ]
}