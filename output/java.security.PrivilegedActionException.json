{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/PrivilegedActionException.java",
  "packageName" : "java.security",
  "className" : "PrivilegedActionException",
  "comment" : "\n * Legacy security code; do not use.\n *\n * This exception is thrown by\n * {@code doPrivileged(PrivilegedExceptionAction)} and\n * {@code doPrivileged(PrivilegedExceptionAction,\n * AccessControlContext context)} to indicate\n * that the action being performed threw a checked exception.  The exception\n * thrown by the action can be obtained by calling the\n * {@code getException} method.  In effect, an\n * {@code PrivilegedActionException} is a \"wrapper\"\n * for an exception thrown by a privileged action.\n *\n * <p>As of release 1.4, this exception has been retrofitted to conform to\n * the general purpose exception-chaining mechanism.  The \"exception thrown\n * by the privileged computation\" that is provided at construction time and\n * accessed via the {@link #getException()} method is now known as the\n * <i>cause</i>, and may be accessed via the {@link Throwable#getCause()}\n * method, as well as the aforementioned \"legacy method.\"\n *\n * @since 1.2\n * @see PrivilegedExceptionAction\n * @see AccessController#doPrivileged(PrivilegedExceptionAction)\n * @see AccessController#doPrivileged(PrivilegedExceptionAction,AccessControlContext)\n ",
  "links" : [ "#getCause()", "#getException()" ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : " use serialVersionUID from JDK 1.2.2 for interoperability",
    "links" : [ ]
  }, {
    "name" : "exception",
    "type" : "Exception",
    "comment" : "\n     * @serial\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Exception getException()",
    "returnType" : "Exception",
    "comment" : "\n     * Returns the exception thrown by the privileged computation that\n     * resulted in this {@code PrivilegedActionException}.\n     *\n     * <p>This method predates the general-purpose exception chaining facility.\n     * The {@link Throwable#getCause()} method is now the preferred means of\n     * obtaining this information.\n     *\n     * @return the exception thrown by the privileged computation that\n     *         resulted in this {@code PrivilegedActionException}.\n     * @see PrivilegedExceptionAction\n     * @see AccessController#doPrivileged(PrivilegedExceptionAction)\n     * @see AccessController#doPrivileged(PrivilegedExceptionAction,\n     *                                            AccessControlContext)\n     ",
    "links" : [ "#getCause()" ]
  }, {
    "name" : "public Throwable getCause()",
    "returnType" : "Throwable",
    "comment" : "\n     * Returns the cause of this exception (the exception thrown by\n     * the privileged computation that resulted in this\n     * {@code PrivilegedActionException}).\n     *\n     * @return  the cause of this exception.\n     * @since   1.4\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Exception getException()", "public Throwable getCause()", "public String toString()" ],
  "variableNames" : [ "serialVersionUID", "exception" ]
}