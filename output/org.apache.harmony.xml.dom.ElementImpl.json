{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/harmony/xml/dom/ElementImpl.java",
  "packageName" : "org.apache.harmony.xml.dom",
  "className" : "ElementImpl",
  "comment" : "\n * Provides a straightforward implementation of the corresponding W3C DOM\n * interface. The class is used internally only, thus only notable members that\n * are not in the original interface are documented (the W3C docs are quite\n * extensive). Hope that's ok.\n * <p>\n * Some of the fields may have package visibility, so other classes belonging to\n * the DOM implementation can easily access them while maintaining the DOM tree\n * structure.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "namespaceAware",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "namespaceURI",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "prefix",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "localName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "attributes",
    "type" : "List<AttrImpl>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private int indexOfAttribute(String name)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int indexOfAttributeNS(String namespaceURI, String localName)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getAttribute(String name)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getAttributeNS(String namespaceURI, String localName)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public AttrImpl getAttributeNode(String name)",
    "returnType" : "AttrImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public AttrImpl getAttributeNodeNS(String namespaceURI, String localName)",
    "returnType" : "AttrImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NamedNodeMap getAttributes()",
    "returnType" : "NamedNodeMap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Element getElementById(String name)",
    "returnType" : "Element",
    "comment" : "\n     * This implementation walks the entire document looking for an element\n     * with the given ID attribute. We should consider adding an index to speed\n     * navigation of large documents.\n     ",
    "links" : [ ]
  }, {
    "name" : "public NodeList getElementsByTagName(String name)",
    "returnType" : "NodeList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NodeList getElementsByTagNameNS(String namespaceURI, String localName)",
    "returnType" : "NodeList",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getLocalName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getNamespaceURI()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getNodeName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public short getNodeType()",
    "returnType" : "short",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getPrefix()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getTagName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasAttribute(String name)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasAttributeNS(String namespaceURI, String localName)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasAttributes()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeAttribute(String name) throws DOMException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeAttributeNS(String namespaceURI, String localName) throws DOMException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Attr removeAttributeNode(Attr oldAttr) throws DOMException",
    "returnType" : "Attr",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAttribute(String name, String value) throws DOMException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAttributeNS(String namespaceURI, String qualifiedName, String value) throws DOMException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Attr setAttributeNode(Attr newAttr) throws DOMException",
    "returnType" : "Attr",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Attr setAttributeNodeNS(Attr newAttr) throws DOMException",
    "returnType" : "Attr",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setPrefix(String prefix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public TypeInfo getSchemaTypeInfo()",
    "returnType" : "TypeInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setIdAttribute(String name, boolean isId) throws DOMException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setIdAttributeNS(String namespaceURI, String localName, boolean isId) throws DOMException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setIdAttributeNode(Attr idAttr, boolean isId) throws DOMException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private int indexOfAttribute(String name)", "private int indexOfAttributeNS(String namespaceURI, String localName)", "public String getAttribute(String name)", "public String getAttributeNS(String namespaceURI, String localName)", "public AttrImpl getAttributeNode(String name)", "public AttrImpl getAttributeNodeNS(String namespaceURI, String localName)", "public NamedNodeMap getAttributes()", " Element getElementById(String name)", "public NodeList getElementsByTagName(String name)", "public NodeList getElementsByTagNameNS(String namespaceURI, String localName)", "public String getLocalName()", "public String getNamespaceURI()", "public String getNodeName()", "public short getNodeType()", "public String getPrefix()", "public String getTagName()", "public boolean hasAttribute(String name)", "public boolean hasAttributeNS(String namespaceURI, String localName)", "public boolean hasAttributes()", "public void removeAttribute(String name) throws DOMException", "public void removeAttributeNS(String namespaceURI, String localName) throws DOMException", "public Attr removeAttributeNode(Attr oldAttr) throws DOMException", "public void setAttribute(String name, String value) throws DOMException", "public void setAttributeNS(String namespaceURI, String qualifiedName, String value) throws DOMException", "public Attr setAttributeNode(Attr newAttr) throws DOMException", "public Attr setAttributeNodeNS(Attr newAttr) throws DOMException", "public void setPrefix(String prefix)", "public TypeInfo getSchemaTypeInfo()", "public void setIdAttribute(String name, boolean isId) throws DOMException", "public void setIdAttributeNS(String namespaceURI, String localName, boolean isId) throws DOMException", "public void setIdAttributeNode(Attr idAttr, boolean isId) throws DOMException" ],
  "variableNames" : [ "namespaceAware", "namespaceURI", "prefix", "localName", "attributes" ]
}