{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/accessibility/AccessibilityRequestPreparer.java",
  "packageName" : "android.view.accessibility",
  "className" : "AccessibilityRequestPreparer",
  "comment" : "\n * Object responsible to ensuring that a {@link View} is prepared to meet a synchronous request for\n * accessibility data.\n * <p>\n * Because accessibility requests arrive to {@link View}s synchronously on the UI thread, a View\n * that requires information from other processes can struggle to meet those requests. Registering\n * an instance of this class with {@link AccessibilityManager} allows a View to be notified when\n * a request is about to be made, and to asynchronously inform the accessibility system when it is\n * ready to meet the request.\n * <p>\n * <strong>Note:</strong> This class should only be needed in exceptional situations where a\n * {@link View} cannot otherwise synchronously meet the request for accessibility data.\n ",
  "links" : [ "android.view.accessibility.AccessibilityManager", "android.view.View" ],
  "variables" : [ {
    "name" : "REQUEST_TYPE_EXTRA_DATA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mViewRef",
    "type" : "WeakReference<View>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccessibilityViewId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestTypes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void onPrepareExtraData(int virtualViewId, String extraDataKey, Bundle args, Message preparationFinishedMessage)",
    "returnType" : "void",
    "comment" : "\n     * Callback to allow preparation for filling extra data. Only called back if\n     * REQUEST_TYPE_EXTRA_DATA is requested.\n     *\n     * @param virtualViewId The ID of a virtual child node, if the {@link View} for this preparer\n     * supports virtual descendents, or {@link AccessibilityNodeProvider#HOST_VIEW_ID}\n     * if the request is for the view itself.\n     * @param extraDataKey The extra data key for the request\n     * @param args The arguments for the request\n     * @param preparationFinishedMessage A message that must be sent to its target when preparations\n     * are complete.\n     *\n     * @see View#addExtraDataToAccessibilityNodeInfo(AccessibilityNodeInfo, String, Bundle)\n     * @see View.AccessibilityDelegate#addExtraDataToAccessibilityNodeInfo(\n     * View, AccessibilityNodeInfo, String, Bundle)\n     * @see AccessibilityNodeProvider#addExtraDataToAccessibilityNodeInfo(\n     * int, AccessibilityNodeInfo, String, Bundle)\n     ",
    "links" : [ "android.view.View", "android.view.accessibility.AccessibilityNodeProvider#HOST_VIEW_ID" ]
  }, {
    "name" : "public View getView()",
    "returnType" : "View",
    "comment" : "\n     * Get the view this object was created with.\n     *\n     * @return The view this object was created with, or {@code null} if the weak reference held\n     * to the view is no longer valid.\n     ",
    "links" : [ ]
  }, {
    "name" : " int getAccessibilityViewId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onPrepareExtraData(int virtualViewId, String extraDataKey, Bundle args, Message preparationFinishedMessage)", "public View getView()", " int getAccessibilityViewId()" ],
  "variableNames" : [ "REQUEST_TYPE_EXTRA_DATA", "mViewRef", "mAccessibilityViewId", "mRequestTypes" ]
}