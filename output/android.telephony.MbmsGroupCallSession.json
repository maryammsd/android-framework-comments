{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/MbmsGroupCallSession.java",
  "packageName" : "android.telephony",
  "className" : "MbmsGroupCallSession",
  "comment" : "\n * This class provides functionality for accessing group call functionality over MBMS.\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MBMS_GROUP_CALL_SERVICE_ACTION",
    "type" : "String",
    "comment" : "\n     * Service action which must be handled by the middleware implementing the MBMS group call\n     * interface.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "MBMS_GROUP_CALL_SERVICE_OVERRIDE_METADATA",
    "type" : "String",
    "comment" : "\n     * Metadata key that specifies the component name of the service to bind to for group calls.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "sIsInitialized",
    "type" : "AtomicBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "AtomicReference<IMbmsGroupCallService>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeathRecipient",
    "type" : "IBinder.DeathRecipient",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInternalCallback",
    "type" : "InternalGroupCallSessionCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceConnection",
    "type" : "ServiceConnection",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKnownActiveGroupCalls",
    "type" : "Set<GroupCall>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubscriptionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static MbmsGroupCallSession create(@NonNull Context context, int subscriptionId, @NonNull Executor executor, @NonNull final MbmsGroupCallSessionCallback callback)",
    "returnType" : "MbmsGroupCallSession",
    "comment" : "\n     * Create a new {@link MbmsGroupCallSession} using the given subscription ID.\n     *\n     * You may only have one instance of {@link MbmsGroupCallSession} per UID. If you call this\n     * method while there is an active instance of {@link MbmsGroupCallSession} in your process\n     * (in other words, one that has not had {@link #close()} called on it), this method will\n     * throw an {@link IllegalStateException}. If you call this method in a different process\n     * running under the same UID, an error will be indicated via\n     * {@link MbmsGroupCallSessionCallback#onError(int, String)}.\n     *\n     * Note that initialization may fail asynchronously. If you wish to try again after you\n     * receive such an asynchronous error, you must call {@link #close()} on the instance of\n     * {@link MbmsGroupCallSession} that you received before calling this method again.\n     *\n     * @param context The {@link Context} to use.\n     * @param subscriptionId The subscription ID to use.\n     * @param executor The executor on which you wish to execute callbacks.\n     * @param callback A callback object on which you wish to receive results of asynchronous\n     *                 operations.\n     * @return An instance of {@link MbmsGroupCallSession}, or null if an error occurred.\n     ",
    "links" : [ "IllegalStateException", "android.content.Context", "android.telephony.mbms.MbmsGroupCallSessionCallback#onError(int", "#close()", "android.telephony.MbmsGroupCallSession" ]
  }, {
    "name" : "public static MbmsGroupCallSession create(@NonNull Context context, @NonNull Executor executor, @NonNull MbmsGroupCallSessionCallback callback)",
    "returnType" : "MbmsGroupCallSession",
    "comment" : "\n     * Create a new {@link MbmsGroupCallSession} using the system default data subscription ID.\n     * See {@link #create(Context, int, Executor, MbmsGroupCallSessionCallback)}.\n     ",
    "links" : [ "#create(Context", "android.telephony.MbmsGroupCallSession" ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Terminates this instance. Also terminates\n     * any group calls spawned from this instance as if\n     * {@link GroupCall#close()} had been called on them. After this method returns,\n     * no further callbacks originating from the middleware will be enqueued on the provided\n     * instance of {@link MbmsGroupCallSessionCallback}, but callbacks that have already been\n     * enqueued will still be delivered.\n     *\n     * It is safe to call {@link #create(Context, int, Executor, MbmsGroupCallSessionCallback)} to\n     * obtain another instance of {@link MbmsGroupCallSession} immediately after this method\n     * returns.\n     *\n     * May throw an {@link IllegalStateException}\n     ",
    "links" : [ "IllegalStateException", "android.telephony.mbms.GroupCall#close()", "android.telephony.mbms.MbmsGroupCallSessionCallback", "#create(Context", "android.telephony.MbmsGroupCallSession" ]
  }, {
    "name" : "public GroupCall startGroupCall(long tmgi, @NonNull List<Integer> saiList, @NonNull List<Integer> frequencyList, @NonNull Executor executor, @NonNull GroupCallCallback callback)",
    "returnType" : "GroupCall",
    "comment" : "\n     * Starts the requested group call, reporting status to the indicated callback.\n     * Returns an object used to control that call.\n     *\n     * May throw an {@link IllegalArgumentException} or an {@link IllegalStateException}\n     *\n     * Asynchronous errors through the callback include any of the errors in\n     * {@link MbmsErrors.GeneralErrors}.\n     *\n     * @param tmgi The TMGI, an identifier for the group call you want to join.\n     * @param saiList A list of SAIs for the group call that should be negotiated separately with\n     *                the carrier.\n     * @param frequencyList A lost of frequencies for the group call that should be negotiated\n     *                separately with the carrier.\n     * @param executor The executor on which you wish to execute callbacks for this stream.\n     * @param callback The callback that you want to receive information about the call on.\n     * @return An instance of {@link GroupCall} through which the call can be controlled.\n     *         May be {@code null} if an error occurred.\n     ",
    "links" : [ "IllegalStateException", "MbmsErrors.GeneralErrors", "android.telephony.mbms.GroupCall", "IllegalArgumentException" ]
  }, {
    "name" : "public void onGroupCallStopped(GroupCall service)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private int bindAndInitialize()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "MBMS_GROUP_CALL_SERVICE_ACTION", "MBMS_GROUP_CALL_SERVICE_OVERRIDE_METADATA", "sIsInitialized", "mService", "mDeathRecipient", "mInternalCallback", "mServiceConnection", "mKnownActiveGroupCalls", "mContext", "mSubscriptionId" ],
  "methodNames" : [ "public static MbmsGroupCallSession create(@NonNull Context context, int subscriptionId, @NonNull Executor executor, @NonNull final MbmsGroupCallSessionCallback callback)", "public static MbmsGroupCallSession create(@NonNull Context context, @NonNull Executor executor, @NonNull MbmsGroupCallSessionCallback callback)", "public void close()", "public GroupCall startGroupCall(long tmgi, @NonNull List<Integer> saiList, @NonNull List<Integer> frequencyList, @NonNull Executor executor, @NonNull GroupCallCallback callback)", "public void onGroupCallStopped(GroupCall service)", "private int bindAndInitialize()" ]
}