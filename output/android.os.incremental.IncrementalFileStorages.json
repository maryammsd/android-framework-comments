{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/incremental/IncrementalFileStorages.java",
  "packageName" : "android.os.incremental",
  "className" : "IncrementalFileStorages",
  "comment" : "\n * This class manages storage instances used during a package installation session.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYSTEM_DATA_LOADER_PACKAGE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIncrementalManager",
    "type" : "IncrementalManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStageDir",
    "type" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInheritedStorage",
    "type" : "IncrementalStorage",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultStorage",
    "type" : "IncrementalStorage",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static IncrementalFileStorages initialize(Context context, @NonNull File stageDir, @Nullable File inheritedDir, @NonNull DataLoaderParams dataLoaderParams, @Nullable IDataLoaderStatusListener statusListener, @Nullable StorageHealthCheckParams healthCheckParams, @Nullable IStorageHealthListener healthListener, @NonNull List<InstallationFileParcel> addedFiles, @NonNull PerUidReadTimeouts[] perUidReadTimeouts, @Nullable IPackageLoadingProgressCallback progressCallback) throws IOException",
    "returnType" : "IncrementalFileStorages",
    "comment" : "\n     * Set up files and directories used in an installation session. Only used by Incremental.\n     * All the files will be created in defaultStorage.\n     *\n     * @throws IllegalStateException the session is not an Incremental installation session.\n     * @throws IOException if fails to setup files or directories.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void addApkFile(@NonNull InstallationFileParcel apk) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startLoading(@NonNull DataLoaderParams dataLoaderParams, @Nullable IDataLoaderStatusListener statusListener, @Nullable StorageHealthCheckParams healthCheckParams, @Nullable IStorageHealthListener healthListener, @NonNull PerUidReadTimeouts[] perUidReadTimeouts) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Starts or re-starts loading of data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void makeFile(@NonNull String name, @NonNull byte[] content, @NonNull int mode) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Creates file in default storage and sets its content.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean makeLink(@NonNull String relativePath, @NonNull String fromBase, @NonNull String toBase) throws IOException",
    "returnType" : "boolean",
    "comment" : "\n     * Creates a hardlink from inherited storage to default.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void disallowReadLogs()",
    "returnType" : "void",
    "comment" : "\n     * Permanently disables readlogs.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void cleanUpAndMarkComplete()",
    "returnType" : "void",
    "comment" : "\n     * Resets the states and unbinds storage instances for an installation session.\n     ",
    "links" : [ ]
  }, {
    "name" : "private IncrementalStorage cleanUp()",
    "returnType" : "IncrementalStorage",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static IncrementalFileStorages initialize(Context context, @NonNull File stageDir, @Nullable File inheritedDir, @NonNull DataLoaderParams dataLoaderParams, @Nullable IDataLoaderStatusListener statusListener, @Nullable StorageHealthCheckParams healthCheckParams, @Nullable IStorageHealthListener healthListener, @NonNull List<InstallationFileParcel> addedFiles, @NonNull PerUidReadTimeouts[] perUidReadTimeouts, @Nullable IPackageLoadingProgressCallback progressCallback) throws IOException", "private void addApkFile(@NonNull InstallationFileParcel apk) throws IOException", "public void startLoading(@NonNull DataLoaderParams dataLoaderParams, @Nullable IDataLoaderStatusListener statusListener, @Nullable StorageHealthCheckParams healthCheckParams, @Nullable IStorageHealthListener healthListener, @NonNull PerUidReadTimeouts[] perUidReadTimeouts) throws IOException", "public void makeFile(@NonNull String name, @NonNull byte[] content, @NonNull int mode) throws IOException", "public boolean makeLink(@NonNull String relativePath, @NonNull String fromBase, @NonNull String toBase) throws IOException", "public void disallowReadLogs()", "public void cleanUpAndMarkComplete()", "private IncrementalStorage cleanUp()" ],
  "variableNames" : [ "TAG", "SYSTEM_DATA_LOADER_PACKAGE", "mIncrementalManager", "mStageDir", "mInheritedStorage", "mDefaultStorage" ]
}