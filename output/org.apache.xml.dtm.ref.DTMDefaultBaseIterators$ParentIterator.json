{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/dtm/ref/DTMDefaultBaseIterators.java",
  "packageName" : "org.apache.xml.dtm.ref",
  "className" : "ParentIterator",
  "comment" : "\n   * Iterator that returns the parent of a given node. Note that\n   * this delivers only a single node; if you want all the ancestors,\n   * see AncestorIterator.\n   ",
  "links" : [ ],
  "variables" : [ {
    "name" : "_nodeType",
    "type" : "int",
    "comment" : " The extended type ID that was requested. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public DTMAxisIterator setStartNode(int node)",
    "returnType" : "DTMAxisIterator",
    "comment" : "\n     * Set start to END should 'close' the iterator,\n     * i.e. subsequent call to next() should return END.\n     *\n     * @param node Sets the root of the iteration.\n     *\n     * @return A DTMAxisIterator set to the start of the iteration.\n     ",
    "links" : [ ]
  }, {
    "name" : "public DTMAxisIterator setNodeType(final int type)",
    "returnType" : "DTMAxisIterator",
    "comment" : "\n     * Set the node type of the parent that we're looking for.\n     * Note that this does _not_ mean \"find the nearest ancestor of\n     * this type\", but \"yield the parent if it is of this type\".\n     *\n     *\n     * @param type extended type ID.\n     *\n     * @return ParentIterator configured with the type filter set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int next()",
    "returnType" : "int",
    "comment" : "\n     * Get the next node in the iteration. In this case, we return\n     * only the immediate parent, _if_ it matches the requested nodeType.\n     *\n     * @return The next node handle in the iteration, or END.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public DTMAxisIterator setStartNode(int node)", "public DTMAxisIterator setNodeType(final int type)", "public int next()" ],
  "variableNames" : [ "_nodeType" ]
}