{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/FadeManagerConfiguration.java",
  "packageName" : "android.media",
  "className" : "FadeManagerConfiguration",
  "comment" : "\n * Class to encapsulate fade configurations.\n *\n * <p>Configurations are provided through:\n * <ul>\n *     <li>Fadeable list: a positive list of fadeable type - usage</li>\n *     <li>Unfadeable lists: negative list of unfadeable types - content type, uid, audio attributes\n *     </li>\n *     <li>Volume shaper configs: fade in and fade out configs per usage or audio attributes\n *     </li>\n * </ul>\n *\n * <p>Fade manager configuration can be created in one of the following ways:\n * <ul>\n *     <li>Disabled fades:\n *     <pre class=\"prettyprint\">\n *         new FadeManagerConfiguration.Builder()\n *               .setFadeState(FADE_STATE_DISABLED).build()\n *               </pre>\n *     Can be used to disable fading</li>\n *     <li>Default configurations including default fade duration:\n *     <pre class=\"prettyprint\">\n *         new FadeManagerConfiguration.Builder()\n *                .setFadeState(FADE_STATE_ENABLED_DEFAULT).build()\n *                </pre>\n *     Can be used to enable default fading configurations</li>\n *     <li>Default configurations with custom fade duration:\n *     <pre class=\"prettyprint\">\n *         new FadeManagerConfiguration.Builder(fade out duration, fade in duration)\n *            .setFadeState(FADE_STATE_ENABLED_DEFAULT).build()\n *            </pre>\n *     Can be used to enable default fadeability lists with configurable fade in and out duration\n *     </li>\n *     <li>Custom configurations and fade volume shapers:\n *     <pre class=\"prettyprint\">\n *         new FadeManagerConfiguration.Builder(fade out duration, fade in duration)\n *                .setFadeState(FADE_STATE_ENABLED_DEFAULT)\n *                .setFadeableUsages(list of usages)\n *                .setUnfadeableContentTypes(list of content types)\n *                .setUnfadeableUids(list of uids)\n *                .setUnfadeableAudioAttributes(list of audio attributes)\n *                .setFadeOutVolumeShaperConfigForAudioAttributes(attributes, volume shaper config)\n *                .setFadeInDurationForUsaeg(usage, duration)\n *                ....\n *                .build() </pre>\n *      Achieves full customization of fadeability lists and configurations</li>\n *      <li>Also provides a copy constructor from another instance of fade manager configuration\n *      <pre class=\"prettyprint\">\n *          new FadeManagerConfiguration.Builder(fadeManagerConfiguration)\n *                 .addFadeableUsage(new usage)\n *                 ....\n *                 .build()</pre>\n *      Helps with recreating a new instance from another to simply change/add on top of the\n *      existing ones</li>\n * </ul>\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FADE_STATE_DISABLED",
    "type" : "int",
    "comment" : "\n     * Defines the disabled fade state. No player will be faded in this state.\n     ",
    "links" : [ ]
  }, {
    "name" : "FADE_STATE_ENABLED_DEFAULT",
    "type" : "int",
    "comment" : "\n     * Defines the enabled fade state with default configurations\n     ",
    "links" : [ ]
  }, {
    "name" : "VOLUME_SHAPER_SYSTEM_FADE_ID",
    "type" : "int",
    "comment" : "\n     * Defines ID to be used in volume shaper for fading\n     ",
    "links" : [ ]
  }, {
    "name" : "DURATION_NOT_SET",
    "type" : "long",
    "comment" : "\n     * Used to reset duration or return duration when not set\n     *\n     * @see Builder#setFadeOutDurationForUsage(int, long)\n     * @see Builder#setFadeInDurationForUsage(int, long)\n     * @see Builder#setFadeOutDurationForAudioAttributes(AudioAttributes, long)\n     * @see Builder#setFadeInDurationForAudioAttributes(AudioAttributes, long)\n     * @see #getFadeOutDurationForUsage(int)\n     * @see #getFadeInDurationForUsage(int)\n     * @see #getFadeOutDurationForAudioAttributes(AudioAttributes)\n     * @see #getFadeInDurationForAudioAttributes(AudioAttributes)\n     ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_FADE_OUT_DURATION_MS",
    "type" : "long",
    "comment" : " Defines the default fade out duration ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_FADE_IN_DURATION_MS",
    "type" : "long",
    "comment" : " Defines the default fade in duration ",
    "links" : [ ]
  }, {
    "name" : "mUsageToFadeWrapperMap",
    "type" : "SparseArray<FadeVolumeShaperConfigsWrapper>",
    "comment" : " Map of Usage to Fade volume shaper configs wrapper ",
    "links" : [ ]
  }, {
    "name" : "mAttrToFadeWrapperMap",
    "type" : "ArrayMap<AudioAttributes, FadeVolumeShaperConfigsWrapper>",
    "comment" : " Map of AudioAttributes to Fade volume shaper configs wrapper ",
    "links" : [ ]
  }, {
    "name" : "mFadeableUsages",
    "type" : "IntArray",
    "comment" : " list of fadeable usages ",
    "links" : [ ]
  }, {
    "name" : "mUnfadeableContentTypes",
    "type" : "IntArray",
    "comment" : " list of unfadeable content types ",
    "links" : [ ]
  }, {
    "name" : "mUnfadeablePlayerTypes",
    "type" : "IntArray",
    "comment" : " list of unfadeable player types ",
    "links" : [ ]
  }, {
    "name" : "mUnfadeableUids",
    "type" : "IntArray",
    "comment" : " list of unfadeable uid(s) ",
    "links" : [ ]
  }, {
    "name" : "mUnfadeableAudioAttributes",
    "type" : "List<AudioAttributes>",
    "comment" : " list of unfadeable AudioAttributes ",
    "links" : [ ]
  }, {
    "name" : "mFadeState",
    "type" : "int",
    "comment" : " fade state ",
    "links" : [ ]
  }, {
    "name" : "mFadeOutDurationMillis",
    "type" : "long",
    "comment" : " fade out duration from builder - used for creating default fade out volume shaper ",
    "links" : [ ]
  }, {
    "name" : "mFadeInDurationMillis",
    "type" : "long",
    "comment" : " fade in duration from builder - used for creating default fade in volume shaper ",
    "links" : [ ]
  }, {
    "name" : "mFadeInDelayForOffendersMillis",
    "type" : "long",
    "comment" : " delay after which the offending players are faded back in ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<FadeManagerConfiguration>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getFadeState()",
    "returnType" : "int",
    "comment" : "\n     * Get the fade state\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<Integer> getFadeableUsages()",
    "returnType" : "List<Integer>",
    "comment" : "\n     * Get the list of usages that can be faded\n     *\n     * @return list of {@link android.media.AudioAttributes usages} that shall be faded\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public List<Integer> getUnfadeablePlayerTypes()",
    "returnType" : "List<Integer>",
    "comment" : "\n     * Get the list of {@link android.media.AudioPlaybackConfiguration player types} that can be\n     * faded\n     *\n     * @return list of {@link android.media.AudioPlaybackConfiguration player types}\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.AudioPlaybackConfiguration", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public List<Integer> getUnfadeableContentTypes()",
    "returnType" : "List<Integer>",
    "comment" : "\n     * Get the list of {@link android.media.AudioAttributes content types} that can be faded\n     *\n     * @return list of {@link android.media.AudioAttributes content types}\n     * @throws IllegalStateExceptionif if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public List<Integer> getUnfadeableUids()",
    "returnType" : "List<Integer>",
    "comment" : "\n     * Get the list of uids that cannot be faded\n     *\n     * @return list of uids that shall not be faded\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public List<AudioAttributes> getUnfadeableAudioAttributes()",
    "returnType" : "List<AudioAttributes>",
    "comment" : "\n     * Get the list of {@link android.media.AudioAttributes} that cannot be faded\n     *\n     * @return list of {@link android.media.AudioAttributes} that shall not be faded\n     * @throws IllegalStateException if fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public long getFadeOutDurationForUsage(@AudioAttributes.AttributeUsage int usage)",
    "returnType" : "long",
    "comment" : "\n     * Get the duration used to fade out players with {@link android.media.AudioAttributes usage}\n     *\n     * @param usage the {@link android.media.AudioAttributes usage}\n     * @return duration in milliseconds if set for the usage or {@link #DURATION_NOT_SET} otherwise\n     * @throws IllegalArgumentException if the usage is invalid\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.AudioAttributes", "#DURATION_NOT_SET", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public long getFadeInDurationForUsage(@AudioAttributes.AttributeUsage int usage)",
    "returnType" : "long",
    "comment" : "\n     * Get the duration used to fade in players with {@link android.media.AudioAttributes usage}\n     *\n     * @param usage the {@link android.media.AudioAttributes usage}\n     * @return duration in milliseconds if set for the usage or {@link #DURATION_NOT_SET} otherwise\n     * @throws IllegalArgumentException if the usage is invalid\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.AudioAttributes", "#DURATION_NOT_SET", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public VolumeShaper.Configuration getFadeOutVolumeShaperConfigForUsage(@AudioAttributes.AttributeUsage int usage)",
    "returnType" : "VolumeShaper.Configuration",
    "comment" : "\n     * Get the {@link android.media.VolumeShaper.Configuration} used to fade out players with\n     * {@link android.media.AudioAttributes usage}\n     *\n     * @param usage the {@link android.media.AudioAttributes usage}\n     * @return {@link android.media.VolumeShaper.Configuration} if set for the usage or\n     *     {@code null} otherwise\n     * @throws IllegalArgumentException if the usage is invalid\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.VolumeShaper.Configuration", "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public VolumeShaper.Configuration getFadeInVolumeShaperConfigForUsage(@AudioAttributes.AttributeUsage int usage)",
    "returnType" : "VolumeShaper.Configuration",
    "comment" : "\n     * Get the {@link android.media.VolumeShaper.Configuration} used to fade in players with\n     * {@link android.media.AudioAttributes usage}\n     *\n     * @param usage the {@link android.media.AudioAttributes usage}\n     * @return {@link android.media.VolumeShaper.Configuration} if set for the usage or\n     *     {@code null} otherwise\n     * @throws IllegalArgumentException if the usage is invalid\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.VolumeShaper.Configuration", "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public long getFadeOutDurationForAudioAttributes(@NonNull AudioAttributes audioAttributes)",
    "returnType" : "long",
    "comment" : "\n     * Get the duration used to fade out players with {@link android.media.AudioAttributes}\n     *\n     * @param audioAttributes {@link android.media.AudioAttributes}\n     * @return duration in milliseconds if set for the audio attributes or\n     *     {@link #DURATION_NOT_SET} otherwise\n     * @throws NullPointerException if the audio attributes is {@code null}\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.AudioAttributes", "#DURATION_NOT_SET", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public long getFadeInDurationForAudioAttributes(@NonNull AudioAttributes audioAttributes)",
    "returnType" : "long",
    "comment" : "\n     * Get the duration used to fade-in players with {@link android.media.AudioAttributes}\n     *\n     * @param audioAttributes {@link android.media.AudioAttributes}\n     * @return duration in milliseconds if set for the audio attributes or\n     *     {@link #DURATION_NOT_SET} otherwise\n     * @throws NullPointerException if the audio attributes is {@code null}\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.AudioAttributes", "#DURATION_NOT_SET", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public VolumeShaper.Configuration getFadeOutVolumeShaperConfigForAudioAttributes(@NonNull AudioAttributes audioAttributes)",
    "returnType" : "VolumeShaper.Configuration",
    "comment" : "\n     * Get the {@link android.media.VolumeShaper.Configuration} used to fade out players with\n     * {@link android.media.AudioAttributes}\n     *\n     * @param audioAttributes {@link android.media.AudioAttributes}\n     * @return {@link android.media.VolumeShaper.Configuration} if set for the audio attribute or\n     *     {@code null} otherwise\n     * @throws NullPointerException if the audio attributes is {@code null}\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.VolumeShaper.Configuration", "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public VolumeShaper.Configuration getFadeInVolumeShaperConfigForAudioAttributes(@NonNull AudioAttributes audioAttributes)",
    "returnType" : "VolumeShaper.Configuration",
    "comment" : "\n     * Get the {@link android.media.VolumeShaper.Configuration} used to fade out players with\n     * {@link android.media.AudioAttributes}\n     *\n     * @param audioAttributes {@link android.media.AudioAttributes}\n     * @return {@link android.media.VolumeShaper.Configuration} used for fading in if set for the\n     *     audio attribute or {@code null} otherwise\n     * @throws NullPointerException if the audio attributes is {@code null}\n     * @throws IllegalStateException if the fade state is set to {@link #FADE_STATE_DISABLED}\n     ",
    "links" : [ "android.media.VolumeShaper.Configuration", "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public List<AudioAttributes> getAudioAttributesWithVolumeShaperConfigs()",
    "returnType" : "List<AudioAttributes>",
    "comment" : "\n     * Get the list of {@link android.media.AudioAttributes} for whome the volume shaper\n     * configurations are defined\n     *\n     * @return list of {@link android.media.AudioAttributes} with valid volume shaper configs or\n     *     empty list if none set.\n     ",
    "links" : [ "android.media.AudioAttributes" ]
  }, {
    "name" : "public long getFadeInDelayForOffenders()",
    "returnType" : "long",
    "comment" : "\n     * Get the delay after which the offending players are faded back in\n     *\n     * Players are categorized as offending if they do not honor audio focus state changes. For\n     * example - when an app loses audio focus, it is expected that the app stops any active\n     * player in favor of the app(s) that gained audio focus. However, if the app do not stop the\n     * audio playback, such players are termed as offenders.\n     *\n     * @return delay in milliseconds\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFadeEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Query if fade is enabled\n     *\n     * @return {@code true} if fading is enabled, {@code false} otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isUsageFadeable(@AudioAttributes.AttributeUsage int usage)",
    "returnType" : "boolean",
    "comment" : "\n     * Query if the usage is fadeable\n     *\n     * @param usage the {@link android.media.AudioAttributes usage}\n     * @return {@code true} if usage is fadeable, {@code false}  when the fade state is set to\n     *     {@link #FADE_STATE_DISABLED} or if the usage is not fadeable.\n     ",
    "links" : [ "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public boolean isContentTypeUnfadeable(@AudioAttributes.AttributeContentType int contentType)",
    "returnType" : "boolean",
    "comment" : "\n     * Query if the content type is unfadeable\n     *\n     * @param contentType the {@link android.media.AudioAttributes content type}\n     * @return {@code true} if content type is unfadeable or if fade state is set to\n     *     {@link #FADE_STATE_DISABLED}, {@code false} otherwise\n     ",
    "links" : [ "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public boolean isPlayerTypeUnfadeable(@AudioPlaybackConfiguration.PlayerType int playerType)",
    "returnType" : "boolean",
    "comment" : "\n     * Query if the player type is unfadeable\n     *\n     * @param playerType the {@link android.media.AudioPlaybackConfiguration player type}\n     * @return {@code true} if player type is unfadeable or if fade state is set to\n     *     {@link #FADE_STATE_DISABLED}, {@code false} otherwise\n     ",
    "links" : [ "android.media.AudioPlaybackConfiguration", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public boolean isAudioAttributesUnfadeable(@NonNull AudioAttributes audioAttributes)",
    "returnType" : "boolean",
    "comment" : "\n     * Query if the audio attributes is unfadeable\n     *\n     * @param audioAttributes the {@link android.media.AudioAttributes}\n     * @return {@code true} if audio attributes is unfadeable or if fade state is set to\n     *     {@link #FADE_STATE_DISABLED}, {@code false} otherwise\n     * @throws NullPointerException if the audio attributes is {@code null}\n     ",
    "links" : [ "android.media.AudioAttributes", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public boolean isUidUnfadeable(int uid)",
    "returnType" : "boolean",
    "comment" : "\n     * Query if the uid is unfadeable\n     *\n     * @param uid the uid of application\n     * @return {@code true} if uid is unfadeable or if fade state is set to\n     *     {@link #FADE_STATE_DISABLED}, {@code false} otherwise\n     ",
    "links" : [ "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public static long getDefaultFadeOutDurationMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the default fade out duration (in milliseconds)\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long getDefaultFadeInDurationMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the default fade in duration (in milliseconds)\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String fadeStateToString(@FadeStateEnum int fadeState)",
    "returnType" : "String",
    "comment" : "\n     * Convert fade state into a human-readable string\n     *\n     * @param fadeState one of {@link #FADE_STATE_DISABLED} or {@link #FADE_STATE_ENABLED_DEFAULT}\n     * @return human-readable string\n     * @hide\n     ",
    "links" : [ "#FADE_STATE_ENABLED_DEFAULT", "#FADE_STATE_DISABLED" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private long getDurationForVolumeShaperConfig(VolumeShaper.Configuration config)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private VolumeShaper.Configuration getVolumeShaperConfigFromWrapper(FadeVolumeShaperConfigsWrapper wrapper, boolean isFadeIn)",
    "returnType" : "VolumeShaper.Configuration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private List<AudioAttributes> getAudioAttributesInternal()",
    "returnType" : "List<AudioAttributes>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isUsageValid(int usage)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void ensureFadingIsEnabled()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void validateUsage(int usage)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static IntArray convertIntegerListToIntArray(List<Integer> integerList)",
    "returnType" : "IntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static List<Integer> convertIntArrayToIntegerList(IntArray intArray)",
    "returnType" : "List<Integer>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getFadeState()", "public List<Integer> getFadeableUsages()", "public List<Integer> getUnfadeablePlayerTypes()", "public List<Integer> getUnfadeableContentTypes()", "public List<Integer> getUnfadeableUids()", "public List<AudioAttributes> getUnfadeableAudioAttributes()", "public long getFadeOutDurationForUsage(@AudioAttributes.AttributeUsage int usage)", "public long getFadeInDurationForUsage(@AudioAttributes.AttributeUsage int usage)", "public VolumeShaper.Configuration getFadeOutVolumeShaperConfigForUsage(@AudioAttributes.AttributeUsage int usage)", "public VolumeShaper.Configuration getFadeInVolumeShaperConfigForUsage(@AudioAttributes.AttributeUsage int usage)", "public long getFadeOutDurationForAudioAttributes(@NonNull AudioAttributes audioAttributes)", "public long getFadeInDurationForAudioAttributes(@NonNull AudioAttributes audioAttributes)", "public VolumeShaper.Configuration getFadeOutVolumeShaperConfigForAudioAttributes(@NonNull AudioAttributes audioAttributes)", "public VolumeShaper.Configuration getFadeInVolumeShaperConfigForAudioAttributes(@NonNull AudioAttributes audioAttributes)", "public List<AudioAttributes> getAudioAttributesWithVolumeShaperConfigs()", "public long getFadeInDelayForOffenders()", "public boolean isFadeEnabled()", "public boolean isUsageFadeable(@AudioAttributes.AttributeUsage int usage)", "public boolean isContentTypeUnfadeable(@AudioAttributes.AttributeContentType int contentType)", "public boolean isPlayerTypeUnfadeable(@AudioPlaybackConfiguration.PlayerType int playerType)", "public boolean isAudioAttributesUnfadeable(@NonNull AudioAttributes audioAttributes)", "public boolean isUidUnfadeable(int uid)", "public static long getDefaultFadeOutDurationMillis()", "public static long getDefaultFadeInDurationMillis()", "public String toString()", "public static String fadeStateToString(@FadeStateEnum int fadeState)", "public int describeContents()", "public boolean equals(Object o)", "public int hashCode()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "private long getDurationForVolumeShaperConfig(VolumeShaper.Configuration config)", "private VolumeShaper.Configuration getVolumeShaperConfigFromWrapper(FadeVolumeShaperConfigsWrapper wrapper, boolean isFadeIn)", "private List<AudioAttributes> getAudioAttributesInternal()", "private static boolean isUsageValid(int usage)", "private void ensureFadingIsEnabled()", "private static void validateUsage(int usage)", "private static IntArray convertIntegerListToIntArray(List<Integer> integerList)", "private static List<Integer> convertIntArrayToIntegerList(IntArray intArray)" ],
  "variableNames" : [ "TAG", "FADE_STATE_DISABLED", "FADE_STATE_ENABLED_DEFAULT", "VOLUME_SHAPER_SYSTEM_FADE_ID", "DURATION_NOT_SET", "DEFAULT_FADE_OUT_DURATION_MS", "DEFAULT_FADE_IN_DURATION_MS", "mUsageToFadeWrapperMap", "mAttrToFadeWrapperMap", "mFadeableUsages", "mUnfadeableContentTypes", "mUnfadeablePlayerTypes", "mUnfadeableUids", "mUnfadeableAudioAttributes", "mFadeState", "mFadeOutDurationMillis", "mFadeInDurationMillis", "mFadeInDelayForOffendersMillis", "CREATOR" ]
}