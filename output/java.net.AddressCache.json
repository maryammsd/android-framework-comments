{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/net/AddressCache.java",
  "packageName" : "java.net",
  "className" : "AddressCache",
  "comment" : "\n * Implements caching for {@code InetAddress}. We use a unified cache for both positive and negative\n * cache entries.\n *\n * TODO: benchmark and optimize InetAddress until we get to the point where we can just rely on\n * the C library level caching. The main thing caching at this level buys us is avoiding repeated\n * conversions from 'struct sockaddr's to InetAddress[].\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MAX_ENTRIES",
    "type" : "int",
    "comment" : "\n     * When the cache contains more entries than this, we start dropping the oldest ones.\n     * This should be a power of two to avoid wasted space in our custom map.\n     ",
    "links" : [ ]
  }, {
    "name" : "TTL_NANOS",
    "type" : "long",
    "comment" : " The TTL for the Java-level cache is short, just 2s.",
    "links" : [ ]
  }, {
    "name" : "cache",
    "type" : "BasicLruCache<AddressCacheKey, AddressCacheEntry>",
    "comment" : " The actual cache.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "\n     * Removes all entries from the cache.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Object get(String hostname, int netId)",
    "returnType" : "Object",
    "comment" : "\n     * Returns the cached InetAddress[] for 'hostname' on network 'netId'. Returns null\n     * if nothing is known about 'hostname'. Returns a String suitable for use as an\n     * UnknownHostException detail message if 'hostname' is known not to exist.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void put(String hostname, int netId, InetAddress[] addresses)",
    "returnType" : "void",
    "comment" : "\n     * Associates the given 'addresses' with 'hostname'. The association will expire after a\n     * certain length of time.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void putUnknownHost(String hostname, int netId, String detailMessage)",
    "returnType" : "void",
    "comment" : "\n     * Records that 'hostname' is known not to have any associated addresses. (I.e. insert a\n     * negative cache entry.)\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void clear()", "public Object get(String hostname, int netId)", "public void put(String hostname, int netId, InetAddress[] addresses)", "public void putUnknownHost(String hostname, int netId, String detailMessage)" ],
  "variableNames" : [ "MAX_ENTRIES", "TTL_NANOS", "cache" ]
}