{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/CbGeoUtils.java",
  "packageName" : "android.telephony",
  "className" : "Polygon",
  "comment" : "\n     * A class representing a simple polygon with at least 3 points. This is used for geo-fencing\n     * logic with cell broadcasts. More information regarding cell broadcast geo-fencing logic is\n     * laid out in 3GPP TS 23.041 and ATIS-0700041.\n     ",
  "variables" : [ {
    "name" : "SCALE",
    "type" : "double",
    "comment" : "\n         * In order to reduce the loss of precision in floating point calculations, all vertices\n         * of the polygon are scaled. Set the value of scale to 1000 can take into account the\n         * actual distance accuracy of 1 meter if the EPS is 1e-7 during the calculation.\n         ",
    "links" : [ ]
  }, {
    "name" : "mVertices",
    "type" : "List<LatLng>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScaledVertices",
    "type" : "List<Point>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOrigin",
    "type" : "LatLng",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<LatLng> getVertices()",
    "returnType" : "List<LatLng>",
    "comment" : "\n         * Return the list of vertices which compose the polygon.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean contains(@NonNull LatLng latLng)",
    "returnType" : "boolean",
    "comment" : "\n         * Check if the given LatLng is inside the polygon.\n         *\n         * If a LatLng is on the edge of the polygon, it is also considered to be inside the\n         * polygon.\n         ",
    "links" : [ ]
  }, {
    "name" : "private Point convertAndScaleLatLng(LatLng latLng)",
    "returnType" : "Point",
    "comment" : "\n         * Move the given point {@code latLng} to the coordinate system with {@code mOrigin} as the\n         * origin and scale it. {@code mOrigin} is selected from the vertices of a polygon, it has\n         * the smallest longitude value among all of the polygon vertices.\n         *\n         * @param latLng the point need to be converted and scaled.\n         * @Return a {@link Point} object.\n         ",
    "links" : [ "Point" ]
  }, {
    "name" : "private static double crossProduct(Point a, Point b)",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "SCALE", "mVertices", "mScaledVertices", "mOrigin" ],
  "methodNames" : [ "public List<LatLng> getVertices()", "public boolean contains(@NonNull LatLng latLng)", "private Point convertAndScaleLatLng(LatLng latLng)", "private static double crossProduct(Point a, Point b)", "public String toString()", "public boolean equals(Object o)" ]
}