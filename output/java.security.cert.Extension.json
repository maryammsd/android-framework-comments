{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/cert/Extension.java",
  "packageName" : "java.security.cert",
  "className" : "Extension",
  "comment" : "\n * This interface represents an X.509 extension.\n *\n * <p>\n * Extensions provide a means of associating additional attributes with users\n * or public keys and for managing a certification hierarchy.  The extension\n * format also allows communities to define private extensions to carry\n * information unique to those communities.\n *\n * <p>\n * Each extension contains an object identifier, a criticality setting\n * indicating whether it is a critical or a non-critical extension, and\n * and an ASN.1 DER-encoded value. Its ASN.1 definition is:\n *\n * <pre>\n *\n *     Extension ::= SEQUENCE {\n *         extnId        OBJECT IDENTIFIER,\n *         critical      BOOLEAN DEFAULT FALSE,\n *         extnValue     OCTET STRING\n *                 -- contains a DER encoding of a value\n *                 -- of the type registered for use with\n *                 -- the extnId object identifier value\n *     }\n *\n * </pre>\n *\n * <p>\n * This interface is designed to provide access to a single extension,\n * unlike {@link java.security.cert.X509Extension} which is more suitable\n * for accessing a set of extensions.\n *\n * @since 1.7\n ",
  "links" : [ "java.security.cert.X509Extension" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " String getId()",
    "returnType" : "String",
    "comment" : "\n     * Gets the extensions's object identifier.\n     *\n     * @return the object identifier as a String\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean isCritical()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets the extension's criticality setting.\n     *\n     * @return true if this is a critical extension.\n     ",
    "links" : [ ]
  }, {
    "name" : " byte[] getValue()",
    "returnType" : "byte[]",
    "comment" : "\n     * Gets the extensions's DER-encoded value. Note, this is the bytes\n     * that are encoded as an OCTET STRING. It does not include the OCTET\n     * STRING tag and length.\n     *\n     * @return a copy of the extension's value, or {@code null} if no\n     *    extension value is present.\n     ",
    "links" : [ ]
  }, {
    "name" : " void encode(OutputStream out) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Generates the extension's DER encoding and writes it to the output\n     * stream.\n     *\n     * @param out the output stream\n     * @exception IOException on encoding or output error.\n     * @exception NullPointerException if {@code out} is {@code null}.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " String getId()", " boolean isCritical()", " byte[] getValue()", " void encode(OutputStream out) throws IOException" ],
  "variableNames" : [ ]
}