{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/pm/ActivityInfo.java",
  "packageName" : "android.content.pm",
  "className" : "WindowLayout",
  "comment" : "\n     * Contains information about position and size of the activity on the display.\n     *\n     * Used in freeform mode to set desired position when activity is first launched.\n     * It describes how big the activity wants to be in both width and height,\n     * the minimal allowed size, and the gravity to be applied.\n     *\n     * @attr ref android.R.styleable#AndroidManifestLayout_defaultWidth\n     * @attr ref android.R.styleable#AndroidManifestLayout_defaultHeight\n     * @attr ref android.R.styleable#AndroidManifestLayout_gravity\n     * @attr ref android.R.styleable#AndroidManifestLayout_minWidth\n     * @attr ref android.R.styleable#AndroidManifestLayout_minHeight\n     ",
  "variables" : [ {
    "name" : "width",
    "type" : "int",
    "comment" : "\n         * Width of activity in pixels.\n         *\n         * @attr ref android.R.styleable#AndroidManifestLayout_defaultWidth\n         ",
    "links" : [ ]
  }, {
    "name" : "widthFraction",
    "type" : "float",
    "comment" : "\n         * Width of activity as a fraction of available display width.\n         * If both {@link #width} and this value are set this one will be preferred.\n         *\n         * @attr ref android.R.styleable#AndroidManifestLayout_defaultWidth\n         ",
    "links" : [ "#width" ]
  }, {
    "name" : "height",
    "type" : "int",
    "comment" : "\n         * Height of activity in pixels.\n         *\n         * @attr ref android.R.styleable#AndroidManifestLayout_defaultHeight\n         ",
    "links" : [ ]
  }, {
    "name" : "heightFraction",
    "type" : "float",
    "comment" : "\n         * Height of activity as a fraction of available display height.\n         * If both {@link #height} and this value are set this one will be preferred.\n         *\n         * @attr ref android.R.styleable#AndroidManifestLayout_defaultHeight\n         ",
    "links" : [ "#height" ]
  }, {
    "name" : "gravity",
    "type" : "int",
    "comment" : "\n         * Gravity of activity.\n         * Currently {@link android.view.Gravity#TOP}, {@link android.view.Gravity#BOTTOM},\n         * {@link android.view.Gravity#LEFT} and {@link android.view.Gravity#RIGHT} are supported.\n         *\n         * @attr ref android.R.styleable#AndroidManifestLayout_gravity\n         ",
    "links" : [ "android.view.Gravity#TOP", "android.view.Gravity#BOTTOM", "android.view.Gravity#LEFT", "android.view.Gravity#RIGHT" ]
  }, {
    "name" : "minWidth",
    "type" : "int",
    "comment" : "\n         * Minimal width of activity in pixels to be able to display its content.\n         *\n         * <p><strong>NOTE:</strong> A task's root activity value is applied to all additional\n         * activities launched in the task. That is if the root activity of a task set minimal\n         * width, then the system will set the same minimal width on all other activities in the\n         * task. It will also ignore any other minimal width attributes of non-root activities.\n         *\n         * @attr ref android.R.styleable#AndroidManifestLayout_minWidth\n         ",
    "links" : [ ]
  }, {
    "name" : "minHeight",
    "type" : "int",
    "comment" : "\n         * Minimal height of activity in pixels to be able to display its content.\n         *\n         * <p><strong>NOTE:</strong> A task's root activity value is applied to all additional\n         * activities launched in the task. That is if the root activity of a task set minimal\n         * height, then the system will set the same minimal height on all other activities in the\n         * task. It will also ignore any other minimal height attributes of non-root activities.\n         *\n         * @attr ref android.R.styleable#AndroidManifestLayout_minHeight\n         ",
    "links" : [ ]
  }, {
    "name" : "windowLayoutAffinity",
    "type" : "String",
    "comment" : "\n         * Affinity of window layout parameters. Activities with the same UID and window layout\n         * affinity will share the same window dimension record.\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean hasSpecifiedSize()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns if this {@link WindowLayout} has specified bounds.\n         * @hide\n         ",
    "links" : [ "WindowLayout" ]
  }, {
    "name" : "public void writeToParcel(Parcel dest)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "width", "widthFraction", "height", "heightFraction", "gravity", "minWidth", "minHeight", "windowLayoutAffinity" ],
  "methodNames" : [ "public boolean hasSpecifiedSize()", "public void writeToParcel(Parcel dest)" ]
}