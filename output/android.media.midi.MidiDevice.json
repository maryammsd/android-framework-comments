{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/midi/MidiDevice.java",
  "packageName" : "android.media.midi",
  "className" : "MidiDevice",
  "comment" : "\n * This class is used for sending and receiving data to and from a MIDI device\n * Instances of this class are created by {@link MidiManager#openDevice}.\n ",
  "links" : [ "android.media.midi.MidiManager#openDevice" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceInfo",
    "type" : "MidiDeviceInfo",
    "comment" : " accessed from native code",
    "links" : [ ]
  }, {
    "name" : "mDeviceServer",
    "type" : "IMidiDeviceServer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceServerBinder",
    "type" : "IBinder",
    "comment" : " accessed from native code",
    "links" : [ ]
  }, {
    "name" : "mMidiManager",
    "type" : "IMidiManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsDeviceClosed",
    "type" : "boolean",
    "comment" : " accessed from native code",
    "links" : [ ]
  }, {
    "name" : "mNativeHandle",
    "type" : "long",
    "comment" : " accessed from native code",
    "links" : [ ]
  }, {
    "name" : "mGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public MidiDeviceInfo getInfo()",
    "returnType" : "MidiDeviceInfo",
    "comment" : "\n     * Returns a {@link MidiDeviceInfo} object, which describes this device.\n     *\n     * @return the {@link MidiDeviceInfo} object\n     ",
    "links" : [ "android.media.midi.MidiDeviceInfo" ]
  }, {
    "name" : "public MidiInputPort openInputPort(int portNumber)",
    "returnType" : "MidiInputPort",
    "comment" : "\n     * Called to open a {@link MidiInputPort} for the specified port number.\n     *\n     * An input port can only be used by one sender at a time.\n     * Opening an input port will fail if another application has already opened it for use.\n     * A {@link MidiDeviceStatus} can be used to determine if an input port is already open.\n     *\n     * @param portNumber the number of the input port to open\n     * @return the {@link MidiInputPort} if the open is successful,\n     *         or null in case of failure.\n     ",
    "links" : [ "android.media.midi.MidiInputPort", "android.media.midi.MidiDeviceStatus" ]
  }, {
    "name" : "public MidiOutputPort openOutputPort(int portNumber)",
    "returnType" : "MidiOutputPort",
    "comment" : "\n     * Called to open a {@link MidiOutputPort} for the specified port number.\n     *\n     * An output port may be opened by multiple applications.\n     *\n     * @param portNumber the number of the output port to open\n     * @return the {@link MidiOutputPort} if the open is successful,\n     *         or null in case of failure.\n     ",
    "links" : [ "android.media.midi.MidiOutputPort" ]
  }, {
    "name" : "public MidiConnection connectPorts(MidiInputPort inputPort, int outputPortNumber)",
    "returnType" : "MidiConnection",
    "comment" : "\n     * Connects the supplied {@link MidiInputPort} to the output port of this device\n     * with the specified port number. Once the connection is made, the MidiInput port instance\n     * can no longer receive data via its {@link MidiReceiver#onSend} method.\n     * This method returns a {@link MidiDevice.MidiConnection} object, which can be used\n     * to close the connection.\n     *\n     * @param inputPort the inputPort to connect\n     * @param outputPortNumber the port number of the output port to connect inputPort to.\n     * @return {@link MidiDevice.MidiConnection} object if the connection is successful,\n     *         or null in case of failure.\n     ",
    "links" : [ "android.media.midi.MidiInputPort", "MidiDevice.MidiConnection", "android.media.midi.MidiReceiver#onSend" ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public MidiDeviceInfo getInfo()", "public MidiInputPort openInputPort(int portNumber)", "public MidiOutputPort openOutputPort(int portNumber)", "public MidiConnection connectPorts(MidiInputPort inputPort, int outputPortNumber)", "public void close() throws IOException", "protected void finalize() throws Throwable", "public String toString()" ],
  "variableNames" : [ "TAG", "mDeviceInfo", "mDeviceServer", "mDeviceServerBinder", "mMidiManager", "mClientToken", "mDeviceToken", "mIsDeviceClosed", "mNativeHandle", "mGuard" ]
}