{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/text/style/BulletSpan.java",
  "packageName" : "android.text.style",
  "className" : "BulletSpan",
  "comment" : "\n * A span which styles paragraphs as bullet points (respecting layout direction).\n * <p>\n * BulletSpans must be attached from the first character to the last character of a single\n * paragraph, otherwise the bullet point will not be displayed but the first paragraph encountered\n * will have a leading margin.\n * <p>\n * BulletSpans allow configuring the following elements:\n * <ul>\n * <li><b>gap width</b> - the distance, in pixels, between the bullet point and the paragraph.\n * Default value is 2px.</li>\n * <li><b>color</b> - the bullet point color. By default, the bullet point color is 0 - no color,\n * so it uses the TextView's text color.</li>\n * <li><b>bullet radius</b> - the radius, in pixels, of the bullet point. Default value is\n * 4px.</li>\n * </ul>\n * For example, a BulletSpan using the default values can be constructed like this:\n * <pre>{@code\n *  SpannableString string = new SpannableString(\"Text with\\nBullet point\");\n *string.setSpan(new BulletSpan(), 10, 22, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);}</pre>\n * <img src=\"{@docRoot}reference/android/images/text/style/defaultbulletspan.png\" />\n * <figcaption>BulletSpan constructed with default values.</figcaption>\n * <p>\n * <p>\n * To construct a BulletSpan with a gap width of 40px, green bullet point and bullet radius of\n * 20px:\n * <pre>{@code\n *  SpannableString string = new SpannableString(\"Text with\\nBullet point\");\n *string.setSpan(new BulletSpan(40, color, 20), 10, 22, Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);}</pre>\n * <img src=\"{@docRoot}reference/android/images/text/style/custombulletspan.png\" />\n * <figcaption>Customized BulletSpan.</figcaption>\n ",
  "variables" : [ {
    "name" : "STANDARD_BULLET_RADIUS",
    "type" : "int",
    "comment" : " Bullet is slightly bigger to avoid aliasing artifacts on mdpi devices.",
    "links" : [ ]
  }, {
    "name" : "STANDARD_GAP_WIDTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STANDARD_COLOR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGapWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBulletRadius",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWantColor",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getSpanTypeId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeIdInternal()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcelInternal(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getLeadingMargin(boolean first)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getGapWidth()",
    "returnType" : "int",
    "comment" : "\n     * Get the distance, in pixels, between the bullet point and the paragraph.\n     *\n     * @return the distance, in pixels, between the bullet point and the paragraph.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBulletRadius()",
    "returnType" : "int",
    "comment" : "\n     * Get the radius, in pixels, of the bullet point.\n     *\n     * @return the radius, in pixels, of the bullet point.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getColor()",
    "returnType" : "int",
    "comment" : "\n     * Get the bullet point color.\n     *\n     * @return the bullet point color\n     ",
    "links" : [ ]
  }, {
    "name" : "public void drawLeadingMargin(@NonNull Canvas canvas, @NonNull Paint paint, int x, int dir, int top, int baseline, int bottom, @NonNull CharSequence text, int start, int end, boolean first, @Nullable Layout layout)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "STANDARD_BULLET_RADIUS", "STANDARD_GAP_WIDTH", "STANDARD_COLOR", "mGapWidth", "mBulletRadius", "mColor", "mWantColor" ],
  "methodNames" : [ "public int getSpanTypeId()", "public int getSpanTypeIdInternal()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public void writeToParcelInternal(@NonNull Parcel dest, int flags)", "public int getLeadingMargin(boolean first)", "public int getGapWidth()", "public int getBulletRadius()", "public int getColor()", "public void drawLeadingMargin(@NonNull Canvas canvas, @NonNull Paint paint, int x, int dir, int top, int baseline, int bottom, @NonNull CharSequence text, int start, int end, boolean first, @Nullable Layout layout)" ]
}