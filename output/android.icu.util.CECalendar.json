{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/CECalendar.java",
  "packageName" : "android.icu.util",
  "className" : "CECalendar",
  "comment" : "\n * Base class for EthiopicCalendar and CopticCalendar.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : " jdk1.4.2 serialver",
    "links" : [ ]
  }, {
    "name" : "LIMITS",
    "type" : "int[][]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected abstract int getJDEpochOffset()",
    "returnType" : "int",
    "comment" : "\n     * The Coptic and Ethiopic calendars differ only in their epochs.\n     * This method must be implemented by CECalendar subclasses to\n     * return the date offset from Julian.\n     * @hide unsupported on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int handleComputeMonthStart(int eyear, int emonth, boolean useMonth)",
    "returnType" : "int",
    "comment" : "\n     * Return JD of start of given month/extended year\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int handleGetLimit(int field, int limitType)",
    "returnType" : "int",
    "comment" : "\n     * Calculate the limit for a specified type of limit and field\n     ",
    "links" : [ ]
  }, {
    "name" : "protected int handleGetMonthLength(int extendedYear, int month)",
    "returnType" : "int",
    "comment" : "\n     * Return the number of days in the given month of the given extended\n     * year of this calendar system.  Subclasses should override this\n     * method if they can provide a more correct or more efficient\n     * implementation than the default implementation in Calendar.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int ceToJD(long year, int month, int day, int jdEpochOffset)",
    "returnType" : "int",
    "comment" : "\n     * Convert an Coptic/Ethiopic year, month and day to a Julian day\n     * @param year the extended year\n     * @param month the month\n     * @param day the day\n     * @return Julian day\n     * @hide unsupported on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void jdToCE(int julianDay, int jdEpochOffset, int[] fields)",
    "returnType" : "void",
    "comment" : "\n     * Convert a Julian day to an Coptic/Ethiopic year, month and day\n     * @hide unsupported on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTemporalMonthCode()",
    "returnType" : "String",
    "comment" : "\n     * Gets The Temporal monthCode value corresponding to the month for the date.\n     * The value is a string identifier that starts with the literal grapheme\n     * \"M\" followed by two graphemes representing the zero-padded month number\n     * of the current month in a normal (non-leap) year. For the short thirteen\n     * month in each year in the CECalendar, the value is \"M13\".\n     *\n     * @return       One of 13 possible strings in {\"M01\".. \"M12\", \"M13\"}.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setTemporalMonthCode(String temporalMonth)",
    "returnType" : "void",
    "comment" : "\n     * Sets The Temporal monthCode which is a string identifier that starts\n     * with the literal grapheme \"M\" followed by two graphemes representing\n     * the zero-padded month number of the current month in a normal\n     * (non-leap) year. For CECalendar calendar, the values are \"M01\" .. \"M13\"\n     * while the \"M13\" is represent the short thirteen month in each year.\n     * @param temporalMonth One of 13 possible strings in {\"M01\".. \"M12\", \"M13\"}.\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected abstract int getJDEpochOffset()", "protected int handleComputeMonthStart(int eyear, int emonth, boolean useMonth)", "protected int handleGetLimit(int field, int limitType)", "protected int handleGetMonthLength(int extendedYear, int month)", "public static int ceToJD(long year, int month, int day, int jdEpochOffset)", "public static void jdToCE(int julianDay, int jdEpochOffset, int[] fields)", "public String getTemporalMonthCode()", "public void setTemporalMonthCode(String temporalMonth)" ],
  "variableNames" : [ "serialVersionUID", "LIMITS" ]
}