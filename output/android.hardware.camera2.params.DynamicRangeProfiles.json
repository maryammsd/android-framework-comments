{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/params/DynamicRangeProfiles.java",
  "packageName" : "android.hardware.camera2.params",
  "className" : "DynamicRangeProfiles",
  "comment" : "\n * Immutable class with information about supported 10-bit dynamic range profiles.\n *\n * <p>An instance of this class can be queried by retrieving the value of\n * {@link android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES}.\n * </p>\n *\n * <p>All camera devices supporting the\n * {@link android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_DYNAMIC_RANGE_TEN_BIT}\n * capability must advertise the supported 10-bit dynamic range profiles in\n * {@link #getSupportedProfiles}</p>\n *\n * <p>Some devices may not be able to support 8-bit and/or 10-bit output with different dynamic\n * range profiles within the same capture request. Such device specific constraints can be queried\n * by calling {@link #getProfileCaptureRequestConstraints}. Do note that unsupported\n * combinations will result in {@link IllegalArgumentException} when trying to submit a capture\n * request. Capture requests that only reference outputs configured using the same dynamic range\n * profile value will never fail due to such constraints.</p>\n *\n * @see OutputConfiguration#setDynamicRangeProfile\n ",
  "links" : [ "#getProfileCaptureRequestConstraints", "android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_DYNAMIC_RANGE_PROFILES", "#getSupportedProfiles", "android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_DYNAMIC_RANGE_TEN_BIT", "IllegalArgumentException" ],
  "variables" : [ {
    "name" : "STANDARD",
    "type" : "long",
    "comment" : "\n     * This the default 8-bit standard profile that will be used in case where camera clients do not\n     * explicitly configure a supported dynamic range profile by calling\n     * {@link OutputConfiguration#setDynamicRangeProfile}.\n     ",
    "links" : [ "android.hardware.camera2.params.OutputConfiguration#setDynamicRangeProfile" ]
  }, {
    "name" : "HLG10",
    "type" : "long",
    "comment" : "\n     * 10-bit pixel samples encoded using the Hybrid log-gamma transfer function\n     *\n     * <p>All 10-bit output capable devices are required to support this profile.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "HDR10",
    "type" : "long",
    "comment" : "\n     * 10-bit pixel samples encoded using the SMPTE ST 2084 transfer function.\n     *\n     * <p>This profile utilizes internal static metadata to increase the quality\n     * of the capture.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "HDR10_PLUS",
    "type" : "long",
    "comment" : "\n     * 10-bit pixel samples encoded using the SMPTE ST 2084 transfer function.\n     *\n     * <p>In contrast to HDR10, this profile uses internal per-frame metadata\n     * to further enhance the quality of the capture.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DOLBY_VISION_10B_HDR_REF",
    "type" : "long",
    "comment" : "\n     * <p>This is a camera mode for Dolby Vision capture optimized for a more scene\n     * accurate capture. This would typically differ from what a specific device\n     * might want to tune for a consumer optimized Dolby Vision general capture.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DOLBY_VISION_10B_HDR_REF_PO",
    "type" : "long",
    "comment" : "\n     * <p>This is the power optimized mode for 10-bit Dolby Vision HDR Reference Mode.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DOLBY_VISION_10B_HDR_OEM",
    "type" : "long",
    "comment" : "\n     * <p>This is the camera mode for the default Dolby Vision capture mode for the\n     * specific device. This would be tuned by each specific device for consumer\n     * pleasing results that resonate with their particular audience. We expect\n     * that each specific device would have a different look for their default\n     * Dolby Vision capture.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DOLBY_VISION_10B_HDR_OEM_PO",
    "type" : "long",
    "comment" : "\n     * <p>This is the power optimized mode for 10-bit Dolby Vision HDR device specific capture\n     * Mode.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DOLBY_VISION_8B_HDR_REF",
    "type" : "long",
    "comment" : "\n     * <p>This is the 8-bit version of the Dolby Vision reference capture mode optimized\n     * for scene accuracy.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DOLBY_VISION_8B_HDR_REF_PO",
    "type" : "long",
    "comment" : "\n     * <p>This is the power optimized mode for 8-bit Dolby Vision HDR Reference Mode.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DOLBY_VISION_8B_HDR_OEM",
    "type" : "long",
    "comment" : "\n     * <p>This is the 8-bit version of device specific tuned and optimized Dolby Vision\n     * capture mode.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DOLBY_VISION_8B_HDR_OEM_PO",
    "type" : "long",
    "comment" : "\n     * <p>This is the power optimized mode for 8-bit Dolby Vision HDR device specific\n     * capture Mode.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "PUBLIC_MAX",
    "type" : "long",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mProfileMap",
    "type" : "HashMap<Long, Set<Long>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLookahedLatencyMap",
    "type" : "HashMap<Long, Boolean>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void checkProfileValue(long profile)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<Long> getSupportedProfiles()",
    "returnType" : "Set<Long>",
    "comment" : "\n     * Return a set of supported dynamic range profiles.\n     *\n     * @return non-modifiable set of dynamic range profiles\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<Long> getProfileCaptureRequestConstraints(@Profile long profile)",
    "returnType" : "Set<Long>",
    "comment" : "\n     * Return a list of supported dynamic range profiles that\n     * can be referenced in a single capture request along with a given\n     * profile.\n     *\n     * <p>For example if assume that a particular 10-bit output capable device\n     * returns ({@link #STANDARD}, {@link #HLG10}, {@link #HDR10}) as result from calling\n     * {@link #getSupportedProfiles()} and {@link #getProfileCaptureRequestConstraints}\n     * returns ({@link #STANDARD}, {@link #HLG10}) when given an argument of {@link #STANDARD}.\n     * This means that the corresponding camera device will only accept and process capture requests\n     * that reference outputs configured using {@link #HDR10} dynamic profile or alternatively\n     * some combination of {@link #STANDARD} and {@link #HLG10}. However trying to\n     * queue capture requests to outputs that reference both {@link #HDR10} and\n     * {@link #STANDARD}/{@link #HLG10} will result in {@link IllegalArgumentException}.</p>\n     *\n     * <p>The list will be empty in case there are no constraints for the given\n     * profile.</p>\n     *\n     * @return non-modifiable set of dynamic range profiles\n     * @throws IllegalArgumentException   If the profile argument is not\n     *                                    within the list returned by\n     *                                    getSupportedProfiles()\n     *\n     * @see OutputConfiguration#setDynamicRangeProfile\n     ",
    "links" : [ "#HDR10", "#getProfileCaptureRequestConstraints", "#HLG10", "#getSupportedProfiles()", "#STANDARD", "IllegalArgumentException" ]
  }, {
    "name" : "public boolean isExtraLatencyPresent(@Profile long profile)",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether a given dynamic range profile is suitable for latency sensitive use cases.\n     *\n     * <p>Due to internal lookahead logic, camera outputs configured with some dynamic range\n     * profiles may experience additional latency greater than 3 buffers. Using camera outputs\n     * with such profiles for latency sensitive use cases such as camera preview is not\n     * recommended. Profiles that have such extra streaming delay are typically utilized for\n     * scenarios such as offscreen video recording.</p>\n     *\n     * @return true if the given profile is not suitable for latency sensitive use cases, false\n     *         otherwise\n     * @throws IllegalArgumentException   If the profile argument is not\n     *                                    within the list returned by\n     *                                    getSupportedProfiles()\n     *\n     * @see OutputConfiguration#setDynamicRangeProfile\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void checkProfileValue(long profile)", "public Set<Long> getSupportedProfiles()", "public Set<Long> getProfileCaptureRequestConstraints(@Profile long profile)", "public boolean isExtraLatencyPresent(@Profile long profile)" ],
  "variableNames" : [ "STANDARD", "HLG10", "HDR10", "HDR10_PLUS", "DOLBY_VISION_10B_HDR_REF", "DOLBY_VISION_10B_HDR_REF_PO", "DOLBY_VISION_10B_HDR_OEM", "DOLBY_VISION_10B_HDR_OEM_PO", "DOLBY_VISION_8B_HDR_REF", "DOLBY_VISION_8B_HDR_REF_PO", "DOLBY_VISION_8B_HDR_OEM", "DOLBY_VISION_8B_HDR_OEM_PO", "PUBLIC_MAX", "mProfileMap", "mLookahedLatencyMap" ]
}