{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/InputDevice.java",
  "packageName" : "android.view",
  "className" : "Builder",
  "comment" : "\n     * InputDevice builder used to create an InputDevice for tests in Java.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGeneration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControllerNumber",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVendorId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProductId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceBus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDescriptor",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsExternal",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSources",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeyboardType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeyCharacterMap",
    "type" : "KeyCharacterMap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasVibrator",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasMicrophone",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasButtonUnderPad",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasSensor",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasBattery",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeyboardLanguageTag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeyboardLayoutType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUsiVersionMajor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUsiVersionMinor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAssociatedDisplayId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMotionRanges",
    "type" : "List<MotionRange>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShouldSmoothScroll",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setId(int id)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getId() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setGeneration(int generation)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getGeneration() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setControllerNumber(int controllerNumber)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getControllerNumber() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setName(String name)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getName() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVendorId(int vendorId)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getVendorId() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setProductId(int productId)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getProductId() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDeviceBus(int deviceBus)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getDeviceBus() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDescriptor(String descriptor)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getDescriptor() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setExternal(boolean external)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#isExternal() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSources(int sources)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getSources() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setKeyboardType(int keyboardType)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getKeyboardType() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setKeyCharacterMap(KeyCharacterMap keyCharacterMap)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getKeyCharacterMap() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHasVibrator(boolean hasVibrator)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getVibrator() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHasMicrophone(boolean hasMicrophone)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#hasMicrophone() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHasButtonUnderPad(boolean hasButtonUnderPad)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#hasButtonUnderPad() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHasSensor(boolean hasSensor)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#hasSensor() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHasBattery(boolean hasBattery)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#hasBattery() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setKeyboardLanguageTag(String keyboardLanguageTag)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getKeyboardLanguageTag() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setKeyboardLayoutType(String keyboardLayoutType)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getKeyboardLayoutType() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUsiVersion(@Nullable HostUsiVersion usiVersion)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getHostUsiVersion() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAssociatedDisplayId(int displayId)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getAssociatedDisplayId() ",
    "links" : [ ]
  }, {
    "name" : "public Builder addMotionRange(int axis, int source, float min, float max, float flat, float fuzz, float resolution)",
    "returnType" : "Builder",
    "comment" : " @see InputDevice#getMotionRanges() ",
    "links" : [ ]
  }, {
    "name" : "public Builder setShouldSmoothScroll(boolean shouldSmoothScroll)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the view behavior for smooth scrolling ({@code false} by default).\n         *\n         * @see ViewBehavior#shouldSmoothScroll(int, int)\n         ",
    "links" : [ ]
  }, {
    "name" : "public InputDevice build()",
    "returnType" : "InputDevice",
    "comment" : " Build {@link InputDevice}. ",
    "links" : [ "android.view.InputDevice" ]
  } ],
  "methodNames" : [ "public Builder setId(int id)", "public Builder setGeneration(int generation)", "public Builder setControllerNumber(int controllerNumber)", "public Builder setName(String name)", "public Builder setVendorId(int vendorId)", "public Builder setProductId(int productId)", "public Builder setDeviceBus(int deviceBus)", "public Builder setDescriptor(String descriptor)", "public Builder setExternal(boolean external)", "public Builder setSources(int sources)", "public Builder setKeyboardType(int keyboardType)", "public Builder setKeyCharacterMap(KeyCharacterMap keyCharacterMap)", "public Builder setHasVibrator(boolean hasVibrator)", "public Builder setHasMicrophone(boolean hasMicrophone)", "public Builder setHasButtonUnderPad(boolean hasButtonUnderPad)", "public Builder setHasSensor(boolean hasSensor)", "public Builder setHasBattery(boolean hasBattery)", "public Builder setKeyboardLanguageTag(String keyboardLanguageTag)", "public Builder setKeyboardLayoutType(String keyboardLayoutType)", "public Builder setUsiVersion(@Nullable HostUsiVersion usiVersion)", "public Builder setAssociatedDisplayId(int displayId)", "public Builder addMotionRange(int axis, int source, float min, float max, float flat, float fuzz, float resolution)", "public Builder setShouldSmoothScroll(boolean shouldSmoothScroll)", "public InputDevice build()" ],
  "variableNames" : [ "mId", "mGeneration", "mControllerNumber", "mName", "mVendorId", "mProductId", "mDeviceBus", "mDescriptor", "mIsExternal", "mSources", "mKeyboardType", "mKeyCharacterMap", "mHasVibrator", "mHasMicrophone", "mHasButtonUnderPad", "mHasSensor", "mHasBattery", "mKeyboardLanguageTag", "mKeyboardLayoutType", "mUsiVersionMajor", "mUsiVersionMinor", "mAssociatedDisplayId", "mMotionRanges", "mShouldSmoothScroll" ]
}