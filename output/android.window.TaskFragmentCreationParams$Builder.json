{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/TaskFragmentCreationParams.java",
  "packageName" : "android.window",
  "className" : "Builder",
  "comment" : " Builder to construct the options to create TaskFragment with. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mOrganizer",
    "type" : "TaskFragmentOrganizerToken",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFragmentToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOwnerToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialRelativeBounds",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowingMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPairedPrimaryFragmentToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPairedActivityToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowTransitionWhenEmpty",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOverrideOrientation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setInitialRelativeBounds(@NonNull Rect bounds)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the initial relative bounds for the TaskFragment in parent coordinate.\n         * Set to empty to fill parent.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setWindowingMode(@WindowingMode int windowingMode)",
    "returnType" : "Builder",
    "comment" : " Sets the initial windowing mode for the TaskFragment. ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPairedPrimaryFragmentToken(@Nullable IBinder fragmentToken)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the fragment token of the paired primary TaskFragment.\n         * When it is set, the new TaskFragment will be positioned right above the paired\n         * TaskFragment. Otherwise, the new TaskFragment will be positioned on the top of the Task\n         * by default.\n         *\n         * This is needed in case we need to launch a placeholder Activity to split below a\n         * transparent always-expand Activity.\n         *\n         * This should not be used with {@link #setPairedActivityToken}.\n         *\n         * TODO(b/232476698): remove the hide with adding CTS for this in next release.\n         * @hide\n         ",
    "links" : [ "#setPairedActivityToken" ]
  }, {
    "name" : "public Builder setPairedActivityToken(@Nullable IBinder activityToken)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the Activity token to place the new TaskFragment on top of.\n         * When it is set, the new TaskFragment will be positioned right above the target Activity.\n         * Otherwise, the new TaskFragment will be positioned on the top of the Task by default.\n         *\n         * This is needed in case we need to place an Activity into TaskFragment to launch\n         * placeholder below a transparent always-expand Activity, or when there is another Intent\n         * being started in a TaskFragment above.\n         *\n         * This should not be used with {@link #setPairedPrimaryFragmentToken}.\n         *\n         * TODO(b/232476698): remove the hide with adding CTS for this in next release.\n         * @hide\n         ",
    "links" : [ "#setPairedPrimaryFragmentToken" ]
  }, {
    "name" : "public Builder setAllowTransitionWhenEmpty(boolean allowTransitionWhenEmpty)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether transitions are allowed when the TaskFragment is empty. If {@code true},\n         * transitions are allowed when the TaskFragment is empty. If {@code false}, transitions\n         * will wait until the TaskFragment becomes non-empty or other conditions are met. Default\n         * to {@code false}.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setOverrideOrientation(@ScreenOrientation int overrideOrientation)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the override orientation for the TaskFragment. This is effective only for a system\n         * organizer. The value is ignored otherwise. Default to\n         * {@code SCREEN_ORIENTATION_UNSPECIFIED}.\n         *\n         * @see TaskFragmentOrganizer#registerOrganizer(boolean)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public TaskFragmentCreationParams build()",
    "returnType" : "TaskFragmentCreationParams",
    "comment" : " Constructs the options to create TaskFragment with. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setInitialRelativeBounds(@NonNull Rect bounds)", "public Builder setWindowingMode(@WindowingMode int windowingMode)", "public Builder setPairedPrimaryFragmentToken(@Nullable IBinder fragmentToken)", "public Builder setPairedActivityToken(@Nullable IBinder activityToken)", "public Builder setAllowTransitionWhenEmpty(boolean allowTransitionWhenEmpty)", "public Builder setOverrideOrientation(@ScreenOrientation int overrideOrientation)", "public TaskFragmentCreationParams build()" ],
  "variableNames" : [ "mOrganizer", "mFragmentToken", "mOwnerToken", "mInitialRelativeBounds", "mWindowingMode", "mPairedPrimaryFragmentToken", "mPairedActivityToken", "mAllowTransitionWhenEmpty", "mOverrideOrientation" ]
}