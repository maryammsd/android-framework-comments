{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/crypto/spec/SecretKeySpec.java",
  "packageName" : "javax.crypto.spec",
  "className" : "SecretKeySpec",
  "comment" : "\n * This class specifies a secret key in a provider-independent fashion.\n *\n * <p>It can be used to construct a <code>SecretKey</code> from a byte array,\n * without having to go through a (provider-based)\n * <code>SecretKeyFactory</code>.\n *\n * <p>This class is only useful for raw secret keys that can be represented as\n * a byte array and have no key parameters associated with them, e.g., DES or\n * Triple DES keys.\n *\n * @author Jan Luehe\n *\n * @see javax.crypto.SecretKey\n * @see javax.crypto.SecretKeyFactory\n * @since 1.4\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "key",
    "type" : "byte[]",
    "comment" : "\n     * The secret key.\n     *\n     * @serial\n     ",
    "links" : [ ]
  }, {
    "name" : "algorithm",
    "type" : "String",
    "comment" : "\n     * The name of the algorithm associated with this key.\n     *\n     * @serial\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getAlgorithm()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the algorithm associated with this secret key.\n     *\n     * @return the secret key algorithm.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFormat()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the encoding format for this secret key.\n     *\n     * @return the string \"RAW\".\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getEncoded()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the key material of this secret key.\n     *\n     * @return the key material. Returns a new array\n     * each time this method is called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * Calculates a hash code value for the object.\n     * Objects that are equal will also have the same hashcode.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * Tests for equality between the specified object and this\n     * object. Two SecretKeySpec objects are considered equal if\n     * they are both SecretKey instances which have the\n     * same case-insensitive algorithm name and key encoding.\n     *\n     * @param obj the object to test for equality with this object.\n     *\n     * @return true if the objects are considered equal, false if\n     * <code>obj</code> is null or otherwise.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getAlgorithm()", "public String getFormat()", "public byte[] getEncoded()", "public int hashCode()", "public boolean equals(Object obj)" ],
  "variableNames" : [ "serialVersionUID", "key", "algorithm" ]
}