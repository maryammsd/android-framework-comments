{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/Callable.java",
  "packageName" : "java.util.concurrent",
  "className" : "Callable",
  "comment" : "\n * A task that returns a result and may throw an exception.\n * Implementors define a single method with no arguments called\n * {@code call}.\n *\n * <p>The {@code Callable} interface is similar to {@link\n * java.lang.Runnable}, in that both are designed for classes whose\n * instances are potentially executed by another thread.  A\n * {@code Runnable}, however, does not return a result and cannot\n * throw a checked exception.\n *\n * <p>The {@link Executors} class contains utility methods to\n * convert from other common forms to {@code Callable} classes.\n *\n * @see Executor\n * @since 1.5\n * @author Doug Lea\n * @param <V> the result type of method {@code call}\n ",
  "links" : [ "java.lang.Runnable", "java.util.concurrent.Executors" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " V call() throws Exception",
    "returnType" : "V",
    "comment" : "\n     * Computes a result, or throws an exception if unable to do so.\n     *\n     * @return computed result\n     * @throws Exception if unable to compute a result\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " V call() throws Exception" ],
  "variableNames" : [ ]
}