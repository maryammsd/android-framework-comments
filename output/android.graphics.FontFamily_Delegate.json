{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/FontFamily_Delegate.java",
  "packageName" : "android.graphics",
  "className" : "FontFamily_Delegate",
  "comment" : "\n * Delegate implementing the native methods of android.graphics.FontFamily\n *\n * Through the layoutlib_create tool, the original native methods of FontFamily have been replaced\n * by calls to methods of the same name in this delegate class.\n *\n * This class behaves like the original native implementation, but in Java, keeping previously\n * native data into its own objects and mapping them to int that are sent back and forth between\n * it and the original FontFamily class.\n *\n * @see DelegateManager\n ",
  "variables" : [ {
    "name" : "DEFAULT_FONT_WEIGHT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BOLD_FONT_WEIGHT_DELTA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BOLD_FONT_WEIGHT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FONT_SUFFIX_ITALIC",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FN_ALL_FONTS_LIST",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTENSION_OTF",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CACHE_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCache",
    "type" : "Map<String, FontInfo>",
    "comment" : " we will not update it.",
    "links" : [ ]
  }, {
    "name" : "sManager",
    "type" : "DelegateManager<FontFamily_Delegate>",
    "comment" : " ---- delegate manager ----",
    "links" : [ ]
  }, {
    "name" : "sFamilyFinalizer",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sFontLocation",
    "type" : "String",
    "comment" : " ---- delegate helper data ----",
    "links" : [ ]
  }, {
    "name" : "sPostInitDelegate",
    "type" : "List<FontFamily_Delegate>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SDK_FONTS",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFonts",
    "type" : "Map<FontInfo, Font>",
    "comment" : " render calls",
    "links" : [ ]
  }, {
    "name" : "mVariant",
    "type" : "FontVariant",
    "comment" : "\n     * The variant of the Font Family - compact or elegant.\n     * <p/>\n     * 0 is unspecified, 1 is compact and 2 is elegant. This needs to be kept in sync with values in\n     * android.graphics.FontFamily\n     *\n     * @see Paint#setElegantTextHeight(boolean)\n     ",
    "links" : [ ]
  }, {
    "name" : "mPostInitRunnables",
    "type" : "List<Runnable>",
    "comment" : " List of runnables to process fonts after sFontLoader is initialized.",
    "links" : [ ]
  }, {
    "name" : "mValid",
    "type" : "boolean",
    "comment" : " @see #isValid() ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static FontFamily_Delegate getDelegate(long nativeFontFamily)",
    "returnType" : "FontFamily_Delegate",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static synchronized void setFontLocation(String fontLocation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Font getFont(int desiredWeight, boolean isItalic)",
    "returnType" : "Font",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public FontVariant getVariant()",
    "returnType" : "FontVariant",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isValid()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns if the FontFamily should contain any fonts. If this returns true and\n     * {@link #getFont(int, boolean)} returns an empty list, it means that an error occurred while\n     * loading the fonts. However, some fonts are deliberately skipped, for example they are not\n     * bundled with the SDK. In such a case, this method returns false.\n     ",
    "links" : [ "#getFont(int" ]
  }, {
    "name" : "private static Font loadFont(String path)",
    "returnType" : "Font",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String getFontLocation()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean addFont(FontFamily thisFontFamily, String path, int ttcIndex, FontVariationAxis[] axes, int weight, int italic)",
    "returnType" : "boolean",
    "comment" : " ---- delegate methods ----",
    "links" : [ ]
  }, {
    "name" : " static long nInitBuilder(String lang, int variant)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateFamily(long builderPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nGetFamilyReleaseFunc()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nAddFont(long builderPtr, ByteBuffer font, int ttcIndex, int weight, int isItalic)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nAddFontWeightStyle(long builderPtr, ByteBuffer font, int ttcIndex, int weight, int isItalic)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nAddAxisValue(long builderPtr, int tag, float value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean addFont(long builderPtr, final String path, final int weight, final boolean isItalic)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nGetBuilderReleaseFunc()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void init()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean addFont(final String path, int ttcIndex, int weight, int italic)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean addFont(@NonNull String path)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean addFont(@NonNull String path, int weight, int italic)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean addFont(@NonNull FontInfo fontInfo)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int computeMatch(@NonNull FontInfo font1, @NonNull FontInfo font2)",
    "returnType" : "int",
    "comment" : "\n     * Compute matching metric between two styles - 0 is an exact match.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void deriveFont(@NonNull FontInfo srcFont, @NonNull FontInfo outFont)",
    "returnType" : "void",
    "comment" : "\n     * Try to derive a font from {@code srcFont} for the style in {@code outFont}.\n     * <p/>\n     * {@code outFont} is updated to reflect the style of the derived font.\n     * @param srcFont the source font\n     * @param outFont contains the desired font style. Updated to contain the derived font and\n     *                its style\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "DEFAULT_FONT_WEIGHT", "BOLD_FONT_WEIGHT_DELTA", "BOLD_FONT_WEIGHT", "FONT_SUFFIX_ITALIC", "FN_ALL_FONTS_LIST", "EXTENSION_OTF", "CACHE_SIZE", "sCache", "sManager", "sFamilyFinalizer", "sFontLocation", "sPostInitDelegate", "SDK_FONTS", "mFonts", "mVariant", "mPostInitRunnables", "mValid" ],
  "methodNames" : [ "public static FontFamily_Delegate getDelegate(long nativeFontFamily)", "public static synchronized void setFontLocation(String fontLocation)", "public Font getFont(int desiredWeight, boolean isItalic)", "public FontVariant getVariant()", "public boolean isValid()", "private static Font loadFont(String path)", "public static String getFontLocation()", " static boolean addFont(FontFamily thisFontFamily, String path, int ttcIndex, FontVariationAxis[] axes, int weight, int italic)", " static long nInitBuilder(String lang, int variant)", " static long nCreateFamily(long builderPtr)", " static long nGetFamilyReleaseFunc()", " static boolean nAddFont(long builderPtr, ByteBuffer font, int ttcIndex, int weight, int isItalic)", " static boolean nAddFontWeightStyle(long builderPtr, ByteBuffer font, int ttcIndex, int weight, int isItalic)", " static void nAddAxisValue(long builderPtr, int tag, float value)", " static boolean addFont(long builderPtr, final String path, final int weight, final boolean isItalic)", " static long nGetBuilderReleaseFunc()", "private void init()", "private boolean addFont(final String path, int ttcIndex, int weight, int italic)", "private boolean addFont(@NonNull String path)", "private boolean addFont(@NonNull String path, int weight, int italic)", "private boolean addFont(@NonNull FontInfo fontInfo)", "public static int computeMatch(@NonNull FontInfo font1, @NonNull FontInfo font2)", "public static void deriveFont(@NonNull FontInfo srcFont, @NonNull FontInfo outFont)" ]
}