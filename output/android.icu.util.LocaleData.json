{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/LocaleData.java",
  "packageName" : "android.icu.util",
  "className" : "LocaleData",
  "comment" : "\n * A class for accessing miscellaneous data in the locale bundles\n * @author ram\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MEASUREMENT_SYSTEM",
    "type" : "String",
    "comment" : "    private static final String EXEMPLAR_CHARS      = \"ExemplarCharacters\";",
    "links" : [ ]
  }, {
    "name" : "PAPER_SIZE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOCALE_DISPLAY_PATTERN",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PATTERN",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SEPARATOR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "noSubstitute",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "bundle",
    "type" : "ICUResourceBundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "langBundle",
    "type" : "ICUResourceBundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "langBundleException",
    "type" : "MissingResourceException",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ES_STANDARD",
    "type" : "int",
    "comment" : "\n     * EXType for {@link #getExemplarSet(int, int)}.\n     * Corresponds to the 'main' (aka 'standard') CLDR exemplars in\n     * <a href=\"http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements\">\n     *   http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.\n     * @hide unsupported on Android\n     ",
    "links" : [ "#getExemplarSet(int" ]
  }, {
    "name" : "ES_AUXILIARY",
    "type" : "int",
    "comment" : "\n     * EXType for {@link #getExemplarSet(int, int)}.\n     * Corresponds to the 'auxiliary' CLDR exemplars in\n     * <a href=\"http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements\">\n     *   http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.\n     * @hide unsupported on Android\n     ",
    "links" : [ "#getExemplarSet(int" ]
  }, {
    "name" : "ES_INDEX",
    "type" : "int",
    "comment" : "\n     * EXType for {@link #getExemplarSet(int, int)}.\n     * Corresponds to the 'index' CLDR exemplars in\n     * <a href=\"http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements\">\n     *   http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.\n     * @hide unsupported on Android\n     ",
    "links" : [ "#getExemplarSet(int" ]
  }, {
    "name" : "ES_CURRENCY",
    "type" : "int",
    "comment" : "\n     * EXType for {@link #getExemplarSet(int, int)}.\n     * Corresponds to the 'currencySymbol' CLDR exemplars in\n     * <a href=\"http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements\">\n     *   http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.\n     * Note: This type is no longer supported.\n     * @deprecated ICU 51\n     * @hide original deprecated declaration\n     ",
    "links" : [ "#getExemplarSet(int" ]
  }, {
    "name" : "ES_PUNCTUATION",
    "type" : "int",
    "comment" : "\n     * Corresponds to the 'punctuation' CLDR exemplars in\n     * <a href=\"http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements\">\n     *   http://www.unicode.org/reports/tr35/tr35-general.html#Character_Elements</a>.\n     * EXType for {@link #getExemplarSet(int, int)}.\n     * @hide unsupported on Android\n     ",
    "links" : [ "#getExemplarSet(int" ]
  }, {
    "name" : "ES_COUNT",
    "type" : "int",
    "comment" : "\n     * Count of EXTypes for {@link #getExemplarSet(int, int)}.\n     * @deprecated ICU 58 The numeric value may change over time, see ICU ticket #12420.\n     * @hide original deprecated declaration\n     ",
    "links" : [ "#getExemplarSet(int" ]
  }, {
    "name" : "QUOTATION_START",
    "type" : "int",
    "comment" : "\n     * Delimiter type for {@link #getDelimiter(int)}.\n     ",
    "links" : [ "#getDelimiter(int)" ]
  }, {
    "name" : "QUOTATION_END",
    "type" : "int",
    "comment" : "\n     * Delimiter type for {@link #getDelimiter(int)}.\n     ",
    "links" : [ "#getDelimiter(int)" ]
  }, {
    "name" : "ALT_QUOTATION_START",
    "type" : "int",
    "comment" : "\n     * Delimiter type for {@link #getDelimiter(int)}.\n     ",
    "links" : [ "#getDelimiter(int)" ]
  }, {
    "name" : "ALT_QUOTATION_END",
    "type" : "int",
    "comment" : "\n     * Delimiter type for {@link #getDelimiter(int)}.\n     ",
    "links" : [ "#getDelimiter(int)" ]
  }, {
    "name" : "DELIMITER_COUNT",
    "type" : "int",
    "comment" : "\n     * Count of delimiter types for {@link #getDelimiter(int)}.\n     * @deprecated ICU 58 The numeric value may change over time, see ICU ticket #12420.\n     * @hide original deprecated declaration\n     ",
    "links" : [ "#getDelimiter(int)" ]
  }, {
    "name" : "DELIMITER_TYPES",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "gCLDRVersion",
    "type" : "VersionInfo",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static UnicodeSet getExemplarSet(ULocale locale, int options)",
    "returnType" : "UnicodeSet",
    "comment" : "\n     * Returns the set of exemplar characters for a locale. Equivalent to calling {@link #getExemplarSet(ULocale, int, int)} with\n     * the extype == {@link #ES_STANDARD}.\n     *\n     * @param locale    Locale for which the exemplar character set\n     *                  is to be retrieved.\n     * @param options   Bitmask for options to apply to the exemplar pattern.\n     *                  Specify zero to retrieve the exemplar set as it is\n     *                  defined in the locale data.  Specify\n     *                  UnicodeSet.CASE to retrieve a case-folded exemplar\n     *                  set.  See {@link UnicodeSet#applyPattern(String,\n     *                  int)} for a complete list of valid options.  The\n     *                  IGNORE_SPACE bit is always set, regardless of the\n     *                  value of 'options'.\n     * @return          The set of exemplar characters for the given locale.\n     * @hide unsupported on Android\n     ",
    "links" : [ "android.icu.text.UnicodeSet#applyPattern(String", "#getExemplarSet(ULocale", "#ES_STANDARD" ]
  }, {
    "name" : "public static UnicodeSet getExemplarSet(ULocale locale, int options, int extype)",
    "returnType" : "UnicodeSet",
    "comment" : "\n     * Returns the set of exemplar characters for a locale.\n     * Equivalent to calling new LocaleData(locale).{@link #getExemplarSet(int, int)}.\n     *\n     * @param locale    Locale for which the exemplar character set\n     *                  is to be retrieved.\n     * @param options   Bitmask for options to apply to the exemplar pattern.\n     *                  Specify zero to retrieve the exemplar set as it is\n     *                  defined in the locale data.  Specify\n     *                  UnicodeSet.CASE to retrieve a case-folded exemplar\n     *                  set.  See {@link UnicodeSet#applyPattern(String,\n     *                  int)} for a complete list of valid options.  The\n     *                  IGNORE_SPACE bit is always set, regardless of the\n     *                  value of 'options'.\n     * @param extype    The type of exemplar character set to retrieve.\n     * @return          The set of exemplar characters for the given locale.\n     * @hide unsupported on Android\n     ",
    "links" : [ "#getExemplarSet(int", "android.icu.text.UnicodeSet#applyPattern(String" ]
  }, {
    "name" : "public UnicodeSet getExemplarSet(int options, int extype)",
    "returnType" : "UnicodeSet",
    "comment" : "\n     * Returns the set of exemplar characters for a locale.\n     *\n     * @param options   Bitmask for options to apply to the exemplar pattern.\n     *                  Specify zero to retrieve the exemplar set as it is\n     *                  defined in the locale data.  Specify\n     *                  UnicodeSet.CASE to retrieve a case-folded exemplar\n     *                  set.  See {@link UnicodeSet#applyPattern(String,\n     *                  int)} for a complete list of valid options.  The\n     *                  IGNORE_SPACE bit is always set, regardless of the\n     *                  value of 'options'.\n     * @param extype    The type of exemplar set to be retrieved,\n     *                  ES_STANDARD, ES_INDEX, ES_AUXILIARY, or ES_PUNCTUATION\n     * @return          The set of exemplar characters for the given locale.\n     *                  If there is nothing available for the locale,\n     *                  then null is returned if {@link #getNoSubstitute()} is true, otherwise the\n     *                  root value is returned (which may be UnicodeSet.EMPTY).\n     * @exception       RuntimeException if the extype is invalid.\n     * @hide unsupported on Android\n     ",
    "links" : [ "#getNoSubstitute()", "android.icu.text.UnicodeSet#applyPattern(String" ]
  }, {
    "name" : "public static final LocaleData getInstance(ULocale locale)",
    "returnType" : "LocaleData",
    "comment" : "\n     * Gets the LocaleData object associated with the ULocale specified in locale\n     *\n     * @param locale    Locale with thich the locale data object is associated.\n     * @return          A locale data object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final LocaleData getInstance()",
    "returnType" : "LocaleData",
    "comment" : "\n     * Gets the LocaleData object associated with the default <code>FORMAT</code> locale\n     *\n     * @return          A locale data object.\n     * @see Category#FORMAT\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNoSubstitute(boolean setting)",
    "returnType" : "void",
    "comment" : "\n     * Sets the \"no substitute\" behavior of this locale data object.\n     *\n     * @param setting   Value for the no substitute behavior.  If true,\n     *                  methods of this locale data object will return\n     *                  an error when no data is available for that method,\n     *                  given the locale ID supplied to the constructor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getNoSubstitute()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets the \"no substitute\" behavior of this locale data object.\n     *\n     * @return          Value for the no substitute behavior.  If true,\n     *                  methods of this locale data object will return\n     *                  an error when no data is available for that method,\n     *                  given the locale ID supplied to the constructor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDelimiter(int type)",
    "returnType" : "String",
    "comment" : "\n     * Retrieves a delimiter string from the locale data.\n     *\n     * @param type      The type of delimiter string desired.  Currently,\n     *                  the valid choices are QUOTATION_START, QUOTATION_END,\n     *                  ALT_QUOTATION_START, or ALT_QUOTATION_END.\n     * @return          The desired delimiter string.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static UResourceBundle measurementTypeBundleForLocale(ULocale locale, String measurementType)",
    "returnType" : "UResourceBundle",
    "comment" : "\n     * Utility for getMeasurementSystem and getPaperSize\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final MeasurementSystem getMeasurementSystem(ULocale locale)",
    "returnType" : "MeasurementSystem",
    "comment" : "\n     * Returns the measurement system used in the locale specified by the locale.\n     *\n     * @param locale      The locale for which the measurement system to be retrieved.\n     * @return MeasurementSystem the measurement system used in the locale.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final PaperSize getPaperSize(ULocale locale)",
    "returnType" : "PaperSize",
    "comment" : "\n     * Returns the size of paper used in the locale. The paper sizes returned are always in\n     * <em>milli-meters</em>.\n     * @param locale The locale for which the measurement system to be retrieved.\n     * @return The paper size used in the locale\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getLocaleDisplayPattern()",
    "returnType" : "String",
    "comment" : "\n     * Returns LocaleDisplayPattern for this locale, e.g., {0}({1})\n     * @return locale display pattern as a String.\n     * @hide unsupported on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getLocaleSeparator()",
    "returnType" : "String",
    "comment" : "\n     * Returns LocaleDisplaySeparator for this locale.\n     * @return locale display separator as a char.\n     * @hide unsupported on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public static VersionInfo getCLDRVersion()",
    "returnType" : "VersionInfo",
    "comment" : "\n     * Returns the current CLDR version\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static UnicodeSet getExemplarSet(ULocale locale, int options)", "public static UnicodeSet getExemplarSet(ULocale locale, int options, int extype)", "public UnicodeSet getExemplarSet(int options, int extype)", "public static final LocaleData getInstance(ULocale locale)", "public static final LocaleData getInstance()", "public void setNoSubstitute(boolean setting)", "public boolean getNoSubstitute()", "public String getDelimiter(int type)", "private static UResourceBundle measurementTypeBundleForLocale(ULocale locale, String measurementType)", "public static final MeasurementSystem getMeasurementSystem(ULocale locale)", "public static final PaperSize getPaperSize(ULocale locale)", "public String getLocaleDisplayPattern()", "public String getLocaleSeparator()", "public static VersionInfo getCLDRVersion()" ],
  "variableNames" : [ "MEASUREMENT_SYSTEM", "PAPER_SIZE", "LOCALE_DISPLAY_PATTERN", "PATTERN", "SEPARATOR", "noSubstitute", "bundle", "langBundle", "langBundleException", "ES_STANDARD", "ES_AUXILIARY", "ES_INDEX", "ES_CURRENCY", "ES_PUNCTUATION", "ES_COUNT", "QUOTATION_START", "QUOTATION_END", "ALT_QUOTATION_START", "ALT_QUOTATION_END", "DELIMITER_COUNT", "DELIMITER_TYPES", "gCLDRVersion" ]
}