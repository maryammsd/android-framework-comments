{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/metrics/CachingUmaRecorder.java",
  "packageName" : "org.chromium.base.metrics",
  "className" : "Histogram",
  "comment" : " Stores the definition and samples of a single cached histogram. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MAX_SAMPLE_COUNT",
    "type" : "int",
    "comment" : "\n         * Maximum number of cached samples in a single histogram. it is better to drop some samples\n         * rather than have a bug cause the cache to grow without limit\n         ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMin",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumBuckets",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSamples",
    "type" : "List<Integer>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " synchronized boolean addSample(@Type int type, String name, int sample, int min, int max, int numBuckets)",
    "returnType" : "boolean",
    "comment" : "\n         * Appends a sample to values cached in this histogram. Verifies that histogram definition\n         * matches the definition used to create this object: attempts to fail with an assertion,\n         * otherwise records failure statistics.\n         *\n         * @param type histogram type.\n         * @param name histogram name.\n         * @param sample sample value to cache.\n         * @param min histogram min value. Must be {@code 0} for boolean or sparse histograms.\n         * @param max histogram max value. Must be {@code 0} for boolean or sparse histograms.\n         * @param numBuckets number of histogram buckets. Must be {@code 0} for boolean or sparse\n         *         histograms.\n         * @return true if the sample was recorded.\n         ",
    "links" : [ ]
  }, {
    "name" : " synchronized int flushTo(UmaRecorder recorder)",
    "returnType" : "int",
    "comment" : "\n         * Writes all histogram samples to {@code recorder}, clears the cache.\n         *\n         * @param recorder destination {@link UmaRecorder}.\n         * @return number of flushed histogram samples.\n         ",
    "links" : [ "org.chromium.base.metrics.UmaRecorder" ]
  } ],
  "methodNames" : [ " synchronized boolean addSample(@Type int type, String name, int sample, int min, int max, int numBuckets)", " synchronized int flushTo(UmaRecorder recorder)" ],
  "variableNames" : [ "MAX_SAMPLE_COUNT", "mType", "mName", "mMin", "mMax", "mNumBuckets", "mSamples" ]
}