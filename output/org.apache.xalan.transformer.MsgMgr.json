{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/transformer/MsgMgr.java",
  "packageName" : "org.apache.xalan.transformer",
  "className" : "MsgMgr",
  "comment" : "\n * This class will manage error messages, warning messages, and other types of\n * message events.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_transformer",
    "type" : "TransformerImpl",
    "comment" : " Transformer instance          ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void message(SourceLocator srcLctr, String msg, boolean terminate) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Warn the user of a problem.\n   * This is public for access by extensions.\n   *\n   * @param msg The message text to issue\n   * @param terminate Flag indicating whether to terminate this process\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public void warn(SourceLocator srcLctr, String msg) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Warn the user of a problem.\n   *\n   * @param msg Message text to issue\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void warn(SourceLocator srcLctr, String msg, Object[] args) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Warn the user of a problem.\n   *\n   * @param msg Message text to issue\n   * @param args Arguments to pass to the message\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void warn(SourceLocator srcLctr, Node styleNode, Node sourceNode, String msg) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Warn the user of a problem.\n   *\n   * \n   * @param styleNode Stylesheet node\n   * @param sourceNode Source tree node\n   * @param msg Message text to issue\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void warn(SourceLocator srcLctr, Node styleNode, Node sourceNode, String msg, Object[] args) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Warn the user of a problem.\n   *\n   * @param styleNode Stylesheet node\n   * @param sourceNode Source tree node\n   * @param msg Message text to issue\n   * @param args Arguments to pass to the message\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void error(SourceLocator srcLctr, String msg) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Tell the user of an error, and probably throw an\n   * exception.\n   *\n   * @param msg Message text to issue\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void error(SourceLocator srcLctr, String msg, Object[] args) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Tell the user of an error, and probably throw an\n   * exception.\n   *\n   * @param msg Message text to issue\n   * @param args Arguments to be passed to the message \n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void error(SourceLocator srcLctr, String msg, Exception e) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Tell the user of an error, and probably throw an\n   * exception.\n   *\n   * @param msg Message text to issue\n   * @param e Exception to throw\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void error(SourceLocator srcLctr, String msg, Object[] args, Exception e) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Tell the user of an error, and probably throw an\n   * exception.\n   *\n   * @param msg Message text to issue\n   * @param args Arguments to use in message\n   * @param e Exception to throw\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void error(SourceLocator srcLctr, Node styleNode, Node sourceNode, String msg) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Tell the user of an error, and probably throw an\n   * exception.\n   *\n   * @param styleNode Stylesheet node\n   * @param sourceNode Source tree node\n   * @param msg Message text to issue\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  }, {
    "name" : "public void error(SourceLocator srcLctr, Node styleNode, Node sourceNode, String msg, Object[] args) throws TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Tell the user of an error, and probably throw an\n   * exception.\n   *\n   * @param styleNode Stylesheet node\n   * @param sourceNode Source tree node\n   * @param msg Message text to issue\n   * @param args Arguments to use in message\n   * @throws XSLProcessorException thrown if the active ProblemListener and XPathContext decide\n   * the error condition is severe enough to halt processing.\n   *\n   * @throws TransformerException\n   * @xsl.usage internal\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void message(SourceLocator srcLctr, String msg, boolean terminate) throws TransformerException", "public void warn(SourceLocator srcLctr, String msg) throws TransformerException", "public void warn(SourceLocator srcLctr, String msg, Object[] args) throws TransformerException", "public void warn(SourceLocator srcLctr, Node styleNode, Node sourceNode, String msg) throws TransformerException", "public void warn(SourceLocator srcLctr, Node styleNode, Node sourceNode, String msg, Object[] args) throws TransformerException", "public void error(SourceLocator srcLctr, String msg) throws TransformerException", "public void error(SourceLocator srcLctr, String msg, Object[] args) throws TransformerException", "public void error(SourceLocator srcLctr, String msg, Exception e) throws TransformerException", "public void error(SourceLocator srcLctr, String msg, Object[] args, Exception e) throws TransformerException", "public void error(SourceLocator srcLctr, Node styleNode, Node sourceNode, String msg) throws TransformerException", "public void error(SourceLocator srcLctr, Node styleNode, Node sourceNode, String msg, Object[] args) throws TransformerException" ],
  "variableNames" : [ "m_transformer" ]
}