{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/LocaleDisplayNames.java",
  "packageName" : "android.icu.text",
  "className" : "LocaleDisplayNames",
  "comment" : "\n * Returns display names of ULocales and components of ULocales. For\n * more information on language, script, region, variant, key, and\n * values, see {@link android.icu.util.ULocale}.\n ",
  "links" : [ "android.icu.util.ULocale" ],
  "variables" : [ {
    "name" : "FACTORY_DIALECTHANDLING",
    "type" : "Method",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FACTORY_DISPLAYCONTEXT",
    "type" : "Method",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static LocaleDisplayNames getInstance(ULocale locale)",
    "returnType" : "LocaleDisplayNames",
    "comment" : "\n     * Convenience overload of {@link #getInstance(ULocale, DialectHandling)} that specifies\n     * STANDARD dialect handling.\n     * @param locale the display locale\n     * @return a LocaleDisplayNames instance\n     ",
    "links" : [ "#getInstance(ULocale" ]
  }, {
    "name" : "public static LocaleDisplayNames getInstance(Locale locale)",
    "returnType" : "LocaleDisplayNames",
    "comment" : "\n     * Convenience overload of {@link #getInstance(Locale, DisplayContext...)} that specifies\n     * {@link DisplayContext#STANDARD_NAMES}.\n     * @param locale the display {@link java.util.Locale}\n     * @return a LocaleDisplayNames instance\n     ",
    "links" : [ "#getInstance(Locale", "java.util.Locale", "android.icu.text.DisplayContext#STANDARD_NAMES" ]
  }, {
    "name" : "public static LocaleDisplayNames getInstance(ULocale locale, DialectHandling dialectHandling)",
    "returnType" : "LocaleDisplayNames",
    "comment" : "\n     * Returns an instance of LocaleDisplayNames that returns names formatted for the provided locale,\n     * using the provided dialectHandling.\n     * @param locale the display locale\n     * @param dialectHandling how to select names for locales\n     * @return a LocaleDisplayNames instance\n     ",
    "links" : [ ]
  }, {
    "name" : "public static LocaleDisplayNames getInstance(ULocale locale, DisplayContext... contexts)",
    "returnType" : "LocaleDisplayNames",
    "comment" : "\n     * Returns an instance of LocaleDisplayNames that returns names formatted for the provided locale,\n     * using the provided DisplayContext settings\n     * @param locale the display locale\n     * @param contexts one or more context settings (e.g. for dialect\n     *              handling, capitalization, etc.\n     * @return a LocaleDisplayNames instance\n     ",
    "links" : [ ]
  }, {
    "name" : "public static LocaleDisplayNames getInstance(Locale locale, DisplayContext... contexts)",
    "returnType" : "LocaleDisplayNames",
    "comment" : "\n     * Returns an instance of LocaleDisplayNames that returns names formatted for the provided\n     * {@link java.util.Locale}, using the provided DisplayContext settings\n     * @param locale the display {@link java.util.Locale}\n     * @param contexts one or more context settings (e.g. for dialect\n     *              handling, capitalization, etc.\n     * @return a LocaleDisplayNames instance\n     ",
    "links" : [ "java.util.Locale" ]
  }, {
    "name" : "public abstract ULocale getLocale()",
    "returnType" : "ULocale",
    "comment" : "\n     * Returns the locale used to determine the display names. This is not necessarily the same\n     * locale passed to {@link #getInstance}.\n     * @return the display locale\n     ",
    "links" : [ "#getInstance" ]
  }, {
    "name" : "public abstract DialectHandling getDialectHandling()",
    "returnType" : "DialectHandling",
    "comment" : "\n     * Returns the dialect handling used in the display names.\n     * @return the dialect handling enum\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract DisplayContext getContext(DisplayContext.Type type)",
    "returnType" : "DisplayContext",
    "comment" : "\n     * Returns the current value for a specified DisplayContext.Type.\n     * @param type the DisplayContext.Type whose value to return\n     * @return the current DisplayContext setting for the specified type\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String localeDisplayName(ULocale locale)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided ulocale.\n     * When no display names are available for all or portions\n     * of the original locale ID, those portions may be\n     * used directly (possibly in a more canonical form) as\n     * part of the  returned display name.\n     * @param locale the locale whose display name to return\n     * @return the display name of the provided locale\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String localeDisplayName(Locale locale)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided locale.\n     * When no display names are available for all or portions\n     * of the original locale ID, those portions may be\n     * used directly (possibly in a more canonical form) as\n     * part of the  returned display name.\n     * @param locale the locale whose display name to return\n     * @return the display name of the provided locale\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String localeDisplayName(String localeId)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided locale id.\n     * When no display names are available for all or portions\n     * of the original locale ID, those portions may be\n     * used directly (possibly in a more canonical form) as\n     * part of the  returned display name.\n     * @param localeId the id of the locale whose display name to return\n     * @return the display name of the provided locale\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String languageDisplayName(String lang)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided language code.\n     * @param lang the language code\n     * @return the display name of the provided language code\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String scriptDisplayName(String script)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided script code.\n     * @param script the script code\n     * @return the display name of the provided script code\n     ",
    "links" : [ ]
  }, {
    "name" : "public String scriptDisplayNameInContext(String script)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided script code\n     * when used in the context of a full locale name.\n     * @param script the script code\n     * @return the display name of the provided script code\n     * @deprecated This API is ICU internal only.\n     * @hide original deprecated declaration\n     * @hide draft / provisional / internal are hidden on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String scriptDisplayName(int scriptCode)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided script code.  See\n     * {@link android.icu.lang.UScript} for recognized script codes.\n     * @param scriptCode the script code number\n     * @return the display name of the provided script code\n     ",
    "links" : [ "android.icu.lang.UScript" ]
  }, {
    "name" : "public abstract String regionDisplayName(String region)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided region code.\n     * @param region the region code\n     * @return the display name of the provided region code\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String variantDisplayName(String variant)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided variant.\n     * @param variant the variant string\n     * @return the display name of the provided variant\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String keyDisplayName(String key)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided locale key.\n     * @param key the locale key name\n     * @return the display name of the provided locale key\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String keyValueDisplayName(String key, String value)",
    "returnType" : "String",
    "comment" : "\n     * Returns the display name of the provided value (used with the provided key).\n     * @param key the locale key name\n     * @param value the locale key's value\n     * @return the display name of the provided value\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<UiListItem> getUiList(Set<ULocale> localeSet, boolean inSelf, Comparator<Object> collator)",
    "returnType" : "List<UiListItem>",
    "comment" : "\n     * Return a list of information used to construct a UI list of locale names.\n     * @param collator how to collateâ€”should normally be Collator.getInstance(getDisplayLocale())\n     * @param inSelf if true, compares the nameInSelf, otherwise the nameInDisplayLocale.\n     * Set depending on which field (displayLocale vs self) is to show up in the UI.\n     * If both are to show up in the UI, then it should be the one used for the primary sort order.\n     * @param localeSet a list of locales to present in a UI list. The casing uses the settings in the LocaleDisplayNames instance.\n     * @return an ordered list of UiListItems.\n     * @throws IllformedLocaleException if any of the locales in localeSet are malformed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract List<UiListItem> getUiListCompareWholeItems(Set<ULocale> localeSet, Comparator<UiListItem> comparator)",
    "returnType" : "List<UiListItem>",
    "comment" : "\n     * Return a list of information used to construct a UI list of locale names, providing more access to control the sorting.\n     * Normally use getUiList instead.\n     * @param comparator how to sort the UiListItems in the result.\n     * @param localeSet a list of locales to present in a UI list. The casing uses the settings in the LocaleDisplayNames instance.\n     * @return an ordered list of UiListItems.\n     * @throws IllformedLocaleException if any of the locales in localeSet are malformed.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static LocaleDisplayNames getInstance(ULocale locale)", "public static LocaleDisplayNames getInstance(Locale locale)", "public static LocaleDisplayNames getInstance(ULocale locale, DialectHandling dialectHandling)", "public static LocaleDisplayNames getInstance(ULocale locale, DisplayContext... contexts)", "public static LocaleDisplayNames getInstance(Locale locale, DisplayContext... contexts)", "public abstract ULocale getLocale()", "public abstract DialectHandling getDialectHandling()", "public abstract DisplayContext getContext(DisplayContext.Type type)", "public abstract String localeDisplayName(ULocale locale)", "public abstract String localeDisplayName(Locale locale)", "public abstract String localeDisplayName(String localeId)", "public abstract String languageDisplayName(String lang)", "public abstract String scriptDisplayName(String script)", "public String scriptDisplayNameInContext(String script)", "public abstract String scriptDisplayName(int scriptCode)", "public abstract String regionDisplayName(String region)", "public abstract String variantDisplayName(String variant)", "public abstract String keyDisplayName(String key)", "public abstract String keyValueDisplayName(String key, String value)", "public List<UiListItem> getUiList(Set<ULocale> localeSet, boolean inSelf, Comparator<Object> collator)", "public abstract List<UiListItem> getUiListCompareWholeItems(Set<ULocale> localeSet, Comparator<UiListItem> comparator)" ],
  "variableNames" : [ "FACTORY_DIALECTHANDLING", "FACTORY_DISPLAYCONTEXT" ]
}