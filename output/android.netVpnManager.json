{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/VpnManager.java",
  "packageName" : "android.net",
  "className" : "VpnManager",
  "comment" : "\n * This class provides an interface for apps to manage platform VPN profiles\n *\n * <p>Apps can use this API to provide profiles with which the platform can set up a VPN without\n * further app intermediation. When a VPN profile is present and the app is selected as an always-on\n * VPN, the platform will directly trigger the negotiation of the VPN without starting or waking the\n * app (unlike VpnService).\n *\n * <p>VPN apps using supported protocols should preferentially use this API over the {@link\n * VpnService} API for ease-of-development and reduced maintainance burden. This also give the user\n * the guarantee that VPN network traffic is not subjected to on-device packet interception.\n *\n * @see Ikev2VpnProfile\n ",
  "variables" : [ {
    "name" : "TYPE_VPN_NONE",
    "type" : "int",
    "comment" : " Type representing a lack of VPN @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_VPN_SERVICE",
    "type" : "int",
    "comment" : " VPN service type code @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_VPN_PLATFORM",
    "type" : "int",
    "comment" : " Platform VPN type code @hide ",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "IConnectivityManager",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static Intent getIntentForConfirmation()",
    "returnType" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Intent provisionVpnProfile(@NonNull PlatformVpnProfile profile)",
    "returnType" : "Intent",
    "comment" : "\n     * Install a VpnProfile configuration keyed on the calling app's package name.\n     *\n     * <p>This method returns {@code null} if user consent has already been granted, or an {@link\n     * Intent} to a system activity. If an intent is returned, the application should launch the\n     * activity using {@link Activity#startActivityForResult} to request user consent. The activity\n     * may pop up a dialog to require user action, and the result will come back via its {@link\n     * Activity#onActivityResult}. If the result is {@link Activity#RESULT_OK}, the user has\n     * consented, and the VPN profile can be started.\n     *\n     * @param profile the VpnProfile provided by this package. Will override any previous VpnProfile\n     *     stored for this package.\n     * @return an Intent requesting user consent to start the VPN, or null if consent is not\n     *     required based on privileges or previous user consent.\n     ",
    "links" : [ "Activity#startActivityForResult", "Activity#RESULT_OK" ]
  }, {
    "name" : "public void deleteProvisionedVpnProfile()",
    "returnType" : "void",
    "comment" : "\n     * Delete the VPN profile configuration that was provisioned by the calling app\n     *\n     * @throws SecurityException if this would violate user settings\n     ",
    "links" : [ ]
  }, {
    "name" : "public void startProvisionedVpnProfile()",
    "returnType" : "void",
    "comment" : "\n     * Request the startup of a previously provisioned VPN.\n     *\n     * @throws SecurityException exception if user or device settings prevent this VPN from being\n     *     setup, or if user consent has not been granted\n     ",
    "links" : [ ]
  }, {
    "name" : "public void stopProvisionedVpnProfile()",
    "returnType" : "void",
    "comment" : " Tear down the VPN provided by the calling app (if any) ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TYPE_VPN_NONE", "TYPE_VPN_SERVICE", "TYPE_VPN_PLATFORM", "mContext", "mService" ],
  "methodNames" : [ "private static Intent getIntentForConfirmation()", "public Intent provisionVpnProfile(@NonNull PlatformVpnProfile profile)", "public void deleteProvisionedVpnProfile()", "public void startProvisionedVpnProfile()", "public void stopProvisionedVpnProfile()" ]
}