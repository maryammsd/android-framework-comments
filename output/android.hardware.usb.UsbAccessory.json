{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/usb/UsbAccessory.java",
  "packageName" : "android.hardware.usb",
  "className" : "UsbAccessory",
  "comment" : "\n * A class representing a USB accessory, which is an external hardware component\n * that communicates with an android application over USB.\n * The accessory is the USB host and android the device side of the USB connection.\n *\n * <p>When the accessory connects, it reports its manufacturer and model names,\n * the version of the accessory, and a user visible description of the accessory to the device.\n * The manufacturer, model and version strings are used by the USB Manager to choose\n * an appropriate application for the accessory.\n * The accessory may optionally provide a unique serial number\n * and a URL to for the accessory's website to the device as well.\n *\n * <p>An instance of this class is sent to the application via the\n * {@link UsbManager#ACTION_USB_ACCESSORY_ATTACHED} Intent.\n * The application can then call {@link UsbManager#openAccessory} to open a file descriptor\n * for reading and writing data to and from the accessory.\n *\n * <div class=\"special reference\">\n * <h3>Developer Guides</h3>\n * <p>For more information about communicating with USB hardware, read the\n * <a href=\"{@docRoot}guide/topics/usb/index.html\">USB</a> developer guide.</p>\n * </div>\n ",
  "links" : [ "android.hardware.usb.UsbManager#openAccessory", "android.hardware.usb.UsbManager#ACTION_USB_ACCESSORY_ATTACHED" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mManufacturer",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mModel",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDescription",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVersion",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUri",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSerialNumberReader",
    "type" : "IUsbSerialReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MANUFACTURER_STRING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MODEL_STRING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTION_STRING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "VERSION_STRING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "URI_STRING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SERIAL_STRING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<UsbAccessory>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getManufacturer()",
    "returnType" : "String",
    "comment" : "\n     * Returns the manufacturer name of the accessory.\n     *\n     * @return the accessory manufacturer\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getModel()",
    "returnType" : "String",
    "comment" : "\n     * Returns the model name of the accessory.\n     *\n     * @return the accessory model\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDescription()",
    "returnType" : "String",
    "comment" : "\n     * Returns a user visible description of the accessory.\n     *\n     * @return the accessory description, or {@code null} if not set\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getVersion()",
    "returnType" : "String",
    "comment" : "\n     * Returns the version of the accessory.\n     *\n     * @return the accessory version, or {@code null} if not set\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getUri()",
    "returnType" : "String",
    "comment" : "\n     * Returns the URI for the accessory.\n     * This is an optional URI that might show information about the accessory\n     * or provide the option to download an application for the accessory\n     *\n     * @return the accessory URI, or {@code null} if not set\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSerial()",
    "returnType" : "String",
    "comment" : "\n     * Returns the unique serial number for the accessory.\n     * This is an optional serial number that can be used to differentiate\n     * between individual accessories of the same model and manufacturer\n     *\n     * @return the unique serial number, or {@code null} if not set\n     *\n     * @throws SecurityException if the app targets SDK >= {@value android.os.Build.VERSION_CODES#Q}\n     *                           and the app does not have permission to read from the accessory.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean compare(String s1, String s2)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getManufacturer()", "public String getModel()", "public String getDescription()", "public String getVersion()", "public String getUri()", "public String getSerial()", "private static boolean compare(String s1, String s2)", "public boolean equals(@Nullable Object obj)", "public int hashCode()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ],
  "variableNames" : [ "TAG", "mManufacturer", "mModel", "mDescription", "mVersion", "mUri", "mSerialNumberReader", "MANUFACTURER_STRING", "MODEL_STRING", "DESCRIPTION_STRING", "VERSION_STRING", "URI_STRING", "SERIAL_STRING", "CREATOR" ]
}