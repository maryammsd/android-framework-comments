{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/CombinedVibration.java",
  "packageName" : "android.os",
  "className" : "Sequential",
  "comment" : "\n     * Represents a list of {@link CombinedVibration CombinedVibrations} that should be played in\n     * sequence.\n     *\n     * @hide\n     ",
  "links" : [ "android.os.CombinedVibration" ],
  "variables" : [ {
    "name" : "MAX_HAPTIC_FEEDBACK_SEQUENCE_SIZE",
    "type" : "long",
    "comment" : " If a vibration is playing more than 3 effects, it's probably not haptic feedback",
    "links" : [ ]
  }, {
    "name" : "mEffects",
    "type" : "List<CombinedVibration>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDelays",
    "type" : "List<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<Sequential>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<CombinedVibration> getEffects()",
    "returnType" : "List<CombinedVibration>",
    "comment" : " Effects to be performed in sequence. ",
    "links" : [ ]
  }, {
    "name" : "public List<Integer> getDelays()",
    "returnType" : "List<Integer>",
    "comment" : " Delay to be applied before each effect in {@link #getEffects()}. ",
    "links" : [ "#getEffects()" ]
  }, {
    "name" : "public long getDuration()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isHapticFeedbackCandidate()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void validate()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public CombinedVibration transform(VibrationEffect.Transformation<ParamT> transformation, ParamT param)",
    "returnType" : "CombinedVibration",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public CombinedVibration adapt(VibratorAdapter adapter)",
    "returnType" : "CombinedVibration",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasVibrator(int vibratorId)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toDebugString()",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public List<CombinedVibration> getEffects()", "public List<Integer> getDelays()", "public long getDuration()", "public boolean isHapticFeedbackCandidate()", "public void validate()", "public CombinedVibration transform(VibrationEffect.Transformation<ParamT> transformation, ParamT param)", "public CombinedVibration adapt(VibratorAdapter adapter)", "public boolean hasVibrator(int vibratorId)", "public boolean equals(Object o)", "public int hashCode()", "public String toString()", "public String toDebugString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)" ],
  "variableNames" : [ "MAX_HAPTIC_FEEDBACK_SEQUENCE_SIZE", "mEffects", "mDelays", "CREATOR" ]
}