{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/flags/FeatureFlagsFake.java",
  "packageName" : "android.flags",
  "className" : "FeatureFlagsFake",
  "comment" : "\n * An implementation of {@link FeatureFlags} for testing.\n *\n * Before you read a flag from using this Fake, you must set that flag using\n * {@link #setFlagValue(BooleanFlagBase, boolean)}. This ensures that your tests are deterministic.\n *\n * If you are relying on {@link FeatureFlags#getInstance()} to access FeatureFlags in your code\n * under test, (instead of dependency injection), you can pass an instance of this fake to\n * {@link FeatureFlags#setInstance(FeatureFlags)}. Be sure to call that method again, passing null,\n * to ensure hermetic testing - you don't want static state persisting between your test methods.\n *\n * @hide\n ",
  "links" : [ "android.flags.FeatureFlags", "#setFlagValue(BooleanFlagBase", "android.flags.FeatureFlags#setInstance(FeatureFlags)", "android.flags.FeatureFlags#getInstance()" ],
  "variables" : [ {
    "name" : "mFlagValues",
    "type" : "Map<BooleanFlagBase, Boolean>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReadFlags",
    "type" : "Set<BooleanFlagBase>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isEnabled(@NonNull BooleanFlag flag)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled(@NonNull FusedOffFlag flag)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled(@NonNull FusedOnFlag flag)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isCurrentlyEnabled(@NonNull DynamicBooleanFlag flag)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void syncInternal(Set<Flag<?>> dirtyFlags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFlagValue(@NonNull BooleanFlagBase flag, boolean value)",
    "returnType" : "void",
    "comment" : "\n     * Explicitly set a flag's value for reading in tests.\n     *\n     * You _must_ call this for every flag your code-under-test will read. Otherwise, an\n     * {@link IllegalStateException} will be thrown.\n     *\n     * You are able to set values for {@link FusedOffFlag} and {@link FusedOnFlag}, despite those\n     * flags having a fixed value at compile time, since unit tests should still test the state of\n     * those flags as both true and false. I.e. a flag that is off might be turned on in a future\n     * build or vice versa.\n     *\n     * You can not call this method _after_ a non-dynamic flag has been read. Non-dynamic flags\n     * are held stable in the system, so changing a value after reading would not match\n     * real-implementation behavior.\n     *\n     * Calling this method will trigger any {@link android.flags.FeatureFlags.ChangeListener}s that\n     * are registered for the supplied flag if the flag is a {@link DynamicFlag}.\n     *\n     * @param flag  The BooleanFlag that you want to set a value for.\n     * @param value The value that the flag should return when accessed.\n     ",
    "links" : [ "android.flags.FusedOnFlag", "android.flags.DynamicFlag", "IllegalStateException", "android.flags.FeatureFlags.ChangeListener", "android.flags.FusedOffFlag" ]
  }, {
    "name" : "private boolean requireFlag(BooleanFlagBase flag)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isEnabled(@NonNull BooleanFlag flag)", "public boolean isEnabled(@NonNull FusedOffFlag flag)", "public boolean isEnabled(@NonNull FusedOnFlag flag)", "public boolean isCurrentlyEnabled(@NonNull DynamicBooleanFlag flag)", "protected void syncInternal(Set<Flag<?>> dirtyFlags)", "public void setFlagValue(@NonNull BooleanFlagBase flag, boolean value)", "private boolean requireFlag(BooleanFlagBase flag)" ],
  "variableNames" : [ "mFlagValues", "mReadFlags" ]
}