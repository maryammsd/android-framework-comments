{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/TaskSnapshot.java",
  "packageName" : "android.window",
  "className" : "TaskSnapshot",
  "comment" : "\n * Represents a task snapshot.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mId",
    "type" : "long",
    "comment" : " Identifier of this snapshot",
    "links" : [ ]
  }, {
    "name" : "mCaptureTime",
    "type" : "long",
    "comment" : " process in which the snapshot was taken (ie. this is not parceled)",
    "links" : [ ]
  }, {
    "name" : "mTopActivityComponent",
    "type" : "ComponentName",
    "comment" : " Top activity in task when snapshot was taken",
    "links" : [ ]
  }, {
    "name" : "mSnapshot",
    "type" : "HardwareBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOrientation",
    "type" : "int",
    "comment" : " Indicates whether task was in landscape or portrait ",
    "links" : [ ]
  }, {
    "name" : "mRotation",
    "type" : "int",
    "comment" : " See {@link android.view.Surface.Rotation} ",
    "links" : [ "android.view.Surface.Rotation" ]
  }, {
    "name" : "mTaskSize",
    "type" : "Point",
    "comment" : " The size of the snapshot before scaling ",
    "links" : [ ]
  }, {
    "name" : "mContentInsets",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLetterboxInsets",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsLowResolution",
    "type" : "boolean",
    "comment" : " mainly for loading snapshots quickly from disk when user is flinging fast",
    "links" : [ ]
  }, {
    "name" : "mIsRealSnapshot",
    "type" : "boolean",
    "comment" : " the task having a secure window or having previews disabled",
    "links" : [ ]
  }, {
    "name" : "mWindowingMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppearance",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsTranslucent",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasImeSurface",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColorSpace",
    "type" : "ColorSpace",
    "comment" : " Must be one of the named color spaces, otherwise, always use SRGB color space.",
    "links" : [ ]
  }, {
    "name" : "mInternalReferences",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "REFERENCE_BROADCAST",
    "type" : "int",
    "comment" : " This snapshot object is being broadcast. ",
    "links" : [ ]
  }, {
    "name" : "REFERENCE_CACHE",
    "type" : "int",
    "comment" : " This snapshot object is in the cache. ",
    "links" : [ ]
  }, {
    "name" : "REFERENCE_PERSIST",
    "type" : "int",
    "comment" : " This snapshot object is being persistent. ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TaskSnapshot>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getId()",
    "returnType" : "long",
    "comment" : "\n     * @return Identifier of this snapshot.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getCaptureTime()",
    "returnType" : "long",
    "comment" : "\n     * @return The elapsed real time (in nanoseconds) when this snapshot was captured. This time is\n     * only valid in the process where this snapshot was taken.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ComponentName getTopActivityComponent()",
    "returnType" : "ComponentName",
    "comment" : "\n     * @return The top activity component for the task at the point this snapshot was taken.\n     ",
    "links" : [ ]
  }, {
    "name" : "public GraphicBuffer getSnapshot()",
    "returnType" : "GraphicBuffer",
    "comment" : "\n     * @return The graphic buffer representing the screenshot.\n     *\n     * Note: Prefer {@link #getHardwareBuffer}, which returns the internal object. This version\n     * creates a new object.\n     ",
    "links" : [ "#getHardwareBuffer" ]
  }, {
    "name" : "public HardwareBuffer getHardwareBuffer()",
    "returnType" : "HardwareBuffer",
    "comment" : "\n     * @return The hardware buffer representing the screenshot.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ColorSpace getColorSpace()",
    "returnType" : "ColorSpace",
    "comment" : "\n     * @return The color space of hardware buffer representing the screenshot.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getOrientation()",
    "returnType" : "int",
    "comment" : "\n     * @return The screen orientation the screenshot was taken in.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getRotation()",
    "returnType" : "int",
    "comment" : "\n     * @return The screen rotation the screenshot was taken in.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Point getTaskSize()",
    "returnType" : "Point",
    "comment" : "\n     * @return The size of the task at the point this snapshot was taken.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Rect getContentInsets()",
    "returnType" : "Rect",
    "comment" : "\n     * @return The system/content insets on the snapshot. These can be clipped off in order to\n     *         remove any areas behind system bars in the snapshot.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Rect getLetterboxInsets()",
    "returnType" : "Rect",
    "comment" : "\n     * @return The letterbox insets on the snapshot. These can be clipped off in order to\n     *         remove any letterbox areas in the snapshot.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isLowResolution()",
    "returnType" : "boolean",
    "comment" : "\n     * @return Whether this snapshot is a down-sampled version of the full resolution.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isRealSnapshot()",
    "returnType" : "boolean",
    "comment" : "\n     * @return Whether or not the snapshot is a real snapshot or an app-theme generated snapshot\n     * due to the task having a secure window or having previews disabled.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isTranslucent()",
    "returnType" : "boolean",
    "comment" : "\n     * @return Whether or not the snapshot is of a translucent app window (non-fullscreen or has\n     * a non-opaque pixel format).\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasImeSurface()",
    "returnType" : "boolean",
    "comment" : "\n     * @return Whether or not the snapshot has the IME surface.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getWindowingMode()",
    "returnType" : "int",
    "comment" : "\n     * @return The windowing mode of the task when this snapshot was taken.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAppearance()",
    "returnType" : "int",
    "comment" : "\n     * @return The {@link WindowInsetsController.Appearance} flags for the top most visible\n     *         fullscreen window at the time that the snapshot was taken.\n     ",
    "links" : [ "WindowInsetsController.Appearance" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized void addReference(@ReferenceFlags int usage)",
    "returnType" : "void",
    "comment" : "\n     * Adds a reference when the object is held somewhere.\n     * Only used in core.\n     ",
    "links" : [ ]
  }, {
    "name" : "public synchronized void removeReference(@ReferenceFlags int usage)",
    "returnType" : "void",
    "comment" : "\n     * Removes a reference when the object is not held from somewhere. The snapshot will be closed\n     * once the reference becomes zero.\n     * Only used in core.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public long getId()", "public long getCaptureTime()", "public ComponentName getTopActivityComponent()", "public GraphicBuffer getSnapshot()", "public HardwareBuffer getHardwareBuffer()", "public ColorSpace getColorSpace()", "public int getOrientation()", "public int getRotation()", "public Point getTaskSize()", "public Rect getContentInsets()", "public Rect getLetterboxInsets()", "public boolean isLowResolution()", "public boolean isRealSnapshot()", "public boolean isTranslucent()", "public boolean hasImeSurface()", "public int getWindowingMode()", "public int getAppearance()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public String toString()", "public synchronized void addReference(@ReferenceFlags int usage)", "public synchronized void removeReference(@ReferenceFlags int usage)" ],
  "variableNames" : [ "mId", "mCaptureTime", "mTopActivityComponent", "mSnapshot", "mOrientation", "mRotation", "mTaskSize", "mContentInsets", "mLetterboxInsets", "mIsLowResolution", "mIsRealSnapshot", "mWindowingMode", "mAppearance", "mIsTranslucent", "mHasImeSurface", "mColorSpace", "mInternalReferences", "REFERENCE_BROADCAST", "REFERENCE_CACHE", "REFERENCE_PERSIST", "CREATOR" ]
}