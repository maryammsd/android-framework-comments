{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/stub/RcsCapabilityExchangeImplBase.java",
  "packageName" : "android.telephony.ims.stub",
  "className" : "SubscribeResponseCallback",
  "comment" : "\n     * Interface used by the framework to receive the response of the subscribe request.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onCommandError(@CommandCode int code) throws ImsException",
    "returnType" : "void",
    "comment" : "\n         * Notify the framework that the command associated with this callback has failed.\n         * <p>\n         * Must only be called when there was an error generating a SUBSCRIBE request due to an\n         * IMS stack error. This is a terminating event, so no other callback event will be\n         * expected after this callback.\n         *\n         * @param code The reason why the associated command has failed.\n         * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is\n         * not currently connected to the framework. This can happen if the\n         * {@link RcsFeature} is not\n         * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received\n         * the {@link ImsFeature#onFeatureReady()} callback. This may also happen in\n         * rare cases when the Telephony stack has crashed.\n         ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  }, {
    "name" : " void onNetworkResponse(@IntRange(from = 100, to = 699) int sipCode, @NonNull String reason) throws ImsException",
    "returnType" : "void",
    "comment" : "\n         * Notify the framework of the response to the SUBSCRIBE request from\n         * {@link #subscribeForCapabilities(Collection, SubscribeResponseCallback)}.\n         * <p>\n         * If the carrier network responds to the SUBSCRIBE request with a 2XX response, then the\n         * framework will expect the IMS stack to call {@link #onNotifyCapabilitiesUpdate},\n         * {@link #onResourceTerminated}, and {@link #onTerminated} as required for the\n         * subsequent NOTIFY responses to the subscription.\n         *\n         * If this network response also contains a “Reason” header, then the\n         * {@link #onNetworkResponse(int, String, int, String)} method should be used instead.\n         *\n         * @param sipCode The SIP response code sent from the network for the operation\n         * token specified.\n         * @param reason The optional reason response from the network. If the network\n         *  provided no reason with the sip code, the string should be empty.\n         * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is\n         * not currently connected to the framework. This can happen if the\n         * {@link RcsFeature} is not {@link ImsFeature#STATE_READY} and the\n         * {@link RcsFeature} has not received the {@link ImsFeature#onFeatureReady()} callback.\n         * This may also happen in rare cases when the Telephony stack has crashed.\n         *\n         * @deprecated Replaced sip information with the newly added\n         * {@link #onNetworkResponse(SipDetails)}.\n         ",
    "links" : [ "#onNotifyCapabilitiesUpdate", "#onTerminated", "#onNetworkResponse(SipDetails)", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "#onResourceTerminated", "android.telephony.ims.feature.ImsFeature#STATE_READY", "#onNetworkResponse(int", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase", "#subscribeForCapabilities(Collection" ]
  }, {
    "name" : " void onNetworkResponse(@IntRange(from = 100, to = 699) int sipCode, @NonNull String reasonPhrase, @IntRange(from = 100, to = 699) int reasonHeaderCause, @NonNull String reasonHeaderText) throws ImsException",
    "returnType" : "void",
    "comment" : "\n         * Notify the framework  of the response to the SUBSCRIBE request from\n         * {@link #subscribeForCapabilities(Collection, SubscribeResponseCallback)} that also\n         * includes a reason provided in the “reason” header. See RFC3326 for more\n         * information.\n         *\n         * @param sipCode The SIP response code sent from the network,\n         * @param reasonPhrase The optional reason response from the network. If the\n         * network provided no reason with the sip code, the string should be empty.\n         * @param reasonHeaderCause The “cause” parameter of the “reason” header\n         * included in the SIP message.\n         * @param reasonHeaderText The “text” parameter of the “reason” header\n         * included in the SIP message.\n         * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is\n         * not currently connected to the framework. This can happen if the\n         * {@link RcsFeature} is not\n         * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received\n         * the {@link ImsFeature#onFeatureReady()} callback. This may also happen in\n         * rare cases when the Telephony stack has crashed.\n         *\n         * @deprecated Replaced sip information with the newly added\n         * {@link #onNetworkResponse(SipDetails)}.\n         ",
    "links" : [ "#onNetworkResponse(SipDetails)", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase", "#subscribeForCapabilities(Collection" ]
  }, {
    "name" : " void onNetworkResponse(@NonNull SipDetails details) throws ImsException",
    "returnType" : "void",
    "comment" : "\n         * Notify the framework of the response to the SUBSCRIBE request from\n         * {@link #subscribeForCapabilities(Collection, SubscribeResponseCallback)}.\n         * <p>\n         * If the carrier network responds to the SUBSCRIBE request with a 2XX response, then the\n         * framework will expect the IMS stack to call {@link #onNotifyCapabilitiesUpdate},\n         * {@link #onResourceTerminated}, and {@link #onTerminated} as required for the\n         * subsequent NOTIFY responses to the subscription.\n         *\n         * @param details The SIP information related to this request.\n         * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is\n         * not currently connected to the framework. This can happen if the\n         * {@link RcsFeature} is not {@link ImsFeature#STATE_READY} and the\n         * {@link RcsFeature} has not received the {@link ImsFeature#onFeatureReady()} callback.\n         * This may also happen in rare cases when the Telephony stack has crashed.\n         ",
    "links" : [ "#onNotifyCapabilitiesUpdate", "#onTerminated", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "#onResourceTerminated", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase", "#subscribeForCapabilities(Collection" ]
  }, {
    "name" : " void onNotifyCapabilitiesUpdate(@NonNull List<String> pidfXmls) throws ImsException",
    "returnType" : "void",
    "comment" : "\n         * Notify the framework of the latest XML PIDF documents included in the network response\n         * for the requested contacts' capabilities requested by the Framework using\n         * {@link RcsUceAdapter#requestCapabilities(List, Executor,\n         * RcsUceAdapter.CapabilitiesCallback)}.\n         * <p>\n         * The expected format for the PIDF XML is defined in RFC3861. Each XML document must be a\n         * \"application/pidf+xml\" object and start with a root <presence> element. For NOTIFY\n         * responses that contain RLMI information and potentially multiple PIDF XMLs, each\n         * PIDF XML should be separated and added as a separate item in the List. This should be\n         * called every time a new NOTIFY event is received with new capability information.\n         *\n         * @param pidfXmls The list of the PIDF XML data for the contact URIs that it subscribed\n         * for.\n         * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is\n         * not currently connected to the framework.\n         * This can happen if the {@link RcsFeature} is not {@link ImsFeature#STATE_READY} and the\n         * {@link RcsFeature} {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not\n         * received the {@link ImsFeature#onFeatureReady()} callback. This may also happen in\n         * rare cases when the Telephony stack has crashed.\n         ",
    "links" : [ "android.telephony.ims.RcsUceAdapter#requestCapabilities(List", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  }, {
    "name" : " void onResourceTerminated(@NonNull List<Pair<Uri, String>> uriTerminatedReason) throws ImsException",
    "returnType" : "void",
    "comment" : "\n         * Notify the framework that a resource in the RLMI XML contained in the NOTIFY response\n         * for the ongoing SUBSCRIBE dialog has been terminated.\n         * <p>\n         * This will be used to notify the framework that a contact URI that the IMS stack has\n         * subscribed to on the Resource List Server has been terminated as well as the reason why.\n         * Usually this means that there will not be any capability information for the contact URI\n         * that they subscribed for. See RFC 4662 for more information.\n         *\n         * @param uriTerminatedReason The contact URIs which have been terminated. Each pair in the\n         * list is the contact URI and its terminated reason.\n         * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is\n         * not currently connected to the framework.\n         * This can happen if the {@link RcsFeature} is not {@link ImsFeature#STATE_READY} and the\n         * {@link RcsFeature} {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not\n         * received the {@link ImsFeature#onFeatureReady()} callback. This may also happen in\n         * rare cases when the Telephony stack has crashed.\n         ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  }, {
    "name" : " void onTerminated(@NonNull String reason, long retryAfterMilliseconds) throws ImsException",
    "returnType" : "void",
    "comment" : "\n         * The subscription associated with a previous\n         * {@link RcsUceAdapter#requestCapabilities(List, Executor,\n         * RcsUceAdapter.CapabilitiesCallback)}\n         * operation has been terminated. This will mostly be due to the network sending a final\n         * NOTIFY response due to the subscription expiring, but this may also happen due to a\n         * network error.\n         *\n         * @param reason The reason for the request being unable to process.\n         * @param retryAfterMilliseconds The time in milliseconds the requesting application should\n         * wait before retrying, if non-zero.\n         * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is\n         * not currently connected to the framework.\n         * This can happen if the {@link RcsFeature} is not {@link ImsFeature#STATE_READY} and the\n         * {@link RcsFeature} {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not\n         * received the {@link ImsFeature#onFeatureReady()} callback. This may also happen in\n         * rare cases when the Telephony stack has crashed.\n         ",
    "links" : [ "android.telephony.ims.RcsUceAdapter#requestCapabilities(List", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  } ],
  "methodNames" : [ " void onCommandError(@CommandCode int code) throws ImsException", " void onNetworkResponse(@IntRange(from = 100, to = 699) int sipCode, @NonNull String reason) throws ImsException", " void onNetworkResponse(@IntRange(from = 100, to = 699) int sipCode, @NonNull String reasonPhrase, @IntRange(from = 100, to = 699) int reasonHeaderCause, @NonNull String reasonHeaderText) throws ImsException", " void onNetworkResponse(@NonNull SipDetails details) throws ImsException", " void onNotifyCapabilitiesUpdate(@NonNull List<String> pidfXmls) throws ImsException", " void onResourceTerminated(@NonNull List<Pair<Uri, String>> uriTerminatedReason) throws ImsException", " void onTerminated(@NonNull String reason, long retryAfterMilliseconds) throws ImsException" ],
  "variableNames" : [ ]
}