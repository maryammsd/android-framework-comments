{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/soundtrigger_middleware/ISoundTriggerMiddlewareService.java",
  "packageName" : "android.media.soundtrigger_middleware",
  "className" : "Default",
  "comment" : " Default implementation for ISoundTriggerMiddlewareService. ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[] listModulesAsOriginator(android.media.permission.Identity identity) throws android.os.RemoteException",
    "returnType" : "android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[]",
    "comment" : "\n     * Query the available modules and their capabilities.\n     * \n     * This variant is intended for use by the originator of the operations for permission\n     * enforcement purposes. The provided identity's uid/pid fields will be ignored and overridden\n     * by the ones provided by Binder.getCallingUid() / Binder.getCallingPid().\n     ",
    "links" : [ ]
  }, {
    "name" : "public android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[] listModulesAsMiddleman(android.media.permission.Identity middlemanIdentity, android.media.permission.Identity originatorIdentity) throws android.os.RemoteException",
    "returnType" : "android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[]",
    "comment" : "\n     * Query the available modules and their capabilities.\n     * \n     * This variant is intended for use by a trusted \"middleman\", acting on behalf of some identity\n     * other than itself. The caller must provide:\n     * - Its own identity, which will be used to establish trust via the\n     *   SOUNDTRIGGER_DELEGATE_IDENTITY permission. This identity's uid/pid fields will be ignored\n     *   and overridden by the ones provided by Binder.getCallingUid() / Binder.getCallingPid().\n     *   This implies that the caller must clear its caller identity to protect from the case where\n     *   it resides in the same process as the callee.\n     * - The identity of the entity on behalf of which module operations are to be performed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public android.media.soundtrigger_middleware.ISoundTriggerModule attachAsOriginator(int handle, android.media.permission.Identity identity, android.media.soundtrigger_middleware.ISoundTriggerCallback callback) throws android.os.RemoteException",
    "returnType" : "android.media.soundtrigger_middleware.ISoundTriggerModule",
    "comment" : "\n     * Attach to one of the available modules.\n     * \n     * This variant is intended for use by the originator of the operations for permission\n     * enforcement purposes. The provided identity's uid/pid fields will be ignored and overridden\n     * by the ones provided by Binder.getCallingUid() / Binder.getCallingPid().\n     * \n     * listModules() must be called prior to calling this method and the provided handle must be\n     * one of the handles from the returned list.\n     ",
    "links" : [ ]
  }, {
    "name" : "public android.media.soundtrigger_middleware.ISoundTriggerModule attachAsMiddleman(int handle, android.media.permission.Identity middlemanIdentity, android.media.permission.Identity originatorIdentity, android.media.soundtrigger_middleware.ISoundTriggerCallback callback, boolean isTrusted) throws android.os.RemoteException",
    "returnType" : "android.media.soundtrigger_middleware.ISoundTriggerModule",
    "comment" : "\n     * Attach to one of the available modules.\n     * \n     * This variant is intended for use by a trusted \"middleman\", acting on behalf of some identity\n     * other than itself. The caller must provide:\n     * - Its own identity, which will be used to establish trust via the\n     *   SOUNDTRIGGER_DELEGATE_IDENTITY permission. This identity's uid/pid fields will be ignored\n     *   and overridden by the ones provided by Binder.getCallingUid() / Binder.getCallingPid().\n     *   This implies that the caller must clear its caller identity to protect from the case where\n     *   it resides in the same process as the callee.\n     * - The identity of the entity on behalf of which module operations are to be performed.\n     * @param isTrusted - {@code true} if the middleware should not audit data delivery, since the\n     * callback is being delivered to another trusted component which will audit access.\n     * listModules() must be called prior to calling this method and the provided handle must be\n     * one of the handles from the returned list.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void attachFakeHalInjection(android.media.soundtrigger_middleware.ISoundTriggerInjection injection) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "\n     * Attach an injection interface interface to the ST mock HAL.\n     * See {@link ISoundTriggerInjection} for injection details.\n     * If another client attaches, this session will be pre-empted.\n     ",
    "links" : [ "android.media.soundtrigger_middleware.ISoundTriggerInjection" ]
  }, {
    "name" : "public android.os.IBinder asBinder()",
    "returnType" : "android.os.IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[] listModulesAsOriginator(android.media.permission.Identity identity) throws android.os.RemoteException", "public android.media.soundtrigger_middleware.SoundTriggerModuleDescriptor[] listModulesAsMiddleman(android.media.permission.Identity middlemanIdentity, android.media.permission.Identity originatorIdentity) throws android.os.RemoteException", "public android.media.soundtrigger_middleware.ISoundTriggerModule attachAsOriginator(int handle, android.media.permission.Identity identity, android.media.soundtrigger_middleware.ISoundTriggerCallback callback) throws android.os.RemoteException", "public android.media.soundtrigger_middleware.ISoundTriggerModule attachAsMiddleman(int handle, android.media.permission.Identity middlemanIdentity, android.media.permission.Identity originatorIdentity, android.media.soundtrigger_middleware.ISoundTriggerCallback callback, boolean isTrusted) throws android.os.RemoteException", "public void attachFakeHalInjection(android.media.soundtrigger_middleware.ISoundTriggerInjection injection) throws android.os.RemoteException", "public android.os.IBinder asBinder()" ],
  "variableNames" : [ ]
}