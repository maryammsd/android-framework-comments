{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/CalendarContract.java",
  "packageName" : "android.provider",
  "className" : "CalendarAlerts",
  "comment" : "\n     * Fields and helpers for accessing calendar alerts information. These\n     * fields are for tracking which alerts have been fired. Scheduled alarms\n     * will generate an intent using {@link #ACTION_EVENT_REMINDER}. Apps that\n     * receive this action may update the {@link #STATE} for the reminder when\n     * they have finished handling it. Apps that have their notifications\n     * disabled should not modify the table to ensure that they do not conflict\n     * with another app that is generating a notification. In general, apps\n     * should not need to write to this table directly except to update the\n     * state of a reminder.\n     ",
  "links" : [ "#ACTION_EVENT_REMINDER", "#STATE" ],
  "variables" : [ {
    "name" : "TABLE_NAME",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The Uri for querying calendar alert information\n         ",
    "links" : [ ]
  }, {
    "name" : "WHERE_ALARM_EXISTS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WHERE_FINDNEXTALARMTIME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SORT_ORDER_ALARMTIME_ASC",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WHERE_RESCHEDULE_MISSED_ALARMS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONTENT_URI_BY_INSTANCE",
    "type" : "Uri",
    "comment" : "\n         * This URI is for grouping the query results by event_id and begin\n         * time.  This will return one result per instance of an event.  So\n         * events with multiple alarms will appear just once, but multiple\n         * instances of a repeating event will show up multiple times.\n         ",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static final Uri insert(ContentResolver cr, long eventId, long begin, long end, long alarmTime, int minutes)",
    "returnType" : "Uri",
    "comment" : "\n         * Helper for inserting an alarm time associated with an event TODO move\n         * to Provider\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static final long findNextAlarmTime(ContentResolver cr, long millis)",
    "returnType" : "long",
    "comment" : "\n         * Finds the next alarm after (or equal to) the given time and returns\n         * the time of that alarm or -1 if no such alarm exists. This is a\n         * blocking call and should not be done on the UI thread. TODO move to\n         * provider\n         *\n         * @param cr the ContentResolver\n         * @param millis the time in UTC milliseconds\n         * @return the next alarm time greater than or equal to \"millis\", or -1\n         *         if no such alarm exists.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static final void rescheduleMissedAlarms(ContentResolver cr, Context context, AlarmManager manager)",
    "returnType" : "void",
    "comment" : "\n         * Searches the CalendarAlerts table for alarms that should have fired\n         * but have not and then reschedules them. This method can be called at\n         * boot time to restore alarms that may have been lost due to a phone\n         * reboot. TODO move to provider\n         *\n         * @param cr the ContentResolver\n         * @param context the Context\n         * @param manager the AlarmManager\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static void scheduleAlarm(Context context, AlarmManager manager, long alarmTime)",
    "returnType" : "void",
    "comment" : "\n         * Schedules an alarm intent with the system AlarmManager that will\n         * notify listeners when a reminder should be fired. The provider will\n         * keep scheduled reminders up to date but apps may use this to\n         * implement snooze functionality without modifying the reminders table.\n         * Scheduled alarms will generate an intent using\n         * {@link #ACTION_EVENT_REMINDER}. TODO Move to provider\n         *\n         * @param context A context for referencing system resources\n         * @param manager The AlarmManager to use or null\n         * @param alarmTime The time to fire the intent in UTC millis since\n         *            epoch\n         * @hide\n         ",
    "links" : [ "#ACTION_EVENT_REMINDER" ]
  }, {
    "name" : "public static final boolean alarmExists(ContentResolver cr, long eventId, long begin, long alarmTime)",
    "returnType" : "boolean",
    "comment" : "\n         * Searches for an entry in the CalendarAlerts table that matches the\n         * given event id, begin time and alarm time. If one is found then this\n         * alarm already exists and this method returns true. TODO Move to\n         * provider\n         *\n         * @param cr the ContentResolver\n         * @param eventId the event id to match\n         * @param begin the start time of the event in UTC millis\n         * @param alarmTime the alarm time of the event in UTC millis\n         * @return true if there is already an alarm for the given event with\n         *         the same start time and alarm time.\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static final Uri insert(ContentResolver cr, long eventId, long begin, long end, long alarmTime, int minutes)", "public static final long findNextAlarmTime(ContentResolver cr, long millis)", "public static final void rescheduleMissedAlarms(ContentResolver cr, Context context, AlarmManager manager)", "public static void scheduleAlarm(Context context, AlarmManager manager, long alarmTime)", "public static final boolean alarmExists(ContentResolver cr, long eventId, long begin, long alarmTime)" ],
  "variableNames" : [ "TABLE_NAME", "CONTENT_URI", "WHERE_ALARM_EXISTS", "WHERE_FINDNEXTALARMTIME", "SORT_ORDER_ALARMTIME_ASC", "WHERE_RESCHEDULE_MISSED_ALARMS", "CONTENT_URI_BY_INSTANCE", "DEBUG" ]
}