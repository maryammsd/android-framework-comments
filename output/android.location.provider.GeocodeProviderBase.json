{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/provider/GeocodeProviderBase.java",
  "packageName" : "android.location.provider",
  "className" : "GeocodeProviderBase",
  "comment" : "\n * Base class for geocode providers outside the system server.\n *\n * <p>Geocode providers should be wrapped in a non-exported service which returns the result of\n * {@link #getBinder()} from the service's {@link android.app.Service#onBind(Intent)} method. The\n * service should not be exported so that components other than the system server cannot bind to it.\n * Alternatively, the service may be guarded by a permission that only system server can obtain. The\n * service may specify metadata on its capabilities:\n *\n * <ul>\n *   <li>\"serviceVersion\": An integer version code to help tie break if multiple services are\n *       capable of implementing the geocode provider. All else equal, the service with the highest\n *       version code will be chosen. Assumed to be 0 if not specified.\n *   <li>\"serviceIsMultiuser\": A boolean property, indicating if the service wishes to take\n *       responsibility for handling changes to the current user on the device. If true, the service\n *       will always be bound from the system user. If false, the service will always be bound from\n *       the current user. If the current user changes, the old binding will be released, and a new\n *       binding established under the new user. Assumed to be false if not specified.\n * </ul>\n *\n * <p>The service should have an intent filter in place for the geocode provider as specified by the\n * constant in this class.\n *\n * <p>Geocode providers are identified by their UID / package name / attribution tag. Based on this\n * identity, geocode providers may be given some special privileges.\n *\n * @hide\n ",
  "links" : [ "#getBinder()", "android.app.Service#onBind(Intent)" ],
  "variables" : [ {
    "name" : "ACTION_GEOCODE_PROVIDER",
    "type" : "String",
    "comment" : "\n     * The action the wrapping service should have in its intent filter to implement the geocode\n     * provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "mTag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAttributionTag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final IBinder getBinder()",
    "returnType" : "IBinder",
    "comment" : "\n     * Returns the IBinder instance that should be returned from the {@link\n     * android.app.Service#onBind(Intent)} method of the wrapping service.\n     ",
    "links" : [ "android.app.Service#onBind(Intent)" ]
  }, {
    "name" : "public abstract void onForwardGeocode(@NonNull ForwardGeocodeRequest request, @NonNull OutcomeReceiver<List<Address>, Throwable> callback)",
    "returnType" : "void",
    "comment" : "\n     * Requests forward geocoding of the given arguments. The given callback must be invoked once.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onReverseGeocode(@NonNull ReverseGeocodeRequest request, @NonNull OutcomeReceiver<List<Address>, Throwable> callback)",
    "returnType" : "void",
    "comment" : "\n     * Requests reverse geocoding of the given arguments. The given callback must be invoked once.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final IBinder getBinder()", "public abstract void onForwardGeocode(@NonNull ForwardGeocodeRequest request, @NonNull OutcomeReceiver<List<Address>, Throwable> callback)", "public abstract void onReverseGeocode(@NonNull ReverseGeocodeRequest request, @NonNull OutcomeReceiver<List<Address>, Throwable> callback)" ],
  "variableNames" : [ "ACTION_GEOCODE_PROVIDER", "mTag", "mAttributionTag", "mBinder" ]
}