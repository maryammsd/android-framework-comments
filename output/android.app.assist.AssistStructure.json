{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/assist/AssistStructure.java",
  "packageName" : "android.app.assist",
  "className" : "AssistStructure",
  "comment" : "\n * <p>This API automatically creates assist data from the platform's\n * implementation of assist and autofill.\n *\n * <p>The structure is used for assist purposes when created by\n * {@link android.app.Activity#onProvideAssistData}, {@link View#onProvideStructure(ViewStructure)},\n * or {@link View#onProvideVirtualStructure(ViewStructure)}.\n *\n * <p>The structure is also used for autofill purposes when created by\n * {@link View#onProvideAutofillStructure(ViewStructure, int)},\n * or {@link View#onProvideAutofillVirtualStructure(ViewStructure, int)}.\n *\n * <p>For performance reasons, some properties of the assist data might only be available for\n * assist or autofill purposes. In those cases, a property's availability will be documented\n * in its javadoc.\n *\n * <p>To learn about using Autofill in your app, read the\n * <a href=\"/guide/topics/text/autofill\">Autofill Framework</a> guides.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG_PARCEL",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG_PARCEL_CHILDREN",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG_PARCEL_TREE",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VALIDATE_WINDOW_TOKEN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VALIDATE_VIEW_TOKEN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHaveData",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTaskId",
    "type" : "int",
    "comment" : " The task id and component of the activity which this assist structure is for",
    "links" : [ ]
  }, {
    "name" : "mActivityComponent",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsHomeActivity",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutofillFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowNodes",
    "type" : "ArrayList<WindowNode>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingAsyncChildren",
    "type" : "ArrayList<ViewNodeBuilder>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSendChannel",
    "type" : "SendChannel",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReceiveChannel",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTmpRect",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSanitizeOnWrite",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAcquisitionStartTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAcquisitionEndTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRANSACTION_XFER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTOR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AssistStructure>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setAcquisitionStartTime(long acquisitionStartTime)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setAcquisitionEndTime(long acquisitionEndTime)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setHomeActivity(boolean isHomeActivity)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     * Set the home activity flag.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getAcquisitionStartTime()",
    "returnType" : "long",
    "comment" : "\n     * Returns the time when the activity started generating assist data to build the\n     * AssistStructure. The time is as specified by {@link SystemClock#uptimeMillis()}.\n     *\n     * @see #getAcquisitionEndTime()\n     * @return Returns the acquisition start time of the assist data, in milliseconds.\n     ",
    "links" : [ "android.os.SystemClock#uptimeMillis()" ]
  }, {
    "name" : "public long getAcquisitionEndTime()",
    "returnType" : "long",
    "comment" : "\n     * Returns the time when the activity finished generating assist data to build the\n     * AssistStructure. The time is as specified by {@link SystemClock#uptimeMillis()}.\n     *\n     * @see #getAcquisitionStartTime()\n     * @return Returns the acquisition end time of the assist data, in milliseconds.\n     ",
    "links" : [ "android.os.SystemClock#uptimeMillis()" ]
  }, {
    "name" : "public void sanitizeForParceling(boolean sanitize)",
    "returnType" : "void",
    "comment" : "\n     * Helper method used to sanitize the structure before it's written to a parcel.\n     *\n     * <p>Used just on autofill.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void dump(boolean showSensitive)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " void dump(String prefix, ViewNode node, boolean showSensitive)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTaskId(int taskId)",
    "returnType" : "void",
    "comment" : "\n     * Sets the task id is associated with the activity from which this AssistStructure was\n     * generated.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTaskId()",
    "returnType" : "int",
    "comment" : "\n     * @return The task id for the associated activity.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setActivityComponent(ComponentName componentName)",
    "returnType" : "void",
    "comment" : "\n     * Sets the activity that is associated with this AssistStructure.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public ComponentName getActivityComponent()",
    "returnType" : "ComponentName",
    "comment" : "\n     * Return the activity this AssistStructure came from.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isHomeActivity()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the activity associated with this AssistStructure was the home activity\n     * (Launcher) at the time the assist data was acquired.\n     * @return Whether the activity was the home activity.\n     * @see android.content.Intent#CATEGORY_HOME\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getWindowNodeCount()",
    "returnType" : "int",
    "comment" : "\n     * Return the number of window contents that have been collected in this assist data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public WindowNode getWindowNodeAt(int index)",
    "returnType" : "WindowNode",
    "comment" : "\n     * Return one of the windows in the assist data.\n     * @param index Which window to retrieve, may be 0 to {@link #getWindowNodeCount()}-1.\n     ",
    "links" : [ "#getWindowNodeCount()" ]
  }, {
    "name" : "public void ensureDataForAutofill()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void ensureData()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " boolean waitForReady()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clearSendChannel()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DEBUG_PARCEL", "DEBUG_PARCEL_CHILDREN", "DEBUG_PARCEL_TREE", "VALIDATE_WINDOW_TOKEN", "VALIDATE_VIEW_TOKEN", "mHaveData", "mTaskId", "mActivityComponent", "mIsHomeActivity", "mFlags", "mAutofillFlags", "mWindowNodes", "mPendingAsyncChildren", "mSendChannel", "mReceiveChannel", "mTmpRect", "mSanitizeOnWrite", "mAcquisitionStartTime", "mAcquisitionEndTime", "TRANSACTION_XFER", "DESCRIPTOR", "CREATOR" ],
  "methodNames" : [ "public void setAcquisitionStartTime(long acquisitionStartTime)", "public void setAcquisitionEndTime(long acquisitionEndTime)", "public void setHomeActivity(boolean isHomeActivity)", "public long getAcquisitionStartTime()", "public long getAcquisitionEndTime()", "public void sanitizeForParceling(boolean sanitize)", "public void dump(boolean showSensitive)", " void dump(String prefix, ViewNode node, boolean showSensitive)", "public void setTaskId(int taskId)", "public int getTaskId()", "public void setActivityComponent(ComponentName componentName)", "public ComponentName getActivityComponent()", "public int getFlags()", "public boolean isHomeActivity()", "public int getWindowNodeCount()", "public WindowNode getWindowNodeAt(int index)", "public void ensureDataForAutofill()", "public void ensureData()", " boolean waitForReady()", "public void clearSendChannel()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)" ]
}