{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/sip/SipStack.java",
  "packageName" : "javax.sip",
  "className" : "SipStack",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " ListeningPoint createListeningPoint(int port, String transport) throws TransportNotSupportedException, InvalidArgumentException",
    "returnType" : "ListeningPoint",
    "comment" : "\n     * Deprecated. Use {@link #createListeningPoint(String, int, String)}\n     * instead.\n     ",
    "links" : [ "#createListeningPoint(String" ]
  }, {
    "name" : " ListeningPoint createListeningPoint(String ipAddress, int port, String transport) throws TransportNotSupportedException, InvalidArgumentException",
    "returnType" : "ListeningPoint",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void deleteListeningPoint(ListeningPoint listeningPoint) throws ObjectInUseException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " SipProvider createSipProvider(ListeningPoint listeningPoint) throws ObjectInUseException",
    "returnType" : "SipProvider",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void deleteSipProvider(SipProvider sipProvider) throws ObjectInUseException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Collection getDialogs()",
    "returnType" : "Collection",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String getIPAddress()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Iterator getListeningPoints()",
    "returnType" : "Iterator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Router getRouter()",
    "returnType" : "Router",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Iterator getSipProviders()",
    "returnType" : "Iterator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " String getStackName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isRetransmissionFilterActive()",
    "returnType" : "boolean",
    "comment" : "\n     * @deprecated\n     * Use {@link ServerTransaction#enableRetransmissionAlerts()} to enable\n     * retransmission alerts instead.\n     ",
    "links" : [ "javax.sip.ServerTransaction#enableRetransmissionAlerts()" ]
  }, {
    "name" : " void start() throws ProviderDoesNotExistException, SipException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void stop()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " ListeningPoint createListeningPoint(int port, String transport) throws TransportNotSupportedException, InvalidArgumentException", " ListeningPoint createListeningPoint(String ipAddress, int port, String transport) throws TransportNotSupportedException, InvalidArgumentException", " void deleteListeningPoint(ListeningPoint listeningPoint) throws ObjectInUseException", " SipProvider createSipProvider(ListeningPoint listeningPoint) throws ObjectInUseException", " void deleteSipProvider(SipProvider sipProvider) throws ObjectInUseException", " Collection getDialogs()", " String getIPAddress()", " Iterator getListeningPoints()", " Router getRouter()", " Iterator getSipProviders()", " String getStackName()", " boolean isRetransmissionFilterActive()", " void start() throws ProviderDoesNotExistException, SipException", " void stop()" ],
  "variableNames" : [ ]
}