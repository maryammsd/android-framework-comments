{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/audio/common/AidlConversion.java",
  "packageName" : "android.media.audio.common",
  "className" : "AidlConversion",
  "comment" : "\n * This class provides utility functions for converting between\n * the AIDL types defined in 'android.media.audio.common' and:\n *  - SDK (Java API) types from 'android.media';\n *  - legacy native (system/audio.h) types.\n *\n * Methods that convert between AIDL and SDK types are called\n * using the following pattern:\n *\n *  aidl2api_AIDL-type-name_SDK-type-name\n *  api2aidl_SDK-type-name_AIDL-type-name\n *\n * Since the range of the SDK values is generally narrower than\n * the range of AIDL values, when a match can't be found, the\n * conversion function returns a corresponding 'INVALID' value.\n *\n * Methods that convert between AIDL and legacy types are called\n * using the following pattern:\n *\n *  aidl2legacy_AIDL-type-name_native-type-name\n *  legacy2aidl_native-type-name_AIDL-type-name\n *\n * In general, there is a 1:1 mapping between AIDL and framework\n * types, and a failure to convert a value indicates a programming\n * error. Thus, the conversion functions may throw an IllegalArgumentException.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static int aidl2legacy_AudioChannelLayout_audio_channel_mask_t(@NonNull AudioChannelLayout aidl, boolean isInput)",
    "returnType" : "int",
    "comment" : " Convert from AIDL AudioChannelLayout to legacy audio_channel_mask_t. ",
    "links" : [ ]
  }, {
    "name" : "public static AudioChannelLayout legacy2aidl_audio_channel_mask_t_AudioChannelLayout(int legacy, boolean isInput)",
    "returnType" : "AudioChannelLayout",
    "comment" : " Convert from legacy audio_channel_mask_t to AIDL AudioChannelLayout. ",
    "links" : [ ]
  }, {
    "name" : "public static int aidl2legacy_AudioFormatDescription_audio_format_t(@NonNull AudioFormatDescription aidl)",
    "returnType" : "int",
    "comment" : " Convert from AIDL AudioFormatDescription to legacy audio_format_t. ",
    "links" : [ ]
  }, {
    "name" : "public static AudioFormatDescription legacy2aidl_audio_format_t_AudioFormatDescription(int legacy)",
    "returnType" : "AudioFormatDescription",
    "comment" : " Convert from legacy audio_format_t to AIDL AudioFormatDescription. ",
    "links" : [ ]
  }, {
    "name" : "public static native int aidl2legacy_AudioEncapsulationMode_audio_encapsulation_mode_t(int aidl)",
    "returnType" : "int",
    "comment" : " Convert from AIDL AudioEncapsulationMode to legacy audio_encapsulation_mode_t. ",
    "links" : [ ]
  }, {
    "name" : "public static native int legacy2aidl_audio_encapsulation_mode_t_AudioEncapsulationMode(int legacy)",
    "returnType" : "int",
    "comment" : " Convert from legacy audio_encapsulation_mode_t to AIDL AudioEncapsulationMode. ",
    "links" : [ ]
  }, {
    "name" : "public static native int aidl2legacy_AudioStreamType_audio_stream_type_t(int aidl)",
    "returnType" : "int",
    "comment" : " Convert from AIDL AudioStreamType to legacy audio_stream_type_t. ",
    "links" : [ ]
  }, {
    "name" : "public static native int legacy2aidl_audio_stream_type_t_AudioStreamType(int legacy)",
    "returnType" : "int",
    "comment" : " Convert from legacy audio_stream_type_t to AIDL AudioStreamType. ",
    "links" : [ ]
  }, {
    "name" : "public static native int aidl2legacy_AudioUsage_audio_usage_t(int aidl)",
    "returnType" : "int",
    "comment" : " Convert from AIDL AudioUsage to legacy audio_usage_t. ",
    "links" : [ ]
  }, {
    "name" : "public static native int legacy2aidl_audio_usage_t_AudioUsage(int legacy)",
    "returnType" : "int",
    "comment" : " Convert from legacy audio_usage_t to AIDL AudioUsage. ",
    "links" : [ ]
  }, {
    "name" : "private static int aidl2api_AudioChannelLayoutBit_AudioFormatChannel(int aidlBit, boolean isInput)",
    "returnType" : "int",
    "comment" : " Convert from a channel bit of AIDL AudioChannelLayout to SDK AudioFormat.CHANNEL_* bit. ",
    "links" : [ ]
  }, {
    "name" : "private static int aidl2api_AudioChannelLayoutBitMask_AudioFormatChannelMask(int aidlBitMask, boolean isInput)",
    "returnType" : "int",
    "comment" : "\n     * Convert from a channel bitmask of AIDL AudioChannelLayout to\n     * SDK AudioFormat.CHANNEL_* bitmask.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int aidl2api_AudioChannelLayout_AudioFormatChannelMask(@NonNull AudioChannelLayout aidlMask, boolean isInput)",
    "returnType" : "int",
    "comment" : " Convert from AIDL AudioChannelLayout to SDK AudioFormat.CHANNEL_*. ",
    "links" : [ ]
  }, {
    "name" : "public static AudioFormat aidl2api_AudioConfig_AudioFormat(@NonNull AudioConfig aidl, boolean isInput)",
    "returnType" : "AudioFormat",
    "comment" : " Convert from AIDL AudioConfig to SDK AudioFormat. ",
    "links" : [ ]
  }, {
    "name" : "public static AudioFormat aidl2api_AudioConfigBase_AudioFormat(@NonNull AudioConfigBase aidl, boolean isInput)",
    "returnType" : "AudioFormat",
    "comment" : " Convert from AIDL AudioConfigBase to SDK AudioFormat. ",
    "links" : [ ]
  }, {
    "name" : "public static int aidl2api_AudioFormat_AudioFormatEncoding(@NonNull AudioFormatDescription aidl)",
    "returnType" : "int",
    "comment" : " Convert from AIDL AudioFormat to SDK AudioFormat.ENCODING_*. ",
    "links" : [ ]
  }, {
    "name" : "public static AudioPort api2aidl_AudioDeviceAttributes_AudioPort(@NonNull AudioDeviceAttributes attributes)",
    "returnType" : "AudioPort",
    "comment" : "\n     * Convert from SDK AudioDeviceAttributes to AIDL AudioPort.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ExtraAudioDescriptor api2aidl_AudioDescriptor_ExtraAudioDescriptor(@NonNull AudioDescriptor descriptor)",
    "returnType" : "ExtraAudioDescriptor",
    "comment" : "\n     * Convert from SDK AudioDescriptor to AIDL ExtraAudioDescriptor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static AudioDescriptor aidl2api_ExtraAudioDescriptor_AudioDescriptor(@NonNull ExtraAudioDescriptor extraDescriptor)",
    "returnType" : "AudioDescriptor",
    "comment" : "\n     * Convert from SDK AudioDescriptor to AIDL ExtraAudioDescriptor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int api2aidl_AudioDescriptorStandard_AudioStandard(@AudioDescriptor.AudioDescriptorStandard int standard)",
    "returnType" : "int",
    "comment" : "\n     * Convert from SDK AudioDescriptor#mStandard to AIDL AudioStandard\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int aidl2api_AudioStandard_AudioDescriptorStandard(@AudioStandard int standard)",
    "returnType" : "int",
    "comment" : "\n     * Convert from AIDL AudioStandard to SDK AudioDescriptor#mStandard\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int api2aidl_AudioProfileEncapsulationType_AudioEncapsulationType(@android.media.AudioProfile.EncapsulationType int type)",
    "returnType" : "int",
    "comment" : "\n     * Convert from SDK AudioProfile.EncapsulationType to AIDL AudioEncapsulationType\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int aidl2api_AudioEncapsulationType_AudioProfileEncapsulationType(@AudioEncapsulationType int type)",
    "returnType" : "int",
    "comment" : "\n     * Convert from AIDL AudioEncapsulationType to SDK AudioProfile.EncapsulationType\n     ",
    "links" : [ ]
  }, {
    "name" : "public static AudioDeviceDescription api2aidl_NativeType_AudioDeviceDescription(int nativeType)",
    "returnType" : "AudioDeviceDescription",
    "comment" : "\n     * Convert from SDK native type to AIDL AudioDeviceDescription\n     ",
    "links" : [ ]
  }, {
    "name" : "private static native int aidl2legacy_AudioChannelLayout_Parcel_audio_channel_mask_t(Parcel aidl, boolean isInput)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native Parcel legacy2aidl_audio_channel_mask_t_AudioChannelLayout_Parcel(int legacy, boolean isInput)",
    "returnType" : "Parcel",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native int aidl2legacy_AudioFormatDescription_Parcel_audio_format_t(Parcel aidl)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native Parcel legacy2aidl_audio_format_t_AudioFormatDescription_Parcel(int legacy)",
    "returnType" : "Parcel",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int aidl2legacy_AudioChannelLayout_audio_channel_mask_t(@NonNull AudioChannelLayout aidl, boolean isInput)", "public static AudioChannelLayout legacy2aidl_audio_channel_mask_t_AudioChannelLayout(int legacy, boolean isInput)", "public static int aidl2legacy_AudioFormatDescription_audio_format_t(@NonNull AudioFormatDescription aidl)", "public static AudioFormatDescription legacy2aidl_audio_format_t_AudioFormatDescription(int legacy)", "public static native int aidl2legacy_AudioEncapsulationMode_audio_encapsulation_mode_t(int aidl)", "public static native int legacy2aidl_audio_encapsulation_mode_t_AudioEncapsulationMode(int legacy)", "public static native int aidl2legacy_AudioStreamType_audio_stream_type_t(int aidl)", "public static native int legacy2aidl_audio_stream_type_t_AudioStreamType(int legacy)", "public static native int aidl2legacy_AudioUsage_audio_usage_t(int aidl)", "public static native int legacy2aidl_audio_usage_t_AudioUsage(int legacy)", "private static int aidl2api_AudioChannelLayoutBit_AudioFormatChannel(int aidlBit, boolean isInput)", "private static int aidl2api_AudioChannelLayoutBitMask_AudioFormatChannelMask(int aidlBitMask, boolean isInput)", "public static int aidl2api_AudioChannelLayout_AudioFormatChannelMask(@NonNull AudioChannelLayout aidlMask, boolean isInput)", "public static AudioFormat aidl2api_AudioConfig_AudioFormat(@NonNull AudioConfig aidl, boolean isInput)", "public static AudioFormat aidl2api_AudioConfigBase_AudioFormat(@NonNull AudioConfigBase aidl, boolean isInput)", "public static int aidl2api_AudioFormat_AudioFormatEncoding(@NonNull AudioFormatDescription aidl)", "public static AudioPort api2aidl_AudioDeviceAttributes_AudioPort(@NonNull AudioDeviceAttributes attributes)", "public static ExtraAudioDescriptor api2aidl_AudioDescriptor_ExtraAudioDescriptor(@NonNull AudioDescriptor descriptor)", "public static AudioDescriptor aidl2api_ExtraAudioDescriptor_AudioDescriptor(@NonNull ExtraAudioDescriptor extraDescriptor)", "public static int api2aidl_AudioDescriptorStandard_AudioStandard(@AudioDescriptor.AudioDescriptorStandard int standard)", "public static int aidl2api_AudioStandard_AudioDescriptorStandard(@AudioStandard int standard)", "public static int api2aidl_AudioProfileEncapsulationType_AudioEncapsulationType(@android.media.AudioProfile.EncapsulationType int type)", "public static int aidl2api_AudioEncapsulationType_AudioProfileEncapsulationType(@AudioEncapsulationType int type)", "public static AudioDeviceDescription api2aidl_NativeType_AudioDeviceDescription(int nativeType)", "private static native int aidl2legacy_AudioChannelLayout_Parcel_audio_channel_mask_t(Parcel aidl, boolean isInput)", "private static native Parcel legacy2aidl_audio_channel_mask_t_AudioChannelLayout_Parcel(int legacy, boolean isInput)", "private static native int aidl2legacy_AudioFormatDescription_Parcel_audio_format_t(Parcel aidl)", "private static native Parcel legacy2aidl_audio_format_t_AudioFormatDescription_Parcel(int legacy)" ],
  "variableNames" : [ ]
}