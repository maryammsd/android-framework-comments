{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/cert/CertPathBuilderResult.java",
  "packageName" : "java.security.cert",
  "className" : "CertPathBuilderResult",
  "comment" : "\n * A specification of the result of a certification path builder algorithm.\n * All results returned by the {@link CertPathBuilder#build\n * CertPathBuilder.build} method must implement this interface.\n * <p>\n * At a minimum, a {@code CertPathBuilderResult} contains the\n * {@code CertPath} built by the {@code CertPathBuilder} instance.\n * Implementations of this interface may add methods to return implementation\n * or algorithm specific information, such as debugging information or\n * certification path validation results.\n * <p>\n * <b>Concurrent Access</b>\n * <p>\n * Unless otherwise specified, the methods defined in this interface are not\n * thread-safe. Multiple threads that need to access a single\n * object concurrently should synchronize amongst themselves and\n * provide the necessary locking. Multiple threads each manipulating\n * separate objects need not synchronize.\n *\n * @see CertPathBuilder\n *\n * @since       1.4\n * @author      Sean Mullan\n ",
  "links" : [ "java.security.cert.CertPathBuilder#buildCertPathBuilder.build" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " CertPath getCertPath()",
    "returnType" : "CertPath",
    "comment" : "\n     * Returns the built certification path.\n     *\n     * @return the certification path (never {@code null})\n     ",
    "links" : [ ]
  }, {
    "name" : " Object clone()",
    "returnType" : "Object",
    "comment" : "\n     * Makes a copy of this {@code CertPathBuilderResult}. Changes to the\n     * copy will not affect the original and vice versa.\n     *\n     * @return a copy of this {@code CertPathBuilderResult}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " CertPath getCertPath()", " Object clone()" ],
  "variableNames" : [ ]
}