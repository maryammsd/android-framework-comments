{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/thread/ActiveOperationalDataset.java",
  "packageName" : "android.net.thread",
  "className" : "ActiveOperationalDataset",
  "comment" : "\n * Data interface for managing a Thread Active Operational Dataset.\n *\n * <p>An example usage of creating an Active Operational Dataset with randomized parameters:\n *\n * <pre>{@code\n * ActiveOperationalDataset activeDataset = controller.createRandomizedDataset(\"MyNet\");\n * }</pre>\n *\n * <p>or randomized Dataset with customized channel:\n *\n * <pre>{@code\n * ActiveOperationalDataset activeDataset =\n *         new ActiveOperationalDataset.Builder(controller.createRandomizedDataset(\"MyNet\"))\n *                 .setChannel(CHANNEL_PAGE_24_GHZ, 17)\n *                 .setActiveTimestamp(OperationalDatasetTimestamp.fromInstant(Instant.now()))\n *                 .build();\n * }</pre>\n *\n * <p>If the Active Operational Dataset is already known as <a\n * href=\"https://www.threadgroup.org\">Thread TLVs</a>, you can simply use:\n *\n * <pre>{@code\n * ActiveOperationalDataset activeDataset = ActiveOperationalDataset.fromThreadTlvs(datasetTlvs);\n * }</pre>\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LENGTH_MAX_DATASET_TLVS",
    "type" : "int",
    "comment" : " The maximum length of the Active Operational Dataset TLV array in bytes. ",
    "links" : [ ]
  }, {
    "name" : "LENGTH_EXTENDED_PAN_ID",
    "type" : "int",
    "comment" : " The length of Extended PAN ID in bytes. ",
    "links" : [ ]
  }, {
    "name" : "LENGTH_MIN_NETWORK_NAME_BYTES",
    "type" : "int",
    "comment" : " The minimum length of Network Name as UTF-8 bytes. ",
    "links" : [ ]
  }, {
    "name" : "LENGTH_MAX_NETWORK_NAME_BYTES",
    "type" : "int",
    "comment" : " The maximum length of Network Name as UTF-8 bytes. ",
    "links" : [ ]
  }, {
    "name" : "LENGTH_NETWORK_KEY",
    "type" : "int",
    "comment" : " The length of Network Key in bytes. ",
    "links" : [ ]
  }, {
    "name" : "LENGTH_MESH_LOCAL_PREFIX_BITS",
    "type" : "int",
    "comment" : " The length of Mesh-Local Prefix in bits. ",
    "links" : [ ]
  }, {
    "name" : "LENGTH_PSKC",
    "type" : "int",
    "comment" : " The length of PSKc in bytes. ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_PAGE_24_GHZ",
    "type" : "int",
    "comment" : " The 2.4 GHz channel page. ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_MIN_24_GHZ",
    "type" : "int",
    "comment" : " The minimum 2.4GHz channel. ",
    "links" : [ ]
  }, {
    "name" : "CHANNEL_MAX_24_GHZ",
    "type" : "int",
    "comment" : " The maximum 2.4GHz channel. ",
    "links" : [ ]
  }, {
    "name" : "TYPE_CHANNEL",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PAN_ID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_EXTENDED_PAN_ID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_NETWORK_NAME",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PSKC",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_NETWORK_KEY",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_MESH_LOCAL_PREFIX",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_SECURITY_POLICY",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_ACTIVE_TIMESTAMP",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "TYPE_CHANNEL_MASK",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MESH_LOCAL_PREFIX_FIRST_BYTE",
    "type" : "byte",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "LENGTH_CHANNEL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LENGTH_PAN_ID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<ActiveOperationalDataset>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActiveTimestamp",
    "type" : "OperationalDatasetTimestamp",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtendedPanId",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPanId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelPage",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelMask",
    "type" : "SparseArray<byte[]>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPskc",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkKey",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMeshLocalPrefix",
    "type" : "IpPrefix",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSecurityPolicy",
    "type" : "SecurityPolicy",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUnknownTlvs",
    "type" : "SparseArray<byte[]>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static ActiveOperationalDataset fromThreadTlvs(@NonNull byte[] tlvs)",
    "returnType" : "ActiveOperationalDataset",
    "comment" : "\n     * Creates a new {@link ActiveOperationalDataset} object from a series of Thread TLVs.\n     *\n     * <p>{@code tlvs} can be obtained from the value of a Thread Active Operational Dataset TLV\n     * (see the <a href=\"https://www.threadgroup.org/support#specifications\">Thread\n     * specification</a> for the definition) or the return value of {@link #toThreadTlvs}.\n     *\n     * @param tlvs a series of Thread TLVs which contain the Active Operational Dataset\n     * @return the decoded Active Operational Dataset\n     * @throws IllegalArgumentException if {@code tlvs} is malformed or the length is larger than\n     *     {@link LENGTH_MAX_DATASET_TLVS}\n     ",
    "links" : [ "LENGTH_MAX_DATASET_TLVS", "android.net.thread.ActiveOperationalDataset", "#toThreadTlvs" ]
  }, {
    "name" : "private static void initWithTlv(Builder builder, int type, byte[] value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static SparseArray<byte[]> decodeChannelMask(byte[] tlvValue)",
    "returnType" : "SparseArray<byte[]>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void encodeChannelMask(SparseArray<byte[]> channelMask, ByteArrayOutputStream outputStream)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean areByteSparseArraysEqual(@NonNull SparseArray<byte[]> first, @NonNull SparseArray<byte[]> second)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int deepHashCode(Object... values)",
    "returnType" : "int",
    "comment" : " An easy-to-use wrapper of {@link Arrays#deepHashCode}. ",
    "links" : [ "java.util.Arrays#deepHashCode" ]
  }, {
    "name" : "public byte[] toThreadTlvs()",
    "returnType" : "byte[]",
    "comment" : "\n     * Converts this {@link ActiveOperationalDataset} object to a series of Thread TLVs.\n     *\n     * <p>See the <a href=\"https://www.threadgroup.org/support#specifications\">Thread\n     * specification</a> for the definition of the Thread TLV format.\n     *\n     * @return a series of Thread TLVs which contain this Active Operational Dataset\n     ",
    "links" : [ "android.net.thread.ActiveOperationalDataset" ]
  }, {
    "name" : "public OperationalDatasetTimestamp getActiveTimestamp()",
    "returnType" : "OperationalDatasetTimestamp",
    "comment" : " Returns the Active Timestamp. ",
    "links" : [ ]
  }, {
    "name" : "public String getNetworkName()",
    "returnType" : "String",
    "comment" : " Returns the Network Name. ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getExtendedPanId()",
    "returnType" : "byte[]",
    "comment" : " Returns the Extended PAN ID. ",
    "links" : [ ]
  }, {
    "name" : "public int getPanId()",
    "returnType" : "int",
    "comment" : " Returns the PAN ID. ",
    "links" : [ ]
  }, {
    "name" : "public int getChannel()",
    "returnType" : "int",
    "comment" : " Returns the Channel. ",
    "links" : [ ]
  }, {
    "name" : "public int getChannelPage()",
    "returnType" : "int",
    "comment" : " Returns the Channel Page. ",
    "links" : [ ]
  }, {
    "name" : "public SparseArray<byte[]> getChannelMask()",
    "returnType" : "SparseArray<byte[]>",
    "comment" : "\n     * Returns the Channel masks. For the returned {@link SparseArray}, the key is the Channel Page\n     * and the value is the Channel Mask.\n     ",
    "links" : [ "android.util.SparseArray" ]
  }, {
    "name" : "private static SparseArray<byte[]> deepCloneSparseArray(SparseArray<byte[]> src)",
    "returnType" : "SparseArray<byte[]>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] getPskc()",
    "returnType" : "byte[]",
    "comment" : " Returns the PSKc. ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getNetworkKey()",
    "returnType" : "byte[]",
    "comment" : " Returns the Network Key. ",
    "links" : [ ]
  }, {
    "name" : "public IpPrefix getMeshLocalPrefix()",
    "returnType" : "IpPrefix",
    "comment" : "\n     * Returns the Mesh-local Prefix. The length of the returned prefix is always {@link\n     * #LENGTH_MESH_LOCAL_PREFIX_BITS}.\n     ",
    "links" : [ "#LENGTH_MESH_LOCAL_PREFIX_BITS" ]
  }, {
    "name" : "public SecurityPolicy getSecurityPolicy()",
    "returnType" : "SecurityPolicy",
    "comment" : " Returns the Security Policy. ",
    "links" : [ ]
  }, {
    "name" : "public SparseArray<byte[]> getUnknownTlvs()",
    "returnType" : "SparseArray<byte[]>",
    "comment" : "\n     * Returns Thread TLVs which are not recognized by this device. The returned {@link SparseArray}\n     * associates TLV values to their keys.\n     *\n     * @hide\n     ",
    "links" : [ "android.util.SparseArray" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String checkNetworkName(@NonNull String networkName)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static ActiveOperationalDataset fromThreadTlvs(@NonNull byte[] tlvs)", "private static void initWithTlv(Builder builder, int type, byte[] value)", "private static SparseArray<byte[]> decodeChannelMask(byte[] tlvValue)", "private static void encodeChannelMask(SparseArray<byte[]> channelMask, ByteArrayOutputStream outputStream)", "private static boolean areByteSparseArraysEqual(@NonNull SparseArray<byte[]> first, @NonNull SparseArray<byte[]> second)", "private static int deepHashCode(Object... values)", "public byte[] toThreadTlvs()", "public OperationalDatasetTimestamp getActiveTimestamp()", "public String getNetworkName()", "public byte[] getExtendedPanId()", "public int getPanId()", "public int getChannel()", "public int getChannelPage()", "public SparseArray<byte[]> getChannelMask()", "private static SparseArray<byte[]> deepCloneSparseArray(SparseArray<byte[]> src)", "public byte[] getPskc()", "public byte[] getNetworkKey()", "public IpPrefix getMeshLocalPrefix()", "public SecurityPolicy getSecurityPolicy()", "public SparseArray<byte[]> getUnknownTlvs()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(Object other)", "public int hashCode()", "public String toString()", " static String checkNetworkName(@NonNull String networkName)" ],
  "variableNames" : [ "LENGTH_MAX_DATASET_TLVS", "LENGTH_EXTENDED_PAN_ID", "LENGTH_MIN_NETWORK_NAME_BYTES", "LENGTH_MAX_NETWORK_NAME_BYTES", "LENGTH_NETWORK_KEY", "LENGTH_MESH_LOCAL_PREFIX_BITS", "LENGTH_PSKC", "CHANNEL_PAGE_24_GHZ", "CHANNEL_MIN_24_GHZ", "CHANNEL_MAX_24_GHZ", "TYPE_CHANNEL", "TYPE_PAN_ID", "TYPE_EXTENDED_PAN_ID", "TYPE_NETWORK_NAME", "TYPE_PSKC", "TYPE_NETWORK_KEY", "TYPE_MESH_LOCAL_PREFIX", "TYPE_SECURITY_POLICY", "TYPE_ACTIVE_TIMESTAMP", "TYPE_CHANNEL_MASK", "MESH_LOCAL_PREFIX_FIRST_BYTE", "LENGTH_CHANNEL", "LENGTH_PAN_ID", "CREATOR", "mActiveTimestamp", "mNetworkName", "mExtendedPanId", "mPanId", "mChannel", "mChannelPage", "mChannelMask", "mPskc", "mNetworkKey", "mMeshLocalPrefix", "mSecurityPolicy", "mUnknownTlvs" ]
}