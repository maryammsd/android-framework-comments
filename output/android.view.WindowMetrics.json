{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/WindowMetrics.java",
  "packageName" : "android.view",
  "className" : "WindowMetrics",
  "comment" : "\n * Metrics about a Window, consisting of the bounds and {@link WindowInsets}.\n * <p>\n * This is usually obtained from {@link WindowManager#getCurrentWindowMetrics()} and\n * {@link WindowManager#getMaximumWindowMetrics()}.\n * </p>\n * After {@link android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE}, it also provides density.\n * <h3>Obtains Window Dimensions in Density-independent Pixel(DP)</h3>\n * <p>\n * While {@link #getDensity()} is provided, the dimension in density-independent pixel could also be\n * calculated with {@code WindowMetrics} properties, which is similar to\n * {@link android.content.res.Configuration#screenWidthDp}\n * <pre class=\"prettyprint\">\n * float widthInDp = windowMetrics.getBounds().width() / windowMetrics.getDensity();\n * float heightInDp = windowMetrics.getBounds().height() / windowMetrics.getDensity();\n * </pre>\n * Also, the density in DPI can be obtained by:\n * <pre class=\"prettyprint\">\n * float densityDp = DisplayMetrics.DENSITY_DEFAULT * windowMetrics.getDensity();\n * </pre>\n * </p>\n *\n * @see WindowInsets#getInsets(int)\n * @see WindowManager#getCurrentWindowMetrics()\n * @see WindowManager#getMaximumWindowMetrics()\n ",
  "links" : [ "android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE", "#getDensity()", "android.view.WindowInsets", "android.view.WindowManager#getCurrentWindowMetrics()", "android.content.res.Configuration#screenWidthDp", "android.view.WindowManager#getMaximumWindowMetrics()" ],
  "variables" : [ {
    "name" : "mBounds",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowInsets",
    "type" : "WindowInsets",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowInsetsSupplier",
    "type" : "Supplier<WindowInsets>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDensity",
    "type" : "float",
    "comment" : " @see android.util.DisplayMetrics#density ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Rect getBounds()",
    "returnType" : "Rect",
    "comment" : "\n     * Returns the bounds of the area associated with this window or {@code UiContext}.\n     * <p>\n     * <b>Note that the size of the reported bounds can have different size than\n     * {@link Display#getSize(Point)}.</b> This method reports the window size including all system\n     * bar areas, while {@link Display#getSize(Point)} reports the area excluding navigation bars\n     * and display cutout areas. The value reported by {@link Display#getSize(Point)} can be\n     * obtained by using:\n     * <pre class=\"prettyprint\">\n     * final WindowMetrics metrics = windowManager.getCurrentWindowMetrics();\n     * // Gets all excluding insets\n     * final WindowInsets windowInsets = metrics.getWindowInsets();\n     * Insets insets = windowInsets.getInsetsIgnoringVisibility(WindowInsets.Type.navigationBars()\n     *         | WindowInsets.Type.displayCutout());\n     *\n     * int insetsWidth = insets.right + insets.left;\n     * int insetsHeight = insets.top + insets.bottom;\n     *\n     * // Legacy size that Display#getSize reports\n     * final Rect bounds = metrics.getBounds();\n     * final Size legacySize = new Size(bounds.width() - insetsWidth,\n     *         bounds.height() - insetsHeight);\n     * </pre>\n     * </p>\n     *\n     * @return window bounds in pixels.\n     ",
    "links" : [ "android.view.Display#getSize(Point)" ]
  }, {
    "name" : "public WindowInsets getWindowInsets()",
    "returnType" : "WindowInsets",
    "comment" : "\n     * Returns the {@link WindowInsets} of the area associated with this window or\n     * {@code UiContext}.\n     *\n     * @return the {@link WindowInsets} of the visual area.\n     ",
    "links" : [ "android.view.WindowInsets" ]
  }, {
    "name" : "public float getDensity()",
    "returnType" : "float",
    "comment" : "\n     * Returns the density of the area associated with this window or {@code UiContext},\n     * which uses the same units as {@link android.util.DisplayMetrics#density}.\n     *\n     * @see android.util.DisplayMetrics#DENSITY_DEFAULT\n     * @see android.util.DisplayMetrics#density\n     ",
    "links" : [ "android.util.DisplayMetrics#density" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Rect getBounds()", "public WindowInsets getWindowInsets()", "public float getDensity()", "public String toString()" ],
  "variableNames" : [ "mBounds", "mWindowInsets", "mWindowInsetsSupplier", "mDensity" ]
}