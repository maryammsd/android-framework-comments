{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/camera2/marshal/impl/MarshalQueryablePrimitive.java",
  "packageName" : "android.hardware.camera2.marshal.impl",
  "className" : "MarshalQueryablePrimitive",
  "comment" : "\n * Marshal/unmarshal built-in primitive types to and from a {@link ByteBuffer}.\n *\n * <p>The following list of type marshaling is supported:\n * <ul>\n * <li>byte <-> TYPE_BYTE\n * <li>int <-> TYPE_INT32\n * <li>long <-> TYPE_INT64\n * <li>float <-> TYPE_FLOAT\n * <li>double <-> TYPE_DOUBLE\n * <li>Rational <-> TYPE_RATIONAL\n * </ul>\n * </p>\n *\n * <p>Due to the nature of generics, values are always boxed; this also means that both\n * the boxed and unboxed types are supported (i.e. both {@code int} and {@code Integer}).</p>\n *\n * <p>Each managed type <!--(other than boolean)--> must correspond 1:1 to the native type\n * (e.g. a byte will not map to a {@link CameraMetadataNative#TYPE_INT32 TYPE_INT32} or vice versa)\n * for marshaling.</p>\n ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public Marshaler<T> createMarshaler(TypeReference<T> managedType, int nativeType)",
    "returnType" : "Marshaler<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isTypeMappingSupported(TypeReference<T> managedType, int nativeType)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public Marshaler<T> createMarshaler(TypeReference<T> managedType, int nativeType)", "public boolean isTypeMappingSupported(TypeReference<T> managedType, int nativeType)" ]
}