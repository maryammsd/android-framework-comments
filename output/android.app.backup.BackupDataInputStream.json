{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/backup/BackupDataInputStream.java",
  "packageName" : "android.app.backup",
  "className" : "BackupDataInputStream",
  "comment" : "\n * Provides an {@link java.io.InputStream}-like interface for accessing an\n * entity's data during a restore operation. Used by {@link BackupHelper} classes within the {@link\n * BackupAgentHelper} mechanism.\n * <p>\n * When {@link BackupHelper#restoreEntity(BackupDataInputStream) BackupHelper.restoreEntity()}\n * is called, the current entity's header has already been read from the underlying\n * {@link BackupDataInput}.  The entity's key string and total data size are available\n * through this class's {@link #getKey()} and {@link #size()} methods, respectively.\n * <p class=\"note\">\n * <strong>Note:</strong> The caller should take care not to seek or close the underlying data\n * source, nor read more than {@link #size()} bytes from the stream.</p>\n *\n * @see BackupAgentHelper\n * @see BackupHelper\n ",
  "variables" : [ {
    "name" : "key",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dataSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mData",
    "type" : "BackupDataInput",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOneByte",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int read() throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Read one byte of entity data from the stream, returning it as\n     * an integer value.  If more than {@link #size()} bytes of data\n     * are read from the stream, the output of this method is undefined.\n     *\n     * @return The byte read, or undefined if the end of the stream has been reached.\n     ",
    "links" : [ "#size()" ]
  }, {
    "name" : "public int read(byte[] b, int offset, int size) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Read up to {@code size} bytes of data into a byte array, beginning at position\n     * {@code offset} within the array.\n     *\n     * @param b Byte array into which the data will be read\n     * @param offset The data will be stored in {@code b} beginning at this index\n     *   within the array.\n     * @param size The number of bytes to read in this operation.  If insufficient\n     *   data exists within the entity to fulfill this request, only as much data\n     *   will be read as is available.\n     * @return The number of bytes of data read, or zero if all of the entity's\n     *   data has already been read.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int read(byte[] b) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Read enough entity data into a byte array to fill the array.\n     *\n     * @param b Byte array to fill with data from the stream.  If the stream does not\n     *   have sufficient data to fill the array, then the contents of the remainder of\n     *   the array will be undefined.\n     * @return The number of bytes of data read, or zero if all of the entity's\n     *   data has already been read.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getKey()",
    "returnType" : "String",
    "comment" : "\n     * Report the key string associated with this entity within the backup data set.\n     *\n     * @return The key string for this entity, equivalent to calling\n     *   {@link BackupDataInput#getKey()} on the underlying {@link BackupDataInput}.\n     ",
    "links" : [ "android.app.backup.BackupDataInput#getKey()", "android.app.backup.BackupDataInput" ]
  }, {
    "name" : "public int size()",
    "returnType" : "int",
    "comment" : "\n     * Report the total number of bytes of data available for the current entity.\n     *\n     * @return The number of data bytes available, equivalent to calling\n     *   {@link BackupDataInput#getDataSize()} on the underlying {@link BackupDataInput}.\n     ",
    "links" : [ "android.app.backup.BackupDataInput#getDataSize()", "android.app.backup.BackupDataInput" ]
  } ],
  "variableNames" : [ "key", "dataSize", "mData", "mOneByte" ],
  "methodNames" : [ "public int read() throws IOException", "public int read(byte[] b, int offset, int size) throws IOException", "public int read(byte[] b) throws IOException", "public String getKey()", "public int size()" ]
}