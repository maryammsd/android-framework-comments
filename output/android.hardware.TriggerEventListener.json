{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/TriggerEventListener.java",
  "packageName" : "android.hardware",
  "className" : "TriggerEventListener",
  "comment" : "\n * This class is the listener used to handle Trigger Sensors.\n * Trigger Sensors are sensors that trigger an event and are automatically\n * disabled. {@link Sensor#TYPE_SIGNIFICANT_MOTION} is one such example.\n * <p>\n * {@link SensorManager} lets you access the device's {@link android.hardware.Sensor\n * sensors}. Get an instance of {@link SensorManager} by calling\n * {@link android.content.Context#getSystemService(java.lang.String)\n * Context.getSystemService()} with the argument\n * {@link android.content.Context#SENSOR_SERVICE}.\n * <p>Here's an example setup for a TriggerEventListener:\n *\n * <pre>\n * class TriggerListener extends TriggerEventListener {\n *     public void onTrigger(TriggerEvent event) {\n *          // Do Work.\n *\n *     // As it is a one shot sensor, it will be canceled automatically.\n *     // SensorManager.requestTriggerSensor(this, mSigMotion); needs to\n *     // be called again, if needed.\n *     }\n * }\n * public class SensorActivity extends Activity {\n *     private final SensorManager mSensorManager;\n *     private final Sensor mSigMotion;\n *     private final TriggerEventListener mListener = new TriggerEventListener();\n *\n *     public SensorActivity() {\n *         mSensorManager = (SensorManager)getSystemService(SENSOR_SERVICE);\n *         mSigMotion = mSensorManager.getDefaultSensor(Sensor.TYPE_SIGNIFICANT_MOTION);\n *     }\n *\n *     protected void onResume() {\n *         super.onResume();\n *         mSensorManager.requestTriggerSensor(mListener, mSigMotion);\n *     }\n *\n *     protected void onPause() {\n *         super.onPause();\n *         // Call disable to ensure that the trigger request has been canceled.\n *         mSensorManager.cancelTriggerSensor(mListener, mSigMotion);\n *     }\n *\n * }\n * </pre>\n *\n * @see TriggerEvent\n * @see Sensor\n ",
  "links" : [ "android.hardware.SensorManager", "android.content.Context#getSystemService(java.lang.String)", "android.content.Context#SENSOR_SERVICE", "android.hardware.Sensor#TYPE_SIGNIFICANT_MOTION", "android.hardware.Sensorsensors" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void onTrigger(TriggerEvent event)",
    "returnType" : "void",
    "comment" : "\n     * The method that will be called when the sensor\n     * is triggered. Override this method in your implementation\n     * of this class.\n     *\n     * @param event The details of the event.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onTrigger(TriggerEvent event)" ],
  "variableNames" : [ ]
}