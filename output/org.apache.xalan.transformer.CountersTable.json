{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/transformer/CountersTable.java",
  "packageName" : "org.apache.xalan.transformer",
  "className" : "CountersTable",
  "comment" : "\n * This is a table of counters, keyed by ElemNumber objects, each\n * of which has a list of Counter objects.  This really isn't a true\n * table, it is more like a list of lists (there must be a technical\n * term for that...).\n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_newFound",
    "type" : "NodeSetDTM",
    "comment" : "\n   * Place to collect new counters.\n   ",
    "links" : [ ]
  }, {
    "name" : "m_countersMade",
    "type" : "int",
    "comment" : " Number of counters created so far          ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " Vector getCounters(ElemNumber numberElem)",
    "returnType" : "Vector",
    "comment" : "\n   * Get the list of counters that corresponds to\n   * the given ElemNumber object.\n   *\n   * @param numberElem the given xsl:number element.\n   *\n   * @return the list of counters that corresponds to\n   * the given ElemNumber object.\n   ",
    "links" : [ ]
  }, {
    "name" : " Vector putElemNumber(ElemNumber numberElem)",
    "returnType" : "Vector",
    "comment" : "\n   * Put a counter into the table and create an empty\n   * vector as it's value.\n   *\n   * @param numberElem the given xsl:number element.\n   *\n   * @return an empty vector to be used to store counts\n   * for this number element.\n   ",
    "links" : [ ]
  }, {
    "name" : " void appendBtoFList(NodeSetDTM flist, NodeSetDTM blist)",
    "returnType" : "void",
    "comment" : "\n   * Add a list of counted nodes that were built in backwards document\n   * order, or a list of counted nodes that are in forwards document\n   * order.\n   *\n   * @param flist Vector of nodes built in forwards document order\n   * @param blist Vector of nodes built in backwards document order\n   ",
    "links" : [ ]
  }, {
    "name" : "public int countNode(XPathContext support, ElemNumber numberElem, int node) throws TransformerException",
    "returnType" : "int",
    "comment" : "\n   * Count forward until the given node is found, or until\n   * we have looked to the given amount.\n   *\n   * @param support The XPath context to use  \n   * @param numberElem The given xsl:number element.\n   * @param node The node to count.\n   * \n   * @return The node count, or 0 if not found.\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ " Vector getCounters(ElemNumber numberElem)", " Vector putElemNumber(ElemNumber numberElem)", " void appendBtoFList(NodeSetDTM flist, NodeSetDTM blist)", "public int countNode(XPathContext support, ElemNumber numberElem, int node) throws TransformerException" ],
  "variableNames" : [ "serialVersionUID", "m_newFound", "m_countersMade" ]
}