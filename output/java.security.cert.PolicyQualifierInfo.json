{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/cert/PolicyQualifierInfo.java",
  "packageName" : "java.security.cert",
  "className" : "PolicyQualifierInfo",
  "comment" : "\n * An immutable policy qualifier represented by the ASN.1 PolicyQualifierInfo\n * structure.\n *\n * <p>The ASN.1 definition is as follows:\n * <pre>\n *   PolicyQualifierInfo ::= SEQUENCE {\n *        policyQualifierId       PolicyQualifierId,\n *        qualifier               ANY DEFINED BY policyQualifierId }\n * </pre>\n * <p>\n * A certificate policies extension, if present in an X.509 version 3\n * certificate, contains a sequence of one or more policy information terms,\n * each of which consists of an object identifier (OID) and optional\n * qualifiers. In an end-entity certificate, these policy information terms\n * indicate the policy under which the certificate has been issued and the\n * purposes for which the certificate may be used. In a CA certificate, these\n * policy information terms limit the set of policies for certification paths\n * which include this certificate.\n * <p>\n * A {@code Set} of {@code PolicyQualifierInfo} objects are returned\n * by the {@link PolicyNode#getPolicyQualifiers PolicyNode.getPolicyQualifiers}\n * method. This allows applications with specific policy requirements to\n * process and validate each policy qualifier. Applications that need to\n * process policy qualifiers should explicitly set the\n * {@code policyQualifiersRejected} flag to false (by calling the\n * {@link PKIXParameters#setPolicyQualifiersRejected\n * PKIXParameters.setPolicyQualifiersRejected} method) before validating\n * a certification path.\n *\n * <p>Note that the PKIX certification path validation algorithm specifies\n * that any policy qualifier in a certificate policies extension that is\n * marked critical must be processed and validated. Otherwise the\n * certification path must be rejected. If the\n * {@code policyQualifiersRejected} flag is set to false, it is up to\n * the application to validate all policy qualifiers in this manner in order\n * to be PKIX compliant.\n *\n * <p><b>Concurrent Access</b>\n *\n * <p>All {@code PolicyQualifierInfo} objects must be immutable and\n * thread-safe. That is, multiple threads may concurrently invoke the\n * methods defined in this class on a single {@code PolicyQualifierInfo}\n * object (or more than one) with no ill effects. Requiring\n * {@code PolicyQualifierInfo} objects to be immutable and thread-safe\n * allows them to be passed around to various pieces of code without\n * worrying about coordinating access.\n *\n * @author      seth proctor\n * @author      Sean Mullan\n * @since       1.4\n ",
  "links" : [ "java.security.cert.PKIXParameters#setPolicyQualifiersRejectedPKIXParameters.setPolicyQualifiersRejected", "java.security.cert.PolicyNode#getPolicyQualifiers" ],
  "variables" : [ {
    "name" : "mEncoded",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "pqiString",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final String getPolicyQualifierId()",
    "returnType" : "String",
    "comment" : "\n     * Returns the {@code policyQualifierId} field of this\n     * {@code PolicyQualifierInfo}. The {@code policyQualifierId}\n     * is an Object Identifier (OID) represented by a set of nonnegative\n     * integers separated by periods.\n     *\n     * @return the OID (never {@code null})\n     ",
    "links" : [ ]
  }, {
    "name" : "public final byte[] getEncoded()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the ASN.1 DER encoded form of this\n     * {@code PolicyQualifierInfo}.\n     *\n     * @return the ASN.1 DER encoded bytes (never {@code null}).\n     * Note that a copy is returned, so the data is cloned each time\n     * this method is called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final byte[] getPolicyQualifier()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the ASN.1 DER encoded form of the {@code qualifier}\n     * field of this {@code PolicyQualifierInfo}.\n     *\n     * @return the ASN.1 DER encoded bytes of the {@code qualifier}\n     * field. Note that a copy is returned, so the data is cloned each\n     * time this method is called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Return a printable representation of this\n     * {@code PolicyQualifierInfo}.\n     *\n     * @return a {@code String} describing the contents of this\n     *         {@code PolicyQualifierInfo}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final String getPolicyQualifierId()", "public final byte[] getEncoded()", "public final byte[] getPolicyQualifier()", "public String toString()" ],
  "variableNames" : [ "mEncoded", "mId", "mData", "pqiString" ]
}