{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/ClassLoaderUtil.java",
  "packageName" : "android.icu.impl",
  "className" : "ClassLoaderUtil",
  "comment" : "\n * This utility class is used for resolving a right ClassLoader from\n * a given class. getClassLoader always returns a non-null ClassLoader\n * even a class is loaded through the bootstrap class loader of JRE.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "BOOTSTRAP_CLASSLOADER",
    "type" : "ClassLoader",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static ClassLoader getBootstrapClassLoader()",
    "returnType" : "ClassLoader",
    "comment" : "\n     * Lazily create a singleton BootstrapClassLoader.\n     * This class loader might be necessary when ICU4J classes are\n     * initialized by bootstrap class loader.\n     *\n     * @return The BootStrapClassLoader singleton instance\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ClassLoader getClassLoader(Class<?> cls)",
    "returnType" : "ClassLoader",
    "comment" : "\n     * Returns the class loader used for loading the specified class.\n     * @param cls The class\n     * @return the class loader\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ClassLoader getClassLoader()",
    "returnType" : "ClassLoader",
    "comment" : "\n     * Returns a fallback class loader.\n     * @return A class loader\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static ClassLoader getBootstrapClassLoader()", "public static ClassLoader getClassLoader(Class<?> cls)", "public static ClassLoader getClassLoader()" ],
  "variableNames" : [ "BOOTSTRAP_CLASSLOADER" ]
}