{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/OrientationEventListener.java",
  "packageName" : "android.view",
  "className" : "OrientationEventListener",
  "comment" : "\n * Helper class for receiving notifications from the SensorManager when\n * the orientation of the device has changed.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "localLOGV",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOrientation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSensorManager",
    "type" : "SensorManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRate",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSensor",
    "type" : "Sensor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSensorEventListener",
    "type" : "SensorEventListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOldListener",
    "type" : "OrientationListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ORIENTATION_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Returned from onOrientationChanged when the device orientation cannot be determined\n     * (typically when the device is in a close to flat position).\n     *\n     *  @see #onOrientationChanged\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void registerListener(OrientationListener lis)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void enable()",
    "returnType" : "void",
    "comment" : "\n     * Enables the OrientationEventListener so it will monitor the sensor and call\n     * {@link #onOrientationChanged} when the device orientation changes.\n     ",
    "links" : [ "#onOrientationChanged" ]
  }, {
    "name" : "public void disable()",
    "returnType" : "void",
    "comment" : "\n     * Disables the OrientationEventListener.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean canDetectOrientation()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if sensor is enabled and false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onOrientationChanged(int orientation)",
    "returnType" : "void",
    "comment" : "\n     * Called when the orientation of the device has changed.\n     * orientation parameter is in degrees, ranging from 0 to 359.\n     * orientation is 0 degrees when the device is oriented in its natural position,\n     * 90 degrees when its left side is at the top, 180 degrees when it is upside down, \n     * and 270 degrees when its right side is to the top.\n     * {@link #ORIENTATION_UNKNOWN} is returned when the device is close to flat\n     * and the orientation cannot be determined.\n     *\n     * @param orientation The new orientation of the device.\n     *\n     *  @see #ORIENTATION_UNKNOWN\n     ",
    "links" : [ "#ORIENTATION_UNKNOWN" ]
  } ],
  "methodNames" : [ " void registerListener(OrientationListener lis)", "public void enable()", "public void disable()", "public boolean canDetectOrientation()", "public abstract void onOrientationChanged(int orientation)" ],
  "variableNames" : [ "TAG", "DEBUG", "localLOGV", "mOrientation", "mSensorManager", "mEnabled", "mRate", "mSensor", "mSensorEventListener", "mOldListener", "ORIENTATION_UNKNOWN" ]
}