{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/jaxp/JAXPPrefixResolver.java",
  "packageName" : "org.apache.xpath.jaxp",
  "className" : "JAXPPrefixResolver",
  "comment" : "\n * <meta name=\"usage\" content=\"general\"/>\n * This class implements a Default PrefixResolver which\n * can be used to perform prefix-to-namespace lookup\n * for the XPath object.\n * This class delegates the resolution to the passed NamespaceContext\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "namespaceContext",
    "type" : "NamespaceContext",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "S_XMLNAMESPACEURI",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getNamespaceForPrefix(String prefix)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getBaseIdentifier()",
    "returnType" : "String",
    "comment" : "\n     * Return the base identifier.\n     *\n     * @return null\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean handlesNullPrefixes()",
    "returnType" : "boolean",
    "comment" : "\n     * @see PrefixResolver#handlesNullPrefixes() \n     ",
    "links" : [ ]
  }, {
    "name" : "public String getNamespaceForPrefix(String prefix, org.w3c.dom.Node namespaceContext)",
    "returnType" : "String",
    "comment" : "\n     * Given a prefix and a Context Node, get the corresponding namespace.\n     * Warning: This will not work correctly if namespaceContext\n     * is an attribute node.\n     * @param prefix Prefix to resolve.\n     * @param namespaceContext Node from which to start searching for a\n     * xmlns attribute that binds a prefix to a namespace.\n     * @return Namespace that prefix resolves to, or null if prefix\n     * is not bound.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getNamespaceForPrefix(String prefix)", "public String getBaseIdentifier()", "public boolean handlesNullPrefixes()", "public String getNamespaceForPrefix(String prefix, org.w3c.dom.Node namespaceContext)" ],
  "variableNames" : [ "namespaceContext", "S_XMLNAMESPACEURI" ]
}