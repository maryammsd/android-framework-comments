{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/ims/stub/RcsPresenceExchangeImplBase.java",
  "packageName" : "android.telephony.ims.stub",
  "className" : "RcsPresenceExchangeImplBase",
  "comment" : "\n * Base implementation for RCS User Capability Exchange using Presence. Any ImsService implementing\n * this service must implement the stub methods {@link #requestCapabilities(List, int)}  and\n * {@link #updateCapabilities(RcsContactUceCapability, int)}.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_SUBSCRIBE_GENERIC_FAILURE",
    "type" : "int",
    "comment" : "\n     * The request has resulted in any other 4xx/5xx/6xx that is not covered below. No retry will be\n     * attempted.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_SUCCESS",
    "type" : "int",
    "comment" : "\n     * The request has succeeded with a “200” message from the network.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_NOT_REGISTERED",
    "type" : "int",
    "comment" : "\n     * The request has resulted in a “403” (User Not Registered) error from the network. Will retry\n     * capability polling with an exponential backoff.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_NOT_AUTHORIZED_FOR_PRESENCE",
    "type" : "int",
    "comment" : "\n     * The request has resulted in a “403” (not authorized (Requestor)) error from the network. No\n     * retry will be attempted.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_FORBIDDEN",
    "type" : "int",
    "comment" : "\n     * The request has resulted in a \"403” (Forbidden) or other “403” error from the network and\n     * will be handled the same as “404” Not found. No retry will be attempted.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_NOT_FOUND",
    "type" : "int",
    "comment" : "\n     * The request has resulted in a “404” (Not found) result from the network. No retry will be\n     * attempted.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_SIP_REQUEST_TIMEOUT",
    "type" : "int",
    "comment" : "\n     * The request has resulted in a “408” response. Retry after exponential backoff.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_SUBSCRIBE_TOO_LARGE",
    "type" : "int",
    "comment" : "\n     *  The network has responded with a “413” (Too Large) response from the network. Capability\n     *  request contains too many items and must be shrunk before the request will be accepted.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_SIP_INTERVAL_TOO_SHORT",
    "type" : "int",
    "comment" : "\n     * The request has resulted in a “423” response. Retry after exponential backoff.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_SIP_SERVICE_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n     * The request has resulted in a “503” response. Retry after exponential backoff.\n     ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_ETAG_EXPIRED",
    "type" : "int",
    "comment" : " A capability update has been requested due to the Entity Tag (ETag) expiring. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_LTE_VOPS_DISABLED",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to LTE with VoPS disabled. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_LTE_VOPS_ENABLED",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to LTE with VoPS enabled. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_EHRPD",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to eHRPD. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_HSPAPLUS",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to HSPA+. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_3G",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to 3G. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_2G",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to 2G. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_WLAN",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to WLAN ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_IWLAN",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to IWLAN ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_UNKNOWN",
    "type" : "int",
    "comment" : " A capability update has been requested but the reason is unknown. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_NR5G_VOPS_DISABLED",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to 5G NR with VoPS disabled. ",
    "links" : [ ]
  }, {
    "name" : "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_NR5G_VOPS_ENABLED",
    "type" : "int",
    "comment" : " A capability update has been requested due to moving to 5G NR with VoPS enabled. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void onNetworkResponse(@PresenceResponseCode int code, @NonNull String reason, int operationToken) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Provide the framework with a subsequent network response update to\n     * {@link #updateCapabilities(RcsContactUceCapability, int)} and\n     * {@link #requestCapabilities(List, int)} operations.\n     *\n     * @param code The SIP response code sent from the network for the operation token specified.\n     * @param reason The optional reason response from the network. If the network provided no\n     *         reason with the code, the string should be empty.\n     * @param operationToken The token associated with the operation this service is providing a\n     *         response for.\n     * @throws ImsException If this {@link RcsPresenceExchangeImplBase} instance is not currently\n     * connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received the\n     * {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare cases when the\n     * Telephony stack has crashed.\n     ",
    "links" : [ "#requestCapabilities(List", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "#updateCapabilities(RcsContactUceCapability", "android.telephony.ims.stub.RcsPresenceExchangeImplBase", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature" ]
  }, {
    "name" : "public final void onCapabilityRequestResponse(@NonNull List<RcsContactUceCapability> infos, int operationToken) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Provides the framework with the requested contacts’ capabilities requested by the framework\n     * using {@link #requestCapabilities(List, int)}.\n     *\n     * @throws ImsException If this {@link RcsPresenceExchangeImplBase} instance is not currently\n     * connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received the\n     * {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare cases when the\n     * Telephony stack has crashed.\n     ",
    "links" : [ "#requestCapabilities(List", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.stub.RcsPresenceExchangeImplBase", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature" ]
  }, {
    "name" : "public final void onNotifyUpdateCapabilites(@StackPublishTriggerType int publishTriggerType) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Trigger the framework to provide a capability update using\n     * {@link #updateCapabilities(RcsContactUceCapability, int)}.\n     * <p>\n     * This is typically used when trying to generate an initial PUBLISH for a new subscription to\n     * the network. The device will cache all presence publications after boot until this method is\n     * called once.\n     * @param publishTriggerType {@link StackPublishTriggerType} The reason for the capability\n     *         update request.\n     * @throws ImsException If this {@link RcsPresenceExchangeImplBase} instance is not currently\n     * connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received the\n     * {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare cases when the\n     * Telephony stack has crashed.\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "#updateCapabilities(RcsContactUceCapability", "android.telephony.ims.stub.RcsPresenceExchangeImplBase", "android.telephony.ims.feature.ImsFeature#STATE_READY", "StackPublishTriggerType", "android.telephony.ims.feature.RcsFeature" ]
  }, {
    "name" : "public final void onUnpublish() throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device’s capabilities have been unpublished from the network.\n     *\n     * @throws ImsException If this {@link RcsPresenceExchangeImplBase} instance is not currently\n     * connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received the\n     * {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare cases when the\n     * Telephony stack has crashed.\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.stub.RcsPresenceExchangeImplBase", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature" ]
  }, {
    "name" : "public void requestCapabilities(@NonNull List<Uri> uris, int operationToken)",
    "returnType" : "void",
    "comment" : "\n     * The user capabilities of one or multiple contacts have been requested by the framework.\n     * <p>\n     * The implementer must follow up this call with an {@link #onCommandUpdate(int, int)} call to\n     * indicate whether or not this operation succeeded.  If this operation succeeds, network\n     * response updates should be sent to the framework using\n     * {@link #onNetworkResponse(int, String, int)}. When the operation is completed,\n     * {@link #onCapabilityRequestResponse(List, int)} should be called with the presence\n     * information for the contacts specified.\n     * @param uris A {@link List} of the {@link Uri}s that the framework is requesting the UCE\n     *             capabilities for.\n     * @param operationToken The token associated with this operation. Updates to this request using\n     *         {@link #onCommandUpdate(int, int)}, {@link #onNetworkResponse(int, String, int)}, and\n     *         {@link #onCapabilityRequestResponse(List, int)}  must use the same operation token\n     *         in response.\n     ",
    "links" : [ "#onCommandUpdate(int", "#onCapabilityRequestResponse(List", "java.util.List", "android.net.Uri", "#onNetworkResponse(int" ]
  }, {
    "name" : "public void updateCapabilities(@NonNull RcsContactUceCapability capabilities, int operationToken)",
    "returnType" : "void",
    "comment" : "\n     * The capabilities of this device have been updated and should be published to the network.\n     * <p>\n     * The implementer must follow up this call with an {@link #onCommandUpdate(int, int)} call to\n     * indicate whether or not this operation succeeded. If this operation succeeds, network\n     * response updates should be sent to the framework using\n     * {@link #onNetworkResponse(int, String, int)}.\n     * @param capabilities The capabilities for this device.\n     * @param operationToken The token associated with this operation. Any subsequent\n     *         {@link #onCommandUpdate(int, int)} or {@link #onNetworkResponse(int, String, int)}\n     *         calls regarding this update must use the same token.\n     ",
    "links" : [ "#onCommandUpdate(int", "#onNetworkResponse(int" ]
  } ],
  "variableNames" : [ "LOG_TAG", "RESPONSE_SUBSCRIBE_GENERIC_FAILURE", "RESPONSE_SUCCESS", "RESPONSE_NOT_REGISTERED", "RESPONSE_NOT_AUTHORIZED_FOR_PRESENCE", "RESPONSE_FORBIDDEN", "RESPONSE_NOT_FOUND", "RESPONSE_SIP_REQUEST_TIMEOUT", "RESPONSE_SUBSCRIBE_TOO_LARGE", "RESPONSE_SIP_INTERVAL_TOO_SHORT", "RESPONSE_SIP_SERVICE_UNAVAILABLE", "CAPABILITY_UPDATE_TRIGGER_ETAG_EXPIRED", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_LTE_VOPS_DISABLED", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_LTE_VOPS_ENABLED", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_EHRPD", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_HSPAPLUS", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_3G", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_2G", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_WLAN", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_IWLAN", "CAPABILITY_UPDATE_TRIGGER_UNKNOWN", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_NR5G_VOPS_DISABLED", "CAPABILITY_UPDATE_TRIGGER_MOVE_TO_NR5G_VOPS_ENABLED" ],
  "methodNames" : [ "public final void onNetworkResponse(@PresenceResponseCode int code, @NonNull String reason, int operationToken) throws ImsException", "public final void onCapabilityRequestResponse(@NonNull List<RcsContactUceCapability> infos, int operationToken) throws ImsException", "public final void onNotifyUpdateCapabilites(@StackPublishTriggerType int publishTriggerType) throws ImsException", "public final void onUnpublish() throws ImsException", "public void requestCapabilities(@NonNull List<Uri> uris, int operationToken)", "public void updateCapabilities(@NonNull RcsContactUceCapability capabilities, int operationToken)" ]
}