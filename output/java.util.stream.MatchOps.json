{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/MatchOps.java",
  "packageName" : "java.util.stream",
  "className" : "MatchOps",
  "comment" : "\n * Factory for instances of a short-circuiting {@code TerminalOp} that implement\n * quantified predicate matching on the elements of a stream. Supported variants\n * include match-all, match-any, and match-none.\n *\n * @since 1.8\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static TerminalOp<T, Boolean> makeRef(Predicate<? super T> predicate, MatchKind matchKind)",
    "returnType" : "TerminalOp<T, Boolean>",
    "comment" : "\n     * Constructs a quantified predicate matcher for a Stream.\n     *\n     * @param <T> the type of stream elements\n     * @param predicate the {@code Predicate} to apply to stream elements\n     * @param matchKind the kind of quantified match (all, any, none)\n     * @return a {@code TerminalOp} implementing the desired quantified match\n     *         criteria\n     ",
    "links" : [ ]
  }, {
    "name" : "public static TerminalOp<Integer, Boolean> makeInt(IntPredicate predicate, MatchKind matchKind)",
    "returnType" : "TerminalOp<Integer, Boolean>",
    "comment" : "\n     * Constructs a quantified predicate matcher for an {@code IntStream}.\n     *\n     * @param predicate the {@code Predicate} to apply to stream elements\n     * @param matchKind the kind of quantified match (all, any, none)\n     * @return a {@code TerminalOp} implementing the desired quantified match\n     *         criteria\n     ",
    "links" : [ ]
  }, {
    "name" : "public static TerminalOp<Long, Boolean> makeLong(LongPredicate predicate, MatchKind matchKind)",
    "returnType" : "TerminalOp<Long, Boolean>",
    "comment" : "\n     * Constructs a quantified predicate matcher for a {@code LongStream}.\n     *\n     * @param predicate the {@code Predicate} to apply to stream elements\n     * @param matchKind the kind of quantified match (all, any, none)\n     * @return a {@code TerminalOp} implementing the desired quantified match\n     *         criteria\n     ",
    "links" : [ ]
  }, {
    "name" : "public static TerminalOp<Double, Boolean> makeDouble(DoublePredicate predicate, MatchKind matchKind)",
    "returnType" : "TerminalOp<Double, Boolean>",
    "comment" : "\n     * Constructs a quantified predicate matcher for a {@code DoubleStream}.\n     *\n     * @param predicate the {@code Predicate} to apply to stream elements\n     * @param matchKind the kind of quantified match (all, any, none)\n     * @return a {@code TerminalOp} implementing the desired quantified match\n     *         criteria\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static TerminalOp<T, Boolean> makeRef(Predicate<? super T> predicate, MatchKind matchKind)", "public static TerminalOp<Integer, Boolean> makeInt(IntPredicate predicate, MatchKind matchKind)", "public static TerminalOp<Long, Boolean> makeLong(LongPredicate predicate, MatchKind matchKind)", "public static TerminalOp<Double, Boolean> makeDouble(DoublePredicate predicate, MatchKind matchKind)" ],
  "variableNames" : [ ]
}