{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/UNIXProcess.java",
  "packageName" : "java.lang",
  "className" : "UNIXProcess",
  "comment" : "\n * java.lang.Process subclass in the UNIX environment.\n *\n * @author Mario Wolczko and Ross Knippel.\n * @author Konstantin Kladko (ported to Linux)\n * @author Martin Buchholz\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "pid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "exitcode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "hasExited",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "stdin",
    "type" : "OutputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "stdout",
    "type" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "stderr",
    "type" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "processReaperExecutor",
    "type" : "Executor",
    "comment" : "\n     * The thread pool of \"process reaper\" daemon threads.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private native int waitForProcessExit(int pid)",
    "returnType" : "int",
    "comment" : " this is for the reaping thread ",
    "links" : [ ]
  }, {
    "name" : "private native int forkAndExec(byte[] prog, byte[] argBlock, int argc, byte[] envBlock, int envc, byte[] dir, int[] fds, boolean redirectErrorStream) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Create a process using fork(2) and exec(2).\n     *\n     * @param fds an array of three file descriptors.\n     *        Indexes 0, 1, and 2 correspond to standard input,\n     *        standard output and standard error, respectively.  On\n     *        input, a value of -1 means to create a pipe to connect\n     *        child and parent processes.  On output, a value which\n     *        is not -1 is the parent pipe fd corresponding to the\n     *        pipe which has been created.  An element of this array\n     *        is -1 on input if and only if it is <em>not</em> -1 on\n     *        output.\n     * @return the pid of the subprocess\n     ",
    "links" : [ ]
  }, {
    "name" : " static FileDescriptor newFileDescriptor(int fd)",
    "returnType" : "FileDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void initStreams(int[] fds) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void processExited(int exitcode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public OutputStream getOutputStream()",
    "returnType" : "OutputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InputStream getInputStream()",
    "returnType" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InputStream getErrorStream()",
    "returnType" : "InputStream",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized int waitFor() throws InterruptedException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized int exitValue()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void destroyProcess(int pid)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void initIDs()",
    "returnType" : "void",
    "comment" : " This routine initializes JNI field offsets for the class ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private native int waitForProcessExit(int pid)", "private native int forkAndExec(byte[] prog, byte[] argBlock, int argc, byte[] envBlock, int envc, byte[] dir, int[] fds, boolean redirectErrorStream) throws IOException", " static FileDescriptor newFileDescriptor(int fd)", " void initStreams(int[] fds) throws IOException", " void processExited(int exitcode)", "public OutputStream getOutputStream()", "public InputStream getInputStream()", "public InputStream getErrorStream()", "public synchronized int waitFor() throws InterruptedException", "public synchronized int exitValue()", "private static native void destroyProcess(int pid)", "public void destroy()", "public String toString()", "private static native void initIDs()" ],
  "variableNames" : [ "pid", "exitcode", "hasExited", "stdin", "stdout", "stderr", "processReaperExecutor" ]
}