{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/fonts/SystemFonts.java",
  "packageName" : "android.graphics.fonts",
  "className" : "SystemFonts",
  "comment" : "\n * Provides the system font configurations.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_FAMILY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sSystemFallbackMap",
    "type" : "Map<String, FontFamily[]>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sAliases",
    "type" : "FontConfig.Alias[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sAvailableFonts",
    "type" : "List<Font>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Set<Font> getAvailableFonts()",
    "returnType" : "Set<Font>",
    "comment" : "\n     * Returns all available font files in the system.\n     *\n     * @return a set of system fonts\n     ",
    "links" : [ ]
  }, {
    "name" : "public static FontFamily[] getSystemFallback(@Nullable String familyName)",
    "returnType" : "FontFamily[]",
    "comment" : "\n     * Returns fallback list for the given family name.\n     *\n     * If no fallback found for the given family name, returns fallback for the default family.\n     *\n     * @param familyName family name, e.g. \"serif\"\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Map<String, FontFamily[]> getRawSystemFallbackMap()",
    "returnType" : "Map<String, FontFamily[]>",
    "comment" : "\n     * Returns raw system fallback map.\n     *\n     * This method is intended to be used only by Typeface static initializer.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static FontConfig.Alias[] getAliases()",
    "returnType" : "FontConfig.Alias[]",
    "comment" : "\n     * Returns a list of aliases.\n     *\n     * This method is intended to be used only by Typeface static initializer.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static ByteBuffer mmap(@NonNull String fullPath)",
    "returnType" : "ByteBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void pushFamilyToFallback(@NonNull FontConfig.Family xmlFamily, @NonNull ArrayMap<String, ArrayList<FontFamily>> fallbackMap, @NonNull Map<String, ByteBuffer> cache, @NonNull ArrayList<Font> availableFonts)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static FontFamily createFontFamily(@NonNull String familyName, @NonNull List<FontConfig.Font> fonts, @NonNull String languageTags, @FontConfig.Family.Variant int variant, @NonNull Map<String, ByteBuffer> cache, @NonNull ArrayList<Font> availableFonts)",
    "returnType" : "FontFamily",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void appendNamedFamily(@NonNull FontConfig.Family xmlFamily, @NonNull HashMap<String, ByteBuffer> bufferCache, @NonNull ArrayMap<String, ArrayList<FontFamily>> fallbackListMap, @NonNull ArrayList<Font> availableFonts)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static FontConfig.Alias[] buildSystemFallback(@NonNull String xmlPath, @NonNull String fontDir, @NonNull FontCustomizationParser.Result oemCustomization, @NonNull ArrayMap<String, FontFamily[]> fallbackMap, @NonNull ArrayList<Font> availableFonts)",
    "returnType" : "FontConfig.Alias[]",
    "comment" : "\n     * Build the system fallback from xml file.\n     *\n     * @param xmlPath A full path string to the fonts.xml file.\n     * @param fontDir A full path string to the system font directory. This must end with\n     *                slash('/').\n     * @param fallbackMap An output system fallback map. Caller must pass empty map.\n     * @return a list of aliases\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static FontCustomizationParser.Result readFontCustomization(@NonNull String customizeXml, @NonNull String customFontsDir)",
    "returnType" : "FontCustomizationParser.Result",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DEFAULT_FAMILY", "sSystemFallbackMap", "sAliases", "sAvailableFonts" ],
  "methodNames" : [ "public static Set<Font> getAvailableFonts()", "public static FontFamily[] getSystemFallback(@Nullable String familyName)", "public static Map<String, FontFamily[]> getRawSystemFallbackMap()", "public static FontConfig.Alias[] getAliases()", "private static ByteBuffer mmap(@NonNull String fullPath)", "private static void pushFamilyToFallback(@NonNull FontConfig.Family xmlFamily, @NonNull ArrayMap<String, ArrayList<FontFamily>> fallbackMap, @NonNull Map<String, ByteBuffer> cache, @NonNull ArrayList<Font> availableFonts)", "private static FontFamily createFontFamily(@NonNull String familyName, @NonNull List<FontConfig.Font> fonts, @NonNull String languageTags, @FontConfig.Family.Variant int variant, @NonNull Map<String, ByteBuffer> cache, @NonNull ArrayList<Font> availableFonts)", "private static void appendNamedFamily(@NonNull FontConfig.Family xmlFamily, @NonNull HashMap<String, ByteBuffer> bufferCache, @NonNull ArrayMap<String, ArrayList<FontFamily>> fallbackListMap, @NonNull ArrayList<Font> availableFonts)", "public static FontConfig.Alias[] buildSystemFallback(@NonNull String xmlPath, @NonNull String fontDir, @NonNull FontCustomizationParser.Result oemCustomization, @NonNull ArrayMap<String, FontFamily[]> fallbackMap, @NonNull ArrayList<Font> availableFonts)", "private static FontCustomizationParser.Result readFontCustomization(@NonNull String customizeXml, @NonNull String customFontsDir)" ]
}