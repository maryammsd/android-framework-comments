{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaTranscodingManager.java",
  "packageName" : "android.media",
  "className" : "TranscodingRequest",
  "comment" : "\n     * Abstract base class for all the TranscodingRequest.\n     * <p> TranscodingRequest encapsulates the desired configuration for the transcoding.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TRANSCODING_TYPE_UNKNOWN",
    "type" : "int",
    "comment" : "\n         *\n         * Default transcoding type.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TRANSCODING_TYPE_VIDEO",
    "type" : "int",
    "comment" : "\n         * TRANSCODING_TYPE_VIDEO indicates that client wants to perform transcoding on a video.\n         * <p>Note that currently only support transcoding video file in mp4 format.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TRANSCODING_TYPE_IMAGE",
    "type" : "int",
    "comment" : "\n         * TRANSCODING_TYPE_IMAGE indicates that client wants to perform transcoding on an image.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIORITY_UNKNOWN",
    "type" : "int",
    "comment" : "\n         * Default value.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIORITY_REALTIME",
    "type" : "int",
    "comment" : "\n         * PRIORITY_REALTIME indicates that the transcoding request is time-critical and that the\n         * client wants the transcoding result as soon as possible.\n         * <p> Set PRIORITY_REALTIME only if the transcoding is time-critical as it will involve\n         * performance penalty due to resource reallocation to prioritize the sessions with higher\n         * priority.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIORITY_OFFLINE",
    "type" : "int",
    "comment" : "\n         * PRIORITY_OFFLINE indicates the transcoding is not time-critical and the client does not\n         * need the transcoding result as soon as possible.\n         * <p>Sessions with PRIORITY_OFFLINE will be scheduled behind PRIORITY_REALTIME. Always set\n         * to\n         * PRIORITY_OFFLINE if client does not need the result as soon as possible and could accept\n         * delay of the transcoding result.\n         *\n         * @hide\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "mSourceUri",
    "type" : "Uri",
    "comment" : " Uri of the source media file. ",
    "links" : [ ]
  }, {
    "name" : "mDestinationUri",
    "type" : "Uri",
    "comment" : " Uri of the destination media file. ",
    "links" : [ ]
  }, {
    "name" : "mSourceFileDescriptor",
    "type" : "ParcelFileDescriptor",
    "comment" : " FileDescriptor of the source media file. ",
    "links" : [ ]
  }, {
    "name" : "mDestinationFileDescriptor",
    "type" : "ParcelFileDescriptor",
    "comment" : " FileDescriptor of the destination media file. ",
    "links" : [ ]
  }, {
    "name" : "mClientUid",
    "type" : "int",
    "comment" : "\n         *  The UID of the client that the TranscodingRequest is for. Only privileged caller could\n         *  set this Uid as only they could do the transcoding on behalf of the client.\n         *  -1 means not available.\n         ",
    "links" : [ ]
  }, {
    "name" : "mClientPid",
    "type" : "int",
    "comment" : "\n         *  The Pid of the client that the TranscodingRequest is for. Only privileged caller could\n         *  set this Uid as only they could do the transcoding on behalf of the client.\n         *  -1 means not available.\n         ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : " Type of the transcoding. ",
    "links" : [ ]
  }, {
    "name" : "mPriority",
    "type" : "int",
    "comment" : " Priority of the transcoding. ",
    "links" : [ ]
  }, {
    "name" : "mImageFormat",
    "type" : "MediaFormat",
    "comment" : "\n         * Desired image format for the destination file.\n         * <p> If this is null, source file's image track will be passed through and copied to the\n         * destination file.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "mTestConfig",
    "type" : "TranscodingTestConfig",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n         * Return the type of the transcoding.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Uri getSourceUri()",
    "returnType" : "Uri",
    "comment" : " Return source uri of the transcoding. ",
    "links" : [ ]
  }, {
    "name" : "public ParcelFileDescriptor getSourceFileDescriptor()",
    "returnType" : "ParcelFileDescriptor",
    "comment" : "\n         * Return source file descriptor of the transcoding.\n         * This will be null if client has not provided it.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getClientUid()",
    "returnType" : "int",
    "comment" : " Return the UID of the client that this request is for. -1 means not available. ",
    "links" : [ ]
  }, {
    "name" : "public int getClientPid()",
    "returnType" : "int",
    "comment" : " Return the PID of the client that this request is for. -1 means not available. ",
    "links" : [ ]
  }, {
    "name" : "public Uri getDestinationUri()",
    "returnType" : "Uri",
    "comment" : " Return destination uri of the transcoding. ",
    "links" : [ ]
  }, {
    "name" : "public ParcelFileDescriptor getDestinationFileDescriptor()",
    "returnType" : "ParcelFileDescriptor",
    "comment" : "\n         * Return destination file descriptor of the transcoding.\n         * This will be null if client has not provided it.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getPriority()",
    "returnType" : "int",
    "comment" : "\n         * Return priority of the transcoding.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public TranscodingTestConfig getTestConfig()",
    "returnType" : "TranscodingTestConfig",
    "comment" : "\n         * Return TestConfig of the transcoding.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : " abstract void writeFormatToParcel(TranscodingRequestParcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private TranscodingRequestParcel writeToParcel(@NonNull Context context)",
    "returnType" : "TranscodingRequestParcel",
    "comment" : " Writes the TranscodingRequest to a parcel. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getType()", "public Uri getSourceUri()", "public ParcelFileDescriptor getSourceFileDescriptor()", "public int getClientUid()", "public int getClientPid()", "public Uri getDestinationUri()", "public ParcelFileDescriptor getDestinationFileDescriptor()", "public int getPriority()", "public TranscodingTestConfig getTestConfig()", " abstract void writeFormatToParcel(TranscodingRequestParcel parcel)", "private TranscodingRequestParcel writeToParcel(@NonNull Context context)" ],
  "variableNames" : [ "TRANSCODING_TYPE_UNKNOWN", "TRANSCODING_TYPE_VIDEO", "TRANSCODING_TYPE_IMAGE", "PRIORITY_UNKNOWN", "PRIORITY_REALTIME", "PRIORITY_OFFLINE", "mSourceUri", "mDestinationUri", "mSourceFileDescriptor", "mDestinationFileDescriptor", "mClientUid", "mClientPid", "mType", "mPriority", "mImageFormat", "mTestConfig" ]
}