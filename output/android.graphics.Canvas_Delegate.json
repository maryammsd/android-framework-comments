{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/Canvas_Delegate.java",
  "packageName" : "android.graphics",
  "className" : "Canvas_Delegate",
  "comment" : "\n * Delegate implementing the native methods of android.graphics.Canvas\n *\n * Through the layoutlib_create tool, the original native methods of Canvas have been replaced\n * by calls to methods of the same name in this delegate class.\n *\n * This class behaves like the original native implementation, but in Java, keeping previously\n * native data into its own objects and mapping them to int that are sent back and forth between\n * it and the original Canvas class.\n *\n * @see DelegateManager\n *\n ",
  "variables" : [ {
    "name" : "sFinalizer",
    "type" : "long",
    "comment" : " ---- delegate manager ----",
    "links" : [ ]
  }, {
    "name" : "mDrawFilter",
    "type" : "DrawFilter_Delegate",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Canvas_Delegate getDelegate(Canvas canvas)",
    "returnType" : "Canvas_Delegate",
    "comment" : "\n     * Returns the native delegate associated to a given {@link Canvas} object.\n     ",
    "links" : [ "android.graphics.Canvas" ]
  }, {
    "name" : "public static Canvas_Delegate getDelegate(long native_canvas)",
    "returnType" : "Canvas_Delegate",
    "comment" : "\n     * Returns the native delegate associated to a given an int referencing a {@link Canvas} object.\n     ",
    "links" : [ "android.graphics.Canvas" ]
  }, {
    "name" : "public GcSnapshot getSnapshot()",
    "returnType" : "GcSnapshot",
    "comment" : "\n     * Returns the current {@link Graphics2D} used to draw.\n     ",
    "links" : [ "java.awt.Graphics2D" ]
  }, {
    "name" : "public DrawFilter_Delegate getDrawFilter()",
    "returnType" : "DrawFilter_Delegate",
    "comment" : "\n     * Returns the {@link DrawFilter} delegate or null if none have been set.\n     *\n     * @return the delegate or null.\n     ",
    "links" : [ "android.graphics.DrawFilter" ]
  }, {
    "name" : " static void nFreeCaches()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nFreeTextLayoutCaches()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nInitRaster(long bitmapHandle)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nSetBitmap(long canvas, long bitmapHandle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean nIsOpaque(long nativeCanvas)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int nGetWidth(long nativeCanvas)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int nGetHeight(long nativeCanvas)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int nSave(long nativeCanvas, int saveFlags)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int nSaveLayer(long nativeCanvas, float l, float t, float r, float b, long paint, int layerFlags)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int nSaveUnclippedLayer(long nativeCanvas, int l, int t, int r, int b)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int nSaveLayerAlpha(long nativeCanvas, float l, float t, float r, float b, int alpha, int layerFlags)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nRestoreUnclippedLayer(long nativeCanvas, int saveCount, long nativePaint)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean nRestore(long nativeCanvas)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nRestoreToCount(long nativeCanvas, int saveCount)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int nGetSaveCount(long nativeCanvas)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nTranslate(long nativeCanvas, float dx, float dy)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nScale(long nativeCanvas, float sx, float sy)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nRotate(long nativeCanvas, float degrees)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nSkew(long nativeCanvas, float kx, float ky)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nConcat(long nCanvas, long nMatrix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nSetMatrix(long nCanvas, long nMatrix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean nClipRect(long nCanvas, float left, float top, float right, float bottom, int regionOp)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean nClipPath(long nativeCanvas, long nativePath, int regionOp)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nSetDrawFilter(long nativeCanvas, long nativeFilter)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean nGetClipBounds(long nativeCanvas, Rect bounds)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void nGetMatrix(long canvas, long matrix)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean nQuickReject(long nativeCanvas, long path)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean nQuickReject(long nativeCanvas, float left, float top, float right, float bottom)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nGetNativeFinalizer()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetCompatibilityVersion(int apiLevel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "sFinalizer", "mDrawFilter" ],
  "methodNames" : [ "public static Canvas_Delegate getDelegate(Canvas canvas)", "public static Canvas_Delegate getDelegate(long native_canvas)", "public GcSnapshot getSnapshot()", "public DrawFilter_Delegate getDrawFilter()", " static void nFreeCaches()", " static void nFreeTextLayoutCaches()", " static long nInitRaster(long bitmapHandle)", "public static void nSetBitmap(long canvas, long bitmapHandle)", "public static boolean nIsOpaque(long nativeCanvas)", "public static int nGetWidth(long nativeCanvas)", "public static int nGetHeight(long nativeCanvas)", "public static int nSave(long nativeCanvas, int saveFlags)", "public static int nSaveLayer(long nativeCanvas, float l, float t, float r, float b, long paint, int layerFlags)", "public static int nSaveUnclippedLayer(long nativeCanvas, int l, int t, int r, int b)", "public static int nSaveLayerAlpha(long nativeCanvas, float l, float t, float r, float b, int alpha, int layerFlags)", "public static void nRestoreUnclippedLayer(long nativeCanvas, int saveCount, long nativePaint)", "public static boolean nRestore(long nativeCanvas)", "public static void nRestoreToCount(long nativeCanvas, int saveCount)", "public static int nGetSaveCount(long nativeCanvas)", "public static void nTranslate(long nativeCanvas, float dx, float dy)", "public static void nScale(long nativeCanvas, float sx, float sy)", "public static void nRotate(long nativeCanvas, float degrees)", "public static void nSkew(long nativeCanvas, float kx, float ky)", "public static void nConcat(long nCanvas, long nMatrix)", "public static void nSetMatrix(long nCanvas, long nMatrix)", "public static boolean nClipRect(long nCanvas, float left, float top, float right, float bottom, int regionOp)", "public static boolean nClipPath(long nativeCanvas, long nativePath, int regionOp)", "public static void nSetDrawFilter(long nativeCanvas, long nativeFilter)", "public static boolean nGetClipBounds(long nativeCanvas, Rect bounds)", "public static void nGetMatrix(long canvas, long matrix)", "public static boolean nQuickReject(long nativeCanvas, long path)", "public static boolean nQuickReject(long nativeCanvas, float left, float top, float right, float bottom)", " static long nGetNativeFinalizer()", " static void nSetCompatibilityVersion(int apiLevel)" ]
}