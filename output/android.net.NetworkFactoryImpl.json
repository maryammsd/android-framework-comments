{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/NetworkFactoryImpl.java",
  "packageName" : "android.net",
  "className" : "NetworkFactoryImpl",
  "comment" : " TODO(b/187083878): factor out common code between this and NetworkFactoryLegacyImpl",
  "links" : [ ],
  "variables" : [ {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VDBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INVINCIBLE_SCORE",
    "type" : "NetworkScore",
    "comment" : " TODO : remove this and replace with an API to listen to all requests.",
    "links" : [ ]
  }, {
    "name" : "CMD_REQUEST_NETWORK",
    "type" : "int",
    "comment" : " and remove them and the associated code.",
    "links" : [ ]
  }, {
    "name" : "CMD_CANCEL_REQUEST",
    "type" : "int",
    "comment" : "\n     * Cancel a network request\n     * msg.obj = NetworkRequest\n     ",
    "links" : [ ]
  }, {
    "name" : "CMD_SET_SCORE",
    "type" : "int",
    "comment" : "\n     * Internally used to set our best-guess score.\n     * msg.obj = new score\n     ",
    "links" : [ ]
  }, {
    "name" : "CMD_SET_FILTER",
    "type" : "int",
    "comment" : "\n     * Internally used to set our current filter for coarse bandwidth changes with\n     * technology changes.\n     * msg.obj = new filter\n     ",
    "links" : [ ]
  }, {
    "name" : "CMD_OFFER_NETWORK",
    "type" : "int",
    "comment" : "\n     * Internally used to send the network offer associated with this factory.\n     * No arguments, will read from members\n     ",
    "links" : [ ]
  }, {
    "name" : "CMD_LISTEN_TO_ALL_REQUESTS",
    "type" : "int",
    "comment" : "\n     * Internally used to send the request to listen to all requests.\n     * No arguments, will read from members\n     ",
    "links" : [ ]
  }, {
    "name" : "mNetworkRequests",
    "type" : "Map<NetworkRequest, NetworkRequestInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScore",
    "type" : "NetworkScore",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestCallback",
    "type" : "NetworkOfferCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void register(final String logTag)",
    "returnType" : "void",
    "comment" : " Registers this NetworkFactory with the system. May only be called once per factory. ",
    "links" : [ ]
  }, {
    "name" : "public void registerIgnoringScore(final String logTag)",
    "returnType" : "void",
    "comment" : "\n     * Registers this NetworkFactory with the system ignoring the score filter. This will let\n     * the factory always see all network requests matching its capabilities filter.\n     * May only be called once per factory.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void register(final String logTag, final boolean listenToAllRequests)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleOfferNetwork(@NonNull final NetworkScore score)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void handleMessage(Message msg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleAddRequest(@NonNull final NetworkRequest request)",
    "returnType" : "void",
    "comment" : "\n     * Add a NetworkRequest that the bearer may want to attempt to satisfy.\n     * @see #CMD_REQUEST_NETWORK\n     *\n     * @param request the request to handle.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void handleRemoveRequest(NetworkRequest request)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleSetScore(@NonNull final NetworkScore score)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleSetFilter(@NonNull final NetworkCapabilities netCap)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final void reevaluateAllRequests()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setScoreFilter(final int score)",
    "returnType" : "void",
    "comment" : "\n     * @deprecated this method was never part of the API (system or public) and is only added\n     *   for migration of existing clients.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setScoreFilter(@NonNull final NetworkScore score)",
    "returnType" : "void",
    "comment" : "\n     * Set a score filter for this factory.\n     *\n     * This should include the transports the factory knows its networks will have, and\n     * an optimistic view of the attributes it may have. This does not commit the factory\n     * to being able to bring up such a networkÂ ; it only lets it avoid hearing about\n     * requests that it has no chance of fulfilling.\n     *\n     * @param score the filter\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setCapabilityFilter(NetworkCapabilities netCap)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getRequestCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(FileDescriptor fd, PrintWriter writer, String[] args)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void register(final String logTag)", "public void registerIgnoringScore(final String logTag)", "private void register(final String logTag, final boolean listenToAllRequests)", "private void handleOfferNetwork(@NonNull final NetworkScore score)", "public void handleMessage(Message msg)", "private void handleAddRequest(@NonNull final NetworkRequest request)", "private void handleRemoveRequest(NetworkRequest request)", "private void handleSetScore(@NonNull final NetworkScore score)", "private void handleSetFilter(@NonNull final NetworkCapabilities netCap)", "public final void reevaluateAllRequests()", "public void setScoreFilter(final int score)", "public void setScoreFilter(@NonNull final NetworkScore score)", "public void setCapabilityFilter(NetworkCapabilities netCap)", "public int getRequestCount()", "public void dump(FileDescriptor fd, PrintWriter writer, String[] args)", "public String toString()" ],
  "variableNames" : [ "DBG", "VDBG", "INVINCIBLE_SCORE", "CMD_REQUEST_NETWORK", "CMD_CANCEL_REQUEST", "CMD_SET_SCORE", "CMD_SET_FILTER", "CMD_OFFER_NETWORK", "CMD_LISTEN_TO_ALL_REQUESTS", "mNetworkRequests", "mScore", "mRequestCallback", "mExecutor" ]
}