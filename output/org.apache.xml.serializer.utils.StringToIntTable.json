{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/serializer/utils/StringToIntTable.java",
  "packageName" : "org.apache.xml.serializer.utils",
  "className" : "StringToIntTable",
  "comment" : "\n * A very simple lookup table that stores a list of strings, the even\n * number strings being keys, and the odd number strings being values.\n * \n * This class is a copy of the one in org.apache.xml.utils. \n * It exists to cut the serializers dependancy on that package.\n * \n * This class is not a public API, it is only public so it can be used\n * in org.apache.xml.serializer.\n *  \n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "INVALID_KEY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_blocksize",
    "type" : "int",
    "comment" : " Block size to allocate          ",
    "links" : [ ]
  }, {
    "name" : "m_map",
    "type" : "String[]",
    "comment" : " Array of strings this table points to. Associated with ints\n   * in m_values         ",
    "links" : [ ]
  }, {
    "name" : "m_values",
    "type" : "int[]",
    "comment" : " Array of ints this table points. Associated with strings from\n   * m_map.         ",
    "links" : [ ]
  }, {
    "name" : "m_firstFree",
    "type" : "int",
    "comment" : " Number of ints in the table          ",
    "links" : [ ]
  }, {
    "name" : "m_mapSize",
    "type" : "int",
    "comment" : " Size of this table         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final int getLength()",
    "returnType" : "int",
    "comment" : "\n   * Get the length of the list.\n   *\n   * @return the length of the list \n   ",
    "links" : [ ]
  }, {
    "name" : "public final void put(String key, int value)",
    "returnType" : "void",
    "comment" : "\n   * Append a string onto the vector.\n   *\n   * @param key String to append\n   * @param value The int value of the string\n   ",
    "links" : [ ]
  }, {
    "name" : "public final int get(String key)",
    "returnType" : "int",
    "comment" : "\n   * Tell if the table contains the given string.\n   *\n   * @param key String to look for\n   *\n   * @return The String's int value\n   * \n   ",
    "links" : [ ]
  }, {
    "name" : "public final int getIgnoreCase(String key)",
    "returnType" : "int",
    "comment" : "\n   * Tell if the table contains the given string. Ignore case.\n   *\n   * @param key String to look for\n   *\n   * @return The string's int value\n   ",
    "links" : [ ]
  }, {
    "name" : "public final boolean contains(String key)",
    "returnType" : "boolean",
    "comment" : "\n   * Tell if the table contains the given string.\n   *\n   * @param key String to look for\n   *\n   * @return True if the string is in the table\n   ",
    "links" : [ ]
  }, {
    "name" : "public final String[] keys()",
    "returnType" : "String[]",
    "comment" : "\n   * Return array of keys in the table.\n   * \n   * @return Array of strings\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final int getLength()", "public final void put(String key, int value)", "public final int get(String key)", "public final int getIgnoreCase(String key)", "public final boolean contains(String key)", "public final String[] keys()" ],
  "variableNames" : [ "INVALID_KEY", "m_blocksize", "m_map", "m_values", "m_firstFree", "m_mapSize" ]
}