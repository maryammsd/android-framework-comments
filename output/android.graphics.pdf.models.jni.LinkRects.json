{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/pdf/models/jni/LinkRects.java",
  "packageName" : "android.graphics.pdf.models.jni",
  "className" : "LinkRects",
  "comment" : "  PdfPageLinkContent",
  "links" : [ ],
  "variables" : [ {
    "name" : "NO_LINKS",
    "type" : "LinkRects",
    "comment" : " Required at the JNI layer to detect no links and return an empty {@link LinkRects} ",
    "links" : [ "android.graphics.pdf.models.jni.LinkRects" ]
  }, {
    "name" : "mRects",
    "type" : "List<Rect>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLinkToRect",
    "type" : "List<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUrls",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<Rect> getRects()",
    "returnType" : "List<Rect>",
    "comment" : " Returns the list of bounds for the embedded weblinks. ",
    "links" : [ ]
  }, {
    "name" : "public List<Integer> getLinkToRect()",
    "returnType" : "List<Integer>",
    "comment" : "\n     * Returns the mapping list of bounds to the consecutive link.\n     *\n     * @see #unflattenToList()\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<String> getUrls()",
    "returnType" : "List<String>",
    "comment" : " Returns the list of embedded links on the page of the document. ",
    "links" : [ ]
  }, {
    "name" : "public List<PdfPageLinkContent> unflattenToList()",
    "returnType" : "List<PdfPageLinkContent>",
    "comment" : "\n     * Un-flattens the list and converts to the public class.\n     * <p>As an example, in case there are 2 weblinks on the page of the document with the 1st link\n     * overflowing to the next line, the {@link LinkRects} would have the following values -\n     * <pre>\n     * LinkRects(\n     *      mRects=[Rect(l1, t1, r1, b1), Rect(l2, t2, r2, b2), Rect(l3, t3, r3, b3)],\n     *      mLinkToRect=[0,2,3],\n     *      mUrls=[url1, url2]\n     * )\n     *\n     * // In this case, the first link is represented by the first two {@link Rect}. The mapping to\n     * // these Rect is done through the {@code mLinkToRect} array. This is the flattened\n     * // representation of the links and bounds. Using the method below, we can un-flatten this\n     * // to the following representation -\n     * List(\n     *      PdfPageLinkContent(\n     *          bounds = [Rect(l1, t1, r1, b1), Rect(l2, t2, r2, b2)],\n     *          url = url1\n     *      ),\n     *      PdfPageLinkContent(\n     *          bounds = [Rect(l3, t3, r3, b3)],\n     *          url = url2\n     *      ),\n     * )\n     * </pre>\n     ",
    "links" : [ "android.graphics.Rect", "android.graphics.pdf.models.jni.LinkRects" ]
  } ],
  "methodNames" : [ "public List<Rect> getRects()", "public List<Integer> getLinkToRect()", "public List<String> getUrls()", "public List<PdfPageLinkContent> unflattenToList()" ],
  "variableNames" : [ "NO_LINKS", "mRects", "mLinkToRect", "mUrls" ]
}