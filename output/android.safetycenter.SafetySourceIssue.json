{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/safetycenter/SafetySourceIssue.java",
  "packageName" : "android.safetycenter",
  "className" : "SafetySourceIssue",
  "comment" : "\n * Data for a safety source issue in the Safety Center page.\n *\n * <p>An issue represents an actionable matter relating to a particular safety source.\n *\n * <p>The safety issue will contain localized messages to be shown in UI explaining the potential\n * threat or warning and suggested fixes, as well as actions a user is allowed to take from the UI\n * to resolve the issue.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ISSUE_CATEGORY_DEVICE",
    "type" : "int",
    "comment" : " Indicates that the risk associated with the issue is related to a user's device safety. ",
    "links" : [ ]
  }, {
    "name" : "ISSUE_CATEGORY_ACCOUNT",
    "type" : "int",
    "comment" : " Indicates that the risk associated with the issue is related to a user's account safety. ",
    "links" : [ ]
  }, {
    "name" : "ISSUE_CATEGORY_GENERAL",
    "type" : "int",
    "comment" : "\n     * Indicates that the risk associated with the issue is related to a user's general safety.\n     *\n     * <p>This is the default. It is a generic value used when the category is not known or is not\n     * relevant.\n     ",
    "links" : [ ]
  }, {
    "name" : "ISSUE_CATEGORY_DATA",
    "type" : "int",
    "comment" : " Indicates that the risk associated with the issue is related to a user's data. ",
    "links" : [ ]
  }, {
    "name" : "ISSUE_CATEGORY_PASSWORDS",
    "type" : "int",
    "comment" : " Indicates that the risk associated with the issue is related to a user's passwords. ",
    "links" : [ ]
  }, {
    "name" : "ISSUE_CATEGORY_PERSONAL_SAFETY",
    "type" : "int",
    "comment" : " Indicates that the risk associated with the issue is related to a user's personal safety. ",
    "links" : [ ]
  }, {
    "name" : "NOTIFICATION_BEHAVIOR_UNSPECIFIED",
    "type" : "int",
    "comment" : " Value signifying that the source has not specified a particular notification behavior. ",
    "links" : [ ]
  }, {
    "name" : "NOTIFICATION_BEHAVIOR_NEVER",
    "type" : "int",
    "comment" : " An issue which Safety Center should never notify the user about. ",
    "links" : [ ]
  }, {
    "name" : "NOTIFICATION_BEHAVIOR_DELAYED",
    "type" : "int",
    "comment" : "\n     * An issue which Safety Center may notify the user about after a delay if it has not been\n     * resolved. Safety Center does not provide any guarantee about the duration of the delay.\n     ",
    "links" : [ ]
  }, {
    "name" : "NOTIFICATION_BEHAVIOR_IMMEDIATELY",
    "type" : "int",
    "comment" : " An issue which Safety Center may notify the user about immediately. ",
    "links" : [ ]
  }, {
    "name" : "ISSUE_ACTIONABILITY_MANUAL",
    "type" : "int",
    "comment" : "\n     * An issue which requires manual user input to be resolved.\n     *\n     * <p>This is the default.\n     ",
    "links" : [ ]
  }, {
    "name" : "ISSUE_ACTIONABILITY_TIP",
    "type" : "int",
    "comment" : "\n     * An issue which is just a \"tip\" and may not require any user input.\n     *\n     * <p>It is still possible to provide {@link Action}s to e.g. \"learn more\" about it or\n     * acknowledge it.\n     ",
    "links" : [ "Action" ]
  }, {
    "name" : "ISSUE_ACTIONABILITY_AUTOMATIC",
    "type" : "int",
    "comment" : "\n     * An issue which has already been actioned and may not require any user input.\n     *\n     * <p>It is still possible to provide {@link Action}s to e.g. \"learn more\" about it or\n     * acknowledge it.\n     ",
    "links" : [ "Action" ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SafetySourceIssue>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubtitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSummary",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSeverityLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActions",
    "type" : "List<Action>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnDismissPendingIntent",
    "type" : "PendingIntent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIssueCategory",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIssueTypeId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomNotification",
    "type" : "Notification",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNotificationBehavior",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAttributionTitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeduplicationId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIssueActionability",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getId()",
    "returnType" : "String",
    "comment" : "\n     * Returns the identifier for this issue.\n     *\n     * <p>This id should uniquely identify the safety risk represented by this issue. Safety issues\n     * will be deduped by this id to be shown in the UI.\n     *\n     * <p>On multiple instances of providing the same issue to be represented in Safety Center,\n     * provide the same id across all instances.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getTitle()",
    "returnType" : "CharSequence",
    "comment" : " Returns the localized title of the issue to be displayed in the UI. ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getSubtitle()",
    "returnType" : "CharSequence",
    "comment" : " Returns the localized subtitle of the issue to be displayed in the UI. ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getSummary()",
    "returnType" : "CharSequence",
    "comment" : " Returns the localized summary of the issue to be displayed in the UI. ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getAttributionTitle()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Returns the localized attribution title of the issue to be displayed in the UI.\n     *\n     * <p>This is displayed in the UI and helps to attribute issue cards to a particular source. If\n     * this value is {@code null}, the title of the group that contains the Safety Source will be\n     * used.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getSeverityLevel()",
    "returnType" : "int",
    "comment" : " Returns the {@link SafetySourceData.SeverityLevel} of the issue. ",
    "links" : [ "SafetySourceData.SeverityLevel" ]
  }, {
    "name" : "public int getIssueCategory()",
    "returnType" : "int",
    "comment" : "\n     * Returns the category of the risk associated with the issue.\n     *\n     * <p>The default category will be {@link #ISSUE_CATEGORY_GENERAL}.\n     ",
    "links" : [ "#ISSUE_CATEGORY_GENERAL" ]
  }, {
    "name" : "public List<Action> getActions()",
    "returnType" : "List<Action>",
    "comment" : "\n     * Returns a list of {@link Action}s representing actions supported in the UI for this issue.\n     *\n     * <p>Each issue must contain at least one action, in order to help the user resolve the issue.\n     *\n     * <p>In Android {@link android.os.Build.VERSION_CODES#TIRAMISU}, each issue can contain at most\n     * two actions supported from the UI.\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#TIRAMISU", "Action" ]
  }, {
    "name" : "public PendingIntent getOnDismissPendingIntent()",
    "returnType" : "PendingIntent",
    "comment" : "\n     * Returns the optional {@link PendingIntent} that will be invoked when an issue is dismissed.\n     *\n     * <p>When a safety issue is dismissed in Safety Center page, the issue is removed from view in\n     * Safety Center page. This method returns an additional optional action specified by the safety\n     * source that should be invoked on issue dismissal. The action contained in the {@link\n     * PendingIntent} cannot start an activity.\n     ",
    "links" : [ "android.app.PendingIntent" ]
  }, {
    "name" : "public String getIssueTypeId()",
    "returnType" : "String",
    "comment" : "\n     * Returns the identifier for the type of this issue.\n     *\n     * <p>The issue type should indicate the underlying basis for the issue, for e.g. a pending\n     * update or a disabled security feature.\n     *\n     * <p>The difference between this id and {@link #getId()} is that the issue type id is meant to\n     * be used for logging and should therefore contain no personally identifiable information (PII)\n     * (e.g. for account name).\n     *\n     * <p>On multiple instances of providing the same issue to be represented in Safety Center,\n     * provide the same issue type id across all instances.\n     ",
    "links" : [ "#getId()" ]
  }, {
    "name" : "public Notification getCustomNotification()",
    "returnType" : "Notification",
    "comment" : "\n     * Returns the optional custom {@link Notification} for this issue which overrides the title,\n     * text and actions for any {@link android.app.Notification} generated for this {@link\n     * SafetySourceIssue}.\n     *\n     * <p>Safety Center may still generate a default notification from the other details of this\n     * issue when no custom notification has been set. See {@link #getNotificationBehavior()} for\n     * details\n     *\n     * @see Builder#setCustomNotification(android.safetycenter.SafetySourceIssue.Notification\n     * @see #getNotificationBehavior()\n     ",
    "links" : [ "#getNotificationBehavior()", "android.app.Notification", "android.safetycenter.SafetySourceIssue", "Notification" ]
  }, {
    "name" : "public int getNotificationBehavior()",
    "returnType" : "int",
    "comment" : "\n     * Returns the {@link NotificationBehavior} for this issue which determines if and when Safety\n     * Center will post a notification for this issue.\n     *\n     * <p>Any notification will be based on the {@link #getCustomNotification()} if set, or the\n     * other properties of this issue otherwise.\n     *\n     * <ul>\n     *   <li>If {@link #NOTIFICATION_BEHAVIOR_IMMEDIATELY} then Safety Center will immediately\n     *       create and post a notification\n     *   <li>If {@link #NOTIFICATION_BEHAVIOR_DELAYED} then a notification will only be posted after\n     *       a delay, if this issue has not been resolved.\n     *   <li>If {@link #NOTIFICATION_BEHAVIOR_UNSPECIFIED} then a notification may or may not be\n     *       posted, the exact behavior is defined by Safety Center.\n     *   <li>If {@link #NOTIFICATION_BEHAVIOR_NEVER} Safety Center will never post a notification\n     *       about this issue. Sources should specify this behavior when they wish to handle their\n     *       own notifications. When this behavior is set sources should not set a custom\n     *       notification.\n     * </ul>\n     *\n     * @see Builder#setNotificationBehavior(int)\n     ",
    "links" : [ "#NOTIFICATION_BEHAVIOR_DELAYED", "#getCustomNotification()", "#NOTIFICATION_BEHAVIOR_NEVER", "#NOTIFICATION_BEHAVIOR_IMMEDIATELY", "#NOTIFICATION_BEHAVIOR_UNSPECIFIED", "NotificationBehavior" ]
  }, {
    "name" : "public String getDeduplicationId()",
    "returnType" : "String",
    "comment" : "\n     * Returns the identifier used to deduplicate this issue against other issues with the same\n     * deduplication identifiers.\n     *\n     * <p>Deduplication identifier will be used to identify duplicate issues. This identifier\n     * applies across all safety sources which are part of the same deduplication group.\n     * Deduplication groups can be set, for each source, in the SafetyCenter config. Therefore, two\n     * issues are considered duplicate if their sources are part of the same deduplication group and\n     * they have the same deduplication identifier.\n     *\n     * <p>Out of all issues that are found to be duplicates, only one will be shown in the UI (the\n     * one with the highest severity, or in case of same severities, the one placed highest in the\n     * config).\n     *\n     * <p>Expected usage implies different sources will coordinate to set the same deduplication\n     * identifiers on issues that they want to deduplicate.\n     *\n     * <p>This shouldn't be a default mechanism for deduplication of issues. Most of the time\n     * sources should coordinate or communicate to only send the issue from one of them. That would\n     * also allow sources to choose which one will be displaying the issue, instead of depending on\n     * severity and config order. This API should only be needed if for some reason this isn't\n     * possible, for example, when sources can't communicate with each other and/or send issues at\n     * different times and/or issues can be of different severities.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getIssueActionability()",
    "returnType" : "int",
    "comment" : "\n     * Returns the {@link IssueActionability} for this issue which determines what type of action is\n     * required from the user:\n     *\n     * <ul>\n     *   <li>If {@link #ISSUE_ACTIONABILITY_MANUAL} then user input is required to resolve the issue\n     *   <li>If {@link #ISSUE_ACTIONABILITY_TIP} then the user needs to review this issue as a tip\n     *       to improve their overall safety, and possibly acknowledge it\n     *   <li>If {@link #ISSUE_ACTIONABILITY_AUTOMATIC} then the user needs to review this issue as\n     *       something that has been resolved on their behalf, and possibly acknowledge it\n     * </ul>\n     *\n     * @see Builder#setIssueActionability(int)\n     ",
    "links" : [ "#ISSUE_ACTIONABILITY_MANUAL", "#ISSUE_ACTIONABILITY_TIP", "IssueActionability", "#ISSUE_ACTIONABILITY_AUTOMATIC" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int validateSeverityLevel(int value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int validateIssueCategory(int value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int validateNotificationBehavior(int value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int validateIssueActionability(int value)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getId()", "public CharSequence getTitle()", "public CharSequence getSubtitle()", "public CharSequence getSummary()", "public CharSequence getAttributionTitle()", "public int getSeverityLevel()", "public int getIssueCategory()", "public List<Action> getActions()", "public PendingIntent getOnDismissPendingIntent()", "public String getIssueTypeId()", "public Notification getCustomNotification()", "public int getNotificationBehavior()", "public String getDeduplicationId()", "public int getIssueActionability()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public String toString()", "private static int validateSeverityLevel(int value)", "private static int validateIssueCategory(int value)", "private static int validateNotificationBehavior(int value)", "private static int validateIssueActionability(int value)" ],
  "variableNames" : [ "ISSUE_CATEGORY_DEVICE", "ISSUE_CATEGORY_ACCOUNT", "ISSUE_CATEGORY_GENERAL", "ISSUE_CATEGORY_DATA", "ISSUE_CATEGORY_PASSWORDS", "ISSUE_CATEGORY_PERSONAL_SAFETY", "NOTIFICATION_BEHAVIOR_UNSPECIFIED", "NOTIFICATION_BEHAVIOR_NEVER", "NOTIFICATION_BEHAVIOR_DELAYED", "NOTIFICATION_BEHAVIOR_IMMEDIATELY", "ISSUE_ACTIONABILITY_MANUAL", "ISSUE_ACTIONABILITY_TIP", "ISSUE_ACTIONABILITY_AUTOMATIC", "CREATOR", "mId", "mTitle", "mSubtitle", "mSummary", "mSeverityLevel", "mActions", "mOnDismissPendingIntent", "mIssueCategory", "mIssueTypeId", "mCustomNotification", "mNotificationBehavior", "mAttributionTitle", "mDeduplicationId", "mIssueActionability" ]
}