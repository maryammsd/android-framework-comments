{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/CellIdentityLte.java",
  "packageName" : "android.telephony",
  "className" : "CellIdentityLte",
  "comment" : "\n * CellIdentity is to represent a unique LTE cell\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_CI",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_PCI",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_TAC",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_EARFCN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_BANDWIDTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCi",
    "type" : "int",
    "comment" : " 28-bit cell identity",
    "links" : [ ]
  }, {
    "name" : "mPci",
    "type" : "int",
    "comment" : " physical cell id 0..503",
    "links" : [ ]
  }, {
    "name" : "mTac",
    "type" : "int",
    "comment" : " 16-bit tracking area code",
    "links" : [ ]
  }, {
    "name" : "mEarfcn",
    "type" : "int",
    "comment" : " 18-bit Absolute RF Channel Number",
    "links" : [ ]
  }, {
    "name" : "mBandwidth",
    "type" : "int",
    "comment" : " cell bandwidth, in kHz",
    "links" : [ ]
  }, {
    "name" : "mBands",
    "type" : "int[]",
    "comment" : " cell bands",
    "links" : [ ]
  }, {
    "name" : "mAdditionalPlmns",
    "type" : "ArraySet<String>",
    "comment" : " a list of additional PLMN-IDs reported for this cell",
    "links" : [ ]
  }, {
    "name" : "mCsgInfo",
    "type" : "ClosedSubscriberGroupInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<CellIdentityLte>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public CellIdentityLte sanitizeLocationInfo()",
    "returnType" : "CellIdentityLte",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " CellIdentityLte copy()",
    "returnType" : "CellIdentityLte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void updateGlobalCellId()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getMcc()",
    "returnType" : "int",
    "comment" : "\n     * @return 3-digit Mobile Country Code, 0..999,\n     *         {@link android.telephony.CellInfo#UNAVAILABLE UNAVAILABLE} if unavailable.\n     * @deprecated Use {@link #getMccString} instead.\n     ",
    "links" : [ "android.telephony.CellInfo#UNAVAILABLE", "#getMccString" ]
  }, {
    "name" : "public int getMnc()",
    "returnType" : "int",
    "comment" : "\n     * @return 2 or 3-digit Mobile Network Code, 0..999,\n     *         {@link android.telephony.CellInfo#UNAVAILABLE UNAVAILABLE} if unavailable.\n     * @deprecated Use {@link #getMncString} instead.\n     ",
    "links" : [ "android.telephony.CellInfo#UNAVAILABLE", "#getMncString" ]
  }, {
    "name" : "public int getCi()",
    "returnType" : "int",
    "comment" : "\n     * @return 28-bit Cell Identity,\n     *         {@link android.telephony.CellInfo#UNAVAILABLE UNAVAILABLE} if unavailable.\n     ",
    "links" : [ "android.telephony.CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getPci()",
    "returnType" : "int",
    "comment" : "\n     * @return Physical Cell Id 0..503,\n     *         {@link android.telephony.CellInfo#UNAVAILABLE UNAVAILABLE} if unavailable.\n     ",
    "links" : [ "android.telephony.CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getTac()",
    "returnType" : "int",
    "comment" : "\n     * @return 16-bit Tracking Area Code,\n     *         {@link android.telephony.CellInfo#UNAVAILABLE UNAVAILABLE} if unavailable.\n     ",
    "links" : [ "android.telephony.CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int getEarfcn()",
    "returnType" : "int",
    "comment" : "\n     * @return 18-bit Absolute RF Channel Number,\n     *         {@link android.telephony.CellInfo#UNAVAILABLE UNAVAILABLE} if unavailable.\n     ",
    "links" : [ "android.telephony.CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public int[] getBands()",
    "returnType" : "int[]",
    "comment" : "\n     * Get bands of the cell\n     *\n     * Reference: 3GPP TS 36.101 section 5.5\n     *\n     * @return Array of band number or empty array if not available.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getBandwidth()",
    "returnType" : "int",
    "comment" : "\n     * @return Cell bandwidth in kHz,\n     *         {@link android.telephony.CellInfo#UNAVAILABLE UNAVAILABLE} if unavailable.\n     ",
    "links" : [ "android.telephony.CellInfo#UNAVAILABLE" ]
  }, {
    "name" : "public String getMccString()",
    "returnType" : "String",
    "comment" : "\n     * @return Mobile Country Code in string format, null if unavailable.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getMncString()",
    "returnType" : "String",
    "comment" : "\n     * @return Mobile Network Code in string format, null if unavailable.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getMobileNetworkOperator()",
    "returnType" : "String",
    "comment" : "\n     * @return a 5 or 6 character string (MCC+MNC), null if any field is unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getChannelNumber()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public Set<String> getAdditionalPlmns()",
    "returnType" : "Set<String>",
    "comment" : "\n     * @return a list of additional PLMN IDs supported by this cell.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ClosedSubscriberGroupInfo getClosedSubscriberGroupInfo()",
    "returnType" : "ClosedSubscriberGroupInfo",
    "comment" : "\n     * @return closed subscriber group information about the cell if available, otherwise null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public GsmCellLocation asCellLocation()",
    "returnType" : "GsmCellLocation",
    "comment" : "\n     * A hack to allow tunneling of LTE information via GsmCellLocation\n     * so that older Network Location Providers can return some information\n     * on LTE only networks, see bug 9228974.\n     *\n     * The tunnel'd LTE information is returned as follows:\n     *   LAC = TAC field\n     *   CID = CI field\n     *   PSC = 0.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "protected static CellIdentityLte createFromParcelBody(Parcel in)",
    "returnType" : "CellIdentityLte",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DBG", "MAX_CI", "MAX_PCI", "MAX_TAC", "MAX_EARFCN", "MAX_BANDWIDTH", "mCi", "mPci", "mTac", "mEarfcn", "mBandwidth", "mBands", "mAdditionalPlmns", "mCsgInfo", "CREATOR" ],
  "methodNames" : [ "public CellIdentityLte sanitizeLocationInfo()", " CellIdentityLte copy()", "protected void updateGlobalCellId()", "public int getMcc()", "public int getMnc()", "public int getCi()", "public int getPci()", "public int getTac()", "public int getEarfcn()", "public int[] getBands()", "public int getBandwidth()", "public String getMccString()", "public String getMncString()", "public String getMobileNetworkOperator()", "public int getChannelNumber()", "public Set<String> getAdditionalPlmns()", "public ClosedSubscriberGroupInfo getClosedSubscriberGroupInfo()", "public GsmCellLocation asCellLocation()", "public int hashCode()", "public boolean equals(Object other)", "public String toString()", "public void writeToParcel(Parcel dest, int flags)", "protected static CellIdentityLte createFromParcelBody(Parcel in)" ]
}