{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/permissionpresenterservice/RuntimePermissionPresenterService.java",
  "packageName" : "android.permissionpresenterservice",
  "className" : "RuntimePermissionPresenterService",
  "comment" : "\n * This service presents information regarding runtime permissions that is\n * used for presenting them in the UI. Runtime permissions are presented as\n * a single permission in the UI but may be composed of several individual\n * permissions.\n *\n * @see RuntimePermissionPresentationInfo\n *\n * @hide\n *\n * @deprecated use {@link PermissionControllerService} instead\n ",
  "links" : [ "android.permission.PermissionControllerService" ],
  "variables" : [ {
    "name" : "SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The {@link Intent} action that must be declared as handled by a service\n     * in its manifest for the system to recognize it as a runtime permission\n     * presenter service.\n     ",
    "links" : [ "android.content.Intent" ]
  }, {
    "name" : "KEY_RESULT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : " No need for locking - always set first and never modified",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void attachBaseContext(Context base)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract List<RuntimePermissionPresentationInfo> onGetAppPermissions(@NonNull String packageName)",
    "returnType" : "List<RuntimePermissionPresentationInfo>",
    "comment" : "\n     * Gets the runtime permissions for an app.\n     *\n     * @param packageName The package for which to query.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final IBinder onBind(Intent intent)",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void getAppPermissions(@NonNull String packageName, @NonNull RemoteCallback callback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final void attachBaseContext(Context base)", "public abstract List<RuntimePermissionPresentationInfo> onGetAppPermissions(@NonNull String packageName)", "public final IBinder onBind(Intent intent)", "private void getAppPermissions(@NonNull String packageName, @NonNull RemoteCallback callback)" ],
  "variableNames" : [ "SERVICE_INTERFACE", "KEY_RESULT", "mHandler" ]
}