{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/lang/UScript.java",
  "packageName" : "android.icu.lang",
  "className" : "UScript",
  "comment" : "\n * Constants for ISO 15924 script codes, and related functions.\n *\n * <p>The current set of script code constants supports at least all scripts\n * that are encoded in the version of Unicode which ICU currently supports.\n * The names of the constants are usually derived from the\n * Unicode script property value aliases.\n * See UAX #24 Unicode Script Property (http://www.unicode.org/reports/tr24/)\n * and http://www.unicode.org/Public/UCD/latest/ucd/PropertyValueAliases.txt .\n *\n * <p>In addition, constants for many ISO 15924 script codes\n * are included, for use with language tags, CLDR data, and similar.\n * Some of those codes are not used in the Unicode Character Database (UCD).\n * For example, there are no characters that have a UCD script property value of\n * Hans or Hant. All Han ideographs have the Hani script property value in Unicode.\n *\n * <p>Private-use codes Qaaa..Qabx are not included, except as used in the UCD or in CLDR.\n *\n * <p>Starting with ICU 55, script codes are only added when their scripts\n * have been or will certainly be encoded in Unicode,\n * and have been assigned Unicode script property value aliases,\n * to ensure that their script names are stable and match the names of the constants.\n * Script codes like Latf and Aran that are not subject to separate encoding\n * may be added at any time.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "INVALID_CODE",
    "type" : "int",
    "comment" : "\n     * Invalid code\n     ",
    "links" : [ ]
  }, {
    "name" : "COMMON",
    "type" : "int",
    "comment" : "\n     * Common\n     ",
    "links" : [ ]
  }, {
    "name" : "INHERITED",
    "type" : "int",
    "comment" : "\n     * Inherited\n     ",
    "links" : [ ]
  }, {
    "name" : "ARABIC",
    "type" : "int",
    "comment" : "\n     * Arabic\n     ",
    "links" : [ ]
  }, {
    "name" : "ARMENIAN",
    "type" : "int",
    "comment" : "\n     * Armenian\n     ",
    "links" : [ ]
  }, {
    "name" : "BENGALI",
    "type" : "int",
    "comment" : "\n     * Bengali\n     ",
    "links" : [ ]
  }, {
    "name" : "BOPOMOFO",
    "type" : "int",
    "comment" : "\n     * Bopomofo\n     ",
    "links" : [ ]
  }, {
    "name" : "CHEROKEE",
    "type" : "int",
    "comment" : "\n     * Cherokee\n     ",
    "links" : [ ]
  }, {
    "name" : "COPTIC",
    "type" : "int",
    "comment" : "\n     * Coptic\n     ",
    "links" : [ ]
  }, {
    "name" : "CYRILLIC",
    "type" : "int",
    "comment" : "\n     * Cyrillic\n     ",
    "links" : [ ]
  }, {
    "name" : "DESERET",
    "type" : "int",
    "comment" : "\n     * Deseret\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVANAGARI",
    "type" : "int",
    "comment" : "\n     * Devanagari\n     ",
    "links" : [ ]
  }, {
    "name" : "ETHIOPIC",
    "type" : "int",
    "comment" : "\n     * Ethiopic\n     ",
    "links" : [ ]
  }, {
    "name" : "GEORGIAN",
    "type" : "int",
    "comment" : "\n     * Georgian\n     ",
    "links" : [ ]
  }, {
    "name" : "GOTHIC",
    "type" : "int",
    "comment" : "\n     * Gothic\n     ",
    "links" : [ ]
  }, {
    "name" : "GREEK",
    "type" : "int",
    "comment" : "\n     * Greek\n     ",
    "links" : [ ]
  }, {
    "name" : "GUJARATI",
    "type" : "int",
    "comment" : "\n     * Gujarati\n     ",
    "links" : [ ]
  }, {
    "name" : "GURMUKHI",
    "type" : "int",
    "comment" : "\n     * Gurmukhi\n     ",
    "links" : [ ]
  }, {
    "name" : "HAN",
    "type" : "int",
    "comment" : "\n     * Han\n     ",
    "links" : [ ]
  }, {
    "name" : "HANGUL",
    "type" : "int",
    "comment" : "\n     * Hangul\n     ",
    "links" : [ ]
  }, {
    "name" : "HEBREW",
    "type" : "int",
    "comment" : "\n     * Hebrew\n     ",
    "links" : [ ]
  }, {
    "name" : "HIRAGANA",
    "type" : "int",
    "comment" : "\n     * Hiragana\n     ",
    "links" : [ ]
  }, {
    "name" : "KANNADA",
    "type" : "int",
    "comment" : "\n     * Kannada\n     ",
    "links" : [ ]
  }, {
    "name" : "KATAKANA",
    "type" : "int",
    "comment" : "\n     * Katakana\n     ",
    "links" : [ ]
  }, {
    "name" : "KHMER",
    "type" : "int",
    "comment" : "\n     * Khmer\n     ",
    "links" : [ ]
  }, {
    "name" : "LAO",
    "type" : "int",
    "comment" : "\n     * Lao\n     ",
    "links" : [ ]
  }, {
    "name" : "LATIN",
    "type" : "int",
    "comment" : "\n     * Latin\n     ",
    "links" : [ ]
  }, {
    "name" : "MALAYALAM",
    "type" : "int",
    "comment" : "\n     * Malayalam\n     ",
    "links" : [ ]
  }, {
    "name" : "MONGOLIAN",
    "type" : "int",
    "comment" : "\n     * Mangolian\n     ",
    "links" : [ ]
  }, {
    "name" : "MYANMAR",
    "type" : "int",
    "comment" : "\n     * Myammar\n     ",
    "links" : [ ]
  }, {
    "name" : "OGHAM",
    "type" : "int",
    "comment" : "\n     * Ogham\n     ",
    "links" : [ ]
  }, {
    "name" : "OLD_ITALIC",
    "type" : "int",
    "comment" : "\n     * Old Itallic\n     ",
    "links" : [ ]
  }, {
    "name" : "ORIYA",
    "type" : "int",
    "comment" : "\n     * Oriya\n     ",
    "links" : [ ]
  }, {
    "name" : "RUNIC",
    "type" : "int",
    "comment" : "\n     * Runic\n     ",
    "links" : [ ]
  }, {
    "name" : "SINHALA",
    "type" : "int",
    "comment" : "\n     * Sinhala\n     ",
    "links" : [ ]
  }, {
    "name" : "SYRIAC",
    "type" : "int",
    "comment" : "\n     * Syriac\n     ",
    "links" : [ ]
  }, {
    "name" : "TAMIL",
    "type" : "int",
    "comment" : "\n     * Tamil\n     ",
    "links" : [ ]
  }, {
    "name" : "TELUGU",
    "type" : "int",
    "comment" : "\n     * Telugu\n     ",
    "links" : [ ]
  }, {
    "name" : "THAANA",
    "type" : "int",
    "comment" : "\n     * Thana\n     ",
    "links" : [ ]
  }, {
    "name" : "THAI",
    "type" : "int",
    "comment" : "\n     * Thai\n     ",
    "links" : [ ]
  }, {
    "name" : "TIBETAN",
    "type" : "int",
    "comment" : "\n     * Tibetan\n     ",
    "links" : [ ]
  }, {
    "name" : "CANADIAN_ABORIGINAL",
    "type" : "int",
    "comment" : "\n     * Unified Canadian Aboriginal Symbols\n     ",
    "links" : [ ]
  }, {
    "name" : "UCAS",
    "type" : "int",
    "comment" : "\n     * Unified Canadian Aboriginal Symbols (alias)\n     ",
    "links" : [ ]
  }, {
    "name" : "YI",
    "type" : "int",
    "comment" : "\n     * Yi syllables\n     ",
    "links" : [ ]
  }, {
    "name" : "TAGALOG",
    "type" : "int",
    "comment" : "\n     * Tagalog\n     ",
    "links" : [ ]
  }, {
    "name" : "HANUNOO",
    "type" : "int",
    "comment" : "\n     * Hanunooo\n     ",
    "links" : [ ]
  }, {
    "name" : "BUHID",
    "type" : "int",
    "comment" : "\n     * Buhid\n     ",
    "links" : [ ]
  }, {
    "name" : "TAGBANWA",
    "type" : "int",
    "comment" : "\n     * Tagbanwa\n     ",
    "links" : [ ]
  }, {
    "name" : "BRAILLE",
    "type" : "int",
    "comment" : "\n     * Braille\n     * Script in Unicode 4\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "CYPRIOT",
    "type" : "int",
    "comment" : "\n     * Cypriot\n     * Script in Unicode 4\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "LIMBU",
    "type" : "int",
    "comment" : "\n     * Limbu\n     * Script in Unicode 4\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "LINEAR_B",
    "type" : "int",
    "comment" : "\n     * Linear B\n     * Script in Unicode 4\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "OSMANYA",
    "type" : "int",
    "comment" : "\n     * Osmanya\n     * Script in Unicode 4\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "SHAVIAN",
    "type" : "int",
    "comment" : "\n     * Shavian\n     * Script in Unicode 4\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "TAI_LE",
    "type" : "int",
    "comment" : "\n     * Tai Le\n     * Script in Unicode 4\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "UGARITIC",
    "type" : "int",
    "comment" : "\n     * Ugaritic\n     * Script in Unicode 4\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "KATAKANA_OR_HIRAGANA",
    "type" : "int",
    "comment" : "\n     * Script in Unicode 4.0.1\n     ",
    "links" : [ ]
  }, {
    "name" : "BUGINESE",
    "type" : "int",
    "comment" : "\n     * Script in Unicode 4.1\n     ",
    "links" : [ ]
  }, {
    "name" : "GLAGOLITIC",
    "type" : "int",
    "comment" : "\n     * Script in Unicode 4.1\n     ",
    "links" : [ ]
  }, {
    "name" : "KHAROSHTHI",
    "type" : "int",
    "comment" : "\n     * Script in Unicode 4.1\n     ",
    "links" : [ ]
  }, {
    "name" : "SYLOTI_NAGRI",
    "type" : "int",
    "comment" : "\n     * Script in Unicode 4.1\n     ",
    "links" : [ ]
  }, {
    "name" : "NEW_TAI_LUE",
    "type" : "int",
    "comment" : "\n     * Script in Unicode 4.1\n     ",
    "links" : [ ]
  }, {
    "name" : "TIFINAGH",
    "type" : "int",
    "comment" : "\n     * Script in Unicode 4.1\n     ",
    "links" : [ ]
  }, {
    "name" : "OLD_PERSIAN",
    "type" : "int",
    "comment" : "\n     * Script in Unicode 4.1\n     ",
    "links" : [ ]
  }, {
    "name" : "BALINESE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "BATAK",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "BLISSYMBOLS",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "BRAHMI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "CHAM",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "CIRTH",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "OLD_CHURCH_SLAVONIC_CYRILLIC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "DEMOTIC_EGYPTIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "HIERATIC_EGYPTIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "EGYPTIAN_HIEROGLYPHS",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "KHUTSURI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SIMPLIFIED_HAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "TRADITIONAL_HAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "PAHAWH_HMONG",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "OLD_HUNGARIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "HARAPPAN_INDUS",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "JAVANESE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "KAYAH_LI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LATIN_FRAKTUR",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LATIN_GAELIC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LEPCHA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LINEAR_A",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MANDAIC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MANDAEAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MAYAN_HIEROGLYPHS",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MEROITIC_HIEROGLYPHS",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MEROITIC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "NKO",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "ORKHON",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "OLD_PERMIC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "PHAGS_PA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "PHOENICIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MIAO",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "PHONETIC_POLLARD",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "RONGORONGO",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SARATI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "ESTRANGELO_SYRIAC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "WESTERN_SYRIAC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "EASTERN_SYRIAC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "TENGWAR",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "VAI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "VISIBLE_SPEECH",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "CUNEIFORM",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "UNWRITTEN_LANGUAGES",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "UNKNOWN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "CARIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "JAPANESE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LANNA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LYCIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LYDIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "OL_CHIKI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "REJANG",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SAURASHTRA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SIGN_WRITING",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code for Sutton SignWriting\n     ",
    "links" : [ ]
  }, {
    "name" : "SUNDANESE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MOON",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MEITEI_MAYEK",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "IMPERIAL_ARAMAIC",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "AVESTAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "CHAKMA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "KOREAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "KAITHI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MANICHAEAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "INSCRIPTIONAL_PAHLAVI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "PSALTER_PAHLAVI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "BOOK_PAHLAVI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "INSCRIPTIONAL_PARTHIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SAMARITAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "TAI_VIET",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MATHEMATICAL_NOTATION",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SYMBOLS",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "BAMUM",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LISU",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "NAKHI_GEBA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "OLD_SOUTH_ARABIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "BASSA_VAH",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "DUPLOYAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "DUPLOYAN_SHORTAND",
    "type" : "int",
    "comment" : "\n     * Typo, use DUPLOYAN\n     * @deprecated ICU 54\n     * @hide original deprecated declaration\n     ",
    "links" : [ ]
  }, {
    "name" : "ELBASAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "GRANTHA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "KPELLE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "LOMA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MENDE",
    "type" : "int",
    "comment" : "\n     * Mende Kikakui\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MEROITIC_CURSIVE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "OLD_NORTH_ARABIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "NABATAEAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "PALMYRENE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "KHUDAWADI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SINDHI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "WARANG_CITI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "AFAKA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "JURCHEN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MRO",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "NUSHU",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SHARADA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SORA_SOMPENG",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "TAKRI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "TANGUT",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "WOLEAI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "ANATOLIAN_HIEROGLYPHS",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "KHOJKI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "TIRHUTA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "CAUCASIAN_ALBANIAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MAHAJANI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "AHOM",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "HATRAN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MODI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MULTANI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "PAU_CIN_HAU",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SIDDHAM",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "ADLAM",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "BHAIKSUKI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MARCHEN",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "NEWA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "OSAGE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "HAN_WITH_BOPOMOFO",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "JAMO",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SYMBOLS_EMOJI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "MASARAM_GONDI",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "SOYOMBO",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "ZANABAZAR_SQUARE",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "DOGRA",
    "type" : "int",
    "comment" : "\n     * ISO 15924 script code\n     ",
    "links" : [ ]
  }, {
    "name" : "GUNJALA_GONDI",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAKASAR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MEDEFAIDRIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HANIFI_ROHINGYA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SOGDIAN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OLD_SOGDIAN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ELYMAIC",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NYIAKENG_PUACHUE_HMONG",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NANDINAGARI",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WANCHO",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHORASMIAN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DIVES_AKURU",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KHITAN_SMALL_SCRIPT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "YEZIDI",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CYPRO_MINOAN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OLD_UYGHUR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TANGSA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TOTO",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VITHKUQI",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KAWI",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NAG_MUNDARI",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ARABIC_NASTALIQ",
    "type" : "int",
    "comment" : " @hide unsupported on Android",
    "links" : [ ]
  }, {
    "name" : "CODE_LIMIT",
    "type" : "int",
    "comment" : "\n     * One more than the highest normal UScript code.\n     * The highest value is available via UCharacter.getIntPropertyMaxValue(UProperty.SCRIPT).\n     *\n     * @deprecated ICU 58 The numeric value may change over time, see ICU ticket #12420.\n     * @hide unsupported on Android\n     ",
    "links" : [ ]
  }, {
    "name" : "usageValues",
    "type" : "ScriptUsage[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static int[] getCodesFromLocale(ULocale locale)",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int[] findCodeFromLocale(ULocale locale)",
    "returnType" : "int[]",
    "comment" : "\n     * Helper function to find the code from locale.\n     * @param locale The locale.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final int[] getCode(Locale locale)",
    "returnType" : "int[]",
    "comment" : "\n     * Gets a script codes associated with the given locale or ISO 15924 abbreviation or name.\n     * Returns MALAYAM given \"Malayam\" OR \"Mlym\".\n     * Returns LATIN given \"en\" OR \"en_US\"\n     * @param locale Locale\n     * @return The script codes array. null if the the code cannot be found.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final int[] getCode(ULocale locale)",
    "returnType" : "int[]",
    "comment" : "\n     * Gets a script codes associated with the given locale or ISO 15924 abbreviation or name.\n     * Returns MALAYAM given \"Malayam\" OR \"Mlym\".\n     * Returns LATIN given \"en\" OR \"en_US\"\n     * @param locale ULocale\n     * @return The script codes array. null if the the code cannot be found.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final int[] getCode(String nameOrAbbrOrLocale)",
    "returnType" : "int[]",
    "comment" : "\n     * Gets the script codes associated with the given locale or ISO 15924 abbreviation or name.\n     * Returns MALAYAM given \"Malayam\" OR \"Mlym\".\n     * Returns LATIN given \"en\" OR \"en_US\"\n     *\n     * <p>Note: To search by short or long script alias only, use\n     * {@link #getCodeFromName(String)} instead.\n     * That does a fast lookup with no access of the locale data.\n     *\n     * @param nameOrAbbrOrLocale name of the script or ISO 15924 code or locale\n     * @return The script codes array. null if the the code cannot be found.\n     ",
    "links" : [ "#getCodeFromName(String)" ]
  }, {
    "name" : "public static final int getCodeFromName(String nameOrAbbr)",
    "returnType" : "int",
    "comment" : "\n     * Returns the script code associated with the given Unicode script property alias\n     * (name or abbreviation).\n     * Short aliases are ISO 15924 script codes.\n     * Returns MALAYAM given \"Malayam\" OR \"Mlym\".\n     *\n     * @param nameOrAbbr name of the script or ISO 15924 code\n     * @return The script code value, or INVALID_CODE if the code cannot be found.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final int getScript(int codepoint)",
    "returnType" : "int",
    "comment" : "\n     * Gets the script code associated with the given codepoint.\n     * Returns UScript.MALAYAM given 0x0D02\n     * @param codepoint UChar32 codepoint\n     * @return The script code\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final boolean hasScript(int c, int sc)",
    "returnType" : "boolean",
    "comment" : "\n     * Do the Script_Extensions of code point c contain script sc?\n     * If c does not have explicit Script_Extensions, then this tests whether\n     * c has the Script property value sc.\n     *\n     * <p>Some characters are commonly used in multiple scripts.\n     * For more information, see UAX #24: http://www.unicode.org/reports/tr24/.\n     *\n     * @param c code point\n     * @param sc script code\n     * @return true if sc is in Script_Extensions(c)\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final int getScriptExtensions(int c, BitSet set)",
    "returnType" : "int",
    "comment" : "\n     * Sets code point c's Script_Extensions as script code integers into the output BitSet.\n     * <ul>\n     * <li>If c does have Script_Extensions, then the return value is\n     * the negative number of Script_Extensions codes (= -set.cardinality());\n     * in this case, the Script property value\n     * (normally Common or Inherited) is not included in the set.\n     * <li>If c does not have Script_Extensions, then the one Script code is put into the set\n     * and also returned.\n     * <li>If c is not a valid code point, then the one {@link #UNKNOWN} code is put into the set\n     * and also returned.\n     * </ul>\n     * In other words, if the return value is non-negative, it is c's single Script code\n     * and the set contains exactly this Script code.\n     * If the return value is -n, then the set contains c's n&gt;=2 Script_Extensions script codes.\n     *\n     * <p>Some characters are commonly used in multiple scripts.\n     * For more information, see UAX #24: http://www.unicode.org/reports/tr24/.\n     *\n     * @param c code point\n     * @param set set of script code integers; will be cleared, then bits are set\n     *            corresponding to c's Script_Extensions\n     * @return negative number of script codes in c's Script_Extensions,\n     *         or the non-negative single Script value\n     ",
    "links" : [ "#UNKNOWN" ]
  }, {
    "name" : "public static final String getName(int scriptCode)",
    "returnType" : "String",
    "comment" : "\n     * Returns the long Unicode script name, if there is one.\n     * Otherwise returns the 4-letter ISO 15924 script code.\n     * Returns \"Malayam\" given MALAYALAM.\n     *\n     * @param scriptCode int script code\n     * @return long script name as given in PropertyValueAliases.txt, or the 4-letter code\n     * @throws IllegalArgumentException if the script code is not valid\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final String getShortName(int scriptCode)",
    "returnType" : "String",
    "comment" : "\n     * Returns the 4-letter ISO 15924 script code,\n     * which is the same as the short Unicode script name if Unicode has names for the script.\n     * Returns \"Mlym\" given MALAYALAM.\n     *\n     * @param scriptCode int script code\n     * @return short script name (4-letter code)\n     * @throws IllegalArgumentException if the script code is not valid\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final String getSampleString(int script)",
    "returnType" : "String",
    "comment" : "\n     * Returns the script sample character string.\n     * This string normally consists of one code point but might be longer.\n     * The string is empty if the script is not encoded.\n     *\n     * @param script script code\n     * @return the sample character string\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final ScriptUsage getUsage(int script)",
    "returnType" : "ScriptUsage",
    "comment" : "\n     * Returns the script usage according to UAX #31 Unicode Identifier and Pattern Syntax.\n     * Returns {@link ScriptUsage#NOT_ENCODED} if the script is not encoded in Unicode.\n     *\n     * @param script script code\n     * @return script usage\n     * @see ScriptUsage\n     ",
    "links" : [ "#NOT_ENCODED" ]
  }, {
    "name" : "public static final boolean isRightToLeft(int script)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the script is written right-to-left.\n     * For example, Arab and Hebr.\n     *\n     * @param script script code\n     * @return true if the script is right-to-left\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final boolean breaksBetweenLetters(int script)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the script allows line breaks between letters (excluding hyphenation).\n     * Such a script typically requires dictionary-based line breaking.\n     * For example, Hani and Thai.\n     *\n     * @param script script code\n     * @return true if the script allows line breaks between letters\n     ",
    "links" : [ ]
  }, {
    "name" : "public static final boolean isCased(int script)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if in modern (or most recent) usage of the script case distinctions are customary.\n     * For example, Latn and Cyrl.\n     *\n     * @param script script code\n     * @return true if the script is cased\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static int[] getCodesFromLocale(ULocale locale)", "private static int[] findCodeFromLocale(ULocale locale)", "public static final int[] getCode(Locale locale)", "public static final int[] getCode(ULocale locale)", "public static final int[] getCode(String nameOrAbbrOrLocale)", "public static final int getCodeFromName(String nameOrAbbr)", "public static final int getScript(int codepoint)", "public static final boolean hasScript(int c, int sc)", "public static final int getScriptExtensions(int c, BitSet set)", "public static final String getName(int scriptCode)", "public static final String getShortName(int scriptCode)", "public static final String getSampleString(int script)", "public static final ScriptUsage getUsage(int script)", "public static final boolean isRightToLeft(int script)", "public static final boolean breaksBetweenLetters(int script)", "public static final boolean isCased(int script)" ],
  "variableNames" : [ "INVALID_CODE", "COMMON", "INHERITED", "ARABIC", "ARMENIAN", "BENGALI", "BOPOMOFO", "CHEROKEE", "COPTIC", "CYRILLIC", "DESERET", "DEVANAGARI", "ETHIOPIC", "GEORGIAN", "GOTHIC", "GREEK", "GUJARATI", "GURMUKHI", "HAN", "HANGUL", "HEBREW", "HIRAGANA", "KANNADA", "KATAKANA", "KHMER", "LAO", "LATIN", "MALAYALAM", "MONGOLIAN", "MYANMAR", "OGHAM", "OLD_ITALIC", "ORIYA", "RUNIC", "SINHALA", "SYRIAC", "TAMIL", "TELUGU", "THAANA", "THAI", "TIBETAN", "CANADIAN_ABORIGINAL", "UCAS", "YI", "TAGALOG", "HANUNOO", "BUHID", "TAGBANWA", "BRAILLE", "CYPRIOT", "LIMBU", "LINEAR_B", "OSMANYA", "SHAVIAN", "TAI_LE", "UGARITIC", "KATAKANA_OR_HIRAGANA", "BUGINESE", "GLAGOLITIC", "KHAROSHTHI", "SYLOTI_NAGRI", "NEW_TAI_LUE", "TIFINAGH", "OLD_PERSIAN", "BALINESE", "BATAK", "BLISSYMBOLS", "BRAHMI", "CHAM", "CIRTH", "OLD_CHURCH_SLAVONIC_CYRILLIC", "DEMOTIC_EGYPTIAN", "HIERATIC_EGYPTIAN", "EGYPTIAN_HIEROGLYPHS", "KHUTSURI", "SIMPLIFIED_HAN", "TRADITIONAL_HAN", "PAHAWH_HMONG", "OLD_HUNGARIAN", "HARAPPAN_INDUS", "JAVANESE", "KAYAH_LI", "LATIN_FRAKTUR", "LATIN_GAELIC", "LEPCHA", "LINEAR_A", "MANDAIC", "MANDAEAN", "MAYAN_HIEROGLYPHS", "MEROITIC_HIEROGLYPHS", "MEROITIC", "NKO", "ORKHON", "OLD_PERMIC", "PHAGS_PA", "PHOENICIAN", "MIAO", "PHONETIC_POLLARD", "RONGORONGO", "SARATI", "ESTRANGELO_SYRIAC", "WESTERN_SYRIAC", "EASTERN_SYRIAC", "TENGWAR", "VAI", "VISIBLE_SPEECH", "CUNEIFORM", "UNWRITTEN_LANGUAGES", "UNKNOWN", "CARIAN", "JAPANESE", "LANNA", "LYCIAN", "LYDIAN", "OL_CHIKI", "REJANG", "SAURASHTRA", "SIGN_WRITING", "SUNDANESE", "MOON", "MEITEI_MAYEK", "IMPERIAL_ARAMAIC", "AVESTAN", "CHAKMA", "KOREAN", "KAITHI", "MANICHAEAN", "INSCRIPTIONAL_PAHLAVI", "PSALTER_PAHLAVI", "BOOK_PAHLAVI", "INSCRIPTIONAL_PARTHIAN", "SAMARITAN", "TAI_VIET", "MATHEMATICAL_NOTATION", "SYMBOLS", "BAMUM", "LISU", "NAKHI_GEBA", "OLD_SOUTH_ARABIAN", "BASSA_VAH", "DUPLOYAN", "DUPLOYAN_SHORTAND", "ELBASAN", "GRANTHA", "KPELLE", "LOMA", "MENDE", "MEROITIC_CURSIVE", "OLD_NORTH_ARABIAN", "NABATAEAN", "PALMYRENE", "KHUDAWADI", "SINDHI", "WARANG_CITI", "AFAKA", "JURCHEN", "MRO", "NUSHU", "SHARADA", "SORA_SOMPENG", "TAKRI", "TANGUT", "WOLEAI", "ANATOLIAN_HIEROGLYPHS", "KHOJKI", "TIRHUTA", "CAUCASIAN_ALBANIAN", "MAHAJANI", "AHOM", "HATRAN", "MODI", "MULTANI", "PAU_CIN_HAU", "SIDDHAM", "ADLAM", "BHAIKSUKI", "MARCHEN", "NEWA", "OSAGE", "HAN_WITH_BOPOMOFO", "JAMO", "SYMBOLS_EMOJI", "MASARAM_GONDI", "SOYOMBO", "ZANABAZAR_SQUARE", "DOGRA", "GUNJALA_GONDI", "MAKASAR", "MEDEFAIDRIN", "HANIFI_ROHINGYA", "SOGDIAN", "OLD_SOGDIAN", "ELYMAIC", "NYIAKENG_PUACHUE_HMONG", "NANDINAGARI", "WANCHO", "CHORASMIAN", "DIVES_AKURU", "KHITAN_SMALL_SCRIPT", "YEZIDI", "CYPRO_MINOAN", "OLD_UYGHUR", "TANGSA", "TOTO", "VITHKUQI", "KAWI", "NAG_MUNDARI", "ARABIC_NASTALIQ", "CODE_LIMIT", "usageValues" ]
}