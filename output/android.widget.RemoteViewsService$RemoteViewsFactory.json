{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/RemoteViewsService.java",
  "packageName" : "android.widget",
  "className" : "RemoteViewsFactory",
  "comment" : "\n     * An interface for an adapter between a remote collection view (ListView, GridView, etc) and\n     * the underlying data for that view.  The implementor is responsible for making a RemoteView\n     * for each item in the data set. This interface is a thin wrapper around {@link Adapter}.\n     *\n     * @see android.widget.Adapter\n     * @see android.appwidget.AppWidgetManager\n     ",
  "links" : [ "android.widget.Adapter" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onCreate()",
    "returnType" : "void",
    "comment" : "\n         * Called when your factory is first constructed. The same factory may be shared across\n         * multiple RemoteViewAdapters depending on the intent passed.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onDataSetChanged()",
    "returnType" : "void",
    "comment" : "\n         * Called when notifyDataSetChanged() is triggered on the remote adapter. This allows a\n         * RemoteViewsFactory to respond to data changes by updating any internal references.\n         *\n         * Note: expensive tasks can be safely performed synchronously within this method. In the\n         * interim, the old data will be displayed within the widget.\n         *\n         * @see android.appwidget.AppWidgetManager#notifyAppWidgetViewDataChanged(int[], int)\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onDestroy()",
    "returnType" : "void",
    "comment" : "\n         * Called when the last RemoteViewsAdapter that is associated with this factory is\n         * unbound.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getCount()",
    "returnType" : "int",
    "comment" : "\n         * See {@link Adapter#getCount()}\n         *\n         * @return Count of items.\n         ",
    "links" : [ "android.widget.Adapter#getCount()" ]
  }, {
    "name" : "public RemoteViews getViewAt(int position)",
    "returnType" : "RemoteViews",
    "comment" : "\n         * See {@link Adapter#getView(int, android.view.View, android.view.ViewGroup)}.\n         *\n         * Note: expensive tasks can be safely performed synchronously within this method, and a\n         * loading view will be displayed in the interim. See {@link #getLoadingView()}.\n         *\n         * @param position The position of the item within the Factory's data set of the item whose\n         *        view we want.\n         * @return A RemoteViews object corresponding to the data at the specified position.\n         ",
    "links" : [ "#getLoadingView()", "android.widget.Adapter#getView(int" ]
  }, {
    "name" : "public RemoteViews getLoadingView()",
    "returnType" : "RemoteViews",
    "comment" : "\n         * This allows for the use of a custom loading view which appears between the time that\n         * {@link #getViewAt(int)} is called and returns. If null is returned, a default loading\n         * view will be used.\n         *\n         * @return The RemoteViews representing the desired loading view.\n         ",
    "links" : [ "#getViewAt(int)" ]
  }, {
    "name" : "public int getViewTypeCount()",
    "returnType" : "int",
    "comment" : "\n         * See {@link Adapter#getViewTypeCount()}.\n         *\n         * @return The number of types of Views that will be returned by this factory.\n         ",
    "links" : [ "android.widget.Adapter#getViewTypeCount()" ]
  }, {
    "name" : "public long getItemId(int position)",
    "returnType" : "long",
    "comment" : "\n         * See {@link Adapter#getItemId(int)}.\n         *\n         * @param position The position of the item within the data set whose row id we want.\n         * @return The id of the item at the specified position.\n         ",
    "links" : [ "android.widget.Adapter#getItemId(int)" ]
  }, {
    "name" : "public boolean hasStableIds()",
    "returnType" : "boolean",
    "comment" : "\n         * See {@link Adapter#hasStableIds()}.\n         *\n         * @return True if the same id always refers to the same object.\n         ",
    "links" : [ "android.widget.Adapter#hasStableIds()" ]
  }, {
    "name" : " RemoteViews.RemoteCollectionItems getRemoteCollectionItems(int capSize)",
    "returnType" : "RemoteViews.RemoteCollectionItems",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onCreate()", "public void onDataSetChanged()", "public void onDestroy()", "public int getCount()", "public RemoteViews getViewAt(int position)", "public RemoteViews getLoadingView()", "public int getViewTypeCount()", "public long getItemId(int position)", "public boolean hasStableIds()", " RemoteViews.RemoteCollectionItems getRemoteCollectionItems(int capSize)" ],
  "variableNames" : [ ]
}