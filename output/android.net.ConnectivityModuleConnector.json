{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/ConnectivityModuleConnector.java",
  "packageName" : "android.net",
  "className" : "ConnectivityModuleConnector",
  "comment" : "\n * Class used to communicate to the various networking mainline modules running in the network stack\n * process from {@link com.android.server.SystemServer}.\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "IN_PROCESS_SUFFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PREFS_FILE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PREF_KEY_LAST_CRASH_TIME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_MIN_CRASH_INTERVAL_MS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_MIN_UPTIME_BEFORE_CRASH_MS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_ALWAYS_RATELIMIT_NETWORKSTACK_CRASH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MIN_CRASH_INTERVAL_MS",
    "type" : "long",
    "comment" : " This is the default value: the actual value can be adjusted via device config.",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MIN_UPTIME_BEFORE_CRASH_MS",
    "type" : "long",
    "comment" : " infrequent failures, not failures on boot.",
    "links" : [ ]
  }, {
    "name" : "sInstance",
    "type" : "ConnectivityModuleConnector",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLog",
    "type" : "SharedLog",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHealthListeners",
    "type" : "ArraySet<ConnectivityModuleHealthListener>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeps",
    "type" : "Dependencies",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static synchronized ConnectivityModuleConnector getInstance()",
    "returnType" : "ConnectivityModuleConnector",
    "comment" : "\n     * Get the {@link ConnectivityModuleConnector} singleton instance.\n     ",
    "links" : [ "android.net.ConnectivityModuleConnector" ]
  }, {
    "name" : "public void init(Context context)",
    "returnType" : "void",
    "comment" : "\n     * Initialize the network stack connector. Should be called only once on device startup, before\n     * any client attempts to use the network stack.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void registerHealthListener(@NonNull ConnectivityModuleHealthListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Add a {@link ConnectivityModuleHealthListener} to listen to network stack health events.\n     ",
    "links" : [ "ConnectivityModuleHealthListener" ]
  }, {
    "name" : "public void startModuleService(@NonNull String serviceIntentBaseAction, @NonNull String servicePermissionName, @NonNull ModuleServiceCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Start a module running in the network stack or system_server process. Should be called only\n     * once for each module per device startup.\n     *\n     * <p>This method will start a networking module either in the network stack\n     * process, or inside the system server on devices that do not support the corresponding\n     * mainline network . The corresponding networking module service's binder\n     * object will then be delivered asynchronously via the provided {@link ModuleServiceCallback}.\n     *\n     * @param serviceIntentBaseAction Base action to use for constructing the intent needed to\n     *                                bind to the corresponding module.\n     * @param servicePermissionName Permission to be held by the corresponding module.\n     ",
    "links" : [ "ModuleServiceCallback" ]
  }, {
    "name" : "private static void checkModuleServicePermission(@NonNull PackageManager pm, @NonNull ComponentName comp, @NonNull String servicePermissionName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private synchronized void maybeCrashWithTerribleFailure(@NonNull String message, @Nullable String packageName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private SharedPreferences getSharedPreferences()",
    "returnType" : "SharedPreferences",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private long tryGetLastCrashTime(@Nullable SharedPreferences prefs)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void tryWriteLastCrashTime(@Nullable SharedPreferences prefs, long value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void log(@NonNull String message)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void logWtf(@NonNull String message, @Nullable Throwable e)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void loge(@NonNull String message, @Nullable Throwable e)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void logi(@NonNull String message)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(PrintWriter pw)",
    "returnType" : "void",
    "comment" : "\n     * Dump ConnectivityModuleConnector logs to the specified {@link PrintWriter}.\n     ",
    "links" : [ "java.io.PrintWriter" ]
  } ],
  "variableNames" : [ "TAG", "IN_PROCESS_SUFFIX", "PREFS_FILE", "PREF_KEY_LAST_CRASH_TIME", "CONFIG_MIN_CRASH_INTERVAL_MS", "CONFIG_MIN_UPTIME_BEFORE_CRASH_MS", "CONFIG_ALWAYS_RATELIMIT_NETWORKSTACK_CRASH", "DEFAULT_MIN_CRASH_INTERVAL_MS", "DEFAULT_MIN_UPTIME_BEFORE_CRASH_MS", "sInstance", "mContext", "mLog", "mHealthListeners", "mDeps" ],
  "methodNames" : [ "public static synchronized ConnectivityModuleConnector getInstance()", "public void init(Context context)", "public void registerHealthListener(@NonNull ConnectivityModuleHealthListener listener)", "public void startModuleService(@NonNull String serviceIntentBaseAction, @NonNull String servicePermissionName, @NonNull ModuleServiceCallback callback)", "private static void checkModuleServicePermission(@NonNull PackageManager pm, @NonNull ComponentName comp, @NonNull String servicePermissionName)", "private synchronized void maybeCrashWithTerribleFailure(@NonNull String message, @Nullable String packageName)", "private SharedPreferences getSharedPreferences()", "private long tryGetLastCrashTime(@Nullable SharedPreferences prefs)", "private void tryWriteLastCrashTime(@Nullable SharedPreferences prefs, long value)", "private void log(@NonNull String message)", "private void logWtf(@NonNull String message, @Nullable Throwable e)", "private void loge(@NonNull String message, @Nullable Throwable e)", "private void logi(@NonNull String message)", "public void dump(PrintWriter pw)" ]
}