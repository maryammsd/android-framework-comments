{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/ScientificNumberFormatter.java",
  "packageName" : "android.icu.text",
  "className" : "ScientificNumberFormatter",
  "comment" : "\n *A formatter that formats numbers in user-friendly scientific notation.\n * \n * ScientificNumberFormatter instances are immutable and thread-safe.\n *\n * Sample code:\n * <pre>\n * ULocale en = new ULocale(\"en\");\n * ScientificNumberFormatter fmt = ScientificNumberFormatter.getMarkupInstance(\n *         en, \"&lt;sup&gt;\", \"&lt;/sup&gt;\");\n * </pre>\n * <pre>\n * // Output: \"1.23456Ã—10&lt;sup&gt;-78&lt;/sup&gt;\"\n * System.out.println(fmt.format(1.23456e-78));\n * </pre>\n *\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "preExponent",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fmt",
    "type" : "DecimalFormat",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "style",
    "type" : "Style",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SUPER_SCRIPT",
    "type" : "Style",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static ScientificNumberFormatter getSuperscriptInstance(ULocale locale)",
    "returnType" : "ScientificNumberFormatter",
    "comment" : "\n     * Gets a ScientificNumberFormatter instance that uses\n     * superscript characters for exponents for this locale.\n     * @param locale The locale\n     * @return The ScientificNumberFormatter instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ScientificNumberFormatter getSuperscriptInstance(DecimalFormat df)",
    "returnType" : "ScientificNumberFormatter",
    "comment" : "\n     * Gets a ScientificNumberFormatter instance that uses\n     * superscript characters for exponents.\n     * @param df The DecimalFormat must be configured for scientific\n     *   notation. Caller may safely change df after this call as this method\n     *   clones it when creating the ScientificNumberFormatter.\n     * @return the ScientificNumberFormatter instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ScientificNumberFormatter getMarkupInstance(ULocale locale, String beginMarkup, String endMarkup)",
    "returnType" : "ScientificNumberFormatter",
    "comment" : "\n      * Gets a ScientificNumberFormatter instance that uses\n      * markup for exponents for this locale.\n      * @param locale The locale\n      * @param beginMarkup the markup to start superscript e.g {@code <sup>}\n      * @param endMarkup the markup to end superscript e.g {@code </sup>}\n      * @return The ScientificNumberFormatter instance.\n      ",
    "links" : [ ]
  }, {
    "name" : "public static ScientificNumberFormatter getMarkupInstance(DecimalFormat df, String beginMarkup, String endMarkup)",
    "returnType" : "ScientificNumberFormatter",
    "comment" : "\n      * Gets a ScientificNumberFormatter instance that uses\n      * markup for exponents.\n      * @param df The DecimalFormat must be configured for scientific\n      *   notation. Caller may safely change df after this call as this method\n      *   clones it when creating the ScientificNumberFormatter.\n      * @param beginMarkup the markup to start superscript e.g {@code <sup>}\n      * @param endMarkup the markup to end superscript e.g {@code </sup>}\n      * @return The ScientificNumberFormatter instance.\n      ",
    "links" : [ ]
  }, {
    "name" : "public String format(Object number)",
    "returnType" : "String",
    "comment" : "\n      * Formats a number\n      * @param number Can be a double, int, Number or\n      *  anything that DecimalFormat#format(Object) accepts.\n      * @return the formatted string.\n      ",
    "links" : [ ]
  }, {
    "name" : "private static String getPreExponent(DecimalFormatSymbols dfs)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ScientificNumberFormatter getInstance(DecimalFormat decimalFormat, Style style)",
    "returnType" : "ScientificNumberFormatter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static ScientificNumberFormatter getInstanceForLocale(ULocale locale, Style style)",
    "returnType" : "ScientificNumberFormatter",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static ScientificNumberFormatter getSuperscriptInstance(ULocale locale)", "public static ScientificNumberFormatter getSuperscriptInstance(DecimalFormat df)", "public static ScientificNumberFormatter getMarkupInstance(ULocale locale, String beginMarkup, String endMarkup)", "public static ScientificNumberFormatter getMarkupInstance(DecimalFormat df, String beginMarkup, String endMarkup)", "public String format(Object number)", "private static String getPreExponent(DecimalFormatSymbols dfs)", "private static ScientificNumberFormatter getInstance(DecimalFormat decimalFormat, Style style)", "private static ScientificNumberFormatter getInstanceForLocale(ULocale locale, Style style)" ],
  "variableNames" : [ "preExponent", "fmt", "style", "SUPER_SCRIPT" ]
}