{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/UiccPortInfo.java",
  "packageName" : "android.telephony",
  "className" : "UiccPortInfo",
  "comment" : "\n * UiccPortInfo class represents information about a single port contained on {@link UiccCardInfo}.\n * Per GSMA SGP.22 V3.0, a port is a logical entity to which an active UICC profile can be bound on\n * a UICC card. If UICC supports 2 ports, then the port index is numbered 0,1.\n * Each port index is unique within an UICC, but not necessarily unique across UICC’s.\n * For UICC's does not support MEP(Multi-enabled profile)\n * {@link android.content.pm.PackageManager#FEATURE_TELEPHONY_EUICC_MEP}, just return the default\n * port index 0.\n ",
  "links" : [ "android.content.pm.PackageManager#FEATURE_TELEPHONY_EUICC_MEP", "android.telephony.UiccCardInfo" ],
  "variables" : [ {
    "name" : "mIccId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPortIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLogicalSlotIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsActive",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ICCID_REDACTED",
    "type" : "String",
    "comment" : "\n     * A redacted String if caller does not have permission to read ICCID.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<UiccPortInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(@Nullable Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getIccId()",
    "returnType" : "String",
    "comment" : "\n     * Get the ICCID of the profile associated with this port.\n     * If this port is not {@link #isActive()}, returns {@code null}.\n     * If the caller does not have access to the ICCID for this port, it will be redacted and\n     * {@link #ICCID_REDACTED} will be returned.\n     ",
    "links" : [ "#isActive()", "#ICCID_REDACTED" ]
  }, {
    "name" : "public int getPortIndex()",
    "returnType" : "int",
    "comment" : "\n     * The port index is an enumeration of the ports available on the UICC.\n     * Example: if eUICC1 supports 2 ports, then the port index is numbered 0,1.\n     * Each port index is unique within an UICC, but not necessarily unique across UICC’s.\n     * For UICC's does not support MEP(Multi-enabled profile), just return the default port index 0.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isActive()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if port was tied to a modem stack.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLogicalSlotIndex()",
    "returnType" : "int",
    "comment" : "\n     * Gets logical slot index for the slot that the UICC is currently attached.\n     * Logical slot index or ID: unique index referring to a logical SIM slot.\n     * Logical slot IDs start at 0 and go up depending on the number of supported active slots on\n     * a device.\n     * For example, a dual-SIM device typically has slot 0 and slot 1.\n     * If a device has multiple physical slots but only supports one active slot,\n     * it will have only the logical slot ID 0.\n     *\n     * @return the logical slot index for UICC port, if there is no logical slot index it returns\n     * {@link SubscriptionManager#INVALID_SIM_SLOT_INDEX}\n     ",
    "links" : [ "android.telephony.SubscriptionManager#INVALID_SIM_SLOT_INDEX" ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void writeToParcel(@Nullable Parcel dest, int flags)", "public int describeContents()", "public String getIccId()", "public int getPortIndex()", "public boolean isActive()", "public int getLogicalSlotIndex()", "public boolean equals(@Nullable Object obj)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "mIccId", "mPortIndex", "mLogicalSlotIndex", "mIsActive", "ICCID_REDACTED", "CREATOR" ]
}