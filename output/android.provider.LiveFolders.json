{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/LiveFolders.java",
  "packageName" : "android.provider",
  "className" : "LiveFolders",
  "comment" : "\n * <p>A LiveFolder is a special folder whose content is provided by a\n * {@link android.content.ContentProvider}. To create a live folder, two components\n * are required:</p>\n * <ul>\n *  <li>An activity that can respond to the intent action {@link #ACTION_CREATE_LIVE_FOLDER}. The\n *  activity is responsible for creating the live folder.</li>\n *  <li>A {@link android.content.ContentProvider} to provide the live folder items.</li>\n * </ul>\n *\n * <h3>Lifecycle</h3>\n * <p>When a user wants to create a live folder, the system looks for all activities with the\n * intent filter action {@link #ACTION_CREATE_LIVE_FOLDER} and presents the list to the user.\n * When the user chooses one of the activities, the activity is invoked with the\n * {@link #ACTION_CREATE_LIVE_FOLDER} action. The activity then creates the live folder and\n * passes it back to the system by setting it as an\n * {@link android.app.Activity#setResult(int, android.content.Intent) activity result}. The\n * live folder is described by a content provider URI, a name, an icon and a display mode.\n * Finally, when the user opens the live folder, the system queries the content provider\n * to retrieve the folder's content.</p>\n *\n * <h3>Setting up the live folder activity</h3>\n * <p>The following code sample shows how to write an activity that creates a live folder:</p>\n * <pre>\n * public static class MyLiveFolder extends Activity {\n *     public static final Uri CONTENT_URI = Uri.parse(\"content://my.app/live\");\n *\n *     protected void onCreate(Bundle savedInstanceState) {\n *         super.onCreate(savedInstanceState);\n *\n *         final Intent intent = getIntent();\n *         final String action = intent.getAction();\n *\n *         if (LiveFolders.ACTION_CREATE_LIVE_FOLDER.equals(action)) {\n *             setResult(RESULT_OK, createLiveFolder(this, CONTENT_URI, \"My LiveFolder\",\n *                     R.drawable.ic_launcher_contacts_phones));\n *         } else {\n *             setResult(RESULT_CANCELED);\n *         }\n *\n *         finish();\n *     }\n *\n *     private static Intent createLiveFolder(Context context, Uri uri, String name,\n *             int icon) {\n *\n *         final Intent intent = new Intent();\n *\n *         intent.setData(uri);\n *         intent.putExtra(LiveFolders.EXTRA_LIVE_FOLDER_NAME, name);\n *         intent.putExtra(LiveFolders.EXTRA_LIVE_FOLDER_ICON,\n *                 Intent.ShortcutIconResource.fromContext(context, icon));\n *         intent.putExtra(LiveFolders.EXTRA_LIVE_FOLDER_DISPLAY_MODE, LiveFolders.DISPLAY_MODE_LIST);\n *\n *         return intent;\n *     }\n * }\n * </pre>\n * <p>The live folder is described by an {@link android.content.Intent} as follows:</p>\n * <table border=\"2\" width=\"85%\" align=\"center\" frame=\"hsides\" rules=\"rows\">\n *     <thead>\n *     <tr><th>Component</th> <th>Type</th> <th>Description</th> <th>Required</th></tr>\n *     </thead>\n *\n *     <tbody>\n *     <tr><th>URI</th>\n *         <td>URI</td>\n *         <td>The ContentProvider URI</td>\n *         <td align=\"center\">Yes</td>\n *     </tr>\n *     <tr><th>{@link #EXTRA_LIVE_FOLDER_NAME}</th>\n *         <td>Extra String</td>\n *         <td>The name of the live folder</td>\n *         <td align=\"center\">Yes</td>\n *     </tr>\n *     <tr><th>{@link #EXTRA_LIVE_FOLDER_ICON}</th>\n *         <td>Extra {@link android.content.Intent.ShortcutIconResource}</td>\n *         <td>The icon of the live folder</td>\n *         <td align=\"center\">Yes</td>\n *     </tr>\n *     <tr><th>{@link #EXTRA_LIVE_FOLDER_DISPLAY_MODE}</th>\n *         <td>Extra int</td>\n *         <td>The display mode of the live folder. The value must be either\n *         {@link #DISPLAY_MODE_GRID} or {@link #DISPLAY_MODE_LIST}.</td>\n *         <td align=\"center\">Yes</td>\n *     </tr>\n *     <tr><th>{@link #EXTRA_LIVE_FOLDER_BASE_INTENT}</th>\n *         <td>Extra Intent</td>\n *         <td>When the user clicks an item inside a live folder, the system will either fire\n *         the intent associated with that item or, if present, the live folder's base intent\n *         with the id of the item appended to the base intent's URI.</td>\n *         <td align=\"center\">No</td>\n *     </tr>\n *     </tbody>\n * </table>\n *\n * <h3>Setting up the content provider</h3>\n * <p>The live folder's content provider must, upon query, return a {@link android.database.Cursor}\n * whose columns match the following names:</p>\n * <table border=\"2\" width=\"85%\" align=\"center\" frame=\"hsides\" rules=\"rows\">\n *     <thead>\n *     <tr><th>Column</th> <th>Type</th> <th>Description</th> <th>Required</th></tr>\n *     </thead>\n *\n *     <tbody>\n *     <tr><th>{@link #NAME}</th>\n *         <td>String</td>\n *         <td>The name of the item</td>\n *         <td align=\"center\">Yes</td>\n *     </tr>\n *     <tr><th>{@link #DESCRIPTION}</th>\n *         <td>String</td>\n *         <td>The description of the item. The description is ignored when the live folder's\n *         display mode is {@link #DISPLAY_MODE_GRID}.</td>\n *         <td align=\"center\">No</td>\n *     </tr>\n *     <tr><th>{@link #INTENT}</th>\n *         <td>{@link android.content.Intent}</td>\n *         <td>The intent to fire when the item is clicked. Ignored when the live folder defines\n *         a base intent.</td>\n *         <td align=\"center\">No</td>\n *     </tr>\n *     <tr><th>{@link #ICON_BITMAP}</th>\n *         <td>Bitmap</td>\n *         <td>The icon for the item. When this column value is not null, the values for the\n *         columns {@link #ICON_PACKAGE} and {@link #ICON_RESOURCE} must be null.</td>\n *         <td align=\"center\">No</td>\n *     </tr>\n *     <tr><th>{@link #ICON_PACKAGE}</th>\n *         <td>String</td>\n *         <td>The package of the item's icon. When this value is not null, the value for the\n *         column {@link #ICON_RESOURCE} must be specified and the value for the column\n *         {@link #ICON_BITMAP} must be null.</td>\n *         <td align=\"center\">No</td>\n *     </tr>\n *     <tr><th>{@link #ICON_RESOURCE}</th>\n *         <td>String</td>\n *         <td>The resource name of the item's icon. When this value is not null, the value for the\n *         column {@link #ICON_PACKAGE} must be specified and the value for the column\n *         {@link #ICON_BITMAP} must be null.</td>\n *         <td align=\"center\">No</td>\n *     </tr>\n *     </tbody>\n * </table>\n * \n * @deprecated Live folders are no longer supported by Android.  These have been\n * replaced by the new\n * <a href=\"{@docRoot}guide/topics/appwidgets/index.html#collections\">AppWidget Collection</a>\n * APIs introduced in {@link android.os.Build.VERSION_CODES#HONEYCOMB}.  These provide\n * all of the features of live folders plus many more.  The use of live folders is greatly\n * discouraged because of security issues they introduce -- publishing a live folder requires\n * making all data show for the live folder available to all applications with no\n * permissions protecting it.\n ",
  "variables" : [ {
    "name" : "NAME",
    "type" : "String",
    "comment" : "\n     * <p>Content provider column.</p>\n     * <p>Name of the live folder item.</p>\n     * <p>Required.</p>\n     * <p>Type: String.</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTION",
    "type" : "String",
    "comment" : "\n     * <p>Content provider column.</p>\n     * <p>Description of the live folder item. This value is ignored if the\n     * live folder's display mode is {@link LiveFolders#DISPLAY_MODE_GRID}.</p>\n     * <p>Optional.</p>\n     * <p>Type: String.</p>\n     *\n     * @see LiveFolders#EXTRA_LIVE_FOLDER_DISPLAY_MODE\n     ",
    "links" : [ "android.provider.LiveFolders#DISPLAY_MODE_GRID" ]
  }, {
    "name" : "INTENT",
    "type" : "String",
    "comment" : "\n     * <p>Content provider column.</p>\n     * <p>Intent of the live folder item.</p>\n     * <p>Optional if the live folder has a base intent.</p>\n     * <p>Type: {@link android.content.Intent}.</p>\n     *\n     * @see LiveFolders#EXTRA_LIVE_FOLDER_BASE_INTENT\n     ",
    "links" : [ "android.content.Intent" ]
  }, {
    "name" : "ICON_BITMAP",
    "type" : "String",
    "comment" : "\n     * <p>Content provider column.</p>\n     * <p>Icon of the live folder item, as a custom bitmap.</p>\n     * <p>Optional.</p>\n     * <p>Type: {@link android.graphics.Bitmap}.</p>\n     ",
    "links" : [ "android.graphics.Bitmap" ]
  }, {
    "name" : "ICON_PACKAGE",
    "type" : "String",
    "comment" : "\n     * <p>Content provider column.</p>\n     * <p>Package where to find the icon of the live folder item. This value can be\n     * obtained easily using\n     * {@link android.content.Intent.ShortcutIconResource#fromContext(android.content.Context, int)}.</p>\n     * <p>Optional.</p>\n     * <p>Type: String.</p>\n     *\n     * @see #ICON_RESOURCE\n     * @see android.content.Intent.ShortcutIconResource\n     ",
    "links" : [ "android.content.Intent.ShortcutIconResource#fromContext(android.content.Context" ]
  }, {
    "name" : "ICON_RESOURCE",
    "type" : "String",
    "comment" : "\n     * <p>Content provider column.</p>\n     * <p>Resource name of the live folder item. This value can be obtained easily using\n     * {@link android.content.Intent.ShortcutIconResource#fromContext(android.content.Context, int)}.</p>\n     * <p>Optional.</p>\n     * <p>Type: String.</p>\n     *\n     * @see #ICON_PACKAGE\n     * @see android.content.Intent.ShortcutIconResource\n     ",
    "links" : [ "android.content.Intent.ShortcutIconResource#fromContext(android.content.Context" ]
  }, {
    "name" : "DISPLAY_MODE_GRID",
    "type" : "int",
    "comment" : "\n     * Displays a live folder's content in a grid.\n     *\n     * @see LiveFolders#EXTRA_LIVE_FOLDER_DISPLAY_MODE\n     ",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_MODE_LIST",
    "type" : "int",
    "comment" : "\n     * Displays a live folder's content in a list.\n     *\n     * @see LiveFolders#EXTRA_LIVE_FOLDER_DISPLAY_MODE\n     ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_LIVE_FOLDER_NAME",
    "type" : "String",
    "comment" : "\n     * The name of the extra used to define the name of a live folder.\n     *\n     * @see #ACTION_CREATE_LIVE_FOLDER\n     ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_LIVE_FOLDER_ICON",
    "type" : "String",
    "comment" : "\n     * The name of the extra used to define the icon of a live folder.\n     *\n     * @see #ACTION_CREATE_LIVE_FOLDER\n     ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_LIVE_FOLDER_DISPLAY_MODE",
    "type" : "String",
    "comment" : "\n     * The name of the extra used to define the display mode of a live folder.\n     *\n     * @see #ACTION_CREATE_LIVE_FOLDER\n     * @see #DISPLAY_MODE_GRID\n     * @see #DISPLAY_MODE_LIST\n     ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_LIVE_FOLDER_BASE_INTENT",
    "type" : "String",
    "comment" : "\n     * The name of the extra used to define the base Intent of a live folder.\n     *\n     * @see #ACTION_CREATE_LIVE_FOLDER\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_CREATE_LIVE_FOLDER",
    "type" : "String",
    "comment" : "\n     * Activity Action: Creates a live folder.\n     * <p>Input: Nothing.</p>\n     * <p>Output: An Intent representing the live folder. The intent must contain four\n     * extras: EXTRA_LIVE_FOLDER_NAME (value: String),\n     * EXTRA_LIVE_FOLDER_ICON (value: ShortcutIconResource),\n     * EXTRA_LIVE_FOLDER_URI (value: String) and\n     * EXTRA_LIVE_FOLDER_DISPLAY_MODE (value: int). The Intent can optionnally contain\n     * EXTRA_LIVE_FOLDER_BASE_INTENT (value: Intent).</p>\n     *\n     * @see #EXTRA_LIVE_FOLDER_NAME\n     * @see #EXTRA_LIVE_FOLDER_ICON\n     * @see #EXTRA_LIVE_FOLDER_DISPLAY_MODE\n     * @see #EXTRA_LIVE_FOLDER_BASE_INTENT\n     * @see android.content.Intent.ShortcutIconResource\n     ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "NAME", "DESCRIPTION", "INTENT", "ICON_BITMAP", "ICON_PACKAGE", "ICON_RESOURCE", "DISPLAY_MODE_GRID", "DISPLAY_MODE_LIST", "EXTRA_LIVE_FOLDER_NAME", "EXTRA_LIVE_FOLDER_ICON", "EXTRA_LIVE_FOLDER_DISPLAY_MODE", "EXTRA_LIVE_FOLDER_BASE_INTENT", "ACTION_CREATE_LIVE_FOLDER" ],
  "methodNames" : [ ]
}