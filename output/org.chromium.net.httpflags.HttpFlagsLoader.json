{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/httpflags/HttpFlagsLoader.java",
  "packageName" : "org.chromium.net.httpflags",
  "className" : "HttpFlagsLoader",
  "comment" : "\n * Utilities for loading HTTP flags.\n *\n * <p>HTTP flags are a generic mechanism by which the host system (i.e. the Android system image)\n * can provide values for a variety of configuration knobs to alter the behavior of the HTTP client\n * stack. The idea is that the host system can use some kind of centralized configuration mechanism\n * to remotely push changes to these settings while collecting data on the results. This in turn\n * enables A/B experiments, progressive configuration rollouts, etc.\n *\n * <p>Currently, the interface with the host system is defined as follows:\n * <ol>\n * <li>The Android system image must provide an Android app that exposes a service matching the\n *     {@link #FLAGS_FILE_PROVIDER_INTENT_ACTION} action.\n * <li>That Android app must expose a directory named after {@link #FLAGS_FILE_DIR_NAME} under the\n *     app's {@link ApplicationInfo#deviceProtectedDataDir}.\n * <li>That directory must contain a file named after {@link #FLAGS_FILE_NAME} that must be readable\n *     by the process running {@link #load}.\n * <li>The flag values are obtained from the contents of that file. The format is a binary proto\n *     that can be read through {@link Flags#parseDelimitedFrom} - see `flags.proto` for details.\n * </ol>\n *\n * @see HttpFlagsInterceptor\n ",
  "links" : [ "#FLAGS_FILE_PROVIDER_INTENT_ACTION", "#load", "#FLAGS_FILE_DIR_NAME", "#FLAGS_FILE_NAME", "android.content.pm.ApplicationInfo#deviceProtectedDataDir", "#parseDelimitedFrom" ],
  "variables" : [ {
    "name" : "FLAGS_FILE_PROVIDER_INTENT_ACTION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FLAGS_FILE_DIR_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FLAGS_FILE_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Flags load(Context context)",
    "returnType" : "Flags",
    "comment" : "\n     * Locates and loads the HTTP flags file from the host system.\n     *\n     * Note that this is an expensive call.\n     *\n     * @return The contents of the flags file, or null if the flags file could not be loaded for any\n     * reason. In the latter case, the callee will take care of logging the failure.\n     *\n     * @see ResolvedFlags\n     ",
    "links" : [ ]
  }, {
    "name" : "private static ApplicationInfo getProviderApplicationInfo(Context context)",
    "returnType" : "ApplicationInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static File getFlagsFileFromProvider(Context context, ApplicationInfo providerApplicationInfo)",
    "returnType" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Flags loadFlagsFile(File file)",
    "returnType" : "Flags",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Flags load(Context context)", "private static ApplicationInfo getProviderApplicationInfo(Context context)", "private static File getFlagsFileFromProvider(Context context, ApplicationInfo providerApplicationInfo)", "private static Flags loadFlagsFile(File file)" ],
  "variableNames" : [ "FLAGS_FILE_PROVIDER_INTENT_ACTION", "FLAGS_FILE_DIR_NAME", "FLAGS_FILE_NAME", "TAG" ]
}