{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/ConcurrentHashMap.java",
  "packageName" : "java.util.concurrent",
  "className" : "Node",
  "comment" : "\n     * Key-value entry.  This class is never exported out as a\n     * user-mutable Map.Entry (i.e., one supporting setValue; see\n     * MapEntry below), but can be used for read-only traversals used\n     * in bulk tasks.  Subclasses of Node with a negative hash field\n     * are special, and contain null keys and values (but are never\n     * exported).  Otherwise, keys and vals are never null.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "hash",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "key",
    "type" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "val",
    "type" : "V",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "next",
    "type" : "Node<K, V>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final K getKey()",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final V getValue()",
    "returnType" : "V",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final V setValue(V value)",
    "returnType" : "V",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Node<K, V> find(int h, Object k)",
    "returnType" : "Node<K, V>",
    "comment" : "\n         * Virtualized support for map.get(); overridden in subclasses.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final K getKey()", "public final V getValue()", "public final int hashCode()", "public final String toString()", "public final V setValue(V value)", "public final boolean equals(Object o)", " Node<K, V> find(int h, Object k)" ],
  "variableNames" : [ "hash", "key", "val", "next" ]
}