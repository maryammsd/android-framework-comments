{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/voice/HotwordDetectedResult.java",
  "packageName" : "android.service.voice",
  "className" : "Builder",
  "comment" : "\n     * A builder for {@link HotwordDetectedResult}\n     ",
  "links" : [ "android.service.voice.HotwordDetectedResult" ],
  "variables" : [ {
    "name" : "mSpeakerId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfidenceLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMediaSyncEvent",
    "type" : "MediaSyncEvent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHotwordOffsetMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHotwordDurationMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioChannel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHotwordDetectionPersonalized",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScore",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPersonalizedScore",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHotwordPhraseId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioStreams",
    "type" : "List<HotwordAudioStream>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "PersistableBundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBackgroundAudioPower",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBuilderFieldsSet",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setSpeakerId(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Id of the current speaker\n         *\n         * <p>Only values between 0 and {@link #getMaxSpeakerId} (inclusive) are accepted.\n         ",
    "links" : [ "#getMaxSpeakerId" ]
  }, {
    "name" : "public Builder setConfidenceLevel(@HotwordConfidenceLevelValue int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Confidence level in the trigger outcome.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMediaSyncEvent(@NonNull MediaSyncEvent value)",
    "returnType" : "Builder",
    "comment" : "\n         * A {@code MediaSyncEvent} that allows the {@link HotwordDetector} to recapture the audio\n         * that contains the hotword trigger. This must be obtained using\n         * {@link android.media.AudioRecord#shareAudioHistory(String, long)}.\n         ",
    "links" : [ "android.media.AudioRecord#shareAudioHistory(String", "android.service.voice.HotwordDetector" ]
  }, {
    "name" : "public Builder setHotwordOffsetMillis(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Offset in milliseconds the audio stream when the trigger event happened (end of hotword\n         * phrase).\n         *\n         * <p>Only value between 0 and 3600000 (inclusive) is accepted.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHotwordDurationMillis(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Duration in milliseconds of the hotword trigger phrase.\n         *\n         * <p>Only values between 0 and {@link android.media.AudioRecord#getMaxSharedAudioHistoryMillis}\n         * (inclusive) are accepted.\n         ",
    "links" : [ "android.media.AudioRecord#getMaxSharedAudioHistoryMillis" ]
  }, {
    "name" : "public Builder setAudioChannel(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Audio channel containing the highest-confidence hotword signal.\n         *\n         * <p>Only value between 0 and 63 (inclusive) is accepted.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setHotwordDetectionPersonalized(boolean value)",
    "returnType" : "Builder",
    "comment" : "\n         * Returns whether the trigger has happened due to model having been personalized to fit user's\n         * voice.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setScore(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Score for the hotword trigger.\n         *\n         * <p>Only values between 0 and {@link #getMaxScore} (inclusive) are accepted.\n         ",
    "links" : [ "#getMaxScore" ]
  }, {
    "name" : "public Builder setPersonalizedScore(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Score for the hotword trigger for device user.\n         *\n         * <p>Only values between 0 and {@link #getMaxScore} (inclusive) are accepted.\n         ",
    "links" : [ "#getMaxScore" ]
  }, {
    "name" : "public Builder setHotwordPhraseId(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * An ID representing the keyphrase that triggered the successful detection.\n         *\n         * <p>Only values between 0 and {@link #getMaxHotwordPhraseId()} (inclusive) are accepted.\n         ",
    "links" : [ "#getMaxHotwordPhraseId()" ]
  }, {
    "name" : "public Builder setExtras(@NonNull PersistableBundle value)",
    "returnType" : "Builder",
    "comment" : "\n         * App-specific extras to support trigger.\n         *\n         * <p>The size of this bundle will be limited to {@link #getMaxBundleSize}. Results will larger\n         * bundles will be rejected.\n         *\n         * <p>Only primitive types are supported in this bundle. Complex types will be removed from the\n         * bundle.\n         *\n         * <p>The use of this method is discouraged, and support for it will be removed in future\n         * versions of Android.\n         *\n         * <p>After the trigger happens, a special case of proximity-related extra, with the key of\n         * 'android.service.voice.extra.PROXIMITY_VALUE' and the value of proximity value (integer)\n         * will be stored to enable proximity logic. {@link HotwordDetectedResult#PROXIMITY_NEAR} will\n         * indicate 'NEAR' proximity and {@link HotwordDetectedResult#PROXIMITY_FAR} will indicate 'FAR'\n         * proximity. The proximity value is provided by the system, on devices that support detecting\n         * proximity of nearby users, to help disambiguate which nearby device should respond. When the\n         * proximity is unknown, the proximity value will not be stored. This mapping will be excluded\n         * from the max bundle size calculation because this mapping is included after the result is\n         * returned from the hotword detector service.\n         *\n         * <p>This is a PersistableBundle so it doesn't allow any remotable objects or other contents\n         * that can be used to communicate with other processes.\n         ",
    "links" : [ "android.service.voice.HotwordDetectedResult#PROXIMITY_FAR", "#getMaxBundleSize", "android.service.voice.HotwordDetectedResult#PROXIMITY_NEAR" ]
  }, {
    "name" : "public Builder setBackgroundAudioPower(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Power of the background audio signal in which the hotword phrase was detected.\n         *\n         * <p> Only values between 0 and {@link #getMaxBackgroundAudioPower} (inclusive)\n         * and the special value {@link #BACKGROUND_AUDIO_POWER_UNSET} are valid.\n         *\n         * <p> This value is unitless. The relation between this value and the real audio signal\n         * power measured in decibels depends on the hotword detection service implementation.\n         ",
    "links" : [ "#getMaxBackgroundAudioPower", "#BACKGROUND_AUDIO_POWER_UNSET" ]
  }, {
    "name" : "public HotwordDetectedResult build()",
    "returnType" : "HotwordDetectedResult",
    "comment" : " Builds the instance. This builder should not be touched after calling this! ",
    "links" : [ ]
  }, {
    "name" : "private void checkNotUsed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setSpeakerId(int value)", "public Builder setConfidenceLevel(@HotwordConfidenceLevelValue int value)", "public Builder setMediaSyncEvent(@NonNull MediaSyncEvent value)", "public Builder setHotwordOffsetMillis(int value)", "public Builder setHotwordDurationMillis(int value)", "public Builder setAudioChannel(int value)", "public Builder setHotwordDetectionPersonalized(boolean value)", "public Builder setScore(int value)", "public Builder setPersonalizedScore(int value)", "public Builder setHotwordPhraseId(int value)", "public Builder setExtras(@NonNull PersistableBundle value)", "public Builder setBackgroundAudioPower(int value)", "public HotwordDetectedResult build()", "private void checkNotUsed()" ],
  "variableNames" : [ "mSpeakerId", "mConfidenceLevel", "mMediaSyncEvent", "mHotwordOffsetMillis", "mHotwordDurationMillis", "mAudioChannel", "mHotwordDetectionPersonalized", "mScore", "mPersonalizedScore", "mHotwordPhraseId", "mAudioStreams", "mExtras", "mBackgroundAudioPower", "mBuilderFieldsSet" ]
}