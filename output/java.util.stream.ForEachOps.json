{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/ForEachOps.java",
  "packageName" : "java.util.stream",
  "className" : "ForEachOps",
  "comment" : "\n * Factory for creating instances of {@code TerminalOp} that perform an\n * action for every element of a stream.  Supported variants include unordered\n * traversal (elements are provided to the {@code Consumer} as soon as they are\n * available), and ordered traversal (elements are provided to the\n * {@code Consumer} in encounter order.)\n *\n * <p>Elements are provided to the {@code Consumer} on whatever thread and\n * whatever order they become available.  For ordered traversals, it is\n * guaranteed that processing an element <em>happens-before</em> processing\n * subsequent elements in the encounter order.\n *\n * <p>Exceptions occurring as a result of sending an element to the\n * {@code Consumer} will be relayed to the caller and traversal will be\n * prematurely terminated.\n *\n * @since 1.8\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static TerminalOp<T, Void> makeRef(Consumer<? super T> action, boolean ordered)",
    "returnType" : "TerminalOp<T, Void>",
    "comment" : "\n     * Constructs a {@code TerminalOp} that perform an action for every element\n     * of a stream.\n     *\n     * @param action the {@code Consumer} that receives all elements of a\n     *        stream\n     * @param ordered whether an ordered traversal is requested\n     * @param <T> the type of the stream elements\n     * @return the {@code TerminalOp} instance\n     ",
    "links" : [ ]
  }, {
    "name" : "public static TerminalOp<Integer, Void> makeInt(IntConsumer action, boolean ordered)",
    "returnType" : "TerminalOp<Integer, Void>",
    "comment" : "\n     * Constructs a {@code TerminalOp} that perform an action for every element\n     * of an {@code IntStream}.\n     *\n     * @param action the {@code IntConsumer} that receives all elements of a\n     *        stream\n     * @param ordered whether an ordered traversal is requested\n     * @return the {@code TerminalOp} instance\n     ",
    "links" : [ ]
  }, {
    "name" : "public static TerminalOp<Long, Void> makeLong(LongConsumer action, boolean ordered)",
    "returnType" : "TerminalOp<Long, Void>",
    "comment" : "\n     * Constructs a {@code TerminalOp} that perform an action for every element\n     * of a {@code LongStream}.\n     *\n     * @param action the {@code LongConsumer} that receives all elements of a\n     *        stream\n     * @param ordered whether an ordered traversal is requested\n     * @return the {@code TerminalOp} instance\n     ",
    "links" : [ ]
  }, {
    "name" : "public static TerminalOp<Double, Void> makeDouble(DoubleConsumer action, boolean ordered)",
    "returnType" : "TerminalOp<Double, Void>",
    "comment" : "\n     * Constructs a {@code TerminalOp} that perform an action for every element\n     * of a {@code DoubleStream}.\n     *\n     * @param action the {@code DoubleConsumer} that receives all elements of\n     *        a stream\n     * @param ordered whether an ordered traversal is requested\n     * @return the {@code TerminalOp} instance\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static TerminalOp<T, Void> makeRef(Consumer<? super T> action, boolean ordered)", "public static TerminalOp<Integer, Void> makeInt(IntConsumer action, boolean ordered)", "public static TerminalOp<Long, Void> makeLong(LongConsumer action, boolean ordered)", "public static TerminalOp<Double, Void> makeDouble(DoubleConsumer action, boolean ordered)" ],
  "variableNames" : [ ]
}