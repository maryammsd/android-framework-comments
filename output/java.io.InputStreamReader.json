{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/io/InputStreamReader.java",
  "packageName" : "java.io",
  "className" : "InputStreamReader",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "sd",
    "type" : "StreamDecoder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getEncoding()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the character encoding being used by this stream.\n     *\n     * <p> If the encoding has an historical name then that name is returned;\n     * otherwise the encoding's canonical name is returned.\n     *\n     * <p> If this instance was created with the {@link\n     * #InputStreamReader(InputStream, String)} constructor then the returned\n     * name, being unique for the encoding, may differ from the name passed to\n     * the constructor. This method will return {@code null} if the\n     * stream has been closed.\n     * </p>\n     * @return The historical name of this encoding, or\n     *         {@code null} if the stream has been closed\n     *\n     * @see java.nio.charset.Charset\n     *\n     * @revised 1.4\n     ",
    "links" : [ "#InputStreamReader(InputStream" ]
  }, {
    "name" : "public int read(CharBuffer target) throws IOException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int read() throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Reads a single character.\n     *\n     * @return The character read, or -1 if the end of the stream has been\n     *         reached\n     *\n     * @throws     IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public int read(char[] cbuf, int off, int len) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     * @throws     IndexOutOfBoundsException  {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean ready() throws IOException",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether this stream is ready to be read.  An InputStreamReader is\n     * ready if its input buffer is not empty, or if bytes are available to be\n     * read from the underlying byte stream.\n     *\n     * @throws     IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getEncoding()", "public int read(CharBuffer target) throws IOException", "public int read() throws IOException", "public int read(char[] cbuf, int off, int len) throws IOException", "public boolean ready() throws IOException", "public void close() throws IOException" ],
  "variableNames" : [ "sd" ]
}