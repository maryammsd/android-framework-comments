{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/session/PlaybackState.java",
  "packageName" : "android.media.session",
  "className" : "PlaybackState",
  "comment" : "\n * Playback state for a {@link MediaSession}. This includes a state like\n * {@link PlaybackState#STATE_PLAYING}, the current playback position,\n * and the current control capabilities.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ACTION_STOP",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the stop command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PAUSE",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the pause command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PLAY",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the play command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_REWIND",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the rewind command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_SKIP_TO_PREVIOUS",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the previous command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_SKIP_TO_NEXT",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the next command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_FAST_FORWARD",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the fast forward command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_SET_RATING",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the set rating command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_SEEK_TO",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the seek to command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PLAY_PAUSE",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the play/pause toggle command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PLAY_FROM_MEDIA_ID",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the play from media id command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PLAY_FROM_SEARCH",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the play from search command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_SKIP_TO_QUEUE_ITEM",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the skip to queue item command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PLAY_FROM_URI",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the play from URI command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PREPARE",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the prepare command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PREPARE_FROM_MEDIA_ID",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the prepare from media id command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PREPARE_FROM_SEARCH",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the prepare from search command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_PREPARE_FROM_URI",
    "type" : "long",
    "comment" : "\n     * Indicates this session supports the prepare from URI command.\n     *\n     * @see Builder#setActions(long)\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_NONE",
    "type" : "int",
    "comment" : "\n     * This is the default playback state and indicates that no media has been\n     * added yet, or the performer has been reset and has no content to play.\n     *\n     * @see Builder#setState(int, long, float)\n     * @see Builder#setState(int, long, float, long)\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_STOPPED",
    "type" : "int",
    "comment" : "\n     * State indicating this item is currently stopped.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_PAUSED",
    "type" : "int",
    "comment" : "\n     * State indicating this item is currently paused.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_PLAYING",
    "type" : "int",
    "comment" : "\n     * State indicating this item is currently playing.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_FAST_FORWARDING",
    "type" : "int",
    "comment" : "\n     * State indicating this item is currently fast forwarding.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_REWINDING",
    "type" : "int",
    "comment" : "\n     * State indicating this item is currently rewinding.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_BUFFERING",
    "type" : "int",
    "comment" : "\n     * State indicating this item is currently buffering and will begin playing\n     * when enough data has buffered.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_ERROR",
    "type" : "int",
    "comment" : "\n     * State indicating this item is currently in an error state. The error\n     * message should also be set when entering this state.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_CONNECTING",
    "type" : "int",
    "comment" : "\n     * State indicating the class doing playback is currently connecting to a\n     * new destination.  Depending on the implementation you may return to the previous\n     * state when the connection finishes or enter {@link #STATE_NONE}.\n     * If the connection failed {@link #STATE_ERROR} should be used.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ "#STATE_NONE", "#STATE_ERROR" ]
  }, {
    "name" : "STATE_SKIPPING_TO_PREVIOUS",
    "type" : "int",
    "comment" : "\n     * State indicating the player is currently skipping to the previous item.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_SKIPPING_TO_NEXT",
    "type" : "int",
    "comment" : "\n     * State indicating the player is currently skipping to the next item.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_SKIPPING_TO_QUEUE_ITEM",
    "type" : "int",
    "comment" : "\n     * State indicating the player is currently skipping to a specific item in\n     * the queue.\n     *\n     * @see Builder#setState\n     ",
    "links" : [ ]
  }, {
    "name" : "PLAYBACK_POSITION_UNKNOWN",
    "type" : "long",
    "comment" : "\n     * Use this value for the position to indicate the position is not known.\n     ",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPosition",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBufferedPosition",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSpeed",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActions",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCustomActions",
    "type" : "List<PlaybackState.CustomAction>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mErrorMessage",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUpdateTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActiveItemId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<PlaybackState>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getState()",
    "returnType" : "int",
    "comment" : "\n     * Get the current state of playback. One of the following:\n     * <ul>\n     * <li> {@link PlaybackState#STATE_NONE}</li>\n     * <li> {@link PlaybackState#STATE_STOPPED}</li>\n     * <li> {@link PlaybackState#STATE_PLAYING}</li>\n     * <li> {@link PlaybackState#STATE_PAUSED}</li>\n     * <li> {@link PlaybackState#STATE_FAST_FORWARDING}</li>\n     * <li> {@link PlaybackState#STATE_REWINDING}</li>\n     * <li> {@link PlaybackState#STATE_BUFFERING}</li>\n     * <li> {@link PlaybackState#STATE_ERROR}</li>\n     * <li> {@link PlaybackState#STATE_CONNECTING}</li>\n     * <li> {@link PlaybackState#STATE_SKIPPING_TO_PREVIOUS}</li>\n     * <li> {@link PlaybackState#STATE_SKIPPING_TO_NEXT}</li>\n     * <li> {@link PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM}</li>\n     * </ul>\n     ",
    "links" : [ "android.media.session.PlaybackState#STATE_NONE", "android.media.session.PlaybackState#STATE_CONNECTING", "android.media.session.PlaybackState#STATE_SKIPPING_TO_NEXT", "android.media.session.PlaybackState#STATE_STOPPED", "android.media.session.PlaybackState#STATE_REWINDING", "android.media.session.PlaybackState#STATE_BUFFERING", "android.media.session.PlaybackState#STATE_FAST_FORWARDING", "android.media.session.PlaybackState#STATE_PLAYING", "android.media.session.PlaybackState#STATE_ERROR", "android.media.session.PlaybackState#STATE_PAUSED", "android.media.session.PlaybackState#STATE_SKIPPING_TO_QUEUE_ITEM", "android.media.session.PlaybackState#STATE_SKIPPING_TO_PREVIOUS" ]
  }, {
    "name" : "public long getPosition()",
    "returnType" : "long",
    "comment" : "\n     * Get the current playback position in ms.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getBufferedPosition()",
    "returnType" : "long",
    "comment" : "\n     * Get the current buffered position in ms. This is the farthest playback\n     * point that can be reached from the current position using only buffered\n     * content.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getPlaybackSpeed()",
    "returnType" : "float",
    "comment" : "\n     * Get the current playback speed as a multiple of normal playback. This\n     * should be negative when rewinding. A value of 1 means normal playback and\n     * 0 means paused.\n     *\n     * @return The current speed of playback.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getActions()",
    "returnType" : "long",
    "comment" : "\n     * Get the current actions available on this session. This should use a\n     * bitmask of the available actions.\n     * <ul>\n     * <li> {@link PlaybackState#ACTION_SKIP_TO_PREVIOUS}</li>\n     * <li> {@link PlaybackState#ACTION_REWIND}</li>\n     * <li> {@link PlaybackState#ACTION_PLAY}</li>\n     * <li> {@link PlaybackState#ACTION_PAUSE}</li>\n     * <li> {@link PlaybackState#ACTION_STOP}</li>\n     * <li> {@link PlaybackState#ACTION_FAST_FORWARD}</li>\n     * <li> {@link PlaybackState#ACTION_SKIP_TO_NEXT}</li>\n     * <li> {@link PlaybackState#ACTION_SEEK_TO}</li>\n     * <li> {@link PlaybackState#ACTION_SET_RATING}</li>\n     * <li> {@link PlaybackState#ACTION_PLAY_PAUSE}</li>\n     * <li> {@link PlaybackState#ACTION_PLAY_FROM_MEDIA_ID}</li>\n     * <li> {@link PlaybackState#ACTION_PLAY_FROM_SEARCH}</li>\n     * <li> {@link PlaybackState#ACTION_SKIP_TO_QUEUE_ITEM}</li>\n     * <li> {@link PlaybackState#ACTION_PLAY_FROM_URI}</li>\n     * <li> {@link PlaybackState#ACTION_PREPARE}</li>\n     * <li> {@link PlaybackState#ACTION_PREPARE_FROM_MEDIA_ID}</li>\n     * <li> {@link PlaybackState#ACTION_PREPARE_FROM_SEARCH}</li>\n     * <li> {@link PlaybackState#ACTION_PREPARE_FROM_URI}</li>\n     * </ul>\n     ",
    "links" : [ "android.media.session.PlaybackState#ACTION_SKIP_TO_PREVIOUS", "android.media.session.PlaybackState#ACTION_SKIP_TO_NEXT", "android.media.session.PlaybackState#ACTION_PREPARE_FROM_SEARCH", "android.media.session.PlaybackState#ACTION_SEEK_TO", "android.media.session.PlaybackState#ACTION_PAUSE", "android.media.session.PlaybackState#ACTION_PLAY", "android.media.session.PlaybackState#ACTION_SKIP_TO_QUEUE_ITEM", "android.media.session.PlaybackState#ACTION_SET_RATING", "android.media.session.PlaybackState#ACTION_PLAY_FROM_URI", "android.media.session.PlaybackState#ACTION_PREPARE", "android.media.session.PlaybackState#ACTION_PREPARE_FROM_MEDIA_ID", "android.media.session.PlaybackState#ACTION_PLAY_FROM_MEDIA_ID", "android.media.session.PlaybackState#ACTION_REWIND", "android.media.session.PlaybackState#ACTION_PREPARE_FROM_URI", "android.media.session.PlaybackState#ACTION_STOP", "android.media.session.PlaybackState#ACTION_FAST_FORWARD", "android.media.session.PlaybackState#ACTION_PLAY_FROM_SEARCH", "android.media.session.PlaybackState#ACTION_PLAY_PAUSE" ]
  }, {
    "name" : "public List<PlaybackState.CustomAction> getCustomActions()",
    "returnType" : "List<PlaybackState.CustomAction>",
    "comment" : "\n     * Get the list of custom actions.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getErrorMessage()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Get a user readable error message. This should be set when the state is\n     * {@link PlaybackState#STATE_ERROR}.\n     ",
    "links" : [ "android.media.session.PlaybackState#STATE_ERROR" ]
  }, {
    "name" : "public long getLastPositionUpdateTime()",
    "returnType" : "long",
    "comment" : "\n     * Get the elapsed real time at which position was last updated. If the\n     * position has never been set this will return 0;\n     *\n     * @return The last time the position was updated.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getActiveQueueItemId()",
    "returnType" : "long",
    "comment" : "\n     * Get the id of the currently active item in the queue. If there is no\n     * queue or a queue is not supported by the session this will be\n     * {@link MediaSession.QueueItem#UNKNOWN_ID}.\n     *\n     * @return The id of the currently active item in the queue or\n     *         {@link MediaSession.QueueItem#UNKNOWN_ID}.\n     ",
    "links" : [ "MediaSession.QueueItem#UNKNOWN_ID" ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n     * Get any custom extras that were set on this playback state.\n     *\n     * @return The extras for this state or null.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "ACTION_STOP", "ACTION_PAUSE", "ACTION_PLAY", "ACTION_REWIND", "ACTION_SKIP_TO_PREVIOUS", "ACTION_SKIP_TO_NEXT", "ACTION_FAST_FORWARD", "ACTION_SET_RATING", "ACTION_SEEK_TO", "ACTION_PLAY_PAUSE", "ACTION_PLAY_FROM_MEDIA_ID", "ACTION_PLAY_FROM_SEARCH", "ACTION_SKIP_TO_QUEUE_ITEM", "ACTION_PLAY_FROM_URI", "ACTION_PREPARE", "ACTION_PREPARE_FROM_MEDIA_ID", "ACTION_PREPARE_FROM_SEARCH", "ACTION_PREPARE_FROM_URI", "STATE_NONE", "STATE_STOPPED", "STATE_PAUSED", "STATE_PLAYING", "STATE_FAST_FORWARDING", "STATE_REWINDING", "STATE_BUFFERING", "STATE_ERROR", "STATE_CONNECTING", "STATE_SKIPPING_TO_PREVIOUS", "STATE_SKIPPING_TO_NEXT", "STATE_SKIPPING_TO_QUEUE_ITEM", "PLAYBACK_POSITION_UNKNOWN", "mState", "mPosition", "mBufferedPosition", "mSpeed", "mActions", "mCustomActions", "mErrorMessage", "mUpdateTime", "mActiveItemId", "mExtras", "CREATOR" ],
  "methodNames" : [ "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public int getState()", "public long getPosition()", "public long getBufferedPosition()", "public float getPlaybackSpeed()", "public long getActions()", "public List<PlaybackState.CustomAction> getCustomActions()", "public CharSequence getErrorMessage()", "public long getLastPositionUpdateTime()", "public long getActiveQueueItemId()", "public Bundle getExtras()" ]
}