{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/BatteryUsageStatsQuery.java",
  "packageName" : "android.os",
  "className" : "Builder",
  "comment" : "\n     * Builder for BatteryUsageStatsQuery.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserIds",
    "type" : "IntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxStatsAgeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFromTimestamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToTimestamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinConsumedPowerThreshold",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPowerComponents",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public BatteryUsageStatsQuery build()",
    "returnType" : "BatteryUsageStatsQuery",
    "comment" : "\n         * Builds a read-only BatteryUsageStatsQuery object.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addUser(@NonNull UserHandle userHandle)",
    "returnType" : "Builder",
    "comment" : "\n         * Add a user whose battery stats should be included in the battery usage stats.\n         * {@link UserHandle#USER_ALL} will be used by default if no users are added explicitly.\n         ",
    "links" : [ "android.os.UserHandle#USER_ALL" ]
  }, {
    "name" : "public Builder includeBatteryHistory()",
    "returnType" : "Builder",
    "comment" : "\n         * Requests that battery history be included in the BatteryUsageStats.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder includeProcessStateData()",
    "returnType" : "Builder",
    "comment" : "\n         * Requests that per-process state data be included in the BatteryUsageStats, if\n         * available. Check {@link BatteryUsageStats#isProcessStateDataIncluded()} on the result\n         * to see if the data is available.\n         ",
    "links" : [ "android.os.BatteryUsageStats#isProcessStateDataIncluded()" ]
  }, {
    "name" : "public Builder powerProfileModeledOnly()",
    "returnType" : "Builder",
    "comment" : "\n         * Requests to return modeled battery usage stats only, even if on-device\n         * power monitoring data is available.\n         *\n         * Should only be used for testing and debugging.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder includePowerModels()",
    "returnType" : "Builder",
    "comment" : "\n         * Requests to return identifiers of models that were used for estimation\n         * of power consumption.\n         *\n         * Should only be used for testing and debugging.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder includePowerComponents(@BatteryConsumer.PowerComponent int[] powerComponents)",
    "returnType" : "Builder",
    "comment" : "\n         * Requests to return only statistics for the specified power components.  The default\n         * is all power components.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder includeVirtualUids()",
    "returnType" : "Builder",
    "comment" : "\n         * Requests to return attribution data for virtual UIDs such as\n         * {@link Process#SDK_SANDBOX_VIRTUAL_UID}.\n         ",
    "links" : [ "android.os.Process#SDK_SANDBOX_VIRTUAL_UID" ]
  }, {
    "name" : "public Builder aggregateSnapshots(long fromTimestamp, long toTimestamp)",
    "returnType" : "Builder",
    "comment" : " TODO(b/298459065): switch to monotonic clock",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxStatsAgeMs(long maxStatsAgeMs)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the client's tolerance for stale battery stats. The data may be up to\n         * this many milliseconds out-of-date.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMinConsumedPowerThreshold(double minConsumedPowerThreshold)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the minimal power component consumed power threshold. The small power consuming\n         * components will be reported as zero.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public BatteryUsageStatsQuery build()", "public Builder addUser(@NonNull UserHandle userHandle)", "public Builder includeBatteryHistory()", "public Builder includeProcessStateData()", "public Builder powerProfileModeledOnly()", "public Builder includePowerModels()", "public Builder includePowerComponents(@BatteryConsumer.PowerComponent int[] powerComponents)", "public Builder includeVirtualUids()", "public Builder aggregateSnapshots(long fromTimestamp, long toTimestamp)", "public Builder setMaxStatsAgeMs(long maxStatsAgeMs)", "public Builder setMinConsumedPowerThreshold(double minConsumedPowerThreshold)" ],
  "variableNames" : [ "mFlags", "mUserIds", "mMaxStatsAgeMs", "mFromTimestamp", "mToTimestamp", "mMinConsumedPowerThreshold", "mPowerComponents" ]
}