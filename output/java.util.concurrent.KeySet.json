{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/ConcurrentSkipListMap.java",
  "packageName" : "java.util.concurrent",
  "className" : "KeySet",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "m",
    "type" : "ConcurrentNavigableMap<K, V>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int size()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean contains(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean remove(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public K lower(K e)",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public K floor(K e)",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public K ceiling(K e)",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public K higher(K e)",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Comparator<? super K> comparator()",
    "returnType" : "Comparator<? super K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public K first()",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public K last()",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public K pollFirst()",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public K pollLast()",
    "returnType" : "K",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Iterator<K> iterator()",
    "returnType" : "Iterator<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Object[] toArray()",
    "returnType" : "Object[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T[] toArray(T[] a)",
    "returnType" : "T[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Iterator<K> descendingIterator()",
    "returnType" : "Iterator<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NavigableSet<K> subSet(K fromElement, boolean fromInclusive, K toElement, boolean toInclusive)",
    "returnType" : "NavigableSet<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NavigableSet<K> headSet(K toElement, boolean inclusive)",
    "returnType" : "NavigableSet<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NavigableSet<K> tailSet(K fromElement, boolean inclusive)",
    "returnType" : "NavigableSet<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NavigableSet<K> subSet(K fromElement, K toElement)",
    "returnType" : "NavigableSet<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NavigableSet<K> headSet(K toElement)",
    "returnType" : "NavigableSet<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NavigableSet<K> tailSet(K fromElement)",
    "returnType" : "NavigableSet<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NavigableSet<K> descendingSet()",
    "returnType" : "NavigableSet<K>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Spliterator<K> spliterator()",
    "returnType" : "Spliterator<K>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int size()", "public boolean isEmpty()", "public boolean contains(Object o)", "public boolean remove(Object o)", "public void clear()", "public K lower(K e)", "public K floor(K e)", "public K ceiling(K e)", "public K higher(K e)", "public Comparator<? super K> comparator()", "public K first()", "public K last()", "public K pollFirst()", "public K pollLast()", "public Iterator<K> iterator()", "public boolean equals(Object o)", "public Object[] toArray()", "public T[] toArray(T[] a)", "public Iterator<K> descendingIterator()", "public NavigableSet<K> subSet(K fromElement, boolean fromInclusive, K toElement, boolean toInclusive)", "public NavigableSet<K> headSet(K toElement, boolean inclusive)", "public NavigableSet<K> tailSet(K fromElement, boolean inclusive)", "public NavigableSet<K> subSet(K fromElement, K toElement)", "public NavigableSet<K> headSet(K toElement)", "public NavigableSet<K> tailSet(K fromElement)", "public NavigableSet<K> descendingSet()", "public Spliterator<K> spliterator()" ],
  "variableNames" : [ "m" ]
}