{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/mbms/MbmsDownloadReceiver.java",
  "packageName" : "android.telephony.mbms",
  "className" : "MbmsDownloadReceiver",
  "comment" : "\n * The {@link BroadcastReceiver} responsible for handling intents sent from the middleware. Apps\n * that wish to download using MBMS APIs should declare this class in their AndroidManifest.xml as\n * follows:\n<pre>{@code\n<receiver\n    android:name=\"android.telephony.mbms.MbmsDownloadReceiver\"\n    android:permission=\"android.permission.SEND_EMBMS_INTENTS\"\n    android:enabled=\"true\"\n    android:exported=\"true\">\n</receiver>}</pre>\n ",
  "links" : [ "android.content.BroadcastReceiver" ],
  "variables" : [ {
    "name" : "DOWNLOAD_TOKEN_SUFFIX",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MBMS_FILE_PROVIDER_META_DATA_KEY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "EMBMS_INTENT_PERMISSION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_OK",
    "type" : "int",
    "comment" : "\n     * Indicates that the requested operation completed without error.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RESULT_INVALID_ACTION",
    "type" : "int",
    "comment" : "\n     * Indicates that the intent sent had an invalid action. This will be the result if\n     * {@link Intent#getAction()} returns anything other than\n     * {@link VendorUtils#ACTION_DOWNLOAD_RESULT_INTERNAL},\n     * {@link VendorUtils#ACTION_FILE_DESCRIPTOR_REQUEST}, or\n     * {@link VendorUtils#ACTION_CLEANUP}.\n     * This is a fatal result code and no result extras should be expected.\n     * @hide\n     ",
    "links" : [ "android.telephony.mbms.vendor.VendorUtils#ACTION_FILE_DESCRIPTOR_REQUEST", "android.content.Intent#getAction()", "android.telephony.mbms.vendor.VendorUtils#ACTION_DOWNLOAD_RESULT_INTERNAL", "android.telephony.mbms.vendor.VendorUtils#ACTION_CLEANUP" ]
  }, {
    "name" : "RESULT_MALFORMED_INTENT",
    "type" : "int",
    "comment" : "\n     * Indicates that the intent was missing some required extras.\n     * This is a fatal result code and no result extras should be expected.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RESULT_BAD_TEMP_FILE_ROOT",
    "type" : "int",
    "comment" : "\n     * Indicates that the supplied value for {@link VendorUtils#EXTRA_TEMP_FILE_ROOT}\n     * does not match what the app has stored.\n     * This is a fatal result code and no result extras should be expected.\n     * @hide\n     ",
    "links" : [ "android.telephony.mbms.vendor.VendorUtils#EXTRA_TEMP_FILE_ROOT" ]
  }, {
    "name" : "RESULT_DOWNLOAD_FINALIZATION_ERROR",
    "type" : "int",
    "comment" : "\n     * Indicates that the manager was unable to move the completed download to its final location.\n     * This is a fatal result code and no result extras should be expected.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RESULT_TEMP_FILE_GENERATION_ERROR",
    "type" : "int",
    "comment" : "\n     * Indicates that the manager was unable to generate one or more of the requested file\n     * descriptors.\n     * This is a non-fatal result code -- some file descriptors may still be generated, but there\n     * is no guarantee that they will be the same number as requested.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "RESULT_APP_NOTIFICATION_ERROR",
    "type" : "int",
    "comment" : "\n     * Indicates that the manager was unable to notify the app of the completed download.\n     * This is a fatal result code and no result extras should be expected.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TEMP_FILE_SUFFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TEMP_FILE_STAGING_LOCATION",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_TEMP_FILE_RETRIES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFileProviderAuthorityCache",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMiddlewarePackageNameCache",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onReceive(Context context, Intent intent)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private boolean verifyIntentContents(Context context, Intent intent)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void moveDownloadedFile(Context context, Intent intent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void cleanupPostMove(Context context, Intent intent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void generateTempFiles(Context context, Intent intent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ArrayList<UriPathPair> generateFreshTempFiles(Context context, String serviceId, int freshFdCount)",
    "returnType" : "ArrayList<UriPathPair>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static File generateSingleTempFile(File tempFileDir)",
    "returnType" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ArrayList<UriPathPair> generateUrisForPausedFiles(Context context, String serviceId, List<Uri> pausedFiles)",
    "returnType" : "ArrayList<UriPathPair>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void cleanupTempFiles(Context context, Intent intent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Uri moveToFinalLocation(Uri fromPath, Path appSpecifiedPath, String relativeLocation) throws IOException",
    "returnType" : "Uri",
    "comment" : "\n     * Moves a tempfile located at fromPath to its final home where the app wants it\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getFileRelativePath(String sourceUriPath, String fileInfoPath)",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean verifyTempFilePath(Context context, String serviceId, Uri filePath)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String getFileProviderAuthorityCached(Context context)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String getFileProviderAuthority(Context context)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private String getMiddlewarePackageCached(Context context)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void verifyPermissionIntegrity(Context context)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onReceive(Context context, Intent intent)", "private boolean verifyIntentContents(Context context, Intent intent)", "private void moveDownloadedFile(Context context, Intent intent)", "private void cleanupPostMove(Context context, Intent intent)", "private void generateTempFiles(Context context, Intent intent)", "private ArrayList<UriPathPair> generateFreshTempFiles(Context context, String serviceId, int freshFdCount)", "private static File generateSingleTempFile(File tempFileDir)", "private ArrayList<UriPathPair> generateUrisForPausedFiles(Context context, String serviceId, List<Uri> pausedFiles)", "private void cleanupTempFiles(Context context, Intent intent)", "private static Uri moveToFinalLocation(Uri fromPath, Path appSpecifiedPath, String relativeLocation) throws IOException", "public static String getFileRelativePath(String sourceUriPath, String fileInfoPath)", "private static boolean verifyTempFilePath(Context context, String serviceId, Uri filePath)", "private String getFileProviderAuthorityCached(Context context)", "private static String getFileProviderAuthority(Context context)", "private String getMiddlewarePackageCached(Context context)", "private void verifyPermissionIntegrity(Context context)" ],
  "variableNames" : [ "DOWNLOAD_TOKEN_SUFFIX", "MBMS_FILE_PROVIDER_META_DATA_KEY", "EMBMS_INTENT_PERMISSION", "RESULT_OK", "RESULT_INVALID_ACTION", "RESULT_MALFORMED_INTENT", "RESULT_BAD_TEMP_FILE_ROOT", "RESULT_DOWNLOAD_FINALIZATION_ERROR", "RESULT_TEMP_FILE_GENERATION_ERROR", "RESULT_APP_NOTIFICATION_ERROR", "LOG_TAG", "TEMP_FILE_SUFFIX", "TEMP_FILE_STAGING_LOCATION", "MAX_TEMP_FILE_RETRIES", "mFileProviderAuthorityCache", "mMiddlewarePackageNameCache" ]
}