{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/ProfilingFrameworkInitializer.java",
  "packageName" : "android.os",
  "className" : "ProfilingFrameworkInitializer",
  "comment" : "\n * Class for performing registration for profiling service.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "sProfilingServiceManager",
    "type" : "ProfilingServiceManager",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void setProfilingServiceManager(@NonNull ProfilingServiceManager profilingServiceManager)",
    "returnType" : "void",
    "comment" : "\n     * Sets an instance of {@link ProfilingServiceManager} that allows the profiling module to\n     * register/obtain profiling binder services. This is called by the platform during the system\n     * initialization.\n     *\n     * @param profilingServiceManager instance of {@link ProfilingServiceManager} that allows the\n     * profiling module to register/obtain profiling binder services.\n     ",
    "links" : [ "android.os.ProfilingServiceManager" ]
  }, {
    "name" : "public static ProfilingServiceManager getProfilingServiceManager()",
    "returnType" : "ProfilingServiceManager",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static void registerServiceWrappers()",
    "returnType" : "void",
    "comment" : "\n     * Called by {@link SystemServiceRegistry}'s static initializer and registers profiling\n     * services to {@link Context}, so that {@link Context#getSystemService} can return them.\n     *\n     * @throws IllegalStateException if this is called from anywhere besides\n     * {@link SystemServiceRegistry}\n     ",
    "links" : [ "android.content.Context", "android.content.Context#getSystemService", "android.app.SystemServiceRegistry" ]
  } ],
  "methodNames" : [ "public static void setProfilingServiceManager(@NonNull ProfilingServiceManager profilingServiceManager)", "public static ProfilingServiceManager getProfilingServiceManager()", "public static void registerServiceWrappers()" ],
  "variableNames" : [ "sProfilingServiceManager" ]
}