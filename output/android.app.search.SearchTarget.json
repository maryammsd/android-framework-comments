{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/search/SearchTarget.java",
  "packageName" : "android.app.search",
  "className" : "SearchTarget",
  "comment" : "\n * A representation of a search result. Search result can be expressed in one of the following:\n * app icon, shortcut, slice, widget, or a custom object using {@link SearchAction}. While\n * app icon ({@link PackageManager}, shortcut {@link ShortcutManager}, slice {@link SliceManager},\n * or widget (@link AppWidgetManager} are published content backed by the system service,\n * {@link SearchAction} is a custom object that the service can use to send search result to the\n * client.\n *\n * These various types of Android primitives could be defined as {@link SearchResultType}. Some\n * times, the result type can define the layout type that that this object can be rendered in.\n * (e.g., app widget). Most times, {@link #getLayoutType()} assigned by the service\n * can recommend which layout this target should be rendered in.\n *\n * The service can also use fields such as {@link #getScore()} to indicate\n * how confidence the search result is and {@link #isHidden()} to indicate\n * whether it is recommended to be shown by default.\n *\n * Finally, {@link #getId()} is the unique identifier of this search target and a single\n * search target is defined by being able to express a single launcheable item. In case the\n * service want to recommend how to combine multiple search target objects to render in a group\n * (e.g., same row), {@link #getParentId()} can be assigned on the sub targets of the group\n * using the primary search target's identifier.\n *\n * @hide\n ",
  "links" : [ "android.app.slice.SliceManager", "#isHidden()", "#getParentId()", "android.content.pm.PackageManager", "#getId()", "AppWidgetManager", "#getLayoutType()", "SearchResultType", "android.content.pm.ShortcutManager", "android.app.search.SearchAction", "#getScore()" ],
  "variables" : [ {
    "name" : "RESULT_TYPE_APPLICATION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_TYPE_SHORTCUT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_TYPE_SLICE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESULT_TYPE_WIDGETS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LAYOUT_TYPE_ICON",
    "type" : "String",
    "comment" : "      text",
    "links" : [ ]
  }, {
    "name" : "LAYOUT_TYPE_ICON_ROW",
    "type" : "String",
    "comment" : "     ------                            ------  ------",
    "links" : [ ]
  }, {
    "name" : "LAYOUT_TYPE_SHORT_ICON_ROW",
    "type" : "String",
    "comment" : "     ------",
    "links" : [ ]
  }, {
    "name" : "mResultType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLayoutType",
    "type" : "String",
    "comment" : "\n     * Constant to express how the group of {@link SearchTarget} should be rendered on\n     * the client side. (e.g., \"icon\", \"icon_row\", \"short_icon_row\")\n     ",
    "links" : [ "android.app.search.SearchTarget" ]
  }, {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParentId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScore",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHidden",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserHandle",
    "type" : "UserHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSearchAction",
    "type" : "SearchAction",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShortcutInfo",
    "type" : "ShortcutInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppWidgetProviderInfo",
    "type" : "AppWidgetProviderInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSliceUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SearchTarget>",
    "comment" : "\n     * @see Parcelable.Creator\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getResultType()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the result type {@see SearchResultType}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getLayoutType()",
    "returnType" : "String",
    "comment" : "\n     * Retrieves the layout type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getId()",
    "returnType" : "String",
    "comment" : "\n     * Retrieves the id of the target.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getParentId()",
    "returnType" : "String",
    "comment" : "\n     * Retrieves the parent id of the target.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getScore()",
    "returnType" : "float",
    "comment" : "\n     * Retrieves the score of the target.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean shouldHide()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether this object should be hidden and shown only on demand.\n     *\n     * @deprecated will be removed once SDK drops\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isHidden()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether this object should be hidden and shown only on demand.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n     * Retrieves the package name of the target.\n     ",
    "links" : [ ]
  }, {
    "name" : "public UserHandle getUserHandle()",
    "returnType" : "UserHandle",
    "comment" : "\n     * Retrieves the user handle of the target.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ShortcutInfo getShortcutInfo()",
    "returnType" : "ShortcutInfo",
    "comment" : "\n     * Retrieves the shortcut info of the target.\n     ",
    "links" : [ ]
  }, {
    "name" : "public AppWidgetProviderInfo getAppWidgetProviderInfo()",
    "returnType" : "AppWidgetProviderInfo",
    "comment" : "\n     * Return a widget provider info.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Uri getSliceUri()",
    "returnType" : "Uri",
    "comment" : "\n     * Returns a slice uri.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SearchAction getSearchAction()",
    "returnType" : "SearchAction",
    "comment" : "\n     * Returns a search action.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n     * Return extra bundle.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getResultType()", "public String getLayoutType()", "public String getId()", "public String getParentId()", "public float getScore()", "public boolean shouldHide()", "public boolean isHidden()", "public String getPackageName()", "public UserHandle getUserHandle()", "public ShortcutInfo getShortcutInfo()", "public AppWidgetProviderInfo getAppWidgetProviderInfo()", "public Uri getSliceUri()", "public SearchAction getSearchAction()", "public Bundle getExtras()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel parcel, int flags)" ],
  "variableNames" : [ "RESULT_TYPE_APPLICATION", "RESULT_TYPE_SHORTCUT", "RESULT_TYPE_SLICE", "RESULT_TYPE_WIDGETS", "LAYOUT_TYPE_ICON", "LAYOUT_TYPE_ICON_ROW", "LAYOUT_TYPE_SHORT_ICON_ROW", "mResultType", "mLayoutType", "mId", "mParentId", "mScore", "mHidden", "mPackageName", "mUserHandle", "mSearchAction", "mShortcutInfo", "mAppWidgetProviderInfo", "mSliceUri", "mExtras", "CREATOR" ]
}