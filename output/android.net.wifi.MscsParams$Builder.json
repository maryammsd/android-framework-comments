{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/MscsParams.java",
  "packageName" : "android.net.wifi",
  "className" : "Builder",
  "comment" : " Builder for {@link MscsParams}. ",
  "links" : [ "android.net.wifi.MscsParams" ],
  "variables" : [ {
    "name" : "mFrameClassifierFields",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserPriorityBitmap",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserPriorityLimit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStreamTimeoutUs",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setFrameClassifierFields(@FrameClassifierField int frameClassifierFields)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a bitmap of {@link FrameClassifierField} indicating which TCLAS Type 4 frame\n         * classifier fields should be used to build a classifier.\n         *\n         * @param frameClassifierFields Bitmap indicating the requested fields.\n         * @throws IllegalArgumentException if any bits other than bits 0-7 are set.\n         ",
    "links" : [ "FrameClassifierField" ]
  }, {
    "name" : "public Builder setUserPriorityBitmap(int userPriorityBitmap)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a bitmap indicating which User Priorities (UPs) should be classified using MSCS.\n         * The least significant bit corresponds to UP 0, and the most significant\n         * bit to UP 7. Setting a bit to 1 indicates that UP should be classified.\n         *\n         * @param userPriorityBitmap Bitmap indicating which UPs should be classified.\n         * @throws IllegalArgumentException if any bits other than bits 0-7 are set.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUserPriorityLimit(@IntRange(from = 0, to = 7) int userPriorityLimit)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the maximum user priority that can be assigned using the MSCS service.\n         * Value must be between 0 and 7 (inclusive).\n         *\n         * @param userPriorityLimit Maximum user priority that can be assigned by MSCS.\n         * @throws IllegalArgumentException if the provided value is outside the expected range of\n         *                                  0-7 (inclusive).\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setStreamTimeoutUs(@IntRange(from = 0, to = MAX_STREAM_TIMEOUT_US) int streamTimeoutUs)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the minimum timeout (in microseconds) to keep this request in the MSCS list.\n         *\n         * @param streamTimeoutUs Minimum timeout in microseconds.\n         * @throws IllegalArgumentException if the provided value is outside the expected range of\n         *                                  0-60 seconds (inclusive).\n         ",
    "links" : [ ]
  }, {
    "name" : "public MscsParams build()",
    "returnType" : "MscsParams",
    "comment" : "\n         * Construct an MscsParams object using the specified parameters.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setFrameClassifierFields(@FrameClassifierField int frameClassifierFields)", "public Builder setUserPriorityBitmap(int userPriorityBitmap)", "public Builder setUserPriorityLimit(@IntRange(from = 0, to = 7) int userPriorityLimit)", "public Builder setStreamTimeoutUs(@IntRange(from = 0, to = MAX_STREAM_TIMEOUT_US) int streamTimeoutUs)", "public MscsParams build()" ],
  "variableNames" : [ "mFrameClassifierFields", "mUserPriorityBitmap", "mUserPriorityLimit", "mStreamTimeoutUs" ]
}