{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/accounts/AccountManagerInternal.java",
  "packageName" : "android.accounts",
  "className" : "AccountManagerInternal",
  "comment" : "\n * Account manager local system service interface.\n *\n * @hide Only for use within the system server.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void requestAccountAccess(@NonNull Account account, @NonNull String packageName, @IntRange(from = 0) int userId, @NonNull RemoteCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Requests that a given package is given access to an account.\n     * The provided callback will be invoked with a {@link android.os.Bundle}\n     * containing the result which will be a boolean value mapped to the\n     * {@link AccountManager#KEY_BOOLEAN_RESULT} key.\n     *\n     * @param account The account for which to request.\n     * @param packageName The package name for which to request.\n     * @param userId Concrete user id for which to request.\n     * @param callback A callback for receiving the result.\n     ",
    "links" : [ "android.os.Bundle", "android.accounts.AccountManager#KEY_BOOLEAN_RESULT" ]
  }, {
    "name" : "public abstract boolean hasAccountAccess(@NonNull Account account, @IntRange(from = 0) int uid)",
    "returnType" : "boolean",
    "comment" : "\n     * Check whether the given UID has access to the account.\n     *\n     * @param account The account\n     * @param uid The UID\n     * @return Whether the UID can access the account\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void addOnAppPermissionChangeListener(@NonNull OnAppPermissionChangeListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Adds a listener for explicit UID account access grant changes.\n     *\n     * @param listener The listener\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract byte[] backupAccountAccessPermissions(int userId)",
    "returnType" : "byte[]",
    "comment" : "\n     * Backups the account access permissions.\n     * @param userId The user for which to backup.\n     * @return The backup data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void restoreAccountAccessPermissions(byte[] data, int userId)",
    "returnType" : "void",
    "comment" : "\n     * Restores the account access permissions.\n     * @param data The restore data.\n     * @param userId The user for which to restore.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void requestAccountAccess(@NonNull Account account, @NonNull String packageName, @IntRange(from = 0) int userId, @NonNull RemoteCallback callback)", "public abstract boolean hasAccountAccess(@NonNull Account account, @IntRange(from = 0) int uid)", "public abstract void addOnAppPermissionChangeListener(@NonNull OnAppPermissionChangeListener listener)", "public abstract byte[] backupAccountAccessPermissions(int userId)", "public abstract void restoreAccountAccessPermissions(byte[] data, int userId)" ],
  "variableNames" : [ ]
}