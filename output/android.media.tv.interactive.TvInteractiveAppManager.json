{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/interactive/TvInteractiveAppManager.java",
  "packageName" : "android.media.tv.interactive",
  "className" : "TvInteractiveAppManager",
  "comment" : "\n * Central system API to the overall TV interactive application framework (TIAF) architecture, which\n * arbitrates interaction between Android applications and TV interactive apps.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : " TODO: cleanup and unhide public APIs",
    "links" : [ ]
  }, {
    "name" : "SERVICE_STATE_UNREALIZED",
    "type" : "int",
    "comment" : "\n     * Unrealized state of interactive app service.\n     ",
    "links" : [ ]
  }, {
    "name" : "SERVICE_STATE_PREPARING",
    "type" : "int",
    "comment" : "\n     * Preparing state of interactive app service.\n     ",
    "links" : [ ]
  }, {
    "name" : "SERVICE_STATE_READY",
    "type" : "int",
    "comment" : "\n     * Ready state of interactive app service.\n     *\n     * <p>In this state, the interactive app service is ready, and interactive apps can be started.\n     *\n     * @see TvInteractiveAppView#startInteractiveApp()\n     ",
    "links" : [ ]
  }, {
    "name" : "SERVICE_STATE_ERROR",
    "type" : "int",
    "comment" : "\n     * Error state of interactive app service.\n     ",
    "links" : [ ]
  }, {
    "name" : "INTERACTIVE_APP_STATE_STOPPED",
    "type" : "int",
    "comment" : "\n     * Stopped (or not started) state of interactive application.\n     ",
    "links" : [ ]
  }, {
    "name" : "INTERACTIVE_APP_STATE_RUNNING",
    "type" : "int",
    "comment" : "\n     * Running state of interactive application.\n     ",
    "links" : [ ]
  }, {
    "name" : "INTERACTIVE_APP_STATE_ERROR",
    "type" : "int",
    "comment" : "\n     * Error state of interactive application.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NONE",
    "type" : "int",
    "comment" : "\n     * No error.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Unknown error code.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_NOT_SUPPORTED",
    "type" : "int",
    "comment" : "\n     * Error code for an unsupported channel.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_WEAK_SIGNAL",
    "type" : "int",
    "comment" : "\n     * Error code for weak signal.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_RESOURCE_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n     * Error code when resource (e.g. tuner) is unavailable.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_BLOCKED",
    "type" : "int",
    "comment" : "\n     * Error code for blocked contents.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_ENCRYPTED",
    "type" : "int",
    "comment" : "\n     * Error code when the key or module is missing for the encrypted channel.\n     ",
    "links" : [ ]
  }, {
    "name" : "ERROR_UNKNOWN_CHANNEL",
    "type" : "int",
    "comment" : "\n     * Error code when the current channel is an unknown channel.\n     ",
    "links" : [ ]
  }, {
    "name" : "TELETEXT_APP_STATE_SHOW",
    "type" : "int",
    "comment" : "\n     * State of Teletext app: show\n     ",
    "links" : [ ]
  }, {
    "name" : "TELETEXT_APP_STATE_HIDE",
    "type" : "int",
    "comment" : "\n     * State of Teletext app: hide\n     ",
    "links" : [ ]
  }, {
    "name" : "TELETEXT_APP_STATE_ERROR",
    "type" : "int",
    "comment" : "\n     * State of Teletext app: error\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_PACKAGE_NAME",
    "type" : "String",
    "comment" : "\n     * Key for package name in app link.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_CLASS_NAME",
    "type" : "String",
    "comment" : "\n     * Key for class name in app link.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_COMMAND_TYPE",
    "type" : "String",
    "comment" : "\n     * Key for command type in app link command.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_SERVICE_ID",
    "type" : "String",
    "comment" : "\n     * Key for service ID in app link command.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "APP_LINK_KEY_BACK_URI",
    "type" : "String",
    "comment" : "\n     * Key for back URI in app link command.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_APP_LINK_COMMAND",
    "type" : "String",
    "comment" : "\n     * Broadcast intent action to send app command to TV app.\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_TV_INPUT_ID",
    "type" : "String",
    "comment" : "\n     * Intent key for TV input ID. It's used to send app command to TV app.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_INTERACTIVE_APP_SERVICE_ID",
    "type" : "String",
    "comment" : "\n     * Intent key for TV interactive app ID. It's used to send app command to TV app.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     * @see TvInteractiveAppServiceInfo#getId()\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_CHANNEL_URI",
    "type" : "String",
    "comment" : "\n     * Intent key for TV channel URI. It's used to send app command to TV app.\n     * <p>Type: android.net.Uri\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_BI_INTERACTIVE_APP_TYPE",
    "type" : "String",
    "comment" : "\n     * Intent key for broadcast-independent(BI) interactive app type. It's used to send app command\n     * to TV app.\n     * <p>Type: int\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     * @see android.media.tv.interactive.TvInteractiveAppServiceInfo#getSupportedTypes()\n     * @see android.media.tv.interactive.TvInteractiveAppView#createBiInteractiveApp(Uri, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_BI_INTERACTIVE_APP_URI",
    "type" : "String",
    "comment" : "\n     * Intent key for broadcast-independent(BI) interactive app URI. It's used to send app command\n     * to TV app.\n     * <p>Type: android.net.Uri\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     * @see android.media.tv.interactive.TvInteractiveAppView#createBiInteractiveApp(Uri, Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : "INTENT_KEY_COMMAND_TYPE",
    "type" : "String",
    "comment" : "\n     * Intent key for command type. It's used to send app command to TV app. The value of this key\n     * could vary according to TV apps.\n     * <p>Type: String\n     *\n     * @see #sendAppLinkCommand(String, Bundle)\n     * @see #ACTION_APP_LINK_COMMAND\n     ",
    "links" : [ ]
  }, {
    "name" : "mService",
    "type" : "ITvInteractiveAppManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionCallbackRecordMap",
    "type" : "SparseArray<SessionCallbackRecord>",
    "comment" : " A mapping from the sequence number of a session to its SessionCallbackRecord.",
    "links" : [ ]
  }, {
    "name" : "mCallbackRecords",
    "type" : "List<TvInteractiveAppCallbackRecord>",
    "comment" : " @GuardedBy(\"mLock\")",
    "links" : [ ]
  }, {
    "name" : "mNextSeq",
    "type" : "int",
    "comment" : " {@code mSessionCallbackRecordMap}.",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClient",
    "type" : "ITvInteractiveAppClient",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void createSession(@NonNull String iAppServiceId, int type, @NonNull final SessionCallback callback, @NonNull Handler handler)",
    "returnType" : "void",
    "comment" : "\n     * Creates a {@link Session} for a given TV interactive application.\n     *\n     * <p>The number of sessions that can be created at the same time is limited by the capability\n     * of the given interactive application.\n     *\n     * @param iAppServiceId The ID of the interactive application.\n     * @param type the type of the interactive application.\n     * @param callback A callback used to receive the created session.\n     * @param handler A {@link Handler} that the session creation will be delivered to.\n     * @hide\n     ",
    "links" : [ "android.os.Handler", "Session" ]
  }, {
    "name" : "private void createSessionInternal(String iAppServiceId, int type, SessionCallback callback, Handler handler)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<TvInteractiveAppServiceInfo> getTvInteractiveAppServiceList()",
    "returnType" : "List<TvInteractiveAppServiceInfo>",
    "comment" : "\n     * Returns the complete list of TV Interactive App service on the system.\n     *\n     * @return List of {@link TvInteractiveAppServiceInfo} for each TV Interactive App service that\n     *         describes its meta information.\n     ",
    "links" : [ "android.media.tv.interactive.TvInteractiveAppServiceInfo" ]
  }, {
    "name" : "public List<AppLinkInfo> getAppLinkInfoList()",
    "returnType" : "List<AppLinkInfo>",
    "comment" : "\n     * Returns a list of available app link information.\n     *\n     * <P>A package must declare its app link info in its manifest using meta-data tag, so the info\n     * can be detected by the system.\n     *\n     * @return List of {@link AppLinkInfo} for each package that deslares its app link information.\n     ",
    "links" : [ "android.media.tv.interactive.AppLinkInfo" ]
  }, {
    "name" : "public void registerAppLinkInfo(@NonNull String tvIAppServiceId, @NonNull AppLinkInfo appLinkInfo)",
    "returnType" : "void",
    "comment" : "\n     * Registers an Android application link info record which can be used to launch the specific\n     * Android application by TV interactive App RTE.\n     *\n     * @param tvIAppServiceId The ID of TV interactive service which the command to be sent to. The\n     *                        ID can be found in {@link TvInteractiveAppServiceInfo#getId()}.\n     * @param appLinkInfo The Android application link info record to be registered.\n     ",
    "links" : [ "android.media.tv.interactive.TvInteractiveAppServiceInfo#getId()" ]
  }, {
    "name" : "public void unregisterAppLinkInfo(@NonNull String tvIAppServiceId, @NonNull AppLinkInfo appLinkInfo)",
    "returnType" : "void",
    "comment" : "\n     * Unregisters an Android application link info record which can be used to launch the specific\n     * Android application by TV interactive App RTE.\n     *\n     * @param tvIAppServiceId The ID of TV interactive service which the command to be sent to. The\n     *                        ID can be found in {@link TvInteractiveAppServiceInfo#getId()}.\n     * @param appLinkInfo The Android application link info record to be unregistered.\n     ",
    "links" : [ "android.media.tv.interactive.TvInteractiveAppServiceInfo#getId()" ]
  }, {
    "name" : "public void sendAppLinkCommand(@NonNull String tvIAppServiceId, @NonNull Bundle command)",
    "returnType" : "void",
    "comment" : "\n     * Sends app link command.\n     *\n     * @param tvIAppServiceId The ID of TV interactive service which the command to be sent to. The\n     *                        ID can be found in {@link TvInteractiveAppServiceInfo#getId()}.\n     * @param command The command to be sent.\n     ",
    "links" : [ "android.media.tv.interactive.TvInteractiveAppServiceInfo#getId()" ]
  }, {
    "name" : "public void registerCallback(@CallbackExecutor @NonNull Executor executor, @NonNull TvInteractiveAppCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Registers a {@link TvInteractiveAppCallback}.\n     *\n     * @param callback A callback used to monitor status of the TV Interactive App services.\n     * @param executor A {@link Executor} that the status change will be delivered to.\n     ",
    "links" : [ "TvInteractiveAppCallback", "android.annotation.CallbackExecutor" ]
  }, {
    "name" : "public void unregisterCallback(@NonNull final TvInteractiveAppCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Unregisters the existing {@link TvInteractiveAppCallback}.\n     *\n     * @param callback The existing callback to remove.\n     ",
    "links" : [ "TvInteractiveAppCallback" ]
  } ],
  "methodNames" : [ "public void createSession(@NonNull String iAppServiceId, int type, @NonNull final SessionCallback callback, @NonNull Handler handler)", "private void createSessionInternal(String iAppServiceId, int type, SessionCallback callback, Handler handler)", "public List<TvInteractiveAppServiceInfo> getTvInteractiveAppServiceList()", "public List<AppLinkInfo> getAppLinkInfoList()", "public void registerAppLinkInfo(@NonNull String tvIAppServiceId, @NonNull AppLinkInfo appLinkInfo)", "public void unregisterAppLinkInfo(@NonNull String tvIAppServiceId, @NonNull AppLinkInfo appLinkInfo)", "public void sendAppLinkCommand(@NonNull String tvIAppServiceId, @NonNull Bundle command)", "public void registerCallback(@CallbackExecutor @NonNull Executor executor, @NonNull TvInteractiveAppCallback callback)", "public void unregisterCallback(@NonNull final TvInteractiveAppCallback callback)" ],
  "variableNames" : [ "TAG", "SERVICE_STATE_UNREALIZED", "SERVICE_STATE_PREPARING", "SERVICE_STATE_READY", "SERVICE_STATE_ERROR", "INTERACTIVE_APP_STATE_STOPPED", "INTERACTIVE_APP_STATE_RUNNING", "INTERACTIVE_APP_STATE_ERROR", "ERROR_NONE", "ERROR_UNKNOWN", "ERROR_NOT_SUPPORTED", "ERROR_WEAK_SIGNAL", "ERROR_RESOURCE_UNAVAILABLE", "ERROR_BLOCKED", "ERROR_ENCRYPTED", "ERROR_UNKNOWN_CHANNEL", "TELETEXT_APP_STATE_SHOW", "TELETEXT_APP_STATE_HIDE", "TELETEXT_APP_STATE_ERROR", "APP_LINK_KEY_PACKAGE_NAME", "APP_LINK_KEY_CLASS_NAME", "APP_LINK_KEY_COMMAND_TYPE", "APP_LINK_KEY_SERVICE_ID", "APP_LINK_KEY_BACK_URI", "ACTION_APP_LINK_COMMAND", "INTENT_KEY_TV_INPUT_ID", "INTENT_KEY_INTERACTIVE_APP_SERVICE_ID", "INTENT_KEY_CHANNEL_URI", "INTENT_KEY_BI_INTERACTIVE_APP_TYPE", "INTENT_KEY_BI_INTERACTIVE_APP_URI", "INTENT_KEY_COMMAND_TYPE", "mService", "mUserId", "mSessionCallbackRecordMap", "mCallbackRecords", "mNextSeq", "mLock", "mClient" ]
}