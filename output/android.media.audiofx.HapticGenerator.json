{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/audiofx/HapticGenerator.java",
  "packageName" : "android.media.audiofx",
  "className" : "HapticGenerator",
  "comment" : "\n * Haptic Generator(HG).\n * <p>HG is an audio post-processor which generates haptic data based on the audio channels. The\n * generated haptic data is sent along with audio data down to the audio HAL, which will require the\n * device to support audio-coupled-haptic playback. In that case, the effect will only be created on\n * device supporting audio-coupled-haptic playback. Call {@link HapticGenerator#isAvailable()} to\n * check if the device supports this effect.\n * <p>An application can create a HapticGenerator object to initiate and control this audio effect\n * in the audio framework.\n * <p>To attach the HapticGenerator to a particular AudioTrack or MediaPlayer, specify the audio\n * session ID of this AudioTrack or MediaPlayer when constructing the HapticGenerator.\n * <p>See {@link android.media.MediaPlayer#getAudioSessionId()} for details on audio sessions.\n * <p>See {@link android.media.audiofx.AudioEffect} class for more details on controlling audio\n * effects.\n ",
  "links" : [ "android.media.MediaPlayer#getAudioSessionId()", "android.media.audiofx.AudioEffect", "android.media.audiofx.HapticGenerator#isAvailable()" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolumeControlEffect",
    "type" : "AudioEffect",
    "comment" : " haptic data based on the raw audio data.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean isAvailable()",
    "returnType" : "boolean",
    "comment" : "\n     * @return true if the HapticGenerator is available on the device.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static HapticGenerator create(int audioSession)",
    "returnType" : "HapticGenerator",
    "comment" : "\n     * Creates a HapticGenerator and attaches it to the given audio session.\n     * Use {@link android.media.AudioTrack#getAudioSessionId()} or\n     * {@link android.media.MediaPlayer#getAudioSessionId()} to\n     * apply this effect on specific AudioTrack or MediaPlayer instance.\n     *\n     * @param audioSession system wide unique audio session identifier. The HapticGenerator will be\n     *                     applied to the players with the same audio session.\n     * @return HapticGenerator created or null if the device does not support HapticGenerator or\n     *                         the audio session is invalid.\n     * @throws java.lang.IllegalArgumentException when HapticGenerator is not supported\n     * @throws java.lang.UnsupportedOperationException when the effect library is not loaded.\n     * @throws java.lang.RuntimeException for all other error\n     ",
    "links" : [ "android.media.AudioTrack#getAudioSessionId()", "android.media.MediaPlayer#getAudioSessionId()" ]
  }, {
    "name" : "public int setEnabled(boolean enabled)",
    "returnType" : "int",
    "comment" : "\n     * Enable or disable the effect. The effect can only be enabled if the caller has the\n     * {@link android.Manifest.permission#VIBRATE} permission.\n     *\n     * @param enabled the requested enable state\n     * @return {@link #SUCCESS} in case of success, {@link #ERROR_INVALID_OPERATION}\n     *         or {@link #ERROR_DEAD_OBJECT} in case of failure.\n     ",
    "links" : [ "#ERROR_DEAD_OBJECT", "android.Manifest.permission#VIBRATE", "#SUCCESS", "#ERROR_INVALID_OPERATION" ]
  }, {
    "name" : "public void release()",
    "returnType" : "void",
    "comment" : "\n     * Releases the native AudioEffect resources.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Release the resources that are held by the effect.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static boolean isAvailable()", "public static HapticGenerator create(int audioSession)", "public int setEnabled(boolean enabled)", "public void release()", "public void close()" ],
  "variableNames" : [ "TAG", "mVolumeControlEffect" ]
}