{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/sip/SimpleSessionDescription.java",
  "packageName" : "android.net.sip",
  "className" : "Fields",
  "comment" : "\n     * This class acts as a set of fields, and the size of the set is expected\n     * to be small. Therefore, it uses a simple list instead of maps. Each field\n     * has three parts: a key, a delimiter, and a value. Delimiters are special\n     * because they are not included in binary attributes. As a result, the\n     * private methods, which are the building blocks of this class, all take\n     * the delimiter as an argument.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mOrder",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLines",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getAddress()",
    "returnType" : "String",
    "comment" : "\n         * Returns the connection address or {@code null} if it is not present.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setAddress(String address)",
    "returnType" : "void",
    "comment" : "\n         * Sets the connection address. The field will be removed if the address\n         * is {@code null}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getEncryptionMethod()",
    "returnType" : "String",
    "comment" : "\n         * Returns the encryption method or {@code null} if it is not present.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getEncryptionKey()",
    "returnType" : "String",
    "comment" : "\n         * Returns the encryption key or {@code null} if it is not present.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setEncryption(String method, String key)",
    "returnType" : "void",
    "comment" : "\n         * Sets the encryption method and the encryption key. The field will be\n         * removed if the method is {@code null}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String[] getBandwidthTypes()",
    "returnType" : "String[]",
    "comment" : "\n         * Returns the types of the bandwidth limits.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getBandwidth(String type)",
    "returnType" : "int",
    "comment" : "\n         * Returns the bandwidth limit of the given type or {@code -1} if it is\n         * not present.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setBandwidth(String type, int value)",
    "returnType" : "void",
    "comment" : "\n         * Sets the bandwith limit for the given type. The field will be removed\n         * if the value is negative.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String[] getAttributeNames()",
    "returnType" : "String[]",
    "comment" : "\n         * Returns the names of all the attributes.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getAttribute(String name)",
    "returnType" : "String",
    "comment" : "\n         * Returns the attribute of the given name or {@code null} if it is not\n         * present.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setAttribute(String name, String value)",
    "returnType" : "void",
    "comment" : "\n         * Sets the attribute for the given name. The field will be removed if\n         * the value is {@code null}. To set a binary attribute, use an empty\n         * string as the value.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void write(StringBuilder buffer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void parse(String line)",
    "returnType" : "void",
    "comment" : "\n         * Invokes {@link #set} after splitting the line into three parts.\n         ",
    "links" : [ "#set" ]
  }, {
    "name" : "private String[] cut(String prefix, char delimiter)",
    "returnType" : "String[]",
    "comment" : "\n         * Finds the key with the given prefix and returns its suffix.\n         ",
    "links" : [ ]
  }, {
    "name" : "private int find(String key, char delimiter)",
    "returnType" : "int",
    "comment" : "\n         * Returns the index of the key.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void set(String key, char delimiter, String value)",
    "returnType" : "void",
    "comment" : "\n         * Sets the key with the value or removes the key if the value is\n         * {@code null}.\n         ",
    "links" : [ ]
  }, {
    "name" : "private String get(String key, char delimiter)",
    "returnType" : "String",
    "comment" : "\n         * Returns the value of the key.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getAddress()", "public void setAddress(String address)", "public String getEncryptionMethod()", "public String getEncryptionKey()", "public void setEncryption(String method, String key)", "public String[] getBandwidthTypes()", "public int getBandwidth(String type)", "public void setBandwidth(String type, int value)", "public String[] getAttributeNames()", "public String getAttribute(String name)", "public void setAttribute(String name, String value)", "private void write(StringBuilder buffer)", "private void parse(String line)", "private String[] cut(String prefix, char delimiter)", "private int find(String key, char delimiter)", "private void set(String key, char delimiter, String value)", "private String get(String key, char delimiter)" ],
  "variableNames" : [ "mOrder", "mLines" ]
}