{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/TelephonyDisplayInfo.java",
  "packageName" : "android.telephony",
  "className" : "TelephonyDisplayInfo",
  "comment" : "\n * TelephonyDisplayInfo contains telephony-related information used for display purposes only. This\n * information is provided in accordance with carrier policy and branding preferences; it is not\n * necessarily a precise or accurate representation of the current state and should be treated\n * accordingly.\n ",
  "variables" : [ {
    "name" : "OVERRIDE_NETWORK_TYPE_NONE",
    "type" : "int",
    "comment" : "\n     * No override. {@link #getNetworkType()} should be used for display network\n     * type.\n     ",
    "links" : [ "#getNetworkType" ]
  }, {
    "name" : "OVERRIDE_NETWORK_TYPE_LTE_CA",
    "type" : "int",
    "comment" : "\n     * Override network type when the device is connected to\n     * {@link TelephonyManager#NETWORK_TYPE_LTE} cellular network and is using carrier aggregation.\n     ",
    "links" : [ "TelephonyManager#NETWORK_TYPE_LTE" ]
  }, {
    "name" : "OVERRIDE_NETWORK_TYPE_LTE_ADVANCED_PRO",
    "type" : "int",
    "comment" : "\n     * Override network type when the device is connected to advanced pro\n     * {@link TelephonyManager#NETWORK_TYPE_LTE} cellular network.\n     ",
    "links" : [ "TelephonyManager#NETWORK_TYPE_LTE" ]
  }, {
    "name" : "OVERRIDE_NETWORK_TYPE_NR_NSA",
    "type" : "int",
    "comment" : "\n     * Override network type when the device is connected to\n     * {@link TelephonyManager#NETWORK_TYPE_LTE} network and has E-UTRA-NR Dual Connectivity(EN-DC)\n     * capability or is currently connected to the secondary\n     * {@link TelephonyManager#NETWORK_TYPE_NR} cellular network.\n     ",
    "links" : [ "TelephonyManager#NETWORK_TYPE_LTE", "TelephonyManager#NETWORK_TYPE_NR" ]
  }, {
    "name" : "OVERRIDE_NETWORK_TYPE_NR_NSA_MMWAVE",
    "type" : "int",
    "comment" : "\n     * Override network type when the device is connected to\n     * {@link TelephonyManager#NETWORK_TYPE_LTE} network and has E-UTRA-NR Dual Connectivity(EN-DC)\n     * capability or is currently connected to the secondary\n     * {@link TelephonyManager#NETWORK_TYPE_NR} cellular network on millimeter wave bands.\n     ",
    "links" : [ "TelephonyManager#NETWORK_TYPE_LTE", "TelephonyManager#NETWORK_TYPE_NR" ]
  }, {
    "name" : "mNetworkType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOverrideNetworkType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<TelephonyDisplayInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getNetworkType()",
    "returnType" : "int",
    "comment" : "\n     * Get current packet-switching cellular network type. This is the actual network type the\n     * device is camped on.\n     *\n     * @return The network type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getOverrideNetworkType()",
    "returnType" : "int",
    "comment" : "\n     * Get the override network type. Note the override network type is for market branding\n     * or visualization purposes only. It cannot be treated as the actual network type device is\n     * camped on.\n     *\n     * @return The override network type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String overrideNetworkTypeToString(@OverrideNetworkType int type)",
    "returnType" : "String",
    "comment" : "\n     * Convert override network type to string.\n     *\n     * @param type Override network type\n     * @return Override network type in string format\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "OVERRIDE_NETWORK_TYPE_NONE", "OVERRIDE_NETWORK_TYPE_LTE_CA", "OVERRIDE_NETWORK_TYPE_LTE_ADVANCED_PRO", "OVERRIDE_NETWORK_TYPE_NR_NSA", "OVERRIDE_NETWORK_TYPE_NR_NSA_MMWAVE", "mNetworkType", "mOverrideNetworkType", "CREATOR" ],
  "methodNames" : [ "public int getNetworkType()", "public int getOverrideNetworkType()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public boolean equals(Object o)", "public int hashCode()", "public static String overrideNetworkTypeToString(@OverrideNetworkType int type)", "public String toString()" ]
}