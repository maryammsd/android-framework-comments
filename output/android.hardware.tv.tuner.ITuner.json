{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/tv/tuner/ITuner.java",
  "packageName" : "android.hardware.tv.tuner",
  "className" : "ITuner",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "VERSION",
    "type" : "int",
    "comment" : "\n   * The version of this interface that the caller is built against.\n   * This might be different from what {@link #getInterfaceVersion()\n   * getInterfaceVersion} returns as that is the version of the interface\n   * that the remote object is implementing.\n   ",
    "links" : [ "#getInterfaceVersion()" ]
  }, {
    "name" : "HASH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int[] getFrontendIds() throws android.os.RemoteException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.IFrontend openFrontendById(int frontendId) throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.IFrontend",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.IDemux openDemux(int[] demuxId) throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.IDemux",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.DemuxCapabilities getDemuxCaps() throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.DemuxCapabilities",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.IDescrambler openDescrambler() throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.IDescrambler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.FrontendInfo getFrontendInfo(int frontendId) throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.FrontendInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getLnbIds() throws android.os.RemoteException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.ILnb openLnbById(int lnbId) throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.ILnb",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.ILnb openLnbByName(java.lang.String lnbName, int[] lnbId) throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.ILnb",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setLna(boolean bEnable) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setMaxNumberOfFrontends(int frontendType, int maxNumber) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaxNumberOfFrontends(int frontendType) throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isLnaSupported() throws android.os.RemoteException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getDemuxIds() throws android.os.RemoteException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.IDemux openDemuxById(int demuxId) throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.IDemux",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.tv.tuner.DemuxInfo getDemuxInfo(int demuxId) throws android.os.RemoteException",
    "returnType" : "android.hardware.tv.tuner.DemuxInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceVersion() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getInterfaceHash() throws android.os.RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int[] getFrontendIds() throws android.os.RemoteException", "public android.hardware.tv.tuner.IFrontend openFrontendById(int frontendId) throws android.os.RemoteException", "public android.hardware.tv.tuner.IDemux openDemux(int[] demuxId) throws android.os.RemoteException", "public android.hardware.tv.tuner.DemuxCapabilities getDemuxCaps() throws android.os.RemoteException", "public android.hardware.tv.tuner.IDescrambler openDescrambler() throws android.os.RemoteException", "public android.hardware.tv.tuner.FrontendInfo getFrontendInfo(int frontendId) throws android.os.RemoteException", "public int[] getLnbIds() throws android.os.RemoteException", "public android.hardware.tv.tuner.ILnb openLnbById(int lnbId) throws android.os.RemoteException", "public android.hardware.tv.tuner.ILnb openLnbByName(java.lang.String lnbName, int[] lnbId) throws android.os.RemoteException", "public void setLna(boolean bEnable) throws android.os.RemoteException", "public void setMaxNumberOfFrontends(int frontendType, int maxNumber) throws android.os.RemoteException", "public int getMaxNumberOfFrontends(int frontendType) throws android.os.RemoteException", "public boolean isLnaSupported() throws android.os.RemoteException", "public int[] getDemuxIds() throws android.os.RemoteException", "public android.hardware.tv.tuner.IDemux openDemuxById(int demuxId) throws android.os.RemoteException", "public android.hardware.tv.tuner.DemuxInfo getDemuxInfo(int demuxId) throws android.os.RemoteException", "public int getInterfaceVersion() throws android.os.RemoteException", "public String getInterfaceHash() throws android.os.RemoteException" ],
  "variableNames" : [ "VERSION", "HASH", "DESCRIPTOR" ]
}