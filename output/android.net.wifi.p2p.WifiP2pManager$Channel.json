{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/p2p/WifiP2pManager.java",
  "packageName" : "android.net.wifi.p2p",
  "className" : "Channel",
  "comment" : "\n     * A channel that connects the application to the Wifi p2p framework.\n     * Most p2p operations require a Channel as an argument. An instance of Channel is obtained\n     * by doing a call on {@link #initialize}\n     ",
  "links" : [ "#initialize" ],
  "variables" : [ {
    "name" : "INVALID_LISTENER_KEY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mP2pManager",
    "type" : "WifiP2pManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelListener",
    "type" : "ChannelListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServRspListener",
    "type" : "ServiceResponseListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDnsSdServRspListener",
    "type" : "DnsSdServiceResponseListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDnsSdTxtListener",
    "type" : "DnsSdTxtRecordListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUpnpServRspListener",
    "type" : "UpnpServiceResponseListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListenerMap",
    "type" : "HashMap<Integer, Object>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListenerMapLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListenerKey",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCloseGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "Binder",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : "mAsyncChannel",
    "type" : "AsyncChannel",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "P2pHandler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Binder getBinder()",
    "returnType" : "Binder",
    "comment" : "\n         * Return the binder object.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n         * Close the current P2P connection and indicate to the P2P service that connections\n         * created by the app can be removed.\n         ",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void handleServiceResponse(WifiP2pServiceResponse resp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleUpnpServiceResponse(WifiP2pUpnpServiceResponse resp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleDnsSdServiceResponse(WifiP2pDnsSdServiceResponse resp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int putListener(Object listener)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Object getListener(int key)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Object removeListener(int key)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Binder getBinder()", "public void close()", "protected void finalize() throws Throwable", "private void handleServiceResponse(WifiP2pServiceResponse resp)", "private void handleUpnpServiceResponse(WifiP2pUpnpServiceResponse resp)", "private void handleDnsSdServiceResponse(WifiP2pDnsSdServiceResponse resp)", "private int putListener(Object listener)", "private Object getListener(int key)", "private Object removeListener(int key)" ],
  "variableNames" : [ "INVALID_LISTENER_KEY", "mP2pManager", "mChannelListener", "mServRspListener", "mDnsSdServRspListener", "mDnsSdTxtListener", "mUpnpServRspListener", "mListenerMap", "mListenerMapLock", "mListenerKey", "mCloseGuard", "mBinder", "mAsyncChannel", "mHandler", "mContext" ]
}