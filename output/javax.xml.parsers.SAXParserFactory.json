{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/parsers/SAXParserFactory.java",
  "packageName" : "javax.xml.parsers",
  "className" : "SAXParserFactory",
  "comment" : "\n * Defines a factory API that enables applications to configure and\n * obtain a SAX based parser to parse XML documents.\n *\n * @author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>\n * @version $Revision: 884950 $, $Date: 2009-11-27 10:46:18 -0800 (Fri, 27 Nov 2009) $\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "validating",
    "type" : "boolean",
    "comment" : "\n     * <p>Should Parsers be validating?</p>\n     ",
    "links" : [ ]
  }, {
    "name" : "namespaceAware",
    "type" : "boolean",
    "comment" : "\n     * <p>Should Parsers be namespace aware?</p>\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static SAXParserFactory newInstance()",
    "returnType" : "SAXParserFactory",
    "comment" : "\n     * Returns Android's implementation of {@code SAXParserFactory}. Unlike\n     * other Java implementations, this method does not consult system\n     * properties, property files, or the services API.\n     *\n     * @return a new SAXParserFactory.\n     *\n     * @exception FactoryConfigurationError never. Included for API\n     *     compatibility with other Java implementations.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static SAXParserFactory newInstance(String factoryClassName, ClassLoader classLoader)",
    "returnType" : "SAXParserFactory",
    "comment" : "\n     * Returns an instance of the named implementation of {@code SAXParserFactory}.\n     *\n     * @throws FactoryConfigurationError if {@code factoryClassName} is not available or cannot be\n     *     instantiated.\n     * @since 1.6\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract SAXParser newSAXParser() throws ParserConfigurationException, SAXException",
    "returnType" : "SAXParser",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setNamespaceAware(boolean awareness)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setValidating(boolean validating)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isNamespaceAware()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isValidating()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void setFeature(String name, boolean value) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException",
    "returnType" : "void",
    "comment" : "\n     *\n     * <p>Sets the particular feature in the underlying implementation of\n     * org.xml.sax.XMLReader.\n     * A list of the core features and properties can be found at\n     * <a href=\"http://www.saxproject.org/\">http://www.saxproject.org/</a></p>\n     *\n     * <p>All implementations are required to support the {@link javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING} feature.\n     * When the feature is</p>\n     * <ul>\n     *   <li>\n     *     <code>true</code>: the implementation will limit XML processing to conform to implementation limits.\n     *     Examples include entity expansion limits and XML Schema constructs that would consume large amounts of resources.\n     *     If XML processing is limited for security reasons, it will be reported via a call to the registered\n     *     {@link org.xml.sax.ErrorHandler#fatalError(SAXParseException exception)}.\n     *     See {@link SAXParser} <code>parse</code> methods for handler specification.\n     *   </li>\n     *   <li>\n     *     When the feature is <code>false</code>, the implementation will processing XML according to the XML specifications without\n     *     regard to possible implementation limits.\n     *   </li>\n     * </ul>\n     *\n     * @param name The name of the feature to be set.\n     * @param value The value of the feature to be set.\n     *\n     * @exception ParserConfigurationException if a parser cannot\n     *     be created which satisfies the requested configuration.\n     * @exception SAXNotRecognizedException When the underlying XMLReader does\n     *            not recognize the property name.\n     * @exception SAXNotSupportedException When the underlying XMLReader\n     *            recognizes the property name but doesn't support the\n     *            property.\n     * @throws NullPointerException If the <code>name</code> parameter is null.\n     *\n     * @see org.xml.sax.XMLReader#setFeature\n     ",
    "links" : [ "javax.xml.parsers.SAXParser", "javax.xml.XMLConstants#FEATURE_SECURE_PROCESSING", "org.xml.sax.ErrorHandler#fatalError(SAXParseException" ]
  }, {
    "name" : "public abstract boolean getFeature(String name) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException",
    "returnType" : "boolean",
    "comment" : "\n     *\n     * <p>Returns the particular property requested for in the underlying\n     * implementation of org.xml.sax.XMLReader.</p>\n     *\n     * @param name The name of the property to be retrieved.\n     *\n     * @return Value of the requested property.\n     *\n     * @exception ParserConfigurationException if a parser cannot be created which satisfies the requested configuration.\n     * @exception SAXNotRecognizedException When the underlying XMLReader does not recognize the property name.\n     * @exception SAXNotSupportedException When the underlying XMLReader recognizes the property name but doesn't support the property.\n     *\n     * @see org.xml.sax.XMLReader#getProperty\n     ",
    "links" : [ ]
  }, {
    "name" : "public Schema getSchema()",
    "returnType" : "Schema",
    "comment" : "\n     * Gets the {@link Schema} object specified through\n     * the {@link #setSchema(Schema schema)} method.\n     *\n     *\n     * @throws UnsupportedOperationException\n     *      For backward compatibility, when implementations for\n     *      earlier versions of JAXP is used, this exception will be\n     *      thrown.\n     *\n     * @return\n     *      the {@link Schema} object that was last set through\n     *      the {@link #setSchema(Schema)} method, or null\n     *      if the method was not invoked since a {@link SAXParserFactory}\n     *      is created.\n     *\n     * @since 1.5\n     ",
    "links" : [ "#setSchema(Schema)", "javax.xml.parsers.SAXParserFactory", "#setSchema(Schema", "javax.xml.validation.Schema" ]
  }, {
    "name" : "public void setSchema(Schema schema)",
    "returnType" : "void",
    "comment" : "\n     * <p>Set the {@link Schema} to be used by parsers created\n     * from this factory.</p>\n     *\n     * <p>When a {@link Schema} is non-null, a parser will use a validator\n     * created from it to validate documents before it passes information\n     * down to the application.</p>\n     *\n     * <p>When warnings/errors/fatal errors are found by the validator, the parser must\n     * handle them as if those errors were found by the parser itself.\n     * In other words, if the user-specified {@link org.xml.sax.ErrorHandler}\n     * is set, it must receive those errors, and if not, they must be\n     * treated according to the implementation specific\n     * default error handling rules.\n     *\n     * <p>A validator may modify the SAX event stream (for example by\n     * adding default values that were missing in documents), and a parser\n     * is responsible to make sure that the application will receive\n     * those modified event stream.</p>\n     *\n     * <p>Initially, <code>null</code> is set as the {@link Schema}.</p>\n     *\n     * <p>This processing will take effect even if\n     * the {@link #isValidating()} method returns <code>false</code>.\n     *\n     * <p>It is an error to use\n     * the <code>http://java.sun.com/xml/jaxp/properties/schemaSource</code>\n     * property and/or the <code>http://java.sun.com/xml/jaxp/properties/schemaLanguage</code>\n     * property in conjunction with a non-null {@link Schema} object.\n     * Such configuration will cause a {@link SAXException}\n     * exception when those properties are set on a {@link SAXParser}.</p>\n     *\n     * <h4>Note for implementors</h4>\n     * <p>\n     * A parser must be able to work with any {@link Schema}\n     * implementation. However, parsers and schemas are allowed\n     * to use implementation-specific custom mechanisms\n     * as long as they yield the result described in the specification.\n     * </p>\n     *\n     * @param schema <code>Schema</code> to use, <code>null</code> to remove a schema.\n     *\n     * @throws UnsupportedOperationException\n     *      For backward compatibility, when implementations for\n     *      earlier versions of JAXP is used, this exception will be\n     *      thrown.\n     *\n     * @since 1.5\n     ",
    "links" : [ "org.xml.sax.ErrorHandler", "#isValidating()", "org.xml.sax.SAXException", "javax.xml.parsers.SAXParser", "javax.xml.validation.Schema" ]
  }, {
    "name" : "public void setXIncludeAware(final boolean state)",
    "returnType" : "void",
    "comment" : "\n     * <p>Set state of XInclude processing.</p>\n     *\n     * <p>If XInclude markup is found in the document instance, should it be\n     * processed as specified in <a href=\"http://www.w3.org/TR/xinclude/\">\n     * XML Inclusions (XInclude) Version 1.0</a>.</p>\n     *\n     * <p>XInclude processing defaults to <code>false</code>.</p>\n     *\n     * @param state Set XInclude processing to <code>true</code> or\n     *   <code>false</code>\n     *\n     * @throws UnsupportedOperationException\n     *      For backward compatibility, when implementations for\n     *      earlier versions of JAXP is used, this exception will be\n     *      thrown.\n     *\n     * @since 1.5\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isXIncludeAware()",
    "returnType" : "boolean",
    "comment" : "\n     * <p>Get state of XInclude processing.</p>\n     *\n     * @return current state of XInclude processing\n     *\n     * @throws UnsupportedOperationException\n     *      For backward compatibility, when implementations for\n     *      earlier versions of JAXP is used, this exception will be\n     *      thrown.\n     *\n     * @since 1.5\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static SAXParserFactory newInstance()", "public static SAXParserFactory newInstance(String factoryClassName, ClassLoader classLoader)", "public abstract SAXParser newSAXParser() throws ParserConfigurationException, SAXException", "public void setNamespaceAware(boolean awareness)", "public void setValidating(boolean validating)", "public boolean isNamespaceAware()", "public boolean isValidating()", "public abstract void setFeature(String name, boolean value) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException", "public abstract boolean getFeature(String name) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException", "public Schema getSchema()", "public void setSchema(Schema schema)", "public void setXIncludeAware(final boolean state)", "public boolean isXIncludeAware()" ],
  "variableNames" : [ "validating", "namespaceAware" ]
}