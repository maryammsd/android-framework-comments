{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/SearchSessionUtil.java",
  "packageName" : "android.app.appsearch",
  "className" : "SearchSessionUtil",
  "comment" : "\n * Contains util methods used in both {@link GlobalSearchSession} and {@link AppSearchSession}.\n *\n * @hide\n ",
  "links" : [ "android.app.appsearch.AppSearchSession", "android.app.appsearch.GlobalSearchSession" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void sendSystemErrorToCallback(@NonNull AppSearchResult<?> failedResult, @NonNull BatchResultCallback<?, ?> callback)",
    "returnType" : "void",
    "comment" : "\n     * Calls {@link BatchResultCallback#onSystemError} with a throwable derived from the given\n     * failed {@link AppSearchResult}.\n     *\n     * <p>The {@link AppSearchResult} generally comes from {@link\n     * IAppSearchBatchResultCallback#onSystemError}.\n     *\n     * <p>This method should be called from the callback executor thread.\n     *\n     * @param failedResult the error\n     * @param callback the callback to send the error to\n     ",
    "links" : [ "android.app.appsearch.AppSearchResult", "android.app.appsearch.aidl.IAppSearchBatchResultCallback#onSystemError" ]
  }, {
    "name" : "public static void safeExecute(@NonNull Executor executor, @NonNull Consumer<AppSearchResult<T>> errorCallback, @NonNull Runnable runnable)",
    "returnType" : "void",
    "comment" : "\n     * Safely executes the given lambda on the given executor.\n     *\n     * <p>The {@link Executor#execute} call is wrapped in a try/catch. This prevents situations like\n     * the executor being shut down or the lambda throwing an exception on a direct executor from\n     * crashing the app.\n     *\n     * <p>If execution fails for the above reasons, a failure notification is delivered to\n     * errorCallback synchronously on the calling thread.\n     *\n     * @param executor The executor on which to safely execute the lambda\n     * @param errorCallback The callback to trigger with a failed {@link AppSearchResult} if the\n     *     {@link Executor#execute} call fails.\n     * @param runnable The lambda to execute on the executor\n     ",
    "links" : [ "android.app.appsearch.AppSearchResult", "android.annotation.CallbackExecutor#execute" ]
  }, {
    "name" : "public static void safeExecute(@NonNull Executor executor, @NonNull BatchResultCallback<?, ?> errorCallback, @NonNull Runnable runnable)",
    "returnType" : "void",
    "comment" : "\n     * Safely executes the given lambda on the given executor.\n     *\n     * <p>The {@link Executor#execute} call is wrapped in a try/catch. This prevents situations like\n     * the executor being shut down or the lambda throwing an exception on a direct executor from\n     * crashing the app.\n     *\n     * <p>If execution fails for the above reasons, a failure notification is delivered to\n     * errorCallback synchronously on the calling thread.\n     *\n     * @param executor The executor on which to safely execute the lambda\n     * @param errorCallback The callback to trigger with a failed {@link AppSearchResult} if the\n     *     {@link Executor#execute} call fails.\n     * @param runnable The lambda to execute on the executor\n     ",
    "links" : [ "android.app.appsearch.AppSearchResult", "android.annotation.CallbackExecutor#execute" ]
  }, {
    "name" : "public static IAppSearchBatchResultCallback createGetDocumentCallback(@NonNull @CallbackExecutor Executor executor, @NonNull BatchResultCallback<String, GenericDocument> callback)",
    "returnType" : "IAppSearchBatchResultCallback",
    "comment" : "\n     * Handler for asynchronous getDocuments method\n     *\n     * @param executor executor to run the callback\n     * @param callback the next method that uses the {@link GenericDocument}\n     * @return A callback to be executed once an {@link AppSearchBatchResultParcel} is received\n     ",
    "links" : [ "android.app.appsearch.aidl.AppSearchBatchResultParcel", "android.app.appsearch.GenericDocument" ]
  } ],
  "methodNames" : [ "public static void sendSystemErrorToCallback(@NonNull AppSearchResult<?> failedResult, @NonNull BatchResultCallback<?, ?> callback)", "public static void safeExecute(@NonNull Executor executor, @NonNull Consumer<AppSearchResult<T>> errorCallback, @NonNull Runnable runnable)", "public static void safeExecute(@NonNull Executor executor, @NonNull BatchResultCallback<?, ?> errorCallback, @NonNull Runnable runnable)", "public static IAppSearchBatchResultCallback createGetDocumentCallback(@NonNull @CallbackExecutor Executor executor, @NonNull BatchResultCallback<String, GenericDocument> callback)" ],
  "variableNames" : [ "TAG" ]
}