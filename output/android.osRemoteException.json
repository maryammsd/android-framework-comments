{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/RemoteException.java",
  "packageName" : "android.os",
  "className" : "RemoteException",
  "comment" : "\n * Parent exception for all Binder remote-invocation errors\n ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public RuntimeException rethrowAsRuntimeException()",
    "returnType" : "RuntimeException",
    "comment" : "\n     * Rethrow this as an unchecked runtime exception.\n     * <p>\n     * Apps making calls into other processes may end up persisting internal\n     * state or making security decisions based on the perceived success or\n     * failure of a call, or any default values returned. For this reason, we\n     * want to strongly throw when there was trouble with the transaction.\n     *\n     * @throws RuntimeException\n     ",
    "links" : [ ]
  }, {
    "name" : "public RuntimeException rethrowFromSystemServer()",
    "returnType" : "RuntimeException",
    "comment" : "\n     * Rethrow this exception when we know it came from the system server. This\n     * gives us an opportunity to throw a nice clean\n     * {@link DeadSystemException} signal to avoid spamming logs with\n     * misleading stack traces.\n     * <p>\n     * Apps making calls into the system server may end up persisting internal\n     * state or making security decisions based on the perceived success or\n     * failure of a call, or any default values returned. For this reason, we\n     * want to strongly throw when there was trouble with the transaction.\n     *\n     * @throws RuntimeException\n     ",
    "links" : [ "DeadSystemException" ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public RuntimeException rethrowAsRuntimeException()", "public RuntimeException rethrowFromSystemServer()" ]
}