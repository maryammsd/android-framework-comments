{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/CaptivePortalData.java",
  "packageName" : "android.net",
  "className" : "CaptivePortalData",
  "comment" : "\n * Metadata sent by captive portals, see https://www.ietf.org/id/draft-ietf-capport-api-03.txt.\n * @hide\n ",
  "variables" : [ {
    "name" : "mRefreshTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserPortalUrl",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVenueInfoUrl",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSessionExtendable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mByteLimit",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExpiryTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCaptive",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<CaptivePortalData>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getRefreshTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Get the time at which data was last refreshed, as per {@link System#currentTimeMillis()}.\n     ",
    "links" : [ "#currentTimeMillis()" ]
  }, {
    "name" : "public Uri getUserPortalUrl()",
    "returnType" : "Uri",
    "comment" : "\n     * Get the URL to be used for users to login to the portal, or extend their session if\n     * {@link #isSessionExtendable()} is true.\n     ",
    "links" : [ "#isSessionExtendable()" ]
  }, {
    "name" : "public Uri getVenueInfoUrl()",
    "returnType" : "Uri",
    "comment" : "\n     * Get the URL that can be used by users to view information about the network venue.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isSessionExtendable()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether the user portal URL can be used to extend sessions, when the user is logged\n     * in and the session has a time or byte limit.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getByteLimit()",
    "returnType" : "long",
    "comment" : "\n     * Get the remaining bytes on the captive portal session, at the time {@link CaptivePortalData}\n     * was refreshed. This may be different from the limit currently enforced by the portal.\n     * @return The byte limit, or -1 if not set.\n     ",
    "links" : [ "android.net.CaptivePortalData" ]
  }, {
    "name" : "public long getExpiryTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Get the time at the session will expire, as per {@link System#currentTimeMillis()}.\n     * @return The expiry time, or -1 if unset.\n     ",
    "links" : [ "#currentTimeMillis()" ]
  }, {
    "name" : "public boolean isCaptive()",
    "returnType" : "boolean",
    "comment" : "\n     * Get whether the network is captive (portal closed).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mRefreshTimeMillis", "mUserPortalUrl", "mVenueInfoUrl", "mIsSessionExtendable", "mByteLimit", "mExpiryTimeMillis", "mCaptive", "CREATOR" ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public long getRefreshTimeMillis()", "public Uri getUserPortalUrl()", "public Uri getVenueInfoUrl()", "public boolean isSessionExtendable()", "public long getByteLimit()", "public long getExpiryTimeMillis()", "public boolean isCaptive()", "public int hashCode()", "public boolean equals(Object obj)", "public String toString()" ]
}