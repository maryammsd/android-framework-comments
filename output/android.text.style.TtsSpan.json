{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/style/TtsSpan.java",
  "packageName" : "android.text.style",
  "className" : "TtsSpan",
  "comment" : "\n * A span that supplies additional meta-data for the associated text intended\n * for text-to-speech engines. If the text is being processed by a\n * text-to-speech engine, the engine may use the data in this span in addition\n * to or instead of its associated text.\n *\n * Each instance of a TtsSpan has a type, for example {@link #TYPE_DATE}\n * or {@link #TYPE_MEASURE}. And a list of arguments, provided as\n * key-value pairs in a bundle.\n *\n * The inner classes are there for convenience and provide builders for each\n * TtsSpan type.\n ",
  "links" : [ "#TYPE_DATE", "#TYPE_MEASURE" ],
  "variables" : [ {
    "name" : "mType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mArgs",
    "type" : "PersistableBundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_TEXT",
    "type" : "String",
    "comment" : "\n     * This span type can be used to add morphosyntactic features to the text it\n     * spans over, or synthesize a something else than the spanned text. Use\n     * the argument {@link #ARG_TEXT} to set a different text.\n     * Accepts the arguments {@link #ARG_GENDER},\n     * {@link #ARG_ANIMACY}, {@link #ARG_MULTIPLICITY} and\n     * {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_TEXT", "#ARG_ANIMACY", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_CARDINAL",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a cardinal. Must include the\n     * number to be synthesized with {@link #ARG_NUMBER}.\n     * Also accepts the arguments {@link #ARG_GENDER},\n     * {@link #ARG_ANIMACY}, {@link #ARG_MULTIPLICITY} and\n     * {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_NUMBER", "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_ANIMACY", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_ORDINAL",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is an ordinal. Must include the\n     * number to be synthesized with {@link #ARG_NUMBER}.\n     * Also accepts the arguments {@link #ARG_GENDER},\n     * {@link #ARG_ANIMACY}, {@link #ARG_MULTIPLICITY} and\n     * {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_NUMBER", "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_ANIMACY", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_DECIMAL",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a decimal number. Must include the\n     * number to be synthesized with {@link #ARG_INTEGER_PART} and\n     * {@link #ARG_FRACTIONAL_PART}.\n     * Also accepts the arguments {@link #ARG_GENDER},\n     * {@link #ARG_ANIMACY}, {@link #ARG_MULTIPLICITY} and\n     * {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_ANIMACY", "#ARG_FRACTIONAL_PART", "#ARG_INTEGER_PART", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_FRACTION",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a fractional number. Must include\n     * the number to be synthesized with {@link #ARG_NUMERATOR} and\n     * {@link #ARG_DENOMINATOR}. {@link #ARG_INTEGER_PART} is optional\n     * Also accepts the arguments {@link #ARG_GENDER},\n     * {@link #ARG_ANIMACY}, {@link #ARG_MULTIPLICITY} and\n     * {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_NUMERATOR", "#ARG_DENOMINATOR", "#ARG_ANIMACY", "#ARG_INTEGER_PART", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_MEASURE",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a measure, consisting of a number\n     * and a unit. The number can be a cardinal, decimal or a fraction. Set the\n     * number with the same arguments as {@link #TYPE_CARDINAL},\n     * {@link #TYPE_DECIMAL} or {@link #TYPE_FRACTION}. The unit can be\n     * specified with {@link #ARG_UNIT}.\n     * Also accepts the arguments {@link #ARG_GENDER},\n     * {@link #ARG_ANIMACY}, {@link #ARG_MULTIPLICITY} and\n     * {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_UNIT", "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_ANIMACY", "#TYPE_FRACTION", "#TYPE_DECIMAL", "#TYPE_CARDINAL", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_TIME",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a time, consisting of a number of\n     * hours and minutes, specified with {@link #ARG_HOURS} and\n     * {@link #ARG_MINUTES}.\n     * Also accepts the arguments {@link #ARG_GENDER},\n     * {@link #ARG_ANIMACY}, {@link #ARG_MULTIPLICITY} and\n     * {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_MINUTES", "#ARG_CASE", "#ARG_ANIMACY", "#ARG_HOURS", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_DATE",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a date. At least one of the\n     * arguments {@link #ARG_MONTH} and {@link #ARG_YEAR} has to be provided.\n     * The argument {@link #ARG_DAY} is optional if {@link #ARG_MONTH} is set.\n     * The argument {@link #ARG_WEEKDAY} is optional if {@link #ARG_DAY} is set.\n     * Also accepts the arguments {@link #ARG_GENDER}, {@link #ARG_ANIMACY},\n     * {@link #ARG_MULTIPLICITY} and {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MONTH", "#ARG_DAY", "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_ANIMACY", "#ARG_YEAR", "#ARG_WEEKDAY", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_TELEPHONE",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a telephone number. The argument\n     * {@link #ARG_NUMBER_PARTS} is required. {@link #ARG_COUNTRY_CODE} and\n     * {@link #ARG_EXTENSION} are optional.\n     * Also accepts the arguments {@link #ARG_GENDER}, {@link #ARG_ANIMACY},\n     * {@link #ARG_MULTIPLICITY} and {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_EXTENSION", "#ARG_COUNTRY_CODE", "#ARG_CASE", "#ARG_ANIMACY", "#ARG_NUMBER_PARTS", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_ELECTRONIC",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a URI (can be used for URLs and\n     * email addresses). The full schema for URLs, which email addresses can\n     * effectively be seen as a subset of, is:\n     * protocol://username:password@domain:port/path?query_string#fragment_id\n     * Hence populating just username and domain will read as an email address.\n     * All arguments are optional, but at least one has to be provided:\n     * {@link #ARG_PROTOCOL}, {@link #ARG_USERNAME}, {@link #ARG_PASSWORD},\n     * {@link #ARG_DOMAIN}, {@link #ARG_PORT}, {@link #ARG_PATH},\n     * {@link #ARG_QUERY_STRING} and {@link #ARG_FRAGMENT_ID}.\n     * Also accepts the arguments {@link #ARG_GENDER}, {@link #ARG_ANIMACY},\n     * {@link #ARG_MULTIPLICITY} and {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_PORT", "#ARG_CASE", "#ARG_FRAGMENT_ID", "#ARG_ANIMACY", "#ARG_USERNAME", "#ARG_QUERY_STRING", "#ARG_PROTOCOL", "#ARG_PASSWORD", "#ARG_DOMAIN", "#ARG_PATH", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_MONEY",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is an amount of money. Set the amount\n     * with the same arguments as {@link #TYPE_DECIMAL}.\n     * {@link #ARG_CURRENCY} is used to set the currency. {@link #ARG_QUANTITY}\n     * is optional.\n     * Also accepts the arguments {@link #ARG_GENDER}, {@link #ARG_ANIMACY},\n     * {@link #ARG_MULTIPLICITY} and {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_CURRENCY", "#ARG_ANIMACY", "#TYPE_DECIMAL", "#ARG_QUANTITY", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_DIGITS",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a series of digits that have to be\n     * read sequentially. The digits can be set with {@link #ARG_DIGITS}.\n     * Also accepts the arguments {@link #ARG_GENDER}, {@link #ARG_ANIMACY},\n     * {@link #ARG_MULTIPLICITY} and {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_ANIMACY", "#ARG_DIGITS", "#ARG_GENDER" ]
  }, {
    "name" : "TYPE_VERBATIM",
    "type" : "String",
    "comment" : "\n     * The text associated with this span is a series of characters that have to\n     * be read verbatim. The engine will attempt to read out any character like\n     * punctuation but excluding whitespace. {@link #ARG_VERBATIM} is required.\n     * Also accepts the arguments {@link #ARG_GENDER},\n     * {@link #ARG_ANIMACY}, {@link #ARG_MULTIPLICITY} and {@link #ARG_CASE}.\n     ",
    "links" : [ "#ARG_MULTIPLICITY", "#ARG_CASE", "#ARG_VERBATIM", "#ARG_ANIMACY", "#ARG_GENDER" ]
  }, {
    "name" : "ARG_GENDER",
    "type" : "String",
    "comment" : "\n     * String argument supplying gender information. Can be any of\n     * {@link #GENDER_NEUTRAL}, {@link #GENDER_MALE} and\n     * {@link #GENDER_FEMALE}.\n     ",
    "links" : [ "#GENDER_FEMALE", "#GENDER_MALE", "#GENDER_NEUTRAL" ]
  }, {
    "name" : "GENDER_NEUTRAL",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GENDER_MALE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GENDER_FEMALE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ARG_ANIMACY",
    "type" : "String",
    "comment" : "\n     * String argument supplying animacy information. Can be\n     * {@link #ANIMACY_ANIMATE} or\n     * {@link #ANIMACY_INANIMATE}\n     ",
    "links" : [ "#ANIMACY_ANIMATE", "#ANIMACY_INANIMATE" ]
  }, {
    "name" : "ANIMACY_ANIMATE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ANIMACY_INANIMATE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ARG_MULTIPLICITY",
    "type" : "String",
    "comment" : "\n     * String argument supplying multiplicity information. Can be any of\n     * {@link #MULTIPLICITY_SINGLE}, {@link #MULTIPLICITY_DUAL} and\n     * {@link #MULTIPLICITY_PLURAL}\n     ",
    "links" : [ "#MULTIPLICITY_DUAL", "#MULTIPLICITY_SINGLE", "#MULTIPLICITY_PLURAL" ]
  }, {
    "name" : "MULTIPLICITY_SINGLE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MULTIPLICITY_DUAL",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MULTIPLICITY_PLURAL",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ARG_CASE",
    "type" : "String",
    "comment" : "\n     * String argument supplying case information. Can be any of\n     * {@link #CASE_NOMINATIVE}, {@link #CASE_ACCUSATIVE}, {@link #CASE_DATIVE},\n     * {@link #CASE_ABLATIVE}, {@link #CASE_GENITIVE}, {@link #CASE_VOCATIVE},\n     * {@link #CASE_LOCATIVE} and {@link #CASE_INSTRUMENTAL}\n     ",
    "links" : [ "#CASE_DATIVE", "#CASE_INSTRUMENTAL", "#CASE_ACCUSATIVE", "#CASE_ABLATIVE", "#CASE_LOCATIVE", "#CASE_VOCATIVE", "#CASE_NOMINATIVE", "#CASE_GENITIVE" ]
  }, {
    "name" : "CASE_NOMINATIVE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CASE_ACCUSATIVE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CASE_DATIVE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CASE_ABLATIVE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CASE_GENITIVE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CASE_VOCATIVE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CASE_LOCATIVE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CASE_INSTRUMENTAL",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ARG_TEXT",
    "type" : "String",
    "comment" : "\n     * String supplying the text to be synthesized. The synthesizer is free\n     * to decide how to interpret the text.\n     * Can be used with {@link #TYPE_TEXT}.\n     ",
    "links" : [ "#TYPE_TEXT" ]
  }, {
    "name" : "ARG_NUMBER",
    "type" : "String",
    "comment" : "\n     * Argument used to specify a whole number. The value can be a string of\n     * digits of any size optionally prefixed with a - or +.\n     * Can be used with {@link #TYPE_CARDINAL} and {@link #TYPE_ORDINAL}.\n     ",
    "links" : [ "#TYPE_ORDINAL", "#TYPE_CARDINAL" ]
  }, {
    "name" : "ARG_INTEGER_PART",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the integer part of a decimal or fraction. The\n     * value can be a string of digits of any size optionally prefixed with\n     * a - or +.\n     * Can be used with {@link #TYPE_DECIMAL} and {@link #TYPE_FRACTION}.\n     ",
    "links" : [ "#TYPE_FRACTION", "#TYPE_DECIMAL" ]
  }, {
    "name" : "ARG_FRACTIONAL_PART",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the fractional part of a decimal. The value can\n     * be a string of digits of any size.\n     * Can be used with {@link #TYPE_DECIMAL}.\n     ",
    "links" : [ "#TYPE_DECIMAL" ]
  }, {
    "name" : "ARG_QUANTITY",
    "type" : "String",
    "comment" : "\n     * Argument used to choose the suffix (thousand, million, etc) that is used\n     * to pronounce large amounts of money. For example it can be used to\n     * disambiguate between \"two thousand five hundred dollars\" and\n     * \"two point five thousand dollars\".\n     * If implemented, engines should support at least \"1000\", \"1000000\",\n     * \"1000000000\" and \"1000000000000\".\n     * Example: if the {@link #ARG_INTEGER_PART} argument is \"10\", the\n     * {@link #ARG_FRACTIONAL_PART} argument is \"4\", the {@link #ARG_QUANTITY}\n     * argument is \"1000\" and the {@link #ARG_CURRENCY} argument is \"usd\", the\n     * TTS engine may pronounce the span as \"ten point four thousand dollars\".\n     * With the same example but with the quantity set as \"1000000\" the TTS\n     * engine may pronounce the span as \"ten point four million dollars\".\n     * Can be used with {@link #TYPE_MONEY}.\n     ",
    "links" : [ "#ARG_CURRENCY", "#ARG_FRACTIONAL_PART", "#TYPE_MONEY", "#ARG_INTEGER_PART", "#ARG_QUANTITY" ]
  }, {
    "name" : "ARG_NUMERATOR",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the numerator of a fraction. The value can be a\n     * string of digits of any size optionally prefixed with a - or +.\n     * Can be used with {@link #TYPE_FRACTION}.\n     ",
    "links" : [ "#TYPE_FRACTION" ]
  }, {
    "name" : "ARG_DENOMINATOR",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the denominator of a fraction. The value can be\n     * a string of digits of any size optionally prefixed with a + or -.\n     * Can be used with {@link #TYPE_FRACTION}.\n     ",
    "links" : [ "#TYPE_FRACTION" ]
  }, {
    "name" : "ARG_UNIT",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the unit of a measure. The unit should always be\n     * specified in English singular form. Prefixes may be used. Engines will do\n     * their best to pronounce them correctly in the language used. Engines are\n     * expected to at least support the most common ones like \"meter\", \"second\",\n     * \"degree celsius\" and \"degree fahrenheit\" with some common prefixes like\n     * \"milli\" and \"kilo\".\n     * Can be used with {@link #TYPE_MEASURE}.\n     ",
    "links" : [ "#TYPE_MEASURE" ]
  }, {
    "name" : "ARG_HOURS",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the hours of a time. The hours should be\n     * provided as an integer in the range from 0 up to and including 24.\n     * Can be used with {@link #TYPE_TIME}.\n     ",
    "links" : [ "#TYPE_TIME" ]
  }, {
    "name" : "ARG_MINUTES",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the minutes of a time. The hours should be\n     * provided as an integer in the range from 0 up to and including 59.\n     * Can be used with {@link #TYPE_TIME}.\n     ",
    "links" : [ "#TYPE_TIME" ]
  }, {
    "name" : "ARG_WEEKDAY",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the weekday of a date. The value should be\n     * provided as an integer and can be any of {@link #WEEKDAY_SUNDAY},\n     * {@link #WEEKDAY_MONDAY}, {@link #WEEKDAY_TUESDAY},\n     * {@link #WEEKDAY_WEDNESDAY}, {@link #WEEKDAY_THURSDAY},\n     * {@link #WEEKDAY_FRIDAY} and {@link #WEEKDAY_SATURDAY}.\n     * Can be used with {@link #TYPE_DATE}.\n     ",
    "links" : [ "#WEEKDAY_WEDNESDAY", "#TYPE_DATE", "#WEEKDAY_MONDAY", "#WEEKDAY_THURSDAY", "#WEEKDAY_SATURDAY", "#WEEKDAY_SUNDAY", "#WEEKDAY_TUESDAY", "#WEEKDAY_FRIDAY" ]
  }, {
    "name" : "WEEKDAY_SUNDAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEKDAY_MONDAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEKDAY_TUESDAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEKDAY_WEDNESDAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEKDAY_THURSDAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEKDAY_FRIDAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEEKDAY_SATURDAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ARG_DAY",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the day of the month of a date. The value should\n     * be provided as an integer in the range from 1 up to and including 31.\n     * Can be used with {@link #TYPE_DATE}.\n     ",
    "links" : [ "#TYPE_DATE" ]
  }, {
    "name" : "ARG_MONTH",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the month of a date. The value should be\n     * provided as an integer and can be any of {@link #MONTH_JANUARY},\n     * {@link #MONTH_FEBRUARY},  {@link #MONTH_MARCH}, {@link #MONTH_APRIL},\n     * {@link #MONTH_MAY}, {@link #MONTH_JUNE}, {@link #MONTH_JULY},\n     * {@link #MONTH_AUGUST}, {@link #MONTH_SEPTEMBER}, {@link #MONTH_OCTOBER},\n     * {@link #MONTH_NOVEMBER} and {@link #MONTH_DECEMBER}.\n     * Can be used with {@link #TYPE_DATE}.\n     ",
    "links" : [ "#MONTH_JULY", "#MONTH_NOVEMBER", "#MONTH_FEBRUARY", "#TYPE_DATE", "#MONTH_JANUARY", "#MONTH_SEPTEMBER", "#MONTH_MARCH", "#MONTH_APRIL", "#MONTH_OCTOBER", "#MONTH_DECEMBER", "#MONTH_AUGUST", "#MONTH_MAY", "#MONTH_JUNE" ]
  }, {
    "name" : "MONTH_JANUARY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_FEBRUARY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_MARCH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_APRIL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_MAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_JUNE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_JULY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_AUGUST",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_SEPTEMBER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_OCTOBER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_NOVEMBER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MONTH_DECEMBER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ARG_YEAR",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the year of a date. The value should be provided\n     * as a positive integer.\n     * Can be used with {@link #TYPE_DATE}.\n     ",
    "links" : [ "#TYPE_DATE" ]
  }, {
    "name" : "ARG_COUNTRY_CODE",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the country code of a telephone number. Can be\n     * a string of digits optionally prefixed with a \"+\".\n     * Can be used with {@link #TYPE_TELEPHONE}.\n     ",
    "links" : [ "#TYPE_TELEPHONE" ]
  }, {
    "name" : "ARG_NUMBER_PARTS",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the main number part of a telephone number. Can\n     * be a string of digits where the different parts of the telephone number\n     * can be separated with a space, '-', '/' or '.'.\n     * Can be used with {@link #TYPE_TELEPHONE}.\n     ",
    "links" : [ "#TYPE_TELEPHONE" ]
  }, {
    "name" : "ARG_EXTENSION",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the extension part of a telephone number. Can be\n     * a string of digits.\n     * Can be used with {@link #TYPE_TELEPHONE}.\n     ",
    "links" : [ "#TYPE_TELEPHONE" ]
  }, {
    "name" : "ARG_PROTOCOL",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the protocol of a URI. Examples are \"http\" and\n     * \"ftp\".\n     * Can be used with {@link #TYPE_ELECTRONIC}.\n     ",
    "links" : [ "#TYPE_ELECTRONIC" ]
  }, {
    "name" : "ARG_USERNAME",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the username part of a URI. Should be set as a\n     * string.\n     * Can be used with {@link #TYPE_ELECTRONIC}.\n     ",
    "links" : [ "#TYPE_ELECTRONIC" ]
  }, {
    "name" : "ARG_PASSWORD",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the password part of a URI. Should be set as a\n     * string.\n     * Can be used with {@link #TYPE_ELECTRONIC}.\n     ",
    "links" : [ "#TYPE_ELECTRONIC" ]
  }, {
    "name" : "ARG_DOMAIN",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the domain part of a URI. For example\n     * \"source.android.com\".\n     * Can be used with {@link #TYPE_ELECTRONIC}.\n     ",
    "links" : [ "#TYPE_ELECTRONIC" ]
  }, {
    "name" : "ARG_PORT",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the port number of a URI. Should be specified as\n     * an integer.\n     * Can be used with {@link #TYPE_ELECTRONIC}.\n     ",
    "links" : [ "#TYPE_ELECTRONIC" ]
  }, {
    "name" : "ARG_PATH",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the path part of a URI. For example\n     * \"source/index.html\".\n     * Can be used with {@link #TYPE_ELECTRONIC}.\n     ",
    "links" : [ "#TYPE_ELECTRONIC" ]
  }, {
    "name" : "ARG_QUERY_STRING",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the query string of a URI. For example\n     * \"arg=value&argtwo=value\".\n     * Can be used with {@link #TYPE_ELECTRONIC}.\n     ",
    "links" : [ "#TYPE_ELECTRONIC" ]
  }, {
    "name" : "ARG_FRAGMENT_ID",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the fragment id of a URI. Should be specified as\n     * a string.\n     * Can be used with {@link #TYPE_ELECTRONIC}.\n     ",
    "links" : [ "#TYPE_ELECTRONIC" ]
  }, {
    "name" : "ARG_CURRENCY",
    "type" : "String",
    "comment" : "\n     * Argument used to specify the currency. Should be a ISO4217 currency code,\n     * e.g. \"USD\".\n     * Can be used with {@link #TYPE_MONEY}.\n     ",
    "links" : [ "#TYPE_MONEY" ]
  }, {
    "name" : "ARG_DIGITS",
    "type" : "String",
    "comment" : "\n     * Argument used to specify a string of digits.\n     * Can be used with {@link #TYPE_DIGITS}.\n     ",
    "links" : [ "#TYPE_DIGITS" ]
  }, {
    "name" : "ARG_VERBATIM",
    "type" : "String",
    "comment" : "\n     * Argument used to specify a string where the characters are read verbatim,\n     * except whitespace.\n     * Can be used with {@link #TYPE_VERBATIM}.\n     ",
    "links" : [ "#TYPE_VERBATIM" ]
  } ],
  "methods" : [ {
    "name" : "public String getType()",
    "returnType" : "String",
    "comment" : "\n     * Returns the type.\n     * @return The type of this instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PersistableBundle getArgs()",
    "returnType" : "PersistableBundle",
    "comment" : "\n     * Returns a bundle of the arguments set.\n     * @return The bundle of the arguments set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcelInternal(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeIdInternal()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getType()", "public PersistableBundle getArgs()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void writeToParcelInternal(Parcel dest, int flags)", "public int getSpanTypeId()", "public int getSpanTypeIdInternal()" ],
  "variableNames" : [ "mType", "mArgs", "TYPE_TEXT", "TYPE_CARDINAL", "TYPE_ORDINAL", "TYPE_DECIMAL", "TYPE_FRACTION", "TYPE_MEASURE", "TYPE_TIME", "TYPE_DATE", "TYPE_TELEPHONE", "TYPE_ELECTRONIC", "TYPE_MONEY", "TYPE_DIGITS", "TYPE_VERBATIM", "ARG_GENDER", "GENDER_NEUTRAL", "GENDER_MALE", "GENDER_FEMALE", "ARG_ANIMACY", "ANIMACY_ANIMATE", "ANIMACY_INANIMATE", "ARG_MULTIPLICITY", "MULTIPLICITY_SINGLE", "MULTIPLICITY_DUAL", "MULTIPLICITY_PLURAL", "ARG_CASE", "CASE_NOMINATIVE", "CASE_ACCUSATIVE", "CASE_DATIVE", "CASE_ABLATIVE", "CASE_GENITIVE", "CASE_VOCATIVE", "CASE_LOCATIVE", "CASE_INSTRUMENTAL", "ARG_TEXT", "ARG_NUMBER", "ARG_INTEGER_PART", "ARG_FRACTIONAL_PART", "ARG_QUANTITY", "ARG_NUMERATOR", "ARG_DENOMINATOR", "ARG_UNIT", "ARG_HOURS", "ARG_MINUTES", "ARG_WEEKDAY", "WEEKDAY_SUNDAY", "WEEKDAY_MONDAY", "WEEKDAY_TUESDAY", "WEEKDAY_WEDNESDAY", "WEEKDAY_THURSDAY", "WEEKDAY_FRIDAY", "WEEKDAY_SATURDAY", "ARG_DAY", "ARG_MONTH", "MONTH_JANUARY", "MONTH_FEBRUARY", "MONTH_MARCH", "MONTH_APRIL", "MONTH_MAY", "MONTH_JUNE", "MONTH_JULY", "MONTH_AUGUST", "MONTH_SEPTEMBER", "MONTH_OCTOBER", "MONTH_NOVEMBER", "MONTH_DECEMBER", "ARG_YEAR", "ARG_COUNTRY_CODE", "ARG_NUMBER_PARTS", "ARG_EXTENSION", "ARG_PROTOCOL", "ARG_USERNAME", "ARG_PASSWORD", "ARG_DOMAIN", "ARG_PORT", "ARG_PATH", "ARG_QUERY_STRING", "ARG_FRAGMENT_ID", "ARG_CURRENCY", "ARG_DIGITS", "ARG_VERBATIM" ]
}