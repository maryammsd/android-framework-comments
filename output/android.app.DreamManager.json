{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/DreamManager.java",
  "packageName" : "android.app",
  "className" : "DreamManager",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mService",
    "type" : "IDreamManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isScreensaverEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether Settings.Secure.SCREENSAVER_ENABLED is enabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setScreensaverEnabled(boolean enabled)",
    "returnType" : "void",
    "comment" : "\n     * Sets whether Settings.Secure.SCREENSAVER_ENABLED is enabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean areDreamsSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether dreams are supported.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void startDream()",
    "returnType" : "void",
    "comment" : "\n     * Starts dreaming.\n     *\n     * The system dream component, if set by {@link DreamManager#setSystemDreamComponent}, will be\n     * started.\n     * Otherwise, starts the active dream set by {@link DreamManager#setActiveDream}.\n     *\n     * <p>This is only used for testing the dream service APIs.\n     *\n     * @see DreamManager#setActiveDream(ComponentName)\n     * @see DreamManager#setSystemDreamComponent(ComponentName)\n     *\n     * @hide\n     ",
    "links" : [ "android.service.dreams.IDreamManager#setSystemDreamComponent", "android.service.dreams.IDreamManager#setActiveDream" ]
  }, {
    "name" : "public void stopDream()",
    "returnType" : "void",
    "comment" : "\n     * Stops the dream service on the device if one is started.\n     *\n     * <p> This is only used for testing the dream service APIs.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setActiveDream(@Nullable ComponentName dreamComponent)",
    "returnType" : "void",
    "comment" : "\n     * Sets the active dream on the device to be \"dreamComponent\".\n     *\n     * <p>This is only used for testing the dream service APIs.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSystemDreamComponent(@Nullable ComponentName dreamComponent)",
    "returnType" : "void",
    "comment" : "\n     * Sets or clears the system dream component.\n     *\n     * The system dream component, when set, will be shown instead of the user configured dream\n     * when the system starts dreaming (not dozing). If the system is dreaming at the time the\n     * system dream is set or cleared, it immediately switches dream.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDreamOverlay(@Nullable ComponentName dreamOverlayComponent)",
    "returnType" : "void",
    "comment" : "\n     * Sets the active dream on the device to be \"dreamComponent\".\n     *\n     * <p>This is only used for testing the dream service APIs.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean canStartDreaming(boolean isScreenOn)",
    "returnType" : "boolean",
    "comment" : "\n     * Whether dreaming can start given user settings and the current dock/charge state.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isDreaming()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the device is Dreaming.\n     *\n     * <p> This is only used for testing the dream service APIs.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDreamIsObscured(boolean isObscured)",
    "returnType" : "void",
    "comment" : "\n     * Sets whether the dream is obscured by something.\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isScreensaverEnabled()", "public void setScreensaverEnabled(boolean enabled)", "public boolean areDreamsSupported()", "public void startDream()", "public void stopDream()", "public void setActiveDream(@Nullable ComponentName dreamComponent)", "public void setSystemDreamComponent(@Nullable ComponentName dreamComponent)", "public void setDreamOverlay(@Nullable ComponentName dreamOverlayComponent)", "public boolean canStartDreaming(boolean isScreenOn)", "public boolean isDreaming()", "public void setDreamIsObscured(boolean isObscured)" ],
  "variableNames" : [ "mService", "mContext" ]
}