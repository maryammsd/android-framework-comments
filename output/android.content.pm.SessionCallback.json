{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/PackageInstaller.java",
  "packageName" : "android.content.pm",
  "className" : "SessionCallback",
  "comment" : "\n     * Events for observing session lifecycle.\n     * <p>\n     * A typical session lifecycle looks like this:\n     * <ul>\n     * <li>An installer creates a session to indicate pending app delivery. All\n     * install details are available at this point.\n     * <li>The installer opens the session to deliver APK data. Note that a\n     * session may be opened and closed multiple times as network connectivity\n     * changes. The installer may deliver periodic progress updates.\n     * <li>The installer commits or abandons the session, resulting in the\n     * session being finished.\n     * </ul>\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void onCreated(int sessionId)",
    "returnType" : "void",
    "comment" : "\n         * New session has been created. Details about the session can be\n         * obtained from {@link PackageInstaller#getSessionInfo(int)}.\n         ",
    "links" : [ "android.content.pm.PackageInstaller#getSessionInfo(int)" ]
  }, {
    "name" : "public abstract void onBadgingChanged(int sessionId)",
    "returnType" : "void",
    "comment" : "\n         * Badging details for an existing session has changed. For example, the\n         * app icon or label has been updated.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onActiveChanged(int sessionId, boolean active)",
    "returnType" : "void",
    "comment" : "\n         * Active state for session has been changed.\n         * <p>\n         * A session is considered active whenever there is ongoing forward\n         * progress being made, such as the installer holding an open\n         * {@link Session} instance while streaming data into place, or the\n         * system optimizing code as the result of\n         * {@link Session#commit(IntentSender)}.\n         * <p>\n         * If the installer closes the {@link Session} without committing, the\n         * session is considered inactive until the installer opens the session\n         * again.\n         ",
    "links" : [ "#commit(IntentSender)", "Session" ]
  }, {
    "name" : "public abstract void onProgressChanged(int sessionId, float progress)",
    "returnType" : "void",
    "comment" : "\n         * Progress for given session has been updated.\n         * <p>\n         * Note that this progress may not directly correspond to the value\n         * reported by\n         * {@link PackageInstaller.Session#setStagingProgress(float)}, as the\n         * system may carve out a portion of the overall progress to represent\n         * its own internal installation work.\n         ",
    "links" : [ "PackageInstaller.Session#setStagingProgress(float)" ]
  }, {
    "name" : "public abstract void onFinished(int sessionId, boolean success)",
    "returnType" : "void",
    "comment" : "\n         * Session has completely finished, either with success or failure.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onCreated(int sessionId)", "public abstract void onBadgingChanged(int sessionId)", "public abstract void onActiveChanged(int sessionId, boolean active)", "public abstract void onProgressChanged(int sessionId, float progress)", "public abstract void onFinished(int sessionId, boolean success)" ],
  "variableNames" : [ ]
}