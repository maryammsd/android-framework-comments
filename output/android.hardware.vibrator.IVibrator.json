{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/vibrator/IVibrator.java",
  "packageName" : "android.hardware.vibrator",
  "className" : "IVibrator",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "VERSION",
    "type" : "int",
    "comment" : "\n   * The version of this interface that the caller is built against.\n   * This might be different from what {@link #getInterfaceVersion()\n   * getInterfaceVersion} returns as that is the version of the interface\n   * that the remote object is implementing.\n   ",
    "links" : [ "#getInterfaceVersion()" ]
  }, {
    "name" : "HASH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CAP_ON_CALLBACK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_PERFORM_CALLBACK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_AMPLITUDE_CONTROL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_EXTERNAL_CONTROL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_EXTERNAL_AMPLITUDE_CONTROL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_COMPOSE_EFFECTS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_ALWAYS_ON_CONTROL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_GET_RESONANT_FREQUENCY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_GET_Q_FACTOR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_FREQUENCY_CONTROL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAP_COMPOSE_PWLE_EFFECTS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getCapabilities() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void off() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void on(int timeoutMs, android.hardware.vibrator.IVibratorCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int perform(int effect, byte strength, android.hardware.vibrator.IVibratorCallback callback) throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getSupportedEffects() throws android.os.RemoteException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAmplitude(float amplitude) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setExternalControl(boolean enabled) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCompositionDelayMax() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCompositionSizeMax() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getSupportedPrimitives() throws android.os.RemoteException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getPrimitiveDuration(int primitive) throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void compose(android.hardware.vibrator.CompositeEffect[] composite, android.hardware.vibrator.IVibratorCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getSupportedAlwaysOnEffects() throws android.os.RemoteException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void alwaysOnEnable(int id, int effect, byte strength) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void alwaysOnDisable(int id) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getResonantFrequency() throws android.os.RemoteException",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getQFactor() throws android.os.RemoteException",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getFrequencyResolution() throws android.os.RemoteException",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getFrequencyMinimum() throws android.os.RemoteException",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float[] getBandwidthAmplitudeMap() throws android.os.RemoteException",
    "returnType" : "float[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getPwlePrimitiveDurationMax() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getPwleCompositionSizeMax() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int[] getSupportedBraking() throws android.os.RemoteException",
    "returnType" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void composePwle(android.hardware.vibrator.PrimitivePwle[] composite, android.hardware.vibrator.IVibratorCallback callback) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceVersion() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getInterfaceHash() throws android.os.RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getCapabilities() throws android.os.RemoteException", "public void off() throws android.os.RemoteException", "public void on(int timeoutMs, android.hardware.vibrator.IVibratorCallback callback) throws android.os.RemoteException", "public int perform(int effect, byte strength, android.hardware.vibrator.IVibratorCallback callback) throws android.os.RemoteException", "public int[] getSupportedEffects() throws android.os.RemoteException", "public void setAmplitude(float amplitude) throws android.os.RemoteException", "public void setExternalControl(boolean enabled) throws android.os.RemoteException", "public int getCompositionDelayMax() throws android.os.RemoteException", "public int getCompositionSizeMax() throws android.os.RemoteException", "public int[] getSupportedPrimitives() throws android.os.RemoteException", "public int getPrimitiveDuration(int primitive) throws android.os.RemoteException", "public void compose(android.hardware.vibrator.CompositeEffect[] composite, android.hardware.vibrator.IVibratorCallback callback) throws android.os.RemoteException", "public int[] getSupportedAlwaysOnEffects() throws android.os.RemoteException", "public void alwaysOnEnable(int id, int effect, byte strength) throws android.os.RemoteException", "public void alwaysOnDisable(int id) throws android.os.RemoteException", "public float getResonantFrequency() throws android.os.RemoteException", "public float getQFactor() throws android.os.RemoteException", "public float getFrequencyResolution() throws android.os.RemoteException", "public float getFrequencyMinimum() throws android.os.RemoteException", "public float[] getBandwidthAmplitudeMap() throws android.os.RemoteException", "public int getPwlePrimitiveDurationMax() throws android.os.RemoteException", "public int getPwleCompositionSizeMax() throws android.os.RemoteException", "public int[] getSupportedBraking() throws android.os.RemoteException", "public void composePwle(android.hardware.vibrator.PrimitivePwle[] composite, android.hardware.vibrator.IVibratorCallback callback) throws android.os.RemoteException", "public int getInterfaceVersion() throws android.os.RemoteException", "public String getInterfaceHash() throws android.os.RemoteException" ],
  "variableNames" : [ "VERSION", "HASH", "DESCRIPTOR", "CAP_ON_CALLBACK", "CAP_PERFORM_CALLBACK", "CAP_AMPLITUDE_CONTROL", "CAP_EXTERNAL_CONTROL", "CAP_EXTERNAL_AMPLITUDE_CONTROL", "CAP_COMPOSE_EFFECTS", "CAP_ALWAYS_ON_CONTROL", "CAP_GET_RESONANT_FREQUENCY", "CAP_GET_Q_FACTOR", "CAP_FREQUENCY_CONTROL", "CAP_COMPOSE_PWLE_EFFECTS" ]
}