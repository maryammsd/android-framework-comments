{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/adservices/measurement/WebSourceRegistrationRequest.java",
  "packageName" : "android.adservices.measurement",
  "className" : "WebSourceRegistrationRequest",
  "comment" : " Class to hold input to measurement source registration calls from web context. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ANDROID_APP_SCHEME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEB_SOURCE_PARAMS_MAX_COUNT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<WebSourceRegistrationRequest>",
    "comment" : " Creator for Paracelable (via reflection). ",
    "links" : [ ]
  }, {
    "name" : "mWebSourceParams",
    "type" : "List<WebSourceParams>",
    "comment" : " Registration info to fetch sources. ",
    "links" : [ ]
  }, {
    "name" : "mTopOriginUri",
    "type" : "Uri",
    "comment" : " Top level origin of publisher. ",
    "links" : [ ]
  }, {
    "name" : "mInputEvent",
    "type" : "InputEvent",
    "comment" : "\n     * User Interaction {@link InputEvent} used by the AttributionReporting API to distinguish\n     * clicks from views.\n     ",
    "links" : [ "android.view.InputEvent" ]
  }, {
    "name" : "mAppDestination",
    "type" : "Uri",
    "comment" : "\n     * App destination of the source. It is the android app {@link Uri} where corresponding\n     * conversion is expected. This field is compared with the corresponding field in Source\n     * Registration Response, if matching fails the registration is rejected. If null is provided,\n     * no destination matching will be performed.\n     ",
    "links" : [ "android.net.Uri" ]
  }, {
    "name" : "mWebDestination",
    "type" : "Uri",
    "comment" : "\n     * Web destination of the source. It is the website {@link Uri} where corresponding conversion\n     * is expected. This field is compared with the corresponding field in Source Registration\n     * Response, if matching fails the registration is rejected. If null is provided, no destination\n     * matching will be performed.\n     ",
    "links" : [ "android.net.Uri" ]
  }, {
    "name" : "mVerifiedDestination",
    "type" : "Uri",
    "comment" : " Verified destination by the caller. This is where the user actually landed. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<WebSourceParams> getSourceParams()",
    "returnType" : "List<WebSourceParams>",
    "comment" : " Getter for source params. ",
    "links" : [ ]
  }, {
    "name" : "public Uri getTopOriginUri()",
    "returnType" : "Uri",
    "comment" : " Getter for top origin Uri. ",
    "links" : [ ]
  }, {
    "name" : "public InputEvent getInputEvent()",
    "returnType" : "InputEvent",
    "comment" : " Getter for input event. ",
    "links" : [ ]
  }, {
    "name" : "public Uri getAppDestination()",
    "returnType" : "Uri",
    "comment" : "\n     * Getter for the app destination. It is the android app {@link Uri} where corresponding\n     * conversion is expected. At least one of app destination or web destination is required.\n     ",
    "links" : [ "android.net.Uri" ]
  }, {
    "name" : "public Uri getWebDestination()",
    "returnType" : "Uri",
    "comment" : "\n     * Getter for web destination. It is the website {@link Uri} where corresponding conversion is\n     * expected. At least one of app destination or web destination is required.\n     ",
    "links" : [ "android.net.Uri" ]
  }, {
    "name" : "public Uri getVerifiedDestination()",
    "returnType" : "Uri",
    "comment" : " Getter for verified destination. ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void validateScheme(String name, Uri uri) throws IllegalArgumentException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean equals(Object o)", "public int hashCode()", "public List<WebSourceParams> getSourceParams()", "public Uri getTopOriginUri()", "public InputEvent getInputEvent()", "public Uri getAppDestination()", "public Uri getWebDestination()", "public Uri getVerifiedDestination()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)", "private static void validateScheme(String name, Uri uri) throws IllegalArgumentException" ],
  "variableNames" : [ "ANDROID_APP_SCHEME", "WEB_SOURCE_PARAMS_MAX_COUNT", "CREATOR", "mWebSourceParams", "mTopOriginUri", "mInputEvent", "mAppDestination", "mWebDestination", "mVerifiedDestination" ]
}