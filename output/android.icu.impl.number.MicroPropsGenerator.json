{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/number/MicroPropsGenerator.java",
  "packageName" : "android.icu.impl.number",
  "className" : "MicroPropsGenerator",
  "comment" : "\n * This interface is used when all number formatting settings, including the locale, are known, except\n * for the quantity itself. The {@link #processQuantity} method performs the final step in the number\n * processing pipeline: it uses the quantity to generate a finalized {@link MicroProps}, which can be\n * used to render the number to output.\n *\n * <p>\n * In other words, this interface is used for the parts of number processing that are\n * <em>quantity-dependent</em>.\n *\n * <p>\n * In order to allow for multiple different objects to all mutate the same MicroProps, a \"chain\" of\n * MicroPropsGenerators are linked together, and each one is responsible for manipulating a certain\n * quantity-dependent part of the MicroProps. At the top of the linked list is a base instance of\n * {@link MicroProps} with properties that are not quantity-dependent. Each element in the linked list\n * calls {@link #processQuantity} on its \"parent\", then does its work, and then returns the result.\n *\n * <p>\n * This chain of MicroPropsGenerators is typically constructed by NumberFormatterImpl::macrosToMicroGenerator() when\n * constructing a NumberFormatter.\n *\n * <p>\n * A class implementing MicroPropsGenerator looks something like this:\n *\n * <pre>\n * class Foo implements MicroPropsGenerator {\n *     private final MicroPropsGenerator parent;\n *\n *     public Foo(MicroPropsGenerator parent) {\n *         this.parent = parent;\n *     }\n *\n *     &#64;Override\n *     public MicroProps processQuantity(DecimalQuantity quantity) {\n *         MicroProps micros = this.parent.processQuantity(quantity);\n *         // Perform manipulations on micros and/or quantity\n *         return micros;\n *     }\n * }\n * </pre>\n *\n * @author sffc\n * @hide Only a subset of ICU is exposed in Android\n *\n ",
  "links" : [ "android.icu.impl.number.MicroProps", "#processQuantity" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public MicroProps processQuantity(DecimalQuantity quantity)",
    "returnType" : "MicroProps",
    "comment" : "\n     * Considers the given {@link DecimalQuantity}, optionally mutates it, and returns a\n     * {@link MicroProps}.\n     *\n     * @param quantity\n     *            The quantity for consideration and optional mutation.\n     * @return A MicroProps instance resolved for the quantity.\n     ",
    "links" : [ "android.icu.impl.number.MicroProps", "android.icu.impl.number.DecimalQuantity" ]
  } ],
  "methodNames" : [ "public MicroProps processQuantity(DecimalQuantity quantity)" ],
  "variableNames" : [ ]
}