{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/le/PeriodicAdvertisingCallback.java",
  "packageName" : "android.bluetooth.le",
  "className" : "PeriodicAdvertisingCallback",
  "comment" : "\n * Bluetooth LE periodic advertising callbacks, used to deliver periodic advertising operation\n * status.\n *\n * @hide\n * @see PeriodicAdvertisingManager#createSync\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SYNC_SUCCESS",
    "type" : "int",
    "comment" : "\n     * The requested operation was successful.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "SYNC_NO_RESPONSE",
    "type" : "int",
    "comment" : " Sync failed to be established because remote device did not respond. ",
    "links" : [ ]
  }, {
    "name" : "SYNC_NO_RESOURCES",
    "type" : "int",
    "comment" : " Sync failed to be established because controller can't support more syncs. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onSyncEstablished(int syncHandle, BluetoothDevice device, int advertisingSid, int skip, int timeout, int status)",
    "returnType" : "void",
    "comment" : "\n     * Callback when synchronization was established.\n     *\n     * @param syncHandle handle used to identify this synchronization.\n     * @param device remote device.\n     * @param advertisingSid synchronized advertising set id.\n     * @param skip The number of periodic advertising packets that can be skipped after a successful\n     *     receive in force. @see PeriodicAdvertisingManager#createSync\n     * @param timeout Synchronization timeout for the periodic advertising in force. One unit is\n     *     10ms. @see PeriodicAdvertisingManager#createSync\n     * @param status operation status.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onPeriodicAdvertisingReport(PeriodicAdvertisingReport report)",
    "returnType" : "void",
    "comment" : "\n     * Callback when periodic advertising report is received.\n     *\n     * @param report periodic advertising report.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onSyncLost(int syncHandle)",
    "returnType" : "void",
    "comment" : "\n     * Callback when periodic advertising synchronization was lost.\n     *\n     * @param syncHandle handle used to identify this synchronization.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onSyncTransferred(BluetoothDevice device, int status)",
    "returnType" : "void",
    "comment" : "\n     * Callback when periodic sync transferred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onBigInfoAdvertisingReport(int syncHandle, boolean encrypted)",
    "returnType" : "void",
    "comment" : "\n     * Callback when BIGInfo advertising report is received.\n     *\n     * @param syncHandle handle used to identify this synchronization.\n     * @param encrypted BIG carries encrypted data or not\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onSyncEstablished(int syncHandle, BluetoothDevice device, int advertisingSid, int skip, int timeout, int status)", "public void onPeriodicAdvertisingReport(PeriodicAdvertisingReport report)", "public void onSyncLost(int syncHandle)", "public void onSyncTransferred(BluetoothDevice device, int status)", "public void onBigInfoAdvertisingReport(int syncHandle, boolean encrypted)" ],
  "variableNames" : [ "SYNC_SUCCESS", "SYNC_NO_RESPONSE", "SYNC_NO_RESOURCES" ]
}