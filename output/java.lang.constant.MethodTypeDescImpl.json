{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/constant/MethodTypeDescImpl.java",
  "packageName" : "java.lang.constant",
  "className" : "MethodTypeDescImpl",
  "comment" : "\n * A <a href=\"package-summary.html#nominal\">nominal descriptor</a> for a\n * {@link MethodType}.  A {@linkplain MethodTypeDescImpl} corresponds to a\n * {@code Constant_MethodType_info} entry in the constant pool of a classfile.\n ",
  "links" : [ "java.lang.invoke.MethodType" ],
  "variables" : [ {
    "name" : "returnType",
    "type" : "ClassDesc",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "argTypes",
    "type" : "ClassDesc[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static MethodTypeDescImpl ofDescriptor(String descriptor)",
    "returnType" : "MethodTypeDescImpl",
    "comment" : "\n     * Creates a {@linkplain MethodTypeDescImpl} given a method descriptor string.\n     *\n     * @param descriptor the method descriptor string\n     * @return a {@linkplain MethodTypeDescImpl} describing the desired method type\n     * @throws IllegalArgumentException if the descriptor string is not a valid\n     * method descriptor\n     * @jvms 4.3.3 Method Descriptors\n     ",
    "links" : [ ]
  }, {
    "name" : "public ClassDesc returnType()",
    "returnType" : "ClassDesc",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int parameterCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ClassDesc parameterType(int index)",
    "returnType" : "ClassDesc",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<ClassDesc> parameterList()",
    "returnType" : "List<ClassDesc>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ClassDesc[] parameterArray()",
    "returnType" : "ClassDesc[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public MethodTypeDesc changeReturnType(ClassDesc returnType)",
    "returnType" : "MethodTypeDesc",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public MethodTypeDesc changeParameterType(int index, ClassDesc paramType)",
    "returnType" : "MethodTypeDesc",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public MethodTypeDesc dropParameterTypes(int start, int end)",
    "returnType" : "MethodTypeDesc",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public MethodTypeDesc insertParameterTypes(int pos, ClassDesc... paramTypes)",
    "returnType" : "MethodTypeDesc",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public MethodType resolveConstantDesc(MethodHandles.Lookup lookup) throws ReflectiveOperationException",
    "returnType" : "MethodType",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if this {@linkplain MethodTypeDescImpl} is\n     * equal to another {@linkplain MethodTypeDescImpl}.  Equality is\n     * determined by the two descriptors having equal return types and argument\n     * types.\n     *\n     * @param o the {@code MethodTypeDescImpl} to compare to this\n     *       {@code MethodTypeDescImpl}\n     * @return {@code true} if the specified {@code MethodTypeDescImpl}\n     *      is equal to this {@code MethodTypeDescImpl}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static MethodTypeDescImpl ofDescriptor(String descriptor)", "public ClassDesc returnType()", "public int parameterCount()", "public ClassDesc parameterType(int index)", "public List<ClassDesc> parameterList()", "public ClassDesc[] parameterArray()", "public MethodTypeDesc changeReturnType(ClassDesc returnType)", "public MethodTypeDesc changeParameterType(int index, ClassDesc paramType)", "public MethodTypeDesc dropParameterTypes(int start, int end)", "public MethodTypeDesc insertParameterTypes(int pos, ClassDesc... paramTypes)", "public MethodType resolveConstantDesc(MethodHandles.Lookup lookup) throws ReflectiveOperationException", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "returnType", "argTypes" ]
}