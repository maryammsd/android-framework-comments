{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/w3c/dom/UserDataHandler.java",
  "packageName" : "org.w3c.dom",
  "className" : "UserDataHandler",
  "comment" : "\n * When associating an object to a key on a node using\n * <code>Node.setUserData()</code> the application can provide a handler\n * that gets called when the node the object is associated to is being\n * cloned, imported, or renamed. This can be used by the application to\n * implement various behaviors regarding the data it associates to the DOM\n * nodes. This interface defines that handler.\n * <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.\n * @since DOM Level 3\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "NODE_CLONED",
    "type" : "short",
    "comment" : "\n     * The node is cloned, using <code>Node.cloneNode()</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "NODE_IMPORTED",
    "type" : "short",
    "comment" : "\n     * The node is imported, using <code>Document.importNode()</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "NODE_DELETED",
    "type" : "short",
    "comment" : "\n     * The node is deleted.\n     * <p ><b>Note:</b> This may not be supported or may not be reliable in\n     * certain environments, such as Java, where the implementation has no\n     * real control over when objects are actually deleted.\n     ",
    "links" : [ ]
  }, {
    "name" : "NODE_RENAMED",
    "type" : "short",
    "comment" : "\n     * The node is renamed, using <code>Document.renameNode()</code>.\n     ",
    "links" : [ ]
  }, {
    "name" : "NODE_ADOPTED",
    "type" : "short",
    "comment" : "\n     * The node is adopted, using <code>Document.adoptNode()</code>.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void handle(short operation, String key, Object data, Node src, Node dst)",
    "returnType" : "void",
    "comment" : "\n     * This method is called whenever the node for which this handler is\n     * registered is imported or cloned.\n     * <br> DOM applications must not raise exceptions in a\n     * <code>UserDataHandler</code>. The effect of throwing exceptions from\n     * the handler is DOM implementation dependent.\n     * @param operation Specifies the type of operation that is being\n     *   performed on the node.\n     * @param key Specifies the key for which this handler is being called.\n     * @param data Specifies the data for which this handler is being called.\n     * @param src Specifies the node being cloned, adopted, imported, or\n     *   renamed. This is <code>null</code> when the node is being deleted.\n     * @param dst Specifies the node newly created if any, or\n     *   <code>null</code>.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void handle(short operation, String key, Object data, Node src, Node dst)" ],
  "variableNames" : [ "NODE_CLONED", "NODE_IMPORTED", "NODE_DELETED", "NODE_RENAMED", "NODE_ADOPTED" ]
}