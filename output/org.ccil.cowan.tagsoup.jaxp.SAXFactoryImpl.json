{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/ccil/cowan/tagsoup/jaxp/SAXFactoryImpl.java",
  "packageName" : "org.ccil.cowan.tagsoup.jaxp",
  "className" : "SAXFactoryImpl",
  "comment" : "\n * This is a simple implementation of JAXP {@link SAXParserFactory},\n * to allow easier integration of TagSoup with the default JDK \n * xml processing stack.\n *\n * @author Tatu Saloranta (cowtowncoder@yahoo.com)\n ",
  "links" : [ "SAXParserFactory" ],
  "variables" : [ {
    "name" : "prototypeParser",
    "type" : "SAXParserImpl",
    "comment" : "\n     * The easiest way to test validity of features to set is to use\n     * a prototype object. Currently this is actually not a real prototype,\n     * in the sense that the configuration is actually passed separately\n     * (as opposed to instantiating new readers from this prototype), but\n     * this could be changed in future, if TagSoup parser object allowed\n     * cloning.\n     ",
    "links" : [ ]
  }, {
    "name" : "features",
    "type" : "HashMap",
    "comment" : "\n     * This Map contains explicitly set features that can be succesfully\n     * set for XMLReader instances. Temporary storage is needed due to\n     * JAXP design: multiple readers can be instantiated from a single\n     * factory, and settings can be changed between instantiations.\n     *<p>\n     * Note that we wouldn't need this map if we could create instances\n     * directly using the prototype instance.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public SAXParser newSAXParser() throws ParserConfigurationException",
    "returnType" : "SAXParser",
    "comment" : "\n     * Creates a new instance of <code>SAXParser</code> using the currently\n     * configured factory parameters.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setFeature(String name, boolean value) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException",
    "returnType" : "void",
    "comment" : "\n     * Defines that the specified feature is to enabled/disabled (as\n     * per second argument) on reader instances created by this \n     * factory.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getFeature(String name) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the specified property will be enabled or disabled\n     * on reader instances constructed by this factory.\n     ",
    "links" : [ ]
  }, {
    "name" : "private SAXParserImpl getPrototype()",
    "returnType" : "SAXParserImpl",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public SAXParser newSAXParser() throws ParserConfigurationException", "public void setFeature(String name, boolean value) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException", "public boolean getFeature(String name) throws ParserConfigurationException, SAXNotRecognizedException, SAXNotSupportedException", "private SAXParserImpl getPrototype()" ],
  "variableNames" : [ "prototypeParser", "features" ]
}