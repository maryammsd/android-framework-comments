{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaCodec.java",
  "packageName" : "android.media",
  "className" : "OutputFrame",
  "comment" : "\n     * A single output frame and its associated metadata.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLinearBlock",
    "type" : "LinearBlock",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHardwareBuffer",
    "type" : "HardwareBuffer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPresentationTimeUs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFormat",
    "type" : "MediaFormat",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBufferInfos",
    "type" : "ArrayDeque<BufferInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChangedKeys",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKeySet",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccessible",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLoaded",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public LinearBlock getLinearBlock()",
    "returnType" : "LinearBlock",
    "comment" : "\n         * Returns the output linear block, or null if this frame is empty.\n         *\n         * @throws IllegalStateException if this output frame is not linear.\n         ",
    "links" : [ ]
  }, {
    "name" : "public HardwareBuffer getHardwareBuffer()",
    "returnType" : "HardwareBuffer",
    "comment" : "\n         * Returns the output hardware graphic buffer, or null if this frame is empty.\n         *\n         * @throws IllegalStateException if this output frame is not graphic.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getPresentationTimeUs()",
    "returnType" : "long",
    "comment" : "\n         * Returns the presentation timestamp in microseconds.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : "\n         * Returns the buffer flags.\n         ",
    "links" : [ ]
  }, {
    "name" : "public ArrayDeque<BufferInfo> getBufferInfos()",
    "returnType" : "ArrayDeque<BufferInfo>",
    "comment" : "\n         * Returns the BufferInfos associated with this OutputFrame. These BufferInfos\n         * describes the access units present in the OutputFrame. Access units are laid\n         * out contiguously without gaps and in order.\n         ",
    "links" : [ ]
  }, {
    "name" : "public MediaFormat getFormat()",
    "returnType" : "MediaFormat",
    "comment" : "\n         * Returns a read-only {@link MediaFormat} for this frame. The returned\n         * object is valid only until the client calls {@link MediaCodec#releaseOutputBuffer}.\n         ",
    "links" : [ "android.media.MediaCodec#releaseOutputBuffer", "android.media.MediaFormat" ]
  }, {
    "name" : "public Set<String> getChangedKeys()",
    "returnType" : "Set<String>",
    "comment" : "\n         * Returns an unmodifiable set of the names of entries that has changed from\n         * the previous frame. The entries may have been removed/changed/added.\n         * Client can find out what the change is by querying {@link MediaFormat}\n         * object returned from {@link #getFormat}.\n         ",
    "links" : [ "android.media.MediaFormat", "#getFormat" ]
  }, {
    "name" : " void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isAccessible()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setAccessible(boolean accessible)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setBufferInfo(MediaCodec.BufferInfo info)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setBufferInfos(ArrayDeque<BufferInfo> infos)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isLoaded()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setLoaded(boolean loaded)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public LinearBlock getLinearBlock()", "public HardwareBuffer getHardwareBuffer()", "public long getPresentationTimeUs()", "public int getFlags()", "public ArrayDeque<BufferInfo> getBufferInfos()", "public MediaFormat getFormat()", "public Set<String> getChangedKeys()", " void clear()", " boolean isAccessible()", " void setAccessible(boolean accessible)", " void setBufferInfo(MediaCodec.BufferInfo info)", " void setBufferInfos(ArrayDeque<BufferInfo> infos)", " boolean isLoaded()", " void setLoaded(boolean loaded)" ],
  "variableNames" : [ "mIndex", "mLinearBlock", "mHardwareBuffer", "mPresentationTimeUs", "mFlags", "mFormat", "mBufferInfos", "mChangedKeys", "mKeySet", "mAccessible", "mLoaded" ]
}