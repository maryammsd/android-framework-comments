{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/MediaCodec.java",
  "packageName" : "android.media",
  "className" : "Pattern",
  "comment" : "\n         * Metadata describing an encryption pattern for the protected bytes in a subsample.  An\n         * encryption pattern consists of a repeating sequence of crypto blocks comprised of a\n         * number of encrypted blocks followed by a number of unencrypted, or skipped, blocks.\n         ",
  "variables" : [ {
    "name" : "mEncryptBlocks",
    "type" : "int",
    "comment" : "\n             * Number of blocks to be encrypted in the pattern. If both this and\n             * {@link #mSkipBlocks} are zero, pattern encryption is inoperative.\n             ",
    "links" : [ "#mSkipBlocks" ]
  }, {
    "name" : "mSkipBlocks",
    "type" : "int",
    "comment" : "\n             * Number of blocks to be skipped (left clear) in the pattern. If both this and\n             * {@link #mEncryptBlocks} are zero, pattern encryption is inoperative.\n             ",
    "links" : [ "#mEncryptBlocks" ]
  } ],
  "methods" : [ {
    "name" : "public void set(int blocksToEncrypt, int blocksToSkip)",
    "returnType" : "void",
    "comment" : "\n             * Set the number of blocks to encrypt and skip in a sample encryption pattern. If both\n             * parameters are zero, pattern encryption is inoperative.\n             ",
    "links" : [ ]
  }, {
    "name" : "public int getSkipBlocks()",
    "returnType" : "int",
    "comment" : "\n             * Return the number of blocks to skip in a sample encryption pattern.\n             ",
    "links" : [ ]
  }, {
    "name" : "public int getEncryptBlocks()",
    "returnType" : "int",
    "comment" : "\n             * Return the number of blocks to encrypt in a sample encryption pattern.\n             ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mEncryptBlocks", "mSkipBlocks" ],
  "methodNames" : [ "public void set(int blocksToEncrypt, int blocksToSkip)", "public int getSkipBlocks()", "public int getEncryptBlocks()" ]
}