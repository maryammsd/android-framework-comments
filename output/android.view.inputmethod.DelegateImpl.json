{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/inputmethod/InputMethodManager.java",
  "packageName" : "android.view.inputmethod",
  "className" : "DelegateImpl",
  "comment" : "",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public boolean startInput(@StartInputReason int startInputReason, View focusedView, @StartInputFlags int startInputFlags, @SoftInputModeFlags int softInputMode, int windowFlags)",
    "returnType" : "boolean",
    "comment" : "\n         * Used by {@link ImeFocusController} to start input connection.\n         ",
    "links" : [ "android.view.ImeFocusController" ]
  }, {
    "name" : "public void finishInput()",
    "returnType" : "void",
    "comment" : "\n         * Used by {@link ImeFocusController} to finish input connection.\n         ",
    "links" : [ "android.view.ImeFocusController" ]
  }, {
    "name" : "public void closeCurrentIme()",
    "returnType" : "void",
    "comment" : "\n         * Used by {@link ImeFocusController} to hide current input method editor.\n         ",
    "links" : [ "android.view.ImeFocusController" ]
  }, {
    "name" : "public void startInputAsyncOnWindowFocusGain(View focusedView, @SoftInputModeFlags int softInputMode, int windowFlags, boolean forceNewFocus)",
    "returnType" : "void",
    "comment" : "\n         * For {@link ImeFocusController} to start input asynchronously when focus gain.\n         ",
    "links" : [ "android.view.ImeFocusController" ]
  }, {
    "name" : "public void finishComposingText()",
    "returnType" : "void",
    "comment" : "\n         * Used by {@link ImeFocusController} to finish current composing text.\n         ",
    "links" : [ "android.view.ImeFocusController" ]
  }, {
    "name" : "public void setCurrentRootView(ViewRootImpl rootView)",
    "returnType" : "void",
    "comment" : "\n         * Used for {@link ImeFocusController} to set the current focused root view.\n         ",
    "links" : [ "android.view.ImeFocusController" ]
  }, {
    "name" : "public boolean isCurrentRootView(ViewRootImpl rootView)",
    "returnType" : "boolean",
    "comment" : "\n         * Used for {@link ImeFocusController} to return if the root view from the\n         * controller is this {@link InputMethodManager} currently focused.\n         * TODO: Address event-order problem when get current root view in multi-threads.\n         ",
    "links" : [ "com.android.internal.view.IInputMethodManager", "android.view.ImeFocusController" ]
  }, {
    "name" : "public boolean isRestartOnNextWindowFocus(boolean reset)",
    "returnType" : "boolean",
    "comment" : "\n         * For {@link ImeFocusController#checkFocus} if needed to force check new focus.\n         ",
    "links" : [ "android.view.ImeFocusController#checkFocus" ]
  }, {
    "name" : "public boolean hasActiveConnection(View view)",
    "returnType" : "boolean",
    "comment" : "\n         * Checks whether the active input connection (if any) is for the given view.\n         *\n         * TODO(b/160968797): Remove this method and move mServedInputConnectionWrapper to\n         *  ImeFocusController.\n         *\n         * Note that this method is only intended for restarting input after focus gain\n         * (e.g. b/160391516), DO NOT leverage this method to do another check.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public boolean startInput(@StartInputReason int startInputReason, View focusedView, @StartInputFlags int startInputFlags, @SoftInputModeFlags int softInputMode, int windowFlags)", "public void finishInput()", "public void closeCurrentIme()", "public void startInputAsyncOnWindowFocusGain(View focusedView, @SoftInputModeFlags int softInputMode, int windowFlags, boolean forceNewFocus)", "public void finishComposingText()", "public void setCurrentRootView(ViewRootImpl rootView)", "public boolean isCurrentRootView(ViewRootImpl rootView)", "public boolean isRestartOnNextWindowFocus(boolean reset)", "public boolean hasActiveConnection(View view)" ]
}