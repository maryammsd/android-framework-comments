{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/feature/MmTelFeature.java",
  "packageName" : "android.telephony.ims.feature",
  "className" : "Listener",
  "comment" : "\n     * Listener that the framework implements for communication from the MmTelFeature.\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public IImsCallSessionListener onIncomingCall(IImsCallSession c, String callId, Bundle extras)",
    "returnType" : "IImsCallSessionListener",
    "comment" : "\n         * Called when the IMS provider receives an incoming call.\n         * @param c The {@link ImsCallSession} associated with the new call.\n         * @param callId The call ID of the session of the new incoming call.\n         * @param extras A bundle containing extra parameters related to the call. See\n         * {@link #EXTRA_IS_UNKNOWN_CALL} and {@link #EXTRA_IS_USSD} above.\n         * @return the listener to listen to the session events. An {@link ImsCallSession} can only\n         *         hold one listener at a time. see {@link ImsCallSessionListener}.\n         *         If this method returns {@code null}, then the call could not be placed.\n         * @hide\n         ",
    "links" : [ "#EXTRA_IS_USSD", "#EXTRA_IS_UNKNOWN_CALL", "android.telephony.ims.ImsCallSession", "android.telephony.ims.ImsCallSessionListener" ]
  }, {
    "name" : "public void onRejectedCall(ImsCallProfile callProfile, ImsReasonInfo reason)",
    "returnType" : "void",
    "comment" : "\n         * Called when the IMS provider implicitly rejects an incoming call during setup.\n         * @param callProfile An {@link ImsCallProfile} with the call details.\n         * @param reason The {@link ImsReasonInfo} reason for call rejection.\n         * @hide\n         ",
    "links" : [ "android.telephony.ims.ImsCallProfile", "android.telephony.ims.ImsReasonInfo" ]
  }, {
    "name" : "public void onVoiceMessageCountUpdate(int count)",
    "returnType" : "void",
    "comment" : "\n         * Updates the Listener when the voice message count for IMS has changed.\n         * @param count an integer representing the new message count.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onAudioModeIsVoipChanged(int imsAudioHandler)",
    "returnType" : "void",
    "comment" : "\n         * Called to set the audio handler for this connection.\n         * @param imsAudioHandler an {@link ImsAudioHandler} used to handle the audio\n         *        for this IMS call.\n         * @hide\n         ",
    "links" : [ "ImsAudioHandler" ]
  }, {
    "name" : "public void onTriggerEpsFallback(@EpsFallbackReason int reason)",
    "returnType" : "void",
    "comment" : "\n         * Called when the IMS triggers EPS fallback procedure.\n         *\n         * @param reason specifies the reason that causes EPS fallback.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onStartImsTrafficSession(int token, @ImsTrafficType int trafficType, @AccessNetworkConstants.RadioAccessNetworkType int accessNetworkType, @ImsTrafficDirection int trafficDirection, IImsTrafficSessionCallback callback)",
    "returnType" : "void",
    "comment" : "\n         * Called when the IMS notifies the upcoming traffic type to the radio.\n         *\n         * @param token A nonce to identify the request\n         * @param trafficType The {@link ImsTrafficType} type for IMS traffic.\n         * @param accessNetworkType The {@link AccessNetworkConstants#RadioAccessNetworkType}\n         *        type of the radio access network.\n         * @param trafficDirection Indicates whether traffic is originated by mobile originated or\n         *        mobile terminated use case eg. MO/MT call/SMS etc.\n         * @param callback The callback to receive the result.\n         * @hide\n         ",
    "links" : [ "android.telephony.AccessNetworkConstants#RadioAccessNetworkType", "ImsTrafficType" ]
  }, {
    "name" : "public void onModifyImsTrafficSession(int token, @AccessNetworkConstants.RadioAccessNetworkType int accessNetworkType)",
    "returnType" : "void",
    "comment" : "\n         * Called when the IMS notifies the traffic type has been stopped.\n         *\n         * @param token A nonce registered with {@link #onStartImsTrafficSession}.\n         * @param accessNetworkType The {@link AccessNetworkConstants#RadioAccessNetworkType}\n         *        type of the radio access network.\n         * @hide\n         ",
    "links" : [ "#onStartImsTrafficSession", "android.telephony.AccessNetworkConstants#RadioAccessNetworkType" ]
  }, {
    "name" : "public void onStopImsTrafficSession(int token)",
    "returnType" : "void",
    "comment" : "\n         * Called when the IMS notifies the traffic type has been stopped.\n         *\n         * @param token A nonce registered with {@link #onStartImsTrafficSession}.\n         * @hide\n         ",
    "links" : [ "#onStartImsTrafficSession" ]
  }, {
    "name" : "public void onMediaQualityStatusChanged(MediaQualityStatus status)",
    "returnType" : "void",
    "comment" : "\n         * Called when the IMS provider notifies {@link MediaQualityStatus}.\n         *\n         * @param status media quality status currently measured.\n         * @hide\n         ",
    "links" : [ "android.telephony.ims.MediaQualityStatus" ]
  } ],
  "methodNames" : [ "public IImsCallSessionListener onIncomingCall(IImsCallSession c, String callId, Bundle extras)", "public void onRejectedCall(ImsCallProfile callProfile, ImsReasonInfo reason)", "public void onVoiceMessageCountUpdate(int count)", "public void onAudioModeIsVoipChanged(int imsAudioHandler)", "public void onTriggerEpsFallback(@EpsFallbackReason int reason)", "public void onStartImsTrafficSession(int token, @ImsTrafficType int trafficType, @AccessNetworkConstants.RadioAccessNetworkType int accessNetworkType, @ImsTrafficDirection int trafficDirection, IImsTrafficSessionCallback callback)", "public void onModifyImsTrafficSession(int token, @AccessNetworkConstants.RadioAccessNetworkType int accessNetworkType)", "public void onStopImsTrafficSession(int token)", "public void onMediaQualityStatusChanged(MediaQualityStatus status)" ],
  "variableNames" : [ ]
}