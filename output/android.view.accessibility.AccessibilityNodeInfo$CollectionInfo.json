{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/accessibility/AccessibilityNodeInfo.java",
  "packageName" : "android.view.accessibility",
  "className" : "CollectionInfo",
  "comment" : "\n     * Class with information if a node is a collection.\n     * <p>\n     * A collection of items has rows and columns and may be hierarchical.\n     * For example, a horizontal list is a collection with one column, as\n     * many rows as the list items, and is not hierarchical; A table is a\n     * collection with several rows, several columns, and is not hierarchical;\n     * A vertical tree is a hierarchical collection with one column and\n     * as many rows as the first level children.\n     * </p>\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "SELECTION_MODE_NONE",
    "type" : "int",
    "comment" : " Selection mode where items are not selectable. ",
    "links" : [ ]
  }, {
    "name" : "SELECTION_MODE_SINGLE",
    "type" : "int",
    "comment" : " Selection mode where a single item may be selected. ",
    "links" : [ ]
  }, {
    "name" : "SELECTION_MODE_MULTIPLE",
    "type" : "int",
    "comment" : " Selection mode where multiple items may be selected. ",
    "links" : [ ]
  }, {
    "name" : "UNDEFINED",
    "type" : "int",
    "comment" : "\n         * Constant to denote a missing collection count.\n         *\n         * This should be used for {@code mItemCount} and\n         * {@code mImportantForAccessibilityItemCount} when values for those fields are not known.\n         ",
    "links" : [ ]
  }, {
    "name" : "mRowCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColumnCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHierarchical",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSelectionMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mItemCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mImportantForAccessibilityItemCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static CollectionInfo obtain(CollectionInfo other)",
    "returnType" : "CollectionInfo",
    "comment" : "\n         * Instantiates a CollectionInfo that is a clone of another one.\n         *\n         * @deprecated Object pooling has been discontinued. Create a new instance using the\n         * constructor {@link\n         * AccessibilityNodeInfo.CollectionInfo#CollectionInfo} instead.\n         *\n         * @param other The instance to clone.\n         * @hide\n         ",
    "links" : [ "AccessibilityNodeInfo.CollectionInfo#CollectionInfo" ]
  }, {
    "name" : "public static CollectionInfo obtain(int rowCount, int columnCount, boolean hierarchical)",
    "returnType" : "CollectionInfo",
    "comment" : "\n         * Obtains a pooled instance.\n         *\n         * @deprecated Object pooling has been discontinued. Create a new instance using the\n         * constructor {@link\n         * AccessibilityNodeInfo.CollectionInfo#CollectionInfo(int, int,\n         * boolean)} instead.\n         *\n         * @param rowCount The number of rows, or -1 if count is unknown.\n         * @param columnCount The number of columns, or -1 if count is unknown.\n         * @param hierarchical Whether the collection is hierarchical.\n         ",
    "links" : [ "AccessibilityNodeInfo.CollectionInfo#CollectionInfo(int" ]
  }, {
    "name" : "public static CollectionInfo obtain(int rowCount, int columnCount, boolean hierarchical, int selectionMode)",
    "returnType" : "CollectionInfo",
    "comment" : "\n         * Obtains a pooled instance.\n         *\n         * @deprecated Object pooling has been discontinued. Create a new instance using the\n         * constructor {@link\n         * AccessibilityNodeInfo.CollectionInfo#CollectionInfo(int, int,\n         * boolean, int)} instead.\n         *\n         * @param rowCount The number of rows.\n         * @param columnCount The number of columns.\n         * @param hierarchical Whether the collection is hierarchical.\n         * @param selectionMode The collection's selection mode, one of:\n         *            <ul>\n         *            <li>{@link #SELECTION_MODE_NONE}\n         *            <li>{@link #SELECTION_MODE_SINGLE}\n         *            <li>{@link #SELECTION_MODE_MULTIPLE}\n         *            </ul>\n         ",
    "links" : [ "AccessibilityNodeInfo.CollectionInfo#CollectionInfo(int", "#SELECTION_MODE_NONE", "#SELECTION_MODE_SINGLE", "#SELECTION_MODE_MULTIPLE" ]
  }, {
    "name" : "public int getRowCount()",
    "returnType" : "int",
    "comment" : "\n         * Gets the number of rows.\n         *\n         * @return The row count, or -1 if count is unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getColumnCount()",
    "returnType" : "int",
    "comment" : "\n         * Gets the number of columns.\n         *\n         * @return The column count, or -1 if count is unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isHierarchical()",
    "returnType" : "boolean",
    "comment" : "\n         * Gets if the collection is a hierarchically ordered.\n         *\n         * @return Whether the collection is hierarchical.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSelectionMode()",
    "returnType" : "int",
    "comment" : "\n         * Gets the collection's selection mode.\n         *\n         * @return The collection's selection mode, one of:\n         *         <ul>\n         *         <li>{@link #SELECTION_MODE_NONE}\n         *         <li>{@link #SELECTION_MODE_SINGLE}\n         *         <li>{@link #SELECTION_MODE_MULTIPLE}\n         *         </ul>\n         ",
    "links" : [ "#SELECTION_MODE_NONE", "#SELECTION_MODE_SINGLE", "#SELECTION_MODE_MULTIPLE" ]
  }, {
    "name" : "public int getItemCount()",
    "returnType" : "int",
    "comment" : "\n         * Gets the number of items in the collection.\n         *\n         * @return The count of items, which may be {@code UNDEFINED} if the count is not known.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getImportantForAccessibilityItemCount()",
    "returnType" : "int",
    "comment" : "\n         * Gets the number of items in the collection considered important for accessibility.\n         *\n         * @return The count of items important for accessibility, which may be {@code UNDEFINED}\n         * if the count is not known.\n         ",
    "links" : [ ]
  }, {
    "name" : " void recycle()",
    "returnType" : "void",
    "comment" : "\n         * Previously would recycle this instance.\n         *\n         * @deprecated Object pooling has been discontinued. Calling this function now will have\n         * no effect.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static CollectionInfo obtain(CollectionInfo other)", "public static CollectionInfo obtain(int rowCount, int columnCount, boolean hierarchical)", "public static CollectionInfo obtain(int rowCount, int columnCount, boolean hierarchical, int selectionMode)", "public int getRowCount()", "public int getColumnCount()", "public boolean isHierarchical()", "public int getSelectionMode()", "public int getItemCount()", "public int getImportantForAccessibilityItemCount()", " void recycle()", "private void clear()" ],
  "variableNames" : [ "SELECTION_MODE_NONE", "SELECTION_MODE_SINGLE", "SELECTION_MODE_MULTIPLE", "UNDEFINED", "mRowCount", "mColumnCount", "mHierarchical", "mSelectionMode", "mItemCount", "mImportantForAccessibilityItemCount" ]
}