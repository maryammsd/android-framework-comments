{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/CompletableFuture.java",
  "packageName" : "java.util.concurrent",
  "className" : "MinimalStage",
  "comment" : "\n     * A subclass that just throws UOE for most non-CompletionStage methods.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public CompletableFuture<U> newIncompleteFuture()",
    "returnType" : "CompletableFuture<U>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T get()",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T get(long timeout, TimeUnit unit)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T getNow(T valueIfAbsent)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T join()",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean complete(T value)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean completeExceptionally(Throwable ex)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean cancel(boolean mayInterruptIfRunning)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void obtrudeValue(T value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void obtrudeException(Throwable ex)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isDone()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isCancelled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isCompletedExceptionally()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getNumberOfDependents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CompletableFuture<T> completeAsync(Supplier<? extends T> supplier, Executor executor)",
    "returnType" : "CompletableFuture<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CompletableFuture<T> completeAsync(Supplier<? extends T> supplier)",
    "returnType" : "CompletableFuture<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CompletableFuture<T> orTimeout(long timeout, TimeUnit unit)",
    "returnType" : "CompletableFuture<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CompletableFuture<T> completeOnTimeout(T value, long timeout, TimeUnit unit)",
    "returnType" : "CompletableFuture<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CompletableFuture<T> toCompletableFuture()",
    "returnType" : "CompletableFuture<T>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public CompletableFuture<U> newIncompleteFuture()", "public T get()", "public T get(long timeout, TimeUnit unit)", "public T getNow(T valueIfAbsent)", "public T join()", "public boolean complete(T value)", "public boolean completeExceptionally(Throwable ex)", "public boolean cancel(boolean mayInterruptIfRunning)", "public void obtrudeValue(T value)", "public void obtrudeException(Throwable ex)", "public boolean isDone()", "public boolean isCancelled()", "public boolean isCompletedExceptionally()", "public int getNumberOfDependents()", "public CompletableFuture<T> completeAsync(Supplier<? extends T> supplier, Executor executor)", "public CompletableFuture<T> completeAsync(Supplier<? extends T> supplier)", "public CompletableFuture<T> orTimeout(long timeout, TimeUnit unit)", "public CompletableFuture<T> completeOnTimeout(T value, long timeout, TimeUnit unit)", "public CompletableFuture<T> toCompletableFuture()" ],
  "variableNames" : [ ]
}