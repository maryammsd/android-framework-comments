{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/PathMeasure_Delegate.java",
  "packageName" : "android.graphics",
  "className" : "PathMeasure_Delegate",
  "comment" : "\n * Delegate implementing the native methods of {@link android.graphics.PathMeasure}\n * <p/>\n * Through the layoutlib_create tool, the original native methods of PathMeasure have been\n * replaced by\n * calls to methods of the same name in this delegate class.\n * <p/>\n * This class behaves like the original native implementation, but in Java, keeping previously\n * native data into its own objects and mapping them to int that are sent back and forth between it\n * and the original PathMeasure class.\n *\n * @see DelegateManager\n ",
  "variables" : [ {
    "name" : "sManager",
    "type" : "DelegateManager<PathMeasure_Delegate>",
    "comment" : " ---- delegate manager ----",
    "links" : [ ]
  }, {
    "name" : "mOriginalPathIterator",
    "type" : "CachedPathIteratorFactory",
    "comment" : " ---- delegate data ----",
    "links" : [ ]
  }, {
    "name" : "mNativePath",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static long native_create(long native_path, boolean forceClosed)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void native_destroy(long native_instance)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean native_getPosTan(long native_instance, float distance, float[] pos, float[] tan)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean native_getMatrix(long native_instance, float distance, long native_matrix, int flags)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean native_nextContour(long native_instance)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void native_setPath(long native_instance, long native_path, boolean forceClosed)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float native_getLength(long native_instance)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean native_isClosed(long native_instance)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean native_getSegment(long native_instance, float startD, float stopD, long native_dst_path, boolean startWithMoveTo)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "sManager", "mOriginalPathIterator", "mNativePath" ],
  "methodNames" : [ " static long native_create(long native_path, boolean forceClosed)", " static void native_destroy(long native_instance)", " static boolean native_getPosTan(long native_instance, float distance, float[] pos, float[] tan)", " static boolean native_getMatrix(long native_instance, float distance, long native_matrix, int flags)", " static boolean native_nextContour(long native_instance)", " static void native_setPath(long native_instance, long native_path, boolean forceClosed)", " static float native_getLength(long native_instance)", " static boolean native_isClosed(long native_instance)", " static boolean native_getSegment(long native_instance, float startD, float stopD, long native_dst_path, boolean startWithMoveTo)" ]
}