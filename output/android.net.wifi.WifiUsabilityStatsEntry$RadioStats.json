{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/WifiUsabilityStatsEntry.java",
  "packageName" : "android.net.wifi",
  "className" : "RadioStats",
  "comment" : "\n     * Wifi link layer radio stats.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "INVALID_RADIO_ID",
    "type" : "int",
    "comment" : "\n         * Invalid radio id.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "mRadioId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalRadioOnTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalRadioTxTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalRadioRxTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalScanTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalNanScanTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalBackgroundScanTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalRoamScanTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalPnoScanTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTotalHotspot2ScanTimeMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<RadioStats>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getRadioId()",
    "returnType" : "long",
    "comment" : "\n         * Firmware/Hardware implementation specific persistent value for this\n         * device, identifying the radio interface for which the stats are produced.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRadioOnTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time the wifi radio is on in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRadioTxTimeMillis()",
    "returnType" : "long",
    "comment" : "\n         * The total time the wifi radio is transmitting in ms counted from the last radio chip\n         * reset\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRadioRxTimeMillis()",
    "returnType" : "long",
    "comment" : "\n         * The total time the wifi radio is receiving in ms counted from the last radio chip reset\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalScanTimeMillis()",
    "returnType" : "long",
    "comment" : "\n         * The total time spent on all types of scans in ms counted from the last radio chip reset\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalNanScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on nan scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalBackgroundScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on background scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalRoamScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on roam scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalPnoScanTimeMillis()",
    "returnType" : "long",
    "comment" : " The total time spent on pno scans in ms counted from the last radio chip reset ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalHotspot2ScanTimeMillis()",
    "returnType" : "long",
    "comment" : "\n         * The total time spent on hotspot2.0 scans and GAS exchange in ms counted from the\n         * last radio chip reset\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public long getRadioId()", "public long getTotalRadioOnTimeMillis()", "public long getTotalRadioTxTimeMillis()", "public long getTotalRadioRxTimeMillis()", "public long getTotalScanTimeMillis()", "public long getTotalNanScanTimeMillis()", "public long getTotalBackgroundScanTimeMillis()", "public long getTotalRoamScanTimeMillis()", "public long getTotalPnoScanTimeMillis()", "public long getTotalHotspot2ScanTimeMillis()" ],
  "variableNames" : [ "INVALID_RADIO_ID", "mRadioId", "mTotalRadioOnTimeMillis", "mTotalRadioTxTimeMillis", "mTotalRadioRxTimeMillis", "mTotalScanTimeMillis", "mTotalNanScanTimeMillis", "mTotalBackgroundScanTimeMillis", "mTotalRoamScanTimeMillis", "mTotalPnoScanTimeMillis", "mTotalHotspot2ScanTimeMillis", "CREATOR" ]
}