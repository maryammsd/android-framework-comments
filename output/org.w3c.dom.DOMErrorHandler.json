{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/w3c/dom/DOMErrorHandler.java",
  "packageName" : "org.w3c.dom",
  "className" : "DOMErrorHandler",
  "comment" : "\n *  <code>DOMErrorHandler</code> is a callback interface that the DOM\n * implementation can call when reporting errors that happens while\n * processing XML data, or when doing some other processing (e.g. validating\n * a document). A <code>DOMErrorHandler</code> object can be attached to a\n * <code>Document</code> using the \"error-handler\" on the\n * <code>DOMConfiguration</code> interface. If more than one error needs to\n * be reported during an operation, the sequence and numbers of the errors\n * passed to the error handler are implementation dependent.\n * <p> The application that is using the DOM implementation is expected to\n * implement this interface.\n * <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407'>Document Object Model (DOM) Level 3 Core Specification</a>.\n * @since DOM Level 3\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public boolean handleError(DOMError error)",
    "returnType" : "boolean",
    "comment" : "\n     * This method is called on the error handler when an error occurs.\n     * <br> If an exception is thrown from this method, it is considered to be\n     * equivalent of returning <code>true</code>.\n     * @param error  The error object that describes the error. This object\n     *   may be reused by the DOM implementation across multiple calls to\n     *   the <code>handleError</code> method.\n     * @return  If the <code>handleError</code> method returns\n     *   <code>false</code>, the DOM implementation should stop the current\n     *   processing when possible. If the method returns <code>true</code>,\n     *   the processing may continue depending on\n     *   <code>DOMError.severity</code>.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean handleError(DOMError error)" ],
  "variableNames" : [ ]
}