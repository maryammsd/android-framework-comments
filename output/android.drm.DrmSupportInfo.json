{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/drm/DrmSupportInfo.java",
  "packageName" : "android.drm",
  "className" : "DrmSupportInfo",
  "comment" : "\n * An entity class that wraps the capability of each DRM plug-in (agent),\n * such as the MIME type and file suffix the DRM plug-in can handle.\n *<p>\n * Plug-in developers can expose the capability of their plug-in by passing an instance of this\n * class to an application.\n *\n * @deprecated Please use {@link android.media.MediaDrm}\n ",
  "links" : [ "android.media.MediaDrm" ],
  "variables" : [ {
    "name" : "mFileSuffixList",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMimeTypeList",
    "type" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDescription",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void addMimeType(String mimeType)",
    "returnType" : "void",
    "comment" : "\n     * Adds the specified MIME type to the list of MIME types this DRM plug-in supports.\n     *\n     * @param mimeType MIME type that can be handles by this DRM plug-in.\n     * Must not be null or an empty string.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addFileSuffix(String fileSuffix)",
    "returnType" : "void",
    "comment" : "\n     * Adds the specified file suffix to the list of file suffixes this DRM plug-in supports.\n     *\n     * @param fileSuffix File suffix that can be handled by this DRM plug-in.\n     * it could be null but not an empty string. When it is null, it indicates\n     * that some DRM content comes with no file suffix.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Iterator<String> getMimeTypeIterator()",
    "returnType" : "Iterator<String>",
    "comment" : "\n     * Retrieves an iterator object that you can use to iterate over the MIME types that \n     * this DRM plug-in supports.\n     *\n     * @return The iterator object\n     ",
    "links" : [ ]
  }, {
    "name" : "public Iterator<String> getFileSuffixIterator()",
    "returnType" : "Iterator<String>",
    "comment" : "\n     * Retrieves an iterator object that you can use to iterate over the file suffixes that\n     * this DRM plug-in supports.\n     *\n     * @return The iterator object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDescription(String description)",
    "returnType" : "void",
    "comment" : "\n     * Sets a description for the DRM plug-in (agent).\n     *\n     * @param description Unique description of plug-in. Must not be null\n     * or an empty string.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDescriprition()",
    "returnType" : "String",
    "comment" : "\n     * Retrieves the DRM plug-in (agent) description.\n     *\n     * @return The plug-in description.\n     * @deprecated The method name is mis-spelled, and it is replaced by\n     * {@link #getDescription()}.\n     ",
    "links" : [ "#getDescription()" ]
  }, {
    "name" : "public String getDescription()",
    "returnType" : "String",
    "comment" : "\n     * Retrieves the DRM plug-in (agent) description. Even if null or an empty\n     * string is not allowed in {@link #setDescription(String)}, if\n     * {@link #setDescription(String)} is not called, description returned\n     * from this method is an empty string.\n     *\n     * @return The plug-in description.\n     ",
    "links" : [ "#setDescription(String)" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * Overridden hash code implementation.\n     *\n     * @return The hash code value.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object object)",
    "returnType" : "boolean",
    "comment" : "\n     * Overridden <code>equals</code> implementation. Two DrmSupportInfo objects\n     * are considered being equal if they support exactly the same set of mime\n     * types, file suffixes, and has exactly the same description.\n     *\n     * @param object The object to be compared.\n     * @return True if equal; false if not equal.\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean isSupportedMimeType(String mimeType)",
    "returnType" : "boolean",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : " boolean isSupportedFileSuffix(String fileSuffix)",
    "returnType" : "boolean",
    "comment" : " package ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void addMimeType(String mimeType)", "public void addFileSuffix(String fileSuffix)", "public Iterator<String> getMimeTypeIterator()", "public Iterator<String> getFileSuffixIterator()", "public void setDescription(String description)", "public String getDescriprition()", "public String getDescription()", "public int hashCode()", "public boolean equals(Object object)", " boolean isSupportedMimeType(String mimeType)", " boolean isSupportedFileSuffix(String fileSuffix)" ],
  "variableNames" : [ "mFileSuffixList", "mMimeTypeList", "mDescription" ]
}