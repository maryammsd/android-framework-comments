{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/ConcurrentHashMap.java",
  "packageName" : "java.util.concurrent",
  "className" : "TreeNode",
  "comment" : "\n     * Nodes for use in TreeBins.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "parent",
    "type" : "TreeNode<K, V>",
    "comment" : " red-black tree links",
    "links" : [ ]
  }, {
    "name" : "left",
    "type" : "TreeNode<K, V>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "right",
    "type" : "TreeNode<K, V>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "prev",
    "type" : "TreeNode<K, V>",
    "comment" : " needed to unlink next upon deletion",
    "links" : [ ]
  }, {
    "name" : "red",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " Node<K, V> find(int h, Object k)",
    "returnType" : "Node<K, V>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final TreeNode<K, V> findTreeNode(int h, Object k, Class<?> kc)",
    "returnType" : "TreeNode<K, V>",
    "comment" : "\n         * Returns the TreeNode (or null if not found) for the given key\n         * starting at given root.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " Node<K, V> find(int h, Object k)", " final TreeNode<K, V> findTreeNode(int h, Object k, Class<?> kc)" ],
  "variableNames" : [ "parent", "left", "right", "prev", "red" ]
}