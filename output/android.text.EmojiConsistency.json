{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/EmojiConsistency.java",
  "packageName" : "android.text",
  "className" : "EmojiConsistency",
  "comment" : "\n * The set of emoji that should be drawn by the system with the default font for device consistency.\n *\n * This is intended to be used only by applications that do custom emoji rendering using tools like\n * {@link android.text.style.ReplacementSpan} or custom emoji fonts.\n *\n * An example of how this should be used:\n *\n * <p>\n *     <ol>\n *         <li>\n *             Match emoji for third party custom rendering\n *         </li>\n *         <li>\n *             For each match, check against NonStandardEmoji before displaying custom glyph\n *         </li>\n *         <li>\n *             If in NonStandardEmojiSet, do not display custom glyph (render with\n *             android.graphics.Typeface.DEFAULT instead)\n *         </li>\n *         <li>\n *             Otherwise, do custom rendering like normal\n *         </li>\n *     </ol>\n * </p>\n ",
  "links" : [ "android.text.style.ReplacementSpan" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static Set<int[]> getEmojiConsistencySet()",
    "returnType" : "Set<int[]>",
    "comment" : "\n     * The set of emoji that should be drawn by the system with the default font for device\n     * consistency.\n     *\n     * Apps SHOULD attempt to avoid overwriting system emoji rendering with custom emoji glyphs for\n     * these codepoint sequences.\n     *\n     * Apps that display custom emoji glyphs via matching code may filter against this set. On\n     * match, the application SHOULD prefer Typeface.Default instead of a custom glyph\n     *\n     * Apps that use fonts may use this set to add {@link android.text.style.TypefaceSpan} for\n     * android.graphics.Typeface.DEFAULT for matched codepoint sequences.\n     *\n     * Codepoint sequences returned MUST match exactly to be considered a match with the exception\n     * of Variation Selectors.\n     *\n     * All codepoint sequences returned MUST be a complete emoji codepoint sequence as defined by\n     * unicode.\n     *\n     * @return set of codepoint sequences representing codepoints that should be rendered by the\n     * system using the default font.\n     ",
    "links" : [ "android.text.style.TypefaceSpan" ]
  } ],
  "methodNames" : [ "public static Set<int[]> getEmojiConsistencySet()" ],
  "variableNames" : [ ]
}