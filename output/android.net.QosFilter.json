{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/QosFilter.java",
  "packageName" : "android.net",
  "className" : "QosFilter",
  "comment" : "\n * Provides the related filtering logic to the {@link NetworkAgent} to match {@link QosSession}s\n * to their related {@link QosCallback}.\n *\n * Used by the {@link com.android.server.ConnectivityService} to validate a {@link QosCallback}\n * is still able to receive a {@link QosSession}.\n *\n * @hide\n ",
  "links" : [ "com.android.server.ConnectivityService", "android.net.NetworkAgent", "android.net.QosSession", "android.net.QosCallback" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract Network getNetwork()",
    "returnType" : "Network",
    "comment" : "\n     * The network used with this filter.\n     *\n     * @return the registered {@link Network}\n     ",
    "links" : [ "android.net.Network" ]
  }, {
    "name" : "public abstract int validate()",
    "returnType" : "int",
    "comment" : "\n     * Validates that conditions have not changed such that no further {@link QosSession}s should\n     * be passed back to the {@link QosCallback} associated to this filter.\n     *\n     * @return the error code when present, otherwise the filter is valid\n     *\n     * @hide\n     ",
    "links" : [ "android.net.QosSession", "android.net.QosCallback" ]
  }, {
    "name" : "public abstract boolean matchesLocalAddress(@NonNull InetAddress address, int startPort, int endPort)",
    "returnType" : "boolean",
    "comment" : "\n     * Determines whether or not the parameters will be matched with source address and port of this\n     * filter.\n     *\n     * @param address the UE side address included in IP packet filter set of a QoS flow assigned\n     *                on {@link Network}.\n     * @param startPort the start of UE side port range included in IP packet filter set of a QoS\n     *                flow assigned on {@link Network}.\n     * @param endPort the end of UE side port range included in IP packet filter set of a QoS flow\n     *                assigned on {@link Network}.\n     * @return whether the parameters match the UE side address and port of the filter\n     ",
    "links" : [ "android.net.Network" ]
  }, {
    "name" : "public abstract boolean matchesRemoteAddress(@NonNull InetAddress address, int startPort, int endPort)",
    "returnType" : "boolean",
    "comment" : "\n     * Determines whether or not the parameters will be matched with remote address and port of\n     * this filter.\n     *\n     * @param address the remote address included in IP packet filter set of a QoS flow\n     *                assigned on {@link Network}.\n     * @param startPort the start of remote port range included in IP packet filter set of a\n     *                 QoS flow assigned on {@link Network}.\n     * @param endPort the end of the remote range included in IP packet filter set of a QoS\n     *                flow assigned on {@link Network}.\n     * @return whether the parameters match the remote address and port of the filter\n     ",
    "links" : [ "android.net.Network" ]
  }, {
    "name" : "public boolean matchesProtocol(int protocol)",
    "returnType" : "boolean",
    "comment" : " IPPROTO_* are not compile-time constants, so they are not annotated with @IntDef.",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract Network getNetwork()", "public abstract int validate()", "public abstract boolean matchesLocalAddress(@NonNull InetAddress address, int startPort, int endPort)", "public abstract boolean matchesRemoteAddress(@NonNull InetAddress address, int startPort, int endPort)", "public boolean matchesProtocol(int protocol)" ],
  "variableNames" : [ ]
}