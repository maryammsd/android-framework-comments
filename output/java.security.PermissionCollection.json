{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/PermissionCollection.java",
  "packageName" : "java.security",
  "className" : "PermissionCollection",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void add(Permission permission)",
    "returnType" : "void",
    "comment" : "\n     * Adds a permission object to the current collection of permission objects.\n     *\n     * @param permission the Permission object to add.\n     *\n     * @exception SecurityException -  if this PermissionCollection object\n     *                                 has been marked readonly\n     * @exception IllegalArgumentException - if this PermissionCollection\n     *                object is a homogeneous collection and the permission\n     *                is not of the correct type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract boolean implies(Permission permission)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks to see if the specified permission is implied by\n     * the collection of Permission objects held in this PermissionCollection.\n     *\n     * @param permission the Permission object to compare.\n     *\n     * @return true if \"permission\" is implied by the  permissions in\n     * the collection, false if not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract Enumeration<Permission> elements()",
    "returnType" : "Enumeration<Permission>",
    "comment" : "\n     * Returns an enumeration of all the Permission objects in the collection.\n     *\n     * @return an enumeration of all the Permissions.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setReadOnly()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isReadOnly()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Stream<Permission> elementsAsStream()",
    "returnType" : "Stream<Permission>",
    "comment" : "\n     * Returns a stream of all the Permission objects in the collection.\n     *\n     * <p> The collection should not be modified (see {@link #add}) during the\n     * execution of the terminal stream operation. Otherwise, the result of the\n     * terminal stream operation is undefined.\n     *\n     * @implSpec\n     * The default implementation creates a stream whose source is derived from\n     * the enumeration returned from a call to {@link #elements()}.\n     *\n     * @return a stream of all the Permissions.\n     * @since 9\n     *\n     * @hide\n     ",
    "links" : [ "#elements()", "#add" ]
  } ],
  "methodNames" : [ "public abstract void add(Permission permission)", "public abstract boolean implies(Permission permission)", "public abstract Enumeration<Permission> elements()", "public void setReadOnly()", "public boolean isReadOnly()", "public Stream<Permission> elementsAsStream()" ],
  "variableNames" : [ ]
}