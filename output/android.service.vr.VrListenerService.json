{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/vr/VrListenerService.java",
  "packageName" : "android.service.vr",
  "className" : "VrListenerService",
  "comment" : "\n * A service that is bound from the system while running in virtual reality (VR) mode.\n *\n * <p>To extend this class, you must declare the service in your manifest file with\n * the {@link android.Manifest.permission#BIND_VR_LISTENER_SERVICE} permission\n * and include an intent filter with the {@link #SERVICE_INTERFACE} action. For example:</p>\n * <pre>\n * &lt;service android:name=\".VrListener\"\n *          android:label=\"&#64;string/service_name\"\n *          android:permission=\"android.permission.BIND_VR_LISTENER_SERVICE\">\n *     &lt;intent-filter>\n *         &lt;action android:name=\"android.service.vr.VrListenerService\" />\n *     &lt;/intent-filter>\n * &lt;/service>\n * </pre>\n *\n * <p>This service is bound when the system enters VR mode and is unbound when the system leaves VR\n * mode.</p>\n * <p>The system will enter VR mode when an application that has previously called\n * {@link android.app.Activity#setVrModeEnabled} gains user focus.  The system will only start this\n * service if the VR application has specifically targeted this service by specifying\n * its {@link ComponentName} in the call to {@link android.app.Activity#setVrModeEnabled} and if\n * this service is installed and enabled in the current user's settings.</p>\n *\n * @see android.provider.Settings#ACTION_VR_LISTENER_SETTINGS\n * @see android.app.Activity#setVrModeEnabled\n * @see android.R.attr#enableVrMode\n ",
  "links" : [ "#SERVICE_INTERFACE", "android.content.ComponentName", "android.app.Activity#setVrModeEnabled", "android.Manifest.permission#BIND_VR_LISTENER_SERVICE" ],
  "variables" : [ {
    "name" : "SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The {@link Intent} that must be declared as handled by the service.\n     ",
    "links" : [ "android.content.Intent" ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_ON_CURRENT_VR_ACTIVITY_CHANGED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "IVrListener.Stub",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public IBinder onBind(Intent intent)",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onCurrentVrActivityChanged(ComponentName component)",
    "returnType" : "void",
    "comment" : "\n     * Called when the current activity using VR mode has changed.\n     *\n     * <p>This will be called when this service is initially bound, but is not\n     * guaranteed to be called before onUnbind.  In general, this is intended to be used to\n     * determine when user focus has transitioned between two VR activities.  If both activities\n     * have declared {@link android.R.attr#enableVrMode} with this service (and this\n     * service is present and enabled), this service will not be unbound during the activity\n     * transition.</p>\n     *\n     * @param component the {@link ComponentName} of the VR activity that the system has\n     *    switched to, or null if the system is displaying a 2D activity in VR compatibility mode.\n     *\n     * @see android.app.Activity#setVrModeEnabled\n     * @see android.R.attr#enableVrMode\n     ",
    "links" : [ "android.content.ComponentName", "android.R.attr#enableVrMode" ]
  }, {
    "name" : "public void onCurrentVrActivityChanged(ComponentName component, boolean running2dInVr, int pid)",
    "returnType" : "void",
    "comment" : "\n     * An extended version of onCurrentVrActivityChanged\n     *\n     * <p>This will be called when this service is initially bound, but is not\n     * guaranteed to be called before onUnbind.  In general, this is intended to be used to\n     * determine when user focus has transitioned between two VR activities, or between a\n     * VR activity and a 2D activity. This should be overridden instead of the above\n     * onCurrentVrActivityChanged as that version is deprecated.</p>\n     *\n     * @param component the {@link ComponentName} of the VR activity or the 2D intent.\n     * @param running2dInVr true if the component is a 2D component.\n     * @param pid the process the component is running in.\n     *\n     * @see android.app.Activity#setVrModeEnabled\n     * @see android.R.attr#enableVrMode\n     * @hide\n     ",
    "links" : [ "android.content.ComponentName" ]
  }, {
    "name" : "public static final boolean isVrModePackageEnabled(@NonNull Context context, @NonNull ComponentName requestedComponent)",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the given component is enabled in user settings.\n     *\n     * <p>If this component is not enabled in the user's settings, it will not be started when\n     * the system enters VR mode.  The user interface for enabling VrListenerService components\n     * can be started by sending the {@link android.provider.Settings#ACTION_VR_LISTENER_SETTINGS}\n     * intent.</p>\n     *\n     * @param context the {@link Context} to use for looking up the requested component.\n     * @param requestedComponent the name of the component that implements\n     * {@link android.service.vr.VrListenerService} to check.\n     *\n     * @return {@code true} if this component is enabled in settings.\n     *\n     * @see android.provider.Settings#ACTION_VR_LISTENER_SETTINGS\n     ",
    "links" : [ "android.content.Context", "android.service.vr.VrListenerService", "android.provider.Settings#ACTION_VR_LISTENER_SETTINGS" ]
  } ],
  "methodNames" : [ "public IBinder onBind(Intent intent)", "public void onCurrentVrActivityChanged(ComponentName component)", "public void onCurrentVrActivityChanged(ComponentName component, boolean running2dInVr, int pid)", "public static final boolean isVrModePackageEnabled(@NonNull Context context, @NonNull ComponentName requestedComponent)" ],
  "variableNames" : [ "SERVICE_INTERFACE", "mHandler", "MSG_ON_CURRENT_VR_ACTIVITY_CHANGED", "mBinder" ]
}