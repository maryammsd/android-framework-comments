{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/compat/ApiHelperForO.java",
  "packageName" : "org.chromium.base.compat",
  "className" : "ApiHelperForO",
  "comment" : "\n * Utility class to use new APIs that were added in O (API level 26). These need to exist in a\n * separate class so that Android framework can successfully verify classes without\n * encountering the new APIs.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static boolean isWideColorGamut(Display display)",
    "returnType" : "boolean",
    "comment" : " See {@link Display#isWideColorGamut() }. ",
    "links" : [ "android.view.Display#isWideColorGamut()" ]
  }, {
    "name" : "public static void setColorMode(Window window, int colorMode)",
    "returnType" : "void",
    "comment" : " See {@link Window#setColorMode(int) }. ",
    "links" : [ "android.view.Window#setColorMode(int)" ]
  }, {
    "name" : "public static boolean isScreenWideColorGamut(Configuration configuration)",
    "returnType" : "boolean",
    "comment" : " See {@link Configuration#isScreenWideColorGamut() }. ",
    "links" : [ "android.content.res.Configuration#isScreenWideColorGamut()" ]
  }, {
    "name" : "public static boolean isInstantApp(PackageManager packageManager)",
    "returnType" : "boolean",
    "comment" : " See {@link PackageManager#isInstantApp() }. ",
    "links" : [ "android.content.pm.PackageManager#isInstantApp()" ]
  }, {
    "name" : "public static void setDefaultFocusHighlightEnabled(View view, boolean enabled)",
    "returnType" : "void",
    "comment" : " See {@link View#setDefaultFocusHighlightEnabled(boolean) }. ",
    "links" : [ "android.view.View#setDefaultFocusHighlightEnabled(boolean)" ]
  }, {
    "name" : "public static long getTimestamp(ClipDescription clipDescription)",
    "returnType" : "long",
    "comment" : " See {@link ClipDescription#getTimestamp()}. ",
    "links" : [ "android.content.ClipDescription#getTimestamp()" ]
  }, {
    "name" : "public static Context createContextForSplit(Context context, String name) throws PackageManager.NameNotFoundException",
    "returnType" : "Context",
    "comment" : "\n     * See {@link Context.createContextForSplit(String) }. Be careful about adding new uses of\n     * this, most split Contexts should be created through {@link\n     * BundleUtils.createIsolatedSplitContext(Context, String) since it has workarounds for\n     * framework bugs.\n     ",
    "links" : [ "BundleUtils.createIsolatedSplitContext(Context", "Context.createContextForSplit(String)" ]
  }, {
    "name" : "public static void cancelAutofillSession(Activity activity)",
    "returnType" : "void",
    "comment" : " See {@link AutofillManager#cancel()}. ",
    "links" : [ "android.view.autofill.AutofillManager#cancel()" ]
  }, {
    "name" : "public static void notifyValueChangedForAutofill(View view)",
    "returnType" : "void",
    "comment" : " See {@link AutofillManager#notifyValueChanged(View)}. ",
    "links" : [ "android.view.autofill.AutofillManager#notifyValueChanged(View)" ]
  }, {
    "name" : "public static boolean areAnimatorsEnabled()",
    "returnType" : "boolean",
    "comment" : " See {@link ValueAnimator#areAnimatorsEnabled()}. ",
    "links" : [ "android.animation.ValueAnimator#areAnimatorsEnabled()" ]
  }, {
    "name" : "public static Notification.Builder setChannelId(Notification.Builder builder, String channelId)",
    "returnType" : "Notification.Builder",
    "comment" : " See {@link Notification.Builder#setChannelId(String)}. ",
    "links" : [ "Notification.Builder#setChannelId(String)" ]
  }, {
    "name" : "public static Notification.Builder setTimeoutAfter(Notification.Builder builder, long ms)",
    "returnType" : "Notification.Builder",
    "comment" : " See {@link Notification.Builder#setTimeoutAfter(long)}. ",
    "links" : [ "Notification.Builder#setTimeoutAfter(long)" ]
  }, {
    "name" : "public static void registerDefaultNetworkCallback(ConnectivityManager connectivityManager, NetworkCallback networkCallback, Handler handler)",
    "returnType" : "void",
    "comment" : "\n     * See {@link\n     * ConnectivityManager#registerDefaultNetworkCallback(ConnectivityManager.NetworkCallback,\n     * Handler) }.\n     ",
    "links" : [ "android.net.ConnectivityManager#registerDefaultNetworkCallback(ConnectivityManager.NetworkCallback" ]
  }, {
    "name" : "public static String getNotificationChannelId(Notification notification)",
    "returnType" : "String",
    "comment" : " See {@link Notification#getChannelId()}. ",
    "links" : [ "android.app.Notification#getChannelId()" ]
  }, {
    "name" : "public static Intent registerReceiver(Context context, BroadcastReceiver receiver, IntentFilter filter, String permission, Handler scheduler, int flags)",
    "returnType" : "Intent",
    "comment" : "\n     * See {@link Context#registerReceiver(BroadcastReceiver, IntentFilter, String, Handler, int)}\n     ",
    "links" : [ "android.content.Context#registerReceiver(BroadcastReceiver" ]
  }, {
    "name" : "public static void addItem(ClipData clipData, ContentResolver contentResolver, Item item)",
    "returnType" : "void",
    "comment" : " See {@link ClipData#addItem(ContentResolver, Item)}. ",
    "links" : [ "android.content.ClipData#addItem(ContentResolver" ]
  } ],
  "methodNames" : [ "public static boolean isWideColorGamut(Display display)", "public static void setColorMode(Window window, int colorMode)", "public static boolean isScreenWideColorGamut(Configuration configuration)", "public static boolean isInstantApp(PackageManager packageManager)", "public static void setDefaultFocusHighlightEnabled(View view, boolean enabled)", "public static long getTimestamp(ClipDescription clipDescription)", "public static Context createContextForSplit(Context context, String name) throws PackageManager.NameNotFoundException", "public static void cancelAutofillSession(Activity activity)", "public static void notifyValueChangedForAutofill(View view)", "public static boolean areAnimatorsEnabled()", "public static Notification.Builder setChannelId(Notification.Builder builder, String channelId)", "public static Notification.Builder setTimeoutAfter(Notification.Builder builder, long ms)", "public static void registerDefaultNetworkCallback(ConnectivityManager connectivityManager, NetworkCallback networkCallback, Handler handler)", "public static String getNotificationChannelId(Notification notification)", "public static Intent registerReceiver(Context context, BroadcastReceiver receiver, IntentFilter filter, String permission, Handler scheduler, int flags)", "public static void addItem(ClipData clipData, ContentResolver contentResolver, Item item)" ],
  "variableNames" : [ ]
}