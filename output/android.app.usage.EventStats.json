{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/usage/EventStats.java",
  "packageName" : "android.app.usage",
  "className" : "EventStats",
  "comment" : "\n * Contains usage statistics for an event type for a specific\n * time range.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mEventType",
    "type" : "int",
    "comment" : "\n     * {@hide}\n     ",
    "links" : [ ]
  }, {
    "name" : "mBeginTimeStamp",
    "type" : "long",
    "comment" : "\n     * {@hide}\n     ",
    "links" : [ ]
  }, {
    "name" : "mEndTimeStamp",
    "type" : "long",
    "comment" : "\n     * {@hide}\n     ",
    "links" : [ ]
  }, {
    "name" : "mLastEventTime",
    "type" : "long",
    "comment" : "\n     * {@hide}\n     ",
    "links" : [ ]
  }, {
    "name" : "mTotalTime",
    "type" : "long",
    "comment" : "\n     * {@hide}\n     ",
    "links" : [ ]
  }, {
    "name" : "mCount",
    "type" : "int",
    "comment" : "\n     * {@hide}\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<EventStats>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getEventType()",
    "returnType" : "int",
    "comment" : "\n     * Return the type of event this is usage for.  May be one of the event\n     * constants in {@link UsageEvents.Event}.\n     ",
    "links" : [ "UsageEvents.Event" ]
  }, {
    "name" : "public long getFirstTimeStamp()",
    "returnType" : "long",
    "comment" : "\n     * Get the beginning of the time range this {@link android.app.usage.EventStats} represents,\n     * measured in milliseconds since the epoch.\n     * <p/>\n     * See {@link System#currentTimeMillis()}.\n     ",
    "links" : [ "#currentTimeMillis()", "android.app.usage.EventStats" ]
  }, {
    "name" : "public long getLastTimeStamp()",
    "returnType" : "long",
    "comment" : "\n     * Get the end of the time range this {@link android.app.usage.EventStats} represents,\n     * measured in milliseconds since the epoch.\n     * <p/>\n     * See {@link System#currentTimeMillis()}.\n     ",
    "links" : [ "#currentTimeMillis()", "android.app.usage.EventStats" ]
  }, {
    "name" : "public long getLastEventTime()",
    "returnType" : "long",
    "comment" : "\n     * Get the last time this event triggered, measured in milliseconds since the epoch.\n     * <p/>\n     * See {@link System#currentTimeMillis()}.\n     ",
    "links" : [ "#currentTimeMillis()" ]
  }, {
    "name" : "public int getCount()",
    "returnType" : "int",
    "comment" : "\n     * Return the number of times that this event occurred over the interval.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTotalTime()",
    "returnType" : "long",
    "comment" : "\n     * Get the total time this event was active, measured in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void add(EventStats right)",
    "returnType" : "void",
    "comment" : "\n     * Add the statistics from the right {@link EventStats} to the left. The event type for\n     * both {@link UsageStats} objects must be the same.\n     * @param right The {@link EventStats} object to merge into this one.\n     * @throws java.lang.IllegalArgumentException if the event types of the two\n     *         {@link UsageStats} objects are different.\n     ",
    "links" : [ "android.app.usage.UsageStats", "android.app.usage.EventStats" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getEventType()", "public long getFirstTimeStamp()", "public long getLastTimeStamp()", "public long getLastEventTime()", "public int getCount()", "public long getTotalTime()", "public void add(EventStats right)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ],
  "variableNames" : [ "mEventType", "mBeginTimeStamp", "mEndTimeStamp", "mLastEventTime", "mTotalTime", "mCount", "CREATOR" ]
}