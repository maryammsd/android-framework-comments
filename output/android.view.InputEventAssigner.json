{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/InputEventAssigner.java",
  "packageName" : "android.view",
  "className" : "InputEventAssigner",
  "comment" : "\n * Process input events and assign input event id to a specific frame.\n *\n * The assigned input event id is determined by where the current gesture is relative to the vsync.\n * In the middle of the gesture (we already processed some input events, and already received at\n * least 1 vsync), the latest InputEvent is assigned to the next frame.\n * If a gesture just started, then the ACTION_DOWN event will be assigned to the next frame.\n *\n * Consider the following sequence:\n * DOWN -> VSYNC 1 -> MOVE 1 -> MOVE 2 -> VSYNC 2.\n *\n * For VSYNC 1, we will assign the \"DOWN\" input event.\n * For VSYNC 2, we will assign the \"MOVE 2\" input event.\n *\n * Consider another sequence:\n * DOWN -> MOVE 1 -> MOVE 2 -> VSYNC 1 -> MOVE 3 -> VSYNC 2.\n *\n * For VSYNC 1, we will still assign the \"DOWN\" input event. That means that \"MOVE 1\" and \"MOVE 2\"\n * events are not attributed to any frame.\n * For VSYNC 2, the \"MOVE 3\" input event will be assigned.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasUnprocessedDown",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDownEventId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void notifyFrameProcessed()",
    "returnType" : "void",
    "comment" : "\n     * Notify InputEventAssigner that a frame has been processed. We no longer need to keep track of\n     * the DOWN event because a frame has already been produced for it.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int processEvent(InputEvent event)",
    "returnType" : "int",
    "comment" : "\n     * Process the provided input event to determine which event id to assign to the current frame.\n     * @param event the input event currently being processed\n     * @return the id of the input event to use for the current frame\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void notifyFrameProcessed()", "public int processEvent(InputEvent event)" ],
  "variableNames" : [ "TAG", "mHasUnprocessedDown", "mDownEventId" ]
}