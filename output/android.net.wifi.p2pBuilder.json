{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/p2p/WifiP2pConfig.java",
  "packageName" : "android.net.wifi.p2p",
  "className" : "Builder",
  "comment" : "\n     * Builder used to build {@link WifiP2pConfig} objects for\n     * creating or joining a group.\n     ",
  "variables" : [ {
    "name" : "MAC_ANY_ADDRESS",
    "type" : "MacAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_SSID_BYTES",
    "type" : "int",
    "comment" : "\n         * Maximum number of bytes allowed for a SSID.\n         ",
    "links" : [ ]
  }, {
    "name" : "mDeviceAddress",
    "type" : "MacAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPassphrase",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGroupOperatingBand",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGroupOperatingFrequency",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setDeviceAddress(@Nullable MacAddress deviceAddress)",
    "returnType" : "Builder",
    "comment" : "\n         * Specify the peer's MAC address. If not set, the device will\n         * try to find a peer whose SSID matches the network name as\n         * specified by {@link #setNetworkName(String)}. Specifying null will\n         * reset the peer's MAC address to \"02:00:00:00:00:00\".\n         * <p>\n         *     Optional. \"02:00:00:00:00:00\" by default.\n         *\n         * @param deviceAddress the peer's MAC address.\n         * @return The builder to facilitate chaining\n         *         {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ "#setNetworkName" ]
  }, {
    "name" : "public Builder setNetworkName(@NonNull String networkName)",
    "returnType" : "Builder",
    "comment" : "\n         * Specify the network name, a.k.a. group name,\n         * for creating or joining a group.\n         * <p>\n         * A network name shall begin with \"DIRECT-xy\". x and y are selected\n         * from the following character set: upper case letters, lower case\n         * letters and numbers. Any byte values allowed for an SSID according to\n         * IEEE802.11-2012 [1] may be included after the string \"DIRECT-xy\"\n         * (including none).\n         * <p>\n         *     Must be called - an empty network name or an network name\n         *     not conforming to the P2P Group ID naming rule is not valid.\n         *\n         * @param networkName network name of a group.\n         * @return The builder to facilitate chaining\n         *         {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPassphrase(@NonNull String passphrase)",
    "returnType" : "Builder",
    "comment" : "\n         * Specify the passphrase for creating or joining a group.\n         * <p>\n         * The passphrase must be an ASCII string whose length is between 8\n         * and 63.\n         * <p>\n         *     Must be called - an empty passphrase is not valid.\n         *\n         * @param passphrase the passphrase of a group.\n         * @return The builder to facilitate chaining\n         *         {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setGroupOperatingBand(@GroupOperatingBandType int band)",
    "returnType" : "Builder",
    "comment" : "\n         * Specify the band to use for creating the group or joining the group. The band should\n         * be {@link #GROUP_OWNER_BAND_2GHZ}, {@link #GROUP_OWNER_BAND_5GHZ} or\n         * {@link #GROUP_OWNER_BAND_AUTO}.\n         * <p>\n         * When creating a group as Group Owner using {@link\n         * WifiP2pManager#createGroup(WifiP2pManager.Channel,\n         * WifiP2pConfig, WifiP2pManager.ActionListener)},\n         * specifying {@link #GROUP_OWNER_BAND_AUTO} allows the system to pick the operating\n         * frequency from all supported bands.\n         * Specifying {@link #GROUP_OWNER_BAND_2GHZ} or {@link #GROUP_OWNER_BAND_5GHZ}\n         * only allows the system to pick the operating frequency in the specified band.\n         * If the Group Owner cannot create a group in the specified band, the operation will fail.\n         * <p>\n         * When joining a group as Group Client using {@link\n         * WifiP2pManager#connect(WifiP2pManager.Channel, WifiP2pConfig,\n         * WifiP2pManager.ActionListener)},\n         * specifying {@link #GROUP_OWNER_BAND_AUTO} allows the system to scan all supported\n         * frequencies to find the desired group. Specifying {@link #GROUP_OWNER_BAND_2GHZ} or\n         * {@link #GROUP_OWNER_BAND_5GHZ} only allows the system to scan the specified band.\n         * <p>\n         *     {@link #setGroupOperatingBand(int)} and {@link #setGroupOperatingFrequency(int)} are\n         *     mutually exclusive. Setting operating band and frequency both is invalid.\n         * <p>\n         *     Optional. {@link #GROUP_OWNER_BAND_AUTO} by default.\n         *\n         * @param band the operating band of the group.\n         *             This should be one of {@link #GROUP_OWNER_BAND_AUTO},\n         *             {@link #GROUP_OWNER_BAND_2GHZ}, {@link #GROUP_OWNER_BAND_5GHZ}.\n         * @return The builder to facilitate chaining\n         *         {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ "#GROUP_OWNER_BAND_2GHZ", "#GROUP_OWNER_BAND_5GHZ", "#GROUP_OWNER_BAND_AUTO", "#GROUP_OWNER_BAND_AUTO", "#GROUP_OWNER_BAND_2GHZ", "#GROUP_OWNER_BAND_5GHZ", "#GROUP_OWNER_BAND_AUTO", "#GROUP_OWNER_BAND_2GHZ", "#GROUP_OWNER_BAND_5GHZ", "#setGroupOperatingBand", "#setGroupOperatingFrequency", "#GROUP_OWNER_BAND_AUTO", "#GROUP_OWNER_BAND_AUTO", "#GROUP_OWNER_BAND_2GHZ", "#GROUP_OWNER_BAND_5GHZ" ]
  }, {
    "name" : "public Builder setGroupOperatingFrequency(int frequency)",
    "returnType" : "Builder",
    "comment" : "\n         * Specify the frequency, in MHz, to use for creating the group or joining the group.\n         * <p>\n         * When creating a group as Group Owner using {@link WifiP2pManager#createGroup(\n         * WifiP2pManager.Channel, WifiP2pConfig, WifiP2pManager.ActionListener)},\n         * specifying a frequency only allows the system to pick the specified frequency.\n         * If the Group Owner cannot create a group at the specified frequency,\n         * the operation will fail.\n         * When not specifying a frequency, it allows the system to pick operating frequency\n         * from all supported bands.\n         * <p>\n         * When joining a group as Group Client using {@link WifiP2pManager#connect(\n         * WifiP2pManager.Channel, WifiP2pConfig, WifiP2pManager.ActionListener)},\n         * specifying a frequency only allows the system to scan the specified frequency.\n         * If the frequency is not supported or invalid, the operation will fail.\n         * When not specifying a frequency, it allows the system to scan all supported\n         * frequencies to find the desired group.\n         * <p>\n         *     {@link #setGroupOperatingBand(int)} and {@link #setGroupOperatingFrequency(int)} are\n         *     mutually exclusive. Setting operating band and frequency both is invalid.\n         * <p>\n         *     Optional. 0 by default.\n         *\n         * @param frequency the operating frequency of the group.\n         * @return The builder to facilitate chaining\n         *         {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ "WifiP2pManager#createGroup", "WifiP2pManager#connect", "#setGroupOperatingBand", "#setGroupOperatingFrequency" ]
  }, {
    "name" : "public Builder enablePersistentMode(boolean persistent)",
    "returnType" : "Builder",
    "comment" : "\n         * Specify that the group configuration be persisted (i.e. saved).\n         * By default the group configuration will not be saved.\n         * <p>\n         *     Optional. false by default.\n         *\n         * @param persistent is this group persistent group.\n         * @return The builder to facilitate chaining\n         *         {@code builder.setXXX(..).setXXX(..)}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public WifiP2pConfig build()",
    "returnType" : "WifiP2pConfig",
    "comment" : "\n         * Build {@link WifiP2pConfig} given the current requests made on the builder.\n         * @return {@link WifiP2pConfig} constructed based on builder method calls.\n         ",
    "links" : [ "WifiP2pConfig", "WifiP2pConfig" ]
  } ],
  "variableNames" : [ "MAC_ANY_ADDRESS", "MAX_SSID_BYTES", "mDeviceAddress", "mNetworkName", "mPassphrase", "mGroupOperatingBand", "mGroupOperatingFrequency", "mNetId" ],
  "methodNames" : [ "public Builder setDeviceAddress(@Nullable MacAddress deviceAddress)", "public Builder setNetworkName(@NonNull String networkName)", "public Builder setPassphrase(@NonNull String passphrase)", "public Builder setGroupOperatingBand(@GroupOperatingBandType int band)", "public Builder setGroupOperatingFrequency(int frequency)", "public Builder enablePersistentMode(boolean persistent)", "public WifiP2pConfig build()" ]
}