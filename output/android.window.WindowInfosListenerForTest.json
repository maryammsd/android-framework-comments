{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/WindowInfosListenerForTest.java",
  "packageName" : "android.window",
  "className" : "WindowInfosListenerForTest",
  "comment" : "\n * Wrapper class to provide access to WindowInfosListener within tests.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListeners",
    "type" : "ArrayMap<Consumer<List<WindowInfo>>, WindowInfosListener>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void addWindowInfosListener(@NonNull Consumer<List<WindowInfo>> consumer)",
    "returnType" : "void",
    "comment" : "\n     * Register a listener that is called when the system's list of visible windows has changes in\n     * position or visibility.\n     *\n     * @param consumer Consumer that is called with reverse Z ordered lists of WindowInfo instances\n     *                 where the first value is the topmost window.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeWindowInfosListener(@NonNull Consumer<List<WindowInfo>> consumer)",
    "returnType" : "void",
    "comment" : "\n     * Unregisters the listener.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static List<WindowInfo> buildWindowInfos(InputWindowHandle[] windowHandles, WindowInfosListener.DisplayInfo[] displayInfos)",
    "returnType" : "List<WindowInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void addWindowInfosListener(@NonNull Consumer<List<WindowInfo>> consumer)", "public void removeWindowInfosListener(@NonNull Consumer<List<WindowInfo>> consumer)", "private static List<WindowInfo> buildWindowInfos(InputWindowHandle[] windowHandles, WindowInfosListener.DisplayInfo[] displayInfos)" ],
  "variableNames" : [ "TAG", "mListeners" ]
}