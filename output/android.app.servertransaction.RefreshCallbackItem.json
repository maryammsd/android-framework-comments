{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/servertransaction/RefreshCallbackItem.java",
  "packageName" : "android.app.servertransaction",
  "className" : "RefreshCallbackItem",
  "comment" : "\n * Callback that allows to {@link TransactionExecutor#cycleToPath} to {@link ON_PAUSE} or\n * {@link ON_STOP} in {@link TransactionExecutor#executeCallbacks} for activity \"refresh\" flow\n * that goes through \"paused -> resumed\" or \"stopped -> resumed\" cycle.\n *\n * <p>This is used in combination with {@link com.android.server.wm.DisplayRotationCompatPolicy}\n * for camera compatibility treatment that handles orientation mismatch between camera buffers and\n * an app window. This allows to clear cached values in apps (e.g. display or camera rotation) that\n * influence camera preview and can lead to sideways or stretching issues.\n *\n * @hide\n ",
  "links" : [ "android.app.servertransaction.ActivityLifecycleItem.ON_PAUSE", "com.android.server.wm.DisplayRotationCompatPolicy", "android.app.servertransaction.ActivityLifecycleItem.ON_STOP", "android.app.servertransaction.TransactionExecutor#executeCallbacks", "android.app.servertransaction.TransactionExecutor#cycleToPath" ],
  "variables" : [ {
    "name" : "mPostExecutionState",
    "type" : "int",
    "comment" : " \"paused -> resumed\" cycle.",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<RefreshCallbackItem>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void execute(@NonNull ClientTransactionHandler client, @NonNull ActivityClientRecord r, @NonNull PendingTransactionActions pendingActions)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void postExecute(@NonNull ClientTransactionHandler client, @NonNull PendingTransactionActions pendingActions)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getPostExecutionState()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean shouldHaveDefinedPreExecutionState()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void recycle()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static RefreshCallbackItem obtain(@NonNull IBinder activityToken, @LifecycleState int postExecutionState)",
    "returnType" : "RefreshCallbackItem",
    "comment" : "\n    * Obtain an instance initialized with provided params.\n    * @param postExecutionState indicating whether refresh should happen using the\n    *        \"stopped -> resumed\" cycle or \"paused -> resumed\" cycle.\n    ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void execute(@NonNull ClientTransactionHandler client, @NonNull ActivityClientRecord r, @NonNull PendingTransactionActions pendingActions)", "public void postExecute(@NonNull ClientTransactionHandler client, @NonNull PendingTransactionActions pendingActions)", "public int getPostExecutionState()", " boolean shouldHaveDefinedPreExecutionState()", "public void recycle()", "public static RefreshCallbackItem obtain(@NonNull IBinder activityToken, @LifecycleState int postExecutionState)", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "mPostExecutionState", "CREATOR" ]
}