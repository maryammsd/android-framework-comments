{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "DataUsageFeedback",
  "comment" : "\n     * <p>\n     * API allowing applications to send usage information for each {@link Data} row to the\n     * Contacts Provider.  Applications can also clear all usage information.\n     * </p>\n     * <p class=\"caution\"><b>Caution: </b>If you publish your app to the Google Play Store,\n     * this field is obsolete, regardless of Android version. For more information, see the\n     * <a href=\"/guide/topics/providers/contacts-provider#ObsoleteData\">Contacts Provider</a>\n     * page.</p>\n     * <p>\n     * With the feedback, Contacts Provider may return more contextually appropriate results for\n     * Data listing, typically supplied with\n     * {@link ContactsContract.Contacts#CONTENT_FILTER_URI},\n     * {@link ContactsContract.CommonDataKinds.Email#CONTENT_FILTER_URI},\n     * {@link ContactsContract.CommonDataKinds.Phone#CONTENT_FILTER_URI}, and users can benefit\n     * from better ranked (sorted) lists in applications that show auto-complete list.\n     * </p>\n     * <p>\n     * There is no guarantee for how this feedback is used, or even whether it is used at all.\n     * The ranking algorithm will make best efforts to use the feedback data, but the exact\n     * implementation, the storage data structures as well as the resulting sort order is device\n     * and version specific and can change over time.\n     * </p>\n     * <p>\n     * When updating usage information, users of this API need to use\n     * {@link ContentResolver#update(Uri, ContentValues, String, String[])} with a Uri constructed\n     * from {@link DataUsageFeedback#FEEDBACK_URI}. The Uri must contain one or more data id(s) as\n     * its last path. They also need to append a query parameter to the Uri, to specify the type of\n     * the communication, which enables the Contacts Provider to differentiate between kinds of\n     * interactions using the same contact data field (for example a phone number can be used to\n     * make phone calls or send SMS).\n     * </p>\n     * <p>\n     * Selection and selectionArgs are ignored and must be set to null. To get data ids,\n     * you may need to call {@link ContentResolver#query(Uri, String[], String, String[], String)}\n     * toward {@link Data#CONTENT_URI}.\n     * </p>\n     * <p>\n     * {@link ContentResolver#update(Uri, ContentValues, String, String[])} returns a positive\n     * integer when successful, and returns 0 if no contact with that id was found.\n     * </p>\n     * <p>\n     * Example:\n     * <pre>\n     * Uri uri = DataUsageFeedback.FEEDBACK_URI.buildUpon()\n     *         .appendPath(TextUtils.join(\",\", dataIds))\n     *         .appendQueryParameter(DataUsageFeedback.USAGE_TYPE,\n     *                 DataUsageFeedback.USAGE_TYPE_CALL)\n     *         .build();\n     * boolean successful = resolver.update(uri, new ContentValues(), null, null) > 0;\n     * </pre>\n     * </p>\n     * <p>\n     * Applications can also clear all usage information with:\n     * <pre>\n     * boolean successful = resolver.delete(DataUsageFeedback.DELETE_USAGE_URI, null, null) > 0;\n     * </pre>\n     * </p>\n     *\n     * @deprecated Contacts affinity information is no longer supported as of\n     * Android version {@link android.os.Build.VERSION_CODES#Q}.\n     * Both update and delete calls are always ignored.\n     ",
  "variables" : [ {
    "name" : "FEEDBACK_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URI for sending usage feedback.\n         * Must be used with {@link ContentResolver#update(Uri, ContentValues, String, String[])}.\n         ",
    "links" : [ "android.content.ContentResolver#update(Uri" ]
  }, {
    "name" : "DELETE_USAGE_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URI for deleting all usage information.\n         * Must be used with {@link ContentResolver#delete(Uri, String, String[])}.\n         * The {@code where} and {@code selectionArgs} parameters are ignored.\n         ",
    "links" : [ "android.content.ContentResolver#delete(Uri" ]
  }, {
    "name" : "USAGE_TYPE",
    "type" : "String",
    "comment" : "\n         * <p>\n         * Name for query parameter specifying the type of data usage.\n         * </p>\n         ",
    "links" : [ ]
  }, {
    "name" : "USAGE_TYPE_CALL",
    "type" : "String",
    "comment" : "\n         * <p>\n         * Type of usage for voice interaction, which includes phone call, voice chat, and\n         * video chat.\n         * </p>\n         ",
    "links" : [ ]
  }, {
    "name" : "USAGE_TYPE_LONG_TEXT",
    "type" : "String",
    "comment" : "\n         * <p>\n         * Type of usage for text interaction involving longer messages, which includes email.\n         * </p>\n         ",
    "links" : [ ]
  }, {
    "name" : "USAGE_TYPE_SHORT_TEXT",
    "type" : "String",
    "comment" : "\n         * <p>\n         * Type of usage for text interaction involving shorter messages, which includes SMS,\n         * text chat with email addresses.\n         * </p>\n         ",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "FEEDBACK_URI", "DELETE_USAGE_URI", "USAGE_TYPE", "USAGE_TYPE_CALL", "USAGE_TYPE_LONG_TEXT", "USAGE_TYPE_SHORT_TEXT" ],
  "methodNames" : [ ]
}