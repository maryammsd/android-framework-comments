{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/ForegroundServiceDelegationOptions.java",
  "packageName" : "android.app",
  "className" : "ForegroundServiceDelegationOptions",
  "comment" : "\n * A service module such as MediaSessionService, VOIP, Camera, Microphone, Location can ask\n * ActivityManagerService to start a foreground service delegate on behalf of the actual app,\n * by which the client app's process state can be promoted to FOREGROUND_SERVICE process state which\n * is higher than the app's actual process state if the app is in the background. This can help to\n * keep the app in the memory and extra run-time.\n * The app does not need to define an actual service component nor add it into manifest file.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DELEGATION_SERVICE_DEFAULT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_DATA_SYNC",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_MEDIA_PLAYBACK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_PHONE_CALL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_LOCATION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_CONNECTED_DEVICE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_MEDIA_PROJECTION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_CAMERA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_MICROPHONE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_HEALTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_REMOTE_MESSAGING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_SYSTEM_EXEMPTED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DELEGATION_SERVICE_SPECIAL_USE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientPid",
    "type" : "int",
    "comment" : " The actual app's PID",
    "links" : [ ]
  }, {
    "name" : "mClientUid",
    "type" : "int",
    "comment" : " The actual app's UID",
    "links" : [ ]
  }, {
    "name" : "mClientPackageName",
    "type" : "String",
    "comment" : " The actual app's package name",
    "links" : [ ]
  }, {
    "name" : "mClientAppThread",
    "type" : "IApplicationThread",
    "comment" : " The actual app's app thread",
    "links" : [ ]
  }, {
    "name" : "mSticky",
    "type" : "boolean",
    "comment" : " Is it a sticky service",
    "links" : [ ]
  }, {
    "name" : "mClientInstanceName",
    "type" : "String",
    "comment" : " The delegation service's instance name which is to identify the delegate.",
    "links" : [ ]
  }, {
    "name" : "mForegroundServiceTypes",
    "type" : "int",
    "comment" : " The foreground service types it consists of.",
    "links" : [ ]
  }, {
    "name" : "mDelegationService",
    "type" : "int",
    "comment" : "\n     * The service's name such as MediaSessionService, VOIP, Camera, Microphone, Location. This is\n     * the internal module's name which actually starts the FGS delegate on behalf of the client\n     * app.\n     ",
    "links" : [ ]
  }, {
    "name" : "mClientNotificationId",
    "type" : "int",
    "comment" : "\n     * The optional notification Id of the foreground service delegation.\n     ",
    "links" : [ ]
  }, {
    "name" : "mClientNotification",
    "type" : "Notification",
    "comment" : "\n     * The optional notification of the foreground service delegation.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isSameDelegate(ForegroundServiceDelegationOptions that)",
    "returnType" : "boolean",
    "comment" : "\n     * A service delegates a foreground service state to a clientUID using a instanceName.\n     * This delegation is uniquely identified by\n     * mDelegationService/mClientUid/mClientPid/mClientInstanceName\n     ",
    "links" : [ ]
  }, {
    "name" : "public ComponentName getComponentName()",
    "returnType" : "ComponentName",
    "comment" : "\n     * Construct a component name for this delegate.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDescription()",
    "returnType" : "String",
    "comment" : "\n     * Get string description of this delegate options.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String serviceCodeToString(@DelegationService int serviceCode)",
    "returnType" : "String",
    "comment" : "\n     * Map the integer service code to string name.\n     * @param serviceCode\n     * @return\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isSameDelegate(ForegroundServiceDelegationOptions that)", "public ComponentName getComponentName()", "public String getDescription()", "public static String serviceCodeToString(@DelegationService int serviceCode)" ],
  "variableNames" : [ "DELEGATION_SERVICE_DEFAULT", "DELEGATION_SERVICE_DATA_SYNC", "DELEGATION_SERVICE_MEDIA_PLAYBACK", "DELEGATION_SERVICE_PHONE_CALL", "DELEGATION_SERVICE_LOCATION", "DELEGATION_SERVICE_CONNECTED_DEVICE", "DELEGATION_SERVICE_MEDIA_PROJECTION", "DELEGATION_SERVICE_CAMERA", "DELEGATION_SERVICE_MICROPHONE", "DELEGATION_SERVICE_HEALTH", "DELEGATION_SERVICE_REMOTE_MESSAGING", "DELEGATION_SERVICE_SYSTEM_EXEMPTED", "DELEGATION_SERVICE_SPECIAL_USE", "mClientPid", "mClientUid", "mClientPackageName", "mClientAppThread", "mSticky", "mClientInstanceName", "mForegroundServiceTypes", "mDelegationService", "mClientNotificationId", "mClientNotification" ]
}