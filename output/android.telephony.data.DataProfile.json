{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/data/DataProfile.java",
  "packageName" : "android.telephony.data",
  "className" : "DataProfile",
  "comment" : "\n * Description of a mobile data profile used for establishing data networks. The data profile\n * consist an {@link ApnSetting} which is needed for 2G/3G/4G networks bring up, and a\n * {@link TrafficDescriptor} contains additional information that can be used for 5G standalone\n * network bring up.\n *\n * @hide\n ",
  "links" : [ "android.telephony.data.ApnSetting", "android.telephony.data.TrafficDescriptor" ],
  "variables" : [ {
    "name" : "TYPE_COMMON",
    "type" : "int",
    "comment" : " Common data profile ",
    "links" : [ ]
  }, {
    "name" : "TYPE_3GPP",
    "type" : "int",
    "comment" : " 3GPP type data profile ",
    "links" : [ ]
  }, {
    "name" : "TYPE_3GPP2",
    "type" : "int",
    "comment" : " 3GPP2 type data profile ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mApnSetting",
    "type" : "ApnSetting",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTrafficDescriptor",
    "type" : "TrafficDescriptor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreferred",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSetupTimestamp",
    "type" : "long",
    "comment" : "\n     * The last timestamp of this data profile being used for data network setup. Never add this\n     * to {@link #equals(Object)} and {@link #hashCode()}.\n     ",
    "links" : [ "#equals(Object)", "#hashCode()" ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<DataProfile>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getProfileId()",
    "returnType" : "int",
    "comment" : "\n     * @return Id of the data profile.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#getProfileId()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getProfileId()" ]
  }, {
    "name" : "public String getApn()",
    "returnType" : "String",
    "comment" : "\n     * @return The APN (Access Point Name) to establish data connection. This is a string\n     * specifically defined by the carrier.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#getApnName()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getApnName()" ]
  }, {
    "name" : "public int getProtocolType()",
    "returnType" : "int",
    "comment" : "\n     * @return The connection protocol defined in 3GPP TS 27.007 section 10.1.1.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#getProtocol()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getProtocol()" ]
  }, {
    "name" : "public int getAuthType()",
    "returnType" : "int",
    "comment" : "\n     * @return The authentication protocol used for this PDP context.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#getAuthType()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getAuthType()" ]
  }, {
    "name" : "public String getUserName()",
    "returnType" : "String",
    "comment" : "\n     * @return The username for APN.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#getUser()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getUser()" ]
  }, {
    "name" : "public String getPassword()",
    "returnType" : "String",
    "comment" : "\n     * @return The password for APN.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#getPassword()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getPassword()" ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * @return The profile type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxConnectionsTime()",
    "returnType" : "int",
    "comment" : "\n     * @return The period in seconds to limit the maximum connections.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMaxConnections()",
    "returnType" : "int",
    "comment" : "\n     * @return The maximum connections allowed.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getWaitTime()",
    "returnType" : "int",
    "comment" : "\n     * @return The required wait time in seconds after a successful UE initiated disconnect of a\n     * given PDN connection before the device can send a new PDN connection request for that given\n     * PDN.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if the profile is enabled. If the profile only has a\n     * {@link TrafficDescriptor}, but no {@link ApnSetting}, then this profile is always enabled.\n     ",
    "links" : [ "android.telephony.data.TrafficDescriptor", "android.telephony.data.ApnSetting" ]
  }, {
    "name" : "public int getSupportedApnTypesBitmask()",
    "returnType" : "int",
    "comment" : "\n     * @return The supported APN types bitmask.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#getApnTypeBitmask()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getApnTypeBitmask()" ]
  }, {
    "name" : "public int getRoamingProtocolType()",
    "returnType" : "int",
    "comment" : "\n     * @return The connection protocol on roaming network defined in 3GPP TS 27.007 section 10.1.1.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#getRoamingProtocol()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getRoamingProtocol()" ]
  }, {
    "name" : "public int getBearerBitmask()",
    "returnType" : "int",
    "comment" : "\n     * @return The bearer bitmask indicating the applicable networks for this data profile.\n     * @deprecated use {@link #getApnSetting()} and {@link ApnSetting#getNetworkTypeBitmask()}\n     * instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getNetworkTypeBitmask()" ]
  }, {
    "name" : "public int getMtu()",
    "returnType" : "int",
    "comment" : "\n     * @return The maximum transmission unit (MTU) size in bytes.\n     * @deprecated use {@link #getApnSetting()} and {@link ApnSetting#getMtuV4()}/\n     * {@link ApnSetting#getMtuV6()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getMtuV4()", "android.telephony.data.ApnSetting#getMtuV6()" ]
  }, {
    "name" : "public int getMtuV4()",
    "returnType" : "int",
    "comment" : "\n     * This replaces the deprecated method getMtu.\n     * @return The maximum transmission unit (MTU) size in bytes, for IPv4.\n     * @deprecated use {@link #getApnSetting()} and {@link ApnSetting#getMtuV4()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getMtuV4()" ]
  }, {
    "name" : "public int getMtuV6()",
    "returnType" : "int",
    "comment" : "\n     * @return The maximum transmission unit (MTU) size in bytes, for IPv6.\n     * @deprecated use {@link #getApnSetting()} and {@link ApnSetting#getMtuV6()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#getMtuV6()" ]
  }, {
    "name" : "public boolean isPersistent()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if modem must persist this data profile.\n     * @deprecated Use {@link #getApnSetting()} and {@link ApnSetting#isPersistent()} instead.\n     ",
    "links" : [ "#getApnSetting()", "android.telephony.data.ApnSetting#isPersistent()" ]
  }, {
    "name" : "public void setPreferred(boolean preferred)",
    "returnType" : "void",
    "comment" : "\n     * Set the preferred flag for the data profile.\n     *\n     * @param preferred {@code true} if this data profile is preferred for internet.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isPreferred()",
    "returnType" : "boolean",
    "comment" : "\n     * @return {@code true} if this data profile was used to bring up the last default\n     * (i.e internet) data connection successfully, or the one chosen by the user in Settings'\n     * APN editor. For one carrier there can be only one profiled preferred.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ApnSetting getApnSetting()",
    "returnType" : "ApnSetting",
    "comment" : "\n     * @return The APN setting {@link ApnSetting}, which is used to establish data network on\n     * 2G/3G/4G.\n     ",
    "links" : [ "android.telephony.data.ApnSetting" ]
  }, {
    "name" : "public TrafficDescriptor getTrafficDescriptor()",
    "returnType" : "TrafficDescriptor",
    "comment" : "\n     * @return The traffic descriptor {@link TrafficDescriptor}, which can be used to establish\n     * data network on 5G.\n     ",
    "links" : [ "android.telephony.data.TrafficDescriptor" ]
  }, {
    "name" : "public boolean canSatisfy(@NonNull @NetCapability int[] networkCapabilities)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if this data profile can satisfy certain network capabilities\n     *\n     * @param networkCapabilities The network capabilities. Note that the non-APN-type capabilities\n     * will be ignored.\n     *\n     * @return {@code true} if this data profile can satisfy the given network capabilities.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean canSatisfy(@NetCapability int networkCapability)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if this data profile can satisfy a certain network capability.\n     *\n     * @param networkCapability The network capability. Note that the non-APN-type capability\n     * will always be satisfied.\n     * @return {@code true} if this data profile can satisfy the given network capability.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int networkCapabilityToApnType(@NetCapability int networkCapability)",
    "returnType" : "int",
    "comment" : "\n     * Convert network capability into APN type.\n     *\n     * @param networkCapability Network capability.\n     * @return APN type.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setLastSetupTimestamp(@ElapsedRealtimeLong long timestamp)",
    "returnType" : "void",
    "comment" : "\n     * Set the timestamp of this data profile being used for data network setup.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getLastSetupTimestamp()",
    "returnType" : "long",
    "comment" : "\n     * @return the timestamp of this data profile being used for data network setup.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getProfileId()", "public String getApn()", "public int getProtocolType()", "public int getAuthType()", "public String getUserName()", "public String getPassword()", "public int getType()", "public int getMaxConnectionsTime()", "public int getMaxConnections()", "public int getWaitTime()", "public boolean isEnabled()", "public int getSupportedApnTypesBitmask()", "public int getRoamingProtocolType()", "public int getBearerBitmask()", "public int getMtu()", "public int getMtuV4()", "public int getMtuV6()", "public boolean isPersistent()", "public void setPreferred(boolean preferred)", "public boolean isPreferred()", "public ApnSetting getApnSetting()", "public TrafficDescriptor getTrafficDescriptor()", "public boolean canSatisfy(@NonNull @NetCapability int[] networkCapabilities)", "public boolean canSatisfy(@NetCapability int networkCapability)", "private static int networkCapabilityToApnType(@NetCapability int networkCapability)", "public void setLastSetupTimestamp(@ElapsedRealtimeLong long timestamp)", "public long getLastSetupTimestamp()", "public int describeContents()", "public String toString()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(Object o)", "public int hashCode()" ],
  "variableNames" : [ "TYPE_COMMON", "TYPE_3GPP", "TYPE_3GPP2", "mType", "mApnSetting", "mTrafficDescriptor", "mPreferred", "mSetupTimestamp", "CREATOR" ]
}