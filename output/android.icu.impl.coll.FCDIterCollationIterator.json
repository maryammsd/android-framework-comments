{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/coll/FCDIterCollationIterator.java",
  "packageName" : "android.icu.impl.coll",
  "className" : "FCDIterCollationIterator",
  "comment" : "\n * Incrementally checks the input text for FCD and normalizes where necessary.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "state",
    "type" : "State",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "start",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "pos",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "limit",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "nfcImpl",
    "type" : "Normalizer2Impl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "s",
    "type" : "StringBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "normalized",
    "type" : "StringBuilder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void resetToOffset(int newOffset)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getOffset()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int nextCodePoint()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int previousCodePoint()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected long handleNextCE32()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected char handleGetTrailSurrogate()",
    "returnType" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void forwardNumCodePoints(int num)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void backwardNumCodePoints(int num)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void switchToForward()",
    "returnType" : "void",
    "comment" : "\n     * Switches to forward checking if possible.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean nextSegment()",
    "returnType" : "boolean",
    "comment" : "\n     * Extends the FCD text segment forward or normalizes around pos.\n     * @return true if success\n     ",
    "links" : [ ]
  }, {
    "name" : "private void switchToBackward()",
    "returnType" : "void",
    "comment" : "\n     * Switches to backward checking.\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean previousSegment()",
    "returnType" : "boolean",
    "comment" : "\n     * Extends the FCD text segment backward or normalizes around pos.\n     * @return true if success\n     ",
    "links" : [ ]
  }, {
    "name" : "private void normalize(CharSequence s)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void resetToOffset(int newOffset)", "public int getOffset()", "public int nextCodePoint()", "public int previousCodePoint()", "protected long handleNextCE32()", "protected char handleGetTrailSurrogate()", "protected void forwardNumCodePoints(int num)", "protected void backwardNumCodePoints(int num)", "private void switchToForward()", "private boolean nextSegment()", "private void switchToBackward()", "private boolean previousSegment()", "private void normalize(CharSequence s)" ],
  "variableNames" : [ "state", "start", "pos", "limit", "nfcImpl", "s", "normalized" ]
}