{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/drawable/AnimatedVectorDrawable.java",
  "packageName" : "android.graphics.drawable",
  "className" : "AnimatedVectorDrawableState",
  "comment" : "",
  "variables" : [ {
    "name" : "mChangingConfigurations",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVectorDrawable",
    "type" : "VectorDrawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShouldIgnoreInvalidAnim",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingAnims",
    "type" : "ArrayList<PendingAnimator>",
    "comment" : " Animators that require a theme before inflation. ",
    "links" : [ ]
  }, {
    "name" : "mAnimators",
    "type" : "ArrayList<Animator>",
    "comment" : " Fully inflated animators awaiting cloning into an AnimatorSet. ",
    "links" : [ ]
  }, {
    "name" : "mTargetNameMap",
    "type" : "ArrayMap<Animator, String>",
    "comment" : " Map of animators to their target object names ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean canApplyTheme()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Drawable newDrawable()",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Drawable newDrawable(Resources res)",
    "returnType" : "Drawable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getChangingConfigurations()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addPendingAnimator(int resId, float pathErrorScale, String target)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addTargetAnimator(String targetName, Animator animator)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void prepareLocalAnimators(@NonNull AnimatorSet animatorSet, @Nullable Resources res)",
    "returnType" : "void",
    "comment" : "\n         * Prepares a local set of mutable animators based on the constant\n         * state.\n         * <p>\n         * If there are any pending uninflated animators, attempts to inflate\n         * them immediately against the provided resources object.\n         *\n         * @param animatorSet the animator set to which the animators should\n         *                    be added\n         * @param res the resources against which to inflate any pending\n         *            animators, or {@code null} if not available\n         ",
    "links" : [ ]
  }, {
    "name" : "private Animator prepareLocalAnimator(int index)",
    "returnType" : "Animator",
    "comment" : "\n         * Prepares a local animator for the given index within the constant\n         * state's list of animators.\n         *\n         * @param index the index of the animator within the constant state\n         ",
    "links" : [ ]
  }, {
    "name" : "public void inflatePendingAnimators(@NonNull Resources res, @Nullable Theme t)",
    "returnType" : "void",
    "comment" : "\n         * Inflates pending animators, if any, against a theme. Clears the list of\n         * pending animators.\n         *\n         * @param t the theme against which to inflate the animators\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mChangingConfigurations", "mVectorDrawable", "mShouldIgnoreInvalidAnim", "mPendingAnims", "mAnimators", "mTargetNameMap" ],
  "methodNames" : [ "public boolean canApplyTheme()", "public Drawable newDrawable()", "public Drawable newDrawable(Resources res)", "public int getChangingConfigurations()", "public void addPendingAnimator(int resId, float pathErrorScale, String target)", "public void addTargetAnimator(String targetName, Animator animator)", "public void prepareLocalAnimators(@NonNull AnimatorSet animatorSet, @Nullable Resources res)", "private Animator prepareLocalAnimator(int index)", "public void inflatePendingAnimators(@NonNull Resources res, @Nullable Theme t)" ]
}