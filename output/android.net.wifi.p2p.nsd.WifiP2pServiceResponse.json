{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/p2p/nsd/WifiP2pServiceResponse.java",
  "packageName" : "android.net.wifi.p2p.nsd",
  "className" : "WifiP2pServiceResponse",
  "comment" : "\n * The class for a response of service discovery.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MAX_BUF_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceType",
    "type" : "int",
    "comment" : "\n     * Service type. It's defined in table63 in Wi-Fi Direct specification.\n     ",
    "links" : [ ]
  }, {
    "name" : "mStatus",
    "type" : "int",
    "comment" : "\n     * Status code of service discovery response.\n     * It's defined in table65 in Wi-Fi Direct specification.\n     * @see Status\n     ",
    "links" : [ ]
  }, {
    "name" : "mTransId",
    "type" : "int",
    "comment" : "\n     * Service transaction ID.\n     * This is a nonzero value used to match the service request/response TLVs.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDevice",
    "type" : "WifiP2pDevice",
    "comment" : "\n     * Source device.\n     ",
    "links" : [ ]
  }, {
    "name" : "mData",
    "type" : "byte[]",
    "comment" : "\n     * Service discovery response data based on the requested on\n     * the service protocol type. The protocol format depends on the service type.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<WifiP2pServiceResponse>",
    "comment" : " Implement the Parcelable interface {@hide} ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getServiceType()",
    "returnType" : "int",
    "comment" : "\n     * Return the service type of service discovery response.\n     *\n     * @return service discovery type.<br>\n     * e.g) {@link WifiP2pServiceInfo#SERVICE_TYPE_BONJOUR}\n     ",
    "links" : [ "android.net.wifi.p2p.nsd.WifiP2pServiceInfo#SERVICE_TYPE_BONJOUR" ]
  }, {
    "name" : "public int getStatus()",
    "returnType" : "int",
    "comment" : "\n     * Return the status code of service discovery response.\n     *\n     * @return status code.\n     * @see Status\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTransactionId()",
    "returnType" : "int",
    "comment" : "\n     * Return the transaction id of service discovery response.\n     *\n     * @return transaction id.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getRawData()",
    "returnType" : "byte[]",
    "comment" : "\n     * Return response data.\n     *\n     * <pre>Data format depends on service type\n     *\n     * @return a query or response data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public WifiP2pDevice getSrcDevice()",
    "returnType" : "WifiP2pDevice",
    "comment" : "\n     * Returns the source device of service discovery response.\n     *\n     * <pre>This is valid only when service discovery response.\n     *\n     * @return the source device of service discovery response.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSrcDevice(WifiP2pDevice dev)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static List<WifiP2pServiceResponse> newInstance(String srcAddr, byte[] tlvsBin)",
    "returnType" : "List<WifiP2pServiceResponse>",
    "comment" : "\n     * Create the list of  WifiP2pServiceResponse instance from supplicant event.\n     *\n     * @param srcAddr source address of the service response\n     * @param tlvsBin byte array containing the binary tlvs data\n     * @return if parse failed, return null\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static byte[] hexStr2Bin(String hex)",
    "returnType" : "byte[]",
    "comment" : "\n     * Converts hex string to byte array.\n     *\n     * @param hex hex string. if invalid, return null.\n     * @return binary data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean equals(Object a, Object b)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " Implement the Parcelable interface {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Implement the Parcelable interface {@hide} ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getServiceType()", "public int getStatus()", "public int getTransactionId()", "public byte[] getRawData()", "public WifiP2pDevice getSrcDevice()", "public void setSrcDevice(WifiP2pDevice dev)", "public static List<WifiP2pServiceResponse> newInstance(String srcAddr, byte[] tlvsBin)", "private static byte[] hexStr2Bin(String hex)", "public String toString()", "public boolean equals(Object o)", "private boolean equals(Object a, Object b)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ],
  "variableNames" : [ "MAX_BUF_SIZE", "mServiceType", "mStatus", "mTransId", "mDevice", "mData", "CREATOR" ]
}