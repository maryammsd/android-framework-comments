{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/TokenWatcher.java",
  "packageName" : "android.os",
  "className" : "TokenWatcher",
  "comment" : "\n * A TokenWatcher watches a collection of {@link IBinder}s. IBinders are added\n * to the collection by calling {@link #acquire}, and removed by calling {@link\n * #release}. IBinders are also implicitly removed when they become weakly\n * reachable. Each IBinder may be added at most once.\n *\n * The {@link #acquired} method is invoked by posting to the specified handler\n * whenever the size of the watched collection becomes nonzero.  The {@link\n * #released} method is invoked on the specified handler whenever the size of\n * the watched collection becomes zero.\n ",
  "links" : [ "#acquire", "#acquired", "android.os.IBinder", "#release", "#released" ],
  "variables" : [ {
    "name" : "mNotificationTask",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTokens",
    "type" : "WeakHashMap<IBinder, Death>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNotificationQueue",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAcquired",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract void acquired()",
    "returnType" : "void",
    "comment" : "\n     * Called when the number of active tokens goes from 0 to 1.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void released()",
    "returnType" : "void",
    "comment" : "\n     * Called when the number of active tokens goes from 1 to 0.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void acquire(IBinder token, String tag)",
    "returnType" : "void",
    "comment" : "\n     * Record that this token has been acquired.  When acquire is called, and\n     * the current count is 0, the acquired method is called on the given\n     * handler.\n     *\n     * Note that the same {@code token} can only be acquired once. If this\n     * {@code token} has already been acquired, no action is taken. The first\n     * subsequent call to {@link #release} will release this {@code token}\n     * immediately.\n     *\n     * @param token An IBinder object.\n     * @param tag   A string used by the {@link #dump} method for debugging,\n     *              to see who has references.\n     ",
    "links" : [ "#dump", "#release" ]
  }, {
    "name" : "public void cleanup(IBinder token, boolean unlink)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void release(IBinder token)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAcquired()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(PrintWriter pw)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ArrayList<String> dumpInternal()",
    "returnType" : "ArrayList<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void sendNotificationLocked(boolean on)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void acquired()", "public abstract void released()", "public void acquire(IBinder token, String tag)", "public void cleanup(IBinder token, boolean unlink)", "public void release(IBinder token)", "public boolean isAcquired()", "public void dump()", "public void dump(PrintWriter pw)", "private ArrayList<String> dumpInternal()", "private void sendNotificationLocked(boolean on)" ],
  "variableNames" : [ "mNotificationTask", "mTokens", "mHandler", "mTag", "mNotificationQueue", "mAcquired" ]
}