{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/bluetooth/le/ScanFilter.java",
  "packageName" : "android.bluetooth.le",
  "className" : "ScanFilter",
  "comment" : "\n * Criteria for filtering result from Bluetooth LE scans. A {@link ScanFilter} allows clients to\n * restrict scan results to only those that are of interest to them.\n * <p>\n * Current filtering on the following fields are supported:\n * <li>Service UUIDs which identify the bluetooth gatt services running on the device.\n * <li>Name of remote Bluetooth LE device.\n * <li>Mac address of the remote device.\n * <li>Service data which is the data associated with a service.\n * <li>Manufacturer specific data which is the data associated with a particular manufacturer.\n *\n * @see ScanResult\n * @see BluetoothLeScanner\n ",
  "variables" : [ {
    "name" : "mDeviceName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceAddress",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceUuid",
    "type" : "ParcelUuid",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceUuidMask",
    "type" : "ParcelUuid",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceSolicitationUuid",
    "type" : "ParcelUuid",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceSolicitationUuidMask",
    "type" : "ParcelUuid",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceDataUuid",
    "type" : "ParcelUuid",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceDataMask",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mManufacturerId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mManufacturerData",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mManufacturerDataMask",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMPTY",
    "type" : "ScanFilter",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<ScanFilter>",
    "comment" : "\n     * A {@link android.os.Parcelable.Creator} to create {@link ScanFilter} from parcel.\n     ",
    "links" : [ "android.os.Parcelable.Creator", "ScanFilter" ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getDeviceName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the filter set the device name field of Bluetooth advertisement data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ParcelUuid getServiceUuid()",
    "returnType" : "ParcelUuid",
    "comment" : "\n     * Returns the filter set on the service uuid.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ParcelUuid getServiceUuidMask()",
    "returnType" : "ParcelUuid",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ParcelUuid getServiceSolicitationUuid()",
    "returnType" : "ParcelUuid",
    "comment" : "\n     * Returns the filter set on the service Solicitation uuid.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ParcelUuid getServiceSolicitationUuidMask()",
    "returnType" : "ParcelUuid",
    "comment" : "\n     * Returns the filter set on the service Solicitation uuid mask.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getDeviceAddress()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] getServiceData()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] getServiceDataMask()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ParcelUuid getServiceDataUuid()",
    "returnType" : "ParcelUuid",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getManufacturerId()",
    "returnType" : "int",
    "comment" : "\n     * Returns the manufacturer id. -1 if the manufacturer filter is not set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getManufacturerData()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] getManufacturerDataMask()",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean matches(ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if the scan filter matches a {@code scanResult}. A scan result is considered as a match\n     * if it matches all the field filters.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean matchesServiceUuids(ParcelUuid uuid, ParcelUuid parcelUuidMask, List<ParcelUuid> uuids)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if the uuid pattern is contained in a list of parcel uuids.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean matchesServiceUuid(UUID uuid, UUID mask, UUID data)",
    "returnType" : "boolean",
    "comment" : " Check if the uuid pattern matches the particular service uuid.",
    "links" : [ ]
  }, {
    "name" : "private static boolean matchesServiceSolicitationUuids(ParcelUuid solicitationUuid, ParcelUuid parcelSolicitationUuidMask, List<ParcelUuid> solicitationUuids)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if the solicitation uuid pattern is contained in a list of parcel uuids.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean matchesServiceSolicitationUuid(UUID solicitationUuid, UUID solicitationUuidMask, UUID data)",
    "returnType" : "boolean",
    "comment" : " Check if the solicitation uuid pattern matches the particular service solicitation uuid.",
    "links" : [ ]
  }, {
    "name" : "private boolean matchesPartialData(byte[] data, byte[] dataMask, byte[] parsedData)",
    "returnType" : "boolean",
    "comment" : " Check whether the data pattern matches the parsed data.",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAllFieldsEmpty()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the scanfilter is empty\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mDeviceName", "mDeviceAddress", "mServiceUuid", "mServiceUuidMask", "mServiceSolicitationUuid", "mServiceSolicitationUuidMask", "mServiceDataUuid", "mServiceData", "mServiceDataMask", "mManufacturerId", "mManufacturerData", "mManufacturerDataMask", "EMPTY", "CREATOR" ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public String getDeviceName()", "public ParcelUuid getServiceUuid()", "public ParcelUuid getServiceUuidMask()", "public ParcelUuid getServiceSolicitationUuid()", "public ParcelUuid getServiceSolicitationUuidMask()", "public String getDeviceAddress()", "public byte[] getServiceData()", "public byte[] getServiceDataMask()", "public ParcelUuid getServiceDataUuid()", "public int getManufacturerId()", "public byte[] getManufacturerData()", "public byte[] getManufacturerDataMask()", "public boolean matches(ScanResult scanResult)", "public static boolean matchesServiceUuids(ParcelUuid uuid, ParcelUuid parcelUuidMask, List<ParcelUuid> uuids)", "private static boolean matchesServiceUuid(UUID uuid, UUID mask, UUID data)", "private static boolean matchesServiceSolicitationUuids(ParcelUuid solicitationUuid, ParcelUuid parcelSolicitationUuidMask, List<ParcelUuid> solicitationUuids)", "private static boolean matchesServiceSolicitationUuid(UUID solicitationUuid, UUID solicitationUuidMask, UUID data)", "private boolean matchesPartialData(byte[] data, byte[] dataMask, byte[] parsedData)", "public String toString()", "public int hashCode()", "public boolean equals(Object obj)", "public boolean isAllFieldsEmpty()" ]
}