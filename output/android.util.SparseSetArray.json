{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/util/SparseSetArray.java",
  "packageName" : "android.util",
  "className" : "SparseSetArray",
  "comment" : "\n * A sparse array of ArraySets, which is suitable to hold userid->packages association.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mData",
    "type" : "SparseArray<ArraySet<T>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean add(int n, T value)",
    "returnType" : "boolean",
    "comment" : "\n     * Add a value for key n.\n     * @return FALSE when the value already existed for the given key, TRUE otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addAll(int n, ArraySet<T> values)",
    "returnType" : "void",
    "comment" : "\n     * Add a set of values for key n.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "\n     * Removes all mappings from this SparseSetArray.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean contains(int n, T value)",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether the value exists for the key n.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ArraySet<T> get(int n)",
    "returnType" : "ArraySet<T>",
    "comment" : "\n     * @return the set of items of key n\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean remove(int n, T value)",
    "returnType" : "boolean",
    "comment" : "\n     * Remove a value for key n.\n     * @return TRUE when the value existed for the given key and removed, FALSE otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void remove(int n)",
    "returnType" : "void",
    "comment" : "\n     * Remove all values for key n.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int size()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int keyAt(int index)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int sizeAt(int index)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T valueAt(int intIndex, int valueIndex)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ArraySet<T> valuesAt(int intIndex)",
    "returnType" : "ArraySet<T>",
    "comment" : " @return The set of values for key at position {@code intIndex}. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean add(int n, T value)", "public void addAll(int n, ArraySet<T> values)", "public void clear()", "public boolean contains(int n, T value)", "public ArraySet<T> get(int n)", "public boolean remove(int n, T value)", "public void remove(int n)", "public int size()", "public int keyAt(int index)", "public int sizeAt(int index)", "public T valueAt(int intIndex, int valueIndex)", "public ArraySet<T> valuesAt(int intIndex)" ],
  "variableNames" : [ "mData" ]
}