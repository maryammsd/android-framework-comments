{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/locks/AbstractOwnableSynchronizer.java",
  "packageName" : "java.util.concurrent.locks",
  "className" : "AbstractOwnableSynchronizer",
  "comment" : "\n * A synchronizer that may be exclusively owned by a thread.  This\n * class provides a basis for creating locks and related synchronizers\n * that may entail a notion of ownership.  The\n * {@code AbstractOwnableSynchronizer} class itself does not manage or\n * use this information. However, subclasses and tools may use\n * appropriately maintained values to help control and monitor access\n * and provide diagnostics.\n *\n * @since 1.6\n * @author Doug Lea\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : " Use serial ID even though all fields transient. ",
    "links" : [ ]
  }, {
    "name" : "exclusiveOwnerThread",
    "type" : "Thread",
    "comment" : "\n     * The current owner of exclusive mode synchronization.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected final void setExclusiveOwnerThread(Thread thread)",
    "returnType" : "void",
    "comment" : "\n     * Sets the thread that currently owns exclusive access.\n     * A {@code null} argument indicates that no thread owns access.\n     * This method does not otherwise impose any synchronization or\n     * {@code volatile} field accesses.\n     * @param thread the owner thread\n     ",
    "links" : [ ]
  }, {
    "name" : "protected final Thread getExclusiveOwnerThread()",
    "returnType" : "Thread",
    "comment" : "\n     * Returns the thread last set by {@code setExclusiveOwnerThread},\n     * or {@code null} if never set.  This method does not otherwise\n     * impose any synchronization or {@code volatile} field accesses.\n     * @return the owner thread\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected final void setExclusiveOwnerThread(Thread thread)", "protected final Thread getExclusiveOwnerThread()" ],
  "variableNames" : [ "serialVersionUID", "exclusiveOwnerThread" ]
}