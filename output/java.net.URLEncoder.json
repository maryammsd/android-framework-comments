{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/net/URLEncoder.java",
  "packageName" : "java.net",
  "className" : "URLEncoder",
  "comment" : "\n * Utility class for HTML form encoding. This class contains static methods\n * for converting a String to the <CODE>application/x-www-form-urlencoded</CODE> MIME\n * format. For more information about HTML form encoding, consult the HTML\n * <A HREF=\"http://www.w3.org/TR/html4/\">specification</A>.\n *\n * <p>\n * When encoding a String, the following rules apply:\n *\n * <ul>\n * <li>The alphanumeric characters &quot;{@code a}&quot; through\n *     &quot;{@code z}&quot;, &quot;{@code A}&quot; through\n *     &quot;{@code Z}&quot; and &quot;{@code 0}&quot;\n *     through &quot;{@code 9}&quot; remain the same.\n * <li>The special characters &quot;{@code .}&quot;,\n *     &quot;{@code -}&quot;, &quot;{@code *}&quot;, and\n *     &quot;{@code _}&quot; remain the same.\n * <li>The space character &quot; &nbsp; &quot; is\n *     converted into a plus sign &quot;{@code +}&quot;.\n * <li>All other characters are unsafe and are first converted into\n *     one or more bytes using some encoding scheme. Then each byte is\n *     represented by the 3-character string\n *     &quot;<i>{@code %xy}</i>&quot;, where <i>xy</i> is the\n *     two-digit hexadecimal representation of the byte.\n *     The recommended encoding scheme to use is UTF-8. However,\n *     for compatibility reasons, if an encoding is not specified,\n *     then the default encoding of the platform is used.\n * </ul>\n *\n * <p>\n * For example using UTF-8 as the encoding scheme the string &quot;The\n * string &#252;@foo-bar&quot; would get converted to\n * &quot;The+string+%C3%BC%40foo-bar&quot; because in UTF-8 the character\n * &#252; is encoded as two bytes C3 (hex) and BC (hex), and the\n * character @ is encoded as one byte 40 (hex).\n *\n * @author  Herb Jellinek\n * @since   1.0\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "dontNeedEncoding",
    "type" : "BitSet",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "caseDiff",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "dfltEncName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static String encode(String s)",
    "returnType" : "String",
    "comment" : "\n     * Translates a string into {@code x-www-form-urlencoded}\n     * format. This method uses the platform's default encoding\n     * as the encoding scheme to obtain the bytes for unsafe characters.\n     *\n     * @param   s   {@code String} to be translated.\n     * @deprecated The resulting string may vary depending on the platform's\n     *             default encoding. Instead, use the encode(String,String)\n     *             method to specify the encoding.\n     * @return  the translated {@code String}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String encode(String s, String enc) throws UnsupportedEncodingException",
    "returnType" : "String",
    "comment" : "\n     * Translates a string into {@code application/x-www-form-urlencoded}\n     * format using a specific encoding scheme.\n     * <p>\n     * This method behaves the same as {@linkplain String encode(String s, Charset charset)}\n     * except that it will {@linkplain java.nio.charset.Charset#forName look up the charset}\n     * using the given encoding name.\n     *\n     * @param   s   {@code String} to be translated.\n     * @param   enc   The name of a supported\n     *    <a href=\"../lang/package-summary.html#charenc\">character\n     *    encoding</a>.\n     * @return  the translated {@code String}.\n     * @throws  UnsupportedEncodingException\n     *             If the named encoding is not supported\n     * @see URLDecoder#decode(java.lang.String, java.lang.String)\n     * @since 1.4\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String encode(String s, Charset charset)",
    "returnType" : "String",
    "comment" : "\n     * Translates a string into {@code application/x-www-form-urlencoded}\n     * format using a specific {@linkplain java.nio.charset.Charset Charset}.\n     * This method uses the supplied charset to obtain the bytes for unsafe\n     * characters.\n     * <p>\n     * <em><strong>Note:</strong> The <a href=\n     * \"http://www.w3.org/TR/html40/appendix/notes.html#non-ascii-chars\">\n     * World Wide Web Consortium Recommendation</a> states that\n     * UTF-8 should be used. Not doing so may introduce incompatibilities.</em>\n     *\n     * @param   s   {@code String} to be translated.\n     * @param charset the given charset\n     * @return  the translated {@code String}.\n     * @throws NullPointerException if {@code s} or {@code charset} is {@code null}.\n     * @see URLDecoder#decode(java.lang.String, java.nio.charset.Charset)\n     * @since 10\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static String encode(String s)", "public static String encode(String s, String enc) throws UnsupportedEncodingException", "public static String encode(String s, Charset charset)" ],
  "variableNames" : [ "dontNeedEncoding", "caseDiff", "dfltEncName" ]
}