{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/BatteryStatsManager.java",
  "packageName" : "android.os",
  "className" : "BatteryStatsManager",
  "comment" : "\n * This class provides an API surface for internal system components to report events that are\n * needed for battery usage/estimation and battery blaming for apps.\n *\n * Note: This internally uses the same {@link IBatteryStats} binder service as the public\n * {@link BatteryManager}.\n * @hide\n ",
  "variables" : [ {
    "name" : "WIFI_STATE_OFF",
    "type" : "int",
    "comment" : "\n     * Wifi fully off.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_STATE_OFF_SCANNING",
    "type" : "int",
    "comment" : "\n     * Wifi connectivity off, but scanning enabled.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_STATE_ON_NO_NETWORKS",
    "type" : "int",
    "comment" : "\n     * Wifi on, but no saved infrastructure networks to connect to.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_STATE_ON_DISCONNECTED",
    "type" : "int",
    "comment" : "\n     * Wifi on, but not connected to any infrastructure networks.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_STATE_ON_CONNECTED_STA",
    "type" : "int",
    "comment" : "\n     * Wifi on and connected to a infrastructure network.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_STATE_ON_CONNECTED_P2P",
    "type" : "int",
    "comment" : "\n     * Wifi on and connected to a P2P device, but no infrastructure connection to a network.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_STATE_ON_CONNECTED_STA_P2P",
    "type" : "int",
    "comment" : "\n     * Wifi on and connected to both a P2P device and infrastructure connection to a network.\n     ",
    "links" : [ ]
  }, {
    "name" : "WIFI_STATE_SOFT_AP",
    "type" : "int",
    "comment" : "\n     * SoftAp/Hotspot turned on.\n     ",
    "links" : [ ]
  }, {
    "name" : "NUM_WIFI_STATES",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_INVALID",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#INVALID ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_DISCONNECTED",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#DISCONNECTED",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_INTERFACE_DISABLED",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#INTERFACE_DISABLED ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_INACTIVE",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#INACTIVE",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_SCANNING",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#SCANNING",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_AUTHENTICATING",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#AUTHENTICATING ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_ASSOCIATING",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#ASSOCIATING ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_ASSOCIATED",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#ASSOCIATED ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_FOUR_WAY_HANDSHAKE",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#FOUR_WAY_HANDSHAKE ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_GROUP_HANDSHAKE",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#GROUP_HANDSHAKE ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_COMPLETED",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#COMPLETED ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_DORMANT",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#DORMANT ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPL_STATE_UNINITIALIZED",
    "type" : "int",
    "comment" : " @see android.net.wifi.SupplicantState#UNINITIALIZED ",
    "links" : [ ]
  }, {
    "name" : "NUM_WIFI_SUPPL_STATES",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mBatteryStats",
    "type" : "IBatteryStats",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void reportWifiRssiChanged(@IntRange(from = -127, to = 0) int newRssi)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that the wifi connection RSSI has changed.\n     *\n     * @param newRssi The new RSSI value.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiOn()",
    "returnType" : "void",
    "comment" : "\n     * Indicates that wifi was toggled on.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiOff()",
    "returnType" : "void",
    "comment" : "\n     * Indicates that wifi was toggled off.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiState(@WifiState int newWifiState, @Nullable String accessPoint)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that wifi state has changed.\n     *\n     * @param newWifiState The new wifi State.\n     * @param accessPoint SSID of the network if wifi is connected to STA, else null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiScanStartedFromSource(@NonNull WorkSource ws)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that a new wifi scan has started.\n     *\n     * @param ws Worksource (to be used for battery blaming).\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiScanStoppedFromSource(@NonNull WorkSource ws)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that an ongoing wifi scan has stopped.\n     *\n     * @param ws Worksource (to be used for battery blaming).\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiBatchedScanStartedFromSource(@NonNull WorkSource ws, @IntRange(from = 0) int csph)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that a new wifi batched scan has started.\n     *\n     * @param ws Worksource (to be used for battery blaming).\n     * @param csph Channels scanned per hour.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiBatchedScanStoppedFromSource(@NonNull WorkSource ws)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that an ongoing wifi batched scan has stopped.\n     *\n     * @param ws Worksource (to be used for battery blaming).\n     ",
    "links" : [ ]
  }, {
    "name" : "public CellularBatteryStats getCellularBatteryStats()",
    "returnType" : "CellularBatteryStats",
    "comment" : "\n     * Retrieves all the cellular related battery stats.\n     *\n     * @return Instance of {@link CellularBatteryStats}.\n     ",
    "links" : [ "android.os.connectivity.CellularBatteryStats" ]
  }, {
    "name" : "public WifiBatteryStats getWifiBatteryStats()",
    "returnType" : "WifiBatteryStats",
    "comment" : "\n     * Retrieves all the wifi related battery stats.\n     *\n     * @return Instance of {@link WifiBatteryStats}.\n     ",
    "links" : [ "android.os.connectivity.WifiBatteryStats" ]
  }, {
    "name" : "public void reportFullWifiLockAcquiredFromSource(@NonNull WorkSource ws)",
    "returnType" : "void",
    "comment" : "\n     * Indicates an app acquiring full wifi lock.\n     *\n     * @param ws Worksource (to be used for battery blaming).\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportFullWifiLockReleasedFromSource(@NonNull WorkSource ws)",
    "returnType" : "void",
    "comment" : "\n     * Indicates an app releasing full wifi lock.\n     *\n     * @param ws Worksource (to be used for battery blaming).\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiSupplicantStateChanged(@WifiSupplState int newSupplState, boolean failedAuth)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that supplicant state has changed.\n     *\n     * @param newSupplState The new Supplicant state.\n     * @param failedAuth Boolean indicating whether there was a connection failure due to\n     *                   authentication failure.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiMulticastEnabled(@NonNull WorkSource ws)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that an app has acquired the wifi multicast lock.\n     *\n     * @param ws Worksource with the uid of the app that acquired the wifi lock (to be used for\n     *           battery blaming).\n     ",
    "links" : [ ]
  }, {
    "name" : "public void reportWifiMulticastDisabled(@NonNull WorkSource ws)",
    "returnType" : "void",
    "comment" : "\n     * Indicates that an app has released the wifi multicast lock.\n     *\n     * @param ws Worksource with the uid of the app that released the wifi lock (to be used for\n     *           battery blaming).\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "WIFI_STATE_OFF", "WIFI_STATE_OFF_SCANNING", "WIFI_STATE_ON_NO_NETWORKS", "WIFI_STATE_ON_DISCONNECTED", "WIFI_STATE_ON_CONNECTED_STA", "WIFI_STATE_ON_CONNECTED_P2P", "WIFI_STATE_ON_CONNECTED_STA_P2P", "WIFI_STATE_SOFT_AP", "NUM_WIFI_STATES", "WIFI_SUPPL_STATE_INVALID", "WIFI_SUPPL_STATE_DISCONNECTED", "WIFI_SUPPL_STATE_INTERFACE_DISABLED", "WIFI_SUPPL_STATE_INACTIVE", "WIFI_SUPPL_STATE_SCANNING", "WIFI_SUPPL_STATE_AUTHENTICATING", "WIFI_SUPPL_STATE_ASSOCIATING", "WIFI_SUPPL_STATE_ASSOCIATED", "WIFI_SUPPL_STATE_FOUR_WAY_HANDSHAKE", "WIFI_SUPPL_STATE_GROUP_HANDSHAKE", "WIFI_SUPPL_STATE_COMPLETED", "WIFI_SUPPL_STATE_DORMANT", "WIFI_SUPPL_STATE_UNINITIALIZED", "NUM_WIFI_SUPPL_STATES", "mBatteryStats" ],
  "methodNames" : [ "public void reportWifiRssiChanged(@IntRange(from = -127, to = 0) int newRssi)", "public void reportWifiOn()", "public void reportWifiOff()", "public void reportWifiState(@WifiState int newWifiState, @Nullable String accessPoint)", "public void reportWifiScanStartedFromSource(@NonNull WorkSource ws)", "public void reportWifiScanStoppedFromSource(@NonNull WorkSource ws)", "public void reportWifiBatchedScanStartedFromSource(@NonNull WorkSource ws, @IntRange(from = 0) int csph)", "public void reportWifiBatchedScanStoppedFromSource(@NonNull WorkSource ws)", "public CellularBatteryStats getCellularBatteryStats()", "public WifiBatteryStats getWifiBatteryStats()", "public void reportFullWifiLockAcquiredFromSource(@NonNull WorkSource ws)", "public void reportFullWifiLockReleasedFromSource(@NonNull WorkSource ws)", "public void reportWifiSupplicantStateChanged(@WifiSupplState int newSupplState, boolean failedAuth)", "public void reportWifiMulticastEnabled(@NonNull WorkSource ws)", "public void reportWifiMulticastDisabled(@NonNull WorkSource ws)" ]
}