{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/PriorityQueue.java",
  "packageName" : "java.util",
  "className" : "Itr",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "cursor",
    "type" : "int",
    "comment" : "\n         * Index (into queue array) of element to be returned by\n         * subsequent call to next.\n         ",
    "links" : [ ]
  }, {
    "name" : "lastRet",
    "type" : "int",
    "comment" : "\n         * Index of element returned by most recent call to next,\n         * unless that element came from the forgetMeNot list.\n         * Set to -1 if element is deleted by a call to remove.\n         ",
    "links" : [ ]
  }, {
    "name" : "forgetMeNot",
    "type" : "ArrayDeque<E>",
    "comment" : "\n         * A queue of elements that were moved from the unvisited portion of\n         * the heap into the visited portion as a result of \"unlucky\" element\n         * removals during the iteration.  (Unlucky element removals are those\n         * that require a siftup instead of a siftdown.)  We must visit all of\n         * the elements in this list to complete the iteration.  We do this\n         * after we've completed the \"normal\" iteration.\n         *\n         * We expect that most iterations, even those involving removals,\n         * will not need to store elements in this field.\n         ",
    "links" : [ ]
  }, {
    "name" : "lastRetElt",
    "type" : "E",
    "comment" : "\n         * Element returned by the most recent call to next iff that\n         * element was drawn from the forgetMeNot list.\n         ",
    "links" : [ ]
  }, {
    "name" : "expectedModCount",
    "type" : "int",
    "comment" : "\n         * The modCount value that the iterator believes that the backing\n         * Queue should have.  If this expectation is violated, the iterator\n         * has detected concurrent modification.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean hasNext()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public E next()",
    "returnType" : "E",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void remove()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean hasNext()", "public E next()", "public void remove()" ],
  "variableNames" : [ "cursor", "lastRet", "forgetMeNot", "lastRetElt", "expectedModCount" ]
}