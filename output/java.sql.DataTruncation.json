{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/sql/DataTruncation.java",
  "packageName" : "java.sql",
  "className" : "DataTruncation",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "index",
    "type" : "int",
    "comment" : "\n        * @serial\n        ",
    "links" : [ ]
  }, {
    "name" : "parameter",
    "type" : "boolean",
    "comment" : "\n        * @serial\n        ",
    "links" : [ ]
  }, {
    "name" : "read",
    "type" : "boolean",
    "comment" : "\n        * @serial\n        ",
    "links" : [ ]
  }, {
    "name" : "dataSize",
    "type" : "int",
    "comment" : "\n        * @serial\n        ",
    "links" : [ ]
  }, {
    "name" : "transferSize",
    "type" : "int",
    "comment" : "\n        * @serial\n        ",
    "links" : [ ]
  }, {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "\n     * @serial\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getIndex()",
    "returnType" : "int",
    "comment" : "\n     * Retrieves the index of the column or parameter that was truncated.\n     *\n     * <P>This may be -1 if the column or parameter index is unknown, in\n     * which case the <code>parameter</code> and <code>read</code> fields should be ignored.\n     *\n     * @return the index of the truncated paramter or column value\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getParameter()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether the value truncated was a parameter value or\n         * a column value.\n     *\n     * @return <code>true</code> if the value truncated was a parameter;\n         *         <code>false</code> if it was a column value\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean getRead()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates whether or not the value was truncated on a read.\n     *\n     * @return <code>true</code> if the value was truncated when read from\n         *         the database; <code>false</code> if the data was truncated on a write\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDataSize()",
    "returnType" : "int",
    "comment" : "\n     * Gets the number of bytes of data that should have been transferred.\n     * This number may be approximate if data conversions were being\n     * performed.  The value may be <code>-1</code> if the size is unknown.\n     *\n     * @return the number of bytes of data that should have been transferred\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTransferSize()",
    "returnType" : "int",
    "comment" : "\n     * Gets the number of bytes of data actually transferred.\n     * The value may be <code>-1</code> if the size is unknown.\n     *\n     * @return the number of bytes of data actually transferred\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getIndex()", "public boolean getParameter()", "public boolean getRead()", "public int getDataSize()", "public int getTransferSize()" ],
  "variableNames" : [ "index", "parameter", "read", "dataSize", "transferSize", "serialVersionUID" ]
}