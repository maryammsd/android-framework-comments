{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/duration/BasicPeriodBuilderFactory.java",
  "packageName" : "android.icu.impl.duration",
  "className" : "BasicPeriodBuilderFactory",
  "comment" : "\n * Default implementation of PeriodBuilderFactory.  This creates builders that\n * use approximate durations.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ds",
    "type" : "PeriodFormatterDataService",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "settings",
    "type" : "Settings",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "allBits",
    "type" : "short",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static long approximateDurationOf(TimeUnit unit)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setAvailableUnitRange(TimeUnit minUnit, TimeUnit maxUnit)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setUnitIsAvailable(TimeUnit unit, boolean available)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setMaxLimit(float maxLimit)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setMinLimit(float minLimit)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setAllowZero(boolean allow)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setWeeksAloneOnly(boolean aloneOnly)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setAllowMilliseconds(boolean allow)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setLocale(String localeName)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilderFactory setTimeZone(TimeZone timeZone)",
    "returnType" : "PeriodBuilderFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Settings getSettings()",
    "returnType" : "Settings",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilder getFixedUnitBuilder(TimeUnit unit)",
    "returnType" : "PeriodBuilder",
    "comment" : "\n   * Return a builder that represents relative time in terms of the single\n   * given TimeUnit\n   *\n   * @param unit the single TimeUnit with which to represent times\n   * @return a builder\n   ",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilder getSingleUnitBuilder()",
    "returnType" : "PeriodBuilder",
    "comment" : "\n   * Return a builder that represents relative time in terms of the\n   * largest period less than or equal to the duration.\n   *\n   * @return a builder\n   ",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilder getOneOrTwoUnitBuilder()",
    "returnType" : "PeriodBuilder",
    "comment" : "\n   * Return a builder that formats the largest one or two periods,\n   * Starting with the largest period less than or equal to the duration.\n   * It formats two periods if the first period has a count &lt; 2\n   * and the next period has a count &gt;= 1.\n   *\n   * @return a builder\n   ",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilder getMultiUnitBuilder(int periodCount)",
    "returnType" : "PeriodBuilder",
    "comment" : "\n   * Return a builder that formats the given number of periods,\n   * starting with the largest period less than or equal to the\n   * duration.\n   *\n   * @return a builder\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static long approximateDurationOf(TimeUnit unit)", "public PeriodBuilderFactory setAvailableUnitRange(TimeUnit minUnit, TimeUnit maxUnit)", "public PeriodBuilderFactory setUnitIsAvailable(TimeUnit unit, boolean available)", "public PeriodBuilderFactory setMaxLimit(float maxLimit)", "public PeriodBuilderFactory setMinLimit(float minLimit)", "public PeriodBuilderFactory setAllowZero(boolean allow)", "public PeriodBuilderFactory setWeeksAloneOnly(boolean aloneOnly)", "public PeriodBuilderFactory setAllowMilliseconds(boolean allow)", "public PeriodBuilderFactory setLocale(String localeName)", "public PeriodBuilderFactory setTimeZone(TimeZone timeZone)", "private Settings getSettings()", "public PeriodBuilder getFixedUnitBuilder(TimeUnit unit)", "public PeriodBuilder getSingleUnitBuilder()", "public PeriodBuilder getOneOrTwoUnitBuilder()", "public PeriodBuilder getMultiUnitBuilder(int periodCount)" ],
  "variableNames" : [ "ds", "settings", "allBits" ]
}