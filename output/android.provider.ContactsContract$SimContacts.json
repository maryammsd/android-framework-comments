{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "SimContacts",
  "comment" : "\n     * Class containing utility methods around determine what accounts in the ContactsProvider are\n     * related to the SIM cards in the device.\n     * <p>\n     * Apps interested in managing contacts from SIM cards can query the ContactsProvider using\n     * {@link #getSimAccounts(ContentResolver)} to get all accounts that relate to SIM cards. They\n     * can also register a receiver for the {@link #ACTION_SIM_ACCOUNTS_CHANGED} broadcast to be\n     * notified when these accounts change.\n     ",
  "links" : [ "#ACTION_SIM_ACCOUNTS_CHANGED", "#getSimAccounts(ContentResolver)" ],
  "variables" : [ {
    "name" : "ADD_SIM_ACCOUNT_METHOD",
    "type" : "String",
    "comment" : "\n         * The method to invoke in order to add a new SIM account for a newly inserted SIM card.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "REMOVE_SIM_ACCOUNT_METHOD",
    "type" : "String",
    "comment" : "\n         * The method to invoke in order to remove a SIM account once the corresponding SIM card is\n         * ejected.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "QUERY_SIM_ACCOUNTS_METHOD",
    "type" : "String",
    "comment" : "\n         * The method to invoke in order to query all SIM accounts.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIM_SLOT_INDEX",
    "type" : "String",
    "comment" : "\n         * Key to add in the outgoing Bundle for the SIM slot.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIM_EF_TYPE",
    "type" : "String",
    "comment" : "\n         * Key to add in the outgoing Bundle for the SIM account's EF type.\n         * See {@link SimAccount#mEfType} for more information.\n         *\n         * @hide\n         ",
    "links" : [ "#mEfType" ]
  }, {
    "name" : "KEY_ACCOUNT_NAME",
    "type" : "String",
    "comment" : "\n         * Key to add in the outgoing Bundle for the account name.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_ACCOUNT_TYPE",
    "type" : "String",
    "comment" : "\n         * Key to add in the outgoing Bundle for the account type.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIM_ACCOUNTS",
    "type" : "String",
    "comment" : "\n         * Key in the incoming Bundle for the all the SIM accounts.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ACTION_SIM_ACCOUNTS_CHANGED",
    "type" : "String",
    "comment" : "\n         * Broadcast Action: SIM accounts have changed, call\n         * {@link #getSimAccounts(ContentResolver)} to get the latest.\n         ",
    "links" : [ "#getSimAccounts(ContentResolver)" ]
  } ],
  "methods" : [ {
    "name" : "public static void addSimAccount(@NonNull ContentResolver contentResolver, @NonNull String accountName, @NonNull String accountType, int simSlotIndex, int efType)",
    "returnType" : "void",
    "comment" : "\n         * Adds a new SIM account that maps to the corresponding SIM slot.\n         *\n         * @param accountName     accountName value for the account\n         * @param accountType     accountType value for the account\n         * @param contentResolver to perform the operation on.\n         * @param simSlotIndex    the SIM slot index of this new account.\n         * @param efType          the EF type of this new account.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static void removeSimAccounts(@NonNull ContentResolver contentResolver, int simSlotIndex)",
    "returnType" : "void",
    "comment" : "\n         * Removes all SIM accounts that map to the corresponding SIM slot.\n         *\n         * @param contentResolver to perform the operation on.\n         * @param simSlotIndex    the SIM slot index of the accounts to remove.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static List<SimAccount> getSimAccounts(@NonNull ContentResolver contentResolver)",
    "returnType" : "List<SimAccount>",
    "comment" : "\n         * Returns all known SIM accounts. May be empty but never null.\n         *\n         * @param contentResolver content resolver to query.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void addSimAccount(@NonNull ContentResolver contentResolver, @NonNull String accountName, @NonNull String accountType, int simSlotIndex, int efType)", "public static void removeSimAccounts(@NonNull ContentResolver contentResolver, int simSlotIndex)", "public static List<SimAccount> getSimAccounts(@NonNull ContentResolver contentResolver)" ],
  "variableNames" : [ "ADD_SIM_ACCOUNT_METHOD", "REMOVE_SIM_ACCOUNT_METHOD", "QUERY_SIM_ACCOUNTS_METHOD", "KEY_SIM_SLOT_INDEX", "KEY_SIM_EF_TYPE", "KEY_ACCOUNT_NAME", "KEY_ACCOUNT_TYPE", "KEY_SIM_ACCOUNTS", "ACTION_SIM_ACCOUNTS_CHANGED" ]
}