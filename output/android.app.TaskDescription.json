{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/ActivityManager.java",
  "packageName" : "android.app",
  "className" : "TaskDescription",
  "comment" : "\n     * Information you can set and retrieve about the current activity within the recent task list.\n     ",
  "variables" : [ {
    "name" : "ATTR_TASKDESCRIPTION_PREFIX",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ATTR_TASKDESCRIPTIONLABEL",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTR_TASKDESCRIPTIONCOLOR_PRIMARY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTR_TASKDESCRIPTIONCOLOR_BACKGROUND",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTR_TASKDESCRIPTIONICON_FILENAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTR_TASKDESCRIPTIONICON_RESOURCE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ATTR_TASKDESCRIPTIONICON_RESOURCE_PACKAGE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLabel",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIconFilename",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColorPrimary",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mColorBackground",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStatusBarColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNavigationBarColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnsureStatusBarContrastWhenTransparent",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnsureNavigationBarContrastWhenTransparent",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResizeMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TaskDescription>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void copyFrom(TaskDescription other)",
    "returnType" : "void",
    "comment" : "\n         * Copies this the values from another TaskDescription.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void copyFromPreserveHiddenFields(TaskDescription other)",
    "returnType" : "void",
    "comment" : "\n         * Copies values from another TaskDescription, but preserves the hidden fields if they\n         * weren't set on {@code other}. Public fields will be overwritten anyway.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setLabel(String label)",
    "returnType" : "void",
    "comment" : "\n         * Sets the label for this task description.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setPrimaryColor(int primaryColor)",
    "returnType" : "void",
    "comment" : "\n         * Sets the primary color for this task description.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setBackgroundColor(int backgroundColor)",
    "returnType" : "void",
    "comment" : "\n         * Sets the background color for this task description.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setStatusBarColor(int statusBarColor)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setNavigationBarColor(int navigationBarColor)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setIcon(Icon icon)",
    "returnType" : "void",
    "comment" : "\n         * Sets the icon resource for this task description.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setIconFilename(String iconFilename)",
    "returnType" : "void",
    "comment" : "\n         * Moves the icon bitmap reference from an actual Bitmap to a file containing the\n         * bitmap.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setResizeMode(int resizeMode)",
    "returnType" : "void",
    "comment" : "\n         * Sets the resize mode for this task description. Resize mode as in\n         * {@link android.content.pm.ActivityInfo}.\n         * @hide\n         ",
    "links" : [ "android.content.pm.ActivityInfo" ]
  }, {
    "name" : "public void setMinWidth(int minWidth)",
    "returnType" : "void",
    "comment" : "\n         * The minimal width size to show the app content in freeform mode.\n         * @param minWidth minimal width, -1 for system default.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setMinHeight(int minHeight)",
    "returnType" : "void",
    "comment" : "\n         * The minimal height size to show the app content in freeform mode.\n         * @param minHeight minimal height, -1 for system default.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getLabel()",
    "returnType" : "String",
    "comment" : "\n         * @return The label and description of the current state of this task.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Icon loadIcon()",
    "returnType" : "Icon",
    "comment" : "\n         * @return The actual icon that represents the current state of this task if it is in memory\n         *         or loads it from disk if available.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Bitmap getIcon()",
    "returnType" : "Bitmap",
    "comment" : "\n         * @return The in-memory or loaded icon that represents the current state of this task.\n         * @deprecated This call is no longer supported. The caller should keep track of any icons\n         *             it sets for the task descriptions internally.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Icon getRawIcon()",
    "returnType" : "Icon",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String getIconResourcePackage()",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getIconResource()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String getIconFilename()",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public Bitmap getInMemoryIcon()",
    "returnType" : "Bitmap",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static Bitmap loadTaskDescriptionIcon(String iconFilename, int userId)",
    "returnType" : "Bitmap",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getPrimaryColor()",
    "returnType" : "int",
    "comment" : "\n         * @return The color override on the theme's primary color.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getBackgroundColor()",
    "returnType" : "int",
    "comment" : "\n         * @return The background color.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getStatusBarColor()",
    "returnType" : "int",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getNavigationBarColor()",
    "returnType" : "int",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean getEnsureStatusBarContrastWhenTransparent()",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setEnsureStatusBarContrastWhenTransparent(boolean ensureStatusBarContrastWhenTransparent)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean getEnsureNavigationBarContrastWhenTransparent()",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setEnsureNavigationBarContrastWhenTransparent(boolean ensureNavigationBarContrastWhenTransparent)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getResizeMode()",
    "returnType" : "int",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMinWidth()",
    "returnType" : "int",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMinHeight()",
    "returnType" : "int",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void saveToXml(XmlSerializer out) throws IOException",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void restoreFromXml(XmlPullParser in)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void readFromParcel(Parcel source)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean equals(TaskDescription td1, TaskDescription td2)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "variableNames" : [ "ATTR_TASKDESCRIPTION_PREFIX", "ATTR_TASKDESCRIPTIONLABEL", "ATTR_TASKDESCRIPTIONCOLOR_PRIMARY", "ATTR_TASKDESCRIPTIONCOLOR_BACKGROUND", "ATTR_TASKDESCRIPTIONICON_FILENAME", "ATTR_TASKDESCRIPTIONICON_RESOURCE", "ATTR_TASKDESCRIPTIONICON_RESOURCE_PACKAGE", "mLabel", "mIcon", "mIconFilename", "mColorPrimary", "mColorBackground", "mStatusBarColor", "mNavigationBarColor", "mEnsureStatusBarContrastWhenTransparent", "mEnsureNavigationBarContrastWhenTransparent", "mResizeMode", "mMinWidth", "mMinHeight", "CREATOR" ],
  "methodNames" : [ "public void copyFrom(TaskDescription other)", "public void copyFromPreserveHiddenFields(TaskDescription other)", "public void setLabel(String label)", "public void setPrimaryColor(int primaryColor)", "public void setBackgroundColor(int backgroundColor)", "public void setStatusBarColor(int statusBarColor)", "public void setNavigationBarColor(int navigationBarColor)", "public void setIcon(Icon icon)", "public void setIconFilename(String iconFilename)", "public void setResizeMode(int resizeMode)", "public void setMinWidth(int minWidth)", "public void setMinHeight(int minHeight)", "public String getLabel()", "public Icon loadIcon()", "public Bitmap getIcon()", "public Icon getRawIcon()", "public String getIconResourcePackage()", "public int getIconResource()", "public String getIconFilename()", "public Bitmap getInMemoryIcon()", "public static Bitmap loadTaskDescriptionIcon(String iconFilename, int userId)", "public int getPrimaryColor()", "public int getBackgroundColor()", "public int getStatusBarColor()", "public int getNavigationBarColor()", "public boolean getEnsureStatusBarContrastWhenTransparent()", "public void setEnsureStatusBarContrastWhenTransparent(boolean ensureStatusBarContrastWhenTransparent)", "public boolean getEnsureNavigationBarContrastWhenTransparent()", "public void setEnsureNavigationBarContrastWhenTransparent(boolean ensureNavigationBarContrastWhenTransparent)", "public int getResizeMode()", "public int getMinWidth()", "public int getMinHeight()", "public void saveToXml(XmlSerializer out) throws IOException", "public void restoreFromXml(XmlPullParser in)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void readFromParcel(Parcel source)", "public String toString()", "public boolean equals(Object obj)", "public static boolean equals(TaskDescription td1, TaskDescription td2)" ]
}