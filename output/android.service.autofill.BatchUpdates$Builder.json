{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/autofill/BatchUpdates.java",
  "packageName" : "android.service.autofill",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link BatchUpdates} objects.\n     ",
  "links" : [ "android.service.autofill.BatchUpdates" ],
  "variables" : [ {
    "name" : "mUpdates",
    "type" : "RemoteViews",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDestroyed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransformations",
    "type" : "ArrayList<Pair<Integer, InternalTransformation>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder updateTemplate(@NonNull RemoteViews updates)",
    "returnType" : "Builder",
    "comment" : "\n         * Applies the {@code updates} in the underlying presentation template.\n         *\n         * <p><b>Note:</b> The updates are applied before the\n         * {@link #transformChild(int, Transformation) transformations} are applied to the children\n         * views.\n         *\n         * <p>Theme does not work with RemoteViews layout. Avoid hardcoded text color\n         * or background color: Autofill on different platforms may have different themes.\n         *\n         * @param updates a {@link RemoteViews} with the updated actions to be applied in the\n         * underlying presentation template.\n         *\n         * @return this builder\n         * @throws IllegalArgumentException if {@code condition} is not a class provided\n         * by the Android System.\n         ",
    "links" : [ "android.widget.RemoteViews", "#transformChild(int" ]
  }, {
    "name" : "public Builder transformChild(int id, @NonNull Transformation transformation)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a transformation to replace the value of a child view with the fields in the\n         * screen.\n         *\n         * <p>When multiple transformations are added for the same child view, they are applied\n         * in the same order as added.\n         *\n         * <p><b>Note:</b> The transformations are applied after the\n         * {@link #updateTemplate(RemoteViews) updates} are applied to the presentation template.\n         *\n         * @param id view id of the children view.\n         * @param transformation an implementation provided by the Android System.\n         * @return this builder.\n         * @throws IllegalArgumentException if {@code transformation} is not a class provided\n         * by the Android System.\n         ",
    "links" : [ "#updateTemplate(RemoteViews)" ]
  }, {
    "name" : "public BatchUpdates build()",
    "returnType" : "BatchUpdates",
    "comment" : "\n         * Creates a new {@link BatchUpdates} instance.\n         *\n         * @throws IllegalStateException if {@link #build()} was already called before or no call\n         * to {@link #updateTemplate(RemoteViews)} or {@link #transformChild(int, Transformation)}\n         * has been made.\n         ",
    "links" : [ "#build()", "android.service.autofill.BatchUpdates", "#transformChild(int", "#updateTemplate(RemoteViews)" ]
  }, {
    "name" : "private void throwIfDestroyed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder updateTemplate(@NonNull RemoteViews updates)", "public Builder transformChild(int id, @NonNull Transformation transformation)", "public BatchUpdates build()", "private void throwIfDestroyed()" ],
  "variableNames" : [ "mUpdates", "mDestroyed", "mTransformations" ]
}