{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/animation/PropertyValuesHolder_Delegate.java",
  "packageName" : "android.animation",
  "className" : "PropertyValuesHolder_Delegate",
  "comment" : "\n * Delegate implementing the native methods of android.animation.PropertyValuesHolder\n *\n * Through the layoutlib_create tool, the original native methods of PropertyValuesHolder have been\n * replaced by calls to methods of the same name in this delegate class.\n *\n * Because it's a stateless class to start with, there's no need to keep a {@link DelegateManager}\n * around to map int to instance of the delegate.\n *\n * The main goal of this class' methods are to provide a native way to access setters and getters\n * on some object. We override these methods to use reflection since the original reflection\n * implementation of the PropertyValuesHolder won't be able to access protected methods.\n *\n ",
  "variables" : [ {
    "name" : "FLOAT_VARIANTS",
    "type" : "Class[]",
    "comment" : " So we supply an ordered array of other types to try before giving up.",
    "links" : [ ]
  }, {
    "name" : "INTEGER_VARIANTS",
    "type" : "Class[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sMethodIndexLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ID_TO_METHOD",
    "type" : "Map<Long, Method>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "METHOD_NAME_TO_ID",
    "type" : "Map<String, Long>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sNextId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static long registerMethod(Class<?> targetClass, String methodName, Class[] types, int nArgs)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void callMethod(Object target, long methodID, Object... args)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nGetIntMethod(Class<?> targetClass, String methodName)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nGetFloatMethod(Class<?> targetClass, String methodName)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nGetMultipleIntMethod(Class<?> targetClass, String methodName, int numParams)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nGetMultipleFloatMethod(Class<?> targetClass, String methodName, int numParams)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nCallIntMethod(Object target, long methodID, int arg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nCallFloatMethod(Object target, long methodID, float arg)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nCallTwoIntMethod(Object target, long methodID, int arg1, int arg2)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nCallFourIntMethod(Object target, long methodID, int arg1, int arg2, int arg3, int arg4)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nCallMultipleIntMethod(Object target, long methodID, int[] args)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nCallTwoFloatMethod(Object target, long methodID, float arg1, float arg2)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nCallFourFloatMethod(Object target, long methodID, float arg1, float arg2, float arg3, float arg4)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nCallMultipleFloatMethod(Object target, long methodID, float[] args)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void clearCaches()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "FLOAT_VARIANTS", "INTEGER_VARIANTS", "sMethodIndexLock", "ID_TO_METHOD", "METHOD_NAME_TO_ID", "sNextId" ],
  "methodNames" : [ "private static long registerMethod(Class<?> targetClass, String methodName, Class[] types, int nArgs)", "private static void callMethod(Object target, long methodID, Object... args)", " static long nGetIntMethod(Class<?> targetClass, String methodName)", " static long nGetFloatMethod(Class<?> targetClass, String methodName)", " static long nGetMultipleIntMethod(Class<?> targetClass, String methodName, int numParams)", " static long nGetMultipleFloatMethod(Class<?> targetClass, String methodName, int numParams)", " static void nCallIntMethod(Object target, long methodID, int arg)", " static void nCallFloatMethod(Object target, long methodID, float arg)", " static void nCallTwoIntMethod(Object target, long methodID, int arg1, int arg2)", " static void nCallFourIntMethod(Object target, long methodID, int arg1, int arg2, int arg3, int arg4)", " static void nCallMultipleIntMethod(Object target, long methodID, int[] args)", " static void nCallTwoFloatMethod(Object target, long methodID, float arg1, float arg2)", " static void nCallFourFloatMethod(Object target, long methodID, float arg1, float arg2, float arg3, float arg4)", " static void nCallMultipleFloatMethod(Object target, long methodID, float[] args)", "public static void clearCaches()" ]
}