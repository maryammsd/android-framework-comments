{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/system/keystore2/IKeystoreSecurityLevel.java",
  "packageName" : "android.system.keystore2",
  "className" : "IKeystoreSecurityLevel",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "VERSION",
    "type" : "int",
    "comment" : "\n   * The version of this interface that the caller is built against.\n   * This might be different from what {@link #getInterfaceVersion()\n   * getInterfaceVersion} returns as that is the version of the interface\n   * that the remote object is implementing.\n   ",
    "links" : [ "#getInterfaceVersion()" ]
  }, {
    "name" : "HASH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_FLAG_AUTH_BOUND_WITHOUT_CRYPTOGRAPHIC_LSKF_BINDING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public android.system.keystore2.CreateOperationResponse createOperation(android.system.keystore2.KeyDescriptor key, android.hardware.security.keymint.KeyParameter[] operationParameters, boolean forced) throws android.os.RemoteException",
    "returnType" : "android.system.keystore2.CreateOperationResponse",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.system.keystore2.KeyMetadata generateKey(android.system.keystore2.KeyDescriptor key, android.system.keystore2.KeyDescriptor attestationKey, android.hardware.security.keymint.KeyParameter[] params, int flags, byte[] entropy) throws android.os.RemoteException",
    "returnType" : "android.system.keystore2.KeyMetadata",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.system.keystore2.KeyMetadata importKey(android.system.keystore2.KeyDescriptor key, android.system.keystore2.KeyDescriptor attestationKey, android.hardware.security.keymint.KeyParameter[] params, int flags, byte[] keyData) throws android.os.RemoteException",
    "returnType" : "android.system.keystore2.KeyMetadata",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.system.keystore2.KeyMetadata importWrappedKey(android.system.keystore2.KeyDescriptor key, android.system.keystore2.KeyDescriptor wrappingKey, byte[] maskingKey, android.hardware.security.keymint.KeyParameter[] params, android.system.keystore2.AuthenticatorSpec[] authenticators) throws android.os.RemoteException",
    "returnType" : "android.system.keystore2.KeyMetadata",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.system.keystore2.EphemeralStorageKeyResponse convertStorageKeyToEphemeral(android.system.keystore2.KeyDescriptor storageKey) throws android.os.RemoteException",
    "returnType" : "android.system.keystore2.EphemeralStorageKeyResponse",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void deleteKey(android.system.keystore2.KeyDescriptor key) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceVersion() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getInterfaceHash() throws android.os.RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public android.system.keystore2.CreateOperationResponse createOperation(android.system.keystore2.KeyDescriptor key, android.hardware.security.keymint.KeyParameter[] operationParameters, boolean forced) throws android.os.RemoteException", "public android.system.keystore2.KeyMetadata generateKey(android.system.keystore2.KeyDescriptor key, android.system.keystore2.KeyDescriptor attestationKey, android.hardware.security.keymint.KeyParameter[] params, int flags, byte[] entropy) throws android.os.RemoteException", "public android.system.keystore2.KeyMetadata importKey(android.system.keystore2.KeyDescriptor key, android.system.keystore2.KeyDescriptor attestationKey, android.hardware.security.keymint.KeyParameter[] params, int flags, byte[] keyData) throws android.os.RemoteException", "public android.system.keystore2.KeyMetadata importWrappedKey(android.system.keystore2.KeyDescriptor key, android.system.keystore2.KeyDescriptor wrappingKey, byte[] maskingKey, android.hardware.security.keymint.KeyParameter[] params, android.system.keystore2.AuthenticatorSpec[] authenticators) throws android.os.RemoteException", "public android.system.keystore2.EphemeralStorageKeyResponse convertStorageKeyToEphemeral(android.system.keystore2.KeyDescriptor storageKey) throws android.os.RemoteException", "public void deleteKey(android.system.keystore2.KeyDescriptor key) throws android.os.RemoteException", "public int getInterfaceVersion() throws android.os.RemoteException", "public String getInterfaceHash() throws android.os.RemoteException" ],
  "variableNames" : [ "VERSION", "HASH", "DESCRIPTOR", "KEY_FLAG_AUTH_BOUND_WITHOUT_CRYPTOGRAPHIC_LSKF_BINDING" ]
}