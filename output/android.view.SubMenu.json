{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/SubMenu.java",
  "packageName" : "android.view",
  "className" : "SubMenu",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public SubMenu setHeaderTitle(@StringRes int titleRes)",
    "returnType" : "SubMenu",
    "comment" : "\n     * Sets the submenu header's title to the title given in <var>titleRes</var>\n     * resource identifier.\n     * \n     * @param titleRes The string resource identifier used for the title.\n     * @return This SubMenu so additional setters can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SubMenu setHeaderTitle(CharSequence title)",
    "returnType" : "SubMenu",
    "comment" : "\n     * Sets the submenu header's title to the title given in <var>title</var>.\n     * \n     * @param title The character sequence used for the title.\n     * @return This SubMenu so additional setters can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SubMenu setHeaderIcon(@DrawableRes int iconRes)",
    "returnType" : "SubMenu",
    "comment" : "\n     * Sets the submenu header's icon to the icon given in <var>iconRes</var>\n     * resource id.\n     * \n     * @param iconRes The resource identifier used for the icon.\n     * @return This SubMenu so additional setters can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SubMenu setHeaderIcon(Drawable icon)",
    "returnType" : "SubMenu",
    "comment" : "\n     * Sets the submenu header's icon to the icon given in <var>icon</var>\n     * {@link Drawable}.\n     * \n     * @param icon The {@link Drawable} used for the icon.\n     * @return This SubMenu so additional setters can be called.\n     ",
    "links" : [ "android.graphics.drawable.Drawable" ]
  }, {
    "name" : "public SubMenu setHeaderView(View view)",
    "returnType" : "SubMenu",
    "comment" : "\n     * Sets the header of the submenu to the {@link View} given in\n     * <var>view</var>. This replaces the header title and icon (and those\n     * replace this).\n     * \n     * @param view The {@link View} used for the header.\n     * @return This SubMenu so additional setters can be called.\n     ",
    "links" : [ "android.view.View" ]
  }, {
    "name" : "public void clearHeader()",
    "returnType" : "void",
    "comment" : "\n     * Clears the header of the submenu.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SubMenu setIcon(@DrawableRes int iconRes)",
    "returnType" : "SubMenu",
    "comment" : "\n     * Change the icon associated with this submenu's item in its parent menu.\n     * \n     * @see MenuItem#setIcon(int)\n     * @param iconRes The new icon (as a resource ID) to be displayed.\n     * @return This SubMenu so additional setters can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public SubMenu setIcon(Drawable icon)",
    "returnType" : "SubMenu",
    "comment" : "\n     * Change the icon associated with this submenu's item in its parent menu.\n     * \n     * @see MenuItem#setIcon(Drawable)\n     * @param icon The new icon (as a Drawable) to be displayed.\n     * @return This SubMenu so additional setters can be called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public MenuItem getItem()",
    "returnType" : "MenuItem",
    "comment" : "\n     * Gets the {@link MenuItem} that represents this submenu in the parent\n     * menu.  Use this for setting additional item attributes.\n     * \n     * @return The {@link MenuItem} that launches the submenu when invoked.\n     ",
    "links" : [ "android.view.MenuItem" ]
  } ],
  "methodNames" : [ "public SubMenu setHeaderTitle(@StringRes int titleRes)", "public SubMenu setHeaderTitle(CharSequence title)", "public SubMenu setHeaderIcon(@DrawableRes int iconRes)", "public SubMenu setHeaderIcon(Drawable icon)", "public SubMenu setHeaderView(View view)", "public void clearHeader()", "public SubMenu setIcon(@DrawableRes int iconRes)", "public SubMenu setIcon(Drawable icon)", "public MenuItem getItem()" ],
  "variableNames" : [ ]
}