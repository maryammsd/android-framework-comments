{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/AudioPort.java",
  "packageName" : "android.media",
  "className" : "AudioPort",
  "comment" : "\n * An audio port is a node of the audio framework or hardware that can be connected to or\n * disconnect from another audio node to create a specific audio routing configuration.\n * Examples of audio ports are an output device (speaker) or an output mix (see AudioMixPort).\n * All attributes that are relevant for applications to make routing selection are described\n * in an AudioPort,  in particular:\n * - possible channel mask configurations.\n * - audio format (PCM 16bit, PCM 24bit...)\n * - gain: a port can be associated with one or more gain controllers (see AudioGain).\n *\n * This object is always created by the framework and read only by applications.\n * A list of all audio port descriptors currently available for applications to control\n * is obtained by AudioManager.listAudioPorts().\n * An application can obtain an AudioPortConfig for a valid configuration of this port\n * by calling AudioPort.buildConfig() and use this configuration\n * to create a connection between audio sinks and sources with AudioManager.connectAudioPatch()\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ROLE_NONE",
    "type" : "int",
    "comment" : "\n     * For use by the audio framework.\n     ",
    "links" : [ ]
  }, {
    "name" : "ROLE_SOURCE",
    "type" : "int",
    "comment" : "\n     * The audio port is a source (produces audio)\n     ",
    "links" : [ ]
  }, {
    "name" : "ROLE_SINK",
    "type" : "int",
    "comment" : "\n     * The audio port is a sink (consumes audio)\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_NONE",
    "type" : "int",
    "comment" : "\n     * audio port type for use by audio framework implementation\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_DEVICE",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_SUBMIX",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "TYPE_SESSION",
    "type" : "int",
    "comment" : "\n     ",
    "links" : [ ]
  }, {
    "name" : "mHandle",
    "type" : "AudioHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRole",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSamplingRates",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelMasks",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelIndexMasks",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFormats",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGains",
    "type" : "AudioGain[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mActiveConfig",
    "type" : "AudioPortConfig",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " AudioHandle handle()",
    "returnType" : "AudioHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int id()",
    "returnType" : "int",
    "comment" : "\n     * Get the system unique device ID.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int role()",
    "returnType" : "int",
    "comment" : "\n     * Get the audio port role\n     ",
    "links" : [ ]
  }, {
    "name" : "public String name()",
    "returnType" : "String",
    "comment" : "\n     * Get the human-readable name of this port. Perhaps an internal\n     * designation or an physical device.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] samplingRates()",
    "returnType" : "int[]",
    "comment" : "\n     * Get the list of supported sampling rates\n     * Empty array if sampling rate is not relevant for this audio port\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] channelMasks()",
    "returnType" : "int[]",
    "comment" : "\n     * Get the list of supported channel mask configurations\n     * (e.g AudioFormat.CHANNEL_OUT_STEREO)\n     * Empty array if channel mask is not relevant for this audio port\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] channelIndexMasks()",
    "returnType" : "int[]",
    "comment" : "\n     * Get the list of supported channel index mask configurations\n     * (e.g 0x0003 means 2 channel, 0x000F means 4 channel....)\n     * Empty array if channel index mask is not relevant for this audio port\n     ",
    "links" : [ ]
  }, {
    "name" : "public int[] formats()",
    "returnType" : "int[]",
    "comment" : "\n     * Get the list of supported audio format configurations\n     * (e.g AudioFormat.ENCODING_PCM_16BIT)\n     * Empty array if format is not relevant for this audio port\n     ",
    "links" : [ ]
  }, {
    "name" : "public AudioGain[] gains()",
    "returnType" : "AudioGain[]",
    "comment" : "\n     * Get the list of gain descriptors\n     * Empty array if this port does not have gain control\n     ",
    "links" : [ ]
  }, {
    "name" : " AudioGain gain(int index)",
    "returnType" : "AudioGain",
    "comment" : "\n     * Get the gain descriptor at a given index\n     ",
    "links" : [ ]
  }, {
    "name" : "public AudioPortConfig buildConfig(int samplingRate, int channelMask, int format, AudioGainConfig gain)",
    "returnType" : "AudioPortConfig",
    "comment" : "\n     * Build a specific configuration of this audio port for use by methods\n     * like AudioManager.connectAudioPatch().\n     * @param samplingRate\n     * @param channelMask The desired channel mask. AudioFormat.CHANNEL_OUT_DEFAULT if no change\n     * from active configuration requested.\n     * @param format The desired audio format. AudioFormat.ENCODING_DEFAULT if no change\n     * from active configuration requested.\n     * @param gain The desired gain. null if no gain changed requested.\n     ",
    "links" : [ ]
  }, {
    "name" : "public AudioPortConfig activeConfig()",
    "returnType" : "AudioPortConfig",
    "comment" : "\n     * Get currently active configuration of this audio port.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "ROLE_NONE", "ROLE_SOURCE", "ROLE_SINK", "TYPE_NONE", "TYPE_DEVICE", "TYPE_SUBMIX", "TYPE_SESSION", "mHandle", "mRole", "mName", "mSamplingRates", "mChannelMasks", "mChannelIndexMasks", "mFormats", "mGains", "mActiveConfig" ],
  "methodNames" : [ " AudioHandle handle()", "public int id()", "public int role()", "public String name()", "public int[] samplingRates()", "public int[] channelMasks()", "public int[] channelIndexMasks()", "public int[] formats()", "public AudioGain[] gains()", " AudioGain gain(int index)", "public AudioPortConfig buildConfig(int samplingRate, int channelMask, int format, AudioGainConfig gain)", "public AudioPortConfig activeConfig()", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ]
}