{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/se/omapi/SEService.java",
  "packageName" : "android.se.omapi",
  "className" : "SEService",
  "comment" : "\n * The SEService realises the communication to available Secure Elements on the\n * device. This is the entry point of this API. It is used to connect to the\n * infrastructure and get access to a list of Secure Element Readers.\n *\n * @see <a href=\"http://simalliance.org\">SIMalliance Open Mobile API  v3.0</a>\n ",
  "variables" : [ {
    "name" : "IO_ERROR",
    "type" : "int",
    "comment" : "\n     * Error code used with ServiceSpecificException.\n     * Thrown if there was an error communicating with the Secure Element.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "NO_SUCH_ELEMENT_ERROR",
    "type" : "int",
    "comment" : "\n     * Error code used with ServiceSpecificException.\n     * Thrown if AID cannot be selected or is not available when opening\n     * a logical channel.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mSEListener",
    "type" : "SEListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UICC_TERMINAL",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : " The client context (e.g. activity). ",
    "links" : [ ]
  }, {
    "name" : "mSecureElementService",
    "type" : "ISecureElementService",
    "comment" : " The backend system. ",
    "links" : [ ]
  }, {
    "name" : "mConnection",
    "type" : "ServiceConnection",
    "comment" : "\n     * Class for interacting with the main interface of the backend.\n     ",
    "links" : [ ]
  }, {
    "name" : "mReaders",
    "type" : "HashMap<String, Reader>",
    "comment" : "\n     * Collection of available readers\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isConnected()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells whether or not the service is connected.\n     *\n     * @return <code>true</code> if the service is connected.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Reader[] getReaders()",
    "returnType" : "Reader[]",
    "comment" : "\n     * Returns an array of available Secure Element readers.\n     * There must be no duplicated objects in the returned list.\n     * All available readers shall be listed even if no card is inserted.\n     *\n     * @return An array of Readers. If there are no readers the returned array\n     * is of length 0.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Reader getUiccReader(int slotNumber)",
    "returnType" : "Reader",
    "comment" : "\n      * Obtain a UICC Reader instance with specific slot number from the SecureElementService\n      *\n      * @param slotNumber The index of the uicc slot. The index starts from 1.\n      * @throws IllegalArgumentException if the reader object corresponding to the uiccSlotNumber\n      *         is not exist.\n      * @return A Reader object for this uicc slot.\n      ",
    "links" : [ ]
  }, {
    "name" : "public void shutdown()",
    "returnType" : "void",
    "comment" : "\n     * Releases all Secure Elements resources allocated by this SEService\n     * (including any binding to an underlying service).\n     * As a result isConnected() will return false after shutdown() was called.\n     * After this method call, the SEService object is not connected.\n     * This method should be called when connection to the Secure Element is not needed\n     * or in the termination method of the calling application\n     * (or part of this application) which is bound to this SEService.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getVersion()",
    "returnType" : "String",
    "comment" : "\n     * Returns the version of the OpenMobile API specification this\n     * implementation is based on.\n     *\n     * @return String containing the OpenMobile API version (e.g. \"3.0\").\n     ",
    "links" : [ ]
  }, {
    "name" : " ISecureElementListener getListener()",
    "returnType" : "ISecureElementListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ISecureElementReader getReader(String name)",
    "returnType" : "ISecureElementReader",
    "comment" : "\n     * Obtain a Reader instance from the SecureElementService\n     ",
    "links" : [ ]
  }, {
    "name" : "private void loadReaders()",
    "returnType" : "void",
    "comment" : "\n     * Load available Secure Element Readers\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "IO_ERROR", "NO_SUCH_ELEMENT_ERROR", "mSEListener", "TAG", "UICC_TERMINAL", "mLock", "mContext", "mSecureElementService", "mConnection", "mReaders" ],
  "methodNames" : [ "public boolean isConnected()", "public Reader[] getReaders()", "public Reader getUiccReader(int slotNumber)", "public void shutdown()", "public String getVersion()", " ISecureElementListener getListener()", "private ISecureElementReader getReader(String name)", "private void loadReaders()" ]
}