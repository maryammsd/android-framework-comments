{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/DefaultDataHandler.java",
  "packageName" : "android.content",
  "className" : "DefaultDataHandler",
  "comment" : "\n * Inserts default data from InputStream, should be in XML format.\n * If the provider syncs data to the server, the imported data will be synced to the server.\n * <p>Samples:</p>\n * <br/>\n *  Insert one row:\n * <pre>\n * &lt;row uri=\"content://contacts/people\">\n *  &lt;Col column = \"name\" value = \"foo feebe \"/>\n *  &lt;Col column = \"addr\" value = \"Tx\"/>\n * &lt;/row></pre>\n * <br/>\n * Delete, it must be in order of uri, select, and arg:\n * <pre>\n * &lt;del uri=\"content://contacts/people\" select=\"name=? and addr=?\" \n *  arg1 = \"foo feebe\" arg2 =\"Tx\"/></pre>\n * <br/>\n *  Use first row's uri to insert into another table,\n *  content://contacts/people/1/phones:\n * <pre>\n * &lt;row uri=\"content://contacts/people\">\n *  &lt;col column = \"name\" value = \"foo feebe\"/>\n *  &lt;col column = \"addr\" value = \"Tx\"/>\n *  &lt;row postfix=\"phones\">\n *    &lt;col column=\"number\" value=\"512-514-6535\"/>\n *  &lt;/row>\n *  &lt;row postfix=\"phones\">\n *    &lt;col column=\"cell\" value=\"512-514-6535\"/>\n *  &lt;/row>  \n * &lt;/row></pre>\n * <br/>\n *  Insert multiple rows in to same table and same attributes:\n * <pre>\n * &lt;row uri=\"content://contacts/people\" >\n *  &lt;row>\n *   &lt;col column= \"name\" value = \"foo feebe\"/>\n *   &lt;col column= \"addr\" value = \"Tx\"/>\n *  &lt;/row>\n *  &lt;row>\n *  &lt;/row>\n * &lt;/row></pre>\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ROW",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "COL",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "URI_STR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "POSTFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEL",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SELECT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ARG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUris",
    "type" : "Stack<Uri>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mValues",
    "type" : "ContentValues",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentResolver",
    "type" : "ContentResolver",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void insert(ContentResolver contentResolver, InputStream in) throws IOException, SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void insert(ContentResolver contentResolver, String in) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void parseRow(Attributes atts) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Uri insertRow()",
    "returnType" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startElement(String uri, String localName, String name, Attributes atts) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endElement(String uri, String localName, String name) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void characters(char[] ch, int start, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endDocument() throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void endPrefixMapping(String prefix) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void ignorableWhitespace(char[] ch, int start, int length) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void processingInstruction(String target, String data) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDocumentLocator(Locator locator)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void skippedEntity(String name) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startDocument() throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startPrefixMapping(String prefix, String uri) throws SAXException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void insert(ContentResolver contentResolver, InputStream in) throws IOException, SAXException", "public void insert(ContentResolver contentResolver, String in) throws SAXException", "private void parseRow(Attributes atts) throws SAXException", "private Uri insertRow()", "public void startElement(String uri, String localName, String name, Attributes atts) throws SAXException", "public void endElement(String uri, String localName, String name) throws SAXException", "public void characters(char[] ch, int start, int length) throws SAXException", "public void endDocument() throws SAXException", "public void endPrefixMapping(String prefix) throws SAXException", "public void ignorableWhitespace(char[] ch, int start, int length) throws SAXException", "public void processingInstruction(String target, String data) throws SAXException", "public void setDocumentLocator(Locator locator)", "public void skippedEntity(String name) throws SAXException", "public void startDocument() throws SAXException", "public void startPrefixMapping(String prefix, String uri) throws SAXException" ],
  "variableNames" : [ "ROW", "COL", "URI_STR", "POSTFIX", "DEL", "SELECT", "ARG", "mUris", "mValues", "mContentResolver" ]
}