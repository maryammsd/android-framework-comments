{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inputmethod/SelectRangeGesture.java",
  "packageName" : "android.view.inputmethod",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link SelectRangeGesture}. This class is not designed to be thread-safe.\n     ",
  "links" : [ "android.view.inputmethod.SelectRangeGesture" ],
  "variables" : [ {
    "name" : "mGranularity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartArea",
    "type" : "RectF",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEndArea",
    "type" : "RectF",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFallbackText",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setGranularity(@HandwritingGesture.Granularity int granularity)",
    "returnType" : "Builder",
    "comment" : "\n         * Define text selection granularity. Intersecting words/characters will be\n         * included in the operation.\n         * @param granularity {@link HandwritingGesture#GRANULARITY_WORD} or\n         * {@link HandwritingGesture#GRANULARITY_CHARACTER}.\n         * @return {@link Builder}.\n         ",
    "links" : [ "android.view.inputmethod.HandwritingGesture#GRANULARITY_WORD", "Builder", "android.view.inputmethod.HandwritingGesture#GRANULARITY_CHARACTER" ]
  }, {
    "name" : "public Builder setSelectionStartArea(@NonNull RectF startArea)",
    "returnType" : "Builder",
    "comment" : "\n         * Set rectangular single/multiline start of text selection area intersecting with text.\n         *\n         * The resulting selection is performed from the start of first word/character in the start\n         * rectangle to the end of the last word/character in the end rectangle\n         * {@link #setSelectionEndArea(RectF)}.\n         * <br/>\n         * <img src=\"{@docRoot}reference/android/images/input_method/stylus_handwriting\n         * /select_range_gesture_rects.png\"\n         * height=\"300\" alt=\"Selection strategy using two rectangles\"/>\n         *  <br/>\n         *\n         * Intersection is determined using\n         * {@link #setGranularity(int)}. e.g. {@link HandwritingGesture#GRANULARITY_WORD} includes\n         * all the words with their width/height center included in the selection rectangle.\n         * @param startArea {@link RectF} (in screen coordinates) for start of selection. This\n         * rectangle belongs to first line where selection should start.\n         ",
    "links" : [ "android.view.inputmethod.HandwritingGesture#GRANULARITY_WORD", "android.graphics.RectF", "#setSelectionEndArea(RectF)", "#setGranularity(int)" ]
  }, {
    "name" : "public Builder setSelectionEndArea(@NonNull RectF endArea)",
    "returnType" : "Builder",
    "comment" : "\n         * Set rectangular single/multiline end of text selection area intersecting with text.\n         *\n         * The resulting selection is performed from the start of first word/character in the start\n         * rectangle {@link #setSelectionStartArea(RectF)} to the end of the last word/character in\n         * the end rectangle.\n         * <br/>\n         * <img src=\"{@docRoot}reference/android/images/input_method/stylus_handwriting\n         * /select_range_gesture_rects.png\"\n         * height=\"300\" alt=\"Selection strategy using two rectangles\"/>\n         *  <br/>\n         *\n         * The selection includes the first word/character in the rectangle, the last\n         * word/character in the rectangle, and everything in between even if it's not in the\n         * rectangle.\n         *\n         * Intersection is determined using\n         * {@link #setGranularity(int)}. e.g. {@link HandwritingGesture#GRANULARITY_WORD} includes\n         * all the words with their width/height center included in the selection rectangle.\n         * @param endArea {@link RectF} (in screen coordinates) for start of selection. This\n         * rectangle belongs to the last line where selection should end.\n         ",
    "links" : [ "android.view.inputmethod.HandwritingGesture#GRANULARITY_WORD", "android.graphics.RectF", "#setSelectionStartArea(RectF)", "#setGranularity(int)" ]
  }, {
    "name" : "public Builder setFallbackText(@Nullable String fallbackText)",
    "returnType" : "Builder",
    "comment" : "\n         * Set fallback text that will be committed at current cursor position if there is no\n         * applicable text beneath the area of gesture.\n         * @param fallbackText text to set\n         ",
    "links" : [ ]
  }, {
    "name" : "public SelectRangeGesture build()",
    "returnType" : "SelectRangeGesture",
    "comment" : "\n         * @return {@link SelectRangeGesture} using parameters in this\n         * {@link SelectRangeGesture.Builder}.\n         * @throws IllegalArgumentException if one or more positional parameters are not specified.\n         ",
    "links" : [ "SelectRangeGesture.Builder", "android.view.inputmethod.SelectRangeGesture" ]
  } ],
  "methodNames" : [ "public Builder setGranularity(@HandwritingGesture.Granularity int granularity)", "public Builder setSelectionStartArea(@NonNull RectF startArea)", "public Builder setSelectionEndArea(@NonNull RectF endArea)", "public Builder setFallbackText(@Nullable String fallbackText)", "public SelectRangeGesture build()" ],
  "variableNames" : [ "mGranularity", "mStartArea", "mEndArea", "mFallbackText" ]
}