{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/Norm2AllModes.java",
  "packageName" : "android.icu.impl",
  "className" : "Normalizer2WithImpl",
  "comment" : "\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "impl",
    "type" : "Normalizer2Impl",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public StringBuilder normalize(CharSequence src, StringBuilder dest)",
    "returnType" : "StringBuilder",
    "comment" : " normalize",
    "links" : [ ]
  }, {
    "name" : "public Appendable normalize(CharSequence src, Appendable dest)",
    "returnType" : "Appendable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract void normalize(CharSequence src, Normalizer2Impl.ReorderingBuffer buffer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuilder normalizeSecondAndAppend(StringBuilder first, CharSequence second)",
    "returnType" : "StringBuilder",
    "comment" : " normalize and append",
    "links" : [ ]
  }, {
    "name" : "public StringBuilder append(StringBuilder first, CharSequence second)",
    "returnType" : "StringBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuilder normalizeSecondAndAppend(StringBuilder first, CharSequence second, boolean doNormalize)",
    "returnType" : "StringBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected abstract void normalizeAndAppend(CharSequence src, boolean doNormalize, Normalizer2Impl.ReorderingBuffer buffer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getDecomposition(int c)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getRawDecomposition(int c)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int composePair(int a, int b)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCombiningClass(int c)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isNormalized(CharSequence s)",
    "returnType" : "boolean",
    "comment" : " quick checks",
    "links" : [ ]
  }, {
    "name" : "public Normalizer.QuickCheckResult quickCheck(CharSequence s)",
    "returnType" : "Normalizer.QuickCheckResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract int getQuickCheck(int c)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public StringBuilder normalize(CharSequence src, StringBuilder dest)", "public Appendable normalize(CharSequence src, Appendable dest)", "protected abstract void normalize(CharSequence src, Normalizer2Impl.ReorderingBuffer buffer)", "public StringBuilder normalizeSecondAndAppend(StringBuilder first, CharSequence second)", "public StringBuilder append(StringBuilder first, CharSequence second)", "public StringBuilder normalizeSecondAndAppend(StringBuilder first, CharSequence second, boolean doNormalize)", "protected abstract void normalizeAndAppend(CharSequence src, boolean doNormalize, Normalizer2Impl.ReorderingBuffer buffer)", "public String getDecomposition(int c)", "public String getRawDecomposition(int c)", "public int composePair(int a, int b)", "public int getCombiningClass(int c)", "public boolean isNormalized(CharSequence s)", "public Normalizer.QuickCheckResult quickCheck(CharSequence s)", "public abstract int getQuickCheck(int c)" ],
  "variableNames" : [ "impl" ]
}