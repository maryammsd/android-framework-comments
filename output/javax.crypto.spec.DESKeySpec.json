{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/crypto/spec/DESKeySpec.java",
  "packageName" : "javax.crypto.spec",
  "className" : "DESKeySpec",
  "comment" : "\n * This class specifies a DES key.\n *\n * @author Jan Luehe\n *\n * @since 1.4\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DES_KEY_LEN",
    "type" : "int",
    "comment" : "\n     * The constant which defines the length of a DES key in bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "key",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEAK_KEYS",
    "type" : "byte[][]",
    "comment" : "\n     * Weak/semi-weak keys copied from FIPS 74.\n     *\n     * \"...The first 6 keys have duals different than themselves, hence\n     * each is both a key and a dual giving 12 keys with duals. The last\n     * four keys equal their duals, and are called self-dual keys...\"\n     *\n     * 1.   E001E001F101F101    01E001E001F101F1\n     * 2.   FE1FFE1FFEOEFEOE    1FFE1FFEOEFEOEFE\n     * 3.   E01FE01FF10EF10E    1FE01FEOOEF10EF1\n     * 4.   01FE01FE01FE01FE    FE01FE01FE01FE01\n     * 5.   011F011F010E010E    1F011F010E010E01\n     * 6.   E0FEE0FEF1FEF1FE    FEE0FEE0FEF1FEF1\n     * 7.   0101010101010101    0101010101010101\n     * 8.   FEFEFEFEFEFEFEFE    FEFEFEFEFEFEFEFE\n     * 9.   E0E0E0E0F1F1F1F1    E0E0E0E0F1F1F1F1\n     * 10.  1F1F1F1F0E0E0E0E    1F1F1F1F0E0E0E0E\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public byte[] getKey()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the DES key material.\n     *\n     * @return the DES key material. Returns a new array\n     * each time this method is called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isParityAdjusted(byte[] key, int offset) throws InvalidKeyException",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the given DES key material, starting at <code>offset</code>\n     * inclusive, is parity-adjusted.\n     *\n     * @param key the buffer with the DES key material.\n     * @param offset the offset in <code>key</code>, where the DES key\n     * material starts.\n     *\n     * @return true if the given DES key material is parity-adjusted, false\n     * otherwise.\n     *\n     * @exception InvalidKeyException if the given key material is\n     * <code>null</code>, or starting at <code>offset</code> inclusive, is\n     * shorter than 8 bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isWeak(byte[] key, int offset) throws InvalidKeyException",
    "returnType" : "boolean",
    "comment" : "\n     * Checks if the given DES key material is weak or semi-weak.\n     *\n     * @param key the buffer with the DES key material.\n     * @param offset the offset in <code>key</code>, where the DES key\n     * material starts.\n     *\n     * @return true if the given DES key material is weak or semi-weak, false\n     * otherwise.\n     *\n     * @exception InvalidKeyException if the given key material is\n     * <code>null</code>, or starting at <code>offset</code> inclusive, is\n     * shorter than 8 bytes.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public byte[] getKey()", "public static boolean isParityAdjusted(byte[] key, int offset) throws InvalidKeyException", "public static boolean isWeak(byte[] key, int offset) throws InvalidKeyException" ],
  "variableNames" : [ "DES_KEY_LEN", "key", "WEAK_KEYS" ]
}