{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/Settings.java",
  "packageName" : "android.provider",
  "className" : "Bookmarks",
  "comment" : "\n     * User-defined bookmarks and shortcuts.  The target of each bookmark is an\n     * Intent URL, allowing it to be either a web page or a particular\n     * application activity.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URL for this table\n         ",
    "links" : [ ]
  }, {
    "name" : "ID",
    "type" : "String",
    "comment" : "\n         * The row ID.\n         * <p>Type: INTEGER</p>\n         ",
    "links" : [ ]
  }, {
    "name" : "TITLE",
    "type" : "String",
    "comment" : "\n         * Descriptive name of the bookmark that can be displayed to the user.\n         * If this is empty, the title should be resolved at display time (use\n         * {@link #getTitle(Context, Cursor)} any time you want to display the\n         * title of a bookmark.)\n         * <P>\n         * Type: TEXT\n         * </P>\n         ",
    "links" : [ "#getTitle(Context" ]
  }, {
    "name" : "FOLDER",
    "type" : "String",
    "comment" : "\n         * Arbitrary string (displayed to the user) that allows bookmarks to be\n         * organized into categories.  There are some special names for\n         * standard folders, which all start with '@'.  The label displayed for\n         * the folder changes with the locale (via {@link #getLabelForFolder}) but\n         * the folder name does not change so you can consistently query for\n         * the folder regardless of the current locale.\n         *\n         * <P>Type: TEXT</P>\n         *\n         ",
    "links" : [ "#getLabelForFolder" ]
  }, {
    "name" : "INTENT",
    "type" : "String",
    "comment" : "\n         * The Intent URL of the bookmark, describing what it points to.  This\n         * value is given to {@link android.content.Intent#getIntent} to create\n         * an Intent that can be launched.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ "android.content.Intent#getIntent" ]
  }, {
    "name" : "SHORTCUT",
    "type" : "String",
    "comment" : "\n         * Optional shortcut character associated with this bookmark.\n         * <P>Type: INTEGER</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "ORDERING",
    "type" : "String",
    "comment" : "\n         * The order in which the bookmark should be displayed\n         * <P>Type: INTEGER</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "sIntentProjection",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sShortcutProjection",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sShortcutSelection",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Intent getIntentForShortcut(ContentResolver cr, char shortcut)",
    "returnType" : "Intent",
    "comment" : "\n         * Convenience function to retrieve the bookmarked Intent for a\n         * particular shortcut key.\n         *\n         * @param cr The ContentResolver to query.\n         * @param shortcut The shortcut key.\n         *\n         * @return Intent The bookmarked URL, or null if there is no bookmark\n         *         matching the given shortcut.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri add(ContentResolver cr, Intent intent, String title, String folder, char shortcut, int ordering)",
    "returnType" : "Uri",
    "comment" : "\n         * Add a new bookmark to the system.\n         *\n         * @param cr The ContentResolver to query.\n         * @param intent The desired target of the bookmark.\n         * @param title Bookmark title that is shown to the user; null if none\n         *            or it should be resolved to the intent's title.\n         * @param folder Folder in which to place the bookmark; null if none.\n         * @param shortcut Shortcut that will invoke the bookmark; 0 if none. If\n         *            this is non-zero and there is an existing bookmark entry\n         *            with this same shortcut, then that existing shortcut is\n         *            cleared (the bookmark is not removed).\n         * @return The unique content URL for the new bookmark entry.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CharSequence getLabelForFolder(Resources r, String folder)",
    "returnType" : "CharSequence",
    "comment" : "\n         * Return the folder name as it should be displayed to the user.  This\n         * takes care of localizing special folders.\n         *\n         * @param r Resources object for current locale; only need access to\n         *          system resources.\n         * @param folder The value found in the {@link #FOLDER} column.\n         *\n         * @return CharSequence The label for this folder that should be shown\n         *         to the user.\n         ",
    "links" : [ "#FOLDER" ]
  }, {
    "name" : "public static CharSequence getTitle(Context context, Cursor cursor)",
    "returnType" : "CharSequence",
    "comment" : "\n         * Return the title as it should be displayed to the user. This takes\n         * care of localizing bookmarks that point to activities.\n         *\n         * @param context A context.\n         * @param cursor A cursor pointing to the row whose title should be\n         *        returned. The cursor must contain at least the {@link #TITLE}\n         *        and {@link #INTENT} columns.\n         * @return A title that is localized and can be displayed to the user,\n         *         or the empty string if one could not be found.\n         ",
    "links" : [ "#INTENT", "#TITLE" ]
  } ],
  "methodNames" : [ "public static Intent getIntentForShortcut(ContentResolver cr, char shortcut)", "public static Uri add(ContentResolver cr, Intent intent, String title, String folder, char shortcut, int ordering)", "public static CharSequence getLabelForFolder(Resources r, String folder)", "public static CharSequence getTitle(Context context, Cursor cursor)" ],
  "variableNames" : [ "TAG", "CONTENT_URI", "ID", "TITLE", "FOLDER", "INTENT", "SHORTCUT", "ORDERING", "sIntentProjection", "sShortcutProjection", "sShortcutSelection" ]
}