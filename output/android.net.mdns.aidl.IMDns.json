{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/mdns/aidl/IMDns.java",
  "packageName" : "android.net.mdns.aidl",
  "className" : "IMDns",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "VERSION",
    "type" : "int",
    "comment" : "\n   * The version of this interface that the caller is built against.\n   * This might be different from what {@link #getInterfaceVersion()\n   * getInterfaceVersion} returns as that is the version of the interface\n   * that the remote object is implementing.\n   ",
    "links" : [ "#getInterfaceVersion()" ]
  }, {
    "name" : "HASH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void startDaemon() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopDaemon() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerService(android.net.mdns.aidl.RegistrationInfo info) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void discover(android.net.mdns.aidl.DiscoveryInfo info) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void resolve(android.net.mdns.aidl.ResolutionInfo info) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getServiceAddress(android.net.mdns.aidl.GetAddressInfo info) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void stopOperation(int id) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerEventListener(android.net.mdns.aidl.IMDnsEventListener listener) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unregisterEventListener(android.net.mdns.aidl.IMDnsEventListener listener) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceVersion() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getInterfaceHash() throws android.os.RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void startDaemon() throws android.os.RemoteException", "public void stopDaemon() throws android.os.RemoteException", "public void registerService(android.net.mdns.aidl.RegistrationInfo info) throws android.os.RemoteException", "public void discover(android.net.mdns.aidl.DiscoveryInfo info) throws android.os.RemoteException", "public void resolve(android.net.mdns.aidl.ResolutionInfo info) throws android.os.RemoteException", "public void getServiceAddress(android.net.mdns.aidl.GetAddressInfo info) throws android.os.RemoteException", "public void stopOperation(int id) throws android.os.RemoteException", "public void registerEventListener(android.net.mdns.aidl.IMDnsEventListener listener) throws android.os.RemoteException", "public void unregisterEventListener(android.net.mdns.aidl.IMDnsEventListener listener) throws android.os.RemoteException", "public int getInterfaceVersion() throws android.os.RemoteException", "public String getInterfaceHash() throws android.os.RemoteException" ],
  "variableNames" : [ "VERSION", "HASH", "DESCRIPTOR" ]
}