{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/file/attribute/PosixFilePermissions.java",
  "packageName" : "java.nio.file.attribute",
  "className" : "PosixFilePermissions",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "private static void writeBits(StringBuilder sb, boolean r, boolean w, boolean x)",
    "returnType" : "void",
    "comment" : " Write string representation of permission bits to {@code sb}.",
    "links" : [ ]
  }, {
    "name" : "public static String toString(Set<PosixFilePermission> perms)",
    "returnType" : "String",
    "comment" : "\n     * Returns the {@code String} representation of a set of permissions. It\n     * is guaranteed that the returned {@code String} can be parsed by the\n     * {@link #fromString} method.\n     *\n     * <p> If the set contains {@code null} or elements that are not of type\n     * {@code PosixFilePermission} then these elements are ignored.\n     *\n     * @param   perms\n     *          the set of permissions\n     *\n     * @return  the string representation of the permission set\n     ",
    "links" : [ "#fromString" ]
  }, {
    "name" : "private static boolean isSet(char c, char setValue)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isR(char c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isW(char c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isX(char c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static Set<PosixFilePermission> fromString(String perms)",
    "returnType" : "Set<PosixFilePermission>",
    "comment" : "\n     * Returns the set of permissions corresponding to a given {@code String}\n     * representation.\n     *\n     * <p> The {@code perms} parameter is a {@code String} representing the\n     * permissions. It has 9 characters that are interpreted as three sets of\n     * three. The first set refers to the owner's permissions; the next to the\n     * group permissions and the last to others. Within each set, the first\n     * character is {@code 'r'} to indicate permission to read, the second\n     * character is {@code 'w'} to indicate permission to write, and the third\n     * character is {@code 'x'} for execute permission. Where a permission is\n     * not set then the corresponding character is set to {@code '-'}.\n     *\n     * <p> <b>Usage Example:</b>\n     * Suppose we require the set of permissions that indicate the owner has read,\n     * write, and execute permissions, the group has read and execute permissions\n     * and others have none.\n     * <pre>\n     *   Set&lt;PosixFilePermission&gt; perms = PosixFilePermissions.fromString(\"rwxr-x---\");\n     * </pre>\n     *\n     * @param   perms\n     *          string representing a set of permissions\n     *\n     * @return  the resulting set of permissions\n     *\n     * @throws  IllegalArgumentException\n     *          if the string cannot be converted to a set of permissions\n     *\n     * @see #toString(Set)\n     ",
    "links" : [ ]
  }, {
    "name" : "public static FileAttribute<Set<PosixFilePermission>> asFileAttribute(Set<PosixFilePermission> perms)",
    "returnType" : "FileAttribute<Set<PosixFilePermission>>",
    "comment" : "\n     * Creates a {@link FileAttribute}, encapsulating a copy of the given file\n     * permissions, suitable for passing to the {@link java.nio.file.Files#createFile\n     * createFile} or {@link java.nio.file.Files#createDirectory createDirectory}\n     * methods.\n     *\n     * @param   perms\n     *          the set of permissions\n     *\n     * @return  an attribute encapsulating the given file permissions with\n     *          {@link FileAttribute#name name} {@code \"posix:permissions\"}\n     *\n     * @throws  ClassCastException\n     *          if the set contains elements that are not of type {@code\n     *          PosixFilePermission}\n     ",
    "links" : [ "java.nio.file.attribute.FileAttribute#name", "java.nio.file.Files#createFilecreateFile", "java.nio.file.attribute.FileAttribute", "java.nio.file.Files#createDirectory" ]
  } ],
  "methodNames" : [ "private static void writeBits(StringBuilder sb, boolean r, boolean w, boolean x)", "public static String toString(Set<PosixFilePermission> perms)", "private static boolean isSet(char c, char setValue)", "private static boolean isR(char c)", "private static boolean isW(char c)", "private static boolean isX(char c)", "public static Set<PosixFilePermission> fromString(String perms)", "public static FileAttribute<Set<PosixFilePermission>> asFileAttribute(Set<PosixFilePermission> perms)" ],
  "variableNames" : [ ]
}