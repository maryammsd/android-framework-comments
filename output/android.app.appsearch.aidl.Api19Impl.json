{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/aidl/AppSearchAttributionSource.java",
  "packageName" : "android.app.appsearch.aidl",
  "className" : "Api19Impl",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public AttributionSource getAttributionSource()",
    "returnType" : "AttributionSource",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getUid()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getPid()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void enforceCallingUid()",
    "returnType" : "void",
    "comment" : "\n         * If you are handling an IPC and you don't trust the caller you need to validate whether\n         * the attribution source is one for the calling app to prevent the caller to pass you a\n         * source from another app without including themselves in the attribution chain.\n         *\n         * @throws SecurityException if the attribution source cannot be trusted to be from the\n         *     caller.\n         ",
    "links" : [ ]
  }, {
    "name" : "private boolean checkCallingUid()",
    "returnType" : "boolean",
    "comment" : "\n         * If you are handling an IPC and you don't trust the caller you need to validate whether\n         * the attribution source is one for the calling app to prevent the caller to pass you a\n         * source from another app without including themselves in the attribution chain.\n         *\n         * @return if the attribution source cannot be trusted to be from the caller.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void enforceCallingPid()",
    "returnType" : "void",
    "comment" : "\n         * Validate that the pid being claimed for the calling app is not spoofed.\n         *\n         * <p>Note that the PID may be unavailable, for example if we're in a oneway Binder call. In\n         * this case, calling enforceCallingPid is guaranteed to fail. The caller should anticipate\n         * this.\n         *\n         * @throws SecurityException if the attribution source cannot be trusted to be from the\n         *     caller.\n         ",
    "links" : [ ]
  }, {
    "name" : "private boolean checkCallingPid()",
    "returnType" : "boolean",
    "comment" : "\n         * Validate that the pid being claimed for the calling app is not spoofed\n         *\n         * @return if the attribution source cannot be trusted to be from the caller.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getPackageName()", "public AttributionSource getAttributionSource()", "public int getUid()", "public int getPid()", "private void enforceCallingUid()", "private boolean checkCallingUid()", "private void enforceCallingPid()", "private boolean checkCallingPid()" ],
  "variableNames" : [ "mPackageName", "mUid", "mPid" ]
}