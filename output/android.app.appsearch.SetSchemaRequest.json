{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/SetSchemaRequest.java",
  "packageName" : "android.app.appsearch",
  "className" : "SetSchemaRequest",
  "comment" : "\n * Encapsulates a request to update the schema of an {@link AppSearchSession} database.\n *\n * <p>The schema is composed of a collection of {@link AppSearchSchema} objects, each of which\n * defines a unique type of data.\n *\n * <p>The first call to SetSchemaRequest will set the provided schema and store it within the {@link\n * AppSearchSession} database.\n *\n * <p>Subsequent calls will compare the provided schema to the previously saved schema, to determine\n * how to treat existing documents.\n *\n * <p>The following types of schema modifications are always safe and are made without deleting any\n * existing documents:\n *\n * <ul>\n *   <li>Addition of new {@link AppSearchSchema} types\n *   <li>Addition of new properties to an existing {@link AppSearchSchema} type\n *   <li>Changing the cardinality of a property to be less restrictive\n * </ul>\n *\n * <p>The following types of schema changes are not backwards compatible:\n *\n * <ul>\n *   <li>Removal of an existing {@link AppSearchSchema} type\n *   <li>Removal of a property from an existing {@link AppSearchSchema} type\n *   <li>Changing the data type of an existing property\n *   <li>Changing the cardinality of a property to be more restrictive\n * </ul>\n *\n * <p>Providing a schema with incompatible changes, will throw an {@link\n * android.app.appsearch.exceptions.AppSearchException}, with a message describing the\n * incompatibility. As a result, the previously set schema will remain unchanged.\n *\n * <p>Backward incompatible changes can be made by :\n *\n * <ul>\n *   <li>setting {@link SetSchemaRequest.Builder#setForceOverride} method to {@code true}. This\n *       deletes all documents that are incompatible with the new schema. The new schema is then\n *       saved and persisted to disk.\n *   <li>Add a {@link Migrator} for each incompatible type and make no deletion. The migrator will\n *       migrate documents from its old schema version to the new version. Migrated types will be\n *       set into both {@link SetSchemaResponse#getIncompatibleTypes()} and {@link\n *       SetSchemaResponse#getMigratedTypes()}. See the migration section below.\n * </ul>\n *\n * @see AppSearchSession#setSchema\n * @see Migrator\n ",
  "links" : [ "android.app.appsearch.AppSearchSchema", "android.app.appsearch.SetSchemaResponse#getMigratedTypes()", "android.app.appsearch.SetSchemaResponse#getIncompatibleTypes()", "SetSchemaRequest.Builder#setForceOverride", "android.app.appsearch.AppSearchSession", "android.app.appsearch.Migrator", "android.app.appsearch.exceptions.AppSearchException" ],
  "variables" : [ {
    "name" : "READ_SMS",
    "type" : "int",
    "comment" : "\n     * The {@link android.Manifest.permission#READ_SMS} AppSearch supported in {@link\n     * SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility}\n     ",
    "links" : [ "SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility", "android.Manifest.permission#READ_SMS" ]
  }, {
    "name" : "READ_CALENDAR",
    "type" : "int",
    "comment" : "\n     * The {@link android.Manifest.permission#READ_CALENDAR} AppSearch supported in {@link\n     * SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility}\n     ",
    "links" : [ "SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility", "android.Manifest.permission#READ_CALENDAR" ]
  }, {
    "name" : "READ_CONTACTS",
    "type" : "int",
    "comment" : "\n     * The {@link android.Manifest.permission#READ_CONTACTS} AppSearch supported in {@link\n     * SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility}\n     ",
    "links" : [ "android.Manifest.permission#READ_CONTACTS", "SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility" ]
  }, {
    "name" : "READ_EXTERNAL_STORAGE",
    "type" : "int",
    "comment" : "\n     * The {@link android.Manifest.permission#READ_EXTERNAL_STORAGE} AppSearch supported in {@link\n     * SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility}\n     ",
    "links" : [ "android.Manifest.permission#READ_EXTERNAL_STORAGE", "SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility" ]
  }, {
    "name" : "READ_HOME_APP_SEARCH_DATA",
    "type" : "int",
    "comment" : "\n     * The {@link android.Manifest.permission#READ_HOME_APP_SEARCH_DATA} AppSearch supported in\n     * {@link SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility}\n     ",
    "links" : [ "SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility", "android.Manifest.permission#READ_HOME_APP_SEARCH_DATA" ]
  }, {
    "name" : "READ_ASSISTANT_APP_SEARCH_DATA",
    "type" : "int",
    "comment" : "\n     * The {@link android.Manifest.permission#READ_ASSISTANT_APP_SEARCH_DATA} AppSearch supported in\n     * {@link SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility}\n     ",
    "links" : [ "SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility", "android.Manifest.permission#READ_ASSISTANT_APP_SEARCH_DATA" ]
  }, {
    "name" : "ENTERPRISE_ACCESS",
    "type" : "int",
    "comment" : "\n     * A schema must have this permission set through {@link\n     * SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility} to be visible to an\n     * {@link EnterpriseGlobalSearchSession}. A call from a regular {@link GlobalSearchSession} will\n     * not count as having this permission.\n     *\n     * @hide\n     ",
    "links" : [ "SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility", "android.app.appsearch.EnterpriseGlobalSearchSession", "android.app.appsearch.GlobalSearchSession" ]
  }, {
    "name" : "MANAGED_PROFILE_CONTACTS_ACCESS",
    "type" : "int",
    "comment" : "\n     * A schema with this permission set through {@link\n     * SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility} requires the caller\n     * to have managed profile contacts access from {@link android.app.admin.DevicePolicyManager} to\n     * be visible. This permission indicates that the protected schema may expose managed profile\n     * data for contacts search.\n     *\n     * @hide\n     ",
    "links" : [ "SetSchemaRequest.Builder#addRequiredPermissionsForSchemaTypeVisibility", "android.app.admin.DevicePolicyManager" ]
  }, {
    "name" : "mSchemas",
    "type" : "Set<AppSearchSchema>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemasNotDisplayedBySystem",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemasVisibleToPackages",
    "type" : "Map<String, Set<PackageIdentifier>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemasVisibleToPermissions",
    "type" : "Map<String, Set<Set<Integer>>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPubliclyVisibleSchemas",
    "type" : "Map<String, PackageIdentifier>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemasVisibleToConfigs",
    "type" : "Map<String, Set<SchemaVisibilityConfig>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMigrators",
    "type" : "Map<String, Migrator>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mForceOverride",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Set<AppSearchSchema> getSchemas()",
    "returnType" : "Set<AppSearchSchema>",
    "comment" : " Returns the {@link AppSearchSchema} types that are part of this request. ",
    "links" : [ "android.app.appsearch.AppSearchSchema" ]
  }, {
    "name" : "public Set<String> getSchemasNotDisplayedBySystem()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Returns all the schema types that are opted out of being displayed and visible on any system\n     * UI surface.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, Set<PackageIdentifier>> getSchemasVisibleToPackages()",
    "returnType" : "Map<String, Set<PackageIdentifier>>",
    "comment" : "\n     * Returns a mapping of schema types to the set of packages that have access to that schema\n     * type.\n     *\n     * <p>It’s inefficient to call this method repeatedly.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, Set<Set<Integer>>> getRequiredPermissionsForSchemaTypeVisibility()",
    "returnType" : "Map<String, Set<Set<Integer>>>",
    "comment" : " TODO(b/237388235): add enterprise permissions to javadocs after they're unhidden",
    "links" : [ ]
  }, {
    "name" : "public Map<String, PackageIdentifier> getPubliclyVisibleSchemas()",
    "returnType" : "Map<String, PackageIdentifier>",
    "comment" : "\n     * Returns a mapping of publicly visible schemas to the {@link PackageIdentifier} specifying the\n     * package the schemas are from.\n     ",
    "links" : [ "android.app.appsearch.PackageIdentifier" ]
  }, {
    "name" : "public Map<String, Set<SchemaVisibilityConfig>> getSchemasVisibleToConfigs()",
    "returnType" : "Map<String, Set<SchemaVisibilityConfig>>",
    "comment" : "\n     * Returns a mapping of schema types to the set of {@link SchemaVisibilityConfig} that have\n     * access to that schema type.\n     *\n     * <p>It’s inefficient to call this method repeatedly.\n     *\n     * @see SetSchemaRequest.Builder#addSchemaTypeVisibleToConfig\n     ",
    "links" : [ "android.app.appsearch.SchemaVisibilityConfig" ]
  }, {
    "name" : "public Map<String, Migrator> getMigrators()",
    "returnType" : "Map<String, Migrator>",
    "comment" : "\n     * Returns the map of {@link Migrator}, the key will be the schema type of the {@link Migrator}\n     * associated with.\n     ",
    "links" : [ "android.app.appsearch.Migrator" ]
  }, {
    "name" : "public Map<String, Set<PackageIdentifier>> getSchemasVisibleToPackagesInternal()",
    "returnType" : "Map<String, Set<PackageIdentifier>>",
    "comment" : "\n     * Returns a mapping of {@link AppSearchSchema} types to the set of packages that have access to\n     * that schema type.\n     *\n     * <p>A more efficient version of {@link #getSchemasVisibleToPackages}, but it returns a\n     * modifiable map. This is not meant to be unhidden and should only be used by internal classes.\n     *\n     * @hide\n     ",
    "links" : [ "android.app.appsearch.AppSearchSchema", "#getSchemasVisibleToPackages" ]
  }, {
    "name" : "public boolean isForceOverride()",
    "returnType" : "boolean",
    "comment" : " Returns whether this request will force the schema to be overridden. ",
    "links" : [ ]
  }, {
    "name" : "public int getVersion()",
    "returnType" : "int",
    "comment" : " Returns the database overall schema version. ",
    "links" : [ ]
  }, {
    "name" : "private static ArrayMap<String, Set<Set<Integer>>> deepCopy(@NonNull Map<String, Set<Set<Integer>>> original)",
    "returnType" : "ArrayMap<String, Set<Set<Integer>>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Set<AppSearchSchema> getSchemas()", "public Set<String> getSchemasNotDisplayedBySystem()", "public Map<String, Set<PackageIdentifier>> getSchemasVisibleToPackages()", "public Map<String, Set<Set<Integer>>> getRequiredPermissionsForSchemaTypeVisibility()", "public Map<String, PackageIdentifier> getPubliclyVisibleSchemas()", "public Map<String, Set<SchemaVisibilityConfig>> getSchemasVisibleToConfigs()", "public Map<String, Migrator> getMigrators()", "public Map<String, Set<PackageIdentifier>> getSchemasVisibleToPackagesInternal()", "public boolean isForceOverride()", "public int getVersion()", "private static ArrayMap<String, Set<Set<Integer>>> deepCopy(@NonNull Map<String, Set<Set<Integer>>> original)" ],
  "variableNames" : [ "READ_SMS", "READ_CALENDAR", "READ_CONTACTS", "READ_EXTERNAL_STORAGE", "READ_HOME_APP_SEARCH_DATA", "READ_ASSISTANT_APP_SEARCH_DATA", "ENTERPRISE_ACCESS", "MANAGED_PROFILE_CONTACTS_ACCESS", "mSchemas", "mSchemasNotDisplayedBySystem", "mSchemasVisibleToPackages", "mSchemasVisibleToPermissions", "mPubliclyVisibleSchemas", "mSchemasVisibleToConfigs", "mMigrators", "mForceOverride", "mVersion" ]
}