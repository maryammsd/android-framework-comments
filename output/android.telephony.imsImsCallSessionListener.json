{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/ims/ImsCallSessionListener.java",
  "packageName" : "android.telephony.ims",
  "className" : "ImsCallSessionListener",
  "comment" : " ImsCallSessionListenerConverter is also changed.",
  "variables" : [ {
    "name" : "mListener",
    "type" : "IImsCallSessionListener",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void callSessionProgressing(ImsStreamMediaProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * A request has been sent out to initiate a new IMS call session and a 1xx response has been\n     * received from the network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionInitiated(ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session has been initiated.\n     *\n     * @param profile the associated {@link ImsCallProfile}.\n     ",
    "links" : [ "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionInitiatedFailed(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session establishment has failed.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} detailing the reason of the IMS call session\n     * establishment failure.\n     ",
    "links" : [ "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionTerminated(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session has been terminated.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} detailing the reason of the session termination.\n     ",
    "links" : [ "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionHeld(ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session has started the process of holding the call. If it fails,\n     * {@link #callSessionHoldFailed(ImsReasonInfo)} should be called.\n     *\n     * If the IMS call session is resumed, call {@link #callSessionResumed(ImsCallProfile)}.\n     *\n     * @param profile The associated {@link ImsCallProfile} of the call session that has been put\n     * on hold.\n     ",
    "links" : [ "#callSessionHoldFailed", "#callSessionResumed", "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionHoldFailed(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session has failed to be held.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} detailing the reason of the session hold failure.\n     ",
    "links" : [ "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionHoldReceived(ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * This IMS Call session has been put on hold by the remote party.\n     *\n     * @param profile The {@link ImsCallProfile} associated with this IMS call session.\n     ",
    "links" : [ "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionResumed(ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session has started the process of resuming the call. If the process of resuming\n     * the call fails, call {@link #callSessionResumeFailed(ImsReasonInfo)}.\n     *\n     * @param profile The {@link ImsCallProfile} associated with this IMS call session.\n     ",
    "links" : [ "#callSessionResumeFailed", "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionResumeFailed(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session resume has failed.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} containing the detailed reason of the session resume\n     * failure.\n     ",
    "links" : [ "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionResumeReceived(ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * The remote party has resumed this IMS call session.\n     *\n     * @param profile {@link ImsCallProfile} associated with the IMS call session.\n     ",
    "links" : [ "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionMergeStarted(ImsCallSessionImplBase newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session merge has been started.  At this point, the {@code newSession}\n     * represents the IMS call session which represents the new merged conference and has been\n     * initiated to the IMS conference server.\n     *\n     * @param newSession the {@link ImsCallSessionImplBase} that represents the merged active & held\n     * sessions.\n     * @param profile The {@link ImsCallProfile} associated with this IMS call session.\n     ",
    "links" : [ "ImsCallSessionImplBase", "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionMergeStarted(IImsCallSession newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Compatibility method for older implementations.\n     * See {@link #callSessionMergeStarted(ImsCallSessionImplBase, ImsCallProfile)}.\n     *\n     * @hide\n     ",
    "links" : [ "#callSessionMergeStarted" ]
  }, {
    "name" : "public void callSessionMergeComplete(ImsCallSessionImplBase newSession)",
    "returnType" : "void",
    "comment" : "\n     * The session merge is successful and the merged {@link ImsCallSession} is active.\n     *\n     * @param newSession the new {@link ImsCallSessionImplBase}\n     *                  that represents the conference IMS call\n     * session.\n     ",
    "links" : [ "ImsCallSession", "ImsCallSessionImplBase" ]
  }, {
    "name" : "public void callSessionMergeComplete(IImsCallSession newSession)",
    "returnType" : "void",
    "comment" : "\n     * Compatibility method for older implementations of ImsService.\n     *\n     * See {@link #callSessionMergeComplete(ImsCallSessionImplBase)}}.\n     *\n     * @hide\n     ",
    "links" : [ "#callSessionMergeComplete" ]
  }, {
    "name" : "public void callSessionMergeFailed(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session merge has failed.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} contining the reason for the call merge failure.\n     ",
    "links" : [ "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionUpdated(ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session profile has been updated. Does not include holding or resuming a call.\n     *\n     * @param profile The {@link ImsCallProfile} associated with the updated IMS call session.\n     ",
    "links" : [ "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionUpdateFailed(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session profile update has failed.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} containing a reason for the session update failure.\n     ",
    "links" : [ "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionUpdateReceived(ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session profile has received an update from the remote user.\n     *\n     * @param profile The new {@link ImsCallProfile} associated with the update.\n     ",
    "links" : [ "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionConferenceExtended(ImsCallSessionImplBase newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Called when the session has been extended to a conference session.\n     *\n     * If the conference extension fails, call\n     * {@link #callSessionConferenceExtendFailed(ImsReasonInfo)}.\n     *\n     * @param newSession the session object that is extended to the conference from the active\n     * IMS Call session.\n     * @param profile The {@link ImsCallProfile} associated with the IMS call session.\n     ",
    "links" : [ "#callSessionConferenceExtendFailed", "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionConferenceExtended(IImsCallSession newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Compatibility method to interface with older versions of ImsService.\n     * See {@link #callSessionConferenceExtended(ImsCallSessionImplBase, ImsCallProfile)}.\n     *\n     * @hide\n     ",
    "links" : [ "#callSessionConferenceExtended" ]
  }, {
    "name" : "public void callSessionConferenceExtendFailed(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The previous conference extension has failed.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} containing the detailed reason of the conference\n     * extension failure.\n     ",
    "links" : [ "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionConferenceExtendReceived(ImsCallSessionImplBase newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * A conference extension has been received received from the remote party.\n     *\n     * @param newSession An {@link ImsCallSessionImplBase}\n     *                   representing the extended IMS call session.\n     * @param profile The {@link ImsCallProfile} associated with the new IMS call session.\n     ",
    "links" : [ "ImsCallSessionImplBase", "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionConferenceExtendReceived(IImsCallSession newSession, ImsCallProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * Compatibility method to interface with older versions of ImsService.\n     * See {@link #callSessionConferenceExtendReceived(ImsCallSessionImplBase, ImsCallProfile)}.\n     *\n     * @hide\n     ",
    "links" : [ "#callSessionConferenceExtendReceived" ]
  }, {
    "name" : "public void callSessionInviteParticipantsRequestDelivered()",
    "returnType" : "void",
    "comment" : "\n     * The request to invite participants to the conference has been delivered to the conference\n     * server.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionInviteParticipantsRequestFailed(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The previous request to invite participants to the conference (see\n     * {@link #callSessionInviteParticipantsRequestDelivered()}) has failed.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} detailing the reason forthe conference invitation\n     * failure.\n     ",
    "links" : [ "#callSessionInviteParticipantsRequestDelivered", "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionRemoveParticipantsRequestDelivered()",
    "returnType" : "void",
    "comment" : "\n     * The request to remove participants from the conference has been delivered to the conference\n     * server.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRemoveParticipantsRequestFailed(ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The previous request to remove participants from the conference (see\n     * {@link #callSessionRemoveParticipantsRequestDelivered()}) has failed.\n     *\n     * @param reasonInfo {@link ImsReasonInfo} detailing the reason for the conference removal\n     * failure.\n     ",
    "links" : [ "#callSessionRemoveParticipantsRequestDelivered", "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionConferenceStateUpdated(ImsConferenceState state)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session's conference state has changed.\n     *\n     * @param state The new {@link ImsConferenceState} associated with the conference.\n     ",
    "links" : [ "ImsConferenceState" ]
  }, {
    "name" : "public void callSessionUssdMessageReceived(int mode, String ussdMessage)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session has received a Ussd message.\n     *\n     * @param mode The mode of the USSD message, either\n     * {@link ImsCallSessionImplBase#USSD_MODE_NOTIFY} or\n     * {@link ImsCallSessionImplBase#USSD_MODE_REQUEST}.\n     * @param ussdMessage The USSD message.\n     ",
    "links" : [ "ImsCallSessionImplBase#USSD_MODE_NOTIFY", "ImsCallSessionImplBase#USSD_MODE_REQUEST" ]
  }, {
    "name" : "public void callSessionMayHandover(int srcAccessTech, int targetAccessTech)",
    "returnType" : "void",
    "comment" : "\n     * An {@link ImsCallSession} may potentially handover from one radio\n     * technology to another.\n     *\n     * @param srcAccessTech The source radio access technology; one of the access technology\n     * constants defined in {@link android.telephony.ServiceState}. For example\n     * {@link android.telephony.ServiceState#RIL_RADIO_TECHNOLOGY_LTE}.\n     * @param targetAccessTech The target radio access technology; one of the access technology\n     * constants defined in {@link android.telephony.ServiceState}. For example\n     * {@link android.telephony.ServiceState#RIL_RADIO_TECHNOLOGY_LTE}.\n     * @deprecated Uses hidden constants for radio access technology, use\n     * {@link #onMayHandover(int, int)} instead.\n     ",
    "links" : [ "ImsCallSession", "android.telephony.ServiceState", "android.telephony.ServiceState#RIL_RADIO_TECHNOLOGY_LTE", "android.telephony.ServiceState", "android.telephony.ServiceState#RIL_RADIO_TECHNOLOGY_LTE", "#onMayHandover" ]
  }, {
    "name" : "public void onMayHandover(@Annotation.NetworkType int srcNetworkType, @Annotation.NetworkType int targetNetworkType)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the associated {@link ImsCallSession} may handover from one network\n     * type to another.\n     *\n     * @param srcNetworkType The source network type.\n     * @param targetNetworkType The target network type.\n     ",
    "links" : [ "ImsCallSession" ]
  }, {
    "name" : "public void callSessionHandover(int srcAccessTech, int targetAccessTech, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session's access technology has changed.\n     *\n     * @param srcAccessTech original access technology, defined in\n     * {@link android.telephony.ServiceState}.\n     * @param targetAccessTech new access technology, defined in\n     * {@link android.telephony.ServiceState}.\n     * @param reasonInfo The {@link ImsReasonInfo} associated with this handover.\n     * @deprecated Uses hidden radio access technology constants, use\n     * {@link #onHandover(int, int, ImsReasonInfo)} instead.\n     ",
    "links" : [ "android.telephony.ServiceState", "android.telephony.ServiceState", "ImsReasonInfo", "#onHandover" ]
  }, {
    "name" : "public void onHandover(@Annotation.NetworkType int srcNetworkType, @Annotation.NetworkType int targetNetworkType, @Nullable ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the associated {@link ImsCallSession} has handed over from one\n     * network type to another.\n     *\n     * @param srcNetworkType original network type.\n     * @param targetNetworkType target network type after handover..\n     * @param reasonInfo An optional {@link ImsReasonInfo} associated with this handover.\n     ",
    "links" : [ "ImsCallSession", "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionHandoverFailed(int srcAccessTech, int targetAccessTech, ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session's access technology change has failed..\n     *\n     * @param srcAccessTech original access technology\n     * @param targetAccessTech new access technology\n     * @param reasonInfo An {@link ImsReasonInfo} detailing the reason for the failure.\n     * @deprecated Uses hidden radio access technology constants, use\n     * {@link #onHandoverFailed(int, int, ImsReasonInfo)} instead\n     ",
    "links" : [ "ImsReasonInfo", "#onHandoverFailed" ]
  }, {
    "name" : "public void onHandoverFailed(@Annotation.NetworkType int srcNetworkType, @Annotation.NetworkType int targetNetworkType, @NonNull ImsReasonInfo reasonInfo)",
    "returnType" : "void",
    "comment" : "\n     * The IMS call session's access technology change has failed..\n     *\n     * @param srcNetworkType original network type.\n     * @param targetNetworkType target network type that the handover failed for.\n     * @param reasonInfo An {@link ImsReasonInfo} detailing the reason for the failure.\n     ",
    "links" : [ "ImsReasonInfo" ]
  }, {
    "name" : "public void callSessionTtyModeReceived(int mode)",
    "returnType" : "void",
    "comment" : "\n     * The TTY mode has been changed by the remote party.\n     *\n     * @param mode one of the following: -\n     *             {@link com.android.internal.telephony.Phone#TTY_MODE_OFF} -\n     *             {@link com.android.internal.telephony.Phone#TTY_MODE_FULL} -\n     *             {@link com.android.internal.telephony.Phone#TTY_MODE_HCO} -\n     *             {@link com.android.internal.telephony.Phone#TTY_MODE_VCO}\n     ",
    "links" : [ "com.android.internal.telephony.Phone#TTY_MODE_OFF", "com.android.internal.telephony.Phone#TTY_MODE_FULL", "com.android.internal.telephony.Phone#TTY_MODE_HCO", "com.android.internal.telephony.Phone#TTY_MODE_VCO" ]
  }, {
    "name" : "public void callSessionMultipartyStateChanged(boolean isMultiParty)",
    "returnType" : "void",
    "comment" : "\n     * The multiparty state has been changed for this {@code ImsCallSession}.\n     *\n     * @param isMultiParty {@code true} if the session became multiparty, {@code false} otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionSuppServiceReceived(ImsSuppServiceNotification suppSrvNotification)",
    "returnType" : "void",
    "comment" : "\n     * Supplementary service information has been received for the current IMS call session.\n     *\n     * @param suppSrvNotification The {@link ImsSuppServiceNotification} containing the change.\n     ",
    "links" : [ "ImsSuppServiceNotification" ]
  }, {
    "name" : "public void callSessionRttModifyRequestReceived(ImsCallProfile callProfile)",
    "returnType" : "void",
    "comment" : "\n     * An RTT modify request has been received from the remote party.\n     *\n     * @param callProfile An {@link ImsCallProfile} with the updated attributes\n     ",
    "links" : [ "ImsCallProfile" ]
  }, {
    "name" : "public void callSessionRttModifyResponseReceived(int status)",
    "returnType" : "void",
    "comment" : "\n     * An RTT modify response has been received.\n     *\n     * @param status the received response for RTT modify request.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRttMessageReceived(String rttMessage)",
    "returnType" : "void",
    "comment" : "\n     * An RTT message has been received from the remote party.\n     *\n     * @param rttMessage The RTT message that has been received.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void callSessionRttAudioIndicatorChanged(@NonNull ImsStreamMediaProfile profile)",
    "returnType" : "void",
    "comment" : "\n     * While in call, there has been a change in RTT audio indicator.\n     *\n     * @param profile updated ImsStreamMediaProfile\n     ",
    "links" : [ ]
  }, {
    "name" : "public void callQualityChanged(@NonNull CallQuality callQuality)",
    "returnType" : "void",
    "comment" : "\n     * The call quality has changed.\n     *\n     * @param callQuality The new call quality\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mListener" ],
  "methodNames" : [ "public void callSessionProgressing(ImsStreamMediaProfile profile)", "public void callSessionInitiated(ImsCallProfile profile)", "public void callSessionInitiatedFailed(ImsReasonInfo reasonInfo)", "public void callSessionTerminated(ImsReasonInfo reasonInfo)", "public void callSessionHeld(ImsCallProfile profile)", "public void callSessionHoldFailed(ImsReasonInfo reasonInfo)", "public void callSessionHoldReceived(ImsCallProfile profile)", "public void callSessionResumed(ImsCallProfile profile)", "public void callSessionResumeFailed(ImsReasonInfo reasonInfo)", "public void callSessionResumeReceived(ImsCallProfile profile)", "public void callSessionMergeStarted(ImsCallSessionImplBase newSession, ImsCallProfile profile)", "public void callSessionMergeStarted(IImsCallSession newSession, ImsCallProfile profile)", "public void callSessionMergeComplete(ImsCallSessionImplBase newSession)", "public void callSessionMergeComplete(IImsCallSession newSession)", "public void callSessionMergeFailed(ImsReasonInfo reasonInfo)", "public void callSessionUpdated(ImsCallProfile profile)", "public void callSessionUpdateFailed(ImsReasonInfo reasonInfo)", "public void callSessionUpdateReceived(ImsCallProfile profile)", "public void callSessionConferenceExtended(ImsCallSessionImplBase newSession, ImsCallProfile profile)", "public void callSessionConferenceExtended(IImsCallSession newSession, ImsCallProfile profile)", "public void callSessionConferenceExtendFailed(ImsReasonInfo reasonInfo)", "public void callSessionConferenceExtendReceived(ImsCallSessionImplBase newSession, ImsCallProfile profile)", "public void callSessionConferenceExtendReceived(IImsCallSession newSession, ImsCallProfile profile)", "public void callSessionInviteParticipantsRequestDelivered()", "public void callSessionInviteParticipantsRequestFailed(ImsReasonInfo reasonInfo)", "public void callSessionRemoveParticipantsRequestDelivered()", "public void callSessionRemoveParticipantsRequestFailed(ImsReasonInfo reasonInfo)", "public void callSessionConferenceStateUpdated(ImsConferenceState state)", "public void callSessionUssdMessageReceived(int mode, String ussdMessage)", "public void callSessionMayHandover(int srcAccessTech, int targetAccessTech)", "public void onMayHandover(@Annotation.NetworkType int srcNetworkType, @Annotation.NetworkType int targetNetworkType)", "public void callSessionHandover(int srcAccessTech, int targetAccessTech, ImsReasonInfo reasonInfo)", "public void onHandover(@Annotation.NetworkType int srcNetworkType, @Annotation.NetworkType int targetNetworkType, @Nullable ImsReasonInfo reasonInfo)", "public void callSessionHandoverFailed(int srcAccessTech, int targetAccessTech, ImsReasonInfo reasonInfo)", "public void onHandoverFailed(@Annotation.NetworkType int srcNetworkType, @Annotation.NetworkType int targetNetworkType, @NonNull ImsReasonInfo reasonInfo)", "public void callSessionTtyModeReceived(int mode)", "public void callSessionMultipartyStateChanged(boolean isMultiParty)", "public void callSessionSuppServiceReceived(ImsSuppServiceNotification suppSrvNotification)", "public void callSessionRttModifyRequestReceived(ImsCallProfile callProfile)", "public void callSessionRttModifyResponseReceived(int status)", "public void callSessionRttMessageReceived(String rttMessage)", "public void callSessionRttAudioIndicatorChanged(@NonNull ImsStreamMediaProfile profile)", "public void callQualityChanged(@NonNull CallQuality callQuality)" ]
}