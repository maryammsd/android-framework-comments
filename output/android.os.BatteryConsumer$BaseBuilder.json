{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/BatteryConsumer.java",
  "packageName" : "android.os",
  "className" : "BaseBuilder",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mData",
    "type" : "BatteryConsumer.BatteryConsumerData",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPowerComponentsBuilder",
    "type" : "PowerComponents.Builder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Key[] getKeys(@PowerComponent int componentId)",
    "returnType" : "Key[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Key getKey(@PowerComponent int componentId, @ProcessState int processState)",
    "returnType" : "Key",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T setConsumedPower(@PowerComponent int componentId, double componentPower)",
    "returnType" : "T",
    "comment" : "\n         * Sets the amount of drain attributed to the specified drain type, e.g. CPU, WiFi etc.\n         *\n         * @param componentId    The ID of the power component, e.g.\n         *                       {@link BatteryConsumer#POWER_COMPONENT_CPU}.\n         * @param componentPower Amount of consumed power in mAh.\n         ",
    "links" : [ "android.os.BatteryConsumer#POWER_COMPONENT_CPU" ]
  }, {
    "name" : "public T setConsumedPower(@PowerComponent int componentId, double componentPower, @PowerModel int powerModel)",
    "returnType" : "T",
    "comment" : "\n         * Sets the amount of drain attributed to the specified drain type, e.g. CPU, WiFi etc.\n         *\n         * @param componentId    The ID of the power component, e.g.\n         *                       {@link BatteryConsumer#POWER_COMPONENT_CPU}.\n         * @param componentPower Amount of consumed power in mAh.\n         ",
    "links" : [ "android.os.BatteryConsumer#POWER_COMPONENT_CPU" ]
  }, {
    "name" : "public T addConsumedPower(@PowerComponent int componentId, double componentPower, @PowerModel int powerModel)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T setConsumedPower(Key key, double componentPower, @PowerModel int powerModel)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T addConsumedPower(Key key, double componentPower, @PowerModel int powerModel)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T setConsumedPowerForCustomComponent(int componentId, double componentPower)",
    "returnType" : "T",
    "comment" : "\n         * Sets the amount of drain attributed to the specified custom drain type.\n         *\n         * @param componentId    The ID of the custom power component.\n         * @param componentPower Amount of consumed power in mAh.\n         ",
    "links" : [ ]
  }, {
    "name" : "public T setUsageDurationMillis(@UidBatteryConsumer.PowerComponent int componentId, long componentUsageTimeMillis)",
    "returnType" : "T",
    "comment" : "\n         * Sets the amount of time used by the specified component, e.g. CPU, WiFi etc.\n         *\n         * @param componentId              The ID of the power component, e.g.\n         *                                 {@link UidBatteryConsumer#POWER_COMPONENT_CPU}.\n         * @param componentUsageTimeMillis Amount of time in microseconds.\n         ",
    "links" : [ "android.os.UidBatteryConsumer#POWER_COMPONENT_CPU" ]
  }, {
    "name" : "public T setUsageDurationMillis(Key key, long componentUsageTimeMillis)",
    "returnType" : "T",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public T setUsageDurationForCustomComponentMillis(int componentId, long componentUsageTimeMillis)",
    "returnType" : "T",
    "comment" : "\n         * Sets the amount of time used by the specified custom component.\n         *\n         * @param componentId              The ID of the custom power component.\n         * @param componentUsageTimeMillis Amount of time in microseconds.\n         ",
    "links" : [ ]
  }, {
    "name" : "public double getTotalPower()",
    "returnType" : "double",
    "comment" : "\n         * Returns the total power accumulated by this builder so far. It may change\n         * by the time the {@code build()} method is called.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Key[] getKeys(@PowerComponent int componentId)", "public Key getKey(@PowerComponent int componentId, @ProcessState int processState)", "public T setConsumedPower(@PowerComponent int componentId, double componentPower)", "public T setConsumedPower(@PowerComponent int componentId, double componentPower, @PowerModel int powerModel)", "public T addConsumedPower(@PowerComponent int componentId, double componentPower, @PowerModel int powerModel)", "public T setConsumedPower(Key key, double componentPower, @PowerModel int powerModel)", "public T addConsumedPower(Key key, double componentPower, @PowerModel int powerModel)", "public T setConsumedPowerForCustomComponent(int componentId, double componentPower)", "public T setUsageDurationMillis(@UidBatteryConsumer.PowerComponent int componentId, long componentUsageTimeMillis)", "public T setUsageDurationMillis(Key key, long componentUsageTimeMillis)", "public T setUsageDurationForCustomComponentMillis(int componentId, long componentUsageTimeMillis)", "public double getTotalPower()" ],
  "variableNames" : [ "mData", "mPowerComponentsBuilder" ]
}