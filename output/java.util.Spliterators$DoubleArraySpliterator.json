{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/Spliterators.java",
  "packageName" : "java.util",
  "className" : "DoubleArraySpliterator",
  "comment" : "\n     * A Spliterator.OfDouble designed for use by sources that traverse and split\n     * elements maintained in an unmodifiable {@code int[]} array.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "array",
    "type" : "double[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "index",
    "type" : "int",
    "comment" : " current index, modified on advance/split",
    "links" : [ ]
  }, {
    "name" : "fence",
    "type" : "int",
    "comment" : " one past last index",
    "links" : [ ]
  }, {
    "name" : "characteristics",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public OfDouble trySplit()",
    "returnType" : "OfDouble",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forEachRemaining(DoubleConsumer action)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean tryAdvance(DoubleConsumer action)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long estimateSize()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int characteristics()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Comparator<? super Double> getComparator()",
    "returnType" : "Comparator<? super Double>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public OfDouble trySplit()", "public void forEachRemaining(DoubleConsumer action)", "public boolean tryAdvance(DoubleConsumer action)", "public long estimateSize()", "public int characteristics()", "public Comparator<? super Double> getComparator()" ],
  "variableNames" : [ "array", "index", "fence", "characteristics" ]
}