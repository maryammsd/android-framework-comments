{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/TimeZoneNamesImpl.java",
  "packageName" : "android.icu.impl",
  "className" : "TimeZoneNamesImpl",
  "comment" : "\n * The standard ICU implementation of TimeZoneNames\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ZONE_STRINGS_BUNDLE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MZ_PREFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "METAZONE_IDS",
    "type" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TZ_TO_MZS_CACHE",
    "type" : "TZ2MZsCache",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MZ_TO_TZS_CACHE",
    "type" : "MZ2TZsCache",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_zoneStrings",
    "type" : "ICUResourceBundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_mzNamesMap",
    "type" : "ConcurrentHashMap<String, ZNames>",
    "comment" : " footprint much.",
    "links" : [ ]
  }, {
    "name" : "_tzNamesMap",
    "type" : "ConcurrentHashMap<String, ZNames>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_namesFullyLoaded",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_namesTrie",
    "type" : "TextTrieMap<NameInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "_namesTrieFullyLoaded",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOC_EXCLUSION_PATTERN",
    "type" : "Pattern",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Set<String> getAvailableMetaZoneIDs()",
    "returnType" : "Set<String>",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.TimeZoneNames#getAvailableMetaZoneIDs()\n     ",
    "links" : [ ]
  }, {
    "name" : " static Set<String> _getAvailableMetaZoneIDs()",
    "returnType" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Set<String> getAvailableMetaZoneIDs(String tzID)",
    "returnType" : "Set<String>",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.TimeZoneNames#getAvailableMetaZoneIDs(java.lang.String)\n     ",
    "links" : [ ]
  }, {
    "name" : " static Set<String> _getAvailableMetaZoneIDs(String tzID)",
    "returnType" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getMetaZoneID(String tzID, long date)",
    "returnType" : "String",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.TimeZoneNames#getMetaZoneID(java.lang.String, long)\n     ",
    "links" : [ ]
  }, {
    "name" : " static String _getMetaZoneID(String tzID, long date)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getReferenceZoneID(String mzID, String region)",
    "returnType" : "String",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.TimeZoneNames#getReferenceZoneID(java.lang.String, java.lang.String)\n     ",
    "links" : [ ]
  }, {
    "name" : " static String _getReferenceZoneID(String mzID, String region)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getMetaZoneDisplayName(String mzID, NameType type)",
    "returnType" : "String",
    "comment" : "\n     * (non-Javadoc)\n     * @see android.icu.text.TimeZoneNames#getMetaZoneDisplayName(java.lang.String, android.icu.text.TimeZoneNames.NameType)\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTimeZoneDisplayName(String tzID, NameType type)",
    "returnType" : "String",
    "comment" : "\n     * (non-Javadoc)\n     * @see android.icu.text.TimeZoneNames#getTimeZoneDisplayName(java.lang.String, android.icu.text.TimeZoneNames.NameType)\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getExemplarLocationName(String tzID)",
    "returnType" : "String",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.TimeZoneNames#getExemplarLocationName(java.lang.String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public synchronized Collection<MatchInfo> find(CharSequence text, int start, EnumSet<NameType> nameTypes)",
    "returnType" : "Collection<MatchInfo>",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.TimeZoneNames#find(java.lang.CharSequence, int, java.util.Set)\n     ",
    "links" : [ ]
  }, {
    "name" : "private Collection<MatchInfo> doFind(NameSearchHandler handler, CharSequence text, int start)",
    "returnType" : "Collection<MatchInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public synchronized void loadAllDisplayNames()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getDisplayNames(String tzID, NameType[] types, long date, String[] dest, int destOffset)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void internalLoadAllDisplayNames()",
    "returnType" : "void",
    "comment" : " Caller must synchronize. ",
    "links" : [ ]
  }, {
    "name" : "private void addAllNamesIntoTrie()",
    "returnType" : "void",
    "comment" : " Caller must synchronize. ",
    "links" : [ ]
  }, {
    "name" : "private void initialize(ULocale locale)",
    "returnType" : "void",
    "comment" : "\n     * Initialize the transient fields, called from the constructor and\n     * readObject.\n     *\n     * @param locale The locale\n     ",
    "links" : [ ]
  }, {
    "name" : "private synchronized void loadStrings(String tzCanonicalID)",
    "returnType" : "void",
    "comment" : "\n     * Load all strings used by the specified time zone.\n     * This is called from the initializer to load default zone's\n     * strings.\n     * @param tzCanonicalID the canonical time zone ID\n     ",
    "links" : [ ]
  }, {
    "name" : "private void writeObject(ObjectOutputStream out) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * The custom serialization method.\n     * This implementation only preserve locale object used for the names.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException",
    "returnType" : "void",
    "comment" : "\n     * The custom deserialization method.\n     * This implementation only read locale object used by the object.\n     ",
    "links" : [ ]
  }, {
    "name" : "private synchronized ZNames loadMetaZoneNames(String mzID)",
    "returnType" : "ZNames",
    "comment" : "\n     * Returns a set of names for the given meta zone ID. This method loads\n     * the set of names into the internal map and trie for future references.\n     * @param mzID the meta zone ID\n     * @return An instance of ZNames that includes a set of meta zone display names.\n     ",
    "links" : [ ]
  }, {
    "name" : "private synchronized ZNames loadTimeZoneNames(String tzID)",
    "returnType" : "ZNames",
    "comment" : "\n     * Returns a set of names for the given time zone ID. This method loads\n     * the set of names into the internal map and trie for future references.\n     * @param tzID the canonical time zone ID\n     * @return An instance of ZNames that includes a set of time zone display names.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getDefaultExemplarLocationName(String tzID)",
    "returnType" : "String",
    "comment" : "\n     * Default exemplar location name based on time zone ID.\n     * For example, \"America/New_York\" -> \"New York\"\n     * @param tzID the time zone ID\n     * @return the exemplar location name or null if location is not available.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Set<String> getAvailableMetaZoneIDs()", " static Set<String> _getAvailableMetaZoneIDs()", "public Set<String> getAvailableMetaZoneIDs(String tzID)", " static Set<String> _getAvailableMetaZoneIDs(String tzID)", "public String getMetaZoneID(String tzID, long date)", " static String _getMetaZoneID(String tzID, long date)", "public String getReferenceZoneID(String mzID, String region)", " static String _getReferenceZoneID(String mzID, String region)", "public String getMetaZoneDisplayName(String mzID, NameType type)", "public String getTimeZoneDisplayName(String tzID, NameType type)", "public String getExemplarLocationName(String tzID)", "public synchronized Collection<MatchInfo> find(CharSequence text, int start, EnumSet<NameType> nameTypes)", "private Collection<MatchInfo> doFind(NameSearchHandler handler, CharSequence text, int start)", "public synchronized void loadAllDisplayNames()", "public void getDisplayNames(String tzID, NameType[] types, long date, String[] dest, int destOffset)", "private void internalLoadAllDisplayNames()", "private void addAllNamesIntoTrie()", "private void initialize(ULocale locale)", "private synchronized void loadStrings(String tzCanonicalID)", "private void writeObject(ObjectOutputStream out) throws IOException", "private void readObject(ObjectInputStream in) throws IOException, ClassNotFoundException", "private synchronized ZNames loadMetaZoneNames(String mzID)", "private synchronized ZNames loadTimeZoneNames(String tzID)", "public static String getDefaultExemplarLocationName(String tzID)" ],
  "variableNames" : [ "serialVersionUID", "ZONE_STRINGS_BUNDLE", "MZ_PREFIX", "METAZONE_IDS", "TZ_TO_MZS_CACHE", "MZ_TO_TZS_CACHE", "_zoneStrings", "_mzNamesMap", "_tzNamesMap", "_namesFullyLoaded", "_namesTrie", "_namesTrieFullyLoaded", "LOC_EXCLUSION_PATTERN" ]
}