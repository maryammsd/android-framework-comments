{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/sdksandbox/SandboxedSdk.java",
  "packageName" : "android.app.sdksandbox",
  "className" : "SandboxedSdk",
  "comment" : "\n * Represents an SDK loaded in the sandbox process.\n *\n * <p>Returned in response to {@link SdkSandboxManager#loadSdk}, on success. An application can\n * obtain it by calling {@link SdkSandboxManager#loadSdk}. It should use this object to obtain an\n * interface to the SDK through {@link #getInterface()}.\n *\n * <p>The SDK should create it when {@link SandboxedSdkProvider#onLoadSdk} is called, and drop all\n * references to it when {@link SandboxedSdkProvider#beforeUnloadSdk()} is called. Additionally, the\n * SDK should fail calls made to the {@code IBinder} returned from {@link #getInterface()} after\n * {@link SandboxedSdkProvider#beforeUnloadSdk()} has been called.\n ",
  "links" : [ "android.app.sdksandbox.SdkSandboxManager#loadSdk", "#getInterface()", "android.app.sdksandbox.SandboxedSdkProvider#beforeUnloadSdk()", "android.app.sdksandbox.SandboxedSdkProvider#onLoadSdk" ],
  "variables" : [ {
    "name" : "CREATOR",
    "type" : "Creator<SandboxedSdk>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterface",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSharedLibraryInfo",
    "type" : "SharedLibraryInfo",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void attachSharedLibraryInfo(@NonNull SharedLibraryInfo sharedLibraryInfo)",
    "returnType" : "void",
    "comment" : "\n     * Attaches information about the SDK like name, version and others which may be useful to\n     * identify the SDK.\n     *\n     * <p>This is used by the system service to attach the library info to the {@link SandboxedSdk}\n     * object return by the SDK after it has been loaded\n     *\n     * @param sharedLibraryInfo The SDK's library info. This contains the name, version and other\n     *     details about the sdk.\n     * @throws IllegalStateException if a base sharedLibraryInfo has already been set.\n     * @hide\n     ",
    "links" : [ "android.app.sdksandbox.SandboxedSdk" ]
  }, {
    "name" : "public IBinder getInterface()",
    "returnType" : "IBinder",
    "comment" : "\n     * Returns the interface to the SDK that was loaded in response to {@link\n     * SdkSandboxManager#loadSdk}. A {@code null} interface is returned if the Binder has since\n     * become unavailable, in response to the SDK being unloaded.\n     ",
    "links" : [ "android.app.sdksandbox.SdkSandboxManager#loadSdk" ]
  }, {
    "name" : "public SharedLibraryInfo getSharedLibraryInfo()",
    "returnType" : "SharedLibraryInfo",
    "comment" : "\n     * Returns the {@link SharedLibraryInfo} for the SDK.\n     *\n     * @throws IllegalStateException if the system service has not yet attached {@link\n     *     SharedLibraryInfo} to the {@link SandboxedSdk} object sent by the SDK.\n     ",
    "links" : [ "android.content.pm.SharedLibraryInfo", "android.app.sdksandbox.SandboxedSdk" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " {@inheritDoc} ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " {@inheritDoc} ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void attachSharedLibraryInfo(@NonNull SharedLibraryInfo sharedLibraryInfo)", "public IBinder getInterface()", "public SharedLibraryInfo getSharedLibraryInfo()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "CREATOR", "mInterface", "mSharedLibraryInfo" ]
}