{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/TelephonyManager.java",
  "packageName" : "android.telephony",
  "className" : "CallComposerException",
  "comment" : "\n     * Exception that may be supplied to the callback in {@link #uploadCallComposerPicture} if\n     * something goes awry.\n     ",
  "links" : [ "#uploadCallComposerPicture" ],
  "variables" : [ {
    "name" : "SUCCESS",
    "type" : "int",
    "comment" : "\n         * Used internally only, signals success of the upload to the carrier.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ERROR_UNKNOWN",
    "type" : "int",
    "comment" : "\n         * Indicates that an unknown error was encountered when uploading the call composer picture.\n         *\n         * Clients that encounter this error should retry the upload.\n         ",
    "links" : [ ]
  }, {
    "name" : "ERROR_REMOTE_END_CLOSED",
    "type" : "int",
    "comment" : "\n         * Indicates that the phone process died or otherwise became unavailable while uploading the\n         * call composer picture.\n         *\n         * Clients that encounter this error should retry the upload.\n         ",
    "links" : [ ]
  }, {
    "name" : "ERROR_FILE_TOO_LARGE",
    "type" : "int",
    "comment" : "\n         * Indicates that the file or stream supplied exceeds the size limit defined in\n         * {@link #getMaximumCallComposerPictureSize()}.\n         *\n         * Clients that encounter this error should retry the upload after reducing the size of the\n         * picture.\n         ",
    "links" : [ "#getMaximumCallComposerPictureSize()" ]
  }, {
    "name" : "ERROR_AUTHENTICATION_FAILED",
    "type" : "int",
    "comment" : "\n         * Indicates that the device failed to authenticate with the carrier when uploading the\n         * picture.\n         *\n         * Clients that encounter this error should not retry the upload unless a reboot or radio\n         * reset has been performed in the interim.\n         ",
    "links" : [ ]
  }, {
    "name" : "ERROR_INPUT_CLOSED",
    "type" : "int",
    "comment" : "\n         * Indicates that the {@link InputStream} passed to {@link #uploadCallComposerPicture}\n         * was closed.\n         *\n         * The caller should retry if this error is encountered, and be sure to not close the stream\n         * before the callback is called this time.\n         ",
    "links" : [ "#uploadCallComposerPicture", "java.io.InputStream" ]
  }, {
    "name" : "ERROR_IO_EXCEPTION",
    "type" : "int",
    "comment" : "\n         * Indicates that an {@link IOException} was encountered while reading the picture.\n         *\n         * The offending {@link IOException} will be available via {@link #getIOException()}.\n         * Clients should use the contents of the exception to determine whether a retry is\n         * warranted.\n         ",
    "links" : [ "#getIOException()", "java.io.IOException" ]
  }, {
    "name" : "ERROR_NETWORK_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n         * Indicates that the device is currently not connected to a network that's capable of\n         * reaching a carrier's RCS servers.\n         *\n         * Clients should prompt the user to remedy the issue by moving to an area with better\n         * signal, by connecting to a different network, or to retry at another time.\n         ",
    "links" : [ ]
  }, {
    "name" : "mErrorCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIOException",
    "type" : "IOException",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getErrorCode()",
    "returnType" : "int",
    "comment" : "\n         * Fetches the error code associated with this exception.\n         * @return An error code.\n         ",
    "links" : [ ]
  }, {
    "name" : "public IOException getIOException()",
    "returnType" : "IOException",
    "comment" : " Follows the naming of IOException",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getErrorCode()", "public IOException getIOException()" ],
  "variableNames" : [ "SUCCESS", "ERROR_UNKNOWN", "ERROR_REMOTE_END_CLOSED", "ERROR_FILE_TOO_LARGE", "ERROR_AUTHENTICATION_FAILED", "ERROR_INPUT_CLOSED", "ERROR_IO_EXCEPTION", "ERROR_NETWORK_UNAVAILABLE", "mErrorCode", "mIOException" ]
}