{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/PersonName.java",
  "packageName" : "android.icu.text",
  "className" : "PersonName",
  "comment" : "\n * An object used to provide name data to the PersonNameFormatter for formatting.\n * Clients can implement this interface to talk directly to some other subsystem\n * that actually contains the name data (instead of having to copy it into a separate\n * object just for formatting) or to override the default modifier behavior described\n * above.  A concrete SimplePersonName object that does store the field values directly\n * is provided.\n *\n * @see SimplePersonName\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public Locale getNameLocale()",
    "returnType" : "Locale",
    "comment" : "\n     * Returns the locale of the name-- that is, the language or country of origin for the person being named.\n     * An implementing class is allowed to return null here to indicate the name's locale is unknown.\n     *\n     * @return The name's locale, or null if it's not known.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PreferredOrder getPreferredOrder()",
    "returnType" : "PreferredOrder",
    "comment" : "\n     * Returns the preferred field order for the name.  PersonName objects should generally return DEFAULT,\n     * allowing the PersonNameFormatter to deduce the peoper field order based on the locales of the name\n     * and the formatter.  But this can be used to force a particular field order, generally in cases\n     * where the deduction logic in PersonNameFormatter would guess wrong.\n     * @return The name's preferred field order.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFieldValue(NameField identifier, Set<FieldModifier> modifiers)",
    "returnType" : "String",
    "comment" : "\n     * Returns one field of the name, possibly in a modified form.\n     *\n     * @param identifier The identifier of the requested field.\n     * @param modifiers  An <b>IN/OUT</b> parameter that specifies modifiers to apply to the basic field value.\n     *                   An implementing class can choose to handle or ignore any modifiers; it should modify\n     *                   the passed-in Set so that on exit, it contains only the requested modifiers that it\n     *                   DIDN'T handle.  This parameter may not be null, and must either be mutable or empty.\n     * @return The value of the requested field, optionally modified by some or all of the requested modifiers, or\n     * null if the requested field isn't present in the name.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Locale getNameLocale()", "public PreferredOrder getPreferredOrder()", "public String getFieldValue(NameField identifier, Set<FieldModifier> modifiers)" ],
  "variableNames" : [ ]
}