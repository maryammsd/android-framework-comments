{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/util/ExceptionUtil.java",
  "packageName" : "android.app.appsearch.util",
  "className" : "ExceptionUtil",
  "comment" : "\n * Utilities for handling exceptions.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static void handleException(@NonNull Exception e)",
    "returnType" : "void",
    "comment" : "\n     * {@link RuntimeException} will be rethrown if {@link #isItOkayToRethrowException()} returns\n     * true.\n     ",
    "links" : [ "RuntimeException", "#isItOkayToRethrowException()" ]
  }, {
    "name" : "private static boolean isItOkayToRethrowException()",
    "returnType" : "boolean",
    "comment" : " Returns whether it is OK to rethrow exceptions from this entrypoint. ",
    "links" : [ ]
  }, {
    "name" : "public static void handleRemoteException(@NonNull RemoteException e)",
    "returnType" : "void",
    "comment" : " Rethrow exception from SystemServer in Framework code. ",
    "links" : [ ]
  }, {
    "name" : "private static void rethrowRuntimeException(RuntimeException e)",
    "returnType" : "void",
    "comment" : "\n     * A helper method to rethrow {@link RuntimeException}.\n     *\n     * <p>We use this to enforce exception type and assure the compiler/linter that the exception is\n     * indeed {@link RuntimeException} and can be rethrown safely.\n     ",
    "links" : [ "RuntimeException" ]
  } ],
  "methodNames" : [ "public static void handleException(@NonNull Exception e)", "private static boolean isItOkayToRethrowException()", "public static void handleRemoteException(@NonNull RemoteException e)", "private static void rethrowRuntimeException(RuntimeException e)" ],
  "variableNames" : [ ]
}