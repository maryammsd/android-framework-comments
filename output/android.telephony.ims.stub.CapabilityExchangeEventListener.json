{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/stub/CapabilityExchangeEventListener.java",
  "packageName" : "android.telephony.ims.stub",
  "className" : "CapabilityExchangeEventListener",
  "comment" : "\n * The interface that is used by the framework to listen to events from the vendor RCS stack\n * regarding capabilities exchange using presence server and OPTIONS.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onRequestPublishCapabilities(@RcsUceAdapter.StackPublishTriggerType int publishTriggerType) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Trigger the framework to provide a capability update using\n     * {@link RcsCapabilityExchangeImplBase#publishCapabilities}.\n     * <p>\n     * This is typically used when trying to generate an initial PUBLISH for a new subscription to\n     * the network. The device will cache all presence publications after boot until this method is\n     * called the first time.\n     * @param publishTriggerType The reason for the capability update request.\n     * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is not currently\n     * connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received the\n     * {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare cases when the\n     * Telephony stack has crashed.\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase#publishCapabilities", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  }, {
    "name" : " void onUnpublish() throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device's capabilities have been unpublished\n     * from the network.\n     *\n     * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is not currently\n     * connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received the\n     * {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare cases when the\n     * Telephony stack has crashed.\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  }, {
    "name" : " void onPublishUpdated(int reasonCode, @NonNull String reasonPhrase, int reasonHeaderCause, @NonNull String reasonHeaderText) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the ImsService has refreshed the PUBLISH\n     * internally, which has resulted in a new PUBLISH result.\n     * <p>\n     * This method must be called to notify the framework of SUCCESS (200 OK) and FAILURE (300+)\n     * codes in order to keep the AOSP stack up to date.\n     * @param reasonCode The SIP response code sent from the network.\n     * @param reasonPhrase The optional reason response from the network. If the\n     * network provided no reason with the sip code, the string should be empty.\n     * @param reasonHeaderCause The “cause” parameter of the “reason” header\n     * included in the SIP message.\n     * @param reasonHeaderText The “text” parameter of the “reason” header\n     * included in the SIP message.\n     * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is not\n     * currently connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received\n     * the {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare\n     * cases when the Telephony stack has crashed.\n     *\n     * @deprecated Replaced sip information with the newly added\n     * {@link #onPublishUpdated(SipDetails)}.\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "#onPublishUpdated(SipDetails)", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  }, {
    "name" : " void onPublishUpdated(@NonNull SipDetails details) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the ImsService has refreshed the PUBLISH\n     * internally, which has resulted in a new PUBLISH result.\n     * <p>\n     * This method must be called to notify the framework of SUCCESS (200 OK) and FAILURE (300+)\n     * codes in order to keep the AOSP stack up to date.\n     * @param details The SIP information received in response to a publish operation.\n     * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is not\n     * currently connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received\n     * the {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare\n     * cases when the Telephony stack has crashed.\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  }, {
    "name" : " void onRemoteCapabilityRequest(@NonNull Uri contactUri, @NonNull Set<String> remoteCapabilities, @NonNull OptionsRequestCallback callback) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Inform the framework of an OPTIONS query from a remote device for this device's UCE\n     * capabilities.\n     * <p>\n     * The framework will respond via the\n     * {@link OptionsRequestCallback#onRespondToCapabilityRequest} or\n     * {@link OptionsRequestCallback#onRespondToCapabilityRequestWithError}.\n     * @param contactUri The URI associated with the remote contact that is\n     * requesting capabilities.\n     * @param remoteCapabilities The remote contact's capability information. The capability\n     * information is in the format defined in RCC.07 section 2.6.1.3.\n     * @param callback The callback of this request which is sent from the remote user.\n     * @throws ImsException If this {@link RcsCapabilityExchangeImplBase} instance is not\n     * currently connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received\n     * the {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare\n     * cases when the Telephony stack has crashed.\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "#onRespondToCapabilityRequestWithError", "android.telephony.ims.feature.RcsFeature", "#onRespondToCapabilityRequest", "android.telephony.ims.stub.RcsCapabilityExchangeImplBase" ]
  } ],
  "methodNames" : [ " void onRequestPublishCapabilities(@RcsUceAdapter.StackPublishTriggerType int publishTriggerType) throws ImsException", " void onUnpublish() throws ImsException", " void onPublishUpdated(int reasonCode, @NonNull String reasonPhrase, int reasonHeaderCause, @NonNull String reasonHeaderText) throws ImsException", " void onPublishUpdated(@NonNull SipDetails details) throws ImsException", " void onRemoteCapabilityRequest(@NonNull Uri contactUri, @NonNull Set<String> remoteCapabilities, @NonNull OptionsRequestCallback callback) throws ImsException" ],
  "variableNames" : [ ]
}