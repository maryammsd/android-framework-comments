{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/ConcurrentLinkedDeque.java",
  "packageName" : "java.util.concurrent",
  "className" : "AbstractItr",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "nextNode",
    "type" : "Node<E>",
    "comment" : "\n         * Next node to return item for.\n         ",
    "links" : [ ]
  }, {
    "name" : "nextItem",
    "type" : "E",
    "comment" : "\n         * nextItem holds on to item fields because once we claim\n         * that an element exists in hasNext(), we must return it in\n         * the following next() call even if it was in the process of\n         * being removed when hasNext() was called.\n         ",
    "links" : [ ]
  }, {
    "name" : "lastRet",
    "type" : "Node<E>",
    "comment" : "\n         * Node returned by most recent call to next. Needed by remove.\n         * Reset to null if this element is deleted by a call to remove.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " abstract Node<E> startNode()",
    "returnType" : "Node<E>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " abstract Node<E> nextNode(Node<E> p)",
    "returnType" : "Node<E>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void advance()",
    "returnType" : "void",
    "comment" : "\n         * Sets nextNode and nextItem to next valid node, or to null\n         * if no such.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasNext()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public E next()",
    "returnType" : "E",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void remove()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " abstract Node<E> startNode()", " abstract Node<E> nextNode(Node<E> p)", "private void advance()", "public boolean hasNext()", "public E next()", "public void remove()" ],
  "variableNames" : [ "nextNode", "nextItem", "lastRet" ]
}