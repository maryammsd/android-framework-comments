{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/slice/SliceItem.java",
  "packageName" : "android.app.slice",
  "className" : "SliceItem",
  "comment" : "\n * A SliceItem is a single unit in the tree structure of a {@link Slice}.\n *\n * A SliceItem a piece of content and some hints about what that content\n * means or how it should be displayed. The types of content can be:\n * <li>{@link #FORMAT_SLICE}</li>\n * <li>{@link #FORMAT_TEXT}</li>\n * <li>{@link #FORMAT_IMAGE}</li>\n * <li>{@link #FORMAT_ACTION}</li>\n * <li>{@link #FORMAT_INT}</li>\n * <li>{@link #FORMAT_LONG}</li>\n * <li>{@link #FORMAT_REMOTE_INPUT}</li>\n * <li>{@link #FORMAT_BUNDLE}</li>\n *\n * The hints that a {@link SliceItem} are a set of strings which annotate\n * the content. The hints that are guaranteed to be understood by the system\n * are defined on {@link Slice}.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FORMAT_SLICE",
    "type" : "String",
    "comment" : "\n     * A {@link SliceItem} that contains a {@link Slice}\n     ",
    "links" : [ "android.app.slice.SliceItem", "android.app.slice.Slice" ]
  }, {
    "name" : "FORMAT_TEXT",
    "type" : "String",
    "comment" : "\n     * A {@link SliceItem} that contains a {@link CharSequence}\n     ",
    "links" : [ "android.app.slice.SliceItem", "CharSequence" ]
  }, {
    "name" : "FORMAT_IMAGE",
    "type" : "String",
    "comment" : "\n     * A {@link SliceItem} that contains an {@link Icon}\n     ",
    "links" : [ "android.app.slice.SliceItem", "android.graphics.drawable.Icon" ]
  }, {
    "name" : "FORMAT_ACTION",
    "type" : "String",
    "comment" : "\n     * A {@link SliceItem} that contains a {@link PendingIntent}\n     *\n     * Note: Actions contain 2 pieces of data, In addition to the pending intent, the\n     * item contains a {@link Slice} that the action applies to.\n     ",
    "links" : [ "android.app.slice.SliceItem", "android.app.slice.Slice", "android.app.PendingIntent" ]
  }, {
    "name" : "FORMAT_INT",
    "type" : "String",
    "comment" : "\n     * A {@link SliceItem} that contains an int.\n     ",
    "links" : [ "android.app.slice.SliceItem" ]
  }, {
    "name" : "FORMAT_LONG",
    "type" : "String",
    "comment" : "\n     * A {@link SliceItem} that contains a long.\n     ",
    "links" : [ "android.app.slice.SliceItem" ]
  }, {
    "name" : "FORMAT_TIMESTAMP",
    "type" : "String",
    "comment" : "\n     * @deprecated TO BE REMOVED\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "FORMAT_REMOTE_INPUT",
    "type" : "String",
    "comment" : "\n     * A {@link SliceItem} that contains a {@link RemoteInput}.\n     ",
    "links" : [ "android.app.RemoteInput", "android.app.slice.SliceItem" ]
  }, {
    "name" : "FORMAT_BUNDLE",
    "type" : "String",
    "comment" : "\n     * A {@link SliceItem} that contains a {@link Bundle}.\n     ",
    "links" : [ "android.app.slice.SliceItem", "android.os.Bundle" ]
  }, {
    "name" : "mHints",
    "type" : "String[]",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mFormat",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mObj",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SliceItem>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<String> getHints()",
    "returnType" : "List<String>",
    "comment" : "\n     * Gets all hints associated with this SliceItem.\n     * @return Array of hints.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFormat()",
    "returnType" : "String",
    "comment" : "\n     * Get the format of this SliceItem.\n     * <p>\n     * The format will be one of the following types supported by the platform:\n     * <li>{@link #FORMAT_SLICE}</li>\n     * <li>{@link #FORMAT_TEXT}</li>\n     * <li>{@link #FORMAT_IMAGE}</li>\n     * <li>{@link #FORMAT_ACTION}</li>\n     * <li>{@link #FORMAT_INT}</li>\n     * <li>{@link #FORMAT_LONG}</li>\n     * <li>{@link #FORMAT_REMOTE_INPUT}</li>\n     * <li>{@link #FORMAT_BUNDLE}</li>\n     * @see #getSubType() ()\n     ",
    "links" : [ "#FORMAT_REMOTE_INPUT", "#FORMAT_TEXT", "#FORMAT_BUNDLE", "#FORMAT_INT", "#FORMAT_SLICE", "#FORMAT_LONG", "#FORMAT_ACTION", "#FORMAT_IMAGE" ]
  }, {
    "name" : "public String getSubType()",
    "returnType" : "String",
    "comment" : "\n     * Get the sub-type of this SliceItem.\n     * <p>\n     * Subtypes provide additional information about the type of this information beyond basic\n     * interpretations inferred by {@link #getFormat()}. For example a slice may contain\n     * many {@link #FORMAT_TEXT} items, but only some of them may be {@link Slice#SUBTYPE_MESSAGE}.\n     * @see #getFormat()\n     ",
    "links" : [ "#FORMAT_TEXT", "android.app.slice.Slice#SUBTYPE_MESSAGE", "#getFormat()" ]
  }, {
    "name" : "public CharSequence getText()",
    "returnType" : "CharSequence",
    "comment" : "\n     * @return The text held by this {@link #FORMAT_TEXT} SliceItem\n     ",
    "links" : [ "#FORMAT_TEXT" ]
  }, {
    "name" : "public Bundle getBundle()",
    "returnType" : "Bundle",
    "comment" : "\n     * @return The parcelable held by this {@link #FORMAT_BUNDLE} SliceItem\n     ",
    "links" : [ "#FORMAT_BUNDLE" ]
  }, {
    "name" : "public Icon getIcon()",
    "returnType" : "Icon",
    "comment" : "\n     * @return The icon held by this {@link #FORMAT_IMAGE} SliceItem\n     ",
    "links" : [ "#FORMAT_IMAGE" ]
  }, {
    "name" : "public PendingIntent getAction()",
    "returnType" : "PendingIntent",
    "comment" : "\n     * @return The pending intent held by this {@link #FORMAT_ACTION} SliceItem\n     ",
    "links" : [ "#FORMAT_ACTION" ]
  }, {
    "name" : "public RemoteViews getRemoteView()",
    "returnType" : "RemoteViews",
    "comment" : "\n     * @hide This isn't final\n     ",
    "links" : [ ]
  }, {
    "name" : "public RemoteInput getRemoteInput()",
    "returnType" : "RemoteInput",
    "comment" : "\n     * @return The remote input held by this {@link #FORMAT_REMOTE_INPUT} SliceItem\n     ",
    "links" : [ "#FORMAT_REMOTE_INPUT" ]
  }, {
    "name" : "public int getInt()",
    "returnType" : "int",
    "comment" : "\n     * @return The color held by this {@link #FORMAT_INT} SliceItem\n     ",
    "links" : [ "#FORMAT_INT" ]
  }, {
    "name" : "public Slice getSlice()",
    "returnType" : "Slice",
    "comment" : "\n     * @return The slice held by this {@link #FORMAT_ACTION} or {@link #FORMAT_SLICE} SliceItem\n     ",
    "links" : [ "#FORMAT_SLICE", "#FORMAT_ACTION" ]
  }, {
    "name" : "public long getLong()",
    "returnType" : "long",
    "comment" : "\n     * @return The long held by this {@link #FORMAT_LONG} SliceItem\n     ",
    "links" : [ "#FORMAT_LONG" ]
  }, {
    "name" : "public long getTimestamp()",
    "returnType" : "long",
    "comment" : "\n     * @deprecated replaced by {@link #getLong()}\n     * @removed\n     ",
    "links" : [ "#getLong()" ]
  }, {
    "name" : "public boolean hasHint(@Slice.SliceHint String hint)",
    "returnType" : "boolean",
    "comment" : "\n     * @param hint The hint to check for\n     * @return true if this item contains the given hint\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasHints(@Slice.SliceHint String[] hints)",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasAnyHints(@Slice.SliceHint String[] hints)",
    "returnType" : "boolean",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String getBaseType(String type)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void writeObj(Parcel dest, int flags, Object obj, String type)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Object readObj(String type, Parcel in)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "FORMAT_SLICE", "FORMAT_TEXT", "FORMAT_IMAGE", "FORMAT_ACTION", "FORMAT_INT", "FORMAT_LONG", "FORMAT_TIMESTAMP", "FORMAT_REMOTE_INPUT", "FORMAT_BUNDLE", "mHints", "mFormat", "mSubType", "mObj", "CREATOR" ],
  "methodNames" : [ "public List<String> getHints()", "public String getFormat()", "public String getSubType()", "public CharSequence getText()", "public Bundle getBundle()", "public Icon getIcon()", "public PendingIntent getAction()", "public RemoteViews getRemoteView()", "public RemoteInput getRemoteInput()", "public int getInt()", "public Slice getSlice()", "public long getLong()", "public long getTimestamp()", "public boolean hasHint(@Slice.SliceHint String hint)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean hasHints(@Slice.SliceHint String[] hints)", "public boolean hasAnyHints(@Slice.SliceHint String[] hints)", "private static String getBaseType(String type)", "private static void writeObj(Parcel dest, int flags, Object obj, String type)", "private static Object readObj(String type, Parcel in)" ]
}