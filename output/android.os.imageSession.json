{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/image/DynamicSystemManager.java",
  "packageName" : "android.os.image",
  "className" : "Session",
  "comment" : " The DynamicSystemManager.Session represents a started session for the installation. ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public boolean setAshmem(ParcelFileDescriptor ashmem, long size)",
    "returnType" : "boolean",
    "comment" : "\n         * Set the file descriptor that points to a ashmem which will be used\n         * to fetch data during the submitFromAshmem.\n         *\n         * @param ashmem fd that points to a ashmem\n         * @param size size of the ashmem file\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean submitFromAshmem(int size)",
    "returnType" : "boolean",
    "comment" : "\n         * Submit bytes to the DSU partition from the ashmem previously set with\n         * setAshmem.\n         *\n         * @param size Number of bytes\n         * @return true on success, false otherwise.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean getAvbPublicKey(AvbPublicKey dst)",
    "returnType" : "boolean",
    "comment" : "\n         * Retrieve AVB public key from installing partition.\n         *\n         * @param dst           Output the AVB public key.\n         * @return              true on success, false if partition doesn't have a\n         *                      valid VBMeta block to retrieve the AVB key from.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean commit()",
    "returnType" : "boolean",
    "comment" : "\n         * Finish write and make device to boot into the it after reboot.\n         *\n         * @return {@code true} if the call succeeds. {@code false} if there is any native runtime\n         *     error.\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public boolean setAshmem(ParcelFileDescriptor ashmem, long size)", "public boolean submitFromAshmem(int size)", "public boolean getAvbPublicKey(AvbPublicKey dst)", "public boolean commit()" ]
}