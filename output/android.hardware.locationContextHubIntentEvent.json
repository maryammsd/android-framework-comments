{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/location/ContextHubIntentEvent.java",
  "packageName" : "android.hardware.location",
  "className" : "ContextHubIntentEvent",
  "comment" : "\n * A helper class to retrieve information about a Intent event received for a PendingIntent\n * registered with {@link ContextHubManager.createClient(ContextHubInfo, PendingIntent, long)}.\n * This object can only be created through the factory method\n * {@link ContextHubIntentEvent.fromIntent(Intent)}.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mEventType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContextHubInfo",
    "type" : "ContextHubInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNanoAppId",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNanoAppMessage",
    "type" : "NanoAppMessage",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNanoAppAbortCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static ContextHubIntentEvent fromIntent(@NonNull Intent intent)",
    "returnType" : "ContextHubIntentEvent",
    "comment" : "\n     * Creates a ContextHubIntentEvent object from an Intent received through a PendingIntent\n     * registered with {@link ContextHubManager.createClient(ContextHubInfo, PendingIntent, long)}.\n     *\n     * @param intent the Intent object from an Intent event\n     * @return the ContextHubIntentEvent object describing the event\n     *\n     * @throws IllegalArgumentException if the Intent was not a valid intent\n     ",
    "links" : [ "ContextHubManager.createClient" ]
  }, {
    "name" : "public int getEventType()",
    "returnType" : "int",
    "comment" : "\n     * @return the event type of this Intent event\n     ",
    "links" : [ ]
  }, {
    "name" : "public ContextHubInfo getContextHubInfo()",
    "returnType" : "ContextHubInfo",
    "comment" : "\n     * @return the ContextHubInfo object describing the Context Hub this event was for\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getNanoAppId()",
    "returnType" : "long",
    "comment" : "\n     * @return the ID of the nanoapp this event was for\n     *\n     * @throws UnsupportedOperationException if the event did not have a nanoapp associated\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getNanoAppAbortCode()",
    "returnType" : "int",
    "comment" : "\n     * @return the nanoapp's abort code\n     *\n     * @throws UnsupportedOperationException if this was not a nanoapp abort event\n     ",
    "links" : [ ]
  }, {
    "name" : "public NanoAppMessage getNanoAppMessage()",
    "returnType" : "NanoAppMessage",
    "comment" : "\n     * @return the message from a nanoapp\n     *\n     * @throws UnsupportedOperationException if this was not a nanoapp message event\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object object)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void hasExtraOrThrow(Intent intent, String extra)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int getIntExtraOrThrow(Intent intent, String extra)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static long getLongExtraOrThrow(Intent intent, String extra)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mEventType", "mContextHubInfo", "mNanoAppId", "mNanoAppMessage", "mNanoAppAbortCode" ],
  "methodNames" : [ "public static ContextHubIntentEvent fromIntent(@NonNull Intent intent)", "public int getEventType()", "public ContextHubInfo getContextHubInfo()", "public long getNanoAppId()", "public int getNanoAppAbortCode()", "public NanoAppMessage getNanoAppMessage()", "public String toString()", "public boolean equals(@Nullable Object object)", "private static void hasExtraOrThrow(Intent intent, String extra)", "private static int getIntExtraOrThrow(Intent intent, String extra)", "private static long getLongExtraOrThrow(Intent intent, String extra)" ]
}