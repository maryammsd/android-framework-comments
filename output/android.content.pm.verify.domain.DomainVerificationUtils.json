{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/pm/verify/domain/DomainVerificationUtils.java",
  "packageName" : "android.content.pm.verify.domain",
  "className" : "DomainVerificationUtils",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STRINGS_TARGET_BYTE_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void writeHostMap(@NonNull Parcel dest, @NonNull Map<String, ?> map)",
    "returnType" : "void",
    "comment" : "\n     * Write a map containing web hosts to the given parcel, using {@link Parcel#writeBlob(byte[])}\n     * if the limit exceeds {@link IBinder#getSuggestedMaxIpcSizeBytes()} / 2. This assumes that the\n     * written map is the only data structure in the caller that varies based on the host data set.\n     * Other data that will be written to the parcel after this method will not be considered in the\n     * calculation.\n     ",
    "links" : [ "android.os.Parcel#writeBlob(byte", "android.os.IBinder#getSuggestedMaxIpcSizeBytes()" ]
  }, {
    "name" : "public static T readHostMap(@NonNull Parcel in, @NonNull T map, @NonNull ClassLoader classLoader)",
    "returnType" : "T",
    "comment" : "\n     * Retrieve a map previously written by {@link #writeHostMap(Parcel, Map)}.\n     ",
    "links" : [ "#writeHostMap(Parcel" ]
  }, {
    "name" : "public static void writeHostSet(@NonNull Parcel dest, @NonNull Set<String> set)",
    "returnType" : "void",
    "comment" : "\n     * {@link ArraySet} variant of {@link #writeHostMap(Parcel, Map)}.\n     ",
    "links" : [ "android.util.ArraySet", "#writeHostMap(Parcel" ]
  }, {
    "name" : "public static Set<String> readHostSet(@NonNull Parcel in)",
    "returnType" : "Set<String>",
    "comment" : "\n     * {@link ArraySet} variant of {@link #readHostMap(Parcel, Map, ClassLoader)}.\n     ",
    "links" : [ "#readHostMap(Parcel", "android.util.ArraySet" ]
  }, {
    "name" : "private static void writeSet(@NonNull Parcel dest, @Nullable Set<String> set)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Set<String> readSet(@NonNull Parcel in)",
    "returnType" : "Set<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int estimatedByteSizeOf(String string)",
    "returnType" : "int",
    "comment" : "\n     * Ballpark the size of domains to avoid unnecessary allocation of ashmem when sending domains\n     * across the client-server API.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void writeHostMap(@NonNull Parcel dest, @NonNull Map<String, ?> map)", "public static T readHostMap(@NonNull Parcel in, @NonNull T map, @NonNull ClassLoader classLoader)", "public static void writeHostSet(@NonNull Parcel dest, @NonNull Set<String> set)", "public static Set<String> readHostSet(@NonNull Parcel in)", "private static void writeSet(@NonNull Parcel dest, @Nullable Set<String> set)", "private static Set<String> readSet(@NonNull Parcel in)", "public static int estimatedByteSizeOf(String string)" ],
  "variableNames" : [ "STRINGS_TARGET_BYTE_SIZE" ]
}