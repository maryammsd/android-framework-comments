{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/appsearch/GetSchemaResponse.java",
  "packageName" : "android.app.appsearch",
  "className" : "Builder",
  "comment" : " Builder for {@link GetSchemaResponse} objects. ",
  "links" : [ "android.app.appsearch.GetSchemaResponse" ],
  "variables" : [ {
    "name" : "mVersion",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSchemas",
    "type" : "ArrayList<AppSearchSchema>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVisibilityConfigBuilders",
    "type" : "Map<String, InternalVisibilityConfig.Builder>",
    "comment" : "\n         * Creates the object when we actually set them. If we never set visibility settings, we\n         * should throw {@link UnsupportedOperationException} in the visibility getters.\n         ",
    "links" : [ "UnsupportedOperationException" ]
  }, {
    "name" : "mBuilt",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setVersion(@IntRange(from = 0) int version)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the database overall schema version.\n         *\n         * <p>Default version is 0\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addSchema(@NonNull AppSearchSchema schema)",
    "returnType" : "Builder",
    "comment" : " Adds one {@link AppSearchSchema} to the schema list. ",
    "links" : [ "android.app.appsearch.AppSearchSchema" ]
  }, {
    "name" : "public Builder addSchemaTypeNotDisplayedBySystem(@NonNull String schemaType)",
    "returnType" : "Builder",
    "comment" : " Getter getSchemaTypesNotDisplayedBySystem returns plural objects.",
    "links" : [ ]
  }, {
    "name" : "public Builder setSchemaTypeVisibleToPackages(@NonNull String schemaType, @NonNull Set<PackageIdentifier> packageIdentifiers)",
    "returnType" : "Builder",
    "comment" : " Getter getSchemaTypesVisibleToPackages returns a map contains all schema types.",
    "links" : [ ]
  }, {
    "name" : "public Builder setRequiredPermissionsForSchemaTypeVisibility(@NonNull String schemaType, @SetSchemaRequest.AppSearchSupportedPermission @NonNull Set<Set<Integer>> visibleToPermissionSets)",
    "returnType" : "Builder",
    "comment" : " Getter getRequiredPermissionsForSchemaTypeVisibility returns a map for all schemaTypes.",
    "links" : [ ]
  }, {
    "name" : "public Builder setPubliclyVisibleSchema(@NonNull String schemaType, @NonNull PackageIdentifier packageIdentifier)",
    "returnType" : "Builder",
    "comment" : " Merged list available from getPubliclyVisibleSchemas",
    "links" : [ ]
  }, {
    "name" : "public Builder setSchemaTypeVisibleToConfigs(@NonNull String schemaType, @NonNull Set<SchemaVisibilityConfig> visibleToConfigs)",
    "returnType" : "Builder",
    "comment" : " Merged map available from getSchemasVisibleToConfigs",
    "links" : [ ]
  }, {
    "name" : "public Builder setVisibilitySettingSupported(boolean visibilitySettingSupported)",
    "returnType" : "Builder",
    "comment" : " Visibility setting is determined by SDK version, so it won't be needed in framework",
    "links" : [ ]
  }, {
    "name" : "public GetSchemaResponse build()",
    "returnType" : "GetSchemaResponse",
    "comment" : " Builds a {@link GetSchemaResponse} object. ",
    "links" : [ "android.app.appsearch.GetSchemaResponse" ]
  }, {
    "name" : "private InternalVisibilityConfig.Builder getOrCreateVisibilityConfigBuilder(@NonNull String schemaType)",
    "returnType" : "InternalVisibilityConfig.Builder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void resetIfBuilt()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setVersion(@IntRange(from = 0) int version)", "public Builder addSchema(@NonNull AppSearchSchema schema)", "public Builder addSchemaTypeNotDisplayedBySystem(@NonNull String schemaType)", "public Builder setSchemaTypeVisibleToPackages(@NonNull String schemaType, @NonNull Set<PackageIdentifier> packageIdentifiers)", "public Builder setRequiredPermissionsForSchemaTypeVisibility(@NonNull String schemaType, @SetSchemaRequest.AppSearchSupportedPermission @NonNull Set<Set<Integer>> visibleToPermissionSets)", "public Builder setPubliclyVisibleSchema(@NonNull String schemaType, @NonNull PackageIdentifier packageIdentifier)", "public Builder setSchemaTypeVisibleToConfigs(@NonNull String schemaType, @NonNull Set<SchemaVisibilityConfig> visibleToConfigs)", "public Builder setVisibilitySettingSupported(boolean visibilitySettingSupported)", "public GetSchemaResponse build()", "private InternalVisibilityConfig.Builder getOrCreateVisibilityConfigBuilder(@NonNull String schemaType)", "private void resetIfBuilt()" ],
  "variableNames" : [ "mVersion", "mSchemas", "mVisibilityConfigBuilders", "mBuilt" ]
}