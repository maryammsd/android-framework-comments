{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/printservice/PrintJob.java",
  "packageName" : "android.printservice",
  "className" : "PrintJob",
  "comment" : "\n * This class represents a print job from the perspective of a print\n * service. It provides APIs for observing the print job state and\n * performing operations on the print job.\n * <p>\n * <strong>Note: </strong> All methods of this class must be invoked on\n * the main application thread.\n * </p>\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPrintServiceClient",
    "type" : "IPrintServiceClient",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDocument",
    "type" : "PrintDocument",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCachedInfo",
    "type" : "PrintJobInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : " Context that created the object ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public PrintJobId getId()",
    "returnType" : "PrintJobId",
    "comment" : "\n     * Gets the unique print job id.\n     *\n     * @return The id.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PrintJobInfo getInfo()",
    "returnType" : "PrintJobInfo",
    "comment" : "\n     * Gets the {@link PrintJobInfo} that describes this job.\n     * <p>\n     * <strong>Node:</strong>The returned info object is a snapshot of the\n     * current print job state. Every call to this method returns a fresh\n     * info object that reflects the current print job state.\n     * </p>\n     *\n     * @return The print job info.\n     ",
    "links" : [ "android.print.PrintJobInfo" ]
  }, {
    "name" : "public PrintDocument getDocument()",
    "returnType" : "PrintDocument",
    "comment" : "\n     * Gets the printed document.\n     *\n     * @return The document.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isQueued()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether this print job is queued. Such a print job is\n     * ready to be printed and can be started or cancelled.\n     *\n     * @return Whether the print job is queued.\n     *\n     * @see #start()\n     * @see #cancel()\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isStarted()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether this print job is started. Such a print job is\n     * being printed and can be completed or canceled or failed.\n     *\n     * @return Whether the print job is started.\n     *\n     * @see #complete()\n     * @see #cancel()\n     * @see #fail(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isBlocked()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether this print job is blocked. Such a print job is halted\n     * due to an abnormal condition and can be started or canceled or failed.\n     *\n     * @return Whether the print job is blocked.\n     *\n     * @see #start()\n     * @see #cancel()\n     * @see #fail(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCompleted()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether this print job is completed. Such a print job\n     * is successfully printed. This is a final state.\n     *\n     * @return Whether the print job is completed.\n     *\n     * @see #complete()\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFailed()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether this print job is failed. Such a print job is\n     * not successfully printed due to an error. This is a final state.\n     *\n     * @return Whether the print job is failed.\n     *\n     * @see #fail(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCancelled()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether this print job is cancelled. Such a print job was\n     * cancelled as a result of a user request. This is a final state.\n     *\n     * @return Whether the print job is cancelled.\n     *\n     * @see #cancel()\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean start()",
    "returnType" : "boolean",
    "comment" : "\n     * Starts the print job. You should call this method if {@link\n     * #isQueued()} or {@link #isBlocked()} returns true and you started\n     * resumed printing.\n     * <p>\n     * This resets the print status to null. Set the new status by using {@link #setStatus}.\n     * </p>\n     *\n     * @return Whether the job was started.\n     *\n     * @see #isQueued()\n     * @see #isBlocked()\n     ",
    "links" : [ "#isQueued()", "#setStatus", "#isBlocked()" ]
  }, {
    "name" : "public boolean block(@Nullable String reason)",
    "returnType" : "boolean",
    "comment" : "\n     * Blocks the print job. You should call this method if {@link #isStarted()} returns true and\n     * you need to block the print job. For example, the user has to add some paper to continue\n     * printing. To resume the print job call {@link #start()}. To change the reason call\n     * {@link #setStatus(CharSequence)}.\n     *\n     * @param reason The human readable, short, and translated reason why the print job is blocked.\n     * @return Whether the job was blocked.\n     *\n     * @see #isStarted()\n     * @see #isBlocked()\n     ",
    "links" : [ "#isStarted()", "#start()", "#setStatus(CharSequence)" ]
  }, {
    "name" : "public boolean complete()",
    "returnType" : "boolean",
    "comment" : "\n     * Completes the print job. You should call this method if {@link\n     * #isStarted()} returns true and you are done printing.\n     *\n     * @return Whether the job as completed.\n     *\n     * @see #isStarted()\n     ",
    "links" : [ "#isStarted()" ]
  }, {
    "name" : "public boolean fail(@Nullable String error)",
    "returnType" : "boolean",
    "comment" : "\n     * Fails the print job. You should call this method if {@link\n     * #isQueued()} or {@link #isStarted()} or {@link #isBlocked()}\n     * returns true you failed while printing.\n     *\n     * @param error The human readable, short, and translated reason\n     * for the failure.\n     * @return Whether the job was failed.\n     *\n     * @see #isQueued()\n     * @see #isStarted()\n     * @see #isBlocked()\n     ",
    "links" : [ "#isStarted()", "#isQueued()", "#isBlocked()" ]
  }, {
    "name" : "public boolean cancel()",
    "returnType" : "boolean",
    "comment" : "\n     * Cancels the print job. You should call this method if {@link\n     * #isQueued()} or {@link #isStarted() or #isBlocked()} returns\n     * true and you canceled the print job as a response to a call to\n     * {@link PrintService#onRequestCancelPrintJob(PrintJob)}.\n     *\n     * @return Whether the job is canceled.\n     *\n     * @see #isStarted()\n     * @see #isQueued()\n     * @see #isBlocked()\n     ",
    "links" : [ "#isStarted()", "android.printservice.PrintService#onRequestCancelPrintJob(PrintJob)", "#isQueued()" ]
  }, {
    "name" : "public void setProgress(@FloatRange(from = 0.0, to = 1.0) float progress)",
    "returnType" : "void",
    "comment" : "\n     * Sets the progress of this print job as a fraction of 1.\n     *\n     * @param progress The new progress\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setStatus(@Nullable CharSequence status)",
    "returnType" : "void",
    "comment" : "\n     * Sets the status of this print job. This should be a human readable, short, and translated\n     * description of the current state of the print job.\n     * <p />\n     * This overrides any previously set status set via {@link #setStatus(CharSequence)},\n     * {@link #setStatus(int)}, {@link #block(String)}, or {@link #fail(String)},\n     *\n     * @param status The new status. If null the status will be empty.\n     ",
    "links" : [ "#setStatus(int)", "#fail(String)", "#setStatus(CharSequence)", "#block(String)" ]
  }, {
    "name" : "public void setStatus(@StringRes int statusResId)",
    "returnType" : "void",
    "comment" : "\n     * Sets the status of this print job as a string resource.\n     * <p />\n     * This overrides any previously set status set via {@link #setStatus(CharSequence)},\n     * {@link #setStatus(int)}, {@link #block(String)}, or {@link #fail(String)},\n     *\n     * @param statusResId The new status as a String resource. If 0 the status will be empty.\n     ",
    "links" : [ "#setStatus(int)", "#fail(String)", "#setStatus(CharSequence)", "#block(String)" ]
  }, {
    "name" : "public boolean setTag(@NonNull String tag)",
    "returnType" : "boolean",
    "comment" : "\n     * Sets a tag that is valid in the context of a {@link PrintService}\n     * and is not interpreted by the system. For example, a print service\n     * may set as a tag the key of the print job returned by a remote\n     * print server, if the printing is off handed to a cloud based service.\n     *\n     * @param tag The tag.\n     * @return True if the tag was set, false otherwise.\n     ",
    "links" : [ "android.printservice.PrintService" ]
  }, {
    "name" : "public String getTag()",
    "returnType" : "String",
    "comment" : "\n     * Gets the print job tag.\n     *\n     * @return The tag or null.\n     *\n     * @see #setTag(String)\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getAdvancedStringOption(String key)",
    "returnType" : "String",
    "comment" : "\n     * Gets the value of an advanced (printer specific) print option.\n     *\n     * @param key The option key.\n     * @return The option value.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasAdvancedOption(String key)",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether this job has a given advanced (printer specific) print\n     * option.\n     *\n     * @param key The option key.\n     * @return Whether the option is present.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getAdvancedIntOption(String key)",
    "returnType" : "int",
    "comment" : "\n     * Gets the value of an advanced (printer specific) print option.\n     *\n     * @param key The option key.\n     * @return The option value.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isInImmutableState()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean setState(int state, @Nullable String error)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "mPrintServiceClient", "mDocument", "mCachedInfo", "mContext" ],
  "methodNames" : [ "public PrintJobId getId()", "public PrintJobInfo getInfo()", "public PrintDocument getDocument()", "public boolean isQueued()", "public boolean isStarted()", "public boolean isBlocked()", "public boolean isCompleted()", "public boolean isFailed()", "public boolean isCancelled()", "public boolean start()", "public boolean block(@Nullable String reason)", "public boolean complete()", "public boolean fail(@Nullable String error)", "public boolean cancel()", "public void setProgress(@FloatRange(from = 0.0, to = 1.0) float progress)", "public void setStatus(@Nullable CharSequence status)", "public void setStatus(@StringRes int statusResId)", "public boolean setTag(@NonNull String tag)", "public String getTag()", "public String getAdvancedStringOption(String key)", "public boolean hasAdvancedOption(String key)", "public int getAdvancedIntOption(String key)", "public boolean equals(Object obj)", "public int hashCode()", "private boolean isInImmutableState()", "private boolean setState(int state, @Nullable String error)" ]
}