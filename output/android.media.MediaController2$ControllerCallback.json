{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaController2.java",
  "packageName" : "android.media",
  "className" : "ControllerCallback",
  "comment" : "\n     * This API is not generally intended for third party application developers.\n     * Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n     * <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n     * Library</a> for consistent behavior across all devices.\n     * <p>\n     * Interface for listening to change in activeness of the {@link MediaSession2}.\n     ",
  "links" : [ "android.media.MediaSession2" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onConnected(@NonNull MediaController2 controller, @NonNull Session2CommandGroup allowedCommands)",
    "returnType" : "void",
    "comment" : "\n         * Called when the controller is successfully connected to the session. The controller\n         * becomes available afterwards.\n         *\n         * @param controller the controller for this event\n         * @param allowedCommands commands that's allowed by the session.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onDisconnected(@NonNull MediaController2 controller)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session refuses the controller or the controller is disconnected from\n         * the session. The controller becomes unavailable afterwards and the callback wouldn't\n         * be called.\n         * <p>\n         * It will be also called after the {@link #close()}, so you can put clean up code here.\n         * You don't need to call {@link #close()} after this.\n         *\n         * @param controller the controller for this event\n         ",
    "links" : [ "#close()" ]
  }, {
    "name" : "public void onPlaybackActiveChanged(@NonNull MediaController2 controller, boolean playbackActive)",
    "returnType" : "void",
    "comment" : "\n         * Called when the session's playback activeness is changed.\n         *\n         * @param controller the controller for this event\n         * @param playbackActive {@code true} if the session's playback is active.\n         *                       {@code false} otherwise.\n         * @see MediaController2#isPlaybackActive()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Session2Command.Result onSessionCommand(@NonNull MediaController2 controller, @NonNull Session2Command command, @Nullable Bundle args)",
    "returnType" : "Session2Command.Result",
    "comment" : "\n         * Called when the connected session sent a session command.\n         *\n         * @param controller the controller for this event\n         * @param command the session command\n         * @param args optional arguments\n         * @return the result for the session command. If {@code null}, RESULT_INFO_SKIPPED\n         *         will be sent to the session.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onCommandResult(@NonNull MediaController2 controller, @NonNull Object token, @NonNull Session2Command command, @NonNull Session2Command.Result result)",
    "returnType" : "void",
    "comment" : "\n         * Called when the command sent to the connected session is finished.\n         *\n         * @param controller the controller for this event\n         * @param token the token got from {@link MediaController2#sendSessionCommand}\n         * @param command the session command\n         * @param result the result of the session command\n         ",
    "links" : [ "android.media.MediaController2#sendSessionCommand" ]
  } ],
  "methodNames" : [ "public void onConnected(@NonNull MediaController2 controller, @NonNull Session2CommandGroup allowedCommands)", "public void onDisconnected(@NonNull MediaController2 controller)", "public void onPlaybackActiveChanged(@NonNull MediaController2 controller, boolean playbackActive)", "public Session2Command.Result onSessionCommand(@NonNull MediaController2 controller, @NonNull Session2Command command, @Nullable Bundle args)", "public void onCommandResult(@NonNull MediaController2 controller, @NonNull Object token, @NonNull Session2Command command, @NonNull Session2Command.Result result)" ],
  "variableNames" : [ ]
}