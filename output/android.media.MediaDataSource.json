{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaDataSource.java",
  "packageName" : "android.media",
  "className" : "MediaDataSource",
  "comment" : "\n * For supplying media data to the framework. Implement this if your app has\n * special requirements for the way media data is obtained.\n *\n * <p class=\"note\">Methods of this interface may be called on multiple different\n * threads. There will be a thread synchronization point between each call to ensure that\n * modifications to the state of your MediaDataSource are visible to future calls. This means\n * you don't need to do your own synchronization unless you're modifying the\n * MediaDataSource from another thread while it's being used by the framework.</p>\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract int readAt(long position, byte[] buffer, int offset, int size) throws IOException",
    "returnType" : "int",
    "comment" : "\n     * Called to request data from the given position.\n     *\n     * Implementations should fill {@code buffer} with up to {@code size}\n     * bytes of data, and return the number of valid bytes in the buffer.\n     *\n     * Return {@code 0} if size is zero (thus no bytes are read).\n     *\n     * Return {@code -1} to indicate that end of stream is reached.\n     *\n     * @param position the position in the data source to read from.\n     * @param buffer the buffer to read the data into.\n     * @param offset the offset within buffer to read the data into.\n     * @param size the number of bytes to read.\n     * @throws IOException on fatal errors.\n     * @return the number of bytes read, or -1 if end of stream is reached.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract long getSize() throws IOException",
    "returnType" : "long",
    "comment" : "\n     * Called to get the size of the data source.\n     *\n     * @throws IOException on fatal errors\n     * @return the size of data source in bytes, or -1 if the size is unknown.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract int readAt(long position, byte[] buffer, int offset, int size) throws IOException", "public abstract long getSize() throws IOException" ],
  "variableNames" : [ ]
}