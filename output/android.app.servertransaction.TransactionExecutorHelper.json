{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/servertransaction/TransactionExecutorHelper.java",
  "packageName" : "android.app.servertransaction",
  "className" : "TransactionExecutorHelper",
  "comment" : "\n * Helper class for {@link TransactionExecutor} that contains utils for lifecycle path resolution.\n * @hide\n ",
  "variables" : [ {
    "name" : "DESTRUCTION_PENALTY",
    "type" : "int",
    "comment" : " A penalty applied to path with destruction when looking for the shortest one.",
    "links" : [ ]
  }, {
    "name" : "ON_RESUME_PRE_EXCUTION_STATES",
    "type" : "int[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLifecycleSequence",
    "type" : "IntArray",
    "comment" : " No direct transition between two states should take more than one complete cycle of 6 states.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public IntArray getLifecyclePath(int start, int finish, boolean excludeLastState)",
    "returnType" : "IntArray",
    "comment" : "\n     * Calculate the path through main lifecycle states for an activity and fill\n     * @link #mLifecycleSequence} with values starting with the state that follows the initial\n     * state.\n     * <p>NOTE: The returned value is used internally in this class and is not a copy. It's contents\n     * may change after calling other methods of this class.</p>\n     ",
    "links" : [ "#mLifecycleSequence" ]
  }, {
    "name" : "public int getClosestPreExecutionState(ActivityClientRecord r, int postExecutionState)",
    "returnType" : "int",
    "comment" : "\n     * Pick a state that goes before provided post-execution state and would require the least\n     * lifecycle transitions to get to.\n     * It will also make sure to try avoiding a path with activity destruction and relaunch if\n     * possible.\n     * @param r An activity that we're trying to resolve the transition for.\n     * @param postExecutionState Post execution state to compute for.\n     * @return One of states that precede the provided post-execution state, or\n     *         {@link ActivityLifecycleItem#UNDEFINED} if there is not path.\n     ",
    "links" : [ "android.app.servertransaction.ActivityLifecycleItem#UNDEFINED" ]
  }, {
    "name" : "public int getClosestOfStates(ActivityClientRecord r, int[] finalStates)",
    "returnType" : "int",
    "comment" : "\n     * Pick a state that would require the least lifecycle transitions to get to.\n     * It will also make sure to try avoiding a path with activity destruction and relaunch if\n     * possible.\n     * @param r An activity that we're trying to resolve the transition for.\n     * @param finalStates An array of valid final states.\n     * @return One of the provided final states, or {@link ActivityLifecycleItem#UNDEFINED} if none\n     *         were provided or there is not path.\n     ",
    "links" : [ "android.app.servertransaction.ActivityLifecycleItem#UNDEFINED" ]
  }, {
    "name" : "public static ActivityLifecycleItem getLifecycleRequestForCurrentState(ActivityClientRecord r)",
    "returnType" : "ActivityLifecycleItem",
    "comment" : " Get the lifecycle state request to match the current state in the end of a transaction. ",
    "links" : [ ]
  }, {
    "name" : "private static boolean pathInvolvesDestruction(IntArray lifecycleSequence)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if there is a destruction involved in the path. We want to avoid a lifecycle sequence\n     * that involves destruction and recreation if there is another path.\n     ",
    "links" : [ ]
  }, {
    "name" : " static int lastCallbackRequestingState(ClientTransaction transaction)",
    "returnType" : "int",
    "comment" : "\n     * Return the index of the last callback that requests the state in which activity will be after\n     * execution. If there is a group of callbacks in the end that requests the same specific state\n     * or doesn't request any - we will find the first one from such group.\n     *\n     * E.g. ActivityResult requests RESUMED post-execution state, Configuration does not request any\n     * specific state. If there is a sequence\n     *   Configuration - ActivityResult - Configuration - ActivityResult\n     * index 1 will be returned, because ActivityResult request on position 1 will be the last\n     * request that moves activity to the RESUMED state where it will eventually end.\n     ",
    "links" : [ ]
  }, {
    "name" : " static String transactionToString(ClientTransaction transaction, ClientTransactionHandler transactionHandler)",
    "returnType" : "String",
    "comment" : " Dump transaction to string. ",
    "links" : [ ]
  }, {
    "name" : " static String tId(ClientTransaction transaction)",
    "returnType" : "String",
    "comment" : " @return A string in format \"tId:<transaction hashcode> \". ",
    "links" : [ ]
  }, {
    "name" : " static String getActivityName(IBinder token, ClientTransactionHandler transactionHandler)",
    "returnType" : "String",
    "comment" : " Get activity string name for provided token. ",
    "links" : [ ]
  }, {
    "name" : " static String getShortActivityName(IBinder token, ClientTransactionHandler transactionHandler)",
    "returnType" : "String",
    "comment" : " Get short activity class name for provided token. ",
    "links" : [ ]
  }, {
    "name" : "private static Activity getActivityForToken(IBinder token, ClientTransactionHandler transactionHandler)",
    "returnType" : "Activity",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getStateName(int state)",
    "returnType" : "String",
    "comment" : " Get lifecycle state string name. ",
    "links" : [ ]
  } ],
  "variableNames" : [ "DESTRUCTION_PENALTY", "ON_RESUME_PRE_EXCUTION_STATES", "mLifecycleSequence" ],
  "methodNames" : [ "public IntArray getLifecyclePath(int start, int finish, boolean excludeLastState)", "public int getClosestPreExecutionState(ActivityClientRecord r, int postExecutionState)", "public int getClosestOfStates(ActivityClientRecord r, int[] finalStates)", "public static ActivityLifecycleItem getLifecycleRequestForCurrentState(ActivityClientRecord r)", "private static boolean pathInvolvesDestruction(IntArray lifecycleSequence)", " static int lastCallbackRequestingState(ClientTransaction transaction)", " static String transactionToString(ClientTransaction transaction, ClientTransactionHandler transactionHandler)", " static String tId(ClientTransaction transaction)", " static String getActivityName(IBinder token, ClientTransactionHandler transactionHandler)", " static String getShortActivityName(IBinder token, ClientTransactionHandler transactionHandler)", "private static Activity getActivityForToken(IBinder token, ClientTransactionHandler transactionHandler)", " static String getStateName(int state)" ]
}