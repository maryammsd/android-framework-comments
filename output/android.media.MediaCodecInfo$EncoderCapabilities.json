{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaCodecInfo.java",
  "packageName" : "android.media",
  "className" : "EncoderCapabilities",
  "comment" : "\n     * A class that supports querying the encoding capabilities of a codec.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "BITRATE_MODE_CQ",
    "type" : "int",
    "comment" : " Constant quality mode ",
    "links" : [ ]
  }, {
    "name" : "BITRATE_MODE_VBR",
    "type" : "int",
    "comment" : " Variable bitrate mode ",
    "links" : [ ]
  }, {
    "name" : "BITRATE_MODE_CBR",
    "type" : "int",
    "comment" : " Constant bitrate mode ",
    "links" : [ ]
  }, {
    "name" : "BITRATE_MODE_CBR_FD",
    "type" : "int",
    "comment" : " Constant bitrate mode with frame drops ",
    "links" : [ ]
  }, {
    "name" : "bitrates",
    "type" : "Feature[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQualityRange",
    "type" : "Range<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mComplexityRange",
    "type" : "Range<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParent",
    "type" : "CodecCapabilities",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBitControl",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultComplexity",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultQuality",
    "type" : "Integer",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQualityScale",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Range<Integer> getQualityRange()",
    "returnType" : "Range<Integer>",
    "comment" : "\n         * Returns the supported range of quality values.\n         *\n         * Quality is implementation-specific. As a general rule, a higher quality\n         * setting results in a better image quality and a lower compression ratio.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Range<Integer> getComplexityRange()",
    "returnType" : "Range<Integer>",
    "comment" : "\n         * Returns the supported range of encoder complexity values.\n         * <p>\n         * Some codecs may support multiple complexity levels, where higher\n         * complexity values use more encoder tools (e.g. perform more\n         * intensive calculations) to improve the quality or the compression\n         * ratio.  Use a lower value to save power and/or time.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static int parseBitrateMode(String mode)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isBitrateModeSupported(int mode)",
    "returnType" : "boolean",
    "comment" : "\n         * Query whether a bitrate mode is supported.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static EncoderCapabilities create(MediaFormat info, CodecCapabilities parent)",
    "returnType" : "EncoderCapabilities",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private void init(MediaFormat info, CodecCapabilities parent)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void applyLevelLimits()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void parseFromInfo(MediaFormat info)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean supports(Integer complexity, Integer quality, Integer profile)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void getDefaultFormat(MediaFormat format)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean supportsFormat(MediaFormat format)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Range<Integer> getQualityRange()", "public Range<Integer> getComplexityRange()", "private static int parseBitrateMode(String mode)", "public boolean isBitrateModeSupported(int mode)", "public static EncoderCapabilities create(MediaFormat info, CodecCapabilities parent)", "private void init(MediaFormat info, CodecCapabilities parent)", "private void applyLevelLimits()", "private void parseFromInfo(MediaFormat info)", "private boolean supports(Integer complexity, Integer quality, Integer profile)", "public void getDefaultFormat(MediaFormat format)", "public boolean supportsFormat(MediaFormat format)" ],
  "variableNames" : [ "BITRATE_MODE_CQ", "BITRATE_MODE_VBR", "BITRATE_MODE_CBR", "BITRATE_MODE_CBR_FD", "bitrates", "mQualityRange", "mComplexityRange", "mParent", "mBitControl", "mDefaultComplexity", "mDefaultQuality", "mQualityScale" ]
}