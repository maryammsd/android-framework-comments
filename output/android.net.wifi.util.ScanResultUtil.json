{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/util/ScanResultUtil.java",
  "packageName" : "android.net.wifi.util",
  "className" : "ScanResultUtil",
  "comment" : "\n * Scan result utility for any {@link ScanResult} related operations.\n * Currently contains:\n *   > Helper methods to identify the encryption of a ScanResult.\n * @hide\n ",
  "links" : [ "android.net.wifi.ScanResult" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean isScanResultForPskNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to a PSK network or not.\n     * This checks if the provided capabilities string contains PSK encryption type or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForWapiPskNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to a WAPI-PSK network or not.\n     * This checks if the provided capabilities string contains PSK encryption type or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForWapiCertNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to a WAPI-CERT\n     * network or not.\n     * This checks if the provided capabilities string contains PSK encryption type or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean isScanResultForPmfMandatoryNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isScanResultForPmfCapableNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean isEapScanResultForPasspointR1R2Network(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to a Passpoint R1/R2 network\n     * or not. Passpoint R1/R2 requirements:\n     * - Enterprise network not suite B.\n     * - Interworking bit is set.\n     * - HotSpot Release presents.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isEapScanResultForPasspointR3Network(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to a Passpoint R3 network or\n     * not. Passpoint R3 requirements:\n     * - Enterprise network not suite B.\n     * - Interworking bit is set.\n     * - HotSpot Release presents.\n     * - PMF is mandatory.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForWpa3EnterpriseTransitionNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to\n     * a WPA3 Enterprise transition network or not.\n     *\n     * See Section 3.3 WPA3-Enterprise transition mode in WPA3 Specification\n     * - Enable at least EAP/SHA1 and EAP/SHA256 AKM suites.\n     * - Not enable WPA1 version 1, WEP, and TKIP.\n     * - Management Frame Protection Capable is set.\n     * - Management Frame Protection Required is not set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForWpa3EnterpriseOnlyNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to\n     * a WPA3 Enterprise only network or not.\n     *\n     * See Section 3.2 WPA3-Enterprise only mode in WPA3 Specification\n     * - Enable at least EAP/SHA256 AKM suite.\n     * - Not enable EAP/SHA1 AKM suite.\n     * - Not enable WPA1 version 1, WEP, and TKIP.\n     * - Management Frame Protection Capable is set.\n     * - Management Frame Protection Required is set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForEapSuiteBNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to a WPA3-Enterprise 192-bit\n     * mode network or not.\n     * This checks if the provided capabilities comply these conditions:\n     * - Enable SUITE-B-192 AKM.\n     * - Not enable EAP/SHA1 AKM suite.\n     * - Not enable WPA1 version 1, WEP, and TKIP.\n     * - Management Frame Protection Required is set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForWepNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to a WEP network or not.\n     * This checks if the provided capabilities string contains WEP encryption type or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForOweNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to OWE network.\n     * This checks if the provided capabilities string contains OWE or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForOweTransitionNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to OWE transition network.\n     * This checks if the provided capabilities string contains OWE_TRANSITION or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForSaeNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to SAE network.\n     * This checks if the provided capabilities string contains SAE or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForPskSaeTransitionNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to PSK-SAE transition\n     * network. This checks if the provided capabilities string contains both PSK and SAE or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForFilsSha256Network(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to FILS SHA256 network.\n     * This checks if the provided capabilities string contains FILS-SHA256 or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForFilsSha384Network(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to FILS SHA384 network.\n     * This checks if the provided capabilities string contains FILS-SHA384 or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForDppNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to DPP network.\n     * This checks if the provided capabilities string contains DPP or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForWpaPersonalOnlyNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to only WPA-Personal network.\n     * This checks if the provided capabilities string contains WPA and not RSN.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForUnknownAkmNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     *  Helper method to check if the provided |scanResult| corresponds to an unknown amk network.\n     *  This checks if the provided capabilities string contains ? or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForPskOnlyNetwork(@NonNull ScanResult r)",
    "returnType" : "boolean",
    "comment" : "\n     *  Helper method to check if the provided |scanResult| corresponds to a pure PSK network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForSaeOnlyNetwork(@NonNull ScanResult r)",
    "returnType" : "boolean",
    "comment" : "\n     *  Helper method to check if the provided |scanResult| corresponds to a pure SAE network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForOpenOnlyNetwork(@NonNull ScanResult r)",
    "returnType" : "boolean",
    "comment" : "\n     *  Helper method to check if the provided |scanResult| corresponds to a pure OPEN network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForOweOnlyNetwork(@NonNull ScanResult r)",
    "returnType" : "boolean",
    "comment" : "\n     *  Helper method to check if the provided |scanResult| corresponds to a pure OWE network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForWpa2EnterpriseOnlyNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to a pure WPA2 Enterprise\n     * network.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isScanResultForOpenNetwork(@NonNull ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "\n     * Helper method to check if the provided |scanResult| corresponds to an open network or not.\n     * This checks if the provided capabilities string does not contain either of WEP, PSK, SAE\n     * EAP, or unknown encryption types or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String createQuotedSsid(@Nullable String ssid)",
    "returnType" : "String",
    "comment" : "\n     * Helper method to quote the SSID in Scan result to use for comparing/filling SSID stored in\n     * WifiConfiguration object.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static WifiConfiguration createNetworkFromScanResult(@NonNull ScanResult scanResult)",
    "returnType" : "WifiConfiguration",
    "comment" : "\n     * Creates a network configuration object using the provided |scanResult|.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static List<SecurityParams> generateSecurityParamsListFromScanResult(@NonNull ScanResult scanResult)",
    "returnType" : "List<SecurityParams>",
    "comment" : "\n     * Generate security params from the scan result.\n     * @param scanResult the scan result to be checked.\n     * @return a list of security params. If no known security params, return an empty list.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void dumpScanResults(@NonNull PrintWriter pw, @Nullable List<ScanResult> scanResults, long nowMs)",
    "returnType" : "void",
    "comment" : "\n     * Dump the provided scan results list to |pw|.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean validateScanResultList(@Nullable List<ScanResult> scanResults)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if ScanResult list is valid.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean validate(@Nullable ScanResult scanResult)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String redactBssid(MacAddress bssid, int numRedactedOctets)",
    "returnType" : "String",
    "comment" : "\n     * Redact bytes from a bssid.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static boolean isScanResultForPskNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForWapiPskNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForWapiCertNetwork(@NonNull ScanResult scanResult)", "private static boolean isScanResultForPmfMandatoryNetwork(@NonNull ScanResult scanResult)", "private static boolean isScanResultForPmfCapableNetwork(@NonNull ScanResult scanResult)", "public static boolean isEapScanResultForPasspointR1R2Network(@NonNull ScanResult scanResult)", "public static boolean isEapScanResultForPasspointR3Network(@NonNull ScanResult scanResult)", "public static boolean isScanResultForWpa3EnterpriseTransitionNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForWpa3EnterpriseOnlyNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForEapSuiteBNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForWepNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForOweNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForOweTransitionNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForSaeNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForPskSaeTransitionNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForFilsSha256Network(@NonNull ScanResult scanResult)", "public static boolean isScanResultForFilsSha384Network(@NonNull ScanResult scanResult)", "public static boolean isScanResultForDppNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForWpaPersonalOnlyNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForUnknownAkmNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForPskOnlyNetwork(@NonNull ScanResult r)", "public static boolean isScanResultForSaeOnlyNetwork(@NonNull ScanResult r)", "public static boolean isScanResultForOpenOnlyNetwork(@NonNull ScanResult r)", "public static boolean isScanResultForOweOnlyNetwork(@NonNull ScanResult r)", "public static boolean isScanResultForWpa2EnterpriseOnlyNetwork(@NonNull ScanResult scanResult)", "public static boolean isScanResultForOpenNetwork(@NonNull ScanResult scanResult)", "public static String createQuotedSsid(@Nullable String ssid)", "public static WifiConfiguration createNetworkFromScanResult(@NonNull ScanResult scanResult)", "public static List<SecurityParams> generateSecurityParamsListFromScanResult(@NonNull ScanResult scanResult)", "public static void dumpScanResults(@NonNull PrintWriter pw, @Nullable List<ScanResult> scanResults, long nowMs)", "public static boolean validateScanResultList(@Nullable List<ScanResult> scanResults)", "private static boolean validate(@Nullable ScanResult scanResult)", "public static String redactBssid(MacAddress bssid, int numRedactedOctets)" ],
  "variableNames" : [ "TAG" ]
}