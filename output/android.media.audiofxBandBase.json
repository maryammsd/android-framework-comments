{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/audiofx/DynamicsProcessing.java",
  "packageName" : "android.media.audiofx",
  "className" : "BandBase",
  "comment" : "\n     * Base class for bands\n     ",
  "variables" : [ {
    "name" : "mEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCutoffFrequency",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEnabled()",
    "returnType" : "boolean",
    "comment" : "\n         * returns enabled state of the band\n         * @return true if bands is enabled for processing, false otherwise\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setEnabled(boolean enabled)",
    "returnType" : "void",
    "comment" : "\n         * sets enabled state of the band\n         * @param enabled true for enabled, false otherwise\n         ",
    "links" : [ ]
  }, {
    "name" : "public float getCutoffFrequency()",
    "returnType" : "float",
    "comment" : "\n         * gets cutoffFrequency for this band in Hertz (Hz)\n         * @return cutoffFrequency for this band in Hertz (Hz)\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setCutoffFrequency(float frequency)",
    "returnType" : "void",
    "comment" : "\n         * sets topmost frequency number (in Hz) this band will process. The\n         * effective bandwidth for the band is then computed using this and the previous band\n         * topmost frequency (or 0 Hz for band number 0). Frequencies are expected to increase with\n         * band number, thus band 0 cutoffFrequency <= band 1 cutoffFrequency, and so on.\n         * @param frequency\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mEnabled", "mCutoffFrequency" ],
  "methodNames" : [ "public String toString()", "public boolean isEnabled()", "public void setEnabled(boolean enabled)", "public float getCutoffFrequency()", "public void setCutoffFrequency(float frequency)" ]
}