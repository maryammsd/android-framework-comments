{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/Settings.java",
  "packageName" : "android.provider",
  "className" : "Global",
  "comment" : "\n     * Global system settings, containing preferences that always apply identically\n     * to all defined users.  Applications can read these but are not allowed to write;\n     * like the \"Secure\" settings, these are for preferences that the user must\n     * explicitly modify through the system UI or specialized APIs for those values.\n     ",
  "variables" : [ {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URL for global secure settings items.  Not public.\n         ",
    "links" : [ ]
  }, {
    "name" : "NOTIFICATION_BUBBLES",
    "type" : "String",
    "comment" : "\n         * Whether the notification bubbles are globally enabled\n         * The value is boolean (1 or 0).\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ADD_USERS_WHEN_LOCKED",
    "type" : "String",
    "comment" : "\n         * Whether users are allowed to add more users or guest from lockscreen.\n         * <p>\n         * Type: int\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APPLY_RAMPING_RINGER",
    "type" : "String",
    "comment" : "\n         * Whether applying ramping ringer on incoming phone call ringtone.\n         * <p>1 = apply ramping ringer\n         * <p>0 = do not apply ramping ringer\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_ACCESSIBILITY_GLOBAL_GESTURE_ENABLED",
    "type" : "String",
    "comment" : "\n         * Setting whether the global gesture for enabling accessibility is enabled.\n         * If this gesture is enabled the user will be able to perfrom it to enable\n         * the accessibility state without visiting the settings app.\n         *\n         * @hide\n         * No longer used. Should be removed once all dependencies have been updated.\n         ",
    "links" : [ ]
  }, {
    "name" : "AIRPLANE_MODE_ON",
    "type" : "String",
    "comment" : "\n         * Whether Airplane Mode is on.\n         ",
    "links" : [ ]
  }, {
    "name" : "THEATER_MODE_ON",
    "type" : "String",
    "comment" : "\n         * Whether Theater Mode is on.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "RADIO_BLUETOOTH",
    "type" : "String",
    "comment" : "\n         * Constant for use in AIRPLANE_MODE_RADIOS to specify Bluetooth radio.\n         ",
    "links" : [ ]
  }, {
    "name" : "RADIO_WIFI",
    "type" : "String",
    "comment" : "\n         * Constant for use in AIRPLANE_MODE_RADIOS to specify Wi-Fi radio.\n         ",
    "links" : [ ]
  }, {
    "name" : "RADIO_WIMAX",
    "type" : "String",
    "comment" : "\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "RADIO_CELL",
    "type" : "String",
    "comment" : "\n         * Constant for use in AIRPLANE_MODE_RADIOS to specify Cellular radio.\n         ",
    "links" : [ ]
  }, {
    "name" : "RADIO_NFC",
    "type" : "String",
    "comment" : "\n         * Constant for use in AIRPLANE_MODE_RADIOS to specify NFC radio.\n         ",
    "links" : [ ]
  }, {
    "name" : "AIRPLANE_MODE_RADIOS",
    "type" : "String",
    "comment" : "\n         * A comma separated list of radios that need to be disabled when airplane mode\n         * is on. This overrides WIFI_ON and BLUETOOTH_ON, if Wi-Fi and bluetooth are\n         * included in the comma separated list.\n         ",
    "links" : [ ]
  }, {
    "name" : "AIRPLANE_MODE_TOGGLEABLE_RADIOS",
    "type" : "String",
    "comment" : "\n         * A comma separated list of radios that should to be disabled when airplane mode\n         * is on, but can be manually reenabled by the user.  For example, if RADIO_WIFI is\n         * added to both AIRPLANE_MODE_RADIOS and AIRPLANE_MODE_TOGGLEABLE_RADIOS, then Wifi\n         * will be turned off when entering airplane mode, but the user will be able to reenable\n         * Wifi in the Settings app.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_CLASS_OF_DEVICE",
    "type" : "String",
    "comment" : "\n         * An integer representing the Bluetooth Class of Device (CoD).\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_DISABLED_PROFILES",
    "type" : "String",
    "comment" : "\n         * A Long representing a bitmap of profiles that should be disabled when bluetooth starts.\n         * See {@link android.bluetooth.BluetoothProfile}.\n         * {@hide}\n         ",
    "links" : [ "android.bluetooth.BluetoothProfile" ]
  }, {
    "name" : "BLUETOOTH_INTEROPERABILITY_LIST",
    "type" : "String",
    "comment" : "\n         * A semi-colon separated list of Bluetooth interoperability workarounds.\n         * Each entry is a partial Bluetooth device address string and an integer representing\n         * the feature to be disabled, separated by a comma. The integer must correspond\n         * to a interoperability feature as defined in \"interop.h\" in /system/bt.\n         * <p>\n         * Example: <br/>\n         *   \"00:11:22,0;01:02:03:04,2\"\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SLEEP_POLICY",
    "type" : "String",
    "comment" : "\n         * The policy for deciding when Wi-Fi should go to sleep (which will in\n         * turn switch to using the mobile data as an Internet connection).\n         * <p>\n         * Set to one of {@link #WIFI_SLEEP_POLICY_DEFAULT},\n         * {@link #WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED}, or\n         * {@link #WIFI_SLEEP_POLICY_NEVER}.\n         * @deprecated This is no longer used or set by the platform.\n         ",
    "links" : [ "#WIFI_SLEEP_POLICY_DEFAULT", "#WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED", "#WIFI_SLEEP_POLICY_NEVER" ]
  }, {
    "name" : "WIFI_SLEEP_POLICY_DEFAULT",
    "type" : "int",
    "comment" : "\n         * Value for {@link #WIFI_SLEEP_POLICY} to use the default Wi-Fi sleep\n         * policy, which is to sleep shortly after the turning off\n         * according to the {@link #STAY_ON_WHILE_PLUGGED_IN} setting.\n         * @deprecated This is no longer used by the platform.\n         ",
    "links" : [ "#WIFI_SLEEP_POLICY", "#STAY_ON_WHILE_PLUGGED_IN" ]
  }, {
    "name" : "WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED",
    "type" : "int",
    "comment" : "\n         * Value for {@link #WIFI_SLEEP_POLICY} to use the default policy when\n         * the device is on battery, and never go to sleep when the device is\n         * plugged in.\n         * @deprecated This is no longer used by the platform.\n         ",
    "links" : [ "#WIFI_SLEEP_POLICY" ]
  }, {
    "name" : "WIFI_SLEEP_POLICY_NEVER",
    "type" : "int",
    "comment" : "\n         * Value for {@link #WIFI_SLEEP_POLICY} to never go to sleep.\n         * @deprecated This is no longer used by the platform.\n         ",
    "links" : [ "#WIFI_SLEEP_POLICY" ]
  }, {
    "name" : "AUTO_TIME",
    "type" : "String",
    "comment" : "\n         * Value to specify if the user prefers the date, time and time zone\n         * to be automatically fetched from the network (NITZ). 1=yes, 0=no\n         ",
    "links" : [ ]
  }, {
    "name" : "AUTO_TIME_ZONE",
    "type" : "String",
    "comment" : "\n         * Value to specify if the user prefers the time zone\n         * to be automatically fetched from the network (NITZ). 1=yes, 0=no\n         ",
    "links" : [ ]
  }, {
    "name" : "CAR_DOCK_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the car dock \"in\" event sound.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAR_UNDOCK_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the car dock \"out\" event sound.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DESK_DOCK_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the desk dock \"in\" event sound.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DESK_UNDOCK_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the desk dock \"out\" event sound.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DOCK_SOUNDS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether to play a sound for dock events.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DOCK_SOUNDS_ENABLED_WHEN_ACCESSIBILITY",
    "type" : "String",
    "comment" : "\n         * Whether to play a sound for dock events, only when an accessibility service is on.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOCK_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the \"device locked\" (keyguard shown) sound.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "UNLOCK_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the \"device unlocked\" sound.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TRUSTED_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the \"device is trusted\" sound, which is played when the device enters the trusted\n         * state without unlocking.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOW_BATTERY_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the low battery sound file.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "POWER_SOUNDS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether to play a sound for low-battery alerts.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIRELESS_CHARGING_STARTED_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for the \"wireless charging started\" sound.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CHARGING_STARTED_SOUND",
    "type" : "String",
    "comment" : "\n         * URI for \"wired charging started\" sound.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CHARGING_SOUNDS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether to play a sound for charging events.\n         * @deprecated Use {@link android.provider.Settings.Secure#CHARGING_SOUNDS_ENABLED} instead\n         * @hide\n         ",
    "links" : [ "android.provider.Settings.Secure#CHARGING_SOUNDS_ENABLED" ]
  }, {
    "name" : "CHARGING_VIBRATION_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether to vibrate for wireless charging events.\n         * @deprecated Use {@link android.provider.Settings.Secure#CHARGING_VIBRATION_ENABLED}\n         * @hide\n         ",
    "links" : [ "android.provider.Settings.Secure#CHARGING_VIBRATION_ENABLED" ]
  }, {
    "name" : "STAY_ON_WHILE_PLUGGED_IN",
    "type" : "String",
    "comment" : "\n         * Whether we keep the device on while the device is plugged in.\n         * Supported values are:\n         * <ul>\n         * <li>{@code 0} to never stay on while plugged in</li>\n         * <li>{@link BatteryManager#BATTERY_PLUGGED_AC} to stay on for AC charger</li>\n         * <li>{@link BatteryManager#BATTERY_PLUGGED_USB} to stay on for USB charger</li>\n         * <li>{@link BatteryManager#BATTERY_PLUGGED_WIRELESS} to stay on for wireless charger</li>\n         * </ul>\n         * These values can be OR-ed together.\n         ",
    "links" : [ "BatteryManager#BATTERY_PLUGGED_AC", "BatteryManager#BATTERY_PLUGGED_USB", "BatteryManager#BATTERY_PLUGGED_WIRELESS" ]
  }, {
    "name" : "BUGREPORT_IN_POWER_MENU",
    "type" : "String",
    "comment" : "\n         * When the user has enable the option to have a \"bug report\" command\n         * in the power menu.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CUSTOM_BUGREPORT_HANDLER_APP",
    "type" : "String",
    "comment" : "\n         * The package name for the custom bugreport handler app. This app must be whitelisted.\n         * This is currently used only by Power Menu short press.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CUSTOM_BUGREPORT_HANDLER_USER",
    "type" : "String",
    "comment" : "\n         * The user id for the custom bugreport handler app. This is currently used only by Power\n         * Menu short press.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ADB_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether ADB over USB is enabled.\n         ",
    "links" : [ ]
  }, {
    "name" : "ADB_WIFI_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether ADB over Wifi is enabled.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEBUG_VIEW_ATTRIBUTES",
    "type" : "String",
    "comment" : "\n         * Whether Views are allowed to save their attribute data.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEBUG_VIEW_ATTRIBUTES_APPLICATION_PACKAGE",
    "type" : "String",
    "comment" : "\n         * Which application package is allowed to save View attribute data.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ASSISTED_GPS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether assisted GPS should be enabled or not.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_ON",
    "type" : "String",
    "comment" : "\n         * Whether bluetooth is enabled/disabled\n         * 0=disabled. 1=enabled.\n         ",
    "links" : [ ]
  }, {
    "name" : "CDMA_CELL_BROADCAST_SMS",
    "type" : "String",
    "comment" : "\n         * CDMA Cell Broadcast SMS\n         *                            0 = CDMA Cell Broadcast SMS disabled\n         *                            1 = CDMA Cell Broadcast SMS enabled\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CDMA_ROAMING_MODE",
    "type" : "String",
    "comment" : "\n         * The CDMA roaming mode 0 = Home Networks, CDMA default\n         *                       1 = Roaming on Affiliated networks\n         *                       2 = Roaming on any networks\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CDMA_SUBSCRIPTION_MODE",
    "type" : "String",
    "comment" : "\n         * The CDMA subscription mode 0 = RUIM/SIM (default)\n         *                                1 = NV\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_RESTRICT_BACKGROUND_DATA",
    "type" : "String",
    "comment" : "\n         * The default value for whether background data is enabled or not.\n         *\n         * Used by {@code NetworkPolicyManagerService}.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DATA_ACTIVITY_TIMEOUT_MOBILE",
    "type" : "String",
    "comment" : " Inactivity timeout to track mobile data activity.\n        *\n        * If set to a positive integer, it indicates the inactivity timeout value in seconds to\n        * infer the data activity of mobile network. After a period of no activity on mobile\n        * networks with length specified by the timeout, an {@code ACTION_DATA_ACTIVITY_CHANGE}\n        * intent is fired to indicate a transition of network status from \"active\" to \"idle\". Any\n        * subsequent activity on mobile networks triggers the firing of {@code\n        * ACTION_DATA_ACTIVITY_CHANGE} intent indicating transition from \"idle\" to \"active\".\n        *\n        * Network activity refers to transmitting or receiving data on the network interfaces.\n        *\n        * Tracking is disabled if set to zero or negative value.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "DATA_ACTIVITY_TIMEOUT_WIFI",
    "type" : "String",
    "comment" : " Timeout to tracking Wifi data activity. Same as {@code DATA_ACTIVITY_TIMEOUT_MOBILE}\n        * but for Wifi network.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "DATA_ROAMING",
    "type" : "String",
    "comment" : "\n        * Whether or not data roaming is enabled. (0 = false, 1 = true)\n        ",
    "links" : [ ]
  }, {
    "name" : "MDC_INITIAL_MAX_RETRY",
    "type" : "String",
    "comment" : "\n        * The value passed to a Mobile DataConnection via bringUp which defines the\n        * number of retries to preform when setting up the initial connection. The default\n        * value defined in DataConnectionTrackerBase#DEFAULT_MDC_INITIAL_RETRY is currently 1.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "FORCE_ALLOW_ON_EXTERNAL",
    "type" : "String",
    "comment" : "\n        * Whether any package can be on external storage. When this is true, any\n        * package, regardless of manifest values, is a candidate for installing\n        * or moving onto external storage. (0 = false, 1 = true)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_SM_DP_PLUS",
    "type" : "String",
    "comment" : "\n         * The default SM-DP+ configured for this device.\n         *\n         * <p>An SM-DP+ is used by an LPA (see {@link android.service.euicc.EuiccService}) to\n         * download profiles. If this value is set, the LPA will query this server for any profiles\n         * available to this device. If any are available, they may be downloaded during device\n         * provisioning or in settings without needing the user to enter an activation code.\n         *\n         * @see android.service.euicc.EuiccService\n         * @hide\n         ",
    "links" : [ "android.service.euicc.EuiccService" ]
  }, {
    "name" : "EUICC_PROVISIONED",
    "type" : "String",
    "comment" : "\n         * Whether any profile has ever been downloaded onto a eUICC on the device.\n         *\n         * <p>Used to hide eUICC UI from users who have never made use of it and would only be\n         * confused by seeing references to it in settings.\n         * (0 = false, 1 = true)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EUICC_SUPPORTED_COUNTRIES",
    "type" : "String",
    "comment" : "\n         * List of ISO country codes in which eUICC UI is shown. Country codes should be separated\n         * by comma.\n         *\n         * Note: if {@link #EUICC_SUPPORTED_COUNTRIES} is empty, then {@link\n         * #EUICC_UNSUPPORTED_COUNTRIES} is used.\n         *\n         * <p>Used to hide eUICC UI from users who are currently in countries where no carriers\n         * support eUICC.\n         *\n         * @hide\n         ",
    "links" : [ "#EUICC_SUPPORTED_COUNTRIES" ]
  }, {
    "name" : "EUICC_UNSUPPORTED_COUNTRIES",
    "type" : "String",
    "comment" : "\n         * List of ISO country codes in which eUICC UI is not shown. Country codes should be\n         * separated by comma.\n         *\n         * Note: if {@link #EUICC_SUPPORTED_COUNTRIES} is empty, then {@link\n         * #EUICC_UNSUPPORTED_COUNTRIES} is used.\n         *\n         * <p>Used to hide eUICC UI from users who are currently in countries where no carriers\n         * support eUICC.\n         *\n         * @hide\n         ",
    "links" : [ "#EUICC_SUPPORTED_COUNTRIES" ]
  }, {
    "name" : "DEVELOPMENT_FORCE_RESIZABLE_ACTIVITIES",
    "type" : "String",
    "comment" : "\n         * Whether any activity can be resized. When this is true, any\n         * activity, regardless of manifest values, can be resized for multi-window.\n         * (0 = false, 1 = true)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT",
    "type" : "String",
    "comment" : "\n         * Whether to enable experimental freeform support for windows.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVELOPMENT_FORCE_DESKTOP_MODE_ON_EXTERNAL_DISPLAYS",
    "type" : "String",
    "comment" : "\n         * Whether to enable experimental desktop mode on secondary displays.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVELOPMENT_ENABLE_SIZECOMPAT_FREEFORM",
    "type" : "String",
    "comment" : "\n         * Whether to allow non-resizable apps to be freeform.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVELOPMENT_RENDER_SHADOWS_IN_COMPOSITOR",
    "type" : "String",
    "comment" : "\n         * If true, shadows drawn around the window will be rendered by the system compositor. If\n         * false, shadows will be drawn by the client by setting an elevation on the root view and\n         * the contents will be inset by the surface insets.\n         * (0 = false, 1 = true)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVELOPMENT_SETTINGS_ENABLED",
    "type" : "String",
    "comment" : "\n        * Whether user has enabled development settings.\n        ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_PROVISIONED",
    "type" : "String",
    "comment" : "\n        * Whether the device has been provisioned (0 = false, 1 = true).\n        * <p>On a multiuser device with a separate system user, the screen may be locked\n        * as soon as this is set to true and further activities cannot be launched on the\n        * system user unless they are marked to show over keyguard.\n        ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_PROVISIONING_MOBILE_DATA_ENABLED",
    "type" : "String",
    "comment" : "\n         * Indicates whether mobile data should be allowed while the device is being provisioned.\n         * This allows the provisioning process to turn off mobile data before the user\n         * has an opportunity to set things up, preventing other processes from burning\n         * precious bytes before wifi is setup.\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_SIZE_FORCED",
    "type" : "String",
    "comment" : "\n        * The saved value for WindowManagerService.setForcedDisplaySize().\n        * Two integers separated by a comma.  If unset, then use the real display size.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_SCALING_FORCE",
    "type" : "String",
    "comment" : "\n        * The saved value for WindowManagerService.setForcedDisplayScalingMode().\n        * 0 or unset if scaling is automatic, 1 if scaling is disabled.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "DOWNLOAD_MAX_BYTES_OVER_MOBILE",
    "type" : "String",
    "comment" : "\n        * The maximum size, in bytes, of a download that the download manager will transfer over\n        * a non-wifi connection.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "DOWNLOAD_RECOMMENDED_MAX_BYTES_OVER_MOBILE",
    "type" : "String",
    "comment" : "\n        * The recommended maximum size, in bytes, of a download that the download manager should\n        * transfer over a non-wifi connection. Over this size, the use will be warned, but will\n        * have the option to start the download over the mobile connection anyway.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "INSTALL_NON_MARKET_APPS",
    "type" : "String",
    "comment" : "\n        * @deprecated Use {@link android.provider.Settings.Secure#INSTALL_NON_MARKET_APPS} instead\n        ",
    "links" : [ "android.provider.Settings.Secure#INSTALL_NON_MARKET_APPS" ]
  }, {
    "name" : "HDMI_CONTROL_ENABLED",
    "type" : "String",
    "comment" : "\n        * Whether HDMI control shall be enabled. If disabled, no CEC/MHL command will be\n        * sent or processed. (0 = false, 1 = true)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "HDMI_CONTROL_VOLUME_CONTROL_ENABLED",
    "type" : "String",
    "comment" : "\n         * Controls whether volume control commands via HDMI CEC are enabled. (0 = false, 1 =\n         * true).\n         *\n         * <p>Effects on different device types:\n         * <table>\n         *     <tr><th>HDMI CEC device type</th><th>0: disabled</th><th>1: enabled</th></tr>\n         *     <tr>\n         *         <td>TV (type: 0)</td>\n         *         <td>Per CEC specification.</td>\n         *         <td>TV changes system volume. TV no longer reacts to incoming volume changes\n         *         via {@code <User Control Pressed>}. TV no longer handles {@code <Report Audio\n         *         Status>}.</td>\n         *     </tr>\n         *     <tr>\n         *         <td>Playback device (type: 4)</td>\n         *         <td>Device sends volume commands to TV/Audio system via {@code <User Control\n         *         Pressed>}</td>\n         *         <td>Device does not send volume commands via {@code <User Control Pressed>}.</td>\n         *     </tr>\n         *     <tr>\n         *         <td>Audio device (type: 5)</td>\n         *         <td>Full \"System Audio Control\" capabilities.</td>\n         *         <td>Audio device no longer reacts to incoming {@code <User Control Pressed>}\n         *         volume commands. Audio device no longer reports volume changes via {@code\n         *         <Report Audio Status>}.</td>\n         *     </tr>\n         * </table>\n         *\n         * <p> Due to the resulting behavior, usage on TV and Audio devices is discouraged.\n         *\n         * @hide\n         * @see android.hardware.hdmi.HdmiControlManager#setHdmiCecVolumeControlEnabled(boolean)\n         ",
    "links" : [ ]
  }, {
    "name" : "HDMI_SYSTEM_AUDIO_CONTROL_ENABLED",
    "type" : "String",
    "comment" : "\n        * Whether HDMI System Audio Control feature is enabled. If enabled, TV will try to turn on\n        * system audio mode if there's a connected CEC-enabled AV Receiver. Then audio stream will\n        * be played on AVR instead of TV spaeker. If disabled, the system audio mode will never be\n        * activated.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "HDMI_CEC_SWITCH_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether HDMI Routing Control feature is enabled. If enabled, the switch device will\n         * route to the correct input source on receiving Routing Control related messages. If\n         * disabled, you can only switch the input via controls on this device.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "HDMI_CONTROL_AUTO_WAKEUP_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether TV will automatically turn on upon reception of the CEC command\n         * &lt;Text View On&gt; or &lt;Image View On&gt;. (0 = false, 1 = true)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "HDMI_CONTROL_AUTO_DEVICE_OFF_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether TV will also turn off other CEC devices when it goes to standby mode.\n         * (0 = false, 1 = true)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_MEDIA_ON_QUICK_SETTINGS",
    "type" : "String",
    "comment" : "\n         * Whether or not media is shown automatically when bypassing as a heads up.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOCATION_BACKGROUND_THROTTLE_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n         * The interval in milliseconds at which location requests will be throttled when they are\n         * coming from the background.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOCATION_BACKGROUND_THROTTLE_PROXIMITY_ALERT_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n         * Most frequent location update interval in milliseconds that proximity alert is allowed\n         * to request.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOCATION_BACKGROUND_THROTTLE_PACKAGE_WHITELIST",
    "type" : "String",
    "comment" : "\n         * Packages that are whitelisted for background throttling (throttling will not be applied).\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOCATION_IGNORE_SETTINGS_PACKAGE_WHITELIST",
    "type" : "String",
    "comment" : "\n         * Packages that are whitelisted for ignoring location settings (may retrieve location even\n         * when user location settings are off), for emergency purposes.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "MHL_INPUT_SWITCHING_ENABLED",
    "type" : "String",
    "comment" : "\n        * Whether TV will switch to MHL port when a mobile device is plugged in.\n        * (0 = false, 1 = true)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "MHL_POWER_CHARGE_ENABLED",
    "type" : "String",
    "comment" : "\n        * Whether TV will charge the mobile device connected at MHL port. (0 = false, 1 = true)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "MOBILE_DATA",
    "type" : "String",
    "comment" : "\n        * Whether mobile data connections are allowed by the user.  See\n        * ConnectivityManager for more info.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "MOBILE_DATA_ALWAYS_ON",
    "type" : "String",
    "comment" : "\n        * Whether the mobile data connection should remain active even when higher\n        * priority networks like WiFi are active, to help make network switching faster.\n        *\n        * See ConnectivityService for more info.\n        *\n        * (0 = disabled, 1 = enabled)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_ALWAYS_REQUESTED",
    "type" : "String",
    "comment" : "\n         * Whether the wifi data connection should remain active even when higher\n         * priority networks like Ethernet are active, to keep both networks.\n         * In the case where higher priority networks are connected, wifi will be\n         * unused unless an application explicitly requests to use it.\n         *\n         * See ConnectivityService for more info.\n         *\n         * (0 = disabled, 1 = enabled)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CONNECTIVITY_METRICS_BUFFER_SIZE",
    "type" : "String",
    "comment" : "\n         * Size of the event buffer for IP connectivity metrics.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_ENABLED",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_POLL_INTERVAL",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_TIME_CACHE_MAX_AGE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_GLOBAL_ALERT_BYTES",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_SAMPLE_ENABLED",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_AUGMENT_ENABLED",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_COMBINE_SUBTYPE_ENABLED",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_DEV_BUCKET_DURATION",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_DEV_PERSIST_BYTES",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_DEV_ROTATE_AGE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_DEV_DELETE_AGE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_UID_BUCKET_DURATION",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_UID_PERSIST_BYTES",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_UID_ROTATE_AGE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_UID_DELETE_AGE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_UID_TAG_BUCKET_DURATION",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_UID_TAG_PERSIST_BYTES",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_UID_TAG_ROTATE_AGE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETSTATS_UID_TAG_DELETE_AGE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETPOLICY_QUOTA_ENABLED",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETPOLICY_QUOTA_UNLIMITED",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETPOLICY_QUOTA_LIMITED",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETPOLICY_QUOTA_FRAC_JOBS",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETPOLICY_QUOTA_FRAC_MULTIPATH",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETPOLICY_OVERRIDE_ENABLED",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_PREFERENCE",
    "type" : "String",
    "comment" : "\n        * User preference for which network(s) should be used. Only the\n        * connectivity service should touch this.\n        ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_SCORER_APP",
    "type" : "String",
    "comment" : "\n        * Which package name to use for network scoring. If null, or if the package is not a valid\n        * scorer app, external network scores will neither be requested nor accepted.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "NIGHT_DISPLAY_FORCED_AUTO_MODE_AVAILABLE",
    "type" : "String",
    "comment" : "\n         * Whether night display forced auto mode is available.\n         * 0 = unavailable, 1 = available.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NITZ_UPDATE_DIFF",
    "type" : "String",
    "comment" : "\n        * If the NITZ_UPDATE_DIFF time is exceeded then an automatic adjustment\n        * to SystemClock will be allowed even if NITZ_UPDATE_SPACING has not been\n        * exceeded.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "NITZ_UPDATE_SPACING",
    "type" : "String",
    "comment" : "\n        * The length of time in milli-seconds that automatic small adjustments to\n        * SystemClock are ignored if NITZ_UPDATE_DIFF is not exceeded.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "NTP_SERVER",
    "type" : "String",
    "comment" : " Preferred NTP server. {@hide} ",
    "links" : [ ]
  }, {
    "name" : "NTP_TIMEOUT",
    "type" : "String",
    "comment" : " Timeout in milliseconds to wait for NTP server. {@hide} ",
    "links" : [ ]
  }, {
    "name" : "STORAGE_BENCHMARK_INTERVAL",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "SETTINGS_USE_PSD_API",
    "type" : "String",
    "comment" : "\n         * Whether or not Settings should enable psd API.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "SETTINGS_USE_EXTERNAL_PROVIDER_API",
    "type" : "String",
    "comment" : "\n         * Whether or not Settings should enable external provider API.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "DNS_RESOLVER_SAMPLE_VALIDITY_SECONDS",
    "type" : "String",
    "comment" : "\n        * Sample validity in seconds to configure for the system DNS resolver.\n        * {@hide}\n        ",
    "links" : [ ]
  }, {
    "name" : "DNS_RESOLVER_SUCCESS_THRESHOLD_PERCENT",
    "type" : "String",
    "comment" : "\n        * Success threshold in percent for use with the system DNS resolver.\n        * {@hide}\n        ",
    "links" : [ ]
  }, {
    "name" : "DNS_RESOLVER_MIN_SAMPLES",
    "type" : "String",
    "comment" : "\n        * Minimum number of samples needed for statistics to be considered meaningful in the\n        * system DNS resolver.\n        * {@hide}\n        ",
    "links" : [ ]
  }, {
    "name" : "DNS_RESOLVER_MAX_SAMPLES",
    "type" : "String",
    "comment" : "\n        * Maximum number taken into account for statistics purposes in the system DNS resolver.\n        * {@hide}\n        ",
    "links" : [ ]
  }, {
    "name" : "OTA_DISABLE_AUTOMATIC_UPDATE",
    "type" : "String",
    "comment" : "\n        * Whether to disable the automatic scheduling of system updates.\n        * 1 = system updates won't be automatically scheduled (will always\n        * present notification instead).\n        * 0 = system updates will be automatically scheduled. (default)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "PACKAGE_VERIFIER_TIMEOUT",
    "type" : "String",
    "comment" : " Timeout for package verification.\n        * @hide ",
    "links" : [ ]
  }, {
    "name" : "APP_INTEGRITY_VERIFICATION_TIMEOUT",
    "type" : "String",
    "comment" : " Timeout for app integrity verification.\n         * @hide ",
    "links" : [ ]
  }, {
    "name" : "PACKAGE_VERIFIER_DEFAULT_RESPONSE",
    "type" : "String",
    "comment" : " Default response code for package verification.\n        * @hide ",
    "links" : [ ]
  }, {
    "name" : "PACKAGE_VERIFIER_SETTING_VISIBLE",
    "type" : "String",
    "comment" : "\n        * Show package verification setting in the Settings app.\n        * 1 = show (default)\n        * 0 = hide\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "PACKAGE_VERIFIER_INCLUDE_ADB",
    "type" : "String",
    "comment" : "\n        * Run package verification on apps installed through ADB/ADT/USB\n        * 1 = perform package verification on ADB installs (default)\n        * 0 = bypass package verification on ADB installs\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "INTEGRITY_CHECK_INCLUDES_RULE_PROVIDER",
    "type" : "String",
    "comment" : "\n         * Run integrity checks for integrity rule providers.\n         * 0 = bypass integrity verification on installs from rule providers (default)\n         * 1 = perform integrity verification on installs from rule providers\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "FSTRIM_MANDATORY_INTERVAL",
    "type" : "String",
    "comment" : "\n        * Time since last fstrim (milliseconds) after which we force one to happen\n        * during device startup.  If unset, the default is 3 days.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "PDP_WATCHDOG_POLL_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds at which to check packet counts on the\n        * mobile data interface when screen is on, to detect possible data\n        * connection problems.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "PDP_WATCHDOG_LONG_POLL_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds at which to check packet counts on the\n        * mobile data interface when screen is off, to detect possible data\n        * connection problems.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds at which to check packet counts on the\n        * mobile data interface after {@link #PDP_WATCHDOG_TRIGGER_PACKET_COUNT}\n        * outgoing packets has been reached without incoming packets.\n        * @hide\n        ",
    "links" : [ "#PDP_WATCHDOG_TRIGGER_PACKET_COUNT" ]
  }, {
    "name" : "PDP_WATCHDOG_TRIGGER_PACKET_COUNT",
    "type" : "String",
    "comment" : "\n        * The number of outgoing packets sent without seeing an incoming packet\n        * that triggers a countdown (of {@link #PDP_WATCHDOG_ERROR_POLL_COUNT}\n        * device is logged to the event log\n        * @hide\n        ",
    "links" : [ "#PDP_WATCHDOG_ERROR_POLL_COUNT" ]
  }, {
    "name" : "PDP_WATCHDOG_ERROR_POLL_COUNT",
    "type" : "String",
    "comment" : "\n        * The number of polls to perform (at {@link #PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS})\n        * after hitting {@link #PDP_WATCHDOG_TRIGGER_PACKET_COUNT} before\n        * attempting data connection recovery.\n        * @hide\n        ",
    "links" : [ "#PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS", "#PDP_WATCHDOG_TRIGGER_PACKET_COUNT" ]
  }, {
    "name" : "PDP_WATCHDOG_MAX_PDP_RESET_FAIL_COUNT",
    "type" : "String",
    "comment" : "\n        * The number of failed PDP reset attempts before moving to something more\n        * drastic: re-registering to the network.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SETUP_PREPAID_DATA_SERVICE_URL",
    "type" : "String",
    "comment" : "\n        * URL to open browser on to allow user to manage a prepay account\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SETUP_PREPAID_DETECTION_TARGET_URL",
    "type" : "String",
    "comment" : "\n        * URL to attempt a GET on to see if this is a prepay device\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SETUP_PREPAID_DETECTION_REDIR_HOST",
    "type" : "String",
    "comment" : "\n        * Host to check for a redirect to after an attempt to GET\n        * SETUP_PREPAID_DETECTION_TARGET_URL. (If we redirected there,\n        * this is a prepaid device with zero balance.)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SMS_OUTGOING_CHECK_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds at which to check the number of SMS sent out without asking\n        * for use permit, to limit the un-authorized SMS usage.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SMS_OUTGOING_CHECK_MAX_COUNT",
    "type" : "String",
    "comment" : "\n        * The number of outgoing SMS sent without asking for user permit (of {@link\n        * #SMS_OUTGOING_CHECK_INTERVAL_MS}\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SMS_SHORT_CODE_CONFIRMATION",
    "type" : "String",
    "comment" : "\n        * Used to disable SMS short code confirmation - defaults to true.\n        * True indcates we will do the check, etc.  Set to false to disable.\n        * @see com.android.internal.telephony.SmsUsageMonitor\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SMS_SHORT_CODE_RULE",
    "type" : "String",
    "comment" : "\n         * Used to select which country we use to determine premium sms codes.\n         * One of com.android.internal.telephony.SMSDispatcher.PREMIUM_RULE_USE_SIM,\n         * com.android.internal.telephony.SMSDispatcher.PREMIUM_RULE_USE_NETWORK,\n         * or com.android.internal.telephony.SMSDispatcher.PREMIUM_RULE_USE_BOTH.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TCP_DEFAULT_INIT_RWND",
    "type" : "String",
    "comment" : "\n         * Used to select TCP's default initial receiver window size in segments - defaults to a\n         * build config value.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TETHER_SUPPORTED",
    "type" : "String",
    "comment" : "\n         * Used to disable Tethering on a device - defaults to true.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TETHER_DUN_REQUIRED",
    "type" : "String",
    "comment" : "\n         * Used to require DUN APN on the device or not - defaults to a build config value\n         * which defaults to false.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TETHER_DUN_APN",
    "type" : "String",
    "comment" : "\n         * Used to hold a gservices-provisioned apn value for DUN.  If set, or the\n         * corresponding build config values are set it will override the APN DB\n         * values.\n         * Consists of a comma separated list of strings:\n         * \"name,apn,proxy,port,username,password,server,mmsc,mmsproxy,mmsport,mcc,mnc,auth,type\"\n         * note that empty fields can be omitted: \"name,apn,,,,,,,,,310,260,,DUN\"\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TETHER_OFFLOAD_DISABLED",
    "type" : "String",
    "comment" : "\n         * Used to disable trying to talk to any available tethering offload HAL.\n         *\n         * Integer values are interpreted as boolean, and the absence of an explicit setting\n         * is interpreted as |false|.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TETHER_ENABLE_LEGACY_DHCP_SERVER",
    "type" : "String",
    "comment" : "\n         * Use the old dnsmasq DHCP server for tethering instead of the framework implementation.\n         *\n         * Integer values are interpreted as boolean, and the absence of an explicit setting\n         * is interpreted as |false|.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CARRIER_APP_WHITELIST",
    "type" : "String",
    "comment" : "\n         * List of certificate (hex string representation of the application's certificate - SHA-1\n         * or SHA-256) and carrier app package pairs which are whitelisted to prompt the user for\n         * install when a sim card with matching UICC carrier privilege rules is inserted.  The\n         * certificate is used as a key, so the certificate encoding here must be the same as the\n         * certificate encoding used on the SIM.\n         *\n         * The value is \"cert1:package1;cert2:package2;...\"\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CARRIER_APP_NAMES",
    "type" : "String",
    "comment" : "\n         * Map of package name to application names. The application names cannot and will not be\n         * localized. App names may not contain colons or semicolons.\n         *\n         * The value is \"packageName1:appName1;packageName2:appName2;...\"\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "USB_MASS_STORAGE_ENABLED",
    "type" : "String",
    "comment" : "\n        * USB Mass Storage Enabled\n        ",
    "links" : [ ]
  }, {
    "name" : "USE_GOOGLE_MAIL",
    "type" : "String",
    "comment" : "\n        * If this setting is set (to anything), then all references\n        * to Gmail on the device must change to Google Mail.\n        ",
    "links" : [ ]
  }, {
    "name" : "USER_SWITCHER_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not switching/creating users is enabled by user.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WEBVIEW_DATA_REDUCTION_PROXY_KEY",
    "type" : "String",
    "comment" : "\n         * Webview Data reduction proxy key.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WEBVIEW_FALLBACK_LOGIC_ENABLED",
    "type" : "String",
    "comment" : "\n        * Whether or not the WebView fallback mechanism should be enabled.\n        * 0=disabled, 1=enabled.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WEBVIEW_PROVIDER",
    "type" : "String",
    "comment" : "\n        * Name of the package used as WebView provider (if unset the provider is instead determined\n        * by the system).\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WEBVIEW_MULTIPROCESS",
    "type" : "String",
    "comment" : "\n        * Developer setting to enable WebView multiprocess rendering.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_SWITCH_NOTIFICATION_DAILY_LIMIT",
    "type" : "String",
    "comment" : "\n        * The maximum number of notifications shown in 24 hours when switching networks.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_SWITCH_NOTIFICATION_RATE_LIMIT_MILLIS",
    "type" : "String",
    "comment" : "\n        * The minimum time in milliseconds between notifications when switching networks.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_AVOID_BAD_WIFI",
    "type" : "String",
    "comment" : "\n        * Whether to automatically switch away from wifi networks that lose Internet access.\n        * Only meaningful if config_networkAvoidBadWifi is set to 0, otherwise the system always\n        * avoids such networks. Valid values are:\n        *\n        * 0: Don't avoid bad wifi, don't prompt the user. Get stuck on bad wifi like it's 2013.\n        * null: Ask the user whether to switch away from bad wifi.\n        * 1: Avoid bad wifi.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_METERED_MULTIPATH_PREFERENCE",
    "type" : "String",
    "comment" : "\n        * User setting for ConnectivityManager.getMeteredMultipathPreference(). This value may be\n        * overridden by the system based on device or application state. If null, the value\n        * specified by config_networkMeteredMultipathPreference is used.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_DEFAULT_DAILY_MULTIPATH_QUOTA_BYTES",
    "type" : "String",
    "comment" : "\n         * Default daily multipath budget used by ConnectivityManager.getMultipathPreference()\n         * on metered networks. This default quota is only used if quota could not be determined\n         * from data plan or data limit/warning set by the user.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_WATCHLIST_LAST_REPORT_TIME",
    "type" : "String",
    "comment" : "\n         * Network watchlist last report time.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_BADGING_THRESHOLDS",
    "type" : "String",
    "comment" : "\n        * The thresholds of the wifi throughput badging (SD, HD etc.) as a comma-delimited list of\n        * colon-delimited key-value pairs. The key is the badging enum value defined in\n        * android.net.ScoredNetwork and the value is the minimum sustained network throughput in\n        * kbps required for the badge. For example: \"10:3000,20:5000,30:25000\"\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_DISPLAY_ON",
    "type" : "String",
    "comment" : "\n        * Whether Wifi display is enabled/disabled\n        * 0=disabled. 1=enabled.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_DISPLAY_CERTIFICATION_ON",
    "type" : "String",
    "comment" : "\n        * Whether Wifi display certification mode is enabled/disabled\n        * 0=disabled. 1=enabled.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_DISPLAY_WPS_CONFIG",
    "type" : "String",
    "comment" : "\n        * WPS Configuration method used by Wifi display, this setting only\n        * takes effect when WIFI_DISPLAY_CERTIFICATION_ON is 1 (enabled).\n        *\n        * Possible values are:\n        *\n        * WpsInfo.INVALID: use default WPS method chosen by framework\n        * WpsInfo.PBC    : use Push button\n        * WpsInfo.KEYPAD : use Keypad\n        * WpsInfo.DISPLAY: use Display\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON",
    "type" : "String",
    "comment" : "\n        * Whether to notify the user of open networks.\n        * <p>\n        * If not connected and the scan results have an open network, we will\n        * put this notification up. If we attempt to connect to a network or\n        * the open network(s) disappear, we remove the notification. When we\n        * show the notification, we will not show it again for\n        * {@link android.provider.Settings.Secure#WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY} time.\n        *\n        * @deprecated This feature is no longer controlled by this setting in\n        * {@link android.os.Build.VERSION_CODES#O}.\n        ",
    "links" : [ "android.provider.Settings.Secure#WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY", "android.os.Build.VERSION_CODES#O" ]
  }, {
    "name" : "WIMAX_NETWORKS_AVAILABLE_NOTIFICATION_ON",
    "type" : "String",
    "comment" : "\n        * {@hide}\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY",
    "type" : "String",
    "comment" : "\n        * Delay (in seconds) before repeating the Wi-Fi networks available notification.\n        * Connecting to a network will reset the timer.\n        * @deprecated This is no longer used or set by the platform.\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_COUNTRY_CODE",
    "type" : "String",
    "comment" : "\n        * 802.11 country code in ISO 3166 format\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_FRAMEWORK_SCAN_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds to issue wake up scans when wifi needs\n        * to connect. This is necessary to connect to an access point when\n        * device is on the move and the screen is off.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_IDLE_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds after which Wi-Fi is considered idle.\n        * When idle, it is possible for the device to be switched from Wi-Fi to\n        * the mobile data network.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_NUM_OPEN_NETWORKS_KEPT",
    "type" : "String",
    "comment" : "\n        * When the number of open networks exceeds this number, the\n        * least-recently-used excess networks will be removed.\n        * @deprecated This is no longer used or set by the platform.\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_ON",
    "type" : "String",
    "comment" : "\n        * Whether the Wi-Fi should be on.  Only the Wi-Fi service should touch this.\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SCAN_ALWAYS_AVAILABLE",
    "type" : "String",
    "comment" : "\n        * Setting to allow scans to be enabled even wifi is turned off for connectivity.\n        * @hide\n        * @deprecated To be removed. Use {@link WifiManager#setScanAlwaysAvailable(boolean)} for\n        * setting the value and {@link WifiManager#isScanAlwaysAvailable()} for query.\n        ",
    "links" : [ "WifiManager#setScanAlwaysAvailable", "WifiManager#isScanAlwaysAvailable" ]
  }, {
    "name" : "WIFI_P2P_PENDING_FACTORY_RESET",
    "type" : "String",
    "comment" : "\n         * Indicate whether factory reset request is pending.\n         *\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         * @deprecated To be removed.\n         ",
    "links" : [ ]
  }, {
    "name" : "SOFT_AP_TIMEOUT_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether soft AP will shut down after a timeout period when no devices are connected.\n         *\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         * @deprecated To be removed. Use {@link SoftApConfiguration.Builder#\n         * setAutoShutdownEnabled(boolean)} for setting the value and {@link SoftApConfiguration#\n         * isAutoShutdownEnabled()} for query.\n         ",
    "links" : [ "SoftApConfiguration.Builder#", "SoftApConfiguration#" ]
  }, {
    "name" : "WIFI_WAKEUP_ENABLED",
    "type" : "String",
    "comment" : "\n         * Value to specify if Wi-Fi Wakeup feature is enabled.\n         *\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         * @deprecated Use {@link WifiManager#setAutoWakeupEnabled(boolean)} for setting the value\n         * and {@link WifiManager#isAutoWakeupEnabled()} for query.\n         ",
    "links" : [ "WifiManager#setAutoWakeupEnabled", "WifiManager#isAutoWakeupEnabled" ]
  }, {
    "name" : "WIFI_MIGRATION_COMPLETED",
    "type" : "String",
    "comment" : "\n         * Value to specify if wifi settings migration is complete or not.\n         * Note: This should only be used from within {@link android.net.wifi.WifiMigration} class.\n         *\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         ",
    "links" : [ "android.net.wifi.WifiMigration" ]
  }, {
    "name" : "NETWORK_SCORING_UI_ENABLED",
    "type" : "String",
    "comment" : "\n         * Value to specify whether network quality scores and badging should be shown in the UI.\n         *\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SPEED_LABEL_CACHE_EVICTION_AGE_MILLIS",
    "type" : "String",
    "comment" : "\n         * Value to specify how long in milliseconds to retain seen score cache curves to be used\n         * when generating SSID only bases score curves.\n         *\n         * Type: long\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_RECOMMENDATIONS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Value to specify if network recommendations from\n         * {@link com.android.server.NetworkScoreService} are enabled.\n         *\n         * Type: int\n         * Valid values:\n         *   -1 = Forced off\n         *    0 = Disabled\n         *    1 = Enabled\n         *\n         * Most readers of this setting should simply check if value == 1 to determined the\n         * enabled state.\n         * @hide\n         * @deprecated To be removed.\n         ",
    "links" : [ "com.android.server.NetworkScoreService" ]
  }, {
    "name" : "NETWORK_RECOMMENDATIONS_PACKAGE",
    "type" : "String",
    "comment" : "\n         * Which package name to use for network recommendations. If null, network recommendations\n         * will neither be requested nor accepted.\n         *\n         * Use {@link NetworkScoreManager#getActiveScorerPackage()} to read this value and\n         * {@link NetworkScoreManager#setActiveScorer(String)} to write it.\n         *\n         * Type: string - package name\n         * @hide\n         ",
    "links" : [ "NetworkScoreManager#getActiveScorerPackage", "NetworkScoreManager#setActiveScorer" ]
  }, {
    "name" : "USE_OPEN_WIFI_PACKAGE",
    "type" : "String",
    "comment" : "\n         * The package name of the application that connect and secures high quality open wifi\n         * networks automatically.\n         *\n         * Type: string package name or null if the feature is either not provided or disabled.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "RECOMMENDED_NETWORK_EVALUATOR_CACHE_EXPIRY_MS",
    "type" : "String",
    "comment" : "\n         * The expiration time in milliseconds for the {@link android.net.WifiKey} request cache in\n         * {@link com.android.server.wifi.RecommendedNetworkEvaluator}.\n         *\n         * Type: long\n         * @hide\n         ",
    "links" : [ "android.net.WifiKey", "com.android.server.wifi.RecommendedNetworkEvaluator" ]
  }, {
    "name" : "WIFI_SCAN_THROTTLE_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether wifi scan throttle is enabled or not.\n         *\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         * @deprecated Use {@link WifiManager#setScanThrottleEnabled(boolean)} for setting the value\n         * and {@link WifiManager#isScanThrottleEnabled()} for query.\n         ",
    "links" : [ "WifiManager#setScanThrottleEnabled", "WifiManager#isScanThrottleEnabled" ]
  }, {
    "name" : "BLE_SCAN_ALWAYS_AVAILABLE",
    "type" : "String",
    "comment" : "\n        * Settings to allow BLE scans to be enabled even when Bluetooth is turned off for\n        * connectivity.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "BLE_SCAN_LOW_POWER_WINDOW_MS",
    "type" : "String",
    "comment" : "\n         * The length in milliseconds of a BLE scan window in a low-power scan mode.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLE_SCAN_BALANCED_WINDOW_MS",
    "type" : "String",
    "comment" : "\n         * The length in milliseconds of a BLE scan window in a balanced scan mode.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLE_SCAN_LOW_LATENCY_WINDOW_MS",
    "type" : "String",
    "comment" : "\n         * The length in milliseconds of a BLE scan window in a low-latency scan mode.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLE_SCAN_LOW_POWER_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n         * The length in milliseconds of a BLE scan interval in a low-power scan mode.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLE_SCAN_BALANCED_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n         * The length in milliseconds of a BLE scan interval in a balanced scan mode.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLE_SCAN_LOW_LATENCY_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n         * The length in milliseconds of a BLE scan interval in a low-latency scan mode.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLE_SCAN_BACKGROUND_MODE",
    "type" : "String",
    "comment" : "\n         * The mode that BLE scanning clients will be moved to when in the background.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SUPPLICANT_SCAN_INTERVAL_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds to scan as used by the wifi supplicant\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_ENHANCED_AUTO_JOIN",
    "type" : "String",
    "comment" : "\n         * whether frameworks handles wifi auto-join\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_NETWORK_SHOW_RSSI",
    "type" : "String",
    "comment" : "\n         * whether settings show RSSI\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SCAN_INTERVAL_WHEN_P2P_CONNECTED_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds to scan at supplicant when p2p is connected\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_WATCHDOG_ON",
    "type" : "String",
    "comment" : "\n        * Whether the Wi-Fi watchdog is enabled.\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_WATCHDOG_POOR_NETWORK_TEST_ENABLED",
    "type" : "String",
    "comment" : "\n        * Setting to turn off poor network avoidance on Wi-Fi. Feature is enabled by default and\n        * the setting needs to be set to 0 to disable it.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_VERBOSE_LOGGING_ENABLED",
    "type" : "String",
    "comment" : "\n        * Setting to enable verbose logging in Wi-Fi; disabled by default, and setting to 1\n        * will enable it. In the future, additional values may be supported.\n        * @hide\n        * @deprecated Use {@link WifiManager#setVerboseLoggingEnabled(boolean)} for setting the\n        * value and {@link WifiManager#isVerboseLoggingEnabled()} for query.\n        ",
    "links" : [ "WifiManager#setVerboseLoggingEnabled", "WifiManager#isVerboseLoggingEnabled" ]
  }, {
    "name" : "WIFI_CONNECTED_MAC_RANDOMIZATION_ENABLED",
    "type" : "String",
    "comment" : "\n         * Setting to enable connected MAC randomization in Wi-Fi; disabled by default, and\n         * setting to 1 will enable it. In the future, additional values may be supported.\n         * @deprecated MAC randomization is now a per-network setting\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_SCORE_PARAMS",
    "type" : "String",
    "comment" : "\n         * Parameters to adjust the performance of framework wifi scoring methods.\n         * <p>\n         * Encoded as a comma-separated key=value list, for example:\n         *   \"rssi5=-80:-77:-70:-57,rssi2=-83:-80:-73:-60,horizon=15\"\n         * This is intended for experimenting with new parameter values,\n         * and is normally unset or empty. The example does not include all\n         * parameters that may be honored.\n         * Default values are provided by code or device configurations.\n         * Errors in the parameters will cause the entire setting to be ignored.\n         * @hide\n         * @deprecated This is no longer used or set by the platform.\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_MAX_DHCP_RETRY_COUNT",
    "type" : "String",
    "comment" : "\n        * The maximum number of times we will retry a connection to an access\n        * point for which we have failed in acquiring an IP address from DHCP.\n        * A value of N means that we will make N+1 connection attempts in all.\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS",
    "type" : "String",
    "comment" : "\n        * Maximum amount of time in milliseconds to hold a wakelock while waiting for mobile\n        * data connectivity to be established after a disconnect from Wi-Fi.\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_DEVICE_OWNER_CONFIGS_LOCKDOWN",
    "type" : "String",
    "comment" : "\n        * This setting controls whether WiFi configurations created by a Device Owner app\n        * should be locked down (that is, be editable or removable only by the Device Owner App,\n        * not even by Settings app).\n        * This setting takes integer values. Non-zero values mean DO created configurations\n        * are locked down. Value of zero means they are not. Default value in the absence of\n        * actual value to this setting is 0.\n        ",
    "links" : [ ]
  }, {
    "name" : "WIFI_FREQUENCY_BAND",
    "type" : "String",
    "comment" : "\n        * The operational wifi frequency band\n        * Set to one of {@link WifiManager#WIFI_FREQUENCY_BAND_AUTO},\n        * {@link WifiManager#WIFI_FREQUENCY_BAND_5GHZ} or\n        * {@link WifiManager#WIFI_FREQUENCY_BAND_2GHZ}\n        *\n        * @hide\n        ",
    "links" : [ "WifiManager#WIFI_FREQUENCY_BAND_AUTO", "WifiManager#WIFI_FREQUENCY_BAND_5GHZ", "WifiManager#WIFI_FREQUENCY_BAND_2GHZ" ]
  }, {
    "name" : "WIFI_P2P_DEVICE_NAME",
    "type" : "String",
    "comment" : "\n        * The Wi-Fi peer-to-peer device name\n        * @hide\n        * @deprecated Use {@link WifiP2pManager#setDeviceName(WifiP2pManager.Channel, String,\n        * WifiP2pManager.ActionListener)} for setting the value and\n        * {@link android.net.wifi.p2p.WifiP2pDevice#deviceName} for query.\n        ",
    "links" : [ "WifiP2pManager#setDeviceName", "android.net.wifi.p2p.WifiP2pDevice#deviceName" ]
  }, {
    "name" : "WIFI_EPHEMERAL_OUT_OF_RANGE_TIMEOUT_MS",
    "type" : "String",
    "comment" : "\n        * Timeout for ephemeral networks when all known BSSIDs go out of range. We will disconnect\n        * from an ephemeral network if there is no BSSID for that network with a non-null score that\n        * has been seen in this time period.\n        *\n        * If this is less than or equal to zero, we use a more conservative behavior and only check\n        * for a non-null score from the currently connected or target BSSID.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "DATA_STALL_ALARM_NON_AGGRESSIVE_DELAY_IN_MS",
    "type" : "String",
    "comment" : "\n        * The number of milliseconds to delay when checking for data stalls during\n        * non-aggressive detection. (screen is turned off.)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "DATA_STALL_ALARM_AGGRESSIVE_DELAY_IN_MS",
    "type" : "String",
    "comment" : "\n        * The number of milliseconds to delay when checking for data stalls during\n        * aggressive detection. (screen on or suspected data stall)\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "PROVISIONING_APN_ALARM_DELAY_IN_MS",
    "type" : "String",
    "comment" : "\n        * The number of milliseconds to allow the provisioning apn to remain active\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "GPRS_REGISTER_CHECK_PERIOD_MS",
    "type" : "String",
    "comment" : "\n        * The interval in milliseconds at which to check gprs registration\n        * after the first registration mismatch of gprs and voice service,\n        * to detect possible data network registration problems.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "WTF_IS_FATAL",
    "type" : "String",
    "comment" : "\n        * Nonzero causes Log.wtf() to crash.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "MODE_RINGER",
    "type" : "String",
    "comment" : "\n        * Ringer mode. This is used internally, changing this value will not\n        * change the ringer mode. See AudioManager.\n        ",
    "links" : [ ]
  }, {
    "name" : "ENHANCED_CONNECTIVITY_ENABLED",
    "type" : "String",
    "comment" : "\n         * Specifies whether Enhanced Connectivity is enabled or not. This setting allows the\n         * Connectivity Thermal Power Manager to actively help the device to save power in 5G\n         * scenarios\n         * Type: int 1 is enabled, 0 is disabled\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "OVERLAY_DISPLAY_DEVICES",
    "type" : "String",
    "comment" : "\n         * Overlay display devices setting.\n         * The associated value is a specially formatted string that describes the\n         * size and density of simulated secondary display devices.\n         * <p>\n         * Format:\n         * <pre>\n         * [display1];[display2];...\n         * </pre>\n         * with each display specified as:\n         * <pre>\n         * [mode1]|[mode2]|...,[flag1],[flag2],...\n         * </pre>\n         * with each mode specified as:\n         * <pre>\n         * [width]x[height]/[densityDpi]\n         * </pre>\n         * Supported flags:\n         * <ul>\n         * <li><pre>secure</pre>: creates a secure display</li>\n         * <li><pre>own_content_only</pre>: only shows this display's own content</li>\n         * <li><pre>should_show_system_decorations</pre>: supports system decorations</li>\n         * </ul>\n         * </p><p>\n         * Example:\n         * <ul>\n         * <li><code>1280x720/213</code>: make one overlay that is 1280x720 at 213dpi.</li>\n         * <li><code>1920x1080/320,secure;1280x720/213</code>: make two overlays, the first at\n         * 1080p and secure; the second at 720p.</li>\n         * <li><code>1920x1080/320|3840x2160/640</code>: make one overlay that is 1920x1080 at\n         * 213dpi by default, but can also be upscaled to 3840x2160 at 640dpi by the system if the\n         * display device allows.</li>\n         * <li>If the value is empty, then no overlay display devices are created.</li>\n         * </ul></p>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BATTERY_DISCHARGE_DURATION_THRESHOLD",
    "type" : "String",
    "comment" : "\n         * Threshold values for the duration and level of a discharge cycle,\n         * under which we log discharge cycle info.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BATTERY_DISCHARGE_THRESHOLD",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SEND_ACTION_APP_ERROR",
    "type" : "String",
    "comment" : "\n         * Flag for allowing ActivityManagerService to send ACTION_APP_ERROR\n         * intents on application crashes and ANRs. If this is disabled, the\n         * crash/ANR dialog will never display the \"Report\" button.\n         * <p>\n         * Type: int (0 = disallow, 1 = allow)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DROPBOX_AGE_SECONDS",
    "type" : "String",
    "comment" : "\n         * Maximum age of entries kept by {@link DropBoxManager}.\n         *\n         * @hide\n         ",
    "links" : [ "DropBoxManager" ]
  }, {
    "name" : "DROPBOX_MAX_FILES",
    "type" : "String",
    "comment" : "\n         * Maximum number of entry files which {@link DropBoxManager} will keep\n         * around.\n         *\n         * @hide\n         ",
    "links" : [ "DropBoxManager" ]
  }, {
    "name" : "DROPBOX_QUOTA_KB",
    "type" : "String",
    "comment" : "\n         * Maximum amount of disk space used by {@link DropBoxManager} no matter\n         * what.\n         *\n         * @hide\n         ",
    "links" : [ "DropBoxManager" ]
  }, {
    "name" : "DROPBOX_QUOTA_PERCENT",
    "type" : "String",
    "comment" : "\n         * Percent of free disk (excluding reserve) which {@link DropBoxManager}\n         * will use.\n         *\n         * @hide\n         ",
    "links" : [ "DropBoxManager" ]
  }, {
    "name" : "DROPBOX_RESERVE_PERCENT",
    "type" : "String",
    "comment" : "\n         * Percent of total disk which {@link DropBoxManager} will never dip\n         * into.\n         *\n         * @hide\n         ",
    "links" : [ "DropBoxManager" ]
  }, {
    "name" : "DROPBOX_TAG_PREFIX",
    "type" : "String",
    "comment" : "\n         * Prefix for per-tag dropbox disable/enable settings.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ERROR_LOGCAT_PREFIX",
    "type" : "String",
    "comment" : "\n         * Lines of logcat to include with system crash/ANR/etc. reports, as a\n         * prefix of the dropbox tag of the report type. For example,\n         * \"logcat_for_system_server_anr\" controls the lines of logcat captured\n         * with system server ANR reports. 0 to disable.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "MAX_ERROR_BYTES_PREFIX",
    "type" : "String",
    "comment" : "\n         * Maximum number of bytes of a system crash/ANR/etc. report that\n         * ActivityManagerService should send to DropBox, as a prefix of the\n         * dropbox tag of the report type. For example,\n         * \"max_error_bytes_for_system_server_anr\" controls the maximum\n         * number of bytes captured with system server ANR reports.\n         * <p>\n         * Type: int (max size in bytes)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SYS_FREE_STORAGE_LOG_INTERVAL",
    "type" : "String",
    "comment" : "\n         * The interval in minutes after which the amount of free storage left\n         * on the device is logged to the event log\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DISK_FREE_CHANGE_REPORTING_THRESHOLD",
    "type" : "String",
    "comment" : "\n         * Threshold for the amount of change in disk free space required to\n         * report the amount of free space. Used to prevent spamming the logs\n         * when the disk free space isn't changing frequently.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SYS_STORAGE_THRESHOLD_PERCENTAGE",
    "type" : "String",
    "comment" : "\n         * Minimum percentage of free storage on the device that is used to\n         * determine if the device is running low on storage. The default is 10.\n         * <p>\n         * Say this value is set to 10, the device is considered running low on\n         * storage if 90% or more of the device storage is filled up.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SYS_STORAGE_THRESHOLD_MAX_BYTES",
    "type" : "String",
    "comment" : "\n         * Maximum byte size of the low storage threshold. This is to ensure\n         * that {@link #SYS_STORAGE_THRESHOLD_PERCENTAGE} does not result in an\n         * overly large threshold for large storage devices. Currently this must\n         * be less than 2GB. This default is 500MB.\n         *\n         * @hide\n         ",
    "links" : [ "#SYS_STORAGE_THRESHOLD_PERCENTAGE" ]
  }, {
    "name" : "SYS_STORAGE_FULL_THRESHOLD_BYTES",
    "type" : "String",
    "comment" : "\n         * Minimum bytes of free storage on the device before the data partition\n         * is considered full. By default, 1 MB is reserved to avoid system-wide\n         * SQLite disk full exceptions.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SYS_STORAGE_CACHE_PERCENTAGE",
    "type" : "String",
    "comment" : "\n         * Minimum percentage of storage on the device that is reserved for\n         * cached data.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SYS_STORAGE_CACHE_MAX_BYTES",
    "type" : "String",
    "comment" : "\n         * Maximum bytes of storage on the device that is reserved for cached\n         * data.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SYNC_MAX_RETRY_DELAY_IN_SECONDS",
    "type" : "String",
    "comment" : "\n         * The maximum reconnect delay for short network outages or when the\n         * network is suspended due to phone use.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CONNECTIVITY_CHANGE_DELAY",
    "type" : "String",
    "comment" : "\n         * The number of milliseconds to delay before sending out\n         * {@link ConnectivityManager#CONNECTIVITY_ACTION} broadcasts. Ignored.\n         *\n         * @hide\n         ",
    "links" : [ "ConnectivityManager#CONNECTIVITY_ACTION" ]
  }, {
    "name" : "CONNECTIVITY_SAMPLING_INTERVAL_IN_SECONDS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PAC_CHANGE_DELAY",
    "type" : "String",
    "comment" : "\n         * The series of successively longer delays used in retrying to download PAC file.\n         * Last delay is used between successful PAC downloads.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_MODE_IGNORE",
    "type" : "int",
    "comment" : "\n         * Don't attempt to detect captive portals.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_MODE_PROMPT",
    "type" : "int",
    "comment" : "\n         * When detecting a captive portal, display a notification that\n         * prompts the user to sign in.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_MODE_AVOID",
    "type" : "int",
    "comment" : "\n         * When detecting a captive portal, immediately disconnect from the\n         * network and do not reconnect to that network in the future.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_MODE",
    "type" : "String",
    "comment" : "\n         * What to do when connecting a network that presents a captive portal.\n         * Must be one of the CAPTIVE_PORTAL_MODE_* constants above.\n         *\n         * The default for this setting is CAPTIVE_PORTAL_MODE_PROMPT.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_DETECTION_ENABLED",
    "type" : "String",
    "comment" : "\n         * Setting to turn off captive portal detection. Feature is enabled by\n         * default and the setting needs to be set to 0 to disable it.\n         *\n         * @deprecated use CAPTIVE_PORTAL_MODE_IGNORE to disable captive portal detection\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_SERVER",
    "type" : "String",
    "comment" : "\n         * The server used for captive portal detection upon a new conection. A\n         * 204 response code from the server is used for validation.\n         * TODO: remove this deprecated symbol.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_HTTPS_URL",
    "type" : "String",
    "comment" : "\n         * The URL used for HTTPS captive portal detection upon a new connection.\n         * A 204 response code from the server is used for validation.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_HTTP_URL",
    "type" : "String",
    "comment" : "\n         * The URL used for HTTP captive portal detection upon a new connection.\n         * A 204 response code from the server is used for validation.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_FALLBACK_URL",
    "type" : "String",
    "comment" : "\n         * The URL used for fallback HTTP captive portal detection when previous HTTP\n         * and HTTPS captive portal detection attemps did not return a conclusive answer.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_OTHER_FALLBACK_URLS",
    "type" : "String",
    "comment" : "\n         * A comma separated list of URLs used for captive portal detection in addition to the\n         * fallback HTTP url associated with the CAPTIVE_PORTAL_FALLBACK_URL settings.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_FALLBACK_PROBE_SPECS",
    "type" : "String",
    "comment" : "\n         * A list of captive portal detection specifications used in addition to the fallback URLs.\n         * Each spec has the format url@@/@@statusCodeRegex@@/@@contentRegex. Specs are separated\n         * by \"@@,@@\".\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_USE_HTTPS",
    "type" : "String",
    "comment" : "\n         * Whether to use HTTPS for network validation. This is enabled by default and the setting\n         * needs to be set to 0 to disable it. This setting is a misnomer because captive portals\n         * don't actually use HTTPS, but it's consistent with the other settings.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CAPTIVE_PORTAL_USER_AGENT",
    "type" : "String",
    "comment" : "\n         * Which User-Agent string to use in the header of the captive portal detection probes.\n         * The User-Agent field is unset when this setting has no value (HttpUrlConnection default).\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DATA_STALL_RECOVERY_ON_BAD_NETWORK",
    "type" : "String",
    "comment" : "\n         * Whether to try cellular data recovery when a bad network is reported.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "MIN_DURATION_BETWEEN_RECOVERY_STEPS_IN_MS",
    "type" : "String",
    "comment" : "\n         * Minumim duration in millisecodns between cellular data recovery attempts\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NSD_ON",
    "type" : "String",
    "comment" : "\n         * Whether network service discovery is enabled.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SET_INSTALL_LOCATION",
    "type" : "String",
    "comment" : "\n         * Let user pick default install location.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_INSTALL_LOCATION",
    "type" : "String",
    "comment" : "\n         * Default install location value.\n         * 0 = auto, let system decide\n         * 1 = internal\n         * 2 = sdcard\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INET_CONDITION_DEBOUNCE_UP_DELAY",
    "type" : "String",
    "comment" : "\n         * ms during which to consume extra events related to Inet connection\n         * condition after a transtion to fully-connected\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INET_CONDITION_DEBOUNCE_DOWN_DELAY",
    "type" : "String",
    "comment" : "\n         * ms during which to consume extra events related to Inet connection\n         * condtion after a transtion to partly-connected\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "READ_EXTERNAL_STORAGE_ENFORCED_DEFAULT",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "HTTP_PROXY",
    "type" : "String",
    "comment" : "\n         * Host name and port for global http proxy. Uses ':' seperator for\n         * between host and port.\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_HTTP_PROXY_HOST",
    "type" : "String",
    "comment" : "\n         * Host name for global http proxy. Set via ConnectivityManager.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_HTTP_PROXY_PORT",
    "type" : "String",
    "comment" : "\n         * Integer host port for global http proxy. Set via ConnectivityManager.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_HTTP_PROXY_EXCLUSION_LIST",
    "type" : "String",
    "comment" : "\n         * Exclusion list for global proxy. This string contains a list of\n         * comma-separated domains where the global proxy does not apply.\n         * Domains should be listed in a comma- separated list. Example of\n         * acceptable formats: \".domain1.com,my.domain2.com\" Use\n         * ConnectivityManager to set/get.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_HTTP_PROXY_PAC",
    "type" : "String",
    "comment" : "\n         * The location PAC File for the proxy.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SET_GLOBAL_HTTP_PROXY",
    "type" : "String",
    "comment" : "\n         * Enables the UI setting to allow the user to specify the global HTTP\n         * proxy and associated exclusion list.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_DNS_SERVER",
    "type" : "String",
    "comment" : "\n         * Setting for default DNS in case nobody suggests one\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIVATE_DNS_MODE",
    "type" : "String",
    "comment" : "\n         * The requested Private DNS mode (string), and an accompanying specifier (string).\n         *\n         * Currently, the specifier holds the chosen provider name when the mode requests\n         * a specific provider. It may be used to store the provider name even when the\n         * mode changes so that temporarily disabling and re-enabling the specific\n         * provider mode does not necessitate retyping the provider hostname.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIVATE_DNS_SPECIFIER",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PRIVATE_DNS_DEFAULT_MODE",
    "type" : "String",
    "comment" : "\n          * Forced override of the default mode (hardcoded as \"automatic\", nee \"opportunistic\").\n          * This allows changing the default mode without effectively disabling other modes,\n          * all of which require explicit user action to enable/configure. See also b/79719289.\n          *\n          * Value is a string, suitable for assignment to PRIVATE_DNS_MODE above.\n          *\n          * {@hide}\n          ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_BTSNOOP_DEFAULT_MODE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_HEADSET_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_A2DP_SINK_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_A2DP_SRC_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_A2DP_SUPPORTS_OPTIONAL_CODECS_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_A2DP_OPTIONAL_CODECS_ENABLED_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_INPUT_DEVICE_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_MAP_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_MAP_CLIENT_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_PBAP_CLIENT_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_SAP_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_PAN_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "BLUETOOTH_HEARING_AID_PRIORITY_PREFIX",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_RADIO_BUG_DETECTION",
    "type" : "String",
    "comment" : "\n         * Enable/disable radio bug detection\n         *\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "RADIO_BUG_WAKELOCK_TIMEOUT_COUNT_THRESHOLD",
    "type" : "String",
    "comment" : "\n         * Count threshold of RIL wakelock timeout for radio bug detection\n         *\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "RADIO_BUG_SYSTEM_ERROR_COUNT_THRESHOLD",
    "type" : "String",
    "comment" : "\n         * Count threshold of RIL system error for radio bug detection\n         *\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "ACTIVITY_MANAGER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Activity manager specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"gc_timeout=5000,max_cached_processes=24\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * max_cached_processes                 (int)\n         * background_settle_time               (long)\n         * fgservice_min_shown_time             (long)\n         * fgservice_min_report_time            (long)\n         * fgservice_screen_on_before_time      (long)\n         * fgservice_screen_on_after_time       (long)\n         * content_provider_retain_time         (long)\n         * gc_timeout                           (long)\n         * gc_min_interval                      (long)\n         * full_pss_min_interval                (long)\n         * full_pss_lowered_interval            (long)\n         * power_check_interval                 (long)\n         * power_check_max_cpu_1                (int)\n         * power_check_max_cpu_2                (int)\n         * power_check_max_cpu_3                (int)\n         * power_check_max_cpu_4                (int)\n         * service_usage_interaction_time       (long)\n         * usage_stats_interaction_interval     (long)\n         * service_restart_duration             (long)\n         * service_reset_run_duration           (long)\n         * service_restart_duration_factor      (int)\n         * service_min_restart_time_between     (long)\n         * service_max_inactivity               (long)\n         * service_bg_start_timeout             (long)\n         * service_bg_activity_start_timeout    (long)\n         * process_start_async                  (boolean)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.am.ActivityManagerConstants\n         ",
    "links" : [ ]
  }, {
    "name" : "ACTIVITY_STARTS_LOGGING_ENABLED",
    "type" : "String",
    "comment" : "\n         * Feature flag to enable or disable the activity starts logging feature.\n         * Type: int (0 for false, 1 for true)\n         * Default: 1\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "FOREGROUND_SERVICE_STARTS_LOGGING_ENABLED",
    "type" : "String",
    "comment" : "\n         * Feature flag to enable or disable the foreground service starts logging feature.\n         * Type: int (0 for false, 1 for true)\n         * Default: 1\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APP_BINDING_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * @hide\n         * @see com.android.server.appbinding.AppBindingConstants\n         ",
    "links" : [ ]
  }, {
    "name" : "APP_OPS_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * App ops specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"state_settle_time=10000\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * top_state_settle_time                (long)\n         * fg_service_state_settle_time         (long)\n         * bg_state_settle_time                 (long)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.AppOpsService.Constants\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_IDLE_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Device Idle (Doze) specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"inactive_to=60000,sensing_to=400000\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * inactive_to                      (long)\n         * sensing_to                       (long)\n         * motion_inactive_to               (long)\n         * idle_after_inactive_to           (long)\n         * idle_pending_to                  (long)\n         * max_idle_pending_to              (long)\n         * idle_pending_factor              (float)\n         * quick_doze_delay_to              (long)\n         * idle_to                          (long)\n         * max_idle_to                      (long)\n         * idle_factor                      (float)\n         * min_time_to_alarm                (long)\n         * max_temp_app_whitelist_duration  (long)\n         * notification_whitelist_duration  (long)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.DeviceIdleController.Constants\n         ",
    "links" : [ ]
  }, {
    "name" : "BATTERY_SAVER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Battery Saver specific settings\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"vibration_disabled=true,adjust_brightness_factor=0.5\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * advertise_is_enabled              (boolean)\n         * datasaver_disabled                (boolean)\n         * enable_night_mode                 (boolean)\n         * launch_boost_disabled             (boolean)\n         * vibration_disabled                (boolean)\n         * animation_disabled                (boolean)\n         * soundtrigger_disabled             (boolean)\n         * fullbackup_deferred               (boolean)\n         * keyvaluebackup_deferred           (boolean)\n         * firewall_disabled                 (boolean)\n         * gps_mode                          (int)\n         * adjust_brightness_disabled        (boolean)\n         * adjust_brightness_factor          (float)\n         * force_all_apps_standby            (boolean)\n         * force_background_check            (boolean)\n         * optional_sensors_disabled         (boolean)\n         * aod_disabled                      (boolean)\n         * quick_doze_enabled                (boolean)\n         * </pre>\n         * @hide\n         * @see com.android.server.power.batterysaver.BatterySaverPolicy\n         ",
    "links" : [ ]
  }, {
    "name" : "BATTERY_SAVER_DEVICE_SPECIFIC_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Battery Saver device specific settings\n         * This is encoded as a key=value list, separated by commas.\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         *     cpufreq-i (list of \"core-number:frequency\" pairs concatenated with /)\n         *     cpufreq-n (list of \"core-number:frequency\" pairs concatenated with /)\n         * </pre>\n         *\n         * See {@link com.android.server.power.batterysaver.BatterySaverPolicy} for the details.\n         *\n         * @hide\n         ",
    "links" : [ "com.android.server.power.batterysaver.BatterySaverPolicy" ]
  }, {
    "name" : "BATTERY_SAVER_ADAPTIVE_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Settings for adaptive Battery Saver mode. Uses the same flags as\n         * {@link #BATTERY_SAVER_CONSTANTS}.\n         *\n         * @hide\n         ",
    "links" : [ "#BATTERY_SAVER_CONSTANTS" ]
  }, {
    "name" : "BATTERY_SAVER_ADAPTIVE_DEVICE_SPECIFIC_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Device specific settings for adaptive Battery Saver mode. Uses the same flags as\n         * {@link #BATTERY_SAVER_DEVICE_SPECIFIC_CONSTANTS}.\n         *\n         * @hide\n         ",
    "links" : [ "#BATTERY_SAVER_DEVICE_SPECIFIC_CONSTANTS" ]
  }, {
    "name" : "BATTERY_TIP_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Battery tip specific settings\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"battery_tip_enabled=true,summary_enabled=true,high_usage_enabled=true,\"\n         * \"high_usage_app_count=3,reduced_battery_enabled=false,reduced_battery_percent=50,\"\n         * \"high_usage_battery_draining=25,high_usage_period_ms=3000\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * battery_tip_enabled              (boolean)\n         * summary_enabled                  (boolean)\n         * battery_saver_tip_enabled        (boolean)\n         * high_usage_enabled               (boolean)\n         * high_usage_app_count             (int)\n         * high_usage_period_ms             (long)\n         * high_usage_battery_draining      (int)\n         * app_restriction_enabled          (boolean)\n         * reduced_battery_enabled          (boolean)\n         * reduced_battery_percent          (int)\n         * low_battery_enabled              (boolean)\n         * low_battery_hour                 (int)\n         * </pre>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ANOMALY_DETECTION_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Battery anomaly detection specific settings\n         * This is encoded as a key=value list, separated by commas.\n         * wakeup_blacklisted_tags is a string, encoded as a set of tags, encoded via\n         * {@link Uri#encode(String)}, separated by colons. Ex:\n         *\n         * \"anomaly_detection_enabled=true,wakelock_threshold=2000,wakeup_alarm_enabled=true,\"\n         * \"wakeup_alarm_threshold=10,wakeup_blacklisted_tags=tag1:tag2:with%2Ccomma:with%3Acolon\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * anomaly_detection_enabled       (boolean)\n         * wakelock_enabled                (boolean)\n         * wakelock_threshold              (long)\n         * wakeup_alarm_enabled            (boolean)\n         * wakeup_alarm_threshold          (long)\n         * wakeup_blacklisted_tags         (string)\n         * bluetooth_scan_enabled          (boolean)\n         * bluetooth_scan_threshold        (long)\n         * </pre>\n         * @hide\n         ",
    "links" : [ "Uri#encode" ]
  }, {
    "name" : "ANOMALY_CONFIG_VERSION",
    "type" : "String",
    "comment" : "\n         * An integer to show the version of the anomaly config. Ex: 1, which means\n         * current version is 1.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ANOMALY_CONFIG",
    "type" : "String",
    "comment" : "\n         * A base64-encoded string represents anomaly stats config, used for\n         * {@link android.app.StatsManager}.\n         * @hide\n         ",
    "links" : [ "android.app.StatsManager" ]
  }, {
    "name" : "ALWAYS_ON_DISPLAY_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Always on display(AOD) specific settings\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"prox_screen_off_delay=10000,screen_brightness_array=0:1:2:3:4\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * screen_brightness_array         (int[])\n         * dimming_scrim_array             (int[])\n         * prox_screen_off_delay           (long)\n         * prox_cooldown_trigger           (long)\n         * prox_cooldown_period            (long)\n         * </pre>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SYS_VDSO",
    "type" : "String",
    "comment" : "\n        * System VDSO global setting. This links to the \"sys.vdso\" system property.\n        * The following values are supported:\n        * false  -> both 32 and 64 bit vdso disabled\n        * 32     -> 32 bit vdso enabled\n        * 64     -> 64 bit vdso enabled\n        * Any other value defaults to both 32 bit and 64 bit true.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SYS_UIDCPUPOWER",
    "type" : "String",
    "comment" : "\n        * UidCpuPower global setting. This links the sys.uidcpupower system property.\n        * The following values are supported:\n        * 0 -> /proc/uid_cpupower/* are disabled\n        * 1 -> /proc/uid_cpupower/* are enabled\n        * Any other value defaults to enabled.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "SYS_TRACED",
    "type" : "String",
    "comment" : "\n        * traced global setting. This controls weather the deamons: traced and\n        * traced_probes run. This links the sys.traced system property.\n        * The following values are supported:\n        * 0 -> traced and traced_probes are disabled\n        * 1 -> traced and traced_probes are enabled\n        * Any other value defaults to disabled.\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "FPS_DEVISOR",
    "type" : "String",
    "comment" : "\n         * An integer to reduce the FPS by this factor. Only for experiments. Need to reboot the\n         * device for this setting to take full effect.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_PANEL_LPM",
    "type" : "String",
    "comment" : "\n         * Flag to enable or disable display panel low power mode (lpm)\n         * false -> Display panel power saving mode is disabled.\n         * true  -> Display panel power saving mode is enabled.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APP_TIME_LIMIT_USAGE_SOURCE",
    "type" : "String",
    "comment" : "\n         * App time limit usage source setting.\n         * This controls which app in a task will be considered the source of usage when\n         * calculating app usage time limits.\n         *\n         * 1 -> task root app\n         * 2 -> current app\n         * Any other value defaults to task root app.\n         *\n         * Need to reboot the device for this setting to take effect.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APP_IDLE_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * App standby (app idle) specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         * <p>\n         * \"idle_duration=5000,prediction_timeout=4500,screen_thresholds=0/0/60000/120000\"\n         * <p>\n         * All durations are in millis.\n         * Array values are separated by forward slashes\n         * The following keys are supported:\n         *\n         * <pre>\n         * screen_thresholds                (long[4])\n         * elapsed_thresholds               (long[4])\n         * strong_usage_duration            (long)\n         * notification_seen_duration       (long)\n         * system_update_usage_duration     (long)\n         * prediction_timeout               (long)\n         * sync_adapter_duration            (long)\n         * exempted_sync_duration           (long)\n         * system_interaction_duration      (long)\n         * initial_foreground_service_start_duration (long)\n         * cross_profile_apps_share_standby_buckets  (boolean)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.usage.AppStandbyController\n         ",
    "links" : [ ]
  }, {
    "name" : "ART_VERIFIER_VERIFY_DEBUGGABLE",
    "type" : "String",
    "comment" : "\n         * Enable ART bytecode verification verifications for debuggable apps.\n         * 0 = disable, 1 = enable.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "POWER_MANAGER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Power manager specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"no_cached_wake_locks=1\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * no_cached_wake_locks                 (boolean)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.power.PowerManagerConstants\n         ",
    "links" : [ ]
  }, {
    "name" : "ALARM_MANAGER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Alarm manager specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"min_futurity=5000,allow_while_idle_short_time=4500\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * min_futurity                         (long)\n         * min_interval                         (long)\n         * allow_while_idle_short_time          (long)\n         * allow_while_idle_long_time           (long)\n         * allow_while_idle_whitelist_duration  (long)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.AlarmManagerService.Constants\n         ",
    "links" : [ ]
  }, {
    "name" : "JOB_SCHEDULER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Job scheduler specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"min_ready_jobs_count=2,moderate_use_factor=.5\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * min_idle_count                       (int)\n         * min_charging_count                   (int)\n         * min_connectivity_count               (int)\n         * min_content_count                    (int)\n         * min_ready_jobs_count                 (int)\n         * heavy_use_factor                     (float)\n         * moderate_use_factor                  (float)\n         * fg_job_count                         (int)\n         * bg_normal_job_count                  (int)\n         * bg_moderate_job_count                (int)\n         * bg_low_job_count                     (int)\n         * bg_critical_job_count                (int)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.job.JobSchedulerService.Constants\n         ",
    "links" : [ ]
  }, {
    "name" : "JOB_SCHEDULER_QUOTA_CONTROLLER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Job scheduler QuotaController specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"max_job_count_working=5,max_job_count_rare=2\"\n         *\n         * <p>\n         * Type: string\n         *\n         * @hide\n         * @see com.android.server.job.JobSchedulerService.Constants\n         ",
    "links" : [ ]
  }, {
    "name" : "JOB_SCHEDULER_TIME_CONTROLLER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Job scheduler TimeController specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"skip_not_ready_jobs=true5,other_key=2\"\n         *\n         * <p>\n         * Type: string\n         *\n         * @hide\n         * @see com.android.server.job.JobSchedulerService.Constants\n         ",
    "links" : [ ]
  }, {
    "name" : "SHORTCUT_MANAGER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * ShortcutManager specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"reset_interval_sec=86400,max_updates_per_interval=1\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * reset_interval_sec              (long)\n         * max_updates_per_interval        (int)\n         * max_icon_dimension_dp           (int, DP)\n         * max_icon_dimension_dp_lowram    (int, DP)\n         * max_shortcuts                   (int)\n         * icon_quality                    (int, 0-100)\n         * icon_format                     (String)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.pm.ShortcutService.ConfigConstants\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_POLICY_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * DevicePolicyManager specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * <pre>\n         * das_died_service_reconnect_backoff_sec       (long)\n         * das_died_service_reconnect_backoff_increase  (float)\n         * das_died_service_reconnect_max_backoff_sec   (long)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * see also com.android.server.devicepolicy.DevicePolicyConstants\n         ",
    "links" : [ ]
  }, {
    "name" : "TEXT_CLASSIFIER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * TextClassifier specific settings.\n         * This is encoded as a key=value list, separated by commas. String[] types like\n         * entity_list_default use \":\" as delimiter for values. Ex:\n         *\n         * <pre>\n         * classify_text_max_range_length                   (int)\n         * detect_language_from_text_enabled                (boolean)\n         * entity_list_default                              (String[])\n         * entity_list_editable                             (String[])\n         * entity_list_not_editable                         (String[])\n         * generate_links_log_sample_rate                   (int)\n         * generate_links_max_text_length                   (int)\n         * in_app_conversation_action_types_default         (String[])\n         * lang_id_context_settings                         (float[])\n         * lang_id_threshold_override                       (float)\n         * local_textclassifier_enabled                     (boolean)\n         * model_dark_launch_enabled                        (boolean)\n         * notification_conversation_action_types_default   (String[])\n         * smart_linkify_enabled                            (boolean)\n         * smart_select_animation_enabled                   (boolean)\n         * smart_selection_enabled                          (boolean)\n         * smart_text_share_enabled                         (boolean)\n         * suggest_selection_max_range_length               (int)\n         * system_textclassifier_enabled                    (boolean)\n         * template_intent_factory_enabled                  (boolean)\n         * translate_in_classification_enabled              (boolean)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * see also android.view.textclassifier.TextClassificationConstants\n         ",
    "links" : [ ]
  }, {
    "name" : "BATTERY_STATS_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * BatteryStats specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex: \"foo=1,bar=true\"\n         *\n         * The following keys are supported:\n         * <pre>\n         * track_cpu_times_by_proc_state (boolean)\n         * track_cpu_active_cluster_time (boolean)\n         * read_binary_cpu_time          (boolean)\n         * proc_state_cpu_times_read_delay_ms (long)\n         * external_stats_collection_rate_limit_ms (long)\n         * battery_level_collection_delay_ms (long)\n         * max_history_files (int)\n         * max_history_buffer_kb (int)\n         * battery_charged_delay_ms (int)\n         * </pre>\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * see also com.android.internal.os.BatteryStatsImpl.Constants\n         ",
    "links" : [ ]
  }, {
    "name" : "SYNC_MANAGER_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * SyncManager specific settings.\n         *\n         * <p>\n         * Type: string\n         * @hide\n         * @see com.android.server.content.SyncManagerConstants\n         ",
    "links" : [ ]
  }, {
    "name" : "BROADCAST_FG_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Broadcast dispatch tuning parameters specific to foreground broadcasts.\n         *\n         * This is encoded as a key=value list, separated by commas. Ex: \"foo=1,bar=true\"\n         *\n         * The following keys are supported:\n         * <pre>\n         * bcast_timeout                (long)\n         * bcast_slow_time              (long)\n         * bcast_deferral               (long)\n         * bcast_deferral_decay_factor  (float)\n         * bcast_deferral_floor         (long)\n         * bcast_allow_bg_activity_start_timeout    (long)\n         * </pre>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BROADCAST_BG_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Broadcast dispatch tuning parameters specific to background broadcasts.\n         *\n         * This is encoded as a key=value list, separated by commas. Ex: \"foo=1,bar=true\".\n         * See {@link #BROADCAST_FG_CONSTANTS} for the list of supported keys.\n         *\n         * @hide\n         ",
    "links" : [ "#BROADCAST_FG_CONSTANTS" ]
  }, {
    "name" : "BROADCAST_OFFLOAD_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Broadcast dispatch tuning parameters specific to specific \"offline\" broadcasts.\n         *\n         * This is encoded as a key=value list, separated by commas. Ex: \"foo=1,bar=true\".\n         * See {@link #BROADCAST_FG_CONSTANTS} for the list of supported keys.\n         *\n         * @hide\n         ",
    "links" : [ "#BROADCAST_FG_CONSTANTS" ]
  }, {
    "name" : "APP_STANDBY_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not App Standby feature is enabled by system. This controls throttling of apps\n         * based on usage patterns and predictions. Platform will turn on this feature if both this\n         * flag and {@link #ADAPTIVE_BATTERY_MANAGEMENT_ENABLED} is on.\n         * Type: int (0 for false, 1 for true)\n         * Default: 1\n         * @hide\n         * @see #ADAPTIVE_BATTERY_MANAGEMENT_ENABLED\n         ",
    "links" : [ "#ADAPTIVE_BATTERY_MANAGEMENT_ENABLED" ]
  }, {
    "name" : "ADAPTIVE_BATTERY_MANAGEMENT_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not adaptive battery feature is enabled by user. Platform will turn on this\n         * feature if both this flag and {@link #APP_STANDBY_ENABLED} is on.\n         * Type: int (0 for false, 1 for true)\n         * Default: 1\n         * @hide\n         * @see #APP_STANDBY_ENABLED\n         ",
    "links" : [ "#APP_STANDBY_ENABLED" ]
  }, {
    "name" : "ENABLE_RESTRICTED_BUCKET",
    "type" : "String",
    "comment" : "\n         * Whether or not apps are allowed into the\n         * {@link android.app.usage.UsageStatsManager#STANDBY_BUCKET_RESTRICTED} bucket.\n         * Type: int (0 for false, 1 for true)\n         * Default: {@value #DEFAULT_ENABLE_RESTRICTED_BUCKET}\n         *\n         * @hide\n         ",
    "links" : [ "android.app.usage.UsageStatsManager#STANDBY_BUCKET_RESTRICTED" ]
  }, {
    "name" : "DEFAULT_ENABLE_RESTRICTED_BUCKET",
    "type" : "int",
    "comment" : "\n         * @see #ENABLE_RESTRICTED_BUCKET\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APP_AUTO_RESTRICTION_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not app auto restriction is enabled. When it is enabled, settings app will\n         * auto restrict the app if it has bad behavior (e.g. hold wakelock for long time).\n         *\n         * Type: boolean (0 for false, 1 for true)\n         * Default: 1\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "FORCED_APP_STANDBY_ENABLED",
    "type" : "String",
    "comment" : "\n         * Feature flag to enable or disable the Forced App Standby feature.\n         * Type: int (0 for false, 1 for true)\n         * Default: 1\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "FORCED_APP_STANDBY_FOR_SMALL_BATTERY_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not to enable Forced App Standby on small battery devices.\n         * Type: int (0 for false, 1 for true)\n         * Default: 0\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "USER_ABSENT_RADIOS_OFF_FOR_SMALL_BATTERY_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not to enable the User Absent, Radios Off feature on small battery devices.\n         * Type: int (0 for false, 1 for true)\n         * Default: 0\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "USER_ABSENT_TOUCH_OFF_FOR_SMALL_BATTERY_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not to enable the User Absent, Touch Off feature on small battery devices.\n         * Type: int (0 for false, 1 for true)\n         * Default: 0\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_ON_WHEN_PROXY_DISCONNECTED",
    "type" : "String",
    "comment" : "\n         * Whether or not to turn on Wifi when proxy is disconnected.\n         * Type: int (0 for false, 1 for true)\n         * Default: 1\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TIME_ONLY_MODE_CONSTANTS",
    "type" : "String",
    "comment" : "\n         * Time Only Mode specific settings.\n         * This is encoded as a key=value list, separated by commas. Ex: \"foo=1,bar=true\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * enabled                  (boolean)\n         * disable_home             (boolean)\n         * disable_tilt_to_wake     (boolean)\n         * disable_touch_to_wake    (boolean)\n         * </pre>\n         * Type: string\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "UNGAZE_SLEEP_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether of not to send keycode sleep for ungaze when Home is the foreground activity on\n         * watch type devices.\n         * Type: int (0 for false, 1 for true)\n         * Default: 0\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_WATCHLIST_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not Network Watchlist feature is enabled.\n         * Type: int (0 for false, 1 for true)\n         * Default: 0\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_HIDDEN_LAUNCHER_ICON_APPS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not show hidden launcher icon apps feature is enabled.\n         * Type: int (0 for false, 1 for true)\n         * Default: 1\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_NEW_APP_INSTALLED_NOTIFICATION_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether or not show new app installed notification is enabled.\n         * Type: int (0 for false, 1 for true)\n         * Default: 0\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KEEP_PROFILE_IN_BACKGROUND",
    "type" : "String",
    "comment" : "\n         * Flag to keep background restricted profiles running after exiting. If disabled,\n         * the restricted profile can be put into stopped state as soon as the user leaves it.\n         * Type: int (0 for false, 1 for true)\n         *\n         * Overridden by the system based on device information. If null, the value specified\n         * by {@code config_keepRestrictedProfilesInBackground} is used.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_ADB_ALLOWED_CONNECTION_TIME",
    "type" : "long",
    "comment" : "\n         * The default time in ms within which a subsequent connection from an always allowed system\n         * is allowed to reconnect without user interaction.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ADB_ALLOWED_CONNECTION_TIME",
    "type" : "String",
    "comment" : "\n         * When the user first connects their device to a system a prompt is displayed to allow\n         * the adb connection with an option to 'Always allow' connections from this system. If the\n         * user selects this always allow option then the connection time is stored for the system.\n         * This setting is the time in ms within which a subsequent connection from an always\n         * allowed system is allowed to reconnect without user interaction.\n         *\n         * Type: long\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WINDOW_ANIMATION_SCALE",
    "type" : "String",
    "comment" : "\n         * Scaling factor for normal window animations. Setting to 0 will\n         * disable window animations.\n         ",
    "links" : [ ]
  }, {
    "name" : "TRANSITION_ANIMATION_SCALE",
    "type" : "String",
    "comment" : "\n         * Scaling factor for activity transition animations. Setting to 0 will\n         * disable window animations.\n         ",
    "links" : [ ]
  }, {
    "name" : "ANIMATOR_DURATION_SCALE",
    "type" : "String",
    "comment" : "\n         * Scaling factor for Animator-based animations. This affects both the\n         * start delay and duration of all such animations. Setting to 0 will\n         * cause animations to end immediately. The default value is 1.\n         ",
    "links" : [ ]
  }, {
    "name" : "FANCY_IME_ANIMATIONS",
    "type" : "String",
    "comment" : "\n         * Scaling factor for normal window animations. Setting to 0 will\n         * disable window animations.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "COMPATIBILITY_MODE",
    "type" : "String",
    "comment" : "\n         * If 0, the compatibility mode is off for all applications.\n         * If 1, older applications run under compatibility mode.\n         * TODO: remove this settings before code freeze (bug/1907571)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_TONE",
    "type" : "String",
    "comment" : "\n         * CDMA only settings\n         * Emergency Tone  0 = Off\n         *                 1 = Alert\n         *                 2 = Vibrate\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CALL_AUTO_RETRY",
    "type" : "String",
    "comment" : "\n         * CDMA only settings\n         * Whether the auto retry is enabled. The value is\n         * boolean (1 or 0).\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EMERGENCY_AFFORDANCE_NEEDED",
    "type" : "String",
    "comment" : "\n         * A setting that can be read whether the emergency affordance is currently needed.\n         * The value is a boolean (1 or 0).\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_AUTOMATIC_SYSTEM_SERVER_HEAP_DUMPS",
    "type" : "String",
    "comment" : "\n         * Whether to enable automatic system server heap dumps. This only works on userdebug or\n         * eng builds, not on user builds. This is set by the user and overrides the config value.\n         * 1 means enable, 0 means disable.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PREFERRED_NETWORK_MODE",
    "type" : "String",
    "comment" : "\n         * See RIL_PreferredNetworkType in ril.h\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEBUG_APP",
    "type" : "String",
    "comment" : "\n         * Name of an application package to be debugged.\n         ",
    "links" : [ ]
  }, {
    "name" : "WAIT_FOR_DEBUGGER",
    "type" : "String",
    "comment" : "\n         * If 1, when launching DEBUG_APP it will wait for the debugger before\n         * starting user code.  If 0, it will run normally.\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_GPU_DEBUG_LAYERS",
    "type" : "String",
    "comment" : "\n         * Allow GPU debug layers?\n         * 0 = no\n         * 1 = yes\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GPU_DEBUG_APP",
    "type" : "String",
    "comment" : "\n         * App allowed to load GPU debug layers\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_SETTINGS_ANGLE_DEBUG_PACKAGE",
    "type" : "String",
    "comment" : "\n         * Package containing ANGLE libraries other than system, which are only available\n         * to dumpable apps that opt-in.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_SETTINGS_ANGLE_GL_DRIVER_ALL_ANGLE",
    "type" : "String",
    "comment" : "\n         * Force all PKGs to use ANGLE, regardless of any other settings\n         * The value is a boolean (1 or 0).\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_SETTINGS_ANGLE_GL_DRIVER_SELECTION_PKGS",
    "type" : "String",
    "comment" : "\n         * List of PKGs that have an OpenGL driver selected\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_SETTINGS_ANGLE_GL_DRIVER_SELECTION_VALUES",
    "type" : "String",
    "comment" : "\n         * List of selected OpenGL drivers, corresponding to the PKGs in GLOBAL_SETTINGS_DRIVER_PKGS\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_SETTINGS_ANGLE_WHITELIST",
    "type" : "String",
    "comment" : "\n         * List of package names that should check ANGLE rules\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GLOBAL_SETTINGS_SHOW_ANGLE_IN_USE_DIALOG_BOX",
    "type" : "String",
    "comment" : "\n         * Show the \"ANGLE In Use\" dialog box to the user when ANGLE is the OpenGL driver.\n         * The value is a boolean (1 or 0).\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GAME_DRIVER_ALL_APPS",
    "type" : "String",
    "comment" : "\n         * Game Driver global preference for all Apps.\n         * 0 = Default\n         * 1 = All Apps use Game Driver\n         * 2 = All Apps use system graphics driver\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GAME_DRIVER_OPT_IN_APPS",
    "type" : "String",
    "comment" : "\n         * List of Apps selected to use Game Driver.\n         * i.e. <pkg1>,<pkg2>,...,<pkgN>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GAME_DRIVER_PRERELEASE_OPT_IN_APPS",
    "type" : "String",
    "comment" : "\n         * List of Apps selected to use prerelease Game Driver.\n         * i.e. <pkg1>,<pkg2>,...,<pkgN>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GAME_DRIVER_OPT_OUT_APPS",
    "type" : "String",
    "comment" : "\n         * List of Apps selected not to use Game Driver.\n         * i.e. <pkg1>,<pkg2>,...,<pkgN>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GAME_DRIVER_BLACKLIST",
    "type" : "String",
    "comment" : "\n         * Apps on the blacklist that are forbidden to use Game Driver.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GAME_DRIVER_BLACKLISTS",
    "type" : "String",
    "comment" : "\n         * List of blacklists, each blacklist is a blacklist for a specific version of Game Driver.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GAME_DRIVER_WHITELIST",
    "type" : "String",
    "comment" : "\n         * Apps on the whitelist that are allowed to use Game Driver.\n         * The string is a list of application package names, seperated by comma.\n         * i.e. <apk1>,<apk2>,...,<apkN>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GAME_DRIVER_SPHAL_LIBRARIES",
    "type" : "String",
    "comment" : "\n         * List of libraries in sphal accessible by Game Driver\n         * The string is a list of library names, separated by colon.\n         * i.e. <lib1>:<lib2>:...:<libN>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GPU_DEBUG_LAYERS",
    "type" : "String",
    "comment" : "\n         * Ordered GPU debug layer list for Vulkan\n         * i.e. <layer1>:<layer2>:...:<layerN>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GPU_DEBUG_LAYERS_GLES",
    "type" : "String",
    "comment" : "\n         * Ordered GPU debug layer list for GLES\n         * i.e. <layer1>:<layer2>:...:<layerN>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GPU_DEBUG_LAYER_APP",
    "type" : "String",
    "comment" : "\n         * Addition app for GPU layer discovery\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_PROCESSES",
    "type" : "String",
    "comment" : "\n         * Control whether the process CPU usage meter should be shown.\n         *\n         * @deprecated This functionality is no longer available as of\n         * {@link android.os.Build.VERSION_CODES#N_MR1}.\n         ",
    "links" : [ "android.os.Build.VERSION_CODES#N_MR1" ]
  }, {
    "name" : "LOW_POWER_MODE",
    "type" : "String",
    "comment" : "\n         * If 1 low power mode (aka battery saver) is enabled.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOW_POWER_MODE_STICKY",
    "type" : "String",
    "comment" : "\n         * If 1, battery saver ({@link #LOW_POWER_MODE}) will be re-activated after the device\n         * is unplugged from a charger or rebooted.\n         * @hide\n         ",
    "links" : [ "#LOW_POWER_MODE" ]
  }, {
    "name" : "LOW_POWER_MODE_STICKY_AUTO_DISABLE_LEVEL",
    "type" : "String",
    "comment" : "\n         * When a device is unplugged from a changer (or is rebooted), do not re-activate battery\n         * saver even if {@link #LOW_POWER_MODE_STICKY} is 1, if the battery level is equal to or\n         * above this threshold.\n         *\n         * @hide\n         ",
    "links" : [ "#LOW_POWER_MODE_STICKY" ]
  }, {
    "name" : "LOW_POWER_MODE_STICKY_AUTO_DISABLE_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether sticky battery saver should be deactivated once the battery level has reached the\n         * threshold specified by {@link #LOW_POWER_MODE_STICKY_AUTO_DISABLE_LEVEL}.\n         *\n         * @hide\n         ",
    "links" : [ "#LOW_POWER_MODE_STICKY_AUTO_DISABLE_LEVEL" ]
  }, {
    "name" : "LOW_POWER_MODE_TRIGGER_LEVEL",
    "type" : "String",
    "comment" : "\n         * Battery level [1-100] at which low power mode automatically turns on.\n         * If 0, it will not automatically turn on. For Q and newer, it will only automatically\n         * turn on if the value is greater than 0 and the {@link #AUTOMATIC_POWER_SAVE_MODE}\n         * setting is also set to\n         * {@link android.os.PowerManager.AutoPowerSaveMode#POWER_SAVE_MODE_TRIGGER_PERCENTAGE}.\n         * @see #AUTOMATIC_POWER_SAVE_MODE\n         * @see android.os.PowerManager#getPowerSaveModeTrigger()\n         * @hide\n         ",
    "links" : [ "#AUTOMATIC_POWER_SAVE_MODE", "android.os.PowerManager.AutoPowerSaveMode#POWER_SAVE_MODE_TRIGGER_PERCENTAGE" ]
  }, {
    "name" : "AUTOMATIC_POWER_SAVE_MODE",
    "type" : "String",
    "comment" : "\n         * Whether battery saver is currently set to trigger based on percentage, dynamic power\n         * savings trigger, or none. See {@link AutoPowerSaveModeTriggers} for\n         * accepted values.\n         *\n         *  @hide\n         ",
    "links" : [ "AutoPowerSaveModeTriggers" ]
  }, {
    "name" : "DYNAMIC_POWER_SAVINGS_DISABLE_THRESHOLD",
    "type" : "String",
    "comment" : "\n         * The setting that backs the disable threshold for the setPowerSavingsWarning api in\n         * PowerManager\n         *\n         * @see android.os.PowerManager#setDynamicPowerSaveHint(boolean, int)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DYNAMIC_POWER_SAVINGS_ENABLED",
    "type" : "String",
    "comment" : "\n         * The setting which backs the setDynamicPowerSaveHint api in PowerManager.\n         *\n         * @see android.os.PowerManager#setDynamicPowerSaveHint(boolean, int)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TIME_REMAINING_ESTIMATE_MILLIS",
    "type" : "String",
    "comment" : "\n         * A long value indicating how much longer the system battery is estimated to last in\n         * millis. See {@link #BATTERY_ESTIMATES_LAST_UPDATE_TIME} for the last time this value\n         * was updated.\n         *\n         * @hide\n         ",
    "links" : [ "#BATTERY_ESTIMATES_LAST_UPDATE_TIME" ]
  }, {
    "name" : "TIME_REMAINING_ESTIMATE_BASED_ON_USAGE",
    "type" : "String",
    "comment" : "\n         * A boolean indicating whether {@link #TIME_REMAINING_ESTIMATE_MILLIS} is based customized\n         * to the devices usage or using global models. See\n         * {@link #BATTERY_ESTIMATES_LAST_UPDATE_TIME} for the last time this value was updated.\n         *\n         * @hide\n         ",
    "links" : [ "#TIME_REMAINING_ESTIMATE_MILLIS", "#BATTERY_ESTIMATES_LAST_UPDATE_TIME" ]
  }, {
    "name" : "AVERAGE_TIME_TO_DISCHARGE",
    "type" : "String",
    "comment" : "\n         * A long value indicating how long the system battery takes to deplete from 100% to 0% on\n         * average based on historical drain rates. See {@link #BATTERY_ESTIMATES_LAST_UPDATE_TIME}\n         * for the last time this value was updated.\n         *\n         * @hide\n         ",
    "links" : [ "#BATTERY_ESTIMATES_LAST_UPDATE_TIME" ]
  }, {
    "name" : "BATTERY_ESTIMATES_LAST_UPDATE_TIME",
    "type" : "String",
    "comment" : "\n         * A long indicating the epoch time in milliseconds when\n         * {@link #TIME_REMAINING_ESTIMATE_MILLIS}, {@link #TIME_REMAINING_ESTIMATE_BASED_ON_USAGE},\n         * and {@link #AVERAGE_TIME_TO_DISCHARGE} were last updated.\n         *\n         * @hide\n         ",
    "links" : [ "#TIME_REMAINING_ESTIMATE_MILLIS", "#TIME_REMAINING_ESTIMATE_BASED_ON_USAGE", "#AVERAGE_TIME_TO_DISCHARGE" ]
  }, {
    "name" : "LOW_POWER_MODE_TRIGGER_LEVEL_MAX",
    "type" : "String",
    "comment" : "\n         * The max value for {@link #LOW_POWER_MODE_TRIGGER_LEVEL}. If this setting is not set\n         * or the value is 0, the default max will be used.\n         *\n         * @hide\n         ",
    "links" : [ "#LOW_POWER_MODE_TRIGGER_LEVEL" ]
  }, {
    "name" : "LOW_POWER_MODE_SUGGESTION_PARAMS",
    "type" : "String",
    "comment" : "\n         * See com.android.settingslib.fuelgauge.BatterySaverUtils.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ALWAYS_FINISH_ACTIVITIES",
    "type" : "String",
    "comment" : "\n         * If not 0, the activity manager will aggressively finish activities and\n         * processes as soon as they are no longer needed.  If 0, the normal\n         * extended lifetime is used.\n         ",
    "links" : [ ]
  }, {
    "name" : "HIDE_ERROR_DIALOGS",
    "type" : "String",
    "comment" : "\n         * If nonzero, all system error dialogs will be hidden.  For example, the\n         * crash and ANR dialogs will not be shown, and the system will just proceed\n         * as if they had been accepted by the user.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DOCK_AUDIO_MEDIA_ENABLED",
    "type" : "String",
    "comment" : "\n         * Use Dock audio output for media:\n         *      0 = disabled\n         *      1 = enabled\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENCODED_SURROUND_OUTPUT_AUTO",
    "type" : "int",
    "comment" : "\n         * The surround sound formats AC3, DTS or IEC61937 are\n         * available for use if they are detected.\n         * This is the default mode.\n         *\n         * Note that AUTO is equivalent to ALWAYS for Android TVs and other\n         * devices that have an S/PDIF output. This is because S/PDIF\n         * is unidirectional and the TV cannot know if a decoder is\n         * connected. So it assumes they are always available.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENCODED_SURROUND_OUTPUT_NEVER",
    "type" : "int",
    "comment" : "\n         * AC3, DTS or IEC61937 are NEVER available, even if they\n         * are detected by the hardware. Those formats will not be\n         * reported.\n         *\n         * An example use case would be an AVR reports that it is capable of\n         * surround sound decoding but is broken. If NEVER is chosen\n         * then apps must use PCM output instead of encoded output.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENCODED_SURROUND_OUTPUT_ALWAYS",
    "type" : "int",
    "comment" : "\n         * AC3, DTS or IEC61937 are ALWAYS available, even if they\n         * are not detected by the hardware. Those formats will be\n         * reported as part of the HDMI output capability. Applications\n         * are then free to use either PCM or encoded output.\n         *\n         * An example use case would be a when TV was connected over\n         * TOS-link to an AVR. But the TV could not see it because TOS-link\n         * is unidirectional.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENCODED_SURROUND_OUTPUT_MANUAL",
    "type" : "int",
    "comment" : "\n         * Surround sound formats are available according to the choice\n         * of user, even if they are not detected by the hardware. Those\n         * formats will be reported as part of the HDMI output capability.\n         * Applications are then free to use either PCM or encoded output.\n         *\n         * An example use case would be an AVR that doesn't report a surround\n         * format while the user knows the AVR does support it.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENCODED_SURROUND_OUTPUT",
    "type" : "String",
    "comment" : "\n         * Set to ENCODED_SURROUND_OUTPUT_AUTO,\n         * ENCODED_SURROUND_OUTPUT_NEVER,\n         * ENCODED_SURROUND_OUTPUT_ALWAYS or\n         * ENCODED_SURROUND_OUTPUT_MANUAL\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENCODED_SURROUND_OUTPUT_ENABLED_FORMATS",
    "type" : "String",
    "comment" : "\n         * Surround sounds formats that are enabled when ENCODED_SURROUND_OUTPUT is set to\n         * ENCODED_SURROUND_OUTPUT_MANUAL. Encoded as comma separated list. Allowed values\n         * are the format constants defined in AudioFormat.java. Ex:\n         *\n         * \"5,6\"\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "AUDIO_SAFE_VOLUME_STATE",
    "type" : "String",
    "comment" : "\n         * Persisted safe headphone volume management state by AudioService\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TZINFO_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for tzinfo (time zone) updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TZINFO_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for tzinfo (time zone) update metadata\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SELINUX_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for selinux (mandatory access control) updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SELINUX_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for selinux (mandatory access control) update metadata\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SMS_SHORT_CODES_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for sms short code updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SMS_SHORT_CODES_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for sms short code update metadata\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APN_DB_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for apn_db updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APN_DB_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for apn_db update metadata\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CERT_PIN_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for cert pinlist updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CERT_PIN_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for cert pinlist updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INTENT_FIREWALL_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for intent firewall updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INTENT_FIREWALL_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for intent firewall update metadata\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LANG_ID_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for lang id model updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LANG_ID_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for lang id model update metadata\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SMART_SELECTION_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for smart selection model updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SMART_SELECTION_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for smart selection model update metadata\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CONVERSATION_ACTIONS_UPDATE_CONTENT_URL",
    "type" : "String",
    "comment" : "\n         * URL for conversation actions model updates\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CONVERSATION_ACTIONS_UPDATE_METADATA_URL",
    "type" : "String",
    "comment" : "\n         * URL for conversation actions model update metadata\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SELINUX_STATUS",
    "type" : "String",
    "comment" : "\n         * SELinux enforcement status. If 0, permissive; if 1, enforcing.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVELOPMENT_FORCE_RTL",
    "type" : "String",
    "comment" : "\n         * Developer setting to force RTL layout.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOW_BATTERY_SOUND_TIMEOUT",
    "type" : "String",
    "comment" : "\n         * Milliseconds after screen-off after which low battery sounds will be silenced.\n         *\n         * If zero, battery sounds will always play.\n         * Defaults to @integer/def_low_battery_sound_timeout in SettingsProvider.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WIFI_BOUNCE_DELAY_OVERRIDE_MS",
    "type" : "String",
    "comment" : "\n         * Milliseconds to wait before bouncing Wi-Fi after settings is restored. Note that after\n         * the caller is done with this, they should call {@link ContentResolver#delete} to\n         * clean up any value that they may have written.\n         *\n         * @hide\n         ",
    "links" : [ "ContentResolver#delete" ]
  }, {
    "name" : "POLICY_CONTROL",
    "type" : "String",
    "comment" : "\n         * Defines global runtime overrides to window policy.\n         *\n         * See {@link com.android.server.wm.PolicyControl} for value format.\n         *\n         * @hide\n         ",
    "links" : [ "com.android.server.wm.PolicyControl" ]
  }, {
    "name" : "EMULATE_DISPLAY_CUTOUT",
    "type" : "String",
    "comment" : "\n         * {@link android.view.DisplayCutout DisplayCutout} emulation mode.\n         *\n         * @hide\n         ",
    "links" : [ "android.view.DisplayCutout" ]
  }, {
    "name" : "EMULATE_DISPLAY_CUTOUT_OFF",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "EMULATE_DISPLAY_CUTOUT_ON",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "BLOCKED_SLICES",
    "type" : "String",
    "comment" : "\n         * A colon separated list of keys for Settings Slices.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ZEN_MODE",
    "type" : "String",
    "comment" : "\n         * Defines global zen mode.  ZEN_MODE_OFF, ZEN_MODE_IMPORTANT_INTERRUPTIONS,\n         * or ZEN_MODE_NO_INTERRUPTIONS.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ZEN_MODE_OFF",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ZEN_MODE_IMPORTANT_INTERRUPTIONS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ZEN_MODE_NO_INTERRUPTIONS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ZEN_MODE_ALARMS",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ZEN_MODE_RINGER_LEVEL",
    "type" : "String",
    "comment" : "\n         * Value of the ringer before entering zen mode.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ZEN_MODE_CONFIG_ETAG",
    "type" : "String",
    "comment" : "\n         * Opaque value, changes when persisted zen mode configuration changes.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ZEN_DURATION",
    "type" : "String",
    "comment" : "\n         * @deprecated Use {@link android.provider.Settings.Secure#ZEN_DURATION} instead\n         * @hide\n         ",
    "links" : [ "android.provider.Settings.Secure#ZEN_DURATION" ]
  }, {
    "name" : "ZEN_DURATION_PROMPT",
    "type" : "int",
    "comment" : "\n         * @deprecated Use {@link android.provider.Settings.Secure#ZEN_DURATION_PROMPT} instead\n         * @hide\n         ",
    "links" : [ "android.provider.Settings.Secure#ZEN_DURATION_PROMPT" ]
  }, {
    "name" : "ZEN_DURATION_FOREVER",
    "type" : "int",
    "comment" : "\n         * @deprecated Use {@link android.provider.Settings.Secure#ZEN_DURATION_FOREVER} instead\n         * @hide\n         ",
    "links" : [ "android.provider.Settings.Secure#ZEN_DURATION_FOREVER" ]
  }, {
    "name" : "HEADS_UP_NOTIFICATIONS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Defines global heads up toggle.  One of HEADS_UP_OFF, HEADS_UP_ON.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "HEADS_UP_OFF",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "HEADS_UP_ON",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_NAME",
    "type" : "String",
    "comment" : "\n         * The name of the device\n         ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_SCORING_PROVISIONED",
    "type" : "String",
    "comment" : "\n         * Whether the NetworkScoringService has been first initialized.\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "REQUIRE_PASSWORD_TO_DECRYPT",
    "type" : "String",
    "comment" : "\n         * Indicates whether the user wants to be prompted for password to decrypt the device on\n         * boot. This only matters if the storage is encrypted.\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENHANCED_4G_MODE_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether the Volte is enabled. If this setting is not set then we use the Carrier Config\n         * value\n         * {@link android.telephony.CarrierConfigManager#KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOL}.\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         * @deprecated Use\n         * {@link android.provider.Telephony.SimInfo#COLUMN_ENHANCED_4G_MODE_ENABLED} instead.\n         ",
    "links" : [ "android.telephony.CarrierConfigManager#KEY_ENHANCED_4G_LTE_ON_BY_DEFAULT_BOOL", "android.provider.Telephony.SimInfo#COLUMN_ENHANCED_4G_MODE_ENABLED" ]
  }, {
    "name" : "VT_IMS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether VT (Video Telephony over IMS) is enabled\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         *\n         * @hide\n         * @deprecated Use {@link android.provider.Telephony.SimInfo#COLUMN_VT_IMS_ENABLED} instead.\n         ",
    "links" : [ "android.provider.Telephony.SimInfo#COLUMN_VT_IMS_ENABLED" ]
  }, {
    "name" : "WFC_IMS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether WFC is enabled\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         *\n         * @hide\n         * @deprecated Use\n         * {@link android.provider.Telephony.SimInfo#COLUMN_WFC_IMS_ENABLED} instead.\n         ",
    "links" : [ "android.provider.Telephony.SimInfo#COLUMN_WFC_IMS_ENABLED" ]
  }, {
    "name" : "WFC_IMS_MODE",
    "type" : "String",
    "comment" : "\n         * WFC mode on home/non-roaming network.\n         * <p>\n         * Type: int - 2=Wi-Fi preferred, 1=Cellular preferred, 0=Wi-Fi only\n         *\n         * @hide\n         * @deprecated Use {@link android.provider.Telephony.SimInfo#COLUMN_WFC_IMS_MODE} instead.\n         ",
    "links" : [ "android.provider.Telephony.SimInfo#COLUMN_WFC_IMS_MODE" ]
  }, {
    "name" : "WFC_IMS_ROAMING_MODE",
    "type" : "String",
    "comment" : "\n         * WFC mode on roaming network.\n         * <p>\n         * Type: int - see {@link #WFC_IMS_MODE} for values\n         *\n         * @hide\n         * @deprecated Use {@link android.provider.Telephony.SimInfo#COLUMN_WFC_IMS_ROAMING_MODE}\n         * instead.\n         ",
    "links" : [ "#WFC_IMS_MODE", "android.provider.Telephony.SimInfo#COLUMN_WFC_IMS_ROAMING_MODE" ]
  }, {
    "name" : "WFC_IMS_ROAMING_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether WFC roaming is enabled\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         *\n         * @hide\n         * @deprecated Use {@link android.provider.Telephony.SimInfo#COLUMN_WFC_IMS_ROAMING_ENABLED}\n         * instead\n         ",
    "links" : [ "android.provider.Telephony.SimInfo#COLUMN_WFC_IMS_ROAMING_ENABLED" ]
  }, {
    "name" : "LTE_SERVICE_FORCED",
    "type" : "String",
    "comment" : "\n         * Whether user can enable/disable LTE as a preferred network. A carrier might control\n         * this via gservices, OMA-DM, carrier app, etc.\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LID_BEHAVIOR",
    "type" : "String",
    "comment" : "\n         * Specifies the behaviour the lid triggers when closed\n         * <p>\n         * See WindowManagerPolicy.WindowManagerFuncs\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EPHEMERAL_COOKIE_MAX_SIZE_BYTES",
    "type" : "String",
    "comment" : "\n         * Ephemeral app cookie max size in bytes.\n         * <p>\n         * Type: int\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_EPHEMERAL_FEATURE",
    "type" : "String",
    "comment" : "\n         * Toggle to enable/disable the entire ephemeral feature. By default, ephemeral is\n         * enabled. Set to zero to disable.\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INSTANT_APP_DEXOPT_ENABLED",
    "type" : "String",
    "comment" : "\n         * Toggle to enable/disable dexopt for instant applications. The default is for dexopt\n         * to be disabled.\n         * <p>\n         * Type: int (0 to disable, 1 to enable)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INSTALLED_INSTANT_APP_MIN_CACHE_PERIOD",
    "type" : "String",
    "comment" : "\n         * The min period for caching installed instant apps in milliseconds.\n         * <p>\n         * Type: long\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INSTALLED_INSTANT_APP_MAX_CACHE_PERIOD",
    "type" : "String",
    "comment" : "\n         * The max period for caching installed instant apps in milliseconds.\n         * <p>\n         * Type: long\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "UNINSTALLED_INSTANT_APP_MIN_CACHE_PERIOD",
    "type" : "String",
    "comment" : "\n         * The min period for caching uninstalled instant apps in milliseconds.\n         * <p>\n         * Type: long\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "UNINSTALLED_INSTANT_APP_MAX_CACHE_PERIOD",
    "type" : "String",
    "comment" : "\n         * The max period for caching uninstalled instant apps in milliseconds.\n         * <p>\n         * Type: long\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "UNUSED_STATIC_SHARED_LIB_MIN_CACHE_PERIOD",
    "type" : "String",
    "comment" : "\n         * The min period for caching unused static shared libs in milliseconds.\n         * <p>\n         * Type: long\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ALLOW_USER_SWITCHING_WHEN_SYSTEM_USER_LOCKED",
    "type" : "String",
    "comment" : "\n         * Allows switching users when system user is locked.\n         * <p>\n         * Type: int\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BOOT_COUNT",
    "type" : "String",
    "comment" : "\n         * Boot count since the device starts running API level 24.\n         * <p>\n         * Type: int\n         ",
    "links" : [ ]
  }, {
    "name" : "SAFE_BOOT_DISALLOWED",
    "type" : "String",
    "comment" : "\n         * Whether the safe boot is disallowed.\n         *\n         * <p>This setting should have the identical value as the corresponding user restriction.\n         * The purpose of the setting is to make the restriction available in early boot stages\n         * before the user restrictions are loaded.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_DEMO_MODE",
    "type" : "String",
    "comment" : "\n         * Indicates whether this device is currently in retail demo mode. If true, the device\n         * usage is severely limited.\n         * <p>\n         * Type: int (0 for false, 1 for true)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NETWORK_ACCESS_TIMEOUT_MS",
    "type" : "String",
    "comment" : "\n         * Indicates the maximum time that an app is blocked for the network rules to get updated.\n         *\n         * Type: long\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DATABASE_DOWNGRADE_REASON",
    "type" : "String",
    "comment" : "\n         * The reason for the settings database being downgraded. This is only for\n         * troubleshooting purposes and its value should not be interpreted in any way.\n         *\n         * Type: string\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DATABASE_CREATION_BUILDID",
    "type" : "String",
    "comment" : "\n         * The build id of when the settings database was first created (or re-created due it\n         * being missing).\n         *\n         * Type: string\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTACTS_DATABASE_WAL_ENABLED",
    "type" : "String",
    "comment" : "\n         * Flag to toggle journal mode WAL on or off for the contacts database. WAL is enabled by\n         * default. Set to 0 to disable.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOCATION_SETTINGS_LINK_TO_PERMISSIONS_ENABLED",
    "type" : "String",
    "comment" : "\n         * Flag to enable the link to location permissions in location setting. Set to 0 to disable.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EUICC_REMOVING_INVISIBLE_PROFILES_TIMEOUT_MILLIS",
    "type" : "String",
    "comment" : "\n         * Flag to set the waiting time for removing invisible euicc profiles inside System >\n         * Settings.\n         * Type: long\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EUICC_FACTORY_RESET_TIMEOUT_MILLIS",
    "type" : "String",
    "comment" : "\n         * Flag to set the waiting time for euicc factory reset inside System > Settings\n         * Type: long\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "STORAGE_SETTINGS_CLOBBER_THRESHOLD",
    "type" : "String",
    "comment" : "\n         * Flag to set the timeout for when to refresh the storage settings cached data.\n         * Type: long\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOCATION_GLOBAL_KILL_SWITCH",
    "type" : "String",
    "comment" : "\n         * If set to 1, {@link Secure#LOCATION_MODE} will be set to {@link Secure#LOCATION_MODE_OFF}\n         * temporarily for all users.\n         *\n         * @hide\n         ",
    "links" : [ "Secure#LOCATION_MODE", "Secure#LOCATION_MODE_OFF" ]
  }, {
    "name" : "OVERRIDE_SETTINGS_PROVIDER_RESTORE_ANY_VERSION",
    "type" : "String",
    "comment" : "\n         * If set to 1, SettingsProvider's restoreAnyVersion=\"true\" attribute will be ignored\n         * and restoring to lower version of platform API will be skipped.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CHAINED_BATTERY_ATTRIBUTION_ENABLED",
    "type" : "String",
    "comment" : "\n         * Flag to toggle whether system services report attribution chains when they attribute\n         * battery use via a {@code WorkSource}.\n         *\n         * Type: int (0 to disable, 1 to enable)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_ADB_INCREMENTAL_INSTALL_DEFAULT",
    "type" : "String",
    "comment" : "\n         * Toggle to enable/disable the incremental ADB installation by default.\n         * If not set, default adb installations are incremental; set to zero to use full ones.\n         * Note: only ADB uses it, no usages in the Framework code.\n         * <p>\n         * Type: int (0 to disable, 1 to enable)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "AUTOFILL_COMPAT_MODE_ALLOWED_PACKAGES",
    "type" : "String",
    "comment" : "\n         * The packages whitelisted to be run in autofill compatibility mode. The list\n         * of packages is {@code \":\"} colon delimited, and each entry has the name of the\n         * package and an optional list of url bar resource ids (the list is delimited by\n         * brackets&mdash{@code [} and {@code ]}&mdash and is also comma delimited).\n         *\n         * <p>For example, a list with 3 packages {@code p1}, {@code p2}, and {@code p3}, where\n         * package {@code p1} have one id ({@code url_bar}, {@code p2} has none, and {@code p3 }\n         * have 2 ids {@code url_foo} and {@code url_bas}) would be\n         * {@code p1[url_bar]:p2:p3[url_foo,url_bas]}\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "AUTOFILL_LOGGING_LEVEL",
    "type" : "String",
    "comment" : "\n         * Level of autofill logging.\n         *\n         * <p>Valid values are\n         * {@link android.view.autofill.AutofillManager#NO_LOGGING},\n         * {@link android.view.autofill.AutofillManager#FLAG_ADD_CLIENT_DEBUG}, or\n         * {@link android.view.autofill.AutofillManager#FLAG_ADD_CLIENT_VERBOSE}.\n         *\n         * @hide\n         ",
    "links" : [ "android.view.autofill.AutofillManager#NO_LOGGING", "android.view.autofill.AutofillManager#FLAG_ADD_CLIENT_DEBUG", "android.view.autofill.AutofillManager#FLAG_ADD_CLIENT_VERBOSE" ]
  }, {
    "name" : "AUTOFILL_MAX_PARTITIONS_SIZE",
    "type" : "String",
    "comment" : "\n         * Maximum number of partitions that can be allowed in an autofill session.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "AUTOFILL_MAX_VISIBLE_DATASETS",
    "type" : "String",
    "comment" : "\n         * Maximum number of visible datasets in the Autofill dataset picker UI, or {@code 0} to use\n         * the default value from resources.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "HIDDEN_API_BLACKLIST_EXEMPTIONS",
    "type" : "String",
    "comment" : "\n         * Exemptions to the hidden API blacklist.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "HIDDEN_API_POLICY",
    "type" : "String",
    "comment" : "\n         * Hidden API enforcement policy for apps.\n         *\n         * Values correspond to @{@link\n         * android.content.pm.ApplicationInfo.HiddenApiEnforcementPolicy}\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SIGNED_CONFIG_VERSION",
    "type" : "String",
    "comment" : "\n         * Current version of signed configuration applied.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SOUND_TRIGGER_DETECTION_SERVICE_OP_TIMEOUT",
    "type" : "String",
    "comment" : "\n         * Timeout for a single {@link android.media.soundtrigger.SoundTriggerDetectionService}\n         * operation (in ms).\n         *\n         * @hide\n         ",
    "links" : [ "android.media.soundtrigger.SoundTriggerDetectionService" ]
  }, {
    "name" : "MAX_SOUND_TRIGGER_DETECTION_SERVICE_OPS_PER_DAY",
    "type" : "String",
    "comment" : "\n         * Maximum number of {@link android.media.soundtrigger.SoundTriggerDetectionService}\n         * operations per day.\n         *\n         * @hide\n         ",
    "links" : [ "android.media.soundtrigger.SoundTriggerDetectionService" ]
  }, {
    "name" : "ISOLATED_STORAGE_LOCAL",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "ISOLATED_STORAGE_REMOTE",
    "type" : "String",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "AWARE_ALLOWED",
    "type" : "String",
    "comment" : "\n         * Indicates whether aware is available in the current location.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "POWER_BUTTON_LONG_PRESS",
    "type" : "String",
    "comment" : "\n         * Overrides internal R.integer.config_longPressOnPowerBehavior.\n         * Allowable values detailed in frameworks/base/core/res/res/values/config.xml.\n         * Used by PhoneWindowManager.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "POWER_BUTTON_VERY_LONG_PRESS",
    "type" : "String",
    "comment" : "\n         * Overrides internal R.integer.config_veryLongPressOnPowerBehavior.\n         * Allowable values detailed in frameworks/base/core/res/res/values/config.xml.\n         * Used by PhoneWindowManager.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TRANSIENT_SETTINGS",
    "type" : "String[]",
    "comment" : "\n         * Global settings that shouldn't be persisted.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LEGACY_RESTORE_SETTINGS",
    "type" : "String[]",
    "comment" : "\n         * Keys we no longer back up under the current schema, but want to continue to\n         * process when restoring historical backup datasets.\n         *\n         * All settings in {@link LEGACY_RESTORE_SETTINGS} array *must* have a non-null validator,\n         * otherwise they won't be restored.\n         *\n         * @hide\n         ",
    "links" : [ "LEGACY_RESTORE_SETTINGS" ]
  }, {
    "name" : "sProviderHolder",
    "type" : "ContentProviderHolder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sNameValueCache",
    "type" : "NameValueCache",
    "comment" : " Populated lazily, guarded by class object:",
    "links" : [ ]
  }, {
    "name" : "MOVED_TO_SECURE",
    "type" : "HashSet<String>",
    "comment" : " Certain settings have been moved from global to the per-user secure namespace",
    "links" : [ ]
  }, {
    "name" : "MULTI_SIM_VOICE_CALL_SUBSCRIPTION",
    "type" : "String",
    "comment" : "\n          * Subscription Id to be used for voice call on a multi sim device.\n          * @hide\n          ",
    "links" : [ ]
  }, {
    "name" : "MULTI_SIM_VOICE_PROMPT",
    "type" : "String",
    "comment" : "\n          * Used to provide option to user to select subscription during dial.\n          * The supported values are 0 = disable or 1 = enable prompt.\n          * @hide\n          ",
    "links" : [ ]
  }, {
    "name" : "MULTI_SIM_DATA_CALL_SUBSCRIPTION",
    "type" : "String",
    "comment" : "\n          * Subscription Id to be used for data call on a multi sim device.\n          * @hide\n          ",
    "links" : [ ]
  }, {
    "name" : "MULTI_SIM_SMS_SUBSCRIPTION",
    "type" : "String",
    "comment" : "\n          * Subscription Id to be used for SMS on a multi sim device.\n          * @hide\n          ",
    "links" : [ ]
  }, {
    "name" : "MULTI_SIM_SMS_PROMPT",
    "type" : "String",
    "comment" : "\n          * Used to provide option to user to select subscription during send SMS.\n          * The value 1 - enable, 0 - disable\n          * @hide\n          ",
    "links" : [ ]
  }, {
    "name" : "MULTI_SIM_USER_PREFERRED_SUBS",
    "type" : "String[]",
    "comment" : " User preferred subscriptions setting.\n          * This holds the details of the user selected subscription from the card and\n          * the activation status. Each settings string have the comma separated values\n          * iccId,appType,appId,activationStatus,3gppIndex,3gpp2Index\n          * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLED_SUBSCRIPTION_FOR_SLOT",
    "type" : "String",
    "comment" : "\n         * Which subscription is enabled for a physical slot.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "MODEM_STACK_ENABLED_FOR_SLOT",
    "type" : "String",
    "comment" : "\n         * Whether corresponding logical modem is enabled for a physical slot.\n         * The value 1 - enable, 0 - disable\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NEW_CONTACT_AGGREGATOR",
    "type" : "String",
    "comment" : "\n         * Whether to enable new contacts aggregator or not.\n         * The value 1 - enable, 0 - disable\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTACT_METADATA_SYNC",
    "type" : "String",
    "comment" : "\n         * Whether to enable contacts metadata syncing or not\n         * The value 1 - enable, 0 - disable\n         *\n         * @removed\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTACT_METADATA_SYNC_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether to enable contacts metadata syncing or not\n         * The value 1 - enable, 0 - disable\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_CELLULAR_ON_BOOT",
    "type" : "String",
    "comment" : "\n         * Whether to enable cellular on boot.\n         * The value 1 - enable, 0 - disable\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "MAX_NOTIFICATION_ENQUEUE_RATE",
    "type" : "String",
    "comment" : "\n         * The maximum allowed notification enqueue rate in Hertz.\n         *\n         * Should be a float, and includes updates only.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_NOTIFICATION_CHANNEL_WARNINGS",
    "type" : "String",
    "comment" : "\n         * Displays toasts when an app posts a notification that does not specify a valid channel.\n         *\n         * The value 1 - enable, 0 - disable\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CELL_ON",
    "type" : "String",
    "comment" : "\n         * Whether cell is enabled/disabled\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INSTANT_APP_SETTINGS",
    "type" : "Set<String>",
    "comment" : "\n         * Global settings which can be accessed by instant apps.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_TEMPERATURE_WARNING",
    "type" : "String",
    "comment" : "\n         * Whether to show the high temperature warning notification.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_USB_TEMPERATURE_ALARM",
    "type" : "String",
    "comment" : "\n         * Whether to show the usb high temperature alarm notification.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WARNING_TEMPERATURE",
    "type" : "String",
    "comment" : "\n         * Temperature at which the high temperature warning notification should be shown.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_DISKSTATS_LOGGING",
    "type" : "String",
    "comment" : "\n         * Whether the diskstats logging task is enabled/disabled.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_CACHE_QUOTA_CALCULATION",
    "type" : "String",
    "comment" : "\n         * Whether the cache quota calculation task is enabled/disabled.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_DELETION_HELPER_NO_THRESHOLD_TOGGLE",
    "type" : "String",
    "comment" : "\n         * Whether the Deletion Helper no threshold toggle is available.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NOTIFICATION_SNOOZE_OPTIONS",
    "type" : "String",
    "comment" : "\n         * The list of snooze options for notifications\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"default=60,options_array=15:30:60:120\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * default               (int)\n         * options_array         (int[])\n         * </pre>\n         *\n         * All delays in integer minutes. Array order is respected.\n         * Options will be used in order up to the maximum allowed by the UI.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLOCKING_HELPER_DISMISS_TO_VIEW_RATIO_LIMIT",
    "type" : "String",
    "comment" : "\n         * Settings key for the ratio of notification dismissals to notification views - one of the\n         * criteria for showing the notification blocking helper.\n         *\n         * <p>The value is a float ranging from 0.0 to 1.0 (the closer to 0.0, the more intrusive\n         * the blocking helper will be).\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BLOCKING_HELPER_STREAK_LIMIT",
    "type" : "String",
    "comment" : "\n         * Settings key for the longest streak of dismissals  - one of the criteria for showing the\n         * notification blocking helper.\n         *\n         * <p>The value is an integer greater than 0.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SQLITE_COMPATIBILITY_WAL_FLAGS",
    "type" : "String",
    "comment" : "\n         * Configuration flags for SQLite Compatibility WAL. Encoded as a key-value list, separated\n         * by commas. E.g.: compatibility_wal_supported=true, wal_syncmode=OFF\n         *\n         * Supported keys:<br/>\n         * <li>\n         * <ul> {@code legacy_compatibility_wal_enabled} : A {code boolean} flag that determines\n         * whether or not \"compatibility WAL\" mode is enabled by default. This is a legacy flag\n         * and is honoured on Android Q and higher. This flag will be removed in a future release.\n         * </ul>\n         * <ul> {@code wal_syncmode} : A {@code String} representing the synchronization mode to use\n         * when WAL is enabled, either via {@code legacy_compatibility_wal_enabled} or using the\n         * obsolete {@code compatibility_wal_supported} flag.\n         * </ul>\n         * <ul> {@code truncate_size} : A {@code int} flag that specifies the truncate size of the\n         * WAL journal.\n         * </ul>\n         * <ul> {@code compatibility_wal_supported} : A {code boolean} flag that specifies whether\n         * the legacy \"compatibility WAL\" mode is enabled by default. This flag is obsolete and is\n         * only supported on Android Pie.\n         * </ul>\n         * </li>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENABLE_GNSS_RAW_MEAS_FULL_TRACKING",
    "type" : "String",
    "comment" : "\n         * Enable GNSS Raw Measurements Full Tracking?\n         * 0 = no\n         * 1 = yes\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INSTALL_CARRIER_APP_NOTIFICATION_PERSISTENT",
    "type" : "String",
    "comment" : "\n         * Whether the notification should be ongoing (persistent) when a carrier app install is\n         * required.\n         *\n         * The value is a boolean (1 or 0).\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INSTALL_CARRIER_APP_NOTIFICATION_SLEEP_MILLIS",
    "type" : "String",
    "comment" : "\n         * The amount of time (ms) to hide the install carrier app notification after the user has\n         * ignored it. After this time passes, the notification will be shown again\n         *\n         * The value is a long\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ZRAM_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether we've enabled zram on this device. Takes effect on\n         * reboot. The value \"1\" enables zram; \"0\" disables it, and\n         * everything else is unspecified.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_APPS_FREEZER_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether the app freezer is enabled on this device.\n         * The value of \"enabled\" enables the app freezer, \"disabled\" disables it and\n         * \"device_default\" will let the system decide whether to enable the freezer or not\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SMART_REPLIES_IN_NOTIFICATIONS_FLAGS",
    "type" : "String",
    "comment" : "\n         * Configuration flags for smart replies in notifications.\n         * This is encoded as a key=value list, separated by commas. Ex:\n         *\n         * \"enabled=1,max_squeeze_remeasure_count=3\"\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * enabled                           (boolean)\n         * requires_targeting_p              (boolean)\n         * max_squeeze_remeasure_attempts    (int)\n         * edit_choices_before_sending       (boolean)\n         * show_in_heads_up                  (boolean)\n         * min_num_system_generated_replies  (int)\n         * max_num_actions                   (int)\n         * </pre>\n         * @see com.android.systemui.statusbar.policy.SmartReplyConstants\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SMART_SUGGESTIONS_IN_NOTIFICATIONS_FLAGS",
    "type" : "String",
    "comment" : "\n         * Configuration flags for the automatic generation of smart replies and smart actions in\n         * notifications. This is encoded as a key=value list, separated by commas. Ex:\n         * \"generate_replies=false,generate_actions=true\".\n         *\n         * The following keys are supported:\n         *\n         * <pre>\n         * generate_replies                 (boolean)\n         * generate_actions                 (boolean)\n         * </pre>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_FIRST_CRASH_DIALOG",
    "type" : "String",
    "comment" : "\n         * If nonzero, crashes in foreground processes will bring up a dialog.\n         * Otherwise, the process will be silently killed.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_RESTART_IN_CRASH_DIALOG",
    "type" : "String",
    "comment" : "\n         * If nonzero, crash dialogs will show an option to restart the app.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_MUTE_IN_CRASH_DIALOG",
    "type" : "String",
    "comment" : "\n         * If nonzero, crash dialogs will show an option to mute all future crash dialogs for\n         * this app.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "SHOW_ZEN_UPGRADE_NOTIFICATION",
    "type" : "String",
    "comment" : "\n         * If nonzero, will show the zen upgrade notification when the user toggles DND on/off.\n         * @hide\n         * @deprecated - Use {@link android.provider.Settings.Secure#SHOW_ZEN_UPGRADE_NOTIFICATION}\n         ",
    "links" : [ "android.provider.Settings.Secure#SHOW_ZEN_UPGRADE_NOTIFICATION" ]
  }, {
    "name" : "SHOW_ZEN_SETTINGS_SUGGESTION",
    "type" : "String",
    "comment" : "\n         * If nonzero, will show the zen update settings suggestion.\n         * @hide\n         * @deprecated - Use {@link android.provider.Settings.Secure#SHOW_ZEN_SETTINGS_SUGGESTION}\n         ",
    "links" : [ "android.provider.Settings.Secure#SHOW_ZEN_SETTINGS_SUGGESTION" ]
  }, {
    "name" : "ZEN_SETTINGS_UPDATED",
    "type" : "String",
    "comment" : "\n         * If nonzero, zen has not been updated to reflect new changes.\n         * @deprecated - Use {@link android.provider.Settings.Secure#ZEN_SETTINGS_UPDATED}\n         * @hide\n         ",
    "links" : [ "android.provider.Settings.Secure#ZEN_SETTINGS_UPDATED" ]
  }, {
    "name" : "ZEN_SETTINGS_SUGGESTION_VIEWED",
    "type" : "String",
    "comment" : "\n         * If nonzero, zen setting suggestion has been viewed by user\n         * @hide\n         * @deprecated - Use {@link android.provider.Settings.Secure#ZEN_SETTINGS_SUGGESTION_VIEWED}\n         ",
    "links" : [ "android.provider.Settings.Secure#ZEN_SETTINGS_SUGGESTION_VIEWED" ]
  }, {
    "name" : "BACKUP_AGENT_TIMEOUT_PARAMETERS",
    "type" : "String",
    "comment" : "\n         * Backup and restore agent timeout parameters.\n         * These parameters are represented by a comma-delimited key-value list.\n         *\n         * The following strings are supported as keys:\n         * <pre>\n         *     kv_backup_agent_timeout_millis         (long)\n         *     full_backup_agent_timeout_millis       (long)\n         *     shared_backup_agent_timeout_millis     (long)\n         *     restore_agent_timeout_millis           (long)\n         *     restore_agent_finished_timeout_millis  (long)\n         * </pre>\n         *\n         * They map to milliseconds represented as longs.\n         *\n         * Ex: \"kv_backup_agent_timeout_millis=30000,full_backup_agent_timeout_millis=300000\"\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GNSS_SATELLITE_BLACKLIST",
    "type" : "String",
    "comment" : "\n         * Blacklist of GNSS satellites.\n         *\n         * This is a list of integers separated by commas to represent pairs of (constellation,\n         * svid). Thus, the number of integers should be even.\n         *\n         * E.g.: \"3,0,5,24\" denotes (constellation=3, svid=0) and (constellation=5, svid=24) are\n         * blacklisted. Note that svid=0 denotes all svids in the\n         * constellation are blacklisted.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GNSS_HAL_LOCATION_REQUEST_DURATION_MILLIS",
    "type" : "String",
    "comment" : "\n         * Duration of updates in millisecond for GNSS location request from HAL to framework.\n         *\n         * If zero, the GNSS location request feature is disabled.\n         *\n         * The value is a non-negative long.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BINDER_CALLS_STATS",
    "type" : "String",
    "comment" : "\n         * Binder call stats settings.\n         *\n         * The following strings are supported as keys:\n         * <pre>\n         *     enabled              (boolean)\n         *     detailed_tracking    (boolean)\n         *     upload_data          (boolean)\n         *     sampling_interval    (int)\n         * </pre>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LOOPER_STATS",
    "type" : "String",
    "comment" : "\n         * Looper stats settings.\n         *\n         * The following strings are supported as keys:\n         * <pre>\n         *     enabled              (boolean)\n         *     sampling_interval    (int)\n         * </pre>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "KERNEL_CPU_THREAD_READER",
    "type" : "String",
    "comment" : "\n         * Settings for collecting statistics on CPU usage per thread\n         *\n         * The following strings are supported as keys:\n         * <pre>\n         *     num_buckets          (int)\n         *     collected_uids       (string)\n         *     minimum_total_cpu_usage_millis (int)\n         * </pre>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NATIVE_FLAGS_HEALTH_CHECK_ENABLED",
    "type" : "String",
    "comment" : "\n         * Whether we've enabled native flags health check on this device. Takes effect on\n         * reboot. The value \"1\" enables native flags health check; otherwise it's disabled.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APPOP_HISTORY_MODE",
    "type" : "String",
    "comment" : "\n         * Parameter for {@link #APPOP_HISTORY_PARAMETERS} that controls the mode\n         * in which the historical registry operates.\n         *\n         * @hide\n         ",
    "links" : [ "#APPOP_HISTORY_PARAMETERS" ]
  }, {
    "name" : "APPOP_HISTORY_BASE_INTERVAL_MILLIS",
    "type" : "String",
    "comment" : "\n         * Parameter for {@link #APPOP_HISTORY_PARAMETERS} that controls how long\n         * is the interval between snapshots in the base case i.e. the most recent\n         * part of the history.\n         *\n         * @hide\n         ",
    "links" : [ "#APPOP_HISTORY_PARAMETERS" ]
  }, {
    "name" : "APPOP_HISTORY_INTERVAL_MULTIPLIER",
    "type" : "String",
    "comment" : "\n         * Parameter for {@link #APPOP_HISTORY_PARAMETERS} that controls the base\n         * for the logarithmic step when building app op history.\n         *\n         * @hide\n         ",
    "links" : [ "#APPOP_HISTORY_PARAMETERS" ]
  }, {
    "name" : "APPOP_HISTORY_PARAMETERS",
    "type" : "String",
    "comment" : "\n         * Appop history parameters. These parameters are represented by\n         * a comma-delimited key-value list.\n         *\n         * The following strings are supported as keys:\n         * <pre>\n         *     mode                  (int)\n         *     baseIntervalMillis    (long)\n         *     intervalMultiplier    (int)\n         * </pre>\n         *\n         * Ex: \"mode=HISTORICAL_MODE_ENABLED_ACTIVE,baseIntervalMillis=1000,intervalMultiplier=10\"\n         *\n         * @see #APPOP_HISTORY_MODE\n         * @see #APPOP_HISTORY_BASE_INTERVAL_MILLIS\n         * @see #APPOP_HISTORY_INTERVAL_MULTIPLIER\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "AUTO_REVOKE_PARAMETERS",
    "type" : "String",
    "comment" : "\n         * Auto revoke parameters. These parameters are represented by\n         * a comma-delimited key-value list.\n         *\n         * <pre>\n         *     enabledForPreRApps    (bolean)\n         *     unusedThresholdMs     (long)\n         *     checkFrequencyMs      (long)\n         * </pre>\n         *\n         * Ex: \"enabledForPreRApps=false,unusedThresholdMs=7776000000,checkFrequencyMs=1296000000\"\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "BATTERY_CHARGING_STATE_UPDATE_DELAY",
    "type" : "String",
    "comment" : "\n         * Delay for sending ACTION_CHARGING after device is plugged in.\n         * This is used as an override for constants defined in BatteryStatsImpl for\n         * ease of experimentation.\n         *\n         * @see com.android.internal.os.BatteryStatsImpl.Constants.KEY_BATTERY_CHARGED_DELAY_MS\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TEXT_CLASSIFIER_ACTION_MODEL_PARAMS",
    "type" : "String",
    "comment" : "\n         * A serialized string of params that will be loaded into a text classifier action model.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "POWER_BUTTON_SUPPRESSION_DELAY_AFTER_GESTURE_WAKE",
    "type" : "String",
    "comment" : "\n         * The amount of time to suppress \"power-off\" from the power button after the device has\n         * woken due to a gesture (lifting the phone).  Since users have learned to hit the power\n         * button immediately when lifting their device, it can cause the device to turn off if a\n         * gesture has just woken the device. This value tells us the milliseconds to wait after\n         * a gesture before \"power-off\" via power-button is functional again. A value of 0 is no\n         * delay, and reverts to the old behavior.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ADVANCED_BATTERY_USAGE_AMOUNT",
    "type" : "String",
    "comment" : "\n         * The usage amount of advanced battery. The value is 0~100.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NR_NSA_TRACKING_SCREEN_OFF_MODE",
    "type" : "String",
    "comment" : "\n         * For 5G NSA capable devices, determines whether NR tracking indications are on\n         * when the screen is off.\n         *\n         * Values are:\n         * 0: off - All 5G NSA tracking indications are off when the screen is off.\n         * 1: extended - All 5G NSA tracking indications are on when the screen is off as long as\n         *    the device is camped on 5G NSA (5G icon is showing in status bar).\n         *    If the device is not camped on 5G NSA, tracking indications are off.\n         * 2: always on - All 5G NSA tracking indications are on whether the screen is on or off.\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static String zenModeToString(int mode)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isValidZenMode(int value)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static void getMovedToSecureSettings(Set<String> outKeySet)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static void clearProviderForTest()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static String getString(ContentResolver resolver, String name)",
    "returnType" : "String",
    "comment" : "\n         * Look up a name in the database.\n         * @param resolver to access the database with\n         * @param name to look up in the table\n         * @return the corresponding value, or null if not present\n         ",
    "links" : [ ]
  }, {
    "name" : "public static String getStringForUser(ContentResolver resolver, String name, int userHandle)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static boolean putString(ContentResolver resolver, String name, String value)",
    "returnType" : "boolean",
    "comment" : "\n         * Store a name/value pair into the database.\n         * @param resolver to access the database with\n         * @param name to store\n         * @param value to associate with the name\n         * @return true if the value was set, false on database errors\n         ",
    "links" : [ ]
  }, {
    "name" : "public static boolean putString(@NonNull ContentResolver resolver, @NonNull String name, @Nullable String value, @Nullable String tag, boolean makeDefault, boolean overrideableByRestore)",
    "returnType" : "boolean",
    "comment" : "\n         * Store a name/value pair into the database.\n         *\n         * @param resolver to access the database with\n         * @param name to store\n         * @param value to associate with the name\n         * @param tag to associated with the setting.\n         * @param makeDefault whether to make the value the default one.\n         * @param overrideableByRestore whether restore can override this value\n         * @return true if the value was set, false on database errors\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static boolean putString(@NonNull ContentResolver resolver, @NonNull String name, @Nullable String value, @Nullable String tag, boolean makeDefault)",
    "returnType" : "boolean",
    "comment" : "\n         * Store a name/value pair into the database.\n         * <p>\n         * The method takes an optional tag to associate with the setting\n         * which can be used to clear only settings made by your package and\n         * associated with this tag by passing the tag to {@link\n         * #resetToDefaults(ContentResolver, String)}. Anyone can override\n         * the current tag. Also if another package changes the setting\n         * then the tag will be set to the one specified in the set call\n         * which can be null. Also any of the settings setters that do not\n         * take a tag as an argument effectively clears the tag.\n         * </p><p>\n         * For example, if you set settings A and B with tags T1 and T2 and\n         * another app changes setting A (potentially to the same value), it\n         * can assign to it a tag T3 (note that now the package that changed\n         * the setting is not yours). Now if you reset your changes for T1 and\n         * T2 only setting B will be reset and A not (as it was changed by\n         * another package) but since A did not change you are in the desired\n         * initial state. Now if the other app changes the value of A (assuming\n         * you registered an observer in the beginning) you would detect that\n         * the setting was changed by another app and handle this appropriately\n         * (ignore, set back to some value, etc).\n         * </p><p>\n         * Also the method takes an argument whether to make the value the\n         * default for this setting. If the system already specified a default\n         * value, then the one passed in here will <strong>not</strong>\n         * be set as the default.\n         * </p>\n         *\n         * @param resolver to access the database with.\n         * @param name to store.\n         * @param value to associate with the name.\n         * @param tag to associated with the setting.\n         * @param makeDefault whether to make the value the default one.\n         * @return true if the value was set, false on database errors.\n         *\n         * @see #resetToDefaults(ContentResolver, String)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static void resetToDefaults(@NonNull ContentResolver resolver, @Nullable String tag)",
    "returnType" : "void",
    "comment" : "\n         * Reset the settings to their defaults. This would reset <strong>only</strong>\n         * settings set by the caller's package. Think of it of a way to undo your own\n         * changes to the secure settings. Passing in the optional tag will reset only\n         * settings changed by your package and associated with this tag.\n         *\n         * @param resolver Handle to the content resolver.\n         * @param tag Optional tag which should be associated with the settings to reset.\n         *\n         * @see #putString(ContentResolver, String, String, String, boolean)\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static void resetToDefaultsAsUser(@NonNull ContentResolver resolver, @Nullable String tag, @ResetMode int mode, @IntRange(from = 0) int userHandle)",
    "returnType" : "void",
    "comment" : "\n         * Reset the settings to their defaults for a given user with a specific mode. The\n         * optional tag argument is valid only for {@link #RESET_MODE_PACKAGE_DEFAULTS}\n         * allowing resetting the settings made by a package and associated with the tag.\n         *\n         * @param resolver Handle to the content resolver.\n         * @param tag Optional tag which should be associated with the settings to reset.\n         * @param mode The reset mode.\n         * @param userHandle The user for which to reset to defaults.\n         *\n         * @see #RESET_MODE_PACKAGE_DEFAULTS\n         * @see #RESET_MODE_UNTRUSTED_DEFAULTS\n         * @see #RESET_MODE_UNTRUSTED_CHANGES\n         * @see #RESET_MODE_TRUSTED_DEFAULTS\n         *\n         * @hide\n         ",
    "links" : [ "#RESET_MODE_PACKAGE_DEFAULTS" ]
  }, {
    "name" : "public static boolean putStringForUser(ContentResolver resolver, String name, String value, int userHandle)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static boolean putStringForUser(@NonNull ContentResolver resolver, @NonNull String name, @Nullable String value, @Nullable String tag, boolean makeDefault, @UserIdInt int userHandle, boolean overrideableByRestore)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static Uri getUriFor(String name)",
    "returnType" : "Uri",
    "comment" : "\n         * Construct the content URI for a particular name/value pair,\n         * useful for monitoring changes with a ContentObserver.\n         * @param name to look up in the table\n         * @return the corresponding content URI, or null if not present\n         ",
    "links" : [ ]
  }, {
    "name" : "public static int getInt(ContentResolver cr, String name, int def)",
    "returnType" : "int",
    "comment" : "\n         * Convenience function for retrieving a single secure settings value\n         * as an integer.  Note that internally setting values are always\n         * stored as strings; this function converts the string to an integer\n         * for you.  The default value will be returned if the setting is\n         * not defined or not an integer.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to retrieve.\n         * @param def Value to return if the setting is not defined.\n         *\n         * @return The setting's current value, or 'def' if it is not defined\n         * or not a valid integer.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static int getInt(ContentResolver cr, String name) throws SettingNotFoundException",
    "returnType" : "int",
    "comment" : "\n         * Convenience function for retrieving a single secure settings value\n         * as an integer.  Note that internally setting values are always\n         * stored as strings; this function converts the string to an integer\n         * for you.\n         * <p>\n         * This version does not take a default value.  If the setting has not\n         * been set, or the string value is not a number,\n         * it throws {@link SettingNotFoundException}.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to retrieve.\n         *\n         * @throws SettingNotFoundException Thrown if a setting by the given\n         * name can't be found or the setting value is not an integer.\n         *\n         * @return The setting's current value.\n         ",
    "links" : [ "SettingNotFoundException" ]
  }, {
    "name" : "public static boolean putInt(ContentResolver cr, String name, int value)",
    "returnType" : "boolean",
    "comment" : "\n         * Convenience function for updating a single settings value as an\n         * integer. This will either create a new entry in the table if the\n         * given name does not exist, or modify the value of the existing row\n         * with that name.  Note that internally setting values are always\n         * stored as strings, so this function converts the given value to a\n         * string before storing it.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to modify.\n         * @param value The new value for the setting.\n         * @return true if the value was set, false on database errors\n         ",
    "links" : [ ]
  }, {
    "name" : "public static long getLong(ContentResolver cr, String name, long def)",
    "returnType" : "long",
    "comment" : "\n         * Convenience function for retrieving a single secure settings value\n         * as a {@code long}.  Note that internally setting values are always\n         * stored as strings; this function converts the string to a {@code long}\n         * for you.  The default value will be returned if the setting is\n         * not defined or not a {@code long}.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to retrieve.\n         * @param def Value to return if the setting is not defined.\n         *\n         * @return The setting's current value, or 'def' if it is not defined\n         * or not a valid {@code long}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static long getLong(ContentResolver cr, String name) throws SettingNotFoundException",
    "returnType" : "long",
    "comment" : "\n         * Convenience function for retrieving a single secure settings value\n         * as a {@code long}.  Note that internally setting values are always\n         * stored as strings; this function converts the string to a {@code long}\n         * for you.\n         * <p>\n         * This version does not take a default value.  If the setting has not\n         * been set, or the string value is not a number,\n         * it throws {@link SettingNotFoundException}.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to retrieve.\n         *\n         * @return The setting's current value.\n         * @throws SettingNotFoundException Thrown if a setting by the given\n         * name can't be found or the setting value is not an integer.\n         ",
    "links" : [ "SettingNotFoundException" ]
  }, {
    "name" : "public static boolean putLong(ContentResolver cr, String name, long value)",
    "returnType" : "boolean",
    "comment" : "\n         * Convenience function for updating a secure settings value as a long\n         * integer. This will either create a new entry in the table if the\n         * given name does not exist, or modify the value of the existing row\n         * with that name.  Note that internally setting values are always\n         * stored as strings, so this function converts the given value to a\n         * string before storing it.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to modify.\n         * @param value The new value for the setting.\n         * @return true if the value was set, false on database errors\n         ",
    "links" : [ ]
  }, {
    "name" : "public static float getFloat(ContentResolver cr, String name, float def)",
    "returnType" : "float",
    "comment" : "\n         * Convenience function for retrieving a single secure settings value\n         * as a floating point number.  Note that internally setting values are\n         * always stored as strings; this function converts the string to an\n         * float for you. The default value will be returned if the setting\n         * is not defined or not a valid float.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to retrieve.\n         * @param def Value to return if the setting is not defined.\n         *\n         * @return The setting's current value, or 'def' if it is not defined\n         * or not a valid float.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static float getFloat(ContentResolver cr, String name) throws SettingNotFoundException",
    "returnType" : "float",
    "comment" : "\n         * Convenience function for retrieving a single secure settings value\n         * as a float.  Note that internally setting values are always\n         * stored as strings; this function converts the string to a float\n         * for you.\n         * <p>\n         * This version does not take a default value.  If the setting has not\n         * been set, or the string value is not a number,\n         * it throws {@link SettingNotFoundException}.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to retrieve.\n         *\n         * @throws SettingNotFoundException Thrown if a setting by the given\n         * name can't be found or the setting value is not a float.\n         *\n         * @return The setting's current value.\n         ",
    "links" : [ "SettingNotFoundException" ]
  }, {
    "name" : "public static boolean putFloat(ContentResolver cr, String name, float value)",
    "returnType" : "boolean",
    "comment" : "\n         * Convenience function for updating a single settings value as a\n         * floating point number. This will either create a new entry in the\n         * table if the given name does not exist, or modify the value of the\n         * existing row with that name.  Note that internally setting values\n         * are always stored as strings, so this function converts the given\n         * value to a string before storing it.\n         *\n         * @param cr The ContentResolver to access.\n         * @param name The name of the setting to modify.\n         * @param value The new value for the setting.\n         * @return true if the value was set, false on database errors\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "CONTENT_URI", "NOTIFICATION_BUBBLES", "ADD_USERS_WHEN_LOCKED", "APPLY_RAMPING_RINGER", "ENABLE_ACCESSIBILITY_GLOBAL_GESTURE_ENABLED", "AIRPLANE_MODE_ON", "THEATER_MODE_ON", "RADIO_BLUETOOTH", "RADIO_WIFI", "RADIO_WIMAX", "RADIO_CELL", "RADIO_NFC", "AIRPLANE_MODE_RADIOS", "AIRPLANE_MODE_TOGGLEABLE_RADIOS", "BLUETOOTH_CLASS_OF_DEVICE", "BLUETOOTH_DISABLED_PROFILES", "BLUETOOTH_INTEROPERABILITY_LIST", "WIFI_SLEEP_POLICY", "WIFI_SLEEP_POLICY_DEFAULT", "WIFI_SLEEP_POLICY_NEVER_WHILE_PLUGGED", "WIFI_SLEEP_POLICY_NEVER", "AUTO_TIME", "AUTO_TIME_ZONE", "CAR_DOCK_SOUND", "CAR_UNDOCK_SOUND", "DESK_DOCK_SOUND", "DESK_UNDOCK_SOUND", "DOCK_SOUNDS_ENABLED", "DOCK_SOUNDS_ENABLED_WHEN_ACCESSIBILITY", "LOCK_SOUND", "UNLOCK_SOUND", "TRUSTED_SOUND", "LOW_BATTERY_SOUND", "POWER_SOUNDS_ENABLED", "WIRELESS_CHARGING_STARTED_SOUND", "CHARGING_STARTED_SOUND", "CHARGING_SOUNDS_ENABLED", "CHARGING_VIBRATION_ENABLED", "STAY_ON_WHILE_PLUGGED_IN", "BUGREPORT_IN_POWER_MENU", "CUSTOM_BUGREPORT_HANDLER_APP", "CUSTOM_BUGREPORT_HANDLER_USER", "ADB_ENABLED", "ADB_WIFI_ENABLED", "DEBUG_VIEW_ATTRIBUTES", "DEBUG_VIEW_ATTRIBUTES_APPLICATION_PACKAGE", "ASSISTED_GPS_ENABLED", "BLUETOOTH_ON", "CDMA_CELL_BROADCAST_SMS", "CDMA_ROAMING_MODE", "CDMA_SUBSCRIPTION_MODE", "DEFAULT_RESTRICT_BACKGROUND_DATA", "DATA_ACTIVITY_TIMEOUT_MOBILE", "DATA_ACTIVITY_TIMEOUT_WIFI", "DATA_ROAMING", "MDC_INITIAL_MAX_RETRY", "FORCE_ALLOW_ON_EXTERNAL", "DEFAULT_SM_DP_PLUS", "EUICC_PROVISIONED", "EUICC_SUPPORTED_COUNTRIES", "EUICC_UNSUPPORTED_COUNTRIES", "DEVELOPMENT_FORCE_RESIZABLE_ACTIVITIES", "DEVELOPMENT_ENABLE_FREEFORM_WINDOWS_SUPPORT", "DEVELOPMENT_FORCE_DESKTOP_MODE_ON_EXTERNAL_DISPLAYS", "DEVELOPMENT_ENABLE_SIZECOMPAT_FREEFORM", "DEVELOPMENT_RENDER_SHADOWS_IN_COMPOSITOR", "DEVELOPMENT_SETTINGS_ENABLED", "DEVICE_PROVISIONED", "DEVICE_PROVISIONING_MOBILE_DATA_ENABLED", "DISPLAY_SIZE_FORCED", "DISPLAY_SCALING_FORCE", "DOWNLOAD_MAX_BYTES_OVER_MOBILE", "DOWNLOAD_RECOMMENDED_MAX_BYTES_OVER_MOBILE", "INSTALL_NON_MARKET_APPS", "HDMI_CONTROL_ENABLED", "HDMI_CONTROL_VOLUME_CONTROL_ENABLED", "HDMI_SYSTEM_AUDIO_CONTROL_ENABLED", "HDMI_CEC_SWITCH_ENABLED", "HDMI_CONTROL_AUTO_WAKEUP_ENABLED", "HDMI_CONTROL_AUTO_DEVICE_OFF_ENABLED", "SHOW_MEDIA_ON_QUICK_SETTINGS", "LOCATION_BACKGROUND_THROTTLE_INTERVAL_MS", "LOCATION_BACKGROUND_THROTTLE_PROXIMITY_ALERT_INTERVAL_MS", "LOCATION_BACKGROUND_THROTTLE_PACKAGE_WHITELIST", "LOCATION_IGNORE_SETTINGS_PACKAGE_WHITELIST", "MHL_INPUT_SWITCHING_ENABLED", "MHL_POWER_CHARGE_ENABLED", "MOBILE_DATA", "MOBILE_DATA_ALWAYS_ON", "WIFI_ALWAYS_REQUESTED", "CONNECTIVITY_METRICS_BUFFER_SIZE", "NETSTATS_ENABLED", "NETSTATS_POLL_INTERVAL", "NETSTATS_TIME_CACHE_MAX_AGE", "NETSTATS_GLOBAL_ALERT_BYTES", "NETSTATS_SAMPLE_ENABLED", "NETSTATS_AUGMENT_ENABLED", "NETSTATS_COMBINE_SUBTYPE_ENABLED", "NETSTATS_DEV_BUCKET_DURATION", "NETSTATS_DEV_PERSIST_BYTES", "NETSTATS_DEV_ROTATE_AGE", "NETSTATS_DEV_DELETE_AGE", "NETSTATS_UID_BUCKET_DURATION", "NETSTATS_UID_PERSIST_BYTES", "NETSTATS_UID_ROTATE_AGE", "NETSTATS_UID_DELETE_AGE", "NETSTATS_UID_TAG_BUCKET_DURATION", "NETSTATS_UID_TAG_PERSIST_BYTES", "NETSTATS_UID_TAG_ROTATE_AGE", "NETSTATS_UID_TAG_DELETE_AGE", "NETPOLICY_QUOTA_ENABLED", "NETPOLICY_QUOTA_UNLIMITED", "NETPOLICY_QUOTA_LIMITED", "NETPOLICY_QUOTA_FRAC_JOBS", "NETPOLICY_QUOTA_FRAC_MULTIPATH", "NETPOLICY_OVERRIDE_ENABLED", "NETWORK_PREFERENCE", "NETWORK_SCORER_APP", "NIGHT_DISPLAY_FORCED_AUTO_MODE_AVAILABLE", "NITZ_UPDATE_DIFF", "NITZ_UPDATE_SPACING", "NTP_SERVER", "NTP_TIMEOUT", "STORAGE_BENCHMARK_INTERVAL", "SETTINGS_USE_PSD_API", "SETTINGS_USE_EXTERNAL_PROVIDER_API", "DNS_RESOLVER_SAMPLE_VALIDITY_SECONDS", "DNS_RESOLVER_SUCCESS_THRESHOLD_PERCENT", "DNS_RESOLVER_MIN_SAMPLES", "DNS_RESOLVER_MAX_SAMPLES", "OTA_DISABLE_AUTOMATIC_UPDATE", "PACKAGE_VERIFIER_TIMEOUT", "APP_INTEGRITY_VERIFICATION_TIMEOUT", "PACKAGE_VERIFIER_DEFAULT_RESPONSE", "PACKAGE_VERIFIER_SETTING_VISIBLE", "PACKAGE_VERIFIER_INCLUDE_ADB", "INTEGRITY_CHECK_INCLUDES_RULE_PROVIDER", "FSTRIM_MANDATORY_INTERVAL", "PDP_WATCHDOG_POLL_INTERVAL_MS", "PDP_WATCHDOG_LONG_POLL_INTERVAL_MS", "PDP_WATCHDOG_ERROR_POLL_INTERVAL_MS", "PDP_WATCHDOG_TRIGGER_PACKET_COUNT", "PDP_WATCHDOG_ERROR_POLL_COUNT", "PDP_WATCHDOG_MAX_PDP_RESET_FAIL_COUNT", "SETUP_PREPAID_DATA_SERVICE_URL", "SETUP_PREPAID_DETECTION_TARGET_URL", "SETUP_PREPAID_DETECTION_REDIR_HOST", "SMS_OUTGOING_CHECK_INTERVAL_MS", "SMS_OUTGOING_CHECK_MAX_COUNT", "SMS_SHORT_CODE_CONFIRMATION", "SMS_SHORT_CODE_RULE", "TCP_DEFAULT_INIT_RWND", "TETHER_SUPPORTED", "TETHER_DUN_REQUIRED", "TETHER_DUN_APN", "TETHER_OFFLOAD_DISABLED", "TETHER_ENABLE_LEGACY_DHCP_SERVER", "CARRIER_APP_WHITELIST", "CARRIER_APP_NAMES", "USB_MASS_STORAGE_ENABLED", "USE_GOOGLE_MAIL", "USER_SWITCHER_ENABLED", "WEBVIEW_DATA_REDUCTION_PROXY_KEY", "WEBVIEW_FALLBACK_LOGIC_ENABLED", "WEBVIEW_PROVIDER", "WEBVIEW_MULTIPROCESS", "NETWORK_SWITCH_NOTIFICATION_DAILY_LIMIT", "NETWORK_SWITCH_NOTIFICATION_RATE_LIMIT_MILLIS", "NETWORK_AVOID_BAD_WIFI", "NETWORK_METERED_MULTIPATH_PREFERENCE", "NETWORK_DEFAULT_DAILY_MULTIPATH_QUOTA_BYTES", "NETWORK_WATCHLIST_LAST_REPORT_TIME", "WIFI_BADGING_THRESHOLDS", "WIFI_DISPLAY_ON", "WIFI_DISPLAY_CERTIFICATION_ON", "WIFI_DISPLAY_WPS_CONFIG", "WIFI_NETWORKS_AVAILABLE_NOTIFICATION_ON", "WIMAX_NETWORKS_AVAILABLE_NOTIFICATION_ON", "WIFI_NETWORKS_AVAILABLE_REPEAT_DELAY", "WIFI_COUNTRY_CODE", "WIFI_FRAMEWORK_SCAN_INTERVAL_MS", "WIFI_IDLE_MS", "WIFI_NUM_OPEN_NETWORKS_KEPT", "WIFI_ON", "WIFI_SCAN_ALWAYS_AVAILABLE", "WIFI_P2P_PENDING_FACTORY_RESET", "SOFT_AP_TIMEOUT_ENABLED", "WIFI_WAKEUP_ENABLED", "WIFI_MIGRATION_COMPLETED", "NETWORK_SCORING_UI_ENABLED", "SPEED_LABEL_CACHE_EVICTION_AGE_MILLIS", "NETWORK_RECOMMENDATIONS_ENABLED", "NETWORK_RECOMMENDATIONS_PACKAGE", "USE_OPEN_WIFI_PACKAGE", "RECOMMENDED_NETWORK_EVALUATOR_CACHE_EXPIRY_MS", "WIFI_SCAN_THROTTLE_ENABLED", "BLE_SCAN_ALWAYS_AVAILABLE", "BLE_SCAN_LOW_POWER_WINDOW_MS", "BLE_SCAN_BALANCED_WINDOW_MS", "BLE_SCAN_LOW_LATENCY_WINDOW_MS", "BLE_SCAN_LOW_POWER_INTERVAL_MS", "BLE_SCAN_BALANCED_INTERVAL_MS", "BLE_SCAN_LOW_LATENCY_INTERVAL_MS", "BLE_SCAN_BACKGROUND_MODE", "WIFI_SUPPLICANT_SCAN_INTERVAL_MS", "WIFI_ENHANCED_AUTO_JOIN", "WIFI_NETWORK_SHOW_RSSI", "WIFI_SCAN_INTERVAL_WHEN_P2P_CONNECTED_MS", "WIFI_WATCHDOG_ON", "WIFI_WATCHDOG_POOR_NETWORK_TEST_ENABLED", "WIFI_VERBOSE_LOGGING_ENABLED", "WIFI_CONNECTED_MAC_RANDOMIZATION_ENABLED", "WIFI_SCORE_PARAMS", "WIFI_MAX_DHCP_RETRY_COUNT", "WIFI_MOBILE_DATA_TRANSITION_WAKELOCK_TIMEOUT_MS", "WIFI_DEVICE_OWNER_CONFIGS_LOCKDOWN", "WIFI_FREQUENCY_BAND", "WIFI_P2P_DEVICE_NAME", "WIFI_EPHEMERAL_OUT_OF_RANGE_TIMEOUT_MS", "DATA_STALL_ALARM_NON_AGGRESSIVE_DELAY_IN_MS", "DATA_STALL_ALARM_AGGRESSIVE_DELAY_IN_MS", "PROVISIONING_APN_ALARM_DELAY_IN_MS", "GPRS_REGISTER_CHECK_PERIOD_MS", "WTF_IS_FATAL", "MODE_RINGER", "ENHANCED_CONNECTIVITY_ENABLED", "OVERLAY_DISPLAY_DEVICES", "BATTERY_DISCHARGE_DURATION_THRESHOLD", "BATTERY_DISCHARGE_THRESHOLD", "SEND_ACTION_APP_ERROR", "DROPBOX_AGE_SECONDS", "DROPBOX_MAX_FILES", "DROPBOX_QUOTA_KB", "DROPBOX_QUOTA_PERCENT", "DROPBOX_RESERVE_PERCENT", "DROPBOX_TAG_PREFIX", "ERROR_LOGCAT_PREFIX", "MAX_ERROR_BYTES_PREFIX", "SYS_FREE_STORAGE_LOG_INTERVAL", "DISK_FREE_CHANGE_REPORTING_THRESHOLD", "SYS_STORAGE_THRESHOLD_PERCENTAGE", "SYS_STORAGE_THRESHOLD_MAX_BYTES", "SYS_STORAGE_FULL_THRESHOLD_BYTES", "SYS_STORAGE_CACHE_PERCENTAGE", "SYS_STORAGE_CACHE_MAX_BYTES", "SYNC_MAX_RETRY_DELAY_IN_SECONDS", "CONNECTIVITY_CHANGE_DELAY", "CONNECTIVITY_SAMPLING_INTERVAL_IN_SECONDS", "PAC_CHANGE_DELAY", "CAPTIVE_PORTAL_MODE_IGNORE", "CAPTIVE_PORTAL_MODE_PROMPT", "CAPTIVE_PORTAL_MODE_AVOID", "CAPTIVE_PORTAL_MODE", "CAPTIVE_PORTAL_DETECTION_ENABLED", "CAPTIVE_PORTAL_SERVER", "CAPTIVE_PORTAL_HTTPS_URL", "CAPTIVE_PORTAL_HTTP_URL", "CAPTIVE_PORTAL_FALLBACK_URL", "CAPTIVE_PORTAL_OTHER_FALLBACK_URLS", "CAPTIVE_PORTAL_FALLBACK_PROBE_SPECS", "CAPTIVE_PORTAL_USE_HTTPS", "CAPTIVE_PORTAL_USER_AGENT", "DATA_STALL_RECOVERY_ON_BAD_NETWORK", "MIN_DURATION_BETWEEN_RECOVERY_STEPS_IN_MS", "NSD_ON", "SET_INSTALL_LOCATION", "DEFAULT_INSTALL_LOCATION", "INET_CONDITION_DEBOUNCE_UP_DELAY", "INET_CONDITION_DEBOUNCE_DOWN_DELAY", "READ_EXTERNAL_STORAGE_ENFORCED_DEFAULT", "HTTP_PROXY", "GLOBAL_HTTP_PROXY_HOST", "GLOBAL_HTTP_PROXY_PORT", "GLOBAL_HTTP_PROXY_EXCLUSION_LIST", "GLOBAL_HTTP_PROXY_PAC", "SET_GLOBAL_HTTP_PROXY", "DEFAULT_DNS_SERVER", "PRIVATE_DNS_MODE", "PRIVATE_DNS_SPECIFIER", "PRIVATE_DNS_DEFAULT_MODE", "BLUETOOTH_BTSNOOP_DEFAULT_MODE", "BLUETOOTH_HEADSET_PRIORITY_PREFIX", "BLUETOOTH_A2DP_SINK_PRIORITY_PREFIX", "BLUETOOTH_A2DP_SRC_PRIORITY_PREFIX", "BLUETOOTH_A2DP_SUPPORTS_OPTIONAL_CODECS_PREFIX", "BLUETOOTH_A2DP_OPTIONAL_CODECS_ENABLED_PREFIX", "BLUETOOTH_INPUT_DEVICE_PRIORITY_PREFIX", "BLUETOOTH_MAP_PRIORITY_PREFIX", "BLUETOOTH_MAP_CLIENT_PRIORITY_PREFIX", "BLUETOOTH_PBAP_CLIENT_PRIORITY_PREFIX", "BLUETOOTH_SAP_PRIORITY_PREFIX", "BLUETOOTH_PAN_PRIORITY_PREFIX", "BLUETOOTH_HEARING_AID_PRIORITY_PREFIX", "ENABLE_RADIO_BUG_DETECTION", "RADIO_BUG_WAKELOCK_TIMEOUT_COUNT_THRESHOLD", "RADIO_BUG_SYSTEM_ERROR_COUNT_THRESHOLD", "ACTIVITY_MANAGER_CONSTANTS", "ACTIVITY_STARTS_LOGGING_ENABLED", "FOREGROUND_SERVICE_STARTS_LOGGING_ENABLED", "APP_BINDING_CONSTANTS", "APP_OPS_CONSTANTS", "DEVICE_IDLE_CONSTANTS", "BATTERY_SAVER_CONSTANTS", "BATTERY_SAVER_DEVICE_SPECIFIC_CONSTANTS", "BATTERY_SAVER_ADAPTIVE_CONSTANTS", "BATTERY_SAVER_ADAPTIVE_DEVICE_SPECIFIC_CONSTANTS", "BATTERY_TIP_CONSTANTS", "ANOMALY_DETECTION_CONSTANTS", "ANOMALY_CONFIG_VERSION", "ANOMALY_CONFIG", "ALWAYS_ON_DISPLAY_CONSTANTS", "SYS_VDSO", "SYS_UIDCPUPOWER", "SYS_TRACED", "FPS_DEVISOR", "DISPLAY_PANEL_LPM", "APP_TIME_LIMIT_USAGE_SOURCE", "APP_IDLE_CONSTANTS", "ART_VERIFIER_VERIFY_DEBUGGABLE", "POWER_MANAGER_CONSTANTS", "ALARM_MANAGER_CONSTANTS", "JOB_SCHEDULER_CONSTANTS", "JOB_SCHEDULER_QUOTA_CONTROLLER_CONSTANTS", "JOB_SCHEDULER_TIME_CONTROLLER_CONSTANTS", "SHORTCUT_MANAGER_CONSTANTS", "DEVICE_POLICY_CONSTANTS", "TEXT_CLASSIFIER_CONSTANTS", "BATTERY_STATS_CONSTANTS", "SYNC_MANAGER_CONSTANTS", "BROADCAST_FG_CONSTANTS", "BROADCAST_BG_CONSTANTS", "BROADCAST_OFFLOAD_CONSTANTS", "APP_STANDBY_ENABLED", "ADAPTIVE_BATTERY_MANAGEMENT_ENABLED", "ENABLE_RESTRICTED_BUCKET", "DEFAULT_ENABLE_RESTRICTED_BUCKET", "APP_AUTO_RESTRICTION_ENABLED", "FORCED_APP_STANDBY_ENABLED", "FORCED_APP_STANDBY_FOR_SMALL_BATTERY_ENABLED", "USER_ABSENT_RADIOS_OFF_FOR_SMALL_BATTERY_ENABLED", "USER_ABSENT_TOUCH_OFF_FOR_SMALL_BATTERY_ENABLED", "WIFI_ON_WHEN_PROXY_DISCONNECTED", "TIME_ONLY_MODE_CONSTANTS", "UNGAZE_SLEEP_ENABLED", "NETWORK_WATCHLIST_ENABLED", "SHOW_HIDDEN_LAUNCHER_ICON_APPS_ENABLED", "SHOW_NEW_APP_INSTALLED_NOTIFICATION_ENABLED", "KEEP_PROFILE_IN_BACKGROUND", "DEFAULT_ADB_ALLOWED_CONNECTION_TIME", "ADB_ALLOWED_CONNECTION_TIME", "WINDOW_ANIMATION_SCALE", "TRANSITION_ANIMATION_SCALE", "ANIMATOR_DURATION_SCALE", "FANCY_IME_ANIMATIONS", "COMPATIBILITY_MODE", "EMERGENCY_TONE", "CALL_AUTO_RETRY", "EMERGENCY_AFFORDANCE_NEEDED", "ENABLE_AUTOMATIC_SYSTEM_SERVER_HEAP_DUMPS", "PREFERRED_NETWORK_MODE", "DEBUG_APP", "WAIT_FOR_DEBUGGER", "ENABLE_GPU_DEBUG_LAYERS", "GPU_DEBUG_APP", "GLOBAL_SETTINGS_ANGLE_DEBUG_PACKAGE", "GLOBAL_SETTINGS_ANGLE_GL_DRIVER_ALL_ANGLE", "GLOBAL_SETTINGS_ANGLE_GL_DRIVER_SELECTION_PKGS", "GLOBAL_SETTINGS_ANGLE_GL_DRIVER_SELECTION_VALUES", "GLOBAL_SETTINGS_ANGLE_WHITELIST", "GLOBAL_SETTINGS_SHOW_ANGLE_IN_USE_DIALOG_BOX", "GAME_DRIVER_ALL_APPS", "GAME_DRIVER_OPT_IN_APPS", "GAME_DRIVER_PRERELEASE_OPT_IN_APPS", "GAME_DRIVER_OPT_OUT_APPS", "GAME_DRIVER_BLACKLIST", "GAME_DRIVER_BLACKLISTS", "GAME_DRIVER_WHITELIST", "GAME_DRIVER_SPHAL_LIBRARIES", "GPU_DEBUG_LAYERS", "GPU_DEBUG_LAYERS_GLES", "GPU_DEBUG_LAYER_APP", "SHOW_PROCESSES", "LOW_POWER_MODE", "LOW_POWER_MODE_STICKY", "LOW_POWER_MODE_STICKY_AUTO_DISABLE_LEVEL", "LOW_POWER_MODE_STICKY_AUTO_DISABLE_ENABLED", "LOW_POWER_MODE_TRIGGER_LEVEL", "AUTOMATIC_POWER_SAVE_MODE", "DYNAMIC_POWER_SAVINGS_DISABLE_THRESHOLD", "DYNAMIC_POWER_SAVINGS_ENABLED", "TIME_REMAINING_ESTIMATE_MILLIS", "TIME_REMAINING_ESTIMATE_BASED_ON_USAGE", "AVERAGE_TIME_TO_DISCHARGE", "BATTERY_ESTIMATES_LAST_UPDATE_TIME", "LOW_POWER_MODE_TRIGGER_LEVEL_MAX", "LOW_POWER_MODE_SUGGESTION_PARAMS", "ALWAYS_FINISH_ACTIVITIES", "HIDE_ERROR_DIALOGS", "DOCK_AUDIO_MEDIA_ENABLED", "ENCODED_SURROUND_OUTPUT_AUTO", "ENCODED_SURROUND_OUTPUT_NEVER", "ENCODED_SURROUND_OUTPUT_ALWAYS", "ENCODED_SURROUND_OUTPUT_MANUAL", "ENCODED_SURROUND_OUTPUT", "ENCODED_SURROUND_OUTPUT_ENABLED_FORMATS", "AUDIO_SAFE_VOLUME_STATE", "TZINFO_UPDATE_CONTENT_URL", "TZINFO_UPDATE_METADATA_URL", "SELINUX_UPDATE_CONTENT_URL", "SELINUX_UPDATE_METADATA_URL", "SMS_SHORT_CODES_UPDATE_CONTENT_URL", "SMS_SHORT_CODES_UPDATE_METADATA_URL", "APN_DB_UPDATE_CONTENT_URL", "APN_DB_UPDATE_METADATA_URL", "CERT_PIN_UPDATE_CONTENT_URL", "CERT_PIN_UPDATE_METADATA_URL", "INTENT_FIREWALL_UPDATE_CONTENT_URL", "INTENT_FIREWALL_UPDATE_METADATA_URL", "LANG_ID_UPDATE_CONTENT_URL", "LANG_ID_UPDATE_METADATA_URL", "SMART_SELECTION_UPDATE_CONTENT_URL", "SMART_SELECTION_UPDATE_METADATA_URL", "CONVERSATION_ACTIONS_UPDATE_CONTENT_URL", "CONVERSATION_ACTIONS_UPDATE_METADATA_URL", "SELINUX_STATUS", "DEVELOPMENT_FORCE_RTL", "LOW_BATTERY_SOUND_TIMEOUT", "WIFI_BOUNCE_DELAY_OVERRIDE_MS", "POLICY_CONTROL", "EMULATE_DISPLAY_CUTOUT", "EMULATE_DISPLAY_CUTOUT_OFF", "EMULATE_DISPLAY_CUTOUT_ON", "BLOCKED_SLICES", "ZEN_MODE", "ZEN_MODE_OFF", "ZEN_MODE_IMPORTANT_INTERRUPTIONS", "ZEN_MODE_NO_INTERRUPTIONS", "ZEN_MODE_ALARMS", "ZEN_MODE_RINGER_LEVEL", "ZEN_MODE_CONFIG_ETAG", "ZEN_DURATION", "ZEN_DURATION_PROMPT", "ZEN_DURATION_FOREVER", "HEADS_UP_NOTIFICATIONS_ENABLED", "HEADS_UP_OFF", "HEADS_UP_ON", "DEVICE_NAME", "NETWORK_SCORING_PROVISIONED", "REQUIRE_PASSWORD_TO_DECRYPT", "ENHANCED_4G_MODE_ENABLED", "VT_IMS_ENABLED", "WFC_IMS_ENABLED", "WFC_IMS_MODE", "WFC_IMS_ROAMING_MODE", "WFC_IMS_ROAMING_ENABLED", "LTE_SERVICE_FORCED", "LID_BEHAVIOR", "EPHEMERAL_COOKIE_MAX_SIZE_BYTES", "ENABLE_EPHEMERAL_FEATURE", "INSTANT_APP_DEXOPT_ENABLED", "INSTALLED_INSTANT_APP_MIN_CACHE_PERIOD", "INSTALLED_INSTANT_APP_MAX_CACHE_PERIOD", "UNINSTALLED_INSTANT_APP_MIN_CACHE_PERIOD", "UNINSTALLED_INSTANT_APP_MAX_CACHE_PERIOD", "UNUSED_STATIC_SHARED_LIB_MIN_CACHE_PERIOD", "ALLOW_USER_SWITCHING_WHEN_SYSTEM_USER_LOCKED", "BOOT_COUNT", "SAFE_BOOT_DISALLOWED", "DEVICE_DEMO_MODE", "NETWORK_ACCESS_TIMEOUT_MS", "DATABASE_DOWNGRADE_REASON", "DATABASE_CREATION_BUILDID", "CONTACTS_DATABASE_WAL_ENABLED", "LOCATION_SETTINGS_LINK_TO_PERMISSIONS_ENABLED", "EUICC_REMOVING_INVISIBLE_PROFILES_TIMEOUT_MILLIS", "EUICC_FACTORY_RESET_TIMEOUT_MILLIS", "STORAGE_SETTINGS_CLOBBER_THRESHOLD", "LOCATION_GLOBAL_KILL_SWITCH", "OVERRIDE_SETTINGS_PROVIDER_RESTORE_ANY_VERSION", "CHAINED_BATTERY_ATTRIBUTION_ENABLED", "ENABLE_ADB_INCREMENTAL_INSTALL_DEFAULT", "AUTOFILL_COMPAT_MODE_ALLOWED_PACKAGES", "AUTOFILL_LOGGING_LEVEL", "AUTOFILL_MAX_PARTITIONS_SIZE", "AUTOFILL_MAX_VISIBLE_DATASETS", "HIDDEN_API_BLACKLIST_EXEMPTIONS", "HIDDEN_API_POLICY", "SIGNED_CONFIG_VERSION", "SOUND_TRIGGER_DETECTION_SERVICE_OP_TIMEOUT", "MAX_SOUND_TRIGGER_DETECTION_SERVICE_OPS_PER_DAY", "ISOLATED_STORAGE_LOCAL", "ISOLATED_STORAGE_REMOTE", "AWARE_ALLOWED", "POWER_BUTTON_LONG_PRESS", "POWER_BUTTON_VERY_LONG_PRESS", "TRANSIENT_SETTINGS", "LEGACY_RESTORE_SETTINGS", "sProviderHolder", "sNameValueCache", "MOVED_TO_SECURE", "MULTI_SIM_VOICE_CALL_SUBSCRIPTION", "MULTI_SIM_VOICE_PROMPT", "MULTI_SIM_DATA_CALL_SUBSCRIPTION", "MULTI_SIM_SMS_SUBSCRIPTION", "MULTI_SIM_SMS_PROMPT", "MULTI_SIM_USER_PREFERRED_SUBS", "ENABLED_SUBSCRIPTION_FOR_SLOT", "MODEM_STACK_ENABLED_FOR_SLOT", "NEW_CONTACT_AGGREGATOR", "CONTACT_METADATA_SYNC", "CONTACT_METADATA_SYNC_ENABLED", "ENABLE_CELLULAR_ON_BOOT", "MAX_NOTIFICATION_ENQUEUE_RATE", "SHOW_NOTIFICATION_CHANNEL_WARNINGS", "CELL_ON", "INSTANT_APP_SETTINGS", "SHOW_TEMPERATURE_WARNING", "SHOW_USB_TEMPERATURE_ALARM", "WARNING_TEMPERATURE", "ENABLE_DISKSTATS_LOGGING", "ENABLE_CACHE_QUOTA_CALCULATION", "ENABLE_DELETION_HELPER_NO_THRESHOLD_TOGGLE", "NOTIFICATION_SNOOZE_OPTIONS", "BLOCKING_HELPER_DISMISS_TO_VIEW_RATIO_LIMIT", "BLOCKING_HELPER_STREAK_LIMIT", "SQLITE_COMPATIBILITY_WAL_FLAGS", "ENABLE_GNSS_RAW_MEAS_FULL_TRACKING", "INSTALL_CARRIER_APP_NOTIFICATION_PERSISTENT", "INSTALL_CARRIER_APP_NOTIFICATION_SLEEP_MILLIS", "ZRAM_ENABLED", "CACHED_APPS_FREEZER_ENABLED", "SMART_REPLIES_IN_NOTIFICATIONS_FLAGS", "SMART_SUGGESTIONS_IN_NOTIFICATIONS_FLAGS", "SHOW_FIRST_CRASH_DIALOG", "SHOW_RESTART_IN_CRASH_DIALOG", "SHOW_MUTE_IN_CRASH_DIALOG", "SHOW_ZEN_UPGRADE_NOTIFICATION", "SHOW_ZEN_SETTINGS_SUGGESTION", "ZEN_SETTINGS_UPDATED", "ZEN_SETTINGS_SUGGESTION_VIEWED", "BACKUP_AGENT_TIMEOUT_PARAMETERS", "GNSS_SATELLITE_BLACKLIST", "GNSS_HAL_LOCATION_REQUEST_DURATION_MILLIS", "BINDER_CALLS_STATS", "LOOPER_STATS", "KERNEL_CPU_THREAD_READER", "NATIVE_FLAGS_HEALTH_CHECK_ENABLED", "APPOP_HISTORY_MODE", "APPOP_HISTORY_BASE_INTERVAL_MILLIS", "APPOP_HISTORY_INTERVAL_MULTIPLIER", "APPOP_HISTORY_PARAMETERS", "AUTO_REVOKE_PARAMETERS", "BATTERY_CHARGING_STATE_UPDATE_DELAY", "TEXT_CLASSIFIER_ACTION_MODEL_PARAMS", "POWER_BUTTON_SUPPRESSION_DELAY_AFTER_GESTURE_WAKE", "ADVANCED_BATTERY_USAGE_AMOUNT", "NR_NSA_TRACKING_SCREEN_OFF_MODE" ],
  "methodNames" : [ "public static String zenModeToString(int mode)", "public static boolean isValidZenMode(int value)", "public static void getMovedToSecureSettings(Set<String> outKeySet)", "public static void clearProviderForTest()", "public static String getString(ContentResolver resolver, String name)", "public static String getStringForUser(ContentResolver resolver, String name, int userHandle)", "public static boolean putString(ContentResolver resolver, String name, String value)", "public static boolean putString(@NonNull ContentResolver resolver, @NonNull String name, @Nullable String value, @Nullable String tag, boolean makeDefault, boolean overrideableByRestore)", "public static boolean putString(@NonNull ContentResolver resolver, @NonNull String name, @Nullable String value, @Nullable String tag, boolean makeDefault)", "public static void resetToDefaults(@NonNull ContentResolver resolver, @Nullable String tag)", "public static void resetToDefaultsAsUser(@NonNull ContentResolver resolver, @Nullable String tag, @ResetMode int mode, @IntRange(from = 0) int userHandle)", "public static boolean putStringForUser(ContentResolver resolver, String name, String value, int userHandle)", "public static boolean putStringForUser(@NonNull ContentResolver resolver, @NonNull String name, @Nullable String value, @Nullable String tag, boolean makeDefault, @UserIdInt int userHandle, boolean overrideableByRestore)", "public static Uri getUriFor(String name)", "public static int getInt(ContentResolver cr, String name, int def)", "public static int getInt(ContentResolver cr, String name) throws SettingNotFoundException", "public static boolean putInt(ContentResolver cr, String name, int value)", "public static long getLong(ContentResolver cr, String name, long def)", "public static long getLong(ContentResolver cr, String name) throws SettingNotFoundException", "public static boolean putLong(ContentResolver cr, String name, long value)", "public static float getFloat(ContentResolver cr, String name, float def)", "public static float getFloat(ContentResolver cr, String name) throws SettingNotFoundException", "public static boolean putFloat(ContentResolver cr, String name, float value)" ]
}