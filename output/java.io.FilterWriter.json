{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/io/FilterWriter.java",
  "packageName" : "java.io",
  "className" : "FilterWriter",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "out",
    "type" : "Writer",
    "comment" : "\n     * The underlying character-output stream.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void write(int c) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes a single character.\n     *\n     * @exception  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void write(char[] cbuf, int off, int len) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes a portion of an array of characters.\n     *\n     * @param  cbuf  Buffer of characters to be written\n     * @param  off   Offset from which to start reading characters\n     * @param  len   Number of characters to be written\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If the values of the {@code off} and {@code len} parameters\n     *          cause the corresponding method of the underlying {@code Writer}\n     *          to throw an {@code IndexOutOfBoundsException}\n     *\n     * @throws  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void write(String str, int off, int len) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Writes a portion of a string.\n     *\n     * @param  str  String to be written\n     * @param  off  Offset from which to start reading characters\n     * @param  len  Number of characters to be written\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If the values of the {@code off} and {@code len} parameters\n     *          cause the corresponding method of the underlying {@code Writer}\n     *          to throw an {@code IndexOutOfBoundsException}\n     *\n     * @throws  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void flush() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Flushes the stream.\n     *\n     * @exception  IOException  If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void write(int c) throws IOException", "public void write(char[] cbuf, int off, int len) throws IOException", "public void write(String str, int off, int len) throws IOException", "public void flush() throws IOException", "public void close() throws IOException" ],
  "variableNames" : [ "out" ]
}