{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xpath/axes/WalkingIterator.java",
  "packageName" : "org.apache.xpath.axes",
  "className" : "WalkingIterator",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_lastUsedWalker",
    "type" : "AxesWalker",
    "comment" : " The last used step walker in the walker list.\n   *  @serial ",
    "links" : [ ]
  }, {
    "name" : "m_firstWalker",
    "type" : "AxesWalker",
    "comment" : " The head of the step walker list.\n   *  @serial ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getAnalysisBits()",
    "returnType" : "int",
    "comment" : " \n   * Get the analysis bits for this walker, as defined in the WalkerFactory.\n   * @return One of WalkerFactory#BIT_DESCENDANT, etc.\n   ",
    "links" : [ ]
  }, {
    "name" : "public Object clone() throws CloneNotSupportedException",
    "returnType" : "Object",
    "comment" : "\n   * Get a cloned WalkingIterator that holds the same\n   * position as this iterator.\n   *\n   * @return A clone of this iterator that holds the same node position.\n   *\n   * @throws CloneNotSupportedException\n   ",
    "links" : [ ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "\n   * Reset the iterator.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setRoot(int context, Object environment)",
    "returnType" : "void",
    "comment" : "\n   * Initialize the context values for this expression\n   * after it is cloned.\n   *\n   * @param context The XPath runtime context for this\n   * transformation.\n   ",
    "links" : [ ]
  }, {
    "name" : "public int nextNode()",
    "returnType" : "int",
    "comment" : "\n   *  Returns the next node in the set and advances the position of the\n   * iterator in the set. After a NodeIterator is created, the first call\n   * to nextNode() returns the first node in the set.\n   * @return  The next <code>Node</code> in the set being iterated over, or\n   *   <code>null</code> if there are no more members in that set.\n   ",
    "links" : [ ]
  }, {
    "name" : "public final AxesWalker getFirstWalker()",
    "returnType" : "AxesWalker",
    "comment" : "\n   * Get the head of the walker list.\n   *\n   * @return The head of the walker list, or null\n   * if this iterator does not implement walkers.\n   * @xsl.usage advanced\n   ",
    "links" : [ ]
  }, {
    "name" : "public final void setFirstWalker(AxesWalker walker)",
    "returnType" : "void",
    "comment" : "\n   * Set the head of the walker list.\n   * \n   * @param walker Should be a valid AxesWalker.\n   * @xsl.usage advanced\n   ",
    "links" : [ ]
  }, {
    "name" : "public final void setLastUsedWalker(AxesWalker walker)",
    "returnType" : "void",
    "comment" : "\n   * Set the last used walker.\n   *\n   * @param walker The last used walker, or null.\n   * @xsl.usage advanced\n   ",
    "links" : [ ]
  }, {
    "name" : "public final AxesWalker getLastUsedWalker()",
    "returnType" : "AxesWalker",
    "comment" : "\n   * Get the last used walker.\n   *\n   * @return The last used walker, or null.\n   * @xsl.usage advanced\n   ",
    "links" : [ ]
  }, {
    "name" : "public void detach()",
    "returnType" : "void",
    "comment" : "\n   *  Detaches the iterator from the set which it iterated over, releasing\n   * any computational resources and placing the iterator in the INVALID\n   * state. After<code>detach</code> has been invoked, calls to\n   * <code>nextNode</code> or<code>previousNode</code> will raise the\n   * exception INVALID_STATE_ERR.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void fixupVariables(java.util.Vector vars, int globalsSize)",
    "returnType" : "void",
    "comment" : "\n   * This function is used to fixup variables from QNames to stack frame \n   * indexes at stylesheet build time.\n   * @param vars List of QNames that correspond to variables.  This list \n   * should be searched backwards for the first qualified name that \n   * corresponds to the variable reference qname.  The position of the \n   * QName in the vector from the start of the vector will be its position \n   * in the stack frame (but variables above the globalsTop value will need \n   * to be offset to the current stack frame).\n   ",
    "links" : [ ]
  }, {
    "name" : "public void callVisitors(ExpressionOwner owner, XPathVisitor visitor)",
    "returnType" : "void",
    "comment" : "\n   * @see org.apache.xpath.XPathVisitable#callVisitors(ExpressionOwner, XPathVisitor)\n   ",
    "links" : [ ]
  }, {
    "name" : "public Expression getExpression()",
    "returnType" : "Expression",
    "comment" : "\n   * @see ExpressionOwner#getExpression()\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setExpression(Expression exp)",
    "returnType" : "void",
    "comment" : "\n   * @see ExpressionOwner#setExpression(Expression)\n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean deepEquals(Expression expr)",
    "returnType" : "boolean",
    "comment" : "\n     * @see Expression#deepEquals(Expression)\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getAnalysisBits()", "public Object clone() throws CloneNotSupportedException", "public void reset()", "public void setRoot(int context, Object environment)", "public int nextNode()", "public final AxesWalker getFirstWalker()", "public final void setFirstWalker(AxesWalker walker)", "public final void setLastUsedWalker(AxesWalker walker)", "public final AxesWalker getLastUsedWalker()", "public void detach()", "public void fixupVariables(java.util.Vector vars, int globalsSize)", "public void callVisitors(ExpressionOwner owner, XPathVisitor visitor)", "public Expression getExpression()", "public void setExpression(Expression exp)", "public boolean deepEquals(Expression expr)" ],
  "variableNames" : [ "serialVersionUID", "m_lastUsedWalker", "m_firstWalker" ]
}