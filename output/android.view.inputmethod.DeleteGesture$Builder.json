{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inputmethod/DeleteGesture.java",
  "packageName" : "android.view.inputmethod",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link DeleteGesture}. This class is not designed to be thread-safe.\n     ",
  "links" : [ "android.view.inputmethod.DeleteGesture" ],
  "variables" : [ {
    "name" : "mGranularity",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mArea",
    "type" : "RectF",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFallbackText",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setGranularity(@Granularity int granularity)",
    "returnType" : "Builder",
    "comment" : "\n         * Set text deletion granularity. Intersecting words/characters will be\n         * included in the operation.\n         * @param granularity {@link HandwritingGesture#GRANULARITY_WORD} or\n         * {@link HandwritingGesture#GRANULARITY_CHARACTER}.\n         * @return {@link Builder}.\n         ",
    "links" : [ "android.view.inputmethod.HandwritingGesture#GRANULARITY_WORD", "Builder", "android.view.inputmethod.HandwritingGesture#GRANULARITY_CHARACTER" ]
  }, {
    "name" : "public Builder setDeletionArea(@NonNull RectF area)",
    "returnType" : "Builder",
    "comment" : "\n         * Set rectangular single/multiline text deletion area intersecting with text.\n         *\n         * The resulting deletion would be performed for all text intersecting rectangle. The\n         * deletion includes the first word/character in the rectangle, and the last\n         * word/character in the rectangle, and includes  everything in between even if it's not\n         * in the rectangle.\n         *\n         * Intersection is determined using\n         * {@link #setGranularity(int)}. e.g. {@link HandwritingGesture#GRANULARITY_WORD} includes\n         * all the words with their width/height center included in the deletion rectangle.\n         * @param area {@link RectF} (in screen coordinates) for which text will be deleted.\n         * @see HandwritingGesture#GRANULARITY_WORD\n         * @see HandwritingGesture#GRANULARITY_CHARACTER\n         ",
    "links" : [ "android.view.inputmethod.HandwritingGesture#GRANULARITY_WORD", "android.graphics.RectF", "#setGranularity(int)" ]
  }, {
    "name" : "public Builder setFallbackText(@Nullable String fallbackText)",
    "returnType" : "Builder",
    "comment" : "\n         * Set fallback text that will be committed at current cursor position if there is no\n         * applicable text beneath the area of gesture.\n         * @param fallbackText text to set\n         ",
    "links" : [ ]
  }, {
    "name" : "public DeleteGesture build()",
    "returnType" : "DeleteGesture",
    "comment" : "\n         * @return {@link DeleteGesture} using parameters in this {@link DeleteGesture.Builder}.\n         * @throws IllegalArgumentException if one or more positional parameters are not specified.\n         ",
    "links" : [ "android.view.inputmethod.DeleteGesture", "DeleteGesture.Builder" ]
  } ],
  "methodNames" : [ "public Builder setGranularity(@Granularity int granularity)", "public Builder setDeletionArea(@NonNull RectF area)", "public Builder setFallbackText(@Nullable String fallbackText)", "public DeleteGesture build()" ],
  "variableNames" : [ "mGranularity", "mArea", "mFallbackText" ]
}