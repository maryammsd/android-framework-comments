{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/ForwardingListener.java",
  "packageName" : "android.widget",
  "className" : "ForwardingListener",
  "comment" : "\n * Abstract class that forwards touch events to a {@link ShowableListMenu}.\n *\n * @hide\n ",
  "links" : [ "com.android.internal.view.menu.ShowableListMenu" ],
  "variables" : [ {
    "name" : "mScaledTouchSlop",
    "type" : "float",
    "comment" : " Scaled touch slop, used for detecting movement outside bounds. ",
    "links" : [ ]
  }, {
    "name" : "mTapTimeout",
    "type" : "int",
    "comment" : " Timeout before disallowing intercept on the source's parent. ",
    "links" : [ ]
  }, {
    "name" : "mLongPressTimeout",
    "type" : "int",
    "comment" : " Timeout before accepting a long-press to start forwarding. ",
    "links" : [ ]
  }, {
    "name" : "mSrc",
    "type" : "View",
    "comment" : " Source view from which events are forwarded. ",
    "links" : [ ]
  }, {
    "name" : "mDisallowIntercept",
    "type" : "Runnable",
    "comment" : " Runnable used to prevent conflicts with scrolling parents. ",
    "links" : [ ]
  }, {
    "name" : "mTriggerLongPress",
    "type" : "Runnable",
    "comment" : " Runnable used to trigger forwarding on long-press. ",
    "links" : [ ]
  }, {
    "name" : "mForwarding",
    "type" : "boolean",
    "comment" : " Whether this listener is currently forwarding touch events. ",
    "links" : [ ]
  }, {
    "name" : "mActivePointerId",
    "type" : "int",
    "comment" : " The id of the first pointer down in the current event stream. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract ShowableListMenu getPopup()",
    "returnType" : "ShowableListMenu",
    "comment" : "\n     * Returns the popup to which this listener is forwarding events.\n     * <p>\n     * Override this to return the correct popup. If the popup is displayed\n     * asynchronously, you may also need to override\n     * {@link #onForwardingStopped} to prevent premature cancellation of\n     * forwarding.\n     *\n     * @return the popup to which this listener is forwarding events\n     ",
    "links" : [ "#onForwardingStopped" ]
  }, {
    "name" : "public boolean onTouch(View v, MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onViewAttachedToWindow(View v)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onViewDetachedFromWindow(View v)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean onForwardingStarted()",
    "returnType" : "boolean",
    "comment" : "\n     * Called when forwarding would like to start.\n     * <p>\n     * By default, this will show the popup returned by {@link #getPopup()}.\n     * It may be overridden to perform another action, like clicking the\n     * source view or preparing the popup before showing it.\n     *\n     * @return true to start forwarding, false otherwise\n     ",
    "links" : [ "#getPopup()" ]
  }, {
    "name" : "protected boolean onForwardingStopped()",
    "returnType" : "boolean",
    "comment" : "\n     * Called when forwarding would like to stop.\n     * <p>\n     * By default, this will dismiss the popup returned by\n     * {@link #getPopup()}. It may be overridden to perform some other\n     * action.\n     *\n     * @return true to stop forwarding, false otherwise\n     ",
    "links" : [ "#getPopup()" ]
  }, {
    "name" : "private boolean onTouchObserved(MotionEvent srcEvent)",
    "returnType" : "boolean",
    "comment" : "\n     * Observes motion events and determines when to start forwarding.\n     *\n     * @param srcEvent motion event in source view coordinates\n     * @return true to start forwarding motion events, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "private void clearCallbacks()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void onLongPress()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean onTouchForwarded(MotionEvent srcEvent)",
    "returnType" : "boolean",
    "comment" : "\n     * Handles forwarded motion events and determines when to stop\n     * forwarding.\n     *\n     * @param srcEvent motion event in source view coordinates\n     * @return true to continue forwarding motion events, false to cancel\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract ShowableListMenu getPopup()", "public boolean onTouch(View v, MotionEvent event)", "public void onViewAttachedToWindow(View v)", "public void onViewDetachedFromWindow(View v)", "protected boolean onForwardingStarted()", "protected boolean onForwardingStopped()", "private boolean onTouchObserved(MotionEvent srcEvent)", "private void clearCallbacks()", "private void onLongPress()", "private boolean onTouchForwarded(MotionEvent srcEvent)" ],
  "variableNames" : [ "mScaledTouchSlop", "mTapTimeout", "mLongPressTimeout", "mSrc", "mDisallowIntercept", "mTriggerLongPress", "mForwarding", "mActivePointerId" ]
}