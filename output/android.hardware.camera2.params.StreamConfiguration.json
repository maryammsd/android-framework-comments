{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/params/StreamConfiguration.java",
  "packageName" : "android.hardware.camera2.params",
  "className" : "StreamConfiguration",
  "comment" : "\n * Immutable class to store the available stream\n * {@link CameraCharacteristics#SCALER_AVAILABLE_STREAM_CONFIGURATIONS configurations} to set up\n * {@link android.view.Surface Surfaces} for creating a {@link CameraCaptureSession capture session}\n * with {@link CameraDevice#createCaptureSession}.\n * <!-- TODO: link to input stream configuration -->\n *\n * <p>This is the authoritative list for all input/output formats (and sizes respectively\n * for that format) that are supported by a camera device.</p>\n *\n * @see CameraCharacteristics#SCALER_AVAILABLE_STREAM_CONFIGURATIONS\n *\n * @hide\n ",
  "links" : [ "android.hardware.camera2.CameraCharacteristics#SCALER_AVAILABLE_STREAM_CONFIGURATIONS", "android.view.Surface", "android.hardware.camera2.CameraDevice#createCaptureSession", "CameraCaptureSession" ],
  "variables" : [ {
    "name" : "mFormat",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInput",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final int getFormat()",
    "returnType" : "int",
    "comment" : "\n     * Get the internal image {@code format} in this stream configuration.\n     *\n     * @return an integer format\n     *\n     * @see ImageFormat\n     * @see PixelFormat\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getWidth()",
    "returnType" : "int",
    "comment" : "\n     * Return the width of the stream configuration.\n     *\n     * @return width > 0\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getHeight()",
    "returnType" : "int",
    "comment" : "\n     * Return the height of the stream configuration.\n     *\n     * @return height > 0\n     ",
    "links" : [ ]
  }, {
    "name" : "public Size getSize()",
    "returnType" : "Size",
    "comment" : "\n     * Convenience method to return the size of this stream configuration.\n     *\n     * @return a Size with positive width and height\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isInput()",
    "returnType" : "boolean",
    "comment" : "\n     * Determines if this configuration is usable for input streams.\n     *\n     * <p>Input and output stream configurations are not interchangeable;\n     * input stream configurations must be used when configuring inputs.</p>\n     *\n     * @return {@code true} if input configuration, {@code false} otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isOutput()",
    "returnType" : "boolean",
    "comment" : "\n     * Determines if this configuration is usable for output streams.\n     *\n     * <p>Input and output stream configurations are not interchangeable;\n     * out stream configurations must be used when configuring outputs.</p>\n     *\n     * @return {@code true} if output configuration, {@code false} otherwise\n     *\n     * @see CameraDevice#createCaptureSession\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(final Object obj)",
    "returnType" : "boolean",
    "comment" : "\n     * Check if this {@link StreamConfiguration} is equal to another {@link StreamConfiguration}.\n     *\n     * <p>Two vectors are only equal if and only if each of the respective elements is equal.</p>\n     *\n     * @return {@code true} if the objects were equal, {@code false} otherwise\n     ",
    "links" : [ "android.hardware.camera2.params.StreamConfiguration" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final int getFormat()", "public int getWidth()", "public int getHeight()", "public Size getSize()", "public boolean isInput()", "public boolean isOutput()", "public boolean equals(final Object obj)", "public int hashCode()" ],
  "variableNames" : [ "mFormat", "mWidth", "mHeight", "mInput" ]
}