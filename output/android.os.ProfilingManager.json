{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/ProfilingManager.java",
  "packageName" : "android.os",
  "className" : "ProfilingManager",
  "comment" : "\n * API for apps to request and listen for app specific profiling.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROFILING_TYPE_JAVA_HEAP_DUMP",
    "type" : "int",
    "comment" : " Profiling type for {@link #requestProfiling} to request a java heap dump. ",
    "links" : [ "#requestProfiling" ]
  }, {
    "name" : "PROFILING_TYPE_HEAP_PROFILE",
    "type" : "int",
    "comment" : " Profiling type for {@link #requestProfiling} to request a heap profile. ",
    "links" : [ "#requestProfiling" ]
  }, {
    "name" : "PROFILING_TYPE_STACK_SAMPLING",
    "type" : "int",
    "comment" : " Profiling type for {@link #requestProfiling} to request a stack sample. ",
    "links" : [ "#requestProfiling" ]
  }, {
    "name" : "PROFILING_TYPE_SYSTEM_TRACE",
    "type" : "int",
    "comment" : " Profiling type for {@link #requestProfiling} to request a system trace. ",
    "links" : [ "#requestProfiling" ]
  }, {
    "name" : "KEY_DURATION_MS",
    "type" : "String",
    "comment" : "\n     * Can only be used with profiling type heap profile, stack sampling, or system trace.\n     * Value of type int.\n     * @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_SAMPLING_INTERVAL_BYTES",
    "type" : "String",
    "comment" : "\n     * Can only be used with profiling type heap profile. Value of type long.\n     * @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_TRACK_JAVA_ALLOCATIONS",
    "type" : "String",
    "comment" : "\n     * Can only be used with profiling type heap profile. Value of type boolean.\n     * @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_FREQUENCY_HZ",
    "type" : "String",
    "comment" : "\n     * Can only be used with profiling type stack sampling. Value of type int.\n     * @hide ",
    "links" : [ ]
  }, {
    "name" : "KEY_SIZE_KB",
    "type" : "String",
    "comment" : "\n     * Can be used with all profiling types. Value of type int.\n     * @hide ",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallbacks",
    "type" : "ArrayList<ProfilingRequestCallbackWrapper>",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mProfilingService",
    "type" : "IProfilingService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void requestProfiling(@ProfilingType int profilingType, @Nullable Bundle parameters, @Nullable String tag, @Nullable CancellationSignal cancellationSignal, @Nullable Executor executor, @Nullable Consumer<ProfilingResult> listener)",
    "returnType" : "void",
    "comment" : "\n     * Request system profiling.\n     *\n     * <p class=\"note\"> Note: use of this API directly is not recommended for most use cases.\n     * Please use the higher level wrappers provided by androidx that will construct the request\n     * correctly based on available options and simplified user provided request parameters.</p>\n     *\n     * <p class=\"note\"> Note: requests are not guaranteed to be filled.</p>\n     *\n     * <p class=\"note\"> Note: Both a listener and executor must be set for the request to be\n     * considered for fulfillment.\n     * Listeners can be set in this method, with {@link #registerForAllProfilingResults}, or both.\n     * If no listener and executor is set the request will be discarded.</p>\n     *\n     * @param profilingType Type of profiling to collect.\n     * @param parameters Bundle of request related parameters. If the bundle contains any\n     *                  unrecognized parameters, the request will be fail with\n     *                  {@link #ProfilingResult#ERROR_FAILED_INVALID_REQUEST}. If the values for\n     *                  the parameters are out of supported range, the closest possible in range\n     *                  value will be chosen.\n     *                  Use of androidx wrappers is recommended over generating this directly.\n     * @param tag Caller defined data to help identify the output.\n     *                  The first 20 alphanumeric characters, plus dashes, will be lowercased\n     *                  and included in the output filename.\n     * @param cancellationSignal for caller requested cancellation.\n     *                  Results will be returned if available.\n     *                  If this is null, the requesting app will not be able to stop the collection.\n     *                  The collection will stop after timing out with either the provided\n     *                  configurations or with system defaults\n     * @param executor  The executor to call back with.\n     *                  Will only be used for the listener provided in this method.\n     *                  If this is null, and no global executor and listener combinations are\n     *                  registered at the time of the request, the request will be dropped.\n     * @param listener  Listener to be triggered with result. Any global listeners registered via\n     *                  {@link #registerForAllProfilingResults} will also be triggered. If this is\n     *                  null, and no global listener and executor combinations are registered at\n     *                  the time of the request, the request will be dropped.\n     ",
    "links" : [ "#registerForAllProfilingResults", "#ProfilingResult" ]
  }, {
    "name" : "public void registerForAllProfilingResults(@NonNull Executor executor, @NonNull Consumer<ProfilingResult> listener)",
    "returnType" : "void",
    "comment" : "\n     * Register a listener to be called for all profiling results for this uid. Listeners set here\n     * will be called in addition to any provided with the request.\n     *\n     * @param executor The executor to call back with.\n     * @param listener Listener to be triggered with result.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void unregisterForAllProfilingResults(@Nullable Consumer<ProfilingResult> listener)",
    "returnType" : "void",
    "comment" : "\n     * Unregister a listener that was to be called for all profiling results. If no listener is\n     * provided, all listeners for this process that were not submitted with a profiling request\n     * will be removed.\n     *\n     * @param listener Listener to unregister and no longer be triggered with the results.\n     *                 Null to remove all global listeners for this uid.\n     ",
    "links" : [ ]
  }, {
    "name" : "private IProfilingService getIProfilingServiceLocked()",
    "returnType" : "IProfilingService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void requestProfiling(@ProfilingType int profilingType, @Nullable Bundle parameters, @Nullable String tag, @Nullable CancellationSignal cancellationSignal, @Nullable Executor executor, @Nullable Consumer<ProfilingResult> listener)", "public void registerForAllProfilingResults(@NonNull Executor executor, @NonNull Consumer<ProfilingResult> listener)", "public void unregisterForAllProfilingResults(@Nullable Consumer<ProfilingResult> listener)", "private IProfilingService getIProfilingServiceLocked()" ],
  "variableNames" : [ "TAG", "DEBUG", "PROFILING_TYPE_JAVA_HEAP_DUMP", "PROFILING_TYPE_HEAP_PROFILE", "PROFILING_TYPE_STACK_SAMPLING", "PROFILING_TYPE_SYSTEM_TRACE", "KEY_DURATION_MS", "KEY_SAMPLING_INTERVAL_BYTES", "KEY_TRACK_JAVA_ALLOCATIONS", "KEY_FREQUENCY_HZ", "KEY_SIZE_KB", "mLock", "mContext", "mCallbacks", "mProfilingService" ]
}