{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/IAudioPolicyServiceClient.java",
  "packageName" : "android.media",
  "className" : "Proxy",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mRemote",
    "type" : "android.os.IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public android.os.IBinder asBinder()",
    "returnType" : "android.os.IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public java.lang.String getInterfaceDescriptor()",
    "returnType" : "java.lang.String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onAudioVolumeGroupChanged(int group, int flags) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Notifies a change of volume group. ",
    "links" : [ ]
  }, {
    "name" : "public void onAudioPortListUpdate() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Notifies a change of audio port configuration. ",
    "links" : [ ]
  }, {
    "name" : "public void onAudioPatchListUpdate() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Notifies a change of audio patch configuration. ",
    "links" : [ ]
  }, {
    "name" : "public void onDynamicPolicyMixStateUpdate(java.lang.String regId, int state) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Notifies a change in the mixing state of a specific mix in a dynamic audio policy. ",
    "links" : [ ]
  }, {
    "name" : "public void onRecordingConfigurationUpdate(int event, android.media.RecordClientInfo clientInfo, android.media.audio.common.AudioConfigBase clientConfig, android.media.EffectDescriptor[] clientEffects, android.media.audio.common.AudioConfigBase deviceConfig, android.media.EffectDescriptor[] effects, int patchHandle, int source) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Notifies a change of audio recording configuration. ",
    "links" : [ ]
  }, {
    "name" : "public void onRoutingUpdated() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Notifies a change of audio routing ",
    "links" : [ ]
  }, {
    "name" : "public void onVolumeRangeInitRequest() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : " Notifies a request for volume index ranges to be reset after they were observed as invalid ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public android.os.IBinder asBinder()", "public java.lang.String getInterfaceDescriptor()", "public void onAudioVolumeGroupChanged(int group, int flags) throws android.os.RemoteException", "public void onAudioPortListUpdate() throws android.os.RemoteException", "public void onAudioPatchListUpdate() throws android.os.RemoteException", "public void onDynamicPolicyMixStateUpdate(java.lang.String regId, int state) throws android.os.RemoteException", "public void onRecordingConfigurationUpdate(int event, android.media.RecordClientInfo clientInfo, android.media.audio.common.AudioConfigBase clientConfig, android.media.EffectDescriptor[] clientEffects, android.media.audio.common.AudioConfigBase deviceConfig, android.media.EffectDescriptor[] effects, int patchHandle, int source) throws android.os.RemoteException", "public void onRoutingUpdated() throws android.os.RemoteException", "public void onVolumeRangeInitRequest() throws android.os.RemoteException" ],
  "variableNames" : [ "mRemote" ]
}