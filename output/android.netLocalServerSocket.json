{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/LocalServerSocket.java",
  "packageName" : "android.net",
  "className" : "LocalServerSocket",
  "comment" : "\n * Non-standard class for creating an inbound UNIX-domain socket\n * in the Linux abstract namespace.\n ",
  "variables" : [ {
    "name" : "impl",
    "type" : "LocalSocketImpl",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "localAddress",
    "type" : "LocalSocketAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LISTEN_BACKLOG",
    "type" : "int",
    "comment" : " 50 seems a bit much, but it's what was here ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public LocalSocketAddress getLocalSocketAddress()",
    "returnType" : "LocalSocketAddress",
    "comment" : "\n     * Obtains the socket's local address\n     *\n     * @return local address\n     ",
    "links" : [ ]
  }, {
    "name" : "public LocalSocket accept() throws IOException",
    "returnType" : "LocalSocket",
    "comment" : "\n     * Accepts a new connection to the socket. Blocks until a new\n     * connection arrives.\n     *\n     * @return a socket representing the new connection.\n     * @throws IOException\n     ",
    "links" : [ ]
  }, {
    "name" : "public FileDescriptor getFileDescriptor()",
    "returnType" : "FileDescriptor",
    "comment" : "\n     * Returns file descriptor or null if not yet open/already closed\n     *\n     * @return fd or null\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close() throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Closes server socket.\n     * \n     * @throws IOException\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "impl", "localAddress", "LISTEN_BACKLOG" ],
  "methodNames" : [ "public LocalSocketAddress getLocalSocketAddress()", "public LocalSocket accept() throws IOException", "public FileDescriptor getFileDescriptor()", "public void close() throws IOException" ]
}