{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/admin/DeviceAdminService.java",
  "packageName" : "android.app.admin",
  "className" : "DeviceAdminService",
  "comment" : "\n * Base class for a service that device owner/profile owners can optionally have.\n *\n * <p>The system searches for it with an intent filter with the\n * {@link DevicePolicyManager#ACTION_DEVICE_ADMIN_SERVICE} action, and tries to keep a bound\n * connection as long as the hosting user is running, so that the device/profile owner is always\n * considered to be in the foreground.  This is useful to receive implicit broadcasts that\n * can no longer be received by manifest receivers by apps targeting Android version\n * {@link android.os.Build.VERSION_CODES#O}.  Device/profile owners can use a runtime-registered\n * broadcast receiver instead, and have a {@link DeviceAdminService} so that the process is always\n * running.\n *\n * <p>Device/profile owners can use\n * {@link android.content.pm.PackageManager#setComponentEnabledSetting(ComponentName, int, int)}\n * to disable/enable its own service.  For example, when a device/profile owner no longer needs\n * to be in the foreground, it can (and should) disable its service.\n *\n * <p>The service must be protected with the permission\n * {@link android.Manifest.permission#BIND_DEVICE_ADMIN}.  Otherwise the system would ignore it.\n *\n * <p>When the owner process crashes, the service will be re-bound automatically after a\n * back-off.\n *\n * <p>Note the process may still be killed if the system is under heavy memory pressure, in which\n * case the process will be re-started later.\n ",
  "variables" : [ {
    "name" : "mImpl",
    "type" : "IDeviceAdminServiceImpl",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final IBinder onBind(Intent intent)",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mImpl" ],
  "methodNames" : [ "public final IBinder onBind(Intent intent)" ]
}