{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/AudioFocusInfo.java",
  "packageName" : "android.media",
  "className" : "AudioFocusInfo",
  "comment" : "\n * @hide\n * A class to encapsulate information about an audio focus owner or request.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mAttributes",
    "type" : "AudioAttributes",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSdkTarget",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGainRequest",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLossReceived",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGenCount",
    "type" : "long",
    "comment" : " external focus policy and MediaFocusControl",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AudioFocusInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setGen(long g)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public long getGen()",
    "returnType" : "long",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public AudioAttributes getAttributes()",
    "returnType" : "AudioAttributes",
    "comment" : "\n     * The audio attributes for the audio focus request.\n     * @return non-null {@link AudioAttributes}.\n     ",
    "links" : [ "android.media.AudioAttributes" ]
  }, {
    "name" : "public int getClientUid()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getClientId()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getGainRequest()",
    "returnType" : "int",
    "comment" : "\n     * The type of audio focus gain request.\n     * @return one of {@link AudioManager#AUDIOFOCUS_GAIN},\n     *     {@link AudioManager#AUDIOFOCUS_GAIN_TRANSIENT},\n     *     {@link AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK},\n     *     {@link AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE}.\n     ",
    "links" : [ "android.media.AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK", "android.media.AudioManager#AUDIOFOCUS_GAIN_TRANSIENT", "android.media.AudioManager#AUDIOFOCUS_GAIN", "android.media.AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE" ]
  }, {
    "name" : "public int getLossReceived()",
    "returnType" : "int",
    "comment" : "\n     * The type of audio focus loss that was received by the\n     * {@link AudioManager.OnAudioFocusChangeListener} if one was set.\n     * @return 0 if focus wasn't lost, or one of {@link AudioManager#AUDIOFOCUS_LOSS},\n     *   {@link AudioManager#AUDIOFOCUS_LOSS_TRANSIENT} or\n     *   {@link AudioManager#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK}.\n     ",
    "links" : [ "android.media.AudioManager#AUDIOFOCUS_LOSS_TRANSIENT", "android.media.AudioManager#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK", "AudioManager.OnAudioFocusChangeListener", "android.media.AudioManager#AUDIOFOCUS_LOSS" ]
  }, {
    "name" : "public int getSdkTarget()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void clearLossReceived()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : "\n     * The flags set in the audio focus request.\n     * @return 0 or a combination of {link AudioManager#AUDIOFOCUS_FLAG_DELAY_OK},\n     *     {@link AudioManager#AUDIOFOCUS_FLAG_PAUSES_ON_DUCKABLE_LOSS}, and\n     *     {@link AudioManager#AUDIOFOCUS_FLAG_LOCK}.\n     ",
    "links" : [ "android.media.AudioManager#AUDIOFOCUS_FLAG_PAUSES_ON_DUCKABLE_LOSS", "android.media.AudioManager#AUDIOFOCUS_FLAG_LOCK" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setGen(long g)", "public long getGen()", "public AudioAttributes getAttributes()", "public int getClientUid()", "public String getClientId()", "public String getPackageName()", "public int getGainRequest()", "public int getLossReceived()", "public int getSdkTarget()", "public void clearLossReceived()", "public int getFlags()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public int hashCode()", "public boolean equals(@Nullable Object obj)" ],
  "variableNames" : [ "mAttributes", "mClientUid", "mClientId", "mPackageName", "mSdkTarget", "mGainRequest", "mLossReceived", "mFlags", "mGenCount", "CREATOR" ]
}