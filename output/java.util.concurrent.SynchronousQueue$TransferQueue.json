{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/SynchronousQueue.java",
  "packageName" : "java.util.concurrent",
  "className" : "TransferQueue",
  "comment" : " Dual Queue ",
  "links" : [ ],
  "variables" : [ {
    "name" : "head",
    "type" : "QNode",
    "comment" : " Head of queue ",
    "links" : [ ]
  }, {
    "name" : "tail",
    "type" : "QNode",
    "comment" : " Tail of queue ",
    "links" : [ ]
  }, {
    "name" : "cleanMe",
    "type" : "QNode",
    "comment" : "\n         * Reference to a cancelled node that might not yet have been\n         * unlinked from queue because it was the last inserted node\n         * when it was cancelled.\n         ",
    "links" : [ ]
  }, {
    "name" : "QHEAD",
    "type" : "VarHandle",
    "comment" : " VarHandle mechanics",
    "links" : [ ]
  }, {
    "name" : "QTAIL",
    "type" : "VarHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "QCLEANME",
    "type" : "VarHandle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void advanceHead(QNode h, QNode nh)",
    "returnType" : "void",
    "comment" : "\n         * Tries to cas nh as new head; if successful, unlink\n         * old head's next node to avoid garbage retention.\n         ",
    "links" : [ ]
  }, {
    "name" : " void advanceTail(QNode t, QNode nt)",
    "returnType" : "void",
    "comment" : "\n         * Tries to cas nt as new tail.\n         ",
    "links" : [ ]
  }, {
    "name" : " boolean casCleanMe(QNode cmp, QNode val)",
    "returnType" : "boolean",
    "comment" : "\n         * Tries to CAS cleanMe slot.\n         ",
    "links" : [ ]
  }, {
    "name" : " E transfer(E e, boolean timed, long nanos)",
    "returnType" : "E",
    "comment" : "\n         * Puts or takes an item.\n         ",
    "links" : [ ]
  }, {
    "name" : " void clean(QNode pred, QNode s)",
    "returnType" : "void",
    "comment" : "\n         * Gets rid of cancelled node s with original predecessor pred.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void advanceHead(QNode h, QNode nh)", " void advanceTail(QNode t, QNode nt)", " boolean casCleanMe(QNode cmp, QNode val)", " E transfer(E e, boolean timed, long nanos)", " void clean(QNode pred, QNode s)" ],
  "variableNames" : [ "head", "tail", "cleanMe", "QHEAD", "QTAIL", "QCLEANME" ]
}