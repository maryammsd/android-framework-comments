{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/TaskFpsCallback.java",
  "packageName" : "android.window",
  "className" : "TaskFpsCallback",
  "comment" : "\n * Callback for sampling the frames per second for a task and its children.\n * This should only be used by a system component that needs to listen to a task's\n * tree's FPS when it is not actively submitting transactions for that corresponding SurfaceControl.\n * Otherwise, ASurfaceTransaction_OnComplete callbacks should be used.\n *\n * Each callback can only register for receiving FPS report for one task id until\n * {@link WindowManager#unregisterTaskFpsCallback()} is called.\n *\n * @hide\n ",
  "links" : [ "#unregisterTaskFpsCallback()" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void onFpsReported(float fps)",
    "returnType" : "void",
    "comment" : "\n     * Reports the fps from the registered task\n     * @param fps The frame per second of the task that has the registered task id\n     *            and its children.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void dispatchOnFpsReported(@NonNull ITaskFpsCallback listener, float fps)",
    "returnType" : "void",
    "comment" : "\n     * Dispatch the collected sample.\n     *\n     * Called from native code on a binder thread.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract void onFpsReported(float fps)", "private static void dispatchOnFpsReported(@NonNull ITaskFpsCallback listener, float fps)" ],
  "variableNames" : [ ]
}