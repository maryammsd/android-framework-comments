{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/net/config/XmlConfigSource.java",
  "packageName" : "android.security.net.config",
  "className" : "XmlConfigSource",
  "comment" : "\n * {@link ConfigSource} based on an XML configuration file.\n *\n * @hide\n ",
  "links" : [ "android.security.net.config.ConfigSource" ],
  "variables" : [ {
    "name" : "CONFIG_BASE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_DOMAIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CONFIG_DEBUG",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResourceId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDebugBuild",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mApplicationInfo",
    "type" : "ApplicationInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitialized",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDefaultConfig",
    "type" : "NetworkSecurityConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDomainMap",
    "type" : "Set<Pair<Domain, NetworkSecurityConfig>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Set<Pair<Domain, NetworkSecurityConfig>> getPerDomainConfigs()",
    "returnType" : "Set<Pair<Domain, NetworkSecurityConfig>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public NetworkSecurityConfig getDefaultConfig()",
    "returnType" : "NetworkSecurityConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static final String getConfigString(int configType)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void ensureInitialized()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Pin parsePin(XmlResourceParser parser) throws IOException, XmlPullParserException, ParserException",
    "returnType" : "Pin",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private PinSet parsePinSet(XmlResourceParser parser) throws IOException, XmlPullParserException, ParserException",
    "returnType" : "PinSet",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Domain parseDomain(XmlResourceParser parser, Set<String> seenDomains) throws IOException, XmlPullParserException, ParserException",
    "returnType" : "Domain",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean parseCertificateTransparency(XmlResourceParser parser) throws IOException, XmlPullParserException, ParserException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private CertificatesEntryRef parseCertificatesEntry(XmlResourceParser parser, boolean defaultOverridePins) throws IOException, XmlPullParserException, ParserException",
    "returnType" : "CertificatesEntryRef",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Collection<CertificatesEntryRef> parseTrustAnchors(XmlResourceParser parser, boolean defaultOverridePins) throws IOException, XmlPullParserException, ParserException",
    "returnType" : "Collection<CertificatesEntryRef>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private List<Pair<NetworkSecurityConfig.Builder, Set<Domain>>> parseConfigEntry(XmlResourceParser parser, Set<String> seenDomains, NetworkSecurityConfig.Builder parentBuilder, int configType) throws IOException, XmlPullParserException, ParserException",
    "returnType" : "List<Pair<NetworkSecurityConfig.Builder, Set<Domain>>>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addDebugAnchorsIfNeeded(NetworkSecurityConfig.Builder debugConfigBuilder, NetworkSecurityConfig.Builder builder)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void parseNetworkSecurityConfig(XmlResourceParser parser) throws IOException, XmlPullParserException, ParserException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private NetworkSecurityConfig.Builder parseDebugOverridesResource() throws IOException, XmlPullParserException, ParserException",
    "returnType" : "NetworkSecurityConfig.Builder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Set<Pair<Domain, NetworkSecurityConfig>> getPerDomainConfigs()", "public NetworkSecurityConfig getDefaultConfig()", "private static final String getConfigString(int configType)", "private void ensureInitialized()", "private Pin parsePin(XmlResourceParser parser) throws IOException, XmlPullParserException, ParserException", "private PinSet parsePinSet(XmlResourceParser parser) throws IOException, XmlPullParserException, ParserException", "private Domain parseDomain(XmlResourceParser parser, Set<String> seenDomains) throws IOException, XmlPullParserException, ParserException", "private boolean parseCertificateTransparency(XmlResourceParser parser) throws IOException, XmlPullParserException, ParserException", "private CertificatesEntryRef parseCertificatesEntry(XmlResourceParser parser, boolean defaultOverridePins) throws IOException, XmlPullParserException, ParserException", "private Collection<CertificatesEntryRef> parseTrustAnchors(XmlResourceParser parser, boolean defaultOverridePins) throws IOException, XmlPullParserException, ParserException", "private List<Pair<NetworkSecurityConfig.Builder, Set<Domain>>> parseConfigEntry(XmlResourceParser parser, Set<String> seenDomains, NetworkSecurityConfig.Builder parentBuilder, int configType) throws IOException, XmlPullParserException, ParserException", "private void addDebugAnchorsIfNeeded(NetworkSecurityConfig.Builder debugConfigBuilder, NetworkSecurityConfig.Builder builder)", "private void parseNetworkSecurityConfig(XmlResourceParser parser) throws IOException, XmlPullParserException, ParserException", "private NetworkSecurityConfig.Builder parseDebugOverridesResource() throws IOException, XmlPullParserException, ParserException" ],
  "variableNames" : [ "CONFIG_BASE", "CONFIG_DOMAIN", "CONFIG_DEBUG", "mLock", "mResourceId", "mDebugBuild", "mApplicationInfo", "mInitialized", "mDefaultConfig", "mDomainMap", "mContext" ]
}