{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/rtt/RangingResult.java",
  "packageName" : "android.net.wifi.rtt",
  "className" : "Builder",
  "comment" : "\n     * Builder class used to construct {@link RangingResult} objects.\n     ",
  "links" : [ "android.net.wifi.rtt.RangingResult" ],
  "variables" : [ {
    "name" : "mStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMac",
    "type" : "MacAddress",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPeerHandle",
    "type" : "PeerHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDistanceMm",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDistanceStdDevMm",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRssi",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumAttemptedMeasurements",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumSuccessfulMeasurements",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLci",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLcr",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResponderLocation",
    "type" : "ResponderLocation",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimestamp",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIs80211mcMeasurement",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrequencyMHz",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPacketBw",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIs80211azNtbMeasurement",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNtbMinMeasurementTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNtbMaxMeasurementTime",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mI2rTxLtfRepetitions",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mR2iTxLtfRepetitions",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumTxSpatialStreams",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumRxSpatialStreams",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVendorData",
    "type" : "List<OuiKeyedData>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setStatus(@RangeResultStatus int status)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the Range result status.\n         *\n         * @param status Ranging result status, if not set defaults to\n         *               {@link #STATUS_FAIL}.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "#STATUS_FAIL" ]
  }, {
    "name" : "public Builder setMacAddress(@Nullable MacAddress macAddress)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the MAC address of the ranging result.\n         *\n         * @param macAddress Mac address, if not defaults to null.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPeerHandle(@Nullable PeerHandle peerHandle)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the peer handle. Applicable only for NAN Ranging.\n         *\n         * @param peerHandle Opaque object used to represent a Wi-Fi Aware peer. If not set,\n         *                   defaults to null.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDistanceMm(int distanceMm)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the distance in millimeter.\n         *\n         * @param distanceMm distance. If not set, defaults to 0.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDistanceStdDevMm(int distanceStdDevMm)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the standard deviation of the distance in millimeter.\n         *\n         * @param distanceStdDevMm Standard deviation of the distance measurement. If not set\n         *                         defaults to 0.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setRssi(int rssi)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the average RSSI.\n         *\n         * @param rssi Average RSSI. If not set, defaults to -127.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumAttemptedMeasurements(int numAttemptedMeasurements)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the total number of RTT measurements attempted.\n         *\n         * @param numAttemptedMeasurements Number of attempted measurements. If not set, default\n         *                                 to 0.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumSuccessfulMeasurements(int numSuccessfulMeasurements)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the total number of successful RTT measurements.\n         *\n         * @param numSuccessfulMeasurements Number of successful measurements. If not set, default\n         *                                 to 0.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLci(@Nullable byte[] lci)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the Location Configuration Information (LCI).\n         *\n         * LCI provides data about the access point's (AP) physical location, such as its\n         * latitude, longitude, and altitude. The format is specified in the IEEE 802.11-2016\n         * specifications, section 9.4.2.22.10.\n         *\n         * @param lci Location configuration information. If not set, defaults to null.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLcr(@Nullable byte[] lcr)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the Location Civic Report (LCR).\n         *\n         * LCR provides additional details about the AP's location in a human-readable format,\n         * such as the street address, building name, or floor number. This can be helpful for\n         * users to understand the context of their location within a building or complex.\n         *\n         * The format is\n         * specified in the IEEE 802.11-2016 specifications, section 9.4.2.22.13.\n         *\n         * @param lcr Location civic report. If not set, defaults to null.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUnverifiedResponderLocation(@Nullable ResponderLocation responderLocation)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets Responder Location.\n         *\n         * ResponderLocation is both a Location Configuration Information (LCI) decoder and a\n         * Location Civic Report (LCR) decoder for information received from a Wi-Fi Access Point\n         * (AP) during Wi-Fi RTT ranging process.\n         *\n         * @param responderLocation Responder location. If not set, defaults to null.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setRangingTimestampMillis(@ElapsedRealtimeLong long timestamp)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the time stamp at which the ranging operation was performed.\n         *\n         * The timestamp is in milliseconds since boot, including time spent in sleep,\n         * corresponding to values provided by {@link android.os.SystemClock#elapsedRealtime()}.\n         *\n         * @param timestamp time stamp in milliseconds. If not set, default to 0.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.os.SystemClock#elapsedRealtime()" ]
  }, {
    "name" : "public Builder set80211mcMeasurement(boolean is80211mcMeasurement)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the ranging measurement was performed using IEEE 802.11mc ranging method.\n         * If {@link #set80211mcMeasurement(boolean)} is set as false and\n         * {@link #set80211azNtbMeasurement(boolean)} is also set as false, ranging measurement was\n         * performed using one-side RTT. If not set, default to false.\n         *\n         * @param is80211mcMeasurement true for IEEE 802.11mc measure, otherwise false.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "#set80211mcMeasurement(boolean)", "#set80211azNtbMeasurement(boolean)" ]
  }, {
    "name" : "public Builder setMeasurementChannelFrequencyMHz(int frequencyMHz)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the center frequency of the primary 20 MHz frequency (in MHz) of the channel over\n         * which the measurement frames are sent. If not set, default to\n         * {@link RangingResult#UNSPECIFIED}\n         *\n         * @param frequencyMHz Frequency.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult#UNSPECIFIED" ]
  }, {
    "name" : "public Builder setMeasurementBandwidth(@ChannelWidth int measurementBandwidth)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the bandwidth used to transmit the RTT measurement frame. If not set, default to\n         * {@link RangingResult#UNSPECIFIED}.\n         *\n         * @param measurementBandwidth Measurement bandwidth.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult#UNSPECIFIED" ]
  }, {
    "name" : "public Builder set80211azNtbMeasurement(boolean is80211azNtbMeasurement)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the ranging measurement was performed using IEEE 802.11az non-trigger\n         * ranging method. If {@link #set80211azNtbMeasurement(boolean)} is set as false and\n         * {@link #set80211mcMeasurement(boolean)} is also set as false, ranging measurement was\n         * performed using one-side RTT. If not set defaults to false.\n         *\n         * @param is80211azNtbMeasurement true for IEEE 802.11az non-trigger based measurement,\n         *                                otherwise false.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "#set80211mcMeasurement(boolean)", "#set80211azNtbMeasurement(boolean)" ]
  }, {
    "name" : "public Builder setMinTimeBetweenNtbMeasurementsMicros(long ntbMinMeasurementTime)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets minimum time between measurements in microseconds for IEEE 802.11az non-trigger\n         * based ranging.  If not set, defaults to {@link RangingResult#UNSPECIFIED}.\n         *\n         * @param ntbMinMeasurementTime non-trigger based ranging minimum measurement time.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult#UNSPECIFIED" ]
  }, {
    "name" : "public Builder setMaxTimeBetweenNtbMeasurementsMicros(long ntbMaxMeasurementTime)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets maximum time between measurements in microseconds for IEEE 802.11az non-trigger\n         * based ranging. If not set, defaults to {@link RangingResult#UNSPECIFIED}.\n         *\n         * @param ntbMaxMeasurementTime non-trigger based ranging maximum measurement time.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult#UNSPECIFIED" ]
  }, {
    "name" : "public Builder set80211azInitiatorTxLtfRepetitionsCount(int i2rTxLtfRepetitions)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets LTF repetitions that the initiator station used in the preamble. If not set,\n         * defaults to {@link RangingResult#UNSPECIFIED}.\n         *\n         * @param i2rTxLtfRepetitions LFT repetition count.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult#UNSPECIFIED" ]
  }, {
    "name" : "public Builder set80211azResponderTxLtfRepetitionsCount(int r2iTxLtfRepetitions)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets LTF repetitions that the responder station used in the preamble. If not set,\n         * defaults to {@link RangingResult#UNSPECIFIED}.\n         *\n         * @param r2iTxLtfRepetitions LFT repetition count.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult#UNSPECIFIED" ]
  }, {
    "name" : "public Builder set80211azNumberOfTxSpatialStreams(int numTxSpatialStreams)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets number of transmit spatial streams that the initiator station used for the\n         * ranging result. If not set, defaults to {@link RangingResult#UNSPECIFIED}.\n         *\n         * @param numTxSpatialStreams Number of transmit spatial streams.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult#UNSPECIFIED" ]
  }, {
    "name" : "public Builder set80211azNumberOfRxSpatialStreams(int numRxSpatialStreams)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets number of receive spatial streams that the initiator station used for the ranging\n         * result. If not set, defaults to {@link RangingResult#UNSPECIFIED}.\n         *\n         * @param numRxSpatialStreams Number of receive spatial streams.\n         * @return The builder to facilitate chaining.\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult#UNSPECIFIED" ]
  }, {
    "name" : "public Builder setVendorData(@NonNull List<OuiKeyedData> vendorData)",
    "returnType" : "Builder",
    "comment" : "\n         * Set additional vendor-provided configuration data.\n         *\n         * @param vendorData List of {@link android.net.wifi.OuiKeyedData} containing the\n         *                   vendor-provided configuration data. Note that multiple elements with\n         *                   the same OUI are allowed.\n         * @hide\n         ",
    "links" : [ "android.net.wifi.OuiKeyedData" ]
  }, {
    "name" : "public RangingResult build()",
    "returnType" : "RangingResult",
    "comment" : "\n         * Build {@link RangingResult}\n         * @return an instance of {@link RangingResult}\n         ",
    "links" : [ "android.net.wifi.rtt.RangingResult" ]
  } ],
  "methodNames" : [ "public Builder setStatus(@RangeResultStatus int status)", "public Builder setMacAddress(@Nullable MacAddress macAddress)", "public Builder setPeerHandle(@Nullable PeerHandle peerHandle)", "public Builder setDistanceMm(int distanceMm)", "public Builder setDistanceStdDevMm(int distanceStdDevMm)", "public Builder setRssi(int rssi)", "public Builder setNumAttemptedMeasurements(int numAttemptedMeasurements)", "public Builder setNumSuccessfulMeasurements(int numSuccessfulMeasurements)", "public Builder setLci(@Nullable byte[] lci)", "public Builder setLcr(@Nullable byte[] lcr)", "public Builder setUnverifiedResponderLocation(@Nullable ResponderLocation responderLocation)", "public Builder setRangingTimestampMillis(@ElapsedRealtimeLong long timestamp)", "public Builder set80211mcMeasurement(boolean is80211mcMeasurement)", "public Builder setMeasurementChannelFrequencyMHz(int frequencyMHz)", "public Builder setMeasurementBandwidth(@ChannelWidth int measurementBandwidth)", "public Builder set80211azNtbMeasurement(boolean is80211azNtbMeasurement)", "public Builder setMinTimeBetweenNtbMeasurementsMicros(long ntbMinMeasurementTime)", "public Builder setMaxTimeBetweenNtbMeasurementsMicros(long ntbMaxMeasurementTime)", "public Builder set80211azInitiatorTxLtfRepetitionsCount(int i2rTxLtfRepetitions)", "public Builder set80211azResponderTxLtfRepetitionsCount(int r2iTxLtfRepetitions)", "public Builder set80211azNumberOfTxSpatialStreams(int numTxSpatialStreams)", "public Builder set80211azNumberOfRxSpatialStreams(int numRxSpatialStreams)", "public Builder setVendorData(@NonNull List<OuiKeyedData> vendorData)", "public RangingResult build()" ],
  "variableNames" : [ "mStatus", "mMac", "mPeerHandle", "mDistanceMm", "mDistanceStdDevMm", "mRssi", "mNumAttemptedMeasurements", "mNumSuccessfulMeasurements", "mLci", "mLcr", "mResponderLocation", "mTimestamp", "mIs80211mcMeasurement", "mFrequencyMHz", "mPacketBw", "mIs80211azNtbMeasurement", "mNtbMinMeasurementTime", "mNtbMaxMeasurementTime", "mI2rTxLtfRepetitions", "mR2iTxLtfRepetitions", "mNumTxSpatialStreams", "mNumRxSpatialStreams", "mVendorData" ]
}