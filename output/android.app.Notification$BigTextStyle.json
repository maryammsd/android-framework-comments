{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/Notification.java",
  "packageName" : "android.app",
  "className" : "BigTextStyle",
  "comment" : "\n     * Helper class for generating large-format notifications that include a lot of text.\n     *\n     * Here's how you'd set the <code>BigTextStyle</code> on a notification:\n     * <pre class=\"prettyprint\">\n     * Notification notif = new Notification.Builder(mContext)\n     *     .setContentTitle(&quot;New mail from &quot; + sender.toString())\n     *     .setContentText(subject)\n     *     .setSmallIcon(R.drawable.new_mail)\n     *     .setLargeIcon(aBitmap)\n     *     .setStyle(new Notification.BigTextStyle()\n     *         .bigText(aVeryLongString))\n     *     .build();\n     * </pre>\n     *\n     * @see Notification#bigContentView\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mBigText",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public BigTextStyle setBigContentTitle(CharSequence title)",
    "returnType" : "BigTextStyle",
    "comment" : "\n         * Overrides ContentTitle in the big form of the template.\n         * This defaults to the value passed to setContentTitle().\n         ",
    "links" : [ ]
  }, {
    "name" : "public BigTextStyle setSummaryText(CharSequence cs)",
    "returnType" : "BigTextStyle",
    "comment" : "\n         * Set the first line of text after the detail section in the big form of the template.\n         ",
    "links" : [ ]
  }, {
    "name" : "public BigTextStyle bigText(CharSequence cs)",
    "returnType" : "BigTextStyle",
    "comment" : "\n         * Provide the longer text to be displayed in the big form of the\n         * template in place of the content text.\n         ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getBigText()",
    "returnType" : "CharSequence",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void addExtras(Bundle extras)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "protected void restoreFromExtras(Bundle extras)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeContentView(boolean increasedHeight)",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @param increasedHeight true if this layout be created with an increased height.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeHeadsUpContentView(boolean increasedHeight)",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeBigContentView()",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean areNotificationsVisiblyDifferent(Style other)",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         * Spans are ignored when comparing text for visual difference.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public BigTextStyle setBigContentTitle(CharSequence title)", "public BigTextStyle setSummaryText(CharSequence cs)", "public BigTextStyle bigText(CharSequence cs)", "public CharSequence getBigText()", "public void addExtras(Bundle extras)", "protected void restoreFromExtras(Bundle extras)", "public RemoteViews makeContentView(boolean increasedHeight)", "public RemoteViews makeHeadsUpContentView(boolean increasedHeight)", "public RemoteViews makeBigContentView()", "public boolean areNotificationsVisiblyDifferent(Style other)" ],
  "variableNames" : [ "mBigText" ]
}