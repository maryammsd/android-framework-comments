{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/test/ActivityUnitTestCase.java",
  "packageName" : "android.test",
  "className" : "MockParent",
  "comment" : "\n     * This mock Activity represents the \"parent\" activity.  By injecting this, we allow the user\n     * to call a few more Activity methods, including:\n     * <ul>\n     * <li>{@link android.app.Activity#getRequestedOrientation()}</li>\n     * <li>{@link android.app.Activity#setRequestedOrientation(int)}</li>\n     * <li>{@link android.app.Activity#finish()}</li>\n     * <li>{@link android.app.Activity#finishActivity(int requestCode)}</li>\n     * <li>{@link android.app.Activity#finishFromChild(Activity child)}</li>\n     * </ul>\n     *\n     * TODO: Make this overrideable, and the unit test can look for calls to other methods\n     ",
  "variables" : [ {
    "name" : "mRequestedOrientation",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartedActivityIntent",
    "type" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartedActivityRequest",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFinished",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFinishedActivityRequest",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setRequestedOrientation(int requestedOrientation)",
    "returnType" : "void",
    "comment" : "\n         * Implementing in the parent allows the user to call this function on the tested activity.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getRequestedOrientation()",
    "returnType" : "int",
    "comment" : "\n         * Implementing in the parent allows the user to call this function on the tested activity.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Window getWindow()",
    "returnType" : "Window",
    "comment" : "\n         * By returning null here, we inhibit the creation of any \"container\" for the window.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void startActivityFromChild(Activity child, Intent intent, int requestCode)",
    "returnType" : "void",
    "comment" : "\n         * By defining this in the parent, we allow the tested activity to call\n         * <ul>\n         * <li>{@link android.app.Activity#startActivity(Intent)}</li>\n         * <li>{@link android.app.Activity#startActivityForResult(Intent, int)}</li>\n         * </ul>\n         ",
    "links" : [ "android.app.Activity#startActivity", "android.app.Activity#startActivityForResult" ]
  }, {
    "name" : "public void finishFromChild(Activity child)",
    "returnType" : "void",
    "comment" : "\n         * By defining this in the parent, we allow the tested activity to call\n         * <ul>\n         * <li>{@link android.app.Activity#finish()}</li>\n         * <li>{@link android.app.Activity#finishFromChild(Activity child)}</li>\n         * </ul>\n         ",
    "links" : [ "android.app.Activity#finish", "android.app.Activity#finishFromChild" ]
  }, {
    "name" : "public void finishActivityFromChild(Activity child, int requestCode)",
    "returnType" : "void",
    "comment" : "\n         * By defining this in the parent, we allow the tested activity to call\n         * <ul>\n         * <li>{@link android.app.Activity#finishActivity(int requestCode)}</li>\n         * </ul>\n         ",
    "links" : [ "android.app.Activity#finishActivity" ]
  } ],
  "variableNames" : [ "mRequestedOrientation", "mStartedActivityIntent", "mStartedActivityRequest", "mFinished", "mFinishedActivityRequest" ],
  "methodNames" : [ "public void setRequestedOrientation(int requestedOrientation)", "public int getRequestedOrientation()", "public Window getWindow()", "public void startActivityFromChild(Activity child, Intent intent, int requestCode)", "public void finishFromChild(Activity child)", "public void finishActivityFromChild(Activity child, int requestCode)" ]
}