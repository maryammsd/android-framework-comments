{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inputmethod/InlineSuggestion.java",
  "packageName" : "android.view.inputmethod",
  "className" : "InlineContentCallbackImpl",
  "comment" : "\n     * Handles the communication between the inline suggestion view in current (IME) process and\n     * the remote view provided from the system server.\n     *\n     * <p>This class is thread safe, because all the outside calls are piped into a single\n     * handler thread to be processed.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mMainHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInlineContentProvider",
    "type" : "IInlineContentProvider",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallbackExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "Consumer<InlineContentView>",
    "comment" : "\n         * Callback from the client (IME) that will receive the inflated suggestion view. It'll\n         * only be called once when the view SurfacePackage is first sent back to the client. Any\n         * updates to the view due to attach to window and detach from window events will be\n         * handled under the hood, transparent from the client.\n         ",
    "links" : [ ]
  }, {
    "name" : "mFirstContentReceived",
    "type" : "boolean",
    "comment" : "\n         * Indicates whether the first content has been received or not.\n         ",
    "links" : [ ]
  }, {
    "name" : "mView",
    "type" : "InlineContentView",
    "comment" : "\n         * The client (IME) side view which internally wraps a remote view. It'll be set when\n         * {@link #onContent(SurfaceControlViewHost.SurfacePackage, int, int)} is called, which\n         * should only happen once in the lifecycle of this inline suggestion instance.\n         ",
    "links" : [ "#onContent(SurfaceControlViewHost.SurfacePackage" ]
  }, {
    "name" : "mSurfacePackage",
    "type" : "SurfaceControlViewHost.SurfacePackage",
    "comment" : "\n         * The SurfacePackage pointing to the remote view. It's cached here to be sent to the next\n         * available consumer.\n         ",
    "links" : [ ]
  }, {
    "name" : "mSurfacePackageConsumer",
    "type" : "Consumer<SurfaceControlViewHost.SurfacePackage>",
    "comment" : "\n         * The callback (from the {@link InlineContentView}) which consumes the surface package.\n         * It's cached here to be called when the SurfacePackage is returned from the remote\n         * view owning process.\n         ",
    "links" : [ "android.widget.inline.InlineContentView" ]
  }, {
    "name" : "mInlineTooltipUi",
    "type" : "InlineTooltipUi",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onContent(SurfaceControlViewHost.SurfacePackage content, int width, int height)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleOnContent(SurfaceControlViewHost.SurfacePackage content, int width, int height)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleOnFirstContentReceived(SurfaceControlViewHost.SurfacePackage content, int width, int height)",
    "returnType" : "void",
    "comment" : "\n         * Called when the view content is returned for the first time.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void handleOnSurfacePackage(SurfaceControlViewHost.SurfacePackage surfacePackage)",
    "returnType" : "void",
    "comment" : "\n         * Called when any subsequent SurfacePackage is returned from the remote view owning\n         * process.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void handleOnSurfacePackageReleased()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void handleGetSurfacePackage(Consumer<SurfaceControlViewHost.SurfacePackage> consumer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private InlineContentView.SurfacePackageUpdater getSurfacePackageUpdater()",
    "returnType" : "InlineContentView.SurfacePackageUpdater",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onClick()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onLongClick()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onContent(SurfaceControlViewHost.SurfacePackage content, int width, int height)", "private void handleOnContent(SurfaceControlViewHost.SurfacePackage content, int width, int height)", "private void handleOnFirstContentReceived(SurfaceControlViewHost.SurfacePackage content, int width, int height)", "private void handleOnSurfacePackage(SurfaceControlViewHost.SurfacePackage surfacePackage)", "private void handleOnSurfacePackageReleased()", "private void handleGetSurfacePackage(Consumer<SurfaceControlViewHost.SurfacePackage> consumer)", "private InlineContentView.SurfacePackageUpdater getSurfacePackageUpdater()", "public void onClick()", "public void onLongClick()" ],
  "variableNames" : [ "mMainHandler", "mContext", "mInlineContentProvider", "mCallbackExecutor", "mCallback", "mFirstContentReceived", "mView", "mSurfacePackage", "mSurfacePackageConsumer", "mInlineTooltipUi" ]
}