{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/health/connect/internal/datatypes/ExerciseSessionRecordInternal.java",
  "packageName" : "android.health.connect.internal.datatypes",
  "className" : "ExerciseSessionRecordInternal",
  "comment" : "\n * @see ExerciseSessionRecord\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mNotes",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExerciseType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitle",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExerciseRoute",
    "type" : "ExerciseRouteInternal",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExerciseLaps",
    "type" : "List<ExerciseLapInternal>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExerciseSegments",
    "type" : "List<ExerciseSegmentInternal>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasRoute",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlannedExerciseSessionId",
    "type" : "UUID",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getNotes()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ExerciseSessionRecordInternal setNotes(String notes)",
    "returnType" : "ExerciseSessionRecordInternal",
    "comment" : " returns this object with the specified notes ",
    "links" : [ ]
  }, {
    "name" : "public int getExerciseType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ExerciseSessionRecordInternal setExerciseType(int exerciseType)",
    "returnType" : "ExerciseSessionRecordInternal",
    "comment" : " returns this object with the specified exerciseType ",
    "links" : [ ]
  }, {
    "name" : "public String getTitle()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ExerciseSessionRecordInternal setTitle(String title)",
    "returnType" : "ExerciseSessionRecordInternal",
    "comment" : " returns this object with the specified title ",
    "links" : [ ]
  }, {
    "name" : "public ExerciseRouteInternal getRoute()",
    "returnType" : "ExerciseRouteInternal",
    "comment" : "\n     * @return route of this activity\n     ",
    "links" : [ ]
  }, {
    "name" : "public ExerciseSessionRecordInternal setRoute(ExerciseRouteInternal route)",
    "returnType" : "ExerciseSessionRecordInternal",
    "comment" : " returns this object with the specified route ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasRoute()",
    "returnType" : "boolean",
    "comment" : " returns if this session has route ",
    "links" : [ ]
  }, {
    "name" : "public ExerciseSessionRecordInternal setHasRoute(boolean hasRoute)",
    "returnType" : "ExerciseSessionRecordInternal",
    "comment" : " returns this object with hasRoute set ",
    "links" : [ ]
  }, {
    "name" : "public List<ExerciseLapInternal> getLaps()",
    "returnType" : "List<ExerciseLapInternal>",
    "comment" : " returns laps of this session ",
    "links" : [ ]
  }, {
    "name" : "public ExerciseSessionRecordInternal setExerciseLaps(@NonNull List<ExerciseLapInternal> exerciseLaps)",
    "returnType" : "ExerciseSessionRecordInternal",
    "comment" : " returns this object with exercise laps set ",
    "links" : [ ]
  }, {
    "name" : "public List<ExerciseSegmentInternal> getSegments()",
    "returnType" : "List<ExerciseSegmentInternal>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ExerciseSessionRecordInternal setExerciseSegments(@NonNull List<ExerciseSegmentInternal> exerciseSegments)",
    "returnType" : "ExerciseSessionRecordInternal",
    "comment" : " returns this object with exercise segments set ",
    "links" : [ ]
  }, {
    "name" : "public ExerciseSessionRecordInternal setPlannedExerciseSessionId(@Nullable UUID id)",
    "returnType" : "ExerciseSessionRecordInternal",
    "comment" : " Sets the {@link PlannedExerciseSessionRecord} that this session was based upon. ",
    "links" : [ "android.health.connect.datatypes.PlannedExerciseSessionRecord" ]
  }, {
    "name" : "public UUID getPlannedExerciseSessionId()",
    "returnType" : "UUID",
    "comment" : "\n     * Returns the ID of the {@link PlannedExerciseSessionRecord} that this session was based upon.\n     * If not set, returns null.\n     ",
    "links" : [ "android.health.connect.datatypes.PlannedExerciseSessionRecord" ]
  }, {
    "name" : "public ExerciseSessionRecord toExternalRecord()",
    "returnType" : "ExerciseSessionRecord",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void populateIntervalRecordTo(@NonNull Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void populateIntervalRecordFrom(@NonNull Parcel parcel)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addRouteLocation(ExerciseRouteInternal.LocationInternal location)",
    "returnType" : "void",
    "comment" : " Add route location to the session ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getNotes()", "public ExerciseSessionRecordInternal setNotes(String notes)", "public int getExerciseType()", "public ExerciseSessionRecordInternal setExerciseType(int exerciseType)", "public String getTitle()", "public ExerciseSessionRecordInternal setTitle(String title)", "public ExerciseRouteInternal getRoute()", "public ExerciseSessionRecordInternal setRoute(ExerciseRouteInternal route)", "public boolean hasRoute()", "public ExerciseSessionRecordInternal setHasRoute(boolean hasRoute)", "public List<ExerciseLapInternal> getLaps()", "public ExerciseSessionRecordInternal setExerciseLaps(@NonNull List<ExerciseLapInternal> exerciseLaps)", "public List<ExerciseSegmentInternal> getSegments()", "public ExerciseSessionRecordInternal setExerciseSegments(@NonNull List<ExerciseSegmentInternal> exerciseSegments)", "public ExerciseSessionRecordInternal setPlannedExerciseSessionId(@Nullable UUID id)", "public UUID getPlannedExerciseSessionId()", "public ExerciseSessionRecord toExternalRecord()", "public void populateIntervalRecordTo(@NonNull Parcel parcel)", "public void populateIntervalRecordFrom(@NonNull Parcel parcel)", "public void addRouteLocation(ExerciseRouteInternal.LocationInternal location)" ],
  "variableNames" : [ "mNotes", "mExerciseType", "mTitle", "mExerciseRoute", "mExerciseLaps", "mExerciseSegments", "mHasRoute", "mPlannedExerciseSessionId" ]
}