{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/breakiter/DictionaryBreakEngine.java",
  "packageName" : "android.icu.impl.breakiter",
  "className" : "DictionaryBreakEngine",
  "comment" : "\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "fSet",
    "type" : "UnicodeSet",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean handles(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int findBreaks(CharacterIterator text, int startPos, int endPos, DequeI foundBreaks, boolean isPhraseBreaking)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setCharacters(UnicodeSet set)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " abstract int divideUpDictionaryRange(CharacterIterator text, int rangeStart, int rangeEnd, DequeI foundBreaks, boolean isPhraseBreaking)",
    "returnType" : "int",
    "comment" : "\n     * <p>Divide up a range of known dictionary characters handled by this break engine.</p>\n     *\n     * @param text A UText representing the text\n     * @param rangeStart The start of the range of dictionary characters\n     * @param rangeEnd The end of the range of dictionary characters\n     * @param foundBreaks Output of break positions. Positions are pushed.\n     *                    Pre-existing contents of the output stack are unaltered.\n     * @return The number of breaks found\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean handles(int c)", "public int findBreaks(CharacterIterator text, int startPos, int endPos, DequeI foundBreaks, boolean isPhraseBreaking)", " void setCharacters(UnicodeSet set)", " abstract int divideUpDictionaryRange(CharacterIterator text, int rangeStart, int rangeEnd, DequeI foundBreaks, boolean isPhraseBreaking)" ],
  "variableNames" : [ "fSet" ]
}