{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inputmethod/ExtractedText.java",
  "packageName" : "android.view.inputmethod",
  "className" : "ExtractedText",
  "comment" : "\n * Information about text that has been extracted for use by an input method.\n *\n * This contains information about a portion of the currently edited text,\n * that the IME should display into its own interface while in extracted mode.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "text",
    "type" : "CharSequence",
    "comment" : "\n     * The text that has been extracted.\n     *\n     * @see android.widget.TextView#getText()\n     ",
    "links" : [ ]
  }, {
    "name" : "startOffset",
    "type" : "int",
    "comment" : "\n     * The offset in the overall text at which the extracted text starts.\n     ",
    "links" : [ ]
  }, {
    "name" : "partialStartOffset",
    "type" : "int",
    "comment" : "\n     * If the content is a report of a partial text change, this is the\n     * offset where the change starts and it runs until\n     * {@link #partialEndOffset}.  If the content is the full text, this\n     * field is -1.\n     ",
    "links" : [ "#partialEndOffset" ]
  }, {
    "name" : "partialEndOffset",
    "type" : "int",
    "comment" : "\n     * If the content is a report of a partial text change, this is the offset\n     * where the change ends.  Note that the actual text may be larger or\n     * smaller than the difference between this and {@link #partialStartOffset},\n     * meaning a reduction or increase, respectively, in the total text.\n     ",
    "links" : [ "#partialStartOffset" ]
  }, {
    "name" : "selectionStart",
    "type" : "int",
    "comment" : "\n     * The offset where the selection currently starts within the extracted\n     * text.  The real selection start position is at\n     * <var>startOffset</var>+<var>selectionStart</var>.\n     ",
    "links" : [ ]
  }, {
    "name" : "selectionEnd",
    "type" : "int",
    "comment" : "\n     * The offset where the selection currently ends within the extracted\n     * text.  The real selection end position is at\n     * <var>startOffset</var>+<var>selectionEnd</var>.\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_SINGLE_LINE",
    "type" : "int",
    "comment" : "\n     * Bit for {@link #flags}: set if the text being edited can only be on\n     * a single line.\n     ",
    "links" : [ "#flags" ]
  }, {
    "name" : "FLAG_SELECTING",
    "type" : "int",
    "comment" : "\n     * Bit for {@link #flags}: set if the editor is currently in selection mode.\n     *\n     * This happens when a hardware keyboard with latched keys is attached and\n     * the shift key is currently latched.\n     ",
    "links" : [ "#flags" ]
  }, {
    "name" : "flags",
    "type" : "int",
    "comment" : "\n     * Additional bit flags of information about the edited text.\n     ",
    "links" : [ ]
  }, {
    "name" : "hint",
    "type" : "CharSequence",
    "comment" : "\n     * The hint that has been extracted.\n     *\n     * @see android.widget.TextView#getHint()\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<ExtractedText>",
    "comment" : "\n     * Used to make this class parcelable.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Used to package this object into a {@link Parcel}.\n     *\n     * @param dest The {@link Parcel} to be written.\n     * @param flags The flags used for parceling.\n     ",
    "links" : [ "android.os.Parcel" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()" ],
  "variableNames" : [ "text", "startOffset", "partialStartOffset", "partialEndOffset", "selectionStart", "selectionEnd", "FLAG_SINGLE_LINE", "FLAG_SELECTING", "flags", "hint", "CREATOR" ]
}