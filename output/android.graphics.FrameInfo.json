{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/FrameInfo.java",
  "packageName" : "android.graphics",
  "className" : "FrameInfo",
  "comment" : "\n * Class that contains all the timing information for the current frame. This\n * is used in conjunction with the hardware renderer to provide\n * continous-monitoring jank events\n *\n * All times in nanoseconds from CLOCK_MONOTONIC/System.nanoTime()\n *\n * To minimize overhead from System.nanoTime() calls we infer durations of\n * things by knowing the ordering of the events. For example, to know how\n * long layout & measure took it's displayListRecordStart - performTraversalsStart.\n *\n * These constants must be kept in sync with FrameInfo.h in libhwui and are\n * used for indexing into AttachInfo's frameInfo long[], which is intended\n * to be quick to pass down to native via JNI, hence a pre-packed format\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "frameInfo",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FLAGS",
    "type" : "int",
    "comment" : " Various flags set to provide extra metadata about the current frame",
    "links" : [ ]
  }, {
    "name" : "FLAG_WINDOW_LAYOUT_CHANGED",
    "type" : "long",
    "comment" : " Is this the first-draw following a window layout?",
    "links" : [ ]
  }, {
    "name" : "FLAG_SURFACE_CANVAS",
    "type" : "long",
    "comment" : " A renderer associated with just a Surface, not with a ViewRootImpl instance.",
    "links" : [ ]
  }, {
    "name" : "INTENDED_VSYNC",
    "type" : "int",
    "comment" : " The intended vsync time, unadjusted by jitter",
    "links" : [ ]
  }, {
    "name" : "VSYNC",
    "type" : "int",
    "comment" : " animation & drawing system",
    "links" : [ ]
  }, {
    "name" : "OLDEST_INPUT_EVENT",
    "type" : "int",
    "comment" : " The time of the oldest input event",
    "links" : [ ]
  }, {
    "name" : "NEWEST_INPUT_EVENT",
    "type" : "int",
    "comment" : " The time of the newest input event",
    "links" : [ ]
  }, {
    "name" : "HANDLE_INPUT_START",
    "type" : "int",
    "comment" : " When input event handling started",
    "links" : [ ]
  }, {
    "name" : "ANIMATION_START",
    "type" : "int",
    "comment" : " When animation evaluations started",
    "links" : [ ]
  }, {
    "name" : "PERFORM_TRAVERSALS_START",
    "type" : "int",
    "comment" : " When ViewRootImpl#performTraversals() started",
    "links" : [ ]
  }, {
    "name" : "DRAW_START",
    "type" : "int",
    "comment" : " When View:draw() started",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setVsync(long intendedVsync, long usedVsync)",
    "returnType" : "void",
    "comment" : " checkstyle ",
    "links" : [ ]
  }, {
    "name" : "public void updateInputEventTime(long inputEventTime, long inputEventOldestTime)",
    "returnType" : "void",
    "comment" : " checkstyle ",
    "links" : [ ]
  }, {
    "name" : "public void markInputHandlingStart()",
    "returnType" : "void",
    "comment" : " checkstyle ",
    "links" : [ ]
  }, {
    "name" : "public void markAnimationsStart()",
    "returnType" : "void",
    "comment" : " checkstyle ",
    "links" : [ ]
  }, {
    "name" : "public void markPerformTraversalsStart()",
    "returnType" : "void",
    "comment" : " checkstyle ",
    "links" : [ ]
  }, {
    "name" : "public void markDrawStart()",
    "returnType" : "void",
    "comment" : " checkstyle ",
    "links" : [ ]
  }, {
    "name" : "public void addFlags(@FrameInfoFlags long flags)",
    "returnType" : "void",
    "comment" : " checkstyle ",
    "links" : [ ]
  } ],
  "variableNames" : [ "frameInfo", "FLAGS", "FLAG_WINDOW_LAYOUT_CHANGED", "FLAG_SURFACE_CANVAS", "INTENDED_VSYNC", "VSYNC", "OLDEST_INPUT_EVENT", "NEWEST_INPUT_EVENT", "HANDLE_INPUT_START", "ANIMATION_START", "PERFORM_TRAVERSALS_START", "DRAW_START" ],
  "methodNames" : [ "public void setVsync(long intendedVsync, long usedVsync)", "public void updateInputEventTime(long inputEventTime, long inputEventOldestTime)", "public void markInputHandlingStart()", "public void markAnimationsStart()", "public void markPerformTraversalsStart()", "public void markDrawStart()", "public void addFlags(@FrameInfoFlags long flags)" ]
}