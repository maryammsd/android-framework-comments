{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/X509Util.java",
  "packageName" : "org.chromium.net",
  "className" : "X509Util",
  "comment" : " Utility functions for interacting with Android's X.509 certificates. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCertificateFactory",
    "type" : "CertificateFactory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OID_TLS_SERVER_AUTH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OID_ANY_EKU",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "OID_SERVER_GATED_NETSCAPE",
    "type" : "String",
    "comment" : "    Netscape:",
    "links" : [ ]
  }, {
    "name" : "OID_SERVER_GATED_MICROSOFT",
    "type" : "String",
    "comment" : "    Microsoft:",
    "links" : [ ]
  }, {
    "name" : "sDefaultTrustManager",
    "type" : "X509TrustManagerExtensions",
    "comment" : " Trust manager backed up by the read-only system certificate store. ",
    "links" : [ ]
  }, {
    "name" : "sTrustStorageListener",
    "type" : "TrustStorageListener",
    "comment" : "\n     * BroadcastReceiver that listens to change in the system keystore to invalidate certificate\n     * caches.\n     ",
    "links" : [ ]
  }, {
    "name" : "sTestTrustManager",
    "type" : "X509TrustManagerExtensions",
    "comment" : "\n     * Trust manager backed up by a custom certificate store. We need such manager to plant test\n     * root CA to the trust store in testing.\n     ",
    "links" : [ ]
  }, {
    "name" : "sTestKeyStore",
    "type" : "KeyStore",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sSystemKeyStore",
    "type" : "KeyStore",
    "comment" : "\n     * The system key store. This is used to determine whether a trust anchor is a system trust\n     * anchor or user-installed.\n     ",
    "links" : [ ]
  }, {
    "name" : "sSystemCertificateDirectory",
    "type" : "File",
    "comment" : "\n     * The directory where system certificates are stored. This is used to determine whether a\n     * trust anchor is a system trust anchor or user-installed. The KeyStore API alone is not\n     * sufficient to efficiently query whether a given X500Principal, PublicKey pair is a trust\n     * anchor.\n     ",
    "links" : [ ]
  }, {
    "name" : "sSystemTrustAnchorCache",
    "type" : "Set<Pair<X500Principal, PublicKey>>",
    "comment" : "\n     * An in-memory cache of which trust anchors are system trust roots. This avoids reading and\n     * decoding the root from disk on every verification. Mirrors a similar in-memory cache in\n     * Conscrypt's X509TrustManager implementation.\n     ",
    "links" : [ ]
  }, {
    "name" : "sLoadedSystemKeyStore",
    "type" : "boolean",
    "comment" : "\n     * True if the system key store has been loaded. If the \"AndroidCAStore\" KeyStore instance\n     * was not found, sSystemKeyStore may be null while sLoadedSystemKeyStore is true.\n     ",
    "links" : [ ]
  }, {
    "name" : "sTestRoot",
    "type" : "X509Certificate",
    "comment" : " A root that will be installed as a user-trusted root for testing purposes. ",
    "links" : [ ]
  }, {
    "name" : "sLock",
    "type" : "Object",
    "comment" : " Lock object used to synchronize all calls that modify or depend on the trust managers. ",
    "links" : [ ]
  }, {
    "name" : "HEX_DIGITS",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static List<X509Certificate> checkServerTrustedIgnoringRuntimeException(X509TrustManagerExtensions tm, X509Certificate[] chain, String authType, String host) throws CertificateException",
    "returnType" : "List<X509Certificate>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void ensureInitialized() throws CertificateException, KeyStoreException, NoSuchAlgorithmException",
    "returnType" : "void",
    "comment" : " Ensures that the trust managers and certificate factory are initialized. ",
    "links" : [ ]
  }, {
    "name" : "private static void ensureInitializedLocked() throws CertificateException, KeyStoreException, NoSuchAlgorithmException",
    "returnType" : "void",
    "comment" : " called locked.",
    "links" : [ ]
  }, {
    "name" : "private static void ensureTestInitializedLocked() throws CertificateException, KeyStoreException, NoSuchAlgorithmException",
    "returnType" : "void",
    "comment" : "\n     * Ensures that test  trust managers and certificate factory are initialized. Must be called\n     * with |sLock| held.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static X509TrustManagerExtensions createTrustManager(KeyStore keyStore) throws KeyStoreException, NoSuchAlgorithmException",
    "returnType" : "X509TrustManagerExtensions",
    "comment" : "\n     * Creates a X509TrustManagerExtensions backed up by the given key\n     * store. When null is passed as a key store, system default trust store is\n     * used. Returns null if no created TrustManager was suitable.\n     * @throws KeyStoreException, NoSuchAlgorithmException on error initializing the TrustManager.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void reloadTestTrustManager() throws KeyStoreException, NoSuchAlgorithmException, CertificateException",
    "returnType" : "void",
    "comment" : " After each modification of test key store, trust manager has to be generated again. ",
    "links" : [ ]
  }, {
    "name" : "private static void reloadDefaultTrustManager() throws KeyStoreException, NoSuchAlgorithmException, CertificateException",
    "returnType" : "void",
    "comment" : "\n     * After each modification by the system of the key store, trust manager has to be regenerated.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static X509Certificate createCertificateFromBytes(byte[] derBytes) throws CertificateException, KeyStoreException, NoSuchAlgorithmException",
    "returnType" : "X509Certificate",
    "comment" : " Convert a DER encoded certificate to an X509Certificate. ",
    "links" : [ ]
  }, {
    "name" : "public static void addTestRootCertificate(byte[] rootCertBytes) throws CertificateException, KeyStoreException, NoSuchAlgorithmException",
    "returnType" : "void",
    "comment" : " Add a test root certificate for use by the Android Platform verifier. ",
    "links" : [ ]
  }, {
    "name" : "public static void clearTestRootCertificates() throws NoSuchAlgorithmException, CertificateException, KeyStoreException",
    "returnType" : "void",
    "comment" : " Clear test root certificates in use by the Android Platform verifier. ",
    "links" : [ ]
  }, {
    "name" : "public static void setTestRootCertificateForBuiltin(byte[] rootCertBytes) throws NoSuchAlgorithmException, CertificateException, KeyStoreException",
    "returnType" : "void",
    "comment" : " Set a test root certificate for use by CertVerifierBuiltin. ",
    "links" : [ ]
  }, {
    "name" : "private static String hashPrincipal(X500Principal principal) throws NoSuchAlgorithmException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isKnownRoot(X509Certificate root) throws NoSuchAlgorithmException, KeyStoreException",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean verifyKeyUsage(X509Certificate certificate) throws CertificateException",
    "returnType" : "boolean",
    "comment" : "\n     * If an EKU extension is present in the end-entity certificate, it MUST contain either the\n     * anyEKU or serverAuth or netscapeSGC or Microsoft SGC EKUs.\n     *\n     * @return true if there is no EKU extension or if any of the EKU extensions is one of the valid\n     * OIDs for web server certificates.\n     *\n     * TODO(palmer): This can be removed after the equivalent change is made to the Android default\n     * TrustManager and that change is shipped to a large majority of Android users.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static byte[][] getUserAddedRoots()",
    "returnType" : "byte[][]",
    "comment" : "\n     * Get the list of user-added roots.\n     *\n     * @return DER-encoded list of user-added roots.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static AndroidCertVerifyResult verifyServerCertificates(byte[][] certChain, String authType, String host) throws KeyStoreException, NoSuchAlgorithmException",
    "returnType" : "AndroidCertVerifyResult",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static List<X509Certificate> checkServerTrustedIgnoringRuntimeException(X509TrustManagerExtensions tm, X509Certificate[] chain, String authType, String host) throws CertificateException", "private static void ensureInitialized() throws CertificateException, KeyStoreException, NoSuchAlgorithmException", "private static void ensureInitializedLocked() throws CertificateException, KeyStoreException, NoSuchAlgorithmException", "private static void ensureTestInitializedLocked() throws CertificateException, KeyStoreException, NoSuchAlgorithmException", "private static X509TrustManagerExtensions createTrustManager(KeyStore keyStore) throws KeyStoreException, NoSuchAlgorithmException", "private static void reloadTestTrustManager() throws KeyStoreException, NoSuchAlgorithmException, CertificateException", "private static void reloadDefaultTrustManager() throws KeyStoreException, NoSuchAlgorithmException, CertificateException", "public static X509Certificate createCertificateFromBytes(byte[] derBytes) throws CertificateException, KeyStoreException, NoSuchAlgorithmException", "public static void addTestRootCertificate(byte[] rootCertBytes) throws CertificateException, KeyStoreException, NoSuchAlgorithmException", "public static void clearTestRootCertificates() throws NoSuchAlgorithmException, CertificateException, KeyStoreException", "public static void setTestRootCertificateForBuiltin(byte[] rootCertBytes) throws NoSuchAlgorithmException, CertificateException, KeyStoreException", "private static String hashPrincipal(X500Principal principal) throws NoSuchAlgorithmException", "private static boolean isKnownRoot(X509Certificate root) throws NoSuchAlgorithmException, KeyStoreException", " static boolean verifyKeyUsage(X509Certificate certificate) throws CertificateException", "public static byte[][] getUserAddedRoots()", "public static AndroidCertVerifyResult verifyServerCertificates(byte[][] certChain, String authType, String host) throws KeyStoreException, NoSuchAlgorithmException" ],
  "variableNames" : [ "TAG", "sCertificateFactory", "OID_TLS_SERVER_AUTH", "OID_ANY_EKU", "OID_SERVER_GATED_NETSCAPE", "OID_SERVER_GATED_MICROSOFT", "sDefaultTrustManager", "sTrustStorageListener", "sTestTrustManager", "sTestKeyStore", "sSystemKeyStore", "sSystemCertificateDirectory", "sSystemTrustAnchorCache", "sLoadedSystemKeyStore", "sTestRoot", "sLock", "HEX_DIGITS" ]
}