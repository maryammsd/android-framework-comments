{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/CancellationSignalBeamer.java",
  "packageName" : "android.os",
  "className" : "Sender",
  "comment" : " The sending side of an {@link CancellationSignalBeamer} ",
  "links" : [ "android.os.CancellationSignalBeamer" ],
  "variables" : [ {
    "name" : "sScope",
    "type" : "ThreadLocal<Pair<Sender, ArrayList<CloseableToken>>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public CloseableToken beam(@Nullable CancellationSignal cs)",
    "returnType" : "CloseableToken",
    "comment" : " TODO(b/254888024): @MustBeClosed",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCancel(@NonNull IBinder token)",
    "returnType" : "void",
    "comment" : "\n         * A {@link #beam}ed {@link CancellationSignal} was closed.\n         *\n         * MUST be forwarded to {@link Receiver#cancel} with proper ordering. See\n         * {@link CancellationSignalBeamer} for details.\n         ",
    "links" : [ "android.os.CancellationSignal", "#beam", "#cancel", "android.os.CancellationSignalBeamer" ]
  }, {
    "name" : "public abstract void onForget(@NonNull IBinder token)",
    "returnType" : "void",
    "comment" : "\n         * A {@link #beam}ed {@link CancellationSignal} was GC'd.\n         *\n         * MUST be forwarded to {@link Receiver#forget} with proper ordering. See\n         * {@link CancellationSignalBeamer} for details.\n         ",
    "links" : [ "android.os.CancellationSignal", "#beam", "#forget", "android.os.CancellationSignalBeamer" ]
  }, {
    "name" : "public MustClose beamScopeIfNeeded(@NonNull HandwritingGesture gesture)",
    "returnType" : "MustClose",
    "comment" : "\n         * Beams a {@link CancellationSignal} through an existing Binder interface.\n         * @param gesture {@link HandwritingGesture} that supports\n         *  {@link CancellableHandwritingGesture cancellation} requesting cancellation token.\n         * @return {@link IBinder} token. MUST be {@link MustClose#close}d <em>after</em>\n         *  the binder call transporting it to the remote process, best with\n         *  try-with-resources. {@code null} if {@code cs} was {@code null} or if\n         *  {@link HandwritingGesture} isn't {@link CancellableHandwritingGesture cancellable}.\n         ",
    "links" : [ "android.os.CancellationSignal", "#close", "android.view.inputmethod.CancellableHandwritingGesture", "android.os.IBinder" ]
  }, {
    "name" : "public static IBinder beamFromScope(@NonNull CancellationSignal cs)",
    "returnType" : "IBinder",
    "comment" : "\n         * Beams a {@link CancellationSignal} token from existing scope created by previous call to\n         * {@link #beamScopeIfNeeded()}\n         * @param cs {@link CancellationSignal} for which token should be returned.\n         * @return {@link IBinder} token.\n         ",
    "links" : [ "android.os.CancellationSignal", "#beamScopeIfNeeded()", "android.os.IBinder" ]
  } ],
  "methodNames" : [ "public CloseableToken beam(@Nullable CancellationSignal cs)", "public abstract void onCancel(@NonNull IBinder token)", "public abstract void onForget(@NonNull IBinder token)", "public MustClose beamScopeIfNeeded(@NonNull HandwritingGesture gesture)", "public static IBinder beamFromScope(@NonNull CancellationSignal cs)" ],
  "variableNames" : [ "sScope" ]
}