{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/ScreenCaptureCallbackHandler.java",
  "packageName" : "android.app",
  "className" : "ScreenCaptureCallbackHandler",
  "comment" : " Handles screen capture callbacks.\n * @hide\n *",
  "links" : [ ],
  "variables" : [ {
    "name" : "mActivityToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mObserver",
    "type" : "ScreenCaptureObserver",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScreenCaptureRegistrations",
    "type" : "ArrayMap<Activity.ScreenCaptureCallback, ScreenCaptureRegistration>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void registerScreenCaptureCallback(@NonNull @CallbackExecutor Executor executor, @NonNull Activity.ScreenCaptureCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Start monitoring for screen captures of the activity, the callback will be triggered whenever\n     * a screen capture is attempted. This callback will be executed on the thread of the passed\n     * {@code executor}. If the window is FLAG_SECURE, the callback will not be triggered.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void unregisterScreenCaptureCallback(@NonNull Activity.ScreenCaptureCallback callback)",
    "returnType" : "void",
    "comment" : " Stop monitoring for screen captures of the activity ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void registerScreenCaptureCallback(@NonNull @CallbackExecutor Executor executor, @NonNull Activity.ScreenCaptureCallback callback)", "public void unregisterScreenCaptureCallback(@NonNull Activity.ScreenCaptureCallback callback)" ],
  "variableNames" : [ "mActivityToken", "mObserver", "mScreenCaptureRegistrations" ]
}