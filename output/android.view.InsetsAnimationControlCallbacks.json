{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/InsetsAnimationControlCallbacks.java",
  "packageName" : "android.view",
  "className" : "InsetsAnimationControlCallbacks",
  "comment" : "\n * Provide an interface to let InsetsAnimationControlImpl and InsetsResizeAnimationRunner call back\n * into its owner.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void startAnimation(T runner, WindowInsetsAnimationControlListener listener, int types, WindowInsetsAnimation animation, Bounds bounds)",
    "returnType" : "void",
    "comment" : "\n     * Executes the necessary code to start the animation in the correct order, including:\n     * <ul>\n     *     <li>Dispatch {@link WindowInsetsAnimation.Callback#onPrepare}</li>\n     *     <li>Update insets state and run layout according to {@code layoutDuringAnimation}</li>\n     *     <li>Dispatch {@link WindowInsetsAnimation.Callback#onStart}</li>\n     *     <li>Dispatch {@link WindowInsetsAnimationControlListener#onReady}</li>\n     * </ul>\n     ",
    "links" : [ "android.view.WindowInsetsAnimationControlListener#onReady", "WindowInsetsAnimation.Callback#onPrepare", "WindowInsetsAnimation.Callback#onStart" ]
  }, {
    "name" : " void scheduleApplyChangeInsets(InsetsAnimationControlRunner runner)",
    "returnType" : "void",
    "comment" : "\n     * Schedule the apply by posting the animation callback.\n     *\n     * @param runner The runner that requested applying insets\n     ",
    "links" : [ ]
  }, {
    "name" : " void notifyFinished(InsetsAnimationControlRunner runner, boolean shown)",
    "returnType" : "void",
    "comment" : "\n     * Finish the final steps after the animation.\n     * @param runner The runner used to run the animation.\n     * @param shown {@code true} if the insets are shown.\n     ",
    "links" : [ ]
  }, {
    "name" : " void applySurfaceParams(SyncRtSurfaceTransactionApplier.SurfaceParams... params)",
    "returnType" : "void",
    "comment" : "\n     * Apply the new params to the surface.\n     * @param params The {@link android.view.SyncRtSurfaceTransactionApplier.SurfaceParams} to\n     *               apply.\n     ",
    "links" : [ "android.view.SyncRtSurfaceTransactionApplier.SurfaceParams" ]
  }, {
    "name" : " void releaseSurfaceControlFromRt(SurfaceControl sc)",
    "returnType" : "void",
    "comment" : "\n     * Post a message to release the Surface, guaranteed to happen after all\n     * previous calls to applySurfaceParams.\n     ",
    "links" : [ ]
  }, {
    "name" : " void reportPerceptible(@InsetsType int types, boolean perceptible)",
    "returnType" : "void",
    "comment" : "\n     * Reports that the perceptibility of the given types has changed to the given value.\n     *\n     * A type is perceptible if it is not (almost) entirely off-screen and not (almost) entirely\n     * transparent.\n     *\n     * @param types the (public) types whose perceptibility has changed\n     * @param perceptible true, if the types are now perceptible, false if they are not perceptible\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void startAnimation(T runner, WindowInsetsAnimationControlListener listener, int types, WindowInsetsAnimation animation, Bounds bounds)", " void scheduleApplyChangeInsets(InsetsAnimationControlRunner runner)", " void notifyFinished(InsetsAnimationControlRunner runner, boolean shown)", " void applySurfaceParams(SyncRtSurfaceTransactionApplier.SurfaceParams... params)", " void releaseSurfaceControlFromRt(SurfaceControl sc)", " void reportPerceptible(@InsetsType int types, boolean perceptible)" ],
  "variableNames" : [ ]
}