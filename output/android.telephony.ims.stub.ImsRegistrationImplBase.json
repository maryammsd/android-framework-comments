{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/ims/stub/ImsRegistrationImplBase.java",
  "packageName" : "android.telephony.ims.stub",
  "className" : "ImsRegistrationImplBase",
  "comment" : "\n * Controls IMS registration for this ImsService and notifies the framework when the IMS\n * registration for this ImsService has changed status.\n * <p>\n * Note: There is no guarantee on the thread that the calls from the framework will be called on. It\n * is the implementors responsibility to handle moving the calls to a working thread if required.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "REGISTRATION_TECH_NONE",
    "type" : "int",
    "comment" : "\n     * No registration technology specified, used when we are not registered.\n     ",
    "links" : [ ]
  }, {
    "name" : "REGISTRATION_TECH_LTE",
    "type" : "int",
    "comment" : "\n     * This ImsService is registered to IMS via LTE.\n     ",
    "links" : [ ]
  }, {
    "name" : "REGISTRATION_TECH_IWLAN",
    "type" : "int",
    "comment" : "\n     * This ImsService is registered to IMS via IWLAN.\n     ",
    "links" : [ ]
  }, {
    "name" : "REGISTRATION_TECH_CROSS_SIM",
    "type" : "int",
    "comment" : "\n     * This ImsService is registered to IMS via internet over second subscription.\n     ",
    "links" : [ ]
  }, {
    "name" : "REGISTRATION_TECH_NR",
    "type" : "int",
    "comment" : "\n     * This ImsService is registered to IMS via NR.\n     ",
    "links" : [ ]
  }, {
    "name" : "REGISTRATION_TECH_3G",
    "type" : "int",
    "comment" : "\n     * This ImsService is registered to IMS via 3G.\n     ",
    "links" : [ ]
  }, {
    "name" : "REGISTRATION_TECH_MAX",
    "type" : "int",
    "comment" : "\n     * This is used to check the upper range of registration tech\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REGISTRATION_STATE_UNKNOWN",
    "type" : "int",
    "comment" : " yet.",
    "links" : [ ]
  }, {
    "name" : "REASON_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Unspecified reason.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_SIM_REMOVED",
    "type" : "int",
    "comment" : "\n     * Since SIM is removed, the credentials for IMS service is also removed.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_SIM_REFRESH",
    "type" : "int",
    "comment" : "\n     * Detach from the network shall be performed due to the SIM refresh. IMS service should be\n     * deregistered before that procedure.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_ALLOWED_NETWORK_TYPES_CHANGED",
    "type" : "int",
    "comment" : "\n     * The allowed network types have changed, resulting in a network type\n     * that does not support IMS.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_NON_IMS_CAPABLE_NETWORK",
    "type" : "int",
    "comment" : "\n     * The device camped on a network that does not support IMS.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_RADIO_POWER_OFF",
    "type" : "int",
    "comment" : "\n     * IMS service should be deregistered from the network before turning off the radio.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_HANDOVER_FAILED",
    "type" : "int",
    "comment" : "\n     * Since the handover is failed or not allowed, the data service for IMS shall be\n     * disconnected.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REASON_VOPS_NOT_SUPPORTED",
    "type" : "int",
    "comment" : "\n     * The network is changed to a network that does not support voice over IMS.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "IImsRegistration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallbacks",
    "type" : "RemoteCallbackListExt<IImsRegistrationCallback>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEmergencyCallbacks",
    "type" : "RemoteCallbackListExt<IImsRegistrationCallback>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRegistrationAttributes",
    "type" : "ImsRegistrationAttributes",
    "comment" : " Locked on mLock",
    "links" : [ ]
  }, {
    "name" : "mEmergencyRegistrationAttributes",
    "type" : "ImsRegistrationAttributes",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRegistrationState",
    "type" : "int",
    "comment" : " Locked on mLock",
    "links" : [ ]
  }, {
    "name" : "mEmergencyRegistrationState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastDisconnectCause",
    "type" : "ImsReasonInfo",
    "comment" : " Locked on mLock, create unspecified disconnect cause.",
    "links" : [ ]
  }, {
    "name" : "mEmergencyLastDisconnectCause",
    "type" : "ImsReasonInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastDisconnectSuggestedAction",
    "type" : "int",
    "comment" : " Locked on mLock",
    "links" : [ ]
  }, {
    "name" : "mEmergencyLastDisconnectSuggestedAction",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastDisconnectRadioTech",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEmergencyLastDisconnectRadioTech",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUris",
    "type" : "Uri[]",
    "comment" : " first added.",
    "links" : [ ]
  }, {
    "name" : "mUrisSet",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final IImsRegistration getBinder()",
    "returnType" : "IImsRegistration",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private void addRegistrationCallback(IImsRegistrationCallback c) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void removeRegistrationCallback(IImsRegistrationCallback c)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addEmergencyRegistrationCallback(IImsRegistrationCallback c) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void removeEmergencyRegistrationCallback(IImsRegistrationCallback c)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateSipDelegateRegistration()",
    "returnType" : "void",
    "comment" : "\n     * Called by the framework to request that the ImsService perform the network registration\n     * of all SIP delegates associated with this ImsService.\n     * <p>\n     * If the SIP delegate feature tag configuration has changed, then this method will be\n     * called in order to let the ImsService know that it can pick up these changes in the IMS\n     * registration.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ ]
  }, {
    "name" : "public void triggerSipDelegateDeregistration()",
    "returnType" : "void",
    "comment" : "\n     * Called by the framework to request that the ImsService perform the network deregistration of\n     * all SIP delegates associated with this ImsService.\n     * <p>\n     * This is typically called in situations where the user has changed the configuration of the\n     * device (for example, the default messaging application) and the framework is reconfiguring\n     * the tags associated with each IMS application.\n     * <p>\n     * This should not affect the registration of features managed by the ImsService itself, such as\n     * feature tags related to MMTEL registration.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ ]
  }, {
    "name" : "public void triggerFullNetworkRegistration(@IntRange(from = 100, to = 699) int sipCode, @Nullable String sipReason)",
    "returnType" : "void",
    "comment" : "\n     * Called by the framework to notify the ImsService that a SIP delegate connection has received\n     * a SIP message containing a permanent failure response (such as a 403) or an indication that a\n     * SIP response timer has timed out in response to an outgoing SIP message. This method will be\n     * called when this condition occurs to trigger the ImsService to tear down the full IMS\n     * registration and re-register again.\n     *\n     * @param sipCode The SIP error code that represents a permanent failure that was received in\n     *    response to a request generated by the IMS application. See RFC3261 7.2 for the general\n     *    classes of responses available here, however the codes that generate this condition may\n     *    be carrier specific.\n     * @param sipReason The reason associated with the SIP error code. {@code null} if there was no\n     *    reason associated with the error.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ ]
  }, {
    "name" : "public void triggerDeregistration(@ImsDeregistrationReason int reason)",
    "returnType" : "void",
    "comment" : "\n     * Requests IMS stack to perform graceful IMS deregistration before radio performing\n     * network detach in the events of SIM remove, refresh or and so on. The radio waits for\n     * the IMS deregistration, which will be notified by telephony via\n     * {@link android.hardware.radio.ims.IRadioIms#updateImsRegistrationInfo()},\n     * or a certain timeout interval to start the network detach procedure.\n     *\n     * @param reason the reason why the deregistration is triggered.\n     * @hide\n     ",
    "links" : [ "android.hardware.radio.ims.IRadioIms#updateImsRegistrationInfo()" ]
  }, {
    "name" : "public final void onRegistered(@ImsRegistrationTech int imsRadioTech)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is connected to the IMS network.\n     *\n     * @param imsRadioTech the radio access technology.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void onRegistered(@NonNull ImsRegistrationAttributes attributes)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is connected to the IMS network.\n     *\n     * @param attributes The attributes associated with the IMS registration.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void onRegistering(@ImsRegistrationTech int imsRadioTech)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is trying to connect the IMS network.\n     *\n     * @param imsRadioTech the radio access technology.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void onRegistering(@NonNull ImsRegistrationAttributes attributes)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is trying to connect the IMS network.\n     *\n     * @param attributes The attributes associated with the IMS registration.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void onDeregistered(ImsReasonInfo info)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is disconnected from the IMS network.\n     * <p>\n     * Note: Prior to calling {@link #onDeregistered(ImsReasonInfo)}, you should ensure that any\n     * changes to {@link android.telephony.ims.feature.ImsFeature} capability availability is sent\n     * to the framework.  For example,\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO}\n     * and\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE}\n     * may be set to unavailable to ensure the framework knows these services are no longer\n     * available due to de-registration.  If you do not report capability changes impacted by\n     * de-registration, the framework will not know which features are no longer available as a\n     * result.\n     *\n     * @param info the {@link ImsReasonInfo} associated with why registration was disconnected.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE", "#onDeregistered(ImsReasonInfo)", "android.telephony.ims.ImsReasonInfo" ]
  }, {
    "name" : "public final void onDeregistered(@Nullable ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @ImsRegistrationTech int imsRadioTech)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is disconnected from the IMS network.\n     * <p>\n     * Note: Prior to calling {@link #onDeregistered(ImsReasonInfo,int)}, you should ensure that any\n     * changes to {@link android.telephony.ims.feature.ImsFeature} capability availability is sent\n     * to the framework.  For example,\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO}\n     * and\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE}\n     * may be set to unavailable to ensure the framework knows these services are no longer\n     * available due to de-registration.  If you do not report capability changes impacted by\n     * de-registration, the framework will not know which features are no longer available as a\n     * result.\n     *\n     * @param info the {@link ImsReasonInfo} associated with why registration was disconnected.\n     * @param suggestedAction the expected behavior of radio protocol stack.\n     * @param imsRadioTech the network type on which IMS registration has failed.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE", "#onDeregistered(ImsReasonInfo", "android.telephony.ims.ImsReasonInfo" ]
  }, {
    "name" : "public final void onDeregistered(@Nullable ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @NonNull ImsRegistrationAttributes attributes)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is disconnected from the IMS network.\n     * <p>\n     * Note: Prior to calling {@link #onDeregistered(ImsReasonInfo,int)}, you should ensure that any\n     * changes to {@link android.telephony.ims.feature.ImsFeature} capability availability is sent\n     * to the framework.  For example,\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO}\n     * and\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE}\n     * may be set to unavailable to ensure the framework knows these services are no longer\n     * available due to de-registration.  If you do not report capability changes impacted by\n     * de-registration, the framework will not know which features are no longer available as a\n     * result.\n     *\n     * @param info the {@link ImsReasonInfo} associated with why registration was disconnected.\n     * @param suggestedAction the expected behavior of radio protocol stack.\n     * @param attributes The attributes associated with the IMS registration\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE", "#onDeregistered(ImsReasonInfo", "android.telephony.ims.ImsReasonInfo" ]
  }, {
    "name" : "public final void onDeregistered(@Nullable ImsReasonInfo info, @NonNull SipDetails details)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is disconnected from the IMS network.\n     * <p>\n     * Note: Before calling {@link #onDeregistered(ImsReasonInfo, SipDetails)}, ImsService should\n     * ensure that any changes to {@link android.telephony.ims.feature.ImsFeature} capability\n     * availability is sent to the framework.\n     * For example,\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO}\n     * and\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE}\n     * may be set to unavailable to ensure the framework knows these services are no longer\n     * available due to de-registration.  If ImsService do not report capability changes impacted\n     * by de-registration, the framework will not know which features are no longer available as a\n     * result.\n     *\n     * @param info the {@link ImsReasonInfo} associated with why registration was disconnected.\n     * @param details the {@link SipDetails} related to disconnected Ims registration\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE", "#onDeregistered(ImsReasonInfo", "android.telephony.ims.ImsReasonInfo", "android.telephony.ims.SipDetails" ]
  }, {
    "name" : "public final void onDeregistered(@Nullable ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @ImsRegistrationTech int imsRadioTech, @NonNull SipDetails details)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the device is disconnected from the IMS network.\n     * <p>\n     * Note: Before calling {@link #onDeregistered(ImsReasonInfo, SipDetails)}, ImsService should\n     * ensure that any changes to {@link android.telephony.ims.feature.ImsFeature} capability\n     * availability is sent to the framework.\n     * For example,\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO}\n     * and\n     * {@link android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE}\n     * may be set to unavailable to ensure the framework knows these services are no longer\n     * available due to de-registration.  If ImsService do not report capability changes impacted\n     * by de-registration, the framework will not know which features are no longer available as a\n     * result.\n     *\n     * @param info the {@link ImsReasonInfo} associated with why registration was disconnected.\n     * @param suggestedAction the expected behavior of radio protocol stack.\n     * @param imsRadioTech the network type on which IMS registration has failed.\n     * @param details the {@link SipDetails} related to disconnected Ims registration\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ "android.telephony.ims.feature.ImsFeature", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VIDEO", "android.telephony.ims.feature.MmTelFeature.MmTelCapabilities#CAPABILITY_TYPE_VOICE", "#onDeregistered(ImsReasonInfo", "android.telephony.ims.ImsReasonInfo", "android.telephony.ims.SipDetails" ]
  }, {
    "name" : "public final void onTechnologyChangeFailed(@ImsRegistrationTech int imsRadioTech, ImsReasonInfo info)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the handover from the current radio technology to the technology\n     * defined in {@code imsRadioTech} has failed.\n     * @param imsRadioTech The technology that has failed to be changed. Valid values are\n     * {@link #REGISTRATION_TECH_LTE}, {@link #REGISTRATION_TECH_IWLAN} and\n     * {@link #REGISTRATION_TECH_CROSS_SIM}.\n     * @param info The {@link ImsReasonInfo} for the failure to change technology.\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ "#REGISTRATION_TECH_IWLAN", "#REGISTRATION_TECH_LTE", "#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.ImsReasonInfo" ]
  }, {
    "name" : "public final void onTechnologyChangeFailed(@Nullable ImsReasonInfo info, @NonNull ImsRegistrationAttributes attributes)",
    "returnType" : "void",
    "comment" : "\n     * Notify the framework that the handover from the current radio technology to the technology\n     * defined in {@code imsRadioTech} has failed.\n     * {@link #REGISTRATION_TECH_LTE}, {@link #REGISTRATION_TECH_IWLAN} and\n     * {@link #REGISTRATION_TECH_CROSS_SIM}.\n     * @param info The {@link ImsReasonInfo} for the failure to change technology.\n     * @param attributes The attributes associated with the IMS registration\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ "#REGISTRATION_TECH_IWLAN", "#REGISTRATION_TECH_LTE", "#REGISTRATION_TECH_CROSS_SIM", "android.telephony.ims.ImsReasonInfo" ]
  }, {
    "name" : "public final void onSubscriberAssociatedUriChanged(Uri[] uris)",
    "returnType" : "void",
    "comment" : "\n     * Invoked when the {@link Uri}s associated to this device's subscriber have changed.\n     * These {@link Uri}s' are filtered out during conference calls.\n     *\n     * The {@link Uri}s are not guaranteed to be different between subsequent calls.\n     * @param uris changed uris\n     * @hide This API is not part of the Android public SDK API\n     ",
    "links" : [ "android.net.Uri" ]
  }, {
    "name" : "private boolean isEmergency(ImsRegistrationAttributes attributes)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void broadcastToCallbacksLocked(Consumer<IImsRegistrationCallback> c, boolean isEmergency)",
    "returnType" : "void",
    "comment" : "\n     * Broadcast the specified operation in ta synchronized manner so that multiple threads do not\n     * try to call broadcast at the same time, which will generate an error.\n     * @param c The Consumer lambda method containing the callback to call.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void onSubscriberAssociatedUriChanged(IImsRegistrationCallback callback, Uri[] uris)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateToState(ImsRegistrationAttributes attributes, int newState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateToEmergencyState(ImsRegistrationAttributes attributes, int newState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateToDisconnectedState(ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @ImsRegistrationTech int imsRadioTech)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateToDisconnectedEmergencyState(ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @ImsRegistrationTech int imsRadioTech)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateNewCallbackWithState(IImsRegistrationCallback c, boolean isEmergencyCallback) throws RemoteException",
    "returnType" : "void",
    "comment" : "\n     * @param c the newly registered callback that will be updated with the current registration\n     *         state.\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void setDefaultExecutor(@NonNull Executor executor)",
    "returnType" : "void",
    "comment" : "\n     * Set default Executor from ImsService.\n     * @param executor The default executor for the framework to use when executing the methods\n     * overridden by the implementation of Registration.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void clearRegistrationCache()",
    "returnType" : "void",
    "comment" : "\n     * Clear the cached data when the subscription is no longer valid\n     * such as when a sim is removed.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final IImsRegistration getBinder()", "private void addRegistrationCallback(IImsRegistrationCallback c) throws RemoteException", "private void removeRegistrationCallback(IImsRegistrationCallback c)", "private void addEmergencyRegistrationCallback(IImsRegistrationCallback c) throws RemoteException", "private void removeEmergencyRegistrationCallback(IImsRegistrationCallback c)", "public void updateSipDelegateRegistration()", "public void triggerSipDelegateDeregistration()", "public void triggerFullNetworkRegistration(@IntRange(from = 100, to = 699) int sipCode, @Nullable String sipReason)", "public void triggerDeregistration(@ImsDeregistrationReason int reason)", "public final void onRegistered(@ImsRegistrationTech int imsRadioTech)", "public final void onRegistered(@NonNull ImsRegistrationAttributes attributes)", "public final void onRegistering(@ImsRegistrationTech int imsRadioTech)", "public final void onRegistering(@NonNull ImsRegistrationAttributes attributes)", "public final void onDeregistered(ImsReasonInfo info)", "public final void onDeregistered(@Nullable ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @ImsRegistrationTech int imsRadioTech)", "public final void onDeregistered(@Nullable ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @NonNull ImsRegistrationAttributes attributes)", "public final void onDeregistered(@Nullable ImsReasonInfo info, @NonNull SipDetails details)", "public final void onDeregistered(@Nullable ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @ImsRegistrationTech int imsRadioTech, @NonNull SipDetails details)", "public final void onTechnologyChangeFailed(@ImsRegistrationTech int imsRadioTech, ImsReasonInfo info)", "public final void onTechnologyChangeFailed(@Nullable ImsReasonInfo info, @NonNull ImsRegistrationAttributes attributes)", "public final void onSubscriberAssociatedUriChanged(Uri[] uris)", "private boolean isEmergency(ImsRegistrationAttributes attributes)", "private void broadcastToCallbacksLocked(Consumer<IImsRegistrationCallback> c, boolean isEmergency)", "private void onSubscriberAssociatedUriChanged(IImsRegistrationCallback callback, Uri[] uris)", "private void updateToState(ImsRegistrationAttributes attributes, int newState)", "private void updateToEmergencyState(ImsRegistrationAttributes attributes, int newState)", "private void updateToDisconnectedState(ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @ImsRegistrationTech int imsRadioTech)", "private void updateToDisconnectedEmergencyState(ImsReasonInfo info, @RegistrationManager.SuggestedAction int suggestedAction, @ImsRegistrationTech int imsRadioTech)", "private void updateNewCallbackWithState(IImsRegistrationCallback c, boolean isEmergencyCallback) throws RemoteException", "public final void setDefaultExecutor(@NonNull Executor executor)", "public final void clearRegistrationCache()" ],
  "variableNames" : [ "LOG_TAG", "REGISTRATION_TECH_NONE", "REGISTRATION_TECH_LTE", "REGISTRATION_TECH_IWLAN", "REGISTRATION_TECH_CROSS_SIM", "REGISTRATION_TECH_NR", "REGISTRATION_TECH_3G", "REGISTRATION_TECH_MAX", "REGISTRATION_STATE_UNKNOWN", "REASON_UNKNOWN", "REASON_SIM_REMOVED", "REASON_SIM_REFRESH", "REASON_ALLOWED_NETWORK_TYPES_CHANGED", "REASON_NON_IMS_CAPABLE_NETWORK", "REASON_RADIO_POWER_OFF", "REASON_HANDOVER_FAILED", "REASON_VOPS_NOT_SUPPORTED", "mExecutor", "mBinder", "mCallbacks", "mEmergencyCallbacks", "mLock", "mRegistrationAttributes", "mEmergencyRegistrationAttributes", "mRegistrationState", "mEmergencyRegistrationState", "mLastDisconnectCause", "mEmergencyLastDisconnectCause", "mLastDisconnectSuggestedAction", "mEmergencyLastDisconnectSuggestedAction", "mLastDisconnectRadioTech", "mEmergencyLastDisconnectRadioTech", "mUris", "mUrisSet" ]
}