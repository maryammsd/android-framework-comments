{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/fingerprint/HidlFingerprintSensorConfig.java",
  "packageName" : "android.hardware.fingerprint",
  "className" : "HidlFingerprintSensorConfig",
  "comment" : "\n * Parse HIDL fingerprint sensor config and map it to SensorProps.aidl to match AIDL.\n * See core/res/res/values/config.xml config_biometric_sensors\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mSensorId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mModality",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStrength",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void parse(@NonNull String config, @NonNull Context context) throws IllegalArgumentException",
    "returnType" : "void",
    "comment" : "\n     * Parse through the config string and map it to SensorProps.aidl.\n     * @throws IllegalArgumentException when config string has unexpected format\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getModality()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void mapHidlToAidlSensorConfiguration(@NonNull Context context)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setSensorLocation(int sensorLocationX, int sensorLocationY, int sensorRadius)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private byte authenticatorStrengthToPropertyStrength(@BiometricManager.Authenticators.Types int strength)",
    "returnType" : "byte",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void parse(@NonNull String config, @NonNull Context context) throws IllegalArgumentException", "public int getModality()", "private void mapHidlToAidlSensorConfiguration(@NonNull Context context)", "private void setSensorLocation(int sensorLocationX, int sensorLocationY, int sensorRadius)", "private byte authenticatorStrengthToPropertyStrength(@BiometricManager.Authenticators.Types int strength)" ],
  "variableNames" : [ "mSensorId", "mModality", "mStrength" ]
}