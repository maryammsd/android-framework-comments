{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/ContentRecordingSession.java",
  "packageName" : "android.view",
  "className" : "Builder",
  "comment" : "\n     * A builder for {@link ContentRecordingSession}\n     ",
  "links" : [ "android.view.ContentRecordingSession" ],
  "variables" : [ {
    "name" : "mVirtualDisplayId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentToRecord",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayToRecord",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTokenToRecord",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWaitingForConsent",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTargetUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBuilderFieldsSet",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setVirtualDisplayId(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Unique logical identifier of the {@link android.hardware.display.VirtualDisplay} that has\n         * recorded content rendered to its surface.\n         ",
    "links" : [ "android.hardware.display.VirtualDisplay" ]
  }, {
    "name" : "public Builder setContentToRecord(@RecordContent int value)",
    "returnType" : "Builder",
    "comment" : "\n         * The content to record.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDisplayToRecord(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * Unique logical identifier of the {@link android.view.Display} to record.\n         *\n         * <p>If {@link #getContentToRecord()} is {@link RecordContent#RECORD_CONTENT_DISPLAY}, then is\n         * a valid display id.\n         ",
    "links" : [ "android.view.Display", "#getContentToRecord()", "#RECORD_CONTENT_DISPLAY" ]
  }, {
    "name" : "public Builder setTokenToRecord(@NonNull IBinder value)",
    "returnType" : "Builder",
    "comment" : "\n         * The token of the layer of the hierarchy to record.\n         *\n         * <p>If {@link #getContentToRecord()} is {@link RecordContent#RECORD_CONTENT_TASK}, then\n         * represents the {@link android.window.WindowContainerToken} of the Task to record.\n         ",
    "links" : [ "#RECORD_CONTENT_TASK", "#getContentToRecord()", "android.window.WindowContainerToken" ]
  }, {
    "name" : "public Builder setWaitingForConsent(boolean value)",
    "returnType" : "Builder",
    "comment" : "\n         * When {@code true}, no mirroring should take place until the user has re-granted access to\n         * the consent token. When {@code false}, recording can begin immediately.\n         *\n         * <p>Only set on the server side to sanitize any input from the client process.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setTargetUid(int value)",
    "returnType" : "Builder",
    "comment" : "\n         * UID of the package that is captured if selected.\n         ",
    "links" : [ ]
  }, {
    "name" : "public ContentRecordingSession build()",
    "returnType" : "ContentRecordingSession",
    "comment" : " Builds the instance. This builder should not be touched after calling this! ",
    "links" : [ ]
  }, {
    "name" : "private void checkNotUsed()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setVirtualDisplayId(int value)", "public Builder setContentToRecord(@RecordContent int value)", "public Builder setDisplayToRecord(int value)", "public Builder setTokenToRecord(@NonNull IBinder value)", "public Builder setWaitingForConsent(boolean value)", "public Builder setTargetUid(int value)", "public ContentRecordingSession build()", "private void checkNotUsed()" ],
  "variableNames" : [ "mVirtualDisplayId", "mContentToRecord", "mDisplayToRecord", "mTokenToRecord", "mWaitingForConsent", "mTargetUid", "mBuilderFieldsSet" ]
}