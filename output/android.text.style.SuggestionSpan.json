{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/style/SuggestionSpan.java",
  "packageName" : "android.text.style",
  "className" : "SuggestionSpan",
  "comment" : "\n * Holds suggestion candidates for the text enclosed in this span.\n *\n * When such a span is edited in an EditText, double tapping on the text enclosed in this span will\n * display a popup dialog listing suggestion replacement for that text. The user can then replace\n * the original text by one of the suggestions.\n *\n * These spans should typically be created by the input method to provide correction and alternates\n * for the text.\n *\n * @see TextView#isSuggestionsEnabled()\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FLAG_EASY_CORRECT",
    "type" : "int",
    "comment" : "\n     * Sets this flag if the suggestions should be easily accessible with few interactions.\n     * This flag should be set for every suggestions that the user is likely to use.\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_MISSPELLED",
    "type" : "int",
    "comment" : "\n     * Sets this flag if the suggestions apply to a misspelled word/text. This type of suggestion is\n     * rendered differently to highlight the error.\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_AUTO_CORRECTION",
    "type" : "int",
    "comment" : "\n     * Sets this flag if the auto correction is about to be applied to a word/text\n     * that the user is typing/composing. This type of suggestion is rendered differently\n     * to indicate the auto correction is happening.\n     ",
    "links" : [ ]
  }, {
    "name" : "FLAG_GRAMMAR_ERROR",
    "type" : "int",
    "comment" : "\n     * Sets this flag if the suggestions apply to a grammar error. This type of suggestion is\n     * rendered differently to highlight the error.\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_SUGGESTION_PICKED",
    "type" : "String",
    "comment" : "\n     * This action is deprecated in {@link android.os.Build.VERSION_CODES#Q}.\n     *\n     * @deprecated For IMEs to receive this kind of user interaction signals, implement IMEs' own\n     *             suggestion picker UI instead of relying on {@link SuggestionSpan}. To retrieve\n     *             bounding boxes for each character of the composing text, use\n     *             {@link android.view.inputmethod.CursorAnchorInfo}.\n     ",
    "links" : [ "android.text.style.SuggestionSpan", "android.os.Build.VERSION_CODES#Q", "android.view.inputmethod.CursorAnchorInfo" ]
  }, {
    "name" : "SUGGESTION_SPAN_PICKED_AFTER",
    "type" : "String",
    "comment" : "\n     * This is deprecated in {@link android.os.Build.VERSION_CODES#Q}.\n     *\n     * @deprecated See {@link #ACTION_SUGGESTION_PICKED}.\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#Q", "#ACTION_SUGGESTION_PICKED" ]
  }, {
    "name" : "SUGGESTION_SPAN_PICKED_BEFORE",
    "type" : "String",
    "comment" : "\n     * This is deprecated in {@link android.os.Build.VERSION_CODES#Q}.\n     *\n     * @deprecated See {@link #ACTION_SUGGESTION_PICKED}.\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#Q", "#ACTION_SUGGESTION_PICKED" ]
  }, {
    "name" : "SUGGESTION_SPAN_PICKED_HASHCODE",
    "type" : "String",
    "comment" : "\n     * This is deprecated in {@link android.os.Build.VERSION_CODES#Q}.\n     *\n     * @deprecated See {@link #ACTION_SUGGESTION_PICKED}.\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#Q", "#ACTION_SUGGESTION_PICKED" ]
  }, {
    "name" : "SUGGESTIONS_MAX_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSuggestions",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLocaleStringForCompatibility",
    "type" : "String",
    "comment" : "\n     * Kept for compatibility for apps that rely on invalid locale strings e.g.\n     * {@code new Locale(\" an \", \" i n v a l i d \", \"data\")}, which cannot be handled by\n     * {@link #mLanguageTag}.\n     ",
    "links" : [ "#mLanguageTag" ]
  }, {
    "name" : "mLanguageTag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHashCode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEasyCorrectUnderlineThickness",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEasyCorrectUnderlineColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMisspelledUnderlineThickness",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMisspelledUnderlineColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoCorrectionUnderlineThickness",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAutoCorrectionUnderlineColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGrammarErrorUnderlineThickness",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGrammarErrorUnderlineColor",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SuggestionSpan>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void initStyle(Context context)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String[] getSuggestions()",
    "returnType" : "String[]",
    "comment" : "\n     * @return an array of suggestion texts for this span\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getLocale()",
    "returnType" : "String",
    "comment" : "\n     * @deprecated use {@link #getLocaleObject()} instead.\n     * @return the locale of the suggestions. An empty string is returned if no locale is specified.\n     ",
    "links" : [ "#getLocaleObject()" ]
  }, {
    "name" : "public Locale getLocaleObject()",
    "returnType" : "Locale",
    "comment" : "\n     * Returns a well-formed BCP 47 language tag representation of the suggestions, as a\n     * {@link Locale} object.\n     *\n     * <p><b>Caveat</b>: The returned object is guaranteed to be a  a well-formed BCP 47 language tag\n     * representation.  For example, this method can return an empty locale rather than returning a\n     * malformed data when this object is initialized with an malformed {@link Locale} object, e.g.\n     * {@code new Locale(\" a \", \" b c d \", \" \"}.</p>\n     *\n     * @return the locale of the suggestions. {@code null} is returned if no locale is specified.\n     ",
    "links" : [ "java.util.Locale" ]
  }, {
    "name" : "public String getNotificationTargetClassName()",
    "returnType" : "String",
    "comment" : "\n     * @return {@code null}.\n     *\n     * @hide\n     * @deprecated Do not use. Always returns {@code null}.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getFlags()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setFlags(int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcelInternal(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeIdInternal()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int hashCodeInternal(String[] suggestions, @NonNull String languageTag, @NonNull String localeStringForCompatibility)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void updateDrawState(TextPaint tp)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getUnderlineColor()",
    "returnType" : "int",
    "comment" : "\n     * @return The color of the underline for that span, or 0 if there is no underline\n     ",
    "links" : [ ]
  }, {
    "name" : "public void notifySelection(Context context, String original, int index)",
    "returnType" : "void",
    "comment" : "\n     * Does nothing.\n     *\n     * @deprecated this is deprecated in {@link android.os.Build.VERSION_CODES#Q}.\n     * @hide\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#Q" ]
  } ],
  "methodNames" : [ "private void initStyle(Context context)", "public String[] getSuggestions()", "public String getLocale()", "public Locale getLocaleObject()", "public String getNotificationTargetClassName()", "public int getFlags()", "public void setFlags(int flags)", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void writeToParcelInternal(Parcel dest, int flags)", "public int getSpanTypeId()", "public int getSpanTypeIdInternal()", "public boolean equals(@Nullable Object o)", "public int hashCode()", "private static int hashCodeInternal(String[] suggestions, @NonNull String languageTag, @NonNull String localeStringForCompatibility)", "public void updateDrawState(TextPaint tp)", "public int getUnderlineColor()", "public void notifySelection(Context context, String original, int index)" ],
  "variableNames" : [ "TAG", "FLAG_EASY_CORRECT", "FLAG_MISSPELLED", "FLAG_AUTO_CORRECTION", "FLAG_GRAMMAR_ERROR", "ACTION_SUGGESTION_PICKED", "SUGGESTION_SPAN_PICKED_AFTER", "SUGGESTION_SPAN_PICKED_BEFORE", "SUGGESTION_SPAN_PICKED_HASHCODE", "SUGGESTIONS_MAX_SIZE", "mFlags", "mSuggestions", "mLocaleStringForCompatibility", "mLanguageTag", "mHashCode", "mEasyCorrectUnderlineThickness", "mEasyCorrectUnderlineColor", "mMisspelledUnderlineThickness", "mMisspelledUnderlineColor", "mAutoCorrectionUnderlineThickness", "mAutoCorrectionUnderlineColor", "mGrammarErrorUnderlineThickness", "mGrammarErrorUnderlineColor", "CREATOR" ]
}