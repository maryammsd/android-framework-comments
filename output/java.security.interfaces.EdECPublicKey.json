{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/interfaces/EdECPublicKey.java",
  "packageName" : "java.security.interfaces",
  "className" : "EdECPublicKey",
  "comment" : "\n * An interface for an elliptic curve public key as defined by\n * <a href=\"https://tools.ietf.org/html/rfc8032\">RFC 8032: Edwards-Curve\n * Digital Signature Algorithm (EdDSA)</a>. These keys are distinct from the\n * keys represented by {@code ECPublicKey}, and they are intended for use with\n * algorithms based on RFC 8032 such as the EdDSA {@code Signature} algorithm.\n * <p>\n * An Edwards-Curve public key is a point on the curve, which is represented using an\n * EdECPoint.\n *\n * @since 15\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " EdECPoint getPoint()",
    "returnType" : "EdECPoint",
    "comment" : "\n     * Get the point representing the public key.\n     *\n     * @return the {@code EdECPoint} representing the public key.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " EdECPoint getPoint()" ],
  "variableNames" : [ ]
}