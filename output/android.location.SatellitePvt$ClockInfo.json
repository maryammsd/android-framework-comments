{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/SatellitePvt.java",
  "packageName" : "android.location",
  "className" : "ClockInfo",
  "comment" : "\n     * Class containing estimates of the satellite clock info.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mHardwareCodeBiasMeters",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeCorrectionMeters",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClockDriftMetersPerSecond",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<ClockInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public double getHardwareCodeBiasMeters()",
    "returnType" : "double",
    "comment" : "\n         * Returns the satellite hardware code bias of the reported code type w.r.t\n         * ionosphere-free measurement in meters.\n         *\n         * <p>When broadcast ephemeris is used, this is the offset caused\n         * by the satellite hardware delays at different frequencies;\n         * e.g. in IS-GPS-705D, this term is described in Section\n         * 20.3.3.3.1.2.1.\n         *\n         * <p>For GPS this term is ~10ns, and affects the satellite position\n         * computation by less than a millimeter.\n         ",
    "links" : [ ]
  }, {
    "name" : "public double getTimeCorrectionMeters()",
    "returnType" : "double",
    "comment" : "\n         * Returns the satellite time correction for ionospheric-free signal measurement\n         * (meters). The satellite clock correction for the given signal type\n         * = satTimeCorrectionMeters - satHardwareCodeBiasMeters.\n         *\n         * <p>When broadcast ephemeris is used, this is the offset modeled in the\n         * clock terms broadcast over the air by the satellites;\n         * e.g. in IS-GPS-200H, Section 20.3.3.3.3.1, this term is\n         * ∆tsv = af0 + af1(t - toc) + af2(t - toc)^2 + ∆tr.\n         *\n         * <p>If another source of ephemeris is used for SatellitePvt, then the\n         * equivalent value of satTimeCorrection must be provided.\n         *\n         * <p>For GPS this term is ~1ms, and affects the satellite position\n         * computation by ~1m.\n         ",
    "links" : [ ]
  }, {
    "name" : "public double getClockDriftMetersPerSecond()",
    "returnType" : "double",
    "comment" : "\n         * Returns the satellite clock drift (meters per second).\n         ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public double getHardwareCodeBiasMeters()", "public double getTimeCorrectionMeters()", "public double getClockDriftMetersPerSecond()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()" ],
  "variableNames" : [ "mHardwareCodeBiasMeters", "mTimeCorrectionMeters", "mClockDriftMetersPerSecond", "CREATOR" ]
}