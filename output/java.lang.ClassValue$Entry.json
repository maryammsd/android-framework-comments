{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/ClassValue.java",
  "packageName" : "java.lang",
  "className" : "Entry",
  "comment" : " One binding of a value to a class via a ClassValue.\n     *  States are:<ul>\n     *  <li> promise if value == Entry.this\n     *  <li> else dead if version == null\n     *  <li> else stale if version != classValue.version\n     *  <li> else live </ul>\n     *  Promises are never put into the cache; they only live in the\n     *  backing map while a computeValue call is in flight.\n     *  Once an entry goes stale, it can be reset at any time\n     *  into the dead state.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "value",
    "type" : "Object",
    "comment" : " usually of type T, but sometimes (Entry)this",
    "links" : [ ]
  }, {
    "name" : "DEAD_ENTRY",
    "type" : "Entry<?>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void assertNotPromise()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " T value()",
    "returnType" : "T",
    "comment" : " Fetch the value.  This entry must not be a promise. ",
    "links" : [ ]
  }, {
    "name" : " boolean isPromise()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Version<T> version()",
    "returnType" : "Version<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " ClassValue<T> classValueOrNull()",
    "returnType" : "ClassValue<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean isLive()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " Entry<T> refreshVersion(Version<T> v2)",
    "returnType" : "Entry<T>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void assertNotPromise()", " T value()", " boolean isPromise()", " Version<T> version()", " ClassValue<T> classValueOrNull()", " boolean isLive()", " Entry<T> refreshVersion(Version<T> v2)" ],
  "variableNames" : [ "value", "DEAD_ENTRY" ]
}