{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothQualityReport.java",
  "packageName" : "android.bluetooth",
  "className" : "BqrVsScoChoppy",
  "comment" : "\n     * This class provides the System APIs to access the vendor specific part of SCO choppy event.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGlitchCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIntervalEsco",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowEsco",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAirFormat",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInstanceCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxCxmDenials",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRxCxmDenials",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxAbortCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLateDispatch",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMicIntrMiss",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLpaIntrMiss",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSprIntrMiss",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlcFillCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPlcDiscardCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMissedInstanceCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxRetransmitSlotCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRxRetransmitSlotCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGoodRxFrameCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<BqrVsScoChoppy>",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getGlitchCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the sco glitch count since the last event.\n         *\n         * @return the sco glitch count\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getIntervalEsco()",
    "returnType" : "int",
    "comment" : "\n         * Get ESCO interval in slots. It is the value of Transmission_Interval parameter in\n         * Synchronous Connection Complete event.\n         *\n         * @return ESCO interval in slots\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getWindowEsco()",
    "returnType" : "int",
    "comment" : "\n         * Get ESCO window in slots. It is the value of Retransmission Window parameter in\n         * Synchronous Connection Complete event.\n         *\n         * @return ESCO window in slots\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getAirFormat()",
    "returnType" : "int",
    "comment" : "\n         * Get the air mode. It is the value of Air Mode parameter in Synchronous Connection\n         * Complete event.\n         *\n         * @return the air mode\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static String airFormatToString(int airFormat)",
    "returnType" : "String",
    "comment" : "\n         * Get the string of air mode.\n         *\n         * @param airFormat the value of Air Mode parameter in Synchronous Connection Complete event\n         * @return the string of air mode\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getInstanceCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the xSCO instance count.\n         *\n         * @return the xSCO instance count\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getTxCxmDenials()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of Coex TX denials.\n         *\n         * @return the count of Coex TX denials\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getRxCxmDenials()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of Coex RX denials.\n         *\n         * @return the count of Coex RX denials\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getTxAbortCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of sco packets aborted.\n         *\n         * @return the count of sco packets aborted\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getLateDispatch()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of sco packets dispatched late.\n         *\n         * @return the count of sco packets dispatched late\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMicIntrMiss()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of missed Mic interrupts.\n         *\n         * @return the count of missed Mic interrupts\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getLpaIntrMiss()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of missed LPA interrupts.\n         *\n         * @return the count of missed LPA interrupts\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSprIntrMiss()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of missed Speaker interrupts.\n         *\n         * @return the count of missed Speaker interrupts\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getPlcFillCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of packet loss concealment filled.\n         *\n         * @return the count of packet loss concealment filled\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getPlcDiscardCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of packet loss concealment discarded.\n         *\n         * @return the count of packet loss concealment discarded\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMissedInstanceCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of sco instances missed.\n         *\n         * @return the count of sco instances missed\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getTxRetransmitSlotCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of slots for Tx retransmission.\n         *\n         * @return the count of slots for Tx retransmission\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getRxRetransmitSlotCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of slots for Rx retransmission.\n         *\n         * @return the count of slots for Rx retransmission\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getGoodRxFrameCount()",
    "returnType" : "int",
    "comment" : "\n         * Get the count of Rx good packets\n         *\n         * @return the count of Rx good packets\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n         * Describe contents.\n         *\n         * @return 0\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n         * Write BqrVsScoChoppy to parcel.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " BqrVsScoChoppy to String. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getGlitchCount()", "public int getIntervalEsco()", "public int getWindowEsco()", "public int getAirFormat()", "public static String airFormatToString(int airFormat)", "public int getInstanceCount()", "public int getTxCxmDenials()", "public int getRxCxmDenials()", "public int getTxAbortCount()", "public int getLateDispatch()", "public int getMicIntrMiss()", "public int getLpaIntrMiss()", "public int getSprIntrMiss()", "public int getPlcFillCount()", "public int getPlcDiscardCount()", "public int getMissedInstanceCount()", "public int getTxRetransmitSlotCount()", "public int getRxRetransmitSlotCount()", "public int getGoodRxFrameCount()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()" ],
  "variableNames" : [ "TAG", "mGlitchCount", "mIntervalEsco", "mWindowEsco", "mAirFormat", "mInstanceCount", "mTxCxmDenials", "mRxCxmDenials", "mTxAbortCount", "mLateDispatch", "mMicIntrMiss", "mLpaIntrMiss", "mSprIntrMiss", "mPlcFillCount", "mPlcDiscardCount", "mMissedInstanceCount", "mTxRetransmitSlotCount", "mRxRetransmitSlotCount", "mGoodRxFrameCount", "CREATOR" ]
}