{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/MemoryPressureListener.java",
  "packageName" : "org.chromium.base",
  "className" : "MemoryPressureListener",
  "comment" : "\n * This class is Java equivalent of base::MemoryPressureListener: it distributes pressure\n * signals to callbacks.\n *\n * The class also serves as an entry point to the native side - once native code is ready,\n * it adds native callback.\n *\n * notifyMemoryPressure() is called exclusively by MemoryPressureMonitor, which\n * monitors and throttles pressure signals.\n *\n * NOTE: this class should only be used on UiThread as defined by ThreadUtils (which is\n *       Android main thread for Chrome, but can be some other thread for WebView).\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ACTION_LOW_MEMORY",
    "type" : "String",
    "comment" : "\n     * Sending an intent with this action to Chrome will cause it to issue a call to onLowMemory\n     * thus simulating a low memory situations.\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_TRIM_MEMORY",
    "type" : "String",
    "comment" : "\n     * Sending an intent with this action to Chrome will cause it to issue a call to onTrimMemory\n     * thus simulating a low memory situations.\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_TRIM_MEMORY_RUNNING_CRITICAL",
    "type" : "String",
    "comment" : "\n     * Sending an intent with this action to Chrome will cause it to issue a call to onTrimMemory\n     * with notification level TRIM_MEMORY_RUNNING_CRITICAL thus simulating a low memory situation\n     ",
    "links" : [ ]
  }, {
    "name" : "ACTION_TRIM_MEMORY_MODERATE",
    "type" : "String",
    "comment" : "\n     * Sending an intent with this action to Chrome will cause it to issue a call to onTrimMemory\n     * with notification level TRIM_MEMORY_MODERATE thus simulating a low memory situation\n     ",
    "links" : [ ]
  }, {
    "name" : "sCallbacks",
    "type" : "ObserverList<MemoryPressureCallback>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static void addNativeCallback()",
    "returnType" : "void",
    "comment" : " Called by the native side to add native callback. ",
    "links" : [ ]
  }, {
    "name" : "public static void addCallback(MemoryPressureCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Adds a memory pressure callback.\n     * Callback is only added once, regardless of the number of addCallback() calls.\n     * This method should be called only on ThreadUtils.UiThread.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void removeCallback(MemoryPressureCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Removes previously added memory pressure callback.\n     * This method should be called only on ThreadUtils.UiThread.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void notifyMemoryPressure(@MemoryPressureLevel int pressure)",
    "returnType" : "void",
    "comment" : "\n     * Distributes |pressure| to all callbacks.\n     * This method should be called only on ThreadUtils.UiThread.\n     *\n     * This includes sending the notification to the native side, provided that addNativeCallback()\n     * has been called. It does not trigger all the clients listening directly to\n     * ComponentCallbacks2 notifications.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean handleDebugIntent(Activity activity, String action)",
    "returnType" : "boolean",
    "comment" : "\n     * Used by applications to simulate a memory pressure signal. By throwing certain intent\n     * actions.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void simulateLowMemoryPressureSignal(Activity activity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void simulateTrimMemoryPressureSignal(Activity activity, int level)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static void addNativeCallback()", "public static void addCallback(MemoryPressureCallback callback)", "public static void removeCallback(MemoryPressureCallback callback)", "public static void notifyMemoryPressure(@MemoryPressureLevel int pressure)", "public static boolean handleDebugIntent(Activity activity, String action)", "private static void simulateLowMemoryPressureSignal(Activity activity)", "private static void simulateTrimMemoryPressureSignal(Activity activity, int level)" ],
  "variableNames" : [ "ACTION_LOW_MEMORY", "ACTION_TRIM_MEMORY", "ACTION_TRIM_MEMORY_RUNNING_CRITICAL", "ACTION_TRIM_MEMORY_MODERATE", "sCallbacks" ]
}