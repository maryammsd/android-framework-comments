{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/prefs/Base64.java",
  "packageName" : "java.util.prefs",
  "className" : "Base64",
  "comment" : "\n * Static methods for translating Base64 encoded strings to byte arrays\n * and vice-versa.\n *\n * @author  Josh Bloch\n * @see     Preferences\n * @since   1.4\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "intToBase64",
    "type" : "char[]",
    "comment" : "\n     * This array is a lookup table that translates 6-bit positive integer\n     * index values into their \"Base64 Alphabet\" equivalents as specified\n     * in Table 1 of RFC 2045.\n     ",
    "links" : [ ]
  }, {
    "name" : "intToAltBase64",
    "type" : "char[]",
    "comment" : "\n     * This array is a lookup table that translates 6-bit positive integer\n     * index values into their \"Alternate Base64 Alphabet\" equivalents.\n     * This is NOT the real Base64 Alphabet as per in Table 1 of RFC 2045.\n     * This alternate alphabet does not use the capital letters.  It is\n     * designed for use in environments where \"case folding\" occurs.\n     ",
    "links" : [ ]
  }, {
    "name" : "base64ToInt",
    "type" : "byte[]",
    "comment" : "\n     * This array is a lookup table that translates unicode characters\n     * drawn from the \"Base64 Alphabet\" (as specified in Table 1 of RFC 2045)\n     * into their 6-bit positive integer equivalents.  Characters that\n     * are not in the Base64 alphabet but fall within the bounds of the\n     * array are translated to -1.\n     ",
    "links" : [ ]
  }, {
    "name" : "altBase64ToInt",
    "type" : "byte[]",
    "comment" : "\n     * This array is the analogue of base64ToInt, but for the nonstandard\n     * variant that avoids the use of uppercase alphabetic characters.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static String byteArrayToBase64(byte[] a)",
    "returnType" : "String",
    "comment" : "\n     * Translates the specified byte array into a Base64 string as per\n     * Preferences.put(byte[]).\n     ",
    "links" : [ ]
  }, {
    "name" : " static String byteArrayToAltBase64(byte[] a)",
    "returnType" : "String",
    "comment" : "\n     * Translates the specified byte array into an \"alternate representation\"\n     * Base64 string.  This non-standard variant uses an alphabet that does\n     * not contain the uppercase alphabetic characters, which makes it\n     * suitable for use in situations where case-folding occurs.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static String byteArrayToBase64(byte[] a, boolean alternate)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static byte[] base64ToByteArray(String s)",
    "returnType" : "byte[]",
    "comment" : "\n     * Translates the specified Base64 string (as per Preferences.get(byte[]))\n     * into a byte array.\n     *\n     * @throw IllegalArgumentException if <tt>s</tt> is not a valid Base64\n     *        string.\n     ",
    "links" : [ ]
  }, {
    "name" : " static byte[] altBase64ToByteArray(String s)",
    "returnType" : "byte[]",
    "comment" : "\n     * Translates the specified \"alternate representation\" Base64 string\n     * into a byte array.\n     *\n     * @throw IllegalArgumentException or ArrayOutOfBoundsException\n     *        if <tt>s</tt> is not a valid alternate representation\n     *        Base64 string.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static byte[] base64ToByteArray(String s, boolean alternate)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int base64toInt(char c, byte[] alphaToInt)",
    "returnType" : "int",
    "comment" : "\n     * Translates the specified character, which is assumed to be in the\n     * \"Base 64 Alphabet\" into its equivalent 6-bit positive integer.\n     *\n     * @throw IllegalArgumentException or ArrayOutOfBoundsException if\n     *        c is not in the Base64 Alphabet.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void main(String[] args)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static String byteArrayToBase64(byte[] a)", " static String byteArrayToAltBase64(byte[] a)", "private static String byteArrayToBase64(byte[] a, boolean alternate)", " static byte[] base64ToByteArray(String s)", " static byte[] altBase64ToByteArray(String s)", "private static byte[] base64ToByteArray(String s, boolean alternate)", "private static int base64toInt(char c, byte[] alphaToInt)", "public static void main(String[] args)" ],
  "variableNames" : [ "intToBase64", "intToAltBase64", "base64ToInt", "altBase64ToInt" ]
}