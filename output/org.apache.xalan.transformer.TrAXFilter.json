{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/transformer/TrAXFilter.java",
  "packageName" : "org.apache.xalan.transformer",
  "className" : "TrAXFilter",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_templates",
    "type" : "Templates",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "m_transformer",
    "type" : "TransformerImpl",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public TransformerImpl getTransformer()",
    "returnType" : "TransformerImpl",
    "comment" : "\n   * Return the Transformer object used for this XML filter.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setParent(XMLReader parent)",
    "returnType" : "void",
    "comment" : " Set the parent reader.\n   *\n   * <p>This is the {@link org.xml.sax.XMLReader XMLReader} from which \n   * this filter will obtain its events and to which it will pass its \n   * configuration requests.  The parent may itself be another filter.</p>\n   *\n   * <p>If there is no parent reader set, any attempt to parse\n   * or to set or get a feature or property will fail.</p>\n   *\n   * @param parent The parent XML reader.\n   * @throws java.lang.NullPointerException If the parent is null.\n   ",
    "links" : [ "org.xml.sax.XMLReader" ]
  }, {
    "name" : "public void parse(InputSource input) throws org.xml.sax.SAXException, IOException",
    "returnType" : "void",
    "comment" : "\n   * Parse a document.\n   *\n   * @param input The input source for the document entity.\n   * @throws org.xml.sax.SAXException Any SAX exception, possibly\n   *            wrapping another exception.\n   * @throws java.io.IOException An IO exception from the parser,\n   *            possibly from a byte stream or character stream\n   *            supplied by the application.\n   * @see org.xml.sax.XMLReader#parse(org.xml.sax.InputSource)\n   ",
    "links" : [ ]
  }, {
    "name" : "public void parse(String systemId) throws org.xml.sax.SAXException, IOException",
    "returnType" : "void",
    "comment" : "\n   * Parse a document.\n   *\n   * @param systemId The system identifier as a fully-qualified URI.\n   * @throws org.xml.sax.SAXException Any SAX exception, possibly\n   *            wrapping another exception.\n   * @throws java.io.IOException An IO exception from the parser,\n   *            possibly from a byte stream or character stream\n   *            supplied by the application.\n   * @see org.xml.sax.XMLReader#parse(java.lang.String)\n   ",
    "links" : [ ]
  }, {
    "name" : "private void setupParse()",
    "returnType" : "void",
    "comment" : "\n   * Set up before a parse.\n   *\n   * <p>Before every parse, check whether the parent is\n   * non-null, and re-register the filter for all of the \n   * events.</p>\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setContentHandler(ContentHandler handler)",
    "returnType" : "void",
    "comment" : "\n   * Set the content event handler.\n   *\n   * @param handler The new content handler.\n   * @throws java.lang.NullPointerException If the handler\n   *            is null.\n   * @see org.xml.sax.XMLReader#setContentHandler\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setErrorListener(ErrorListener handler)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public TransformerImpl getTransformer()", "public void setParent(XMLReader parent)", "public void parse(InputSource input) throws org.xml.sax.SAXException, IOException", "public void parse(String systemId) throws org.xml.sax.SAXException, IOException", "private void setupParse()", "public void setContentHandler(ContentHandler handler)", "public void setErrorListener(ErrorListener handler)" ],
  "variableNames" : [ "m_templates", "m_transformer" ]
}