{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaController2.java",
  "packageName" : "android.media",
  "className" : "Builder",
  "comment" : "\n     * This API is not generally intended for third party application developers.\n     * Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n     * <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n     * Library</a> for consistent behavior across all devices.\n     * <p>\n     * Builder for {@link MediaController2}.\n     * <p>\n     * Any incoming event from the {@link MediaSession2} will be handled on the callback\n     * executor. If it's not set, {@link Context#getMainExecutor()} will be used by default.\n     ",
  "links" : [ "android.media.MediaController2", "android.media.MediaSession2", "android.content.Context#getMainExecutor()" ],
  "variables" : [ {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mToken",
    "type" : "Session2Token",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectionHints",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallbackExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "ControllerCallback",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setConnectionHints(@NonNull Bundle connectionHints)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the connection hints for the controller.\n         * <p>\n         * {@code connectionHints} is a session-specific argument to send to the session when\n         * connecting. The contents of this bundle may affect the connection result.\n         * <p>\n         * An {@link IllegalArgumentException} will be thrown if the bundle contains any\n         * non-framework Parcelable objects.\n         *\n         * @param connectionHints a bundle which contains the connection hints\n         * @return The Builder to allow chaining\n         ",
    "links" : [ "IllegalArgumentException" ]
  }, {
    "name" : "public Builder setControllerCallback(@NonNull Executor executor, @NonNull ControllerCallback callback)",
    "returnType" : "Builder",
    "comment" : "\n         * Set callback for the controller and its executor.\n         *\n         * @param executor callback executor\n         * @param callback session callback.\n         * @return The Builder to allow chaining\n         ",
    "links" : [ ]
  }, {
    "name" : "public MediaController2 build()",
    "returnType" : "MediaController2",
    "comment" : "\n         * Build {@link MediaController2}.\n         *\n         * @return a new controller\n         ",
    "links" : [ "android.media.MediaController2" ]
  } ],
  "methodNames" : [ "public Builder setConnectionHints(@NonNull Bundle connectionHints)", "public Builder setControllerCallback(@NonNull Executor executor, @NonNull ControllerCallback callback)", "public MediaController2 build()" ],
  "variableNames" : [ "mContext", "mToken", "mConnectionHints", "mCallbackExecutor", "mCallback" ]
}