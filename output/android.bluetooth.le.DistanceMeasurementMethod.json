{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/le/DistanceMeasurementMethod.java",
  "packageName" : "android.bluetooth.le",
  "className" : "DistanceMeasurementMethod",
  "comment" : "\n * Method of distance measurement. A list of this class will be returned by {@link\n * DistanceMeasurementManager#getSupportedMethods()} to indicate the supported methods and their\n * capability about angle measurement.\n *\n * @hide\n ",
  "links" : [ "android.bluetooth.le.DistanceMeasurementManager#getSupportedMethods()" ],
  "variables" : [ {
    "name" : "mId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsAzimuthAngleSupported",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsAltitudeAngleSupported",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DISTANCE_MEASUREMENT_METHOD_AUTO",
    "type" : "int",
    "comment" : "\n     * Choose method automatically, Bluetooth will use the most accurate method that local device\n     * supported to measurement distance.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DISTANCE_MEASUREMENT_METHOD_RSSI",
    "type" : "int",
    "comment" : "\n     * Use remote RSSI and transmit power to measure the distance.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DISTANCE_MEASUREMENT_METHOD_CHANNEL_SOUNDING",
    "type" : "int",
    "comment" : "\n     * Use Channel Sounding to measure the distance.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<DistanceMeasurementMethod>",
    "comment" : " A {@link Parcelable.Creator} to create {@link DistanceMeasurementMethod} from parcel. ",
    "links" : [ "android.bluetooth.le.DistanceMeasurementMethod", "Parcelable.Creator" ]
  } ],
  "methods" : [ {
    "name" : "public double getId()",
    "returnType" : "double",
    "comment" : "\n     * Id of the method used for {@link DistanceMeasurementParams.Builder#setMethod(int)}\n     *\n     * @return id of the method\n     * @hide\n     ",
    "links" : [ "DistanceMeasurementParams.Builder#setMethod(int)" ]
  }, {
    "name" : "public boolean isAzimuthAngleSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether the azimuth angle is supported for this method.\n     *\n     * @return true if azimuth angle is supported, false otherwise\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAltitudeAngleSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Checks whether the altitude angle is supported for this method.\n     *\n     * @return true if altitude angle is supported, false otherwise\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * @hide *\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public double getId()", "public boolean isAzimuthAngleSupported()", "public boolean isAltitudeAngleSupported()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "public String toString()", "public boolean equals(Object o)", "public int hashCode()" ],
  "variableNames" : [ "mId", "mIsAzimuthAngleSupported", "mIsAltitudeAngleSupported", "DISTANCE_MEASUREMENT_METHOD_AUTO", "DISTANCE_MEASUREMENT_METHOD_RSSI", "DISTANCE_MEASUREMENT_METHOD_CHANNEL_SOUNDING", "CREATOR" ]
}