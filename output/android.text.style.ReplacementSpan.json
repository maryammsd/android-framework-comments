{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/style/ReplacementSpan.java",
  "packageName" : "android.text.style",
  "className" : "ReplacementSpan",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mContentDescription",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract int getSize(@NonNull Paint paint, CharSequence text, @IntRange(from = 0) int start, @IntRange(from = 0) int end, @Nullable Paint.FontMetricsInt fm)",
    "returnType" : "int",
    "comment" : "\n     * Returns the width of the span. Extending classes can set the height of the span by updating\n     * attributes of {@link android.graphics.Paint.FontMetricsInt}. If the span covers the whole\n     * text, and the height is not set,\n     * {@link #draw(Canvas, CharSequence, int, int, float, int, int, int, Paint)} will not be\n     * called for the span.\n     *\n     * @param paint Paint instance.\n     * @param text Current text.\n     * @param start Start character index for span.\n     * @param end End character index for span.\n     * @param fm Font metrics, can be null.\n     * @return Width of the span.\n     ",
    "links" : [ "android.graphics.Paint.FontMetricsInt", "#draw(Canvas" ]
  }, {
    "name" : "public abstract void draw(@NonNull Canvas canvas, CharSequence text, @IntRange(from = 0) int start, @IntRange(from = 0) int end, float x, int top, int y, int bottom, @NonNull Paint paint)",
    "returnType" : "void",
    "comment" : "\n     * Draws the span into the canvas.\n     *\n     * @param canvas Canvas into which the span should be rendered.\n     * @param text Current text.\n     * @param start Start character index for span.\n     * @param end End character index for span.\n     * @param x Edge of the replacement closest to the leading margin.\n     * @param top Top of the line.\n     * @param y Baseline.\n     * @param bottom Bottom of the line.\n     * @param paint Paint instance.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getContentDescription()",
    "returnType" : "CharSequence",
    "comment" : "\n     * Gets a brief description of this ReplacementSpan for use in accessibility support.\n     *\n     * @return The content description.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setContentDescription(@Nullable CharSequence contentDescription)",
    "returnType" : "void",
    "comment" : "\n     * Sets the specific content description into ReplacementSpan.\n     * ReplacementSpans are shared with accessibility services,\n     * but only the content description is available from them.\n     *\n     * @param contentDescription content description. The default value is null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void updateMeasureState(TextPaint p)",
    "returnType" : "void",
    "comment" : "\n     * This method does nothing, since ReplacementSpans are measured\n     * explicitly instead of affecting Paint properties.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void updateDrawState(TextPaint ds)",
    "returnType" : "void",
    "comment" : "\n     * This method does nothing, since ReplacementSpans are drawn\n     * explicitly instead of affecting Paint properties.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract int getSize(@NonNull Paint paint, CharSequence text, @IntRange(from = 0) int start, @IntRange(from = 0) int end, @Nullable Paint.FontMetricsInt fm)", "public abstract void draw(@NonNull Canvas canvas, CharSequence text, @IntRange(from = 0) int start, @IntRange(from = 0) int end, float x, int top, int y, int bottom, @NonNull Paint paint)", "public CharSequence getContentDescription()", "public void setContentDescription(@Nullable CharSequence contentDescription)", "public void updateMeasureState(TextPaint p)", "public void updateDrawState(TextPaint ds)" ],
  "variableNames" : [ "mContentDescription" ]
}