{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/Sink.java",
  "packageName" : "java.util.stream",
  "className" : "Sink",
  "comment" : " Android-changed: Made public for CTS tests only.",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void begin(long size)",
    "returnType" : "void",
    "comment" : "\n     * Resets the sink state to receive a fresh data set.  This must be called\n     * before sending any data to the sink.  After calling {@link #end()},\n     * you may call this method to reset the sink for another calculation.\n     * @param size The exact size of the data to be pushed downstream, if\n     * known or {@code -1} if unknown or infinite.\n     *\n     * <p>Prior to this call, the sink must be in the initial state, and after\n     * this call it is in the active state.\n     ",
    "links" : [ "#end()" ]
  }, {
    "name" : " void end()",
    "returnType" : "void",
    "comment" : "\n     * Indicates that all elements have been pushed.  If the {@code Sink} is\n     * stateful, it should send any stored state downstream at this time, and\n     * should clear any accumulated state (and associated resources).\n     *\n     * <p>Prior to this call, the sink must be in the active state, and after\n     * this call it is returned to the initial state.\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean cancellationRequested()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates that this {@code Sink} does not wish to receive any more data.\n     *\n     * @implSpec The default implementation always returns false.\n     *\n     * @return true if cancellation is requested\n     ",
    "links" : [ ]
  }, {
    "name" : " void accept(int value)",
    "returnType" : "void",
    "comment" : "\n     * Accepts an int value.\n     *\n     * @implSpec The default implementation throws IllegalStateException.\n     *\n     * @throws IllegalStateException if this sink does not accept int values\n     ",
    "links" : [ ]
  }, {
    "name" : " void accept(long value)",
    "returnType" : "void",
    "comment" : "\n     * Accepts a long value.\n     *\n     * @implSpec The default implementation throws IllegalStateException.\n     *\n     * @throws IllegalStateException if this sink does not accept long values\n     ",
    "links" : [ ]
  }, {
    "name" : " void accept(double value)",
    "returnType" : "void",
    "comment" : "\n     * Accepts a double value.\n     *\n     * @implSpec The default implementation throws IllegalStateException.\n     *\n     * @throws IllegalStateException if this sink does not accept double values\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " void begin(long size)", " void end()", " boolean cancellationRequested()", " void accept(int value)", " void accept(long value)", " void accept(double value)" ],
  "variableNames" : [ ]
}