{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/biometrics/PromptInfo.java",
  "packageName" : "android.hardware.biometrics",
  "className" : "PromptInfo",
  "comment" : "\n * Contains the information set/requested by the caller of the {@link BiometricPrompt}\n * @hide\n ",
  "links" : [ "android.hardware.biometrics.BiometricPrompt" ],
  "variables" : [ {
    "name" : "mLogoRes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLogoBitmap",
    "type" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLogoDescription",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUseDefaultTitle",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubtitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUseDefaultSubtitle",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDescription",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContentView",
    "type" : "PromptContentViewParcelable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceCredentialTitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceCredentialSubtitle",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeviceCredentialDescription",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNegativeButtonText",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfirmationRequested",
    "type" : "boolean",
    "comment" : " default to true",
    "links" : [ ]
  }, {
    "name" : "mDeviceCredentialAllowed",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAuthenticators",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisallowBiometricsIfPolicyExists",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReceiveSystemEvents",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowedSensorIds",
    "type" : "List<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAllowBackgroundAuthentication",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIgnoreEnrollmentState",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsForLegacyFingerprintManager",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShowEmergencyCallButton",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUseParentProfileForDeviceCredential",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mComponentNameForConfirmDeviceCredentialActivity",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<PromptInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean requiresTestOrInternalPermission()",
    "returnType" : "boolean",
    "comment" : " LINT.IfChange",
    "links" : [ ]
  }, {
    "name" : "public boolean requiresInternalPermission()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean requiresAdvancedPermission()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether SET_BIOMETRIC_DIALOG_ADVANCED is contained.\n     *\n     * Currently, logo res, logo bitmap, logo description, PromptContentViewWithMoreOptions needs\n     * this permission.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean shouldUseParentProfileForDeviceCredential()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns if parent profile needs to be used for device credential.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isContentViewMoreOptionsButtonUsed()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns if the PromptContentViewWithMoreOptionsButton is set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setLogoRes(@DrawableRes int logoRes)",
    "returnType" : "void",
    "comment" : " Setters",
    "links" : [ ]
  }, {
    "name" : "public void setLogoBitmap(@NonNull Bitmap logoBitmap)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setLogoDescription(@NonNull String logoDescription)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTitle(CharSequence title)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setUseDefaultTitle(boolean useDefaultTitle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setSubtitle(CharSequence subtitle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setUseDefaultSubtitle(boolean useDefaultSubtitle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDescription(CharSequence description)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setContentView(PromptContentView view)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDeviceCredentialTitle(CharSequence deviceCredentialTitle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDeviceCredentialSubtitle(CharSequence deviceCredentialSubtitle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDeviceCredentialDescription(CharSequence deviceCredentialDescription)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setNegativeButtonText(CharSequence negativeButtonText)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setConfirmationRequested(boolean confirmationRequested)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDeviceCredentialAllowed(boolean deviceCredentialAllowed)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAuthenticators(int authenticators)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDisallowBiometricsIfPolicyExists(boolean disallowBiometricsIfPolicyExists)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setReceiveSystemEvents(boolean receiveSystemEvents)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAllowedSensorIds(@NonNull List<Integer> sensorIds)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setAllowBackgroundAuthentication(boolean allow)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setIgnoreEnrollmentState(boolean ignoreEnrollmentState)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setIsForLegacyFingerprintManager(int sensorId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setShowEmergencyCallButton(boolean showEmergencyCallButton)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setComponentNameForConfirmDeviceCredentialActivity(ComponentName componentNameForConfirmDeviceCredentialActivity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setUseParentProfileForDeviceCredential(boolean useParentProfileForDeviceCredential)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getLogoRes()",
    "returnType" : "int",
    "comment" : " Getters",
    "links" : [ ]
  }, {
    "name" : "public Bitmap getLogoBitmap()",
    "returnType" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getLogoDescription()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getTitle()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isUseDefaultTitle()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getSubtitle()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isUseDefaultSubtitle()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getDescription()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public PromptContentView getContentView()",
    "returnType" : "PromptContentView",
    "comment" : "\n     * Gets the content view for the prompt.\n     *\n     * @return The content view for the prompt, or null if the prompt has no content view.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getDeviceCredentialTitle()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getDeviceCredentialSubtitle()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getDeviceCredentialDescription()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getNegativeButtonText()",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isConfirmationRequested()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isDeviceCredentialAllowed()",
    "returnType" : "boolean",
    "comment" : "\n     * This value is read once by {@link com.android.server.biometrics.BiometricService} and\n     * combined into {@link #getAuthenticators()}.\n     * @deprecated\n     * @return\n     ",
    "links" : [ "#getAuthenticators()", "com.android.server.biometrics.BiometricService" ]
  }, {
    "name" : "public int getAuthenticators()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isDisallowBiometricsIfPolicyExists()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isReceiveSystemEvents()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<Integer> getAllowedSensorIds()",
    "returnType" : "List<Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isAllowBackgroundAuthentication()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isIgnoreEnrollmentState()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isForLegacyFingerprintManager()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isShowEmergencyCallButton()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ComponentName getComponentNameForConfirmDeviceCredentialActivity()",
    "returnType" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void checkOnlyOneLogoSet()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean requiresTestOrInternalPermission()", "public boolean requiresInternalPermission()", "public boolean requiresAdvancedPermission()", "public boolean shouldUseParentProfileForDeviceCredential()", "public boolean isContentViewMoreOptionsButtonUsed()", "public void setLogoRes(@DrawableRes int logoRes)", "public void setLogoBitmap(@NonNull Bitmap logoBitmap)", "public void setLogoDescription(@NonNull String logoDescription)", "public void setTitle(CharSequence title)", "public void setUseDefaultTitle(boolean useDefaultTitle)", "public void setSubtitle(CharSequence subtitle)", "public void setUseDefaultSubtitle(boolean useDefaultSubtitle)", "public void setDescription(CharSequence description)", "public void setContentView(PromptContentView view)", "public void setDeviceCredentialTitle(CharSequence deviceCredentialTitle)", "public void setDeviceCredentialSubtitle(CharSequence deviceCredentialSubtitle)", "public void setDeviceCredentialDescription(CharSequence deviceCredentialDescription)", "public void setNegativeButtonText(CharSequence negativeButtonText)", "public void setConfirmationRequested(boolean confirmationRequested)", "public void setDeviceCredentialAllowed(boolean deviceCredentialAllowed)", "public void setAuthenticators(int authenticators)", "public void setDisallowBiometricsIfPolicyExists(boolean disallowBiometricsIfPolicyExists)", "public void setReceiveSystemEvents(boolean receiveSystemEvents)", "public void setAllowedSensorIds(@NonNull List<Integer> sensorIds)", "public void setAllowBackgroundAuthentication(boolean allow)", "public void setIgnoreEnrollmentState(boolean ignoreEnrollmentState)", "public void setIsForLegacyFingerprintManager(int sensorId)", "public void setShowEmergencyCallButton(boolean showEmergencyCallButton)", "public void setComponentNameForConfirmDeviceCredentialActivity(ComponentName componentNameForConfirmDeviceCredentialActivity)", "public void setUseParentProfileForDeviceCredential(boolean useParentProfileForDeviceCredential)", "public int getLogoRes()", "public Bitmap getLogoBitmap()", "public String getLogoDescription()", "public CharSequence getTitle()", "public boolean isUseDefaultTitle()", "public CharSequence getSubtitle()", "public boolean isUseDefaultSubtitle()", "public CharSequence getDescription()", "public PromptContentView getContentView()", "public CharSequence getDeviceCredentialTitle()", "public CharSequence getDeviceCredentialSubtitle()", "public CharSequence getDeviceCredentialDescription()", "public CharSequence getNegativeButtonText()", "public boolean isConfirmationRequested()", "public boolean isDeviceCredentialAllowed()", "public int getAuthenticators()", "public boolean isDisallowBiometricsIfPolicyExists()", "public boolean isReceiveSystemEvents()", "public List<Integer> getAllowedSensorIds()", "public boolean isAllowBackgroundAuthentication()", "public boolean isIgnoreEnrollmentState()", "public boolean isForLegacyFingerprintManager()", "public boolean isShowEmergencyCallButton()", "public ComponentName getComponentNameForConfirmDeviceCredentialActivity()", "private void checkOnlyOneLogoSet()" ],
  "variableNames" : [ "mLogoRes", "mLogoBitmap", "mLogoDescription", "mTitle", "mUseDefaultTitle", "mSubtitle", "mUseDefaultSubtitle", "mDescription", "mContentView", "mDeviceCredentialTitle", "mDeviceCredentialSubtitle", "mDeviceCredentialDescription", "mNegativeButtonText", "mConfirmationRequested", "mDeviceCredentialAllowed", "mAuthenticators", "mDisallowBiometricsIfPolicyExists", "mReceiveSystemEvents", "mAllowedSensorIds", "mAllowBackgroundAuthentication", "mIgnoreEnrollmentState", "mIsForLegacyFingerprintManager", "mShowEmergencyCallButton", "mUseParentProfileForDeviceCredential", "mComponentNameForConfirmDeviceCredentialActivity", "CREATOR" ]
}