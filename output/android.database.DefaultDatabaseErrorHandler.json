{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/database/DefaultDatabaseErrorHandler.java",
  "packageName" : "android.database",
  "className" : "DefaultDatabaseErrorHandler",
  "comment" : "\n * Default class used to define the action to take when database corruption is reported\n * by sqlite.\n * <p>\n * An application can specify an implementation of {@link DatabaseErrorHandler} on the\n * following:\n * <ul>\n *   <li>{@link SQLiteDatabase#openOrCreateDatabase(String,\n *      android.database.sqlite.SQLiteDatabase.CursorFactory, DatabaseErrorHandler)}</li>\n *   <li>{@link SQLiteDatabase#openDatabase(String,\n *      android.database.sqlite.SQLiteDatabase.CursorFactory, int, DatabaseErrorHandler)}</li>\n * </ul>\n * The specified {@link DatabaseErrorHandler} is used to handle database corruption errors, if they\n * occur.\n * <p>\n * If null is specified for the DatabaseErrorHandler param in the above calls, this class is used\n * as the default {@link DatabaseErrorHandler}.\n ",
  "links" : [ "android.database.DatabaseErrorHandler", "android.database.sqlite.SQLiteDatabase#openOrCreateDatabase(String", "android.database.sqlite.SQLiteDatabase#openDatabase(String" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onCorruption(SQLiteDatabase dbObj)",
    "returnType" : "void",
    "comment" : "\n     * defines the default method to be invoked when database corruption is detected.\n     * @param dbObj the {@link SQLiteDatabase} object representing the database on which corruption\n     * is detected.\n     ",
    "links" : [ "android.database.sqlite.SQLiteDatabase" ]
  }, {
    "name" : "private void deleteDatabaseFile(String fileName)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onCorruption(SQLiteDatabase dbObj)", "private void deleteDatabaseFile(String fileName)" ],
  "variableNames" : [ "TAG" ]
}