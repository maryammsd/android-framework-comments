{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MicrophoneDirection.java",
  "packageName" : "android.media",
  "className" : "MicrophoneDirection",
  "comment" : "\n * Interface defining mechanism for controlling the directionality and field width of\n * audio capture.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MIC_DIRECTION_UNSPECIFIED",
    "type" : "int",
    "comment" : "\n     * Don't do any directionality processing of the activated microphone(s).\n     ",
    "links" : [ ]
  }, {
    "name" : "MIC_DIRECTION_TOWARDS_USER",
    "type" : "int",
    "comment" : "\n     * Optimize capture for audio coming from the side of the device facing the user.\n     * In the typical case, a device with a single screen, screen-side camera/microphone and\n     * non-screen-side camera/microphone, this will be the screen side (as in a \"selfie\").\n     * For a different device geometry, it is the side for which the expectation is to be\n     * facing the user.\n     ",
    "links" : [ ]
  }, {
    "name" : "MIC_DIRECTION_AWAY_FROM_USER",
    "type" : "int",
    "comment" : "\n     * Optimize capture for audio coming from the side of the device pointing away from the user.\n     * In the typical case, a device with a single screen, screen-side camera/microphone and\n     * non-screen-side camera/microphone, this will be the non-screen side.\n     * For a different device geometry, it is the side for which the expectation is to be\n     * facing away from the user. This is the \"taking a video of something else\" case.\n     ",
    "links" : [ ]
  }, {
    "name" : "MIC_DIRECTION_EXTERNAL",
    "type" : "int",
    "comment" : "\n     * Optimize capture for audio coming from an off-device microphone.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " boolean setPreferredMicrophoneDirection(@DirectionMode int direction)",
    "returnType" : "boolean",
    "comment" : "\n     * Specifies the logical microphone (for processing). Applications can use this to specify\n     * which side of the device to optimize capture from. Typically used in conjunction with\n     * the camera capturing video.\n     *\n     * Usage would include specifying the audio capture to follow camera being used to capture\n     * video.\n     * @param direction Direction constant.\n     * @return true if sucessful.\n     ",
    "links" : [ ]
  }, {
    "name" : " boolean setPreferredMicrophoneFieldDimension(@FloatRange(from = -1.0, to = 1.0) float zoom)",
    "returnType" : "boolean",
    "comment" : "\n     * Specifies the zoom factor (i.e. the field dimension) for the selected microphone\n     * (for processing). The selected microphone is determined by the use-case for the stream.\n     *\n     * Usage would include specifying the audio focus to follow the zoom specified for the camera\n     * being used to capture video.\n     *\n     * @param zoom the desired field dimension of microphone capture. Range is from -1 (wide angle),\n     * though 0 (no zoom) to 1 (maximum zoom).\n     * @return true if sucessful.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " boolean setPreferredMicrophoneDirection(@DirectionMode int direction)", " boolean setPreferredMicrophoneFieldDimension(@FloatRange(from = -1.0, to = 1.0) float zoom)" ],
  "variableNames" : [ "MIC_DIRECTION_UNSPECIFIED", "MIC_DIRECTION_TOWARDS_USER", "MIC_DIRECTION_AWAY_FROM_USER", "MIC_DIRECTION_EXTERNAL" ]
}