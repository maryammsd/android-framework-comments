{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/ImageWriter.java",
  "packageName" : "android.media",
  "className" : "OnImageReleasedListener",
  "comment" : "\n     * ImageWriter callback interface, used to to asynchronously notify the\n     * application of various ImageWriter events.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " void onImageReleased(ImageWriter writer)",
    "returnType" : "void",
    "comment" : "\n         * <p>\n         * Callback that is called when an input Image is released back to\n         * ImageWriter after the data consumption.\n         * </p>\n         * <p>\n         * The client can use this callback to be notified that an input Image\n         * has been consumed and released by the downstream consumer. More\n         * specifically, this callback will be fired for below cases:\n         * <li>The application dequeues an input Image via the\n         * {@link ImageWriter#dequeueInputImage dequeueInputImage()} method,\n         * uses it, and then queues it back to this ImageWriter via the\n         * {@link ImageWriter#queueInputImage queueInputImage()} method. After\n         * the downstream consumer uses and releases this image to this\n         * ImageWriter, this callback will be fired. This image will be\n         * available to be dequeued after this callback.</li>\n         * <li>The application obtains an Image from some other component (e.g.\n         * an {@link ImageReader}), uses it, and then queues it to this\n         * ImageWriter via {@link ImageWriter#queueInputImage queueInputImage()}.\n         * After the downstream consumer uses and releases this image to this\n         * ImageWriter, this callback will be fired.</li>\n         * </p>\n         *\n         * @param writer the ImageWriter the callback is associated with.\n         * @see ImageWriter\n         * @see Image\n         ",
    "links" : [ "android.media.ImageWriter#queueInputImage", "android.media.ImageReader", "android.media.ImageWriter#dequeueInputImage" ]
  } ],
  "methodNames" : [ " void onImageReleased(ImageWriter writer)" ],
  "variableNames" : [ ]
}