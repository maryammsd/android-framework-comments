{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/TraceEvent.java",
  "packageName" : "org.chromium.base",
  "className" : "IdleTracingLooperMonitor",
  "comment" : "\n     * A class that records, traces and logs statistics about the UI thead's Looper.\n     * The output of this class can be used in a number of interesting ways:\n     * <p>\n     * <ol><li>\n     * When using chrometrace, there will be a near-continuous line of\n     * measurements showing both event dispatches as well as idles;\n     * </li><li>\n     * Logging messages are output for events that run too long on the\n     * event dispatcher, making it easy to identify problematic areas;\n     * </li><li>\n     * Statistics are output whenever there is an idle after a non-trivial\n     * amount of activity, allowing information to be gathered about task\n     * density and execution cadence on the Looper;\n     * </li></ol>\n     * <p>\n     * The class attaches itself as an idle handler to the main Looper, and\n     * monitors the execution of events and idle notifications. Task counters\n     * accumulate between idle notifications and get reset when a new idle\n     * notification is received.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : " Tags for dumping to logcat or TraceEvent",
    "links" : [ ]
  }, {
    "name" : "IDLE_EVENT_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FRAME_DURATION_MILLIS",
    "type" : "long",
    "comment" : " 60 FPS",
    "links" : [ ]
  }, {
    "name" : "MIN_INTERESTING_DURATION_MILLIS",
    "type" : "long",
    "comment" : " A reasonable threshold for defining a Looper event as \"long running\"",
    "links" : [ ]
  }, {
    "name" : "MIN_INTERESTING_BURST_DURATION_MILLIS",
    "type" : "long",
    "comment" : " A reasonable threshold for a \"burst\" of tasks on the Looper",
    "links" : [ ]
  }, {
    "name" : "mLastIdleStartedAt",
    "type" : "long",
    "comment" : " Stats tracking",
    "links" : [ ]
  }, {
    "name" : "mLastWorkStartedAt",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumTasksSeen",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumIdlesSeen",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumTasksSinceLastIdle",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIdleMonitorAttached",
    "type" : "boolean",
    "comment" : " State",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private final void syncIdleMonitoring()",
    "returnType" : "void",
    "comment" : " the only thread that is permitted to call Looper.myqueue().",
    "links" : [ ]
  }, {
    "name" : " final void beginHandling(final String line)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " final void endHandling(final String line)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void traceAndLog(int level, String message)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public final boolean queueIdle()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private final void syncIdleMonitoring()", " final void beginHandling(final String line)", " final void endHandling(final String line)", "private static void traceAndLog(int level, String message)", "public final boolean queueIdle()" ],
  "variableNames" : [ "TAG", "IDLE_EVENT_NAME", "FRAME_DURATION_MILLIS", "MIN_INTERESTING_DURATION_MILLIS", "MIN_INTERESTING_BURST_DURATION_MILLIS", "mLastIdleStartedAt", "mLastWorkStartedAt", "mNumTasksSeen", "mNumIdlesSeen", "mNumTasksSinceLastIdle", "mIdleMonitorAttached" ]
}