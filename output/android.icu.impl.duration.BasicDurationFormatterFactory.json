{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/duration/BasicDurationFormatterFactory.java",
  "packageName" : "android.icu.impl.duration",
  "className" : "BasicDurationFormatterFactory",
  "comment" : "\n * Abstract factory object used to create DurationFormatters.\n * DurationFormatters are immutable once created.\n * <p>\n * Setters on the factory mutate the factory and return it,\n * for chaining.\n * <p>\n * Subclasses override getFormatter to return a custom\n * DurationFormatter.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ps",
    "type" : "BasicPeriodFormatterService",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "formatter",
    "type" : "PeriodFormatter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "builder",
    "type" : "PeriodBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fallback",
    "type" : "DateFormatter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fallbackLimit",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "localeName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "timeZone",
    "type" : "TimeZone",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "f",
    "type" : "BasicDurationFormatter",
    "comment" : " cache",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public DurationFormatterFactory setPeriodFormatter(PeriodFormatter formatter)",
    "returnType" : "DurationFormatterFactory",
    "comment" : "\n   * Set the period formatter used by the factory.  New formatters created\n   * with this factory will use the given period formatter.\n   *\n   * @return this BasicDurationFormatterFactory\n   ",
    "links" : [ ]
  }, {
    "name" : "public DurationFormatterFactory setPeriodBuilder(PeriodBuilder builder)",
    "returnType" : "DurationFormatterFactory",
    "comment" : "\n   * Set the builder used by the factory.  New formatters created\n   * with this factory will use the given locale.\n   *\n   * @param builder the builder to use\n   * @return this BasicDurationFormatterFactory\n   ",
    "links" : [ ]
  }, {
    "name" : "public DurationFormatterFactory setFallback(DateFormatter fallback)",
    "returnType" : "DurationFormatterFactory",
    "comment" : "\n   * Set a fallback formatter for durations over a given limit.\n   *\n   * @param fallback the fallback formatter to use, or null\n   * @return this BasicDurationFormatterFactory\n   ",
    "links" : [ ]
  }, {
    "name" : "public DurationFormatterFactory setFallbackLimit(long fallbackLimit)",
    "returnType" : "DurationFormatterFactory",
    "comment" : "\n   * Set a fallback limit for durations over a given limit.\n   *\n   * @param fallbackLimit the fallback limit to use, or 0 if none is desired.\n   * @return this BasicDurationFormatterFactory\n   ",
    "links" : [ ]
  }, {
    "name" : "public DurationFormatterFactory setLocale(String localeName)",
    "returnType" : "DurationFormatterFactory",
    "comment" : "\n   * Set the name of the locale that will be used when\n   * creating new formatters.\n   *\n   * @param localeName the name of the Locale\n   * @return this BasicDurationFormatterFactory\n   ",
    "links" : [ ]
  }, {
    "name" : "public DurationFormatterFactory setTimeZone(TimeZone timeZone)",
    "returnType" : "DurationFormatterFactory",
    "comment" : "\n   * Set the name of the locale that will be used when\n   * creating new formatters.\n   *\n   * @param timeZone The time zone to use.\n   * @return this BasicDurationFormatterFactory\n   ",
    "links" : [ ]
  }, {
    "name" : "public DurationFormatter getFormatter()",
    "returnType" : "DurationFormatter",
    "comment" : "\n   * Return a formatter based on this factory's current settings.\n   *\n   * @return a BasicDurationFormatter\n   ",
    "links" : [ ]
  }, {
    "name" : "public PeriodFormatter getPeriodFormatter()",
    "returnType" : "PeriodFormatter",
    "comment" : "\n   * Return the current period formatter.\n   *\n   * @return the current period formatter\n   ",
    "links" : [ ]
  }, {
    "name" : "public PeriodBuilder getPeriodBuilder()",
    "returnType" : "PeriodBuilder",
    "comment" : "\n   * Return the current builder.\n   *\n   * @return the current builder\n   ",
    "links" : [ ]
  }, {
    "name" : "public DateFormatter getFallback()",
    "returnType" : "DateFormatter",
    "comment" : "\n   * Return the current fallback formatter.\n   *\n   * @return the fallback formatter, or null if there is no fallback\n   * formatter\n   ",
    "links" : [ ]
  }, {
    "name" : "public long getFallbackLimit()",
    "returnType" : "long",
    "comment" : "\n   * Return the current fallback formatter limit\n   *\n   * @return the limit, or 0 if there is no fallback.\n   ",
    "links" : [ ]
  }, {
    "name" : "public String getLocaleName()",
    "returnType" : "String",
    "comment" : "\n   * Return the current locale name.\n   *\n   * @return the current locale name\n   ",
    "links" : [ ]
  }, {
    "name" : "public TimeZone getTimeZone()",
    "returnType" : "TimeZone",
    "comment" : "\n   * Return the current locale name.\n   *\n   * @return the current locale name\n   ",
    "links" : [ ]
  }, {
    "name" : "protected BasicDurationFormatter createFormatter()",
    "returnType" : "BasicDurationFormatter",
    "comment" : "\n   * Create the formatter.  All local fields are already initialized.\n   ",
    "links" : [ ]
  }, {
    "name" : "protected void reset()",
    "returnType" : "void",
    "comment" : "\n   * Clear the cached formatter.  Subclasses must call this if their\n   * state has changed. This is automatically invoked by setBuilder,\n   * setFormatter, setFallback, setLocaleName, and setTimeZone\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public DurationFormatterFactory setPeriodFormatter(PeriodFormatter formatter)", "public DurationFormatterFactory setPeriodBuilder(PeriodBuilder builder)", "public DurationFormatterFactory setFallback(DateFormatter fallback)", "public DurationFormatterFactory setFallbackLimit(long fallbackLimit)", "public DurationFormatterFactory setLocale(String localeName)", "public DurationFormatterFactory setTimeZone(TimeZone timeZone)", "public DurationFormatter getFormatter()", "public PeriodFormatter getPeriodFormatter()", "public PeriodBuilder getPeriodBuilder()", "public DateFormatter getFallback()", "public long getFallbackLimit()", "public String getLocaleName()", "public TimeZone getTimeZone()", "protected BasicDurationFormatter createFormatter()", "protected void reset()" ],
  "variableNames" : [ "ps", "formatter", "builder", "fallback", "fallbackLimit", "localeName", "timeZone", "f" ]
}