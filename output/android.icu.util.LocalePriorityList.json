{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/LocalePriorityList.java",
  "packageName" : "android.icu.util",
  "className" : "LocalePriorityList",
  "comment" : "\n * Provides an immutable list of languages/locales in priority order.\n * The string format is based on the Accept-Language format\n * (<a href=\"https://tools.ietf.org/html/rfc2616#section-14.4\">RFC 2616 Section 14.4</a>), such as\n * \"af, en, fr;q=0.9\". Syntactically it is slightly\n * more lenient, in allowing extra whitespace between elements, extra commas,\n * and more than 3 decimals (on input). The qvalues must be between 0 and 1.\n *\n * <p>In theory, Accept-Language indicates the relative 'quality' of each item,\n * but in practice, all of the browsers just take an ordered list, like\n * \"en, fr, de\", and synthesize arbitrary quality values that put these in the\n * right order, like: \"en, fr;q=0.7, de;q=0.3\". The quality values in these de facto\n * semantics thus have <b>nothing</b> to do with the relative qualities of the\n * original. Accept-Language also doesn't\n * specify the interpretation of multiple instances, eg what \"en, fr, en;q=.5\"\n * means.\n * <p>There are various ways to build a LocalePriorityList, such\n * as using the following equivalent patterns:\n *\n * <pre>\n * list = LocalePriorityList.add(&quot;af, en, fr;q=0.9&quot;).build();\n *\n * list2 = LocalePriorityList\n *  .add(ULocale.forString(&quot;af&quot;))\n *  .add(ULocale.ENGLISH)\n *  .add(ULocale.FRENCH, 0.9d)\n *  .build();\n * </pre>\n * When the list is built, the internal values are sorted in descending order by weight,\n * and then by input order.\n * That is, if two languages/locales have the same weight, the first one in the original order comes first.\n * If exactly the same language tag appears multiple times, the last one wins.\n *\n * <p>There are two options when building.\n * If preserveWeights are on, then \"de;q=0.3, ja;q=0.3, en, fr;q=0.7, de \" would result in the following:\n * <pre> en;q=1.0\n * de;q=1.0\n * fr;q=0.7\n * ja;q=0.3</pre>\n * If it is off (the default), then all weights are reset to 1.0 after reordering.\n * This is to match the effect of the Accept-Language semantics as used in browsers, and results in the following:\n * <pre> en;q=1.0\n * de;q=1.0\n * fr;q=1.0\n * ja;q=1.0</pre>\n * @author markdavis@google.com\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "D1",
    "type" : "Double",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "languageSplitter",
    "type" : "Pattern",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "weightSplitter",
    "type" : "Pattern",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "languagesAndWeights",
    "type" : "Map<ULocale, Double>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "myDescendingDouble",
    "type" : "Comparator<Double>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Builder add(ULocale... locales)",
    "returnType" : "Builder",
    "comment" : "\n     * Creates a Builder and adds locales, each with weight 1.0.\n     *\n     * @param locales locales/languages to be added\n     * @return a new builder with these locales, for chaining\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Builder add(ULocale locale, final double weight)",
    "returnType" : "Builder",
    "comment" : "\n     * Creates a Builder and adds a locale with a specified weight.\n     * A zero or negative weight leads to removing the locale.\n     * A weight greater than 1 is pinned to 1.\n     *\n     * @param locale locale/language to be added\n     * @param weight value from 0.0 to 1.0\n     * @return a new builder with this locale, for chaining\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Builder add(LocalePriorityList list)",
    "returnType" : "Builder",
    "comment" : "\n     * Creates a Builder and adds locales with weights.\n     *\n     * @param list list of locales with weights\n     * @return a new builder with these locales, for chaining\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Builder add(String acceptLanguageString)",
    "returnType" : "Builder",
    "comment" : "\n     * Creates a Builder, parses the RFC 2616 string, and adds locales with weights accordingly.\n     *\n     * @param acceptLanguageString String in RFC 2616 format (leniently parsed)\n     * @return a new builder with these locales, for chaining\n     ",
    "links" : [ ]
  }, {
    "name" : "public Double getWeight(ULocale locale)",
    "returnType" : "Double",
    "comment" : "\n     * Returns the weight for a given language/locale, or null if there is none.\n     * Note that the weights may be adjusted from those used to build the list.\n     *\n     * @param locale to get weight of\n     * @return weight\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<ULocale> getULocales()",
    "returnType" : "Set<ULocale>",
    "comment" : "\n     * Returns the locales as an immutable Set view.\n     * The set has the same iteration order as this object itself.\n     *\n     * @return the locales\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Iterator<ULocale> iterator()",
    "returnType" : "Iterator<ULocale>",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(final Object o)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Builder add(ULocale... locales)", "public static Builder add(ULocale locale, final double weight)", "public static Builder add(LocalePriorityList list)", "public static Builder add(String acceptLanguageString)", "public Double getWeight(ULocale locale)", "public Set<ULocale> getULocales()", "public String toString()", "public Iterator<ULocale> iterator()", "public boolean equals(final Object o)", "public int hashCode()" ],
  "variableNames" : [ "D1", "languageSplitter", "weightSplitter", "languagesAndWeights", "myDescendingDouble" ]
}