{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothQualityReport.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothQualityReport",
  "comment" : "\n * This class provides the System APIs to access the data of BQR event reported from firmware side.\n * Currently it supports five event types: Quality monitor event, Approaching LSTO event, A2DP\n * choppy event, SCO choppy event and Connect fail event. To know which kind of event is wrapped in\n * this {@link BluetoothQualityReport} object, you need to call {@link #getQualityReportId}.\n *\n * <ul>\n *   <li>For Quality monitor event, you can call {@link #getBqrCommon} to get a {@link\n *       BluetoothQualityReport.BqrCommon} object.\n *   <li>For Approaching LSTO event, you can call {@link #getBqrCommon} to get a {@link\n *       BluetoothQualityReport.BqrCommon} object, and call {@link #getBqrEvent} to get a {@link\n *       BluetoothQualityReport.BqrVsLsto} object.\n *   <li>For A2DP choppy event, you can call {@link #getBqrCommon} to get a {@link\n *       BluetoothQualityReport.BqrCommon} object, and call {@link #getBqrEvent} to get a {@link\n *       BluetoothQualityReport.BqrVsA2dpChoppy} object.\n *   <li>For SCO choppy event, you can call {@link #getBqrCommon} to get a {@link\n *       BluetoothQualityReport.BqrCommon} object, and call {@link #getBqrEvent} to get a {@link\n *       BluetoothQualityReport.BqrVsScoChoppy} object.\n *   <li>For Connect fail event, you can call {@link #getBqrCommon} to get a {@link\n *       BluetoothQualityReport.BqrCommon} object, and call {@link #getBqrEvent} to get a {@link\n *       BluetoothQualityReport.BqrConnectFail} object.\n * </ul>\n *\n * @hide\n ",
  "links" : [ "#getBqrCommon", "#getQualityReportId", "android.bluetooth.BluetoothQualityReport", "BluetoothQualityReport.BqrVsLsto", "#getBqrEvent", "BluetoothQualityReport.BqrVsA2dpChoppy", "BluetoothQualityReport.BqrConnectFail", "BluetoothQualityReport.BqrVsScoChoppy", "BluetoothQualityReport.BqrCommon" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "QUALITY_REPORT_ID_MONITOR",
    "type" : "int",
    "comment" : "\n     * Quality report ID: Monitor.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "QUALITY_REPORT_ID_APPROACH_LSTO",
    "type" : "int",
    "comment" : "\n     * Quality report ID: Approaching LSTO.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "QUALITY_REPORT_ID_A2DP_CHOPPY",
    "type" : "int",
    "comment" : "\n     * Quality report ID: A2DP choppy.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "QUALITY_REPORT_ID_SCO_CHOPPY",
    "type" : "int",
    "comment" : "\n     * Quality report ID: SCO choppy.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "QUALITY_REPORT_ID_CONN_FAIL",
    "type" : "int",
    "comment" : "\n     * Quality report ID: Connect Fail.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mAddr",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLmpVer",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLmpSubVer",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mManufacturerId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBluetoothClass",
    "type" : "BluetoothClass",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBqrCommon",
    "type" : "BqrCommon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBqrVsLsto",
    "type" : "BqrVsLsto",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBqrVsA2dpChoppy",
    "type" : "BqrVsA2dpChoppy",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBqrVsScoChoppy",
    "type" : "BqrVsScoChoppy",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBqrConnectFail",
    "type" : "BqrConnectFail",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<BluetoothQualityReport>",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getQualityReportId()",
    "returnType" : "int",
    "comment" : "\n     * Get the quality report id.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String qualityReportIdToString(@QualityReportId int id)",
    "returnType" : "String",
    "comment" : "\n     * Get the string of the quality report id.\n     *\n     * @return the string of the id\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getRemoteAddress()",
    "returnType" : "String",
    "comment" : "\n     * Get bluetooth address of remote device in this report.\n     *\n     * @return bluetooth address of remote device\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLmpVersion()",
    "returnType" : "int",
    "comment" : "\n     * Get LMP version of remote device in this report.\n     *\n     * @return LMP version of remote device\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLmpSubVersion()",
    "returnType" : "int",
    "comment" : "\n     * Get LMP subVersion of remote device in this report.\n     *\n     * @return LMP subVersion of remote device\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getManufacturerId()",
    "returnType" : "int",
    "comment" : "\n     * Get manufacturer id of remote device in this report.\n     *\n     * @return manufacturer id of remote device\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getRemoteName()",
    "returnType" : "String",
    "comment" : "\n     * Get the name of remote device in this report.\n     *\n     * @return the name of remote device\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public BluetoothClass getBluetoothClass()",
    "returnType" : "BluetoothClass",
    "comment" : "\n     * Get the class of remote device in this report.\n     *\n     * @return the class of remote device\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public BqrCommon getBqrCommon()",
    "returnType" : "BqrCommon",
    "comment" : "\n     * Get the {@link BluetoothQualityReport.BqrCommon} object.\n     *\n     * @return the {@link BluetoothQualityReport.BqrCommon} object.\n     * @hide\n     ",
    "links" : [ "BluetoothQualityReport.BqrCommon" ]
  }, {
    "name" : "public Parcelable getBqrEvent()",
    "returnType" : "Parcelable",
    "comment" : "\n     * Get the event data object based on current Quality Report Id. If the report id is {@link\n     * #QUALITY_REPORT_ID_MONITOR}, this returns a {@link BluetoothQualityReport.BqrCommon} object.\n     * If the report id is {@link #QUALITY_REPORT_ID_APPROACH_LSTO}, this returns a {@link\n     * BluetoothQualityReport.BqrVsLsto} object. If the report id is {@link\n     * #QUALITY_REPORT_ID_A2DP_CHOPPY}, this returns a {@link\n     * BluetoothQualityReport.BqrVsA2dpChoppy} object. If the report id is {@link\n     * #QUALITY_REPORT_ID_SCO_CHOPPY}, this returns a {@link BluetoothQualityReport.BqrVsScoChoppy}\n     * object. If the report id is {@link #QUALITY_REPORT_ID_CONN_FAIL}, this returns a {@link\n     * BluetoothQualityReport.BqrConnectFail} object. If the report id is none of the above, this\n     * returns {@code null}.\n     *\n     * @return the event data object based on the quality report id\n     * @hide\n     ",
    "links" : [ "#QUALITY_REPORT_ID_CONN_FAIL", "#QUALITY_REPORT_ID_MONITOR", "#QUALITY_REPORT_ID_APPROACH_LSTO", "BluetoothQualityReport.BqrVsLsto", "#QUALITY_REPORT_ID_A2DP_CHOPPY", "BluetoothQualityReport.BqrVsA2dpChoppy", "BluetoothQualityReport.BqrConnectFail", "BluetoothQualityReport.BqrVsScoChoppy", "BluetoothQualityReport.BqrCommon", "#QUALITY_REPORT_ID_SCO_CHOPPY" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * Describe contents.\n     *\n     * @return 0\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Write BluetoothQualityReport to parcel.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " BluetoothQualityReport to String. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getQualityReportId()", "public static String qualityReportIdToString(@QualityReportId int id)", "public String getRemoteAddress()", "public int getLmpVersion()", "public int getLmpSubVersion()", "public int getManufacturerId()", "public String getRemoteName()", "public BluetoothClass getBluetoothClass()", "public BqrCommon getBqrCommon()", "public Parcelable getBqrEvent()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)", "public String toString()" ],
  "variableNames" : [ "TAG", "QUALITY_REPORT_ID_MONITOR", "QUALITY_REPORT_ID_APPROACH_LSTO", "QUALITY_REPORT_ID_A2DP_CHOPPY", "QUALITY_REPORT_ID_SCO_CHOPPY", "QUALITY_REPORT_ID_CONN_FAIL", "mAddr", "mLmpVer", "mLmpSubVer", "mManufacturerId", "mName", "mBluetoothClass", "mBqrCommon", "mBqrVsLsto", "mBqrVsA2dpChoppy", "mBqrVsScoChoppy", "mBqrConnectFail", "CREATOR" ]
}