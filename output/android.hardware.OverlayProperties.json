{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/OverlayProperties.java",
  "packageName" : "android.hardware",
  "className" : "OverlayProperties",
  "comment" : "\n * Provides supported overlay properties of the device.\n *\n * <p>\n * Hardware overlay is a technique to composite different buffers directly\n * to the screen using display hardware rather than the GPU.\n * The system compositor is able to assign any content managed by a\n * {@link android.view.SurfaceControl} onto a hardware overlay if possible.\n * Applications may be interested in the display hardware capabilities exposed\n * by this class as a hint to determine if their {@link android.view.SurfaceControl}\n * tree is power-efficient and performant.\n * </p>\n ",
  "links" : [ "android.view.SurfaceControl" ],
  "variables" : [ {
    "name" : "sRegistry",
    "type" : "NativeAllocationRegistry",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNativeObject",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sDefaultOverlayProperties",
    "type" : "OverlayProperties",
    "comment" : " only for virtual displays",
    "links" : [ ]
  }, {
    "name" : "mCloser",
    "type" : "Runnable",
    "comment" : " Invoked on destruction",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<OverlayProperties>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static OverlayProperties getDefault()",
    "returnType" : "OverlayProperties",
    "comment" : "\n     * For virtual displays, we provide an overlay properties object\n     * with RGBA 8888 only, sRGB only, true for mixed color spaces.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCombinationSupported(@DataSpace.ColorDataSpace int dataspace, @HardwareBuffer.Format int format)",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates that hardware composition of a buffer encoded with the provided {@link DataSpace}\n     * and {@link HardwareBuffer.Format} is supported on the device.\n     *\n     * @return True if the device can support efficiently compositing the content described by the\n     *         dataspace and format. False if GPU composition fallback is otherwise required.\n     ",
    "links" : [ "HardwareBuffer.Format", "android.hardware.DataSpace" ]
  }, {
    "name" : "public boolean isMixedColorSpacesSupported()",
    "returnType" : "boolean",
    "comment" : "\n     * Indicates that hardware composition of two or more overlays\n     * with different colorspaces is supported on the device.\n     *\n     * @return True if the device can support mixed colorspaces efficiently,\n     *         false if GPU composition fallback is otherwise required.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nGetDestructor()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nCreateDefault()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native boolean nSupportMixedColorSpaces(long nativeObject)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native boolean nIsCombinationSupported(long nativeObject, int dataspace, int format)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native void nWriteOverlayPropertiesToParcel(long nativeObject, Parcel dest)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native long nReadOverlayPropertiesFromParcel(Parcel in)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static OverlayProperties getDefault()", "public boolean isCombinationSupported(@DataSpace.ColorDataSpace int dataspace, @HardwareBuffer.Format int format)", "public boolean isMixedColorSpacesSupported()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "private static native long nGetDestructor()", "private static native long nCreateDefault()", "private static native boolean nSupportMixedColorSpaces(long nativeObject)", "private static native boolean nIsCombinationSupported(long nativeObject, int dataspace, int format)", "private static native void nWriteOverlayPropertiesToParcel(long nativeObject, Parcel dest)", "private static native long nReadOverlayPropertiesFromParcel(Parcel in)" ],
  "variableNames" : [ "sRegistry", "mNativeObject", "sDefaultOverlayProperties", "mCloser", "CREATOR" ]
}