{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "Photo",
  "comment" : "\n         * A <i>read-only</i> sub-directory of a single contact that contains\n         * the contact's primary photo.  The photo may be stored in up to two ways -\n         * the default \"photo\" is a thumbnail-sized image stored directly in the data\n         * row, while the \"display photo\", if present, is a larger version stored as\n         * a file.\n         * <p>\n         * Usage example:\n         * <dl>\n         * <dt>Retrieving the thumbnail-sized photo</dt>\n         * <dd>\n         * <pre>\n         * public InputStream openPhoto(long contactId) {\n         *     Uri contactUri = ContentUris.withAppendedId(Contacts.CONTENT_URI, contactId);\n         *     Uri photoUri = Uri.withAppendedPath(contactUri, Contacts.Photo.CONTENT_DIRECTORY);\n         *     Cursor cursor = getContentResolver().query(photoUri,\n         *          new String[] {Contacts.Photo.PHOTO}, null, null, null);\n         *     if (cursor == null) {\n         *         return null;\n         *     }\n         *     try {\n         *         if (cursor.moveToFirst()) {\n         *             byte[] data = cursor.getBlob(0);\n         *             if (data != null) {\n         *                 return new ByteArrayInputStream(data);\n         *             }\n         *         }\n         *     } finally {\n         *         cursor.close();\n         *     }\n         *     return null;\n         * }\n         * </pre>\n         * </dd>\n         * <dt>Retrieving the larger photo version</dt>\n         * <dd>\n         * <pre>\n         * public InputStream openDisplayPhoto(long contactId) {\n         *     Uri contactUri = ContentUris.withAppendedId(Contacts.CONTENT_URI, contactId);\n         *     Uri displayPhotoUri = Uri.withAppendedPath(contactUri, Contacts.Photo.DISPLAY_PHOTO);\n         *     try {\n         *         AssetFileDescriptor fd =\n         *             getContentResolver().openAssetFileDescriptor(displayPhotoUri, \"r\");\n         *         return fd.createInputStream();\n         *     } catch (IOException e) {\n         *         return null;\n         *     }\n         * }\n         * </pre>\n         * </dd>\n         * </dl>\n         *\n         * </p>\n         * <p>You may also consider using the convenience method\n         * {@link ContactsContract.Contacts#openContactPhotoInputStream(ContentResolver, Uri, boolean)}\n         * to retrieve the raw photo contents of either the thumbnail-sized or the full-sized photo.\n         * </p>\n         * <p>\n         * This directory can be used either with a {@link #CONTENT_URI} or\n         * {@link #CONTENT_LOOKUP_URI}.\n         * </p>\n         ",
  "links" : [ "ContactsContract.Contacts#openContactPhotoInputStream(ContentResolver", "#CONTENT_URI", "#CONTENT_LOOKUP_URI" ],
  "variables" : [ {
    "name" : "CONTENT_DIRECTORY",
    "type" : "String",
    "comment" : "\n             * The directory twig for this sub-table\n             ",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_PHOTO",
    "type" : "String",
    "comment" : "\n             * The directory twig for retrieving the full-size display photo.\n             ",
    "links" : [ ]
  }, {
    "name" : "PHOTO_FILE_ID",
    "type" : "String",
    "comment" : "\n             * Full-size photo file ID of the raw contact.\n             * See {@link ContactsContract.DisplayPhoto}.\n             * <p>\n             * Type: NUMBER\n             ",
    "links" : [ "ContactsContract.DisplayPhoto" ]
  }, {
    "name" : "PHOTO",
    "type" : "String",
    "comment" : "\n             * Thumbnail photo of the raw contact. This is the raw bytes of an image\n             * that could be inflated using {@link android.graphics.BitmapFactory}.\n             * <p>\n             * Type: BLOB\n             ",
    "links" : [ "android.graphics.BitmapFactory" ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "CONTENT_DIRECTORY", "DISPLAY_PHOTO", "PHOTO_FILE_ID", "PHOTO" ]
}