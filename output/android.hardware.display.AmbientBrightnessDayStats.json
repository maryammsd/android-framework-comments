{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/display/AmbientBrightnessDayStats.java",
  "packageName" : "android.hardware.display",
  "className" : "AmbientBrightnessDayStats",
  "comment" : "\n * AmbientBrightnessDayStats stores and manipulates brightness stats over a single day.\n * {@see DisplayManager.getAmbientBrightnessStats()}\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mLocalDate",
    "type" : "LocalDate",
    "comment" : " The localdate for which brightness stats are being tracked ",
    "links" : [ ]
  }, {
    "name" : "mBucketBoundaries",
    "type" : "float[]",
    "comment" : " Ambient brightness values for creating bucket boundaries from ",
    "links" : [ ]
  }, {
    "name" : "mStats",
    "type" : "float[]",
    "comment" : " Stats of how much time (in seconds) was spent in each of the buckets ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<AmbientBrightnessDayStats>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public LocalDate getLocalDate()",
    "returnType" : "LocalDate",
    "comment" : "\n     * @return The {@link LocalDate} for which brightness stats are being tracked.\n     ",
    "links" : [ "java.time.LocalDate" ]
  }, {
    "name" : "public float[] getStats()",
    "returnType" : "float[]",
    "comment" : "\n     * @return Aggregated stats of time spent (in seconds) in various buckets.\n     ",
    "links" : [ ]
  }, {
    "name" : "public float[] getBucketBoundaries()",
    "returnType" : "float[]",
    "comment" : "\n     * Returns the bucket boundaries (in lux) used for creating buckets. For eg., if the bucket\n     * boundaries array is {b1, b2, b3}, the buckets will be [b1, b2), [b2, b3), [b3, inf).\n     *\n     * @return The list of bucket boundaries.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void log(float ambientBrightness, float durationSec)",
    "returnType" : "void",
    "comment" : "\n     * Updates the stats by incrementing the time spent for the appropriate bucket based on ambient\n     * brightness reading.\n     *\n     * @param ambientBrightness Ambient brightness reading (in lux)\n     * @param durationSec       Time spent with the given reading (in seconds)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private int getBucketIndex(float ambientBrightness)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void checkSorted(float[] values)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mLocalDate", "mBucketBoundaries", "mStats", "CREATOR" ],
  "methodNames" : [ "public LocalDate getLocalDate()", "public float[] getStats()", "public float[] getBucketBoundaries()", "public boolean equals(@Nullable Object obj)", "public int hashCode()", "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void log(float ambientBrightness, float durationSec)", "private int getBucketIndex(float ambientBrightness)", "private static void checkSorted(float[] values)" ]
}