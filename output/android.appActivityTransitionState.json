{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/ActivityTransitionState.java",
  "packageName" : "android.app",
  "className" : "ActivityTransitionState",
  "comment" : "\n * This class contains all persistence-related functionality for Activity Transitions.\n * Activities start exit and enter Activity Transitions through this class.\n ",
  "variables" : [ {
    "name" : "PENDING_EXIT_SHARED_ELEMENTS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXITING_MAPPED_FROM",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXITING_MAPPED_TO",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPendingExitNames",
    "type" : "ArrayList<String>",
    "comment" : "\n     * The shared elements that the calling Activity has said that they transferred to this\n     * Activity and will be transferred back during exit animation.\n     ",
    "links" : [ ]
  }, {
    "name" : "mExitingFrom",
    "type" : "ArrayList<String>",
    "comment" : "\n     * The names of shared elements that were shared to the called Activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "mExitingTo",
    "type" : "ArrayList<String>",
    "comment" : "\n     * The names of local Views that were shared out, mapped to those elements in mExitingFrom.\n     ",
    "links" : [ ]
  }, {
    "name" : "mExitingToView",
    "type" : "ArrayList<View>",
    "comment" : "\n     * The local Views that were shared out, mapped to those elements in mExitingFrom.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCalledExitCoordinator",
    "type" : "ExitTransitionCoordinator",
    "comment" : "\n     * The ExitTransitionCoordinator used to start an Activity. Used to make the elements restore\n     * Visibility of exited Views.\n     ",
    "links" : [ ]
  }, {
    "name" : "mReturnExitCoordinator",
    "type" : "ExitTransitionCoordinator",
    "comment" : "\n     * The ExitTransitionCoordinator used to return to a previous Activity when called with\n     * {@link android.app.Activity#finishAfterTransition()}.\n     ",
    "links" : [ "android.app.Activity#finishAfterTransition" ]
  }, {
    "name" : "mEnterTransitionCoordinator",
    "type" : "EnterTransitionCoordinator",
    "comment" : "\n     * We must be able to cancel entering transitions to stop changing the Window to\n     * opaque when we exit before making the Window opaque.\n     ",
    "links" : [ ]
  }, {
    "name" : "mEnterActivityOptions",
    "type" : "ActivityOptions",
    "comment" : "\n     * ActivityOptions used on entering this Activity.\n     ",
    "links" : [ ]
  }, {
    "name" : "mHasExited",
    "type" : "boolean",
    "comment" : "\n     * Has an exit transition been started? If so, we don't want to double-exit.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsEnterPostponed",
    "type" : "boolean",
    "comment" : "\n     * Postpone painting and starting the enter transition until this is false.\n     ",
    "links" : [ ]
  }, {
    "name" : "mExitTransitionCoordinators",
    "type" : "SparseArray<WeakReference<ExitTransitionCoordinator>>",
    "comment" : "\n     * Potential exit transition coordinators.\n     ",
    "links" : [ ]
  }, {
    "name" : "mExitTransitionCoordinatorsKey",
    "type" : "int",
    "comment" : "\n     * Next key for mExitTransitionCoordinator.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsEnterTriggered",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int addExitTransitionCoordinator(ExitTransitionCoordinator exitTransitionCoordinator)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void readState(Bundle bundle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private ArrayList<String> getPendingExitNames()",
    "returnType" : "ArrayList<String>",
    "comment" : "\n     * Returns the element names to be used for exit animation. It caches the list internally so\n     * that it is preserved through activty destroy and restore.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void saveState(Bundle bundle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setEnterActivityOptions(Activity activity, ActivityOptions options)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void enterReady(Activity activity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void postponeEnterTransition()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startPostponedEnterTransition()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void startEnter()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onStop()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onResume(Activity activity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void clear()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void restoreExitedViews()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void restoreReenteringViews()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean startExitBackTransition(final Activity activity)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isTransitionRunning()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void startExitOutTransition(Activity activity, Bundle options)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "PENDING_EXIT_SHARED_ELEMENTS", "EXITING_MAPPED_FROM", "EXITING_MAPPED_TO", "mPendingExitNames", "mExitingFrom", "mExitingTo", "mExitingToView", "mCalledExitCoordinator", "mReturnExitCoordinator", "mEnterTransitionCoordinator", "mEnterActivityOptions", "mHasExited", "mIsEnterPostponed", "mExitTransitionCoordinators", "mExitTransitionCoordinatorsKey", "mIsEnterTriggered" ],
  "methodNames" : [ "public int addExitTransitionCoordinator(ExitTransitionCoordinator exitTransitionCoordinator)", "public void readState(Bundle bundle)", "private ArrayList<String> getPendingExitNames()", "public void saveState(Bundle bundle)", "public void setEnterActivityOptions(Activity activity, ActivityOptions options)", "public void enterReady(Activity activity)", "public void postponeEnterTransition()", "public void startPostponedEnterTransition()", "private void startEnter()", "public void onStop()", "public void onResume(Activity activity)", "public void clear()", "private void restoreExitedViews()", "private void restoreReenteringViews()", "public boolean startExitBackTransition(final Activity activity)", "public boolean isTransitionRunning()", "public void startExitOutTransition(Activity activity, Bundle options)" ]
}