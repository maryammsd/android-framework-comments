{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/CallLog.java",
  "packageName" : "android.provider",
  "className" : "Calls",
  "comment" : "\n     * Contains the recent calls.\n     ",
  "variables" : [ {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URL for this table\n         ",
    "links" : [ ]
  }, {
    "name" : "SHADOW_CONTENT_URI",
    "type" : "Uri",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CONTENT_FILTER_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URL for filtering this table on phone numbers\n         ",
    "links" : [ ]
  }, {
    "name" : "LIMIT_PARAM_KEY",
    "type" : "String",
    "comment" : "\n         * Query parameter used to limit the number of call logs returned.\n         * <p>\n         * TYPE: integer\n         ",
    "links" : [ ]
  }, {
    "name" : "OFFSET_PARAM_KEY",
    "type" : "String",
    "comment" : "\n         * Query parameter used to specify the starting record to return.\n         * <p>\n         * TYPE: integer\n         ",
    "links" : [ ]
  }, {
    "name" : "ALLOW_VOICEMAILS_PARAM_KEY",
    "type" : "String",
    "comment" : "\n         * An optional URI parameter which instructs the provider to allow the operation to be\n         * applied to voicemail records as well.\n         * <p>\n         * TYPE: Boolean\n         * <p>\n         * Using this parameter with a value of {@code true} will result in a security error if the\n         * calling package does not have appropriate permissions to access voicemails.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EXTRA_CALL_TYPE_FILTER",
    "type" : "String",
    "comment" : "\n         * An optional extra used with {@link #CONTENT_TYPE Calls.CONTENT_TYPE} and\n         * {@link Intent#ACTION_VIEW} to specify that the presented list of calls should be\n         * filtered for a particular call type.\n         *\n         * Applications implementing a call log UI should check for this extra, and display a\n         * filtered list of calls based on the specified call type. If not applicable within the\n         * application's UI, it should be silently ignored.\n         *\n         * <p>\n         * The following example brings up the call log, showing only missed calls.\n         * <pre>\n         * Intent intent = new Intent(Intent.ACTION_VIEW);\n         * intent.setType(CallLog.Calls.CONTENT_TYPE);\n         * intent.putExtra(CallLog.Calls.EXTRA_CALL_TYPE_FILTER, CallLog.Calls.MISSED_TYPE);\n         * startActivity(intent);\n         * </pre>\n         * </p>\n         ",
    "links" : [ "#CONTENT_TYPE", "android.content.Intent#ACTION_VIEW" ]
  }, {
    "name" : "CONTENT_URI_WITH_VOICEMAIL",
    "type" : "Uri",
    "comment" : "\n         * Content uri used to access call log entries, including voicemail records. You must have\n         * the READ_CALL_LOG and WRITE_CALL_LOG permissions to read and write to the call log, as\n         * well as READ_VOICEMAIL and WRITE_VOICEMAIL permissions to read and write voicemails.\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_SORT_ORDER",
    "type" : "String",
    "comment" : "\n         * The default sort order for this table\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTENT_TYPE",
    "type" : "String",
    "comment" : "\n         * The MIME type of {@link #CONTENT_URI} and {@link #CONTENT_FILTER_URI}\n         * providing a directory of calls.\n         ",
    "links" : [ "#CONTENT_FILTER_URI", "#CONTENT_URI" ]
  }, {
    "name" : "CONTENT_ITEM_TYPE",
    "type" : "String",
    "comment" : "\n         * The MIME type of a {@link #CONTENT_URI} sub-directory of a single\n         * call.\n         ",
    "links" : [ "#CONTENT_URI" ]
  }, {
    "name" : "TYPE",
    "type" : "String",
    "comment" : "\n         * The type of the call (incoming, outgoing or missed).\n         * <P>Type: INTEGER (int)</P>\n         *\n         * <p>\n         * Allowed values:\n         * <ul>\n         * <li>{@link #INCOMING_TYPE}</li>\n         * <li>{@link #OUTGOING_TYPE}</li>\n         * <li>{@link #MISSED_TYPE}</li>\n         * <li>{@link #VOICEMAIL_TYPE}</li>\n         * <li>{@link #REJECTED_TYPE}</li>\n         * <li>{@link #BLOCKED_TYPE}</li>\n         * <li>{@link #ANSWERED_EXTERNALLY_TYPE}</li>\n         * </ul>\n         * </p>\n         ",
    "links" : [ "#INCOMING_TYPE", "#OUTGOING_TYPE", "#REJECTED_TYPE", "#BLOCKED_TYPE", "#MISSED_TYPE", "#VOICEMAIL_TYPE", "#ANSWERED_EXTERNALLY_TYPE" ]
  }, {
    "name" : "INCOMING_TYPE",
    "type" : "int",
    "comment" : " Call log type for incoming calls. ",
    "links" : [ ]
  }, {
    "name" : "OUTGOING_TYPE",
    "type" : "int",
    "comment" : " Call log type for outgoing calls. ",
    "links" : [ ]
  }, {
    "name" : "MISSED_TYPE",
    "type" : "int",
    "comment" : " Call log type for missed calls. ",
    "links" : [ ]
  }, {
    "name" : "VOICEMAIL_TYPE",
    "type" : "int",
    "comment" : " Call log type for voicemails. ",
    "links" : [ ]
  }, {
    "name" : "REJECTED_TYPE",
    "type" : "int",
    "comment" : " Call log type for calls rejected by direct user action. ",
    "links" : [ ]
  }, {
    "name" : "BLOCKED_TYPE",
    "type" : "int",
    "comment" : " Call log type for calls blocked automatically. ",
    "links" : [ ]
  }, {
    "name" : "ANSWERED_EXTERNALLY_TYPE",
    "type" : "int",
    "comment" : "\n         * Call log type for a call which was answered on another device.  Used in situations where\n         * a call rings on multiple devices simultaneously and it ended up being answered on a\n         * device other than the current one.\n         ",
    "links" : [ ]
  }, {
    "name" : "FEATURES",
    "type" : "String",
    "comment" : "\n         * Bit-mask describing features of the call (e.g. video).\n         *\n         * <P>Type: INTEGER (int)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "FEATURES_VIDEO",
    "type" : "int",
    "comment" : " Call had video. ",
    "links" : [ ]
  }, {
    "name" : "FEATURES_PULLED_EXTERNALLY",
    "type" : "int",
    "comment" : " Call was pulled externally. ",
    "links" : [ ]
  }, {
    "name" : "FEATURES_HD_CALL",
    "type" : "int",
    "comment" : " Call was HD. ",
    "links" : [ ]
  }, {
    "name" : "FEATURES_WIFI",
    "type" : "int",
    "comment" : " Call was WIFI call. ",
    "links" : [ ]
  }, {
    "name" : "FEATURES_ASSISTED_DIALING_USED",
    "type" : "int",
    "comment" : "\n         * Indicates the call underwent Assisted Dialing.\n         * @see TelecomManager#EXTRA_USE_ASSISTED_DIALING\n         ",
    "links" : [ ]
  }, {
    "name" : "FEATURES_RTT",
    "type" : "int",
    "comment" : " Call was on RTT at some point ",
    "links" : [ ]
  }, {
    "name" : "FEATURES_VOLTE",
    "type" : "int",
    "comment" : " Call was VoLTE ",
    "links" : [ ]
  }, {
    "name" : "NUMBER",
    "type" : "String",
    "comment" : "\n         * The phone number as the user entered it.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "NUMBER_PRESENTATION",
    "type" : "String",
    "comment" : "\n         * The number presenting rules set by the network.\n         *\n         * <p>\n         * Allowed values:\n         * <ul>\n         * <li>{@link #PRESENTATION_ALLOWED}</li>\n         * <li>{@link #PRESENTATION_RESTRICTED}</li>\n         * <li>{@link #PRESENTATION_UNKNOWN}</li>\n         * <li>{@link #PRESENTATION_PAYPHONE}</li>\n         * </ul>\n         * </p>\n         *\n         * <P>Type: INTEGER</P>\n         ",
    "links" : [ "#PRESENTATION_PAYPHONE", "#PRESENTATION_UNKNOWN", "#PRESENTATION_RESTRICTED", "#PRESENTATION_ALLOWED" ]
  }, {
    "name" : "PRESENTATION_ALLOWED",
    "type" : "int",
    "comment" : " Number is allowed to display for caller id. ",
    "links" : [ ]
  }, {
    "name" : "PRESENTATION_RESTRICTED",
    "type" : "int",
    "comment" : " Number is blocked by user. ",
    "links" : [ ]
  }, {
    "name" : "PRESENTATION_UNKNOWN",
    "type" : "int",
    "comment" : " Number is not specified or unknown by network. ",
    "links" : [ ]
  }, {
    "name" : "PRESENTATION_PAYPHONE",
    "type" : "int",
    "comment" : " Number is a pay phone. ",
    "links" : [ ]
  }, {
    "name" : "COUNTRY_ISO",
    "type" : "String",
    "comment" : "\n         * The ISO 3166-1 two letters country code of the country where the\n         * user received or made the call.\n         * <P>\n         * Type: TEXT\n         * </P>\n         ",
    "links" : [ ]
  }, {
    "name" : "DATE",
    "type" : "String",
    "comment" : "\n         * The date the call occured, in milliseconds since the epoch\n         * <P>Type: INTEGER (long)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "DURATION",
    "type" : "String",
    "comment" : "\n         * The duration of the call in seconds\n         * <P>Type: INTEGER (long)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "DATA_USAGE",
    "type" : "String",
    "comment" : "\n         * The data usage of the call in bytes.\n         * <P>Type: INTEGER (long)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "NEW",
    "type" : "String",
    "comment" : "\n         * Whether or not the call has been acknowledged\n         * <P>Type: INTEGER (boolean)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_NAME",
    "type" : "String",
    "comment" : "\n         * The cached name associated with the phone number, if it exists.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_NUMBER_TYPE",
    "type" : "String",
    "comment" : "\n         * The cached number type (Home, Work, etc) associated with the\n         * phone number, if it exists.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: INTEGER</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_NUMBER_LABEL",
    "type" : "String",
    "comment" : "\n         * The cached number label, for a custom number type, associated with the\n         * phone number, if it exists.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "VOICEMAIL_URI",
    "type" : "String",
    "comment" : "\n         * URI of the voicemail entry. Populated only for {@link #VOICEMAIL_TYPE}.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ "#VOICEMAIL_TYPE" ]
  }, {
    "name" : "TRANSCRIPTION",
    "type" : "String",
    "comment" : "\n         * Transcription of the call or voicemail entry. This will only be populated for call log\n         * entries of type {@link #VOICEMAIL_TYPE} that have valid transcriptions.\n         ",
    "links" : [ "#VOICEMAIL_TYPE" ]
  }, {
    "name" : "TRANSCRIPTION_STATE",
    "type" : "String",
    "comment" : "\n         * State of voicemail transcription entry. This will only be populated for call log\n         * entries of type {@link #VOICEMAIL_TYPE}.\n         * @hide\n         ",
    "links" : [ "#VOICEMAIL_TYPE" ]
  }, {
    "name" : "IS_READ",
    "type" : "String",
    "comment" : "\n         * Whether this item has been read or otherwise consumed by the user.\n         * <p>\n         * Unlike the {@link #NEW} field, which requires the user to have acknowledged the\n         * existence of the entry, this implies the user has interacted with the entry.\n         * <P>Type: INTEGER (boolean)</P>\n         ",
    "links" : [ "#NEW" ]
  }, {
    "name" : "GEOCODED_LOCATION",
    "type" : "String",
    "comment" : "\n         * A geocoded location for the number associated with this call.\n         * <p>\n         * The string represents a city, state, or country associated with the number.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_LOOKUP_URI",
    "type" : "String",
    "comment" : "\n         * The cached URI to look up the contact associated with the phone number, if it exists.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_MATCHED_NUMBER",
    "type" : "String",
    "comment" : "\n         * The cached phone number of the contact which matches this entry, if it exists.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_NORMALIZED_NUMBER",
    "type" : "String",
    "comment" : "\n         * The cached normalized(E164) version of the phone number, if it exists.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_PHOTO_ID",
    "type" : "String",
    "comment" : "\n         * The cached photo id of the picture associated with the phone number, if it exists.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: INTEGER (long)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_PHOTO_URI",
    "type" : "String",
    "comment" : "\n         * The cached photo URI of the picture associated with the phone number, if it exists.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: TEXT (URI)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CACHED_FORMATTED_NUMBER",
    "type" : "String",
    "comment" : "\n         * The cached phone number, formatted with formatting rules based on the country the\n         * user was in when the call was made or received.\n         *\n         * <p>This value is typically filled in by the dialer app for the caching purpose,\n         * so it's not guaranteed to be present, and may not be current if the contact\n         * information associated with this number has changed.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "PHONE_ACCOUNT_COMPONENT_NAME",
    "type" : "String",
    "comment" : "\n         * The component name of the account used to place or receive the call; in string form.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "PHONE_ACCOUNT_ID",
    "type" : "String",
    "comment" : "\n         * The identifier for the account used to place or receive the call.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "PHONE_ACCOUNT_ADDRESS",
    "type" : "String",
    "comment" : "\n         * The address associated with the account used to place or receive the call; in string\n         * form. For SIM-based calls, this is the user's own phone number.\n         * <P>Type: TEXT</P>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "PHONE_ACCOUNT_HIDDEN",
    "type" : "String",
    "comment" : "\n         * Indicates that the entry will be hidden from all queries until the associated\n         * {@link android.telecom.PhoneAccount} is registered with the system.\n         * <P>Type: INTEGER</P>\n         *\n         * @hide\n         ",
    "links" : [ "android.telecom.PhoneAccount" ]
  }, {
    "name" : "SUB_ID",
    "type" : "String",
    "comment" : "\n         * The subscription ID used to place this call.  This is no longer used and has been\n         * replaced with PHONE_ACCOUNT_COMPONENT_NAME/PHONE_ACCOUNT_ID.\n         * For ContactsProvider internal use only.\n         * <P>Type: INTEGER</P>\n         *\n         * @Deprecated\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "POST_DIAL_DIGITS",
    "type" : "String",
    "comment" : "\n         * The post-dial portion of a dialed number, including any digits dialed after a\n         * {@link TelecomManager#DTMF_CHARACTER_PAUSE} or a {@link\n         * TelecomManager#DTMF_CHARACTER_WAIT} and these characters themselves.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ "android.telecom.TelecomManager#DTMF_CHARACTER_PAUSE", "android.telecom.TelecomManager#DTMF_CHARACTER_WAIT" ]
  }, {
    "name" : "VIA_NUMBER",
    "type" : "String",
    "comment" : "\n         * For an incoming call, the secondary line number the call was received via.\n         * When a SIM card has multiple phone numbers associated with it, the via number indicates\n         * which of the numbers associated with the SIM was called.\n         ",
    "links" : [ ]
  }, {
    "name" : "ADD_FOR_ALL_USERS",
    "type" : "String",
    "comment" : "\n         * Indicates that the entry will be copied from primary user to other users.\n         * <P>Type: INTEGER</P>\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "LAST_MODIFIED",
    "type" : "String",
    "comment" : "\n         * The date the row is last inserted, updated, or marked as deleted, in milliseconds\n         * since the epoch. Read only.\n         * <P>Type: INTEGER (long)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "MIN_DURATION_FOR_NORMALIZED_NUMBER_UPDATE_MS",
    "type" : "int",
    "comment" : "\n         * If a successful call is made that is longer than this duration, update the phone number\n         * in the ContactsProvider with the normalized version of the number, based on the user's\n         * current country code.\n         ",
    "links" : [ ]
  }, {
    "name" : "BLOCK_REASON_NOT_BLOCKED",
    "type" : "int",
    "comment" : "\n         * Value for {@link CallLog.Calls#BLOCK_REASON}, set as the default value when a call was\n         * not blocked by a CallScreeningService or any other system call blocking method.\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON" ]
  }, {
    "name" : "BLOCK_REASON_CALL_SCREENING_SERVICE",
    "type" : "int",
    "comment" : "\n         * Value for {@link CallLog.Calls#BLOCK_REASON}, set when {@link CallLog.Calls#TYPE} is\n         * {@link CallLog.Calls#BLOCKED_TYPE} to indicate that a call was blocked by a\n         * CallScreeningService. The {@link CallLog.Calls#CALL_SCREENING_COMPONENT_NAME} and\n         * {@link CallLog.Calls#CALL_SCREENING_APP_NAME} columns will indicate which call screening\n         * service was responsible for blocking the call.\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON", "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE", "CallLog.Calls#CALL_SCREENING_COMPONENT_NAME", "CallLog.Calls#CALL_SCREENING_APP_NAME" ]
  }, {
    "name" : "BLOCK_REASON_DIRECT_TO_VOICEMAIL",
    "type" : "int",
    "comment" : "\n         * Value for {@link CallLog.Calls#BLOCK_REASON}, set when {@link CallLog.Calls#TYPE} is\n         * {@link CallLog.Calls#BLOCKED_TYPE} to indicate that a call was blocked because the user\n         * configured a contact to be sent directly to voicemail.\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON", "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "BLOCK_REASON_BLOCKED_NUMBER",
    "type" : "int",
    "comment" : "\n         * Value for {@link CallLog.Calls#BLOCK_REASON}, set when {@link CallLog.Calls#TYPE} is\n         * {@link CallLog.Calls#BLOCKED_TYPE} to indicate that a call was blocked because it is\n         * in the BlockedNumbers provider.\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON", "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "BLOCK_REASON_UNKNOWN_NUMBER",
    "type" : "int",
    "comment" : "\n         * Value for {@link CallLog.Calls#BLOCK_REASON}, set when {@link CallLog.Calls#TYPE} is\n         * {@link CallLog.Calls#BLOCKED_TYPE} to indicate that a call was blocked because the user\n         * has chosen to block all calls from unknown numbers.\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON", "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "BLOCK_REASON_RESTRICTED_NUMBER",
    "type" : "int",
    "comment" : "\n         * Value for {@link CallLog.Calls#BLOCK_REASON}, set when {@link CallLog.Calls#TYPE} is\n         * {@link CallLog.Calls#BLOCKED_TYPE} to indicate that a call was blocked because the user\n         * has chosen to block all calls from restricted numbers.\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON", "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "BLOCK_REASON_PAY_PHONE",
    "type" : "int",
    "comment" : "\n         * Value for {@link CallLog.Calls#BLOCK_REASON}, set when {@link CallLog.Calls#TYPE} is\n         * {@link CallLog.Calls#BLOCKED_TYPE} to indicate that a call was blocked because the user\n         * has chosen to block all calls from pay phones.\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON", "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "BLOCK_REASON_NOT_IN_CONTACTS",
    "type" : "int",
    "comment" : "\n         * Value for {@link CallLog.Calls#BLOCK_REASON}, set when {@link CallLog.Calls#TYPE} is\n         * {@link CallLog.Calls#BLOCKED_TYPE} to indicate that a call was blocked because the user\n         * has chosen to block all calls from numbers not in their contacts.\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON", "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "CALL_SCREENING_COMPONENT_NAME",
    "type" : "String",
    "comment" : "\n         * The ComponentName of the CallScreeningService which blocked this call. Will be\n         * populated when the {@link CallLog.Calls#TYPE} is {@link CallLog.Calls#BLOCKED_TYPE}.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "CALL_SCREENING_APP_NAME",
    "type" : "String",
    "comment" : "\n         * The name of the app which blocked a call. Will be populated when the\n         * {@link CallLog.Calls#TYPE} is {@link CallLog.Calls#BLOCKED_TYPE}. Provided as a\n         * convenience so that the call log can still indicate which app blocked a call, even if\n         * that app is no longer installed.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ "CallLog.Calls#TYPE", "CallLog.Calls#BLOCKED_TYPE" ]
  }, {
    "name" : "BLOCK_REASON",
    "type" : "String",
    "comment" : "\n         * Where the {@link CallLog.Calls#TYPE} is {@link CallLog.Calls#BLOCKED_TYPE},\n         * indicates the reason why a call is blocked.\n         * <P>Type: INTEGER</P>\n         *\n         * <p>\n         * Allowed values:\n         * <ul>\n         * <li>{@link CallLog.Calls#BLOCK_REASON_NOT_BLOCKED}</li>\n         * <li>{@link CallLog.Calls#BLOCK_REASON_CALL_SCREENING_SERVICE}</li>\n         * <li>{@link CallLog.Calls#BLOCK_REASON_DIRECT_TO_VOICEMAIL}</li>\n         * <li>{@link CallLog.Calls#BLOCK_REASON_BLOCKED_NUMBER}</li>\n         * <li>{@link CallLog.Calls#BLOCK_REASON_UNKNOWN_NUMBER}</li>\n         * <li>{@link CallLog.Calls#BLOCK_REASON_RESTRICTED_NUMBER}</li>\n         * <li>{@link CallLog.Calls#BLOCK_REASON_PAY_PHONE}</li>\n         * <li>{@link CallLog.Calls#BLOCK_REASON_NOT_IN_CONTACTS}</li>\n         * </ul>\n         * </p>\n         ",
    "links" : [ "CallLog.Calls#BLOCK_REASON_BLOCKED_NUMBER", "CallLog.Calls#BLOCK_REASON_UNKNOWN_NUMBER", "CallLog.Calls#BLOCK_REASON_NOT_BLOCKED", "CallLog.Calls#BLOCK_REASON_DIRECT_TO_VOICEMAIL", "CallLog.Calls#TYPE", "CallLog.Calls#BLOCK_REASON_NOT_IN_CONTACTS", "CallLog.Calls#BLOCKED_TYPE", "CallLog.Calls#BLOCK_REASON_CALL_SCREENING_SERVICE", "CallLog.Calls#BLOCK_REASON_RESTRICTED_NUMBER", "CallLog.Calls#BLOCK_REASON_PAY_PHONE" ]
  } ],
  "methods" : [ {
    "name" : "public static Uri addCall(CallerInfo ci, Context context, String number, int presentation, int callType, int features, PhoneAccountHandle accountHandle, long start, int duration, Long dataUsage)",
    "returnType" : "Uri",
    "comment" : "\n         * Adds a call to the call log.\n         *\n         * @param ci the CallerInfo object to get the target contact from.  Can be null\n         * if the contact is unknown.\n         * @param context the context used to get the ContentResolver\n         * @param number the phone number to be added to the calls db\n         * @param presentation enum value from TelecomManager.PRESENTATION_xxx, which\n         *        is set by the network and denotes the number presenting rules for\n         *        \"allowed\", \"payphone\", \"restricted\" or \"unknown\"\n         * @param callType enumerated values for \"incoming\", \"outgoing\", or \"missed\"\n         * @param features features of the call (e.g. Video).\n         * @param accountHandle The accountHandle object identifying the provider of the call\n         * @param start time stamp for the call in milliseconds\n         * @param duration call duration in seconds\n         * @param dataUsage data usage for the call in bytes, null if data usage was not tracked for\n         *                  the call.\n         * @result The URI of the call log entry belonging to the user that made or received this\n         *        call.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri addCall(CallerInfo ci, Context context, String number, String postDialDigits, String viaNumber, int presentation, int callType, int features, PhoneAccountHandle accountHandle, long start, int duration, Long dataUsage, boolean addForAllUsers, UserHandle userToBeInsertedTo)",
    "returnType" : "Uri",
    "comment" : "\n         * Adds a call to the call log.\n         *\n         * @param ci the CallerInfo object to get the target contact from.  Can be null\n         * if the contact is unknown.\n         * @param context the context used to get the ContentResolver\n         * @param number the phone number to be added to the calls db\n         * @param viaNumber the secondary number that the incoming call received with. If the\n         *       call was received with the SIM assigned number, then this field must be ''.\n         * @param presentation enum value from TelecomManager.PRESENTATION_xxx, which\n         *        is set by the network and denotes the number presenting rules for\n         *        \"allowed\", \"payphone\", \"restricted\" or \"unknown\"\n         * @param callType enumerated values for \"incoming\", \"outgoing\", or \"missed\"\n         * @param features features of the call (e.g. Video).\n         * @param accountHandle The accountHandle object identifying the provider of the call\n         * @param start time stamp for the call in milliseconds\n         * @param duration call duration in seconds\n         * @param dataUsage data usage for the call in bytes, null if data usage was not tracked for\n         *                  the call.\n         * @param addForAllUsers If true, the call is added to the call log of all currently\n         *        running users. The caller must have the MANAGE_USERS permission if this is true.\n         * @param userToBeInsertedTo {@link UserHandle} of user that the call is going to be\n         *                           inserted to. null if it is inserted to the current user. The\n         *                           value is ignored if @{link addForAllUsers} is true.\n         * @result The URI of the call log entry belonging to the user that made or received this\n         *        call.\n         * {@hide}\n         ",
    "links" : [ "android.os.UserHandle" ]
  }, {
    "name" : "public static Uri addCall(CallerInfo ci, Context context, String number, String postDialDigits, String viaNumber, int presentation, int callType, int features, PhoneAccountHandle accountHandle, long start, int duration, Long dataUsage, boolean addForAllUsers, UserHandle userToBeInsertedTo, boolean isRead, int callBlockReason, CharSequence callScreeningAppName, String callScreeningComponentName)",
    "returnType" : "Uri",
    "comment" : "\n         * Adds a call to the call log.\n         *\n         * @param ci the CallerInfo object to get the target contact from.  Can be null\n         * if the contact is unknown.\n         * @param context the context used to get the ContentResolver\n         * @param number the phone number to be added to the calls db\n         * @param postDialDigits the post-dial digits that were dialed after the number,\n         *        if it was outgoing. Otherwise it is ''.\n         * @param viaNumber the secondary number that the incoming call received with. If the\n         *        call was received with the SIM assigned number, then this field must be ''.\n         * @param presentation enum value from TelecomManager.PRESENTATION_xxx, which\n         *        is set by the network and denotes the number presenting rules for\n         *        \"allowed\", \"payphone\", \"restricted\" or \"unknown\"\n         * @param callType enumerated values for \"incoming\", \"outgoing\", or \"missed\"\n         * @param features features of the call (e.g. Video).\n         * @param accountHandle The accountHandle object identifying the provider of the call\n         * @param start time stamp for the call in milliseconds\n         * @param duration call duration in seconds\n         * @param dataUsage data usage for the call in bytes, null if data usage was not tracked for\n         *                  the call.\n         * @param addForAllUsers If true, the call is added to the call log of all currently\n         *        running users. The caller must have the MANAGE_USERS permission if this is true.\n         * @param userToBeInsertedTo {@link UserHandle} of user that the call is going to be\n         *                           inserted to. null if it is inserted to the current user. The\n         *                           value is ignored if @{link addForAllUsers} is true.\n         * @param isRead Flag to show if the missed call log has been read by the user or not.\n         *                Used for call log restore of missed calls.\n         * @param callBlockReason The reason why the call is blocked.\n         * @param callScreeningAppName The call screening application name which block the call.\n         * @param callScreeningComponentName The call screening component name which block the call.\n         *\n         * @result The URI of the call log entry belonging to the user that made or received this\n         *        call.  This could be of the shadow provider.  Do not return it to non-system apps,\n         *        as they don't have permissions.\n         * {@hide}\n         ",
    "links" : [ "android.os.UserHandle" ]
  }, {
    "name" : "private static String charSequenceToString(CharSequence sequence)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldHaveSharedCallLogEntries(Context context, UserManager userManager, int userId)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static String getLastOutgoingCall(Context context)",
    "returnType" : "String",
    "comment" : "\n         * Query the call log database for the last dialed number.\n         * @param context Used to get the content resolver.\n         * @return The last phone number dialed (outgoing) or an empty\n         * string if none exist yet.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static Uri addEntryAndRemoveExpiredEntries(Context context, UserManager userManager, UserHandle user, ContentValues values)",
    "returnType" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void updateDataUsageStatForData(ContentResolver resolver, String dataId)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void updateNormalizedNumber(Context context, ContentResolver resolver, String dataId, String number)",
    "returnType" : "void",
    "comment" : "\n         * Update the normalized phone number for the given dataId in the ContactsProvider, based\n         * on the user's current country.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static int getLogNumberPresentation(String number, int presentation)",
    "returnType" : "int",
    "comment" : "\n         * Remap network specified number presentation types\n         * TelecomManager.PRESENTATION_xxx to calllog number presentation types\n         * Calls.PRESENTATION_xxx, in order to insulate the persistent calllog\n         * from any future radio changes.\n         * If the number field is empty set the presentation type to Unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static String getLogAccountAddress(Context context, PhoneAccountHandle accountHandle)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String getCurrentCountryIso(Context context)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "CONTENT_URI", "SHADOW_CONTENT_URI", "CONTENT_FILTER_URI", "LIMIT_PARAM_KEY", "OFFSET_PARAM_KEY", "ALLOW_VOICEMAILS_PARAM_KEY", "EXTRA_CALL_TYPE_FILTER", "CONTENT_URI_WITH_VOICEMAIL", "DEFAULT_SORT_ORDER", "CONTENT_TYPE", "CONTENT_ITEM_TYPE", "TYPE", "INCOMING_TYPE", "OUTGOING_TYPE", "MISSED_TYPE", "VOICEMAIL_TYPE", "REJECTED_TYPE", "BLOCKED_TYPE", "ANSWERED_EXTERNALLY_TYPE", "FEATURES", "FEATURES_VIDEO", "FEATURES_PULLED_EXTERNALLY", "FEATURES_HD_CALL", "FEATURES_WIFI", "FEATURES_ASSISTED_DIALING_USED", "FEATURES_RTT", "FEATURES_VOLTE", "NUMBER", "NUMBER_PRESENTATION", "PRESENTATION_ALLOWED", "PRESENTATION_RESTRICTED", "PRESENTATION_UNKNOWN", "PRESENTATION_PAYPHONE", "COUNTRY_ISO", "DATE", "DURATION", "DATA_USAGE", "NEW", "CACHED_NAME", "CACHED_NUMBER_TYPE", "CACHED_NUMBER_LABEL", "VOICEMAIL_URI", "TRANSCRIPTION", "TRANSCRIPTION_STATE", "IS_READ", "GEOCODED_LOCATION", "CACHED_LOOKUP_URI", "CACHED_MATCHED_NUMBER", "CACHED_NORMALIZED_NUMBER", "CACHED_PHOTO_ID", "CACHED_PHOTO_URI", "CACHED_FORMATTED_NUMBER", "PHONE_ACCOUNT_COMPONENT_NAME", "PHONE_ACCOUNT_ID", "PHONE_ACCOUNT_ADDRESS", "PHONE_ACCOUNT_HIDDEN", "SUB_ID", "POST_DIAL_DIGITS", "VIA_NUMBER", "ADD_FOR_ALL_USERS", "LAST_MODIFIED", "MIN_DURATION_FOR_NORMALIZED_NUMBER_UPDATE_MS", "BLOCK_REASON_NOT_BLOCKED", "BLOCK_REASON_CALL_SCREENING_SERVICE", "BLOCK_REASON_DIRECT_TO_VOICEMAIL", "BLOCK_REASON_BLOCKED_NUMBER", "BLOCK_REASON_UNKNOWN_NUMBER", "BLOCK_REASON_RESTRICTED_NUMBER", "BLOCK_REASON_PAY_PHONE", "BLOCK_REASON_NOT_IN_CONTACTS", "CALL_SCREENING_COMPONENT_NAME", "CALL_SCREENING_APP_NAME", "BLOCK_REASON" ],
  "methodNames" : [ "public static Uri addCall(CallerInfo ci, Context context, String number, int presentation, int callType, int features, PhoneAccountHandle accountHandle, long start, int duration, Long dataUsage)", "public static Uri addCall(CallerInfo ci, Context context, String number, String postDialDigits, String viaNumber, int presentation, int callType, int features, PhoneAccountHandle accountHandle, long start, int duration, Long dataUsage, boolean addForAllUsers, UserHandle userToBeInsertedTo)", "public static Uri addCall(CallerInfo ci, Context context, String number, String postDialDigits, String viaNumber, int presentation, int callType, int features, PhoneAccountHandle accountHandle, long start, int duration, Long dataUsage, boolean addForAllUsers, UserHandle userToBeInsertedTo, boolean isRead, int callBlockReason, CharSequence callScreeningAppName, String callScreeningComponentName)", "private static String charSequenceToString(CharSequence sequence)", "public static boolean shouldHaveSharedCallLogEntries(Context context, UserManager userManager, int userId)", "public static String getLastOutgoingCall(Context context)", "private static Uri addEntryAndRemoveExpiredEntries(Context context, UserManager userManager, UserHandle user, ContentValues values)", "private static void updateDataUsageStatForData(ContentResolver resolver, String dataId)", "private static void updateNormalizedNumber(Context context, ContentResolver resolver, String dataId, String number)", "private static int getLogNumberPresentation(String number, int presentation)", "private static String getLogAccountAddress(Context context, PhoneAccountHandle accountHandle)", "private static String getCurrentCountryIso(Context context)" ]
}