{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/IslamicCalendar.java",
  "packageName" : "android.icu.util",
  "className" : "Algorithm",
  "comment" : " Private interface for different Islamic calendar algorithms.",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public boolean isCivil()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns <code>true</code> if this object is using the fixed-cycle civil\n         * calendar, or <code>false</code> if using the religious, astronomical\n         * calendar.\n         ",
    "links" : [ ]
  }, {
    "name" : "public CalculationType getType()",
    "returnType" : "CalculationType",
    "comment" : "\n         * Return the type the algorithm implement.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long epoch()",
    "returnType" : "long",
    "comment" : "\n         * Return the epoch used by this algorithm.\n         ",
    "links" : [ ]
  }, {
    "name" : "public long yearStart(int year)",
    "returnType" : "long",
    "comment" : "\n         * Return the day # on which the given year starts. Days are counted\n         * from the Hijri epoch, origin 0.\n         *\n         * @param year  The hijri year\n         ",
    "links" : [ ]
  }, {
    "name" : "public long monthStart(int year, int month)",
    "returnType" : "long",
    "comment" : "\n         * Return the day # on which the given month starts. Days are counted\n         * from the Hijri epoch, origin 0.\n         *\n         * @param year  The hijri year\n         * @param month  The hijri month, 0-based\n         ",
    "links" : [ ]
  }, {
    "name" : "public int monthLength(int year, int month)",
    "returnType" : "int",
    "comment" : "\n         * Return the length (in days) of the given month.\n         *\n         * @param year  The hijri year\n         * @param month The hijri month, 0-based\n         ",
    "links" : [ ]
  }, {
    "name" : "public int yearLength(int year)",
    "returnType" : "int",
    "comment" : "\n         * Return the length (in days) of the given year.\n         *\n         * @param year  The hijri year\n         ",
    "links" : [ ]
  }, {
    "name" : "public void compute(long julianDays, long current, IntConsumer yearConsumer, IntConsumer monthConsumer, IntConsumer dayOfMonthConsumer, IntConsumer dayOfYearConsumer)",
    "returnType" : "void",
    "comment" : "\n         * Compute the year, month, dayOfMonth, and dayOfYear of the given julian days\n         * and current time and feed the caculuated results to the consumers.\n         * @param julianDays\n         * @param current the time in millisecond.\n         * @param yearConsumer consumer to take the year result.\n         * @param monthConsumer consumer to take the month result.\n         * @param dayOfMonthConsumer consumer to take the dayOfMonth result.\n         * @param dayOfYearConsumer consumer to take the dayOfYear result.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isCivil()", "public CalculationType getType()", "public long epoch()", "public long yearStart(int year)", "public long monthStart(int year, int month)", "public int monthLength(int year, int month)", "public int yearLength(int year)", "public void compute(long julianDays, long current, IntConsumer yearConsumer, IntConsumer monthConsumer, IntConsumer dayOfMonthConsumer, IntConsumer dayOfYearConsumer)" ],
  "variableNames" : [ ]
}