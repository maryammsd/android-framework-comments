{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/smartspace/SmartspaceSession.java",
  "packageName" : "android.app.smartspace",
  "className" : "SmartspaceSession",
  "comment" : "\n * Client API to share information about the Smartspace UI state and execute query.\n *\n * <p>\n * Usage: <pre> {@code\n *\n * class MyActivity {\n *    private SmartspaceSession mSmartspaceSession;\n *\n *    void onCreate() {\n *         mSmartspaceSession = mSmartspaceManager.createSmartspaceSession(smartspaceConfig)\n *         mSmartspaceSession.registerSmartspaceUpdates(...)\n *    }\n *\n *    void onStart() {\n *        mSmartspaceSession.requestSmartspaceUpdate()\n *    }\n *\n *    void onTouch(...) OR\n *    void onStateTransitionStarted(...) OR\n *    void onResume(...) OR\n *    void onStop(...) {\n *        mSmartspaceSession.notifyEvent(event);\n *    }\n *\n *    void onDestroy() {\n *        mSmartspaceSession.unregisterPredictionUpdates()\n *        mSmartspaceSession.close();\n *    }\n *\n * }</pre>\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInterface",
    "type" : "android.app.smartspace.ISmartspaceManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCloseGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsClosed",
    "type" : "AtomicBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionId",
    "type" : "SmartspaceSessionId",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRegisteredCallbacks",
    "type" : "ArrayMap<OnTargetsAvailableListener, CallbackWrapper>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void notifySmartspaceEvent(@NonNull SmartspaceTargetEvent event)",
    "returnType" : "void",
    "comment" : "\n     * Notifies the Smartspace service of a Smartspace target event.\n     *\n     * @param event The {@link SmartspaceTargetEvent} that represents the Smartspace target event.\n     ",
    "links" : [ "android.app.smartspace.SmartspaceTargetEvent" ]
  }, {
    "name" : "public void requestSmartspaceUpdate()",
    "returnType" : "void",
    "comment" : "\n     * Requests the smartspace service for an update.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addOnTargetsAvailableListener(@NonNull @CallbackExecutor Executor listenerExecutor, @NonNull OnTargetsAvailableListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Requests the smartspace service provide continuous updates of smartspace cards via the\n     * provided callback, until the given callback is unregistered.\n     *\n     * @param listenerExecutor The listener executor to use when firing the listener.\n     * @param listener         The listener to be called when updates of Smartspace targets are\n     *                         available.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeOnTargetsAvailableListener(@NonNull OnTargetsAvailableListener listener)",
    "returnType" : "void",
    "comment" : "\n     * Requests the smartspace service to stop providing continuous updates to the provided\n     * callback until the callback is re-registered.\n     *\n     * @param listener The callback to be unregistered.\n     * @see {@link SmartspaceSession#addOnTargetsAvailableListener(Executor,\n     * OnTargetsAvailableListener)}.\n     ",
    "links" : [ "android.app.smartspace.SmartspaceSession#addOnTargetsAvailableListener(Executor" ]
  }, {
    "name" : "private void destroy()",
    "returnType" : "void",
    "comment" : "\n     * Destroys the client and unregisters the callback. Any method on this class after this call\n     * will throw {@link IllegalStateException}.\n     ",
    "links" : [ "IllegalStateException" ]
  }, {
    "name" : "protected void finalize()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static IBinder getToken()",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void notifySmartspaceEvent(@NonNull SmartspaceTargetEvent event)", "public void requestSmartspaceUpdate()", "public void addOnTargetsAvailableListener(@NonNull @CallbackExecutor Executor listenerExecutor, @NonNull OnTargetsAvailableListener listener)", "public void removeOnTargetsAvailableListener(@NonNull OnTargetsAvailableListener listener)", "private void destroy()", "protected void finalize()", "public void close()", "private static IBinder getToken()" ],
  "variableNames" : [ "TAG", "DEBUG", "mInterface", "mCloseGuard", "mIsClosed", "mSessionId", "mRegisteredCallbacks" ]
}