{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/accessibility/CaptioningManager.java",
  "packageName" : "android.view.accessibility",
  "className" : "CaptionStyle",
  "comment" : "\n     * Specifies visual properties for video captions, including foreground and\n     * background colors, edge properties, and typeface.\n     ",
  "variables" : [ {
    "name" : "COLOR_NONE_OPAQUE",
    "type" : "int",
    "comment" : "\n         * Packed value for a color of 'none' and a cached opacity of 100%.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "COLOR_UNSPECIFIED",
    "type" : "int",
    "comment" : "\n         * Packed value for a color of 'default' and opacity of 100%.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WHITE_ON_BLACK",
    "type" : "CaptionStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BLACK_ON_WHITE",
    "type" : "CaptionStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "YELLOW_ON_BLACK",
    "type" : "CaptionStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "YELLOW_ON_BLUE",
    "type" : "CaptionStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_CUSTOM",
    "type" : "CaptionStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "UNSPECIFIED",
    "type" : "CaptionStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT",
    "type" : "CaptionStyle",
    "comment" : " The default caption style used to fill in unspecified values. @hide ",
    "links" : [ ]
  }, {
    "name" : "PRESETS",
    "type" : "CaptionStyle[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "PRESET_CUSTOM",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "EDGE_TYPE_UNSPECIFIED",
    "type" : "int",
    "comment" : " Unspecified edge type value. ",
    "links" : [ ]
  }, {
    "name" : "EDGE_TYPE_NONE",
    "type" : "int",
    "comment" : " Edge type value specifying no character edges. ",
    "links" : [ ]
  }, {
    "name" : "EDGE_TYPE_OUTLINE",
    "type" : "int",
    "comment" : " Edge type value specifying uniformly outlined character edges. ",
    "links" : [ ]
  }, {
    "name" : "EDGE_TYPE_DROP_SHADOW",
    "type" : "int",
    "comment" : " Edge type value specifying drop-shadowed character edges. ",
    "links" : [ ]
  }, {
    "name" : "EDGE_TYPE_RAISED",
    "type" : "int",
    "comment" : " Edge type value specifying raised bevel character edges. ",
    "links" : [ ]
  }, {
    "name" : "EDGE_TYPE_DEPRESSED",
    "type" : "int",
    "comment" : " Edge type value specifying depressed bevel character edges. ",
    "links" : [ ]
  }, {
    "name" : "foregroundColor",
    "type" : "int",
    "comment" : " The preferred foreground color for video captions. ",
    "links" : [ ]
  }, {
    "name" : "backgroundColor",
    "type" : "int",
    "comment" : " The preferred background color for video captions. ",
    "links" : [ ]
  }, {
    "name" : "edgeType",
    "type" : "int",
    "comment" : "\n         * The preferred edge type for video captions, one of:\n         * <ul>\n         * <li>{@link #EDGE_TYPE_UNSPECIFIED}\n         * <li>{@link #EDGE_TYPE_NONE}\n         * <li>{@link #EDGE_TYPE_OUTLINE}\n         * <li>{@link #EDGE_TYPE_DROP_SHADOW}\n         * <li>{@link #EDGE_TYPE_RAISED}\n         * <li>{@link #EDGE_TYPE_DEPRESSED}\n         * </ul>\n         ",
    "links" : [ "#EDGE_TYPE_UNSPECIFIED", "#EDGE_TYPE_RAISED", "#EDGE_TYPE_NONE", "#EDGE_TYPE_OUTLINE", "#EDGE_TYPE_DROP_SHADOW", "#EDGE_TYPE_DEPRESSED" ]
  }, {
    "name" : "edgeColor",
    "type" : "int",
    "comment" : "\n         * The preferred edge color for video captions, if using an edge type\n         * other than {@link #EDGE_TYPE_NONE}.\n         ",
    "links" : [ "#EDGE_TYPE_NONE" ]
  }, {
    "name" : "windowColor",
    "type" : "int",
    "comment" : " The preferred window color for video captions. ",
    "links" : [ ]
  }, {
    "name" : "mRawTypeface",
    "type" : "String",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "mHasForegroundColor",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasBackgroundColor",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasEdgeType",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasEdgeColor",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasWindowColor",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParsedTypeface",
    "type" : "Typeface",
    "comment" : " Lazily-created typeface based on the raw typeface string. ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean hasColor(int packedColor)",
    "returnType" : "boolean",
    "comment" : "\n         * Returns whether a packed color indicates a non-default value.\n         *\n         * @param packedColor the packed color value\n         * @return {@code true} if a non-default value is specified\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public CaptionStyle applyStyle(@NonNull CaptionStyle overlay)",
    "returnType" : "CaptionStyle",
    "comment" : "\n         * Applies a caption style, overriding any properties that are specified\n         * in the overlay caption.\n         *\n         * @param overlay The style to apply\n         * @return A caption style with the overlay style applied\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasBackgroundColor()",
    "returnType" : "boolean",
    "comment" : "\n         * @return {@code true} if the user has specified a background color\n         *         that should override the application default, {@code false}\n         *         otherwise\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasForegroundColor()",
    "returnType" : "boolean",
    "comment" : "\n         * @return {@code true} if the user has specified a foreground color\n         *         that should override the application default, {@code false}\n         *         otherwise\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasEdgeType()",
    "returnType" : "boolean",
    "comment" : "\n         * @return {@code true} if the user has specified an edge type that\n         *         should override the application default, {@code false}\n         *         otherwise\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasEdgeColor()",
    "returnType" : "boolean",
    "comment" : "\n         * @return {@code true} if the user has specified an edge color that\n         *         should override the application default, {@code false}\n         *         otherwise\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasWindowColor()",
    "returnType" : "boolean",
    "comment" : "\n         * @return {@code true} if the user has specified a window color that\n         *         should override the application default, {@code false}\n         *         otherwise\n         ",
    "links" : [ ]
  }, {
    "name" : "public Typeface getTypeface()",
    "returnType" : "Typeface",
    "comment" : "\n         * @return the preferred {@link Typeface} for video captions, or null if\n         *         not specified\n         ",
    "links" : [ "android.graphics.Typeface" ]
  }, {
    "name" : "public static CaptionStyle getCustomStyle(ContentResolver cr)",
    "returnType" : "CaptionStyle",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "COLOR_NONE_OPAQUE", "COLOR_UNSPECIFIED", "WHITE_ON_BLACK", "BLACK_ON_WHITE", "YELLOW_ON_BLACK", "YELLOW_ON_BLUE", "DEFAULT_CUSTOM", "UNSPECIFIED", "DEFAULT", "PRESETS", "PRESET_CUSTOM", "EDGE_TYPE_UNSPECIFIED", "EDGE_TYPE_NONE", "EDGE_TYPE_OUTLINE", "EDGE_TYPE_DROP_SHADOW", "EDGE_TYPE_RAISED", "EDGE_TYPE_DEPRESSED", "foregroundColor", "backgroundColor", "edgeType", "edgeColor", "windowColor", "mRawTypeface", "mHasForegroundColor", "mHasBackgroundColor", "mHasEdgeType", "mHasEdgeColor", "mHasWindowColor", "mParsedTypeface" ],
  "methodNames" : [ "public static boolean hasColor(int packedColor)", "public CaptionStyle applyStyle(@NonNull CaptionStyle overlay)", "public boolean hasBackgroundColor()", "public boolean hasForegroundColor()", "public boolean hasEdgeType()", "public boolean hasEdgeColor()", "public boolean hasWindowColor()", "public Typeface getTypeface()", "public static CaptionStyle getCustomStyle(ContentResolver cr)" ]
}