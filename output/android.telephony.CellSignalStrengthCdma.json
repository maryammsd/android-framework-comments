{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/CellSignalStrengthCdma.java",
  "packageName" : "android.telephony",
  "className" : "CellSignalStrengthCdma",
  "comment" : "\n * Signal strength related information.\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCdmaDbm",
    "type" : "int",
    "comment" : " This value is the RSSI value",
    "links" : [ ]
  }, {
    "name" : "mCdmaEcio",
    "type" : "int",
    "comment" : " This value is the Ec/Io",
    "links" : [ ]
  }, {
    "name" : "mEvdoDbm",
    "type" : "int",
    "comment" : " This value is the EVDO RSSI value",
    "links" : [ ]
  }, {
    "name" : "mEvdoEcio",
    "type" : "int",
    "comment" : " This value is the EVDO Ec/Io",
    "links" : [ ]
  }, {
    "name" : "mEvdoSnr",
    "type" : "int",
    "comment" : " Valid values are 0-8.  8 is the highest signal to noise ratio",
    "links" : [ ]
  }, {
    "name" : "mLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sInvalid",
    "type" : "CellSignalStrengthCdma",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<CellSignalStrengthCdma>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void copyFrom(CellSignalStrengthCdma s)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public CellSignalStrengthCdma copy()",
    "returnType" : "CellSignalStrengthCdma",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void setDefaultValues()",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getLevel()",
    "returnType" : "int",
    "comment" : " {@inheritDoc} ",
    "links" : [ ]
  }, {
    "name" : "public void updateLevel(PersistableBundle cc, ServiceState ss)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the 1xRTT Level in (Android) ASU.\n     *\n     * There is no standard definition of ASU for CDMA; however, Android defines it as the\n     * the lesser of the following two results (for 1xRTT):\n     * <table>\n     *     <thead><tr><th>RSSI Range (dBm)</th><th>ASU Value</th></tr><thead>\n     *     <tbody>\n     *         <tr><td>-75..</td><td>16</td></tr>\n     *         <tr><td>-82..-76</td><td>8</td></tr>\n     *         <tr><td>-90..-83</td><td>4</td></tr>\n     *         <tr><td>-95..-91</td><td>2</td></tr>\n     *         <tr><td>-100..-96</td><td>1</td></tr>\n     *         <tr><td>..-101</td><td>99</td></tr>\n     *     </tbody>\n     * </table>\n     * <table>\n     *     <thead><tr><th>Ec/Io Range (dB)</th><th>ASU Value</th></tr><thead>\n     *     <tbody>\n     *         <tr><td>-90..</td><td>16</td></tr>\n     *         <tr><td>-100..-91</td><td>8</td></tr>\n     *         <tr><td>-115..-101</td><td>4</td></tr>\n     *         <tr><td>-130..-116</td><td>2</td></tr>\n     *         <tr><td>--150..-131</td><td>1</td></tr>\n     *         <tr><td>..-151</td><td>99</td></tr>\n     *     </tbody>\n     * </table>\n     * @return 1xRTT Level in Android ASU {1,2,4,8,16,99}\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCdmaLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get cdma as level 0..4\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEvdoLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get Evdo as level 0..4\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEvdoAsuLevel()",
    "returnType" : "int",
    "comment" : "\n     * Get the EVDO Level in (Android) ASU.\n     *\n     * There is no standard definition of ASU for CDMA; however, Android defines it as the\n     * the lesser of the following two results (for EVDO):\n     * <table>\n     *     <thead><tr><th>RSSI Range (dBm)</th><th>ASU Value</th></tr><thead>\n     *     <tbody>\n     *         <tr><td>-65..</td><td>16</td></tr>\n     *         <tr><td>-75..-66</td><td>8</td></tr>\n     *         <tr><td>-85..-76</td><td>4</td></tr>\n     *         <tr><td>-95..-86</td><td>2</td></tr>\n     *         <tr><td>-105..-96</td><td>1</td></tr>\n     *         <tr><td>..-106</td><td>99</td></tr>\n     *     </tbody>\n     * </table>\n     * <table>\n     *     <thead><tr><th>SNR Range (unitless)</th><th>ASU Value</th></tr><thead>\n     *     <tbody>\n     *         <tr><td>7..</td><td>16</td></tr>\n     *         <tr><td>6</td><td>8</td></tr>\n     *         <tr><td>5</td><td>4</td></tr>\n     *         <tr><td>3..4</td><td>2</td></tr>\n     *         <tr><td>1..2</td><td>1</td></tr>\n     *         <tr><td>0</td><td>99</td></tr>\n     *     </tbody>\n     * </table>\n     *\n     * @return EVDO Level in Android ASU {1,2,4,8,16,99}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the signal strength as dBm\n     *\n     * @return min(CDMA RSSI, EVDO RSSI) of the measured cell.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getCdmaDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the CDMA RSSI value in dBm\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setCdmaDbm(int cdmaDbm)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getCdmaEcio()",
    "returnType" : "int",
    "comment" : "\n     * Get the CDMA Ec/Io value in dB*10\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setCdmaEcio(int cdmaEcio)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getEvdoDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the EVDO RSSI value in dBm\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setEvdoDbm(int evdoDbm)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getEvdoEcio()",
    "returnType" : "int",
    "comment" : "\n     * Get the EVDO Ec/Io value in dB*10\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setEvdoEcio(int evdoEcio)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getEvdoSnr()",
    "returnType" : "int",
    "comment" : "\n     * Get the signal to noise ratio. Valid values are 0-8. 8 is the highest.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setEvdoSnr(int evdoSnr)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isValid()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * @return string representation.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "private static void log(String s)",
    "returnType" : "void",
    "comment" : "\n     * log\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "DBG", "mCdmaDbm", "mCdmaEcio", "mEvdoDbm", "mEvdoEcio", "mEvdoSnr", "mLevel", "sInvalid", "CREATOR" ],
  "methodNames" : [ "protected void copyFrom(CellSignalStrengthCdma s)", "public CellSignalStrengthCdma copy()", "public void setDefaultValues()", "public int getLevel()", "public void updateLevel(PersistableBundle cc, ServiceState ss)", "public int getAsuLevel()", "public int getCdmaLevel()", "public int getEvdoLevel()", "public int getEvdoAsuLevel()", "public int getDbm()", "public int getCdmaDbm()", "public void setCdmaDbm(int cdmaDbm)", "public int getCdmaEcio()", "public void setCdmaEcio(int cdmaEcio)", "public int getEvdoDbm()", "public void setEvdoDbm(int evdoDbm)", "public int getEvdoEcio()", "public void setEvdoEcio(int evdoEcio)", "public int getEvdoSnr()", "public void setEvdoSnr(int evdoSnr)", "public int hashCode()", "public boolean isValid()", "public boolean equals(Object o)", "public String toString()", "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()", "private static void log(String s)" ]
}