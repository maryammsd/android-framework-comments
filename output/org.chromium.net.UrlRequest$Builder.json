{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/UrlRequest.java",
  "packageName" : "org.chromium.net",
  "className" : "Builder",
  "comment" : "\n     * Builder for {@link UrlRequest}s. Allows configuring requests before constructing them with\n     * {@link Builder#build}. The builder can be created by calling {@link\n     * CronetEngine#newUrlRequestBuilder}.\n     ",
  "links" : [ "org.chromium.net.CronetEngine#newUrlRequestBuilder", "org.chromium.net.UrlRequest", "#build" ],
  "variables" : [ {
    "name" : "REQUEST_PRIORITY_IDLE",
    "type" : "int",
    "comment" : " Lowest request priority. Passed to {@link #setPriority}. ",
    "links" : [ "#setPriority" ]
  }, {
    "name" : "REQUEST_PRIORITY_LOWEST",
    "type" : "int",
    "comment" : " Very low request priority. Passed to {@link #setPriority}. ",
    "links" : [ "#setPriority" ]
  }, {
    "name" : "REQUEST_PRIORITY_LOW",
    "type" : "int",
    "comment" : " Low request priority. Passed to {@link #setPriority}. ",
    "links" : [ "#setPriority" ]
  }, {
    "name" : "REQUEST_PRIORITY_MEDIUM",
    "type" : "int",
    "comment" : "\n         * Medium request priority. Passed to {@link #setPriority}. This is the default priority\n         * given to the request.\n         ",
    "links" : [ "#setPriority" ]
  }, {
    "name" : "REQUEST_PRIORITY_HIGHEST",
    "type" : "int",
    "comment" : " Highest request priority. Passed to {@link #setPriority}. ",
    "links" : [ "#setPriority" ]
  } ],
  "methods" : [ {
    "name" : "public abstract Builder setHttpMethod(String method)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the HTTP method verb to use for this request.\n         *\n         * <p>The default when this method is not called is \"GET\" if the request has\n         * no body or \"POST\" if it does.\n         *\n         * @param method \"GET\", \"HEAD\", \"DELETE\", \"POST\" or \"PUT\".\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Builder addHeader(String header, String value)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a request header.\n         *\n         * @param header header name.\n         * @param value header value.\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Builder disableCache()",
    "returnType" : "Builder",
    "comment" : "\n         * Disables cache for the request. If context is not set up to use cache, this call has no\n         * effect.\n         *\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Builder setPriority(int priority)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets priority of the request which should be one of the {@link #REQUEST_PRIORITY_IDLE\n         * REQUEST_PRIORITY_*} values. The request is given {@link #REQUEST_PRIORITY_MEDIUM}\n         * priority if this method is not called.\n         *\n         * @param priority priority of the request which should be one of the {@link\n         * #REQUEST_PRIORITY_IDLE REQUEST_PRIORITY_*} values.\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ "#REQUEST_PRIORITY_MEDIUM", "#REQUEST_PRIORITY_IDLEREQUEST_PRIORITY_", "#REQUEST_PRIORITY_IDLE" ]
  }, {
    "name" : "public abstract Builder setUploadDataProvider(UploadDataProvider uploadDataProvider, Executor executor)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets upload data provider. Switches method to \"POST\" if not explicitly set. Starting the\n         * request will throw an exception if a Content-Type header is not set.\n         *\n         * @param uploadDataProvider responsible for providing the upload data.\n         * @param executor All {@code uploadDataProvider} methods will be invoked using this {@code\n         * Executor}. May optionally be the same {@code Executor} the request itself is using.\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract Builder allowDirectExecutor()",
    "returnType" : "Builder",
    "comment" : "\n         * Marks that the executors this request will use to notify callbacks (for {@code\n         * UploadDataProvider}s and {@code UrlRequest.Callback}s) is intentionally performing inline\n         * execution, like Guava's directExecutor or {@link\n         * java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy}.\n         *\n         * <p><b>Warning:</b> This option makes it easy to accidentally block the network thread.\n         * It should not be used if your callbacks perform disk I/O, acquire locks, or call into\n         * other code you don't carefully control and audit.\n         ",
    "links" : [ "java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy" ]
  }, {
    "name" : "public Builder addRequestAnnotation(Object annotation)",
    "returnType" : "Builder",
    "comment" : "\n         * Associates the annotation object with this request. May add more than one. Passed through\n         * to a {@link RequestFinishedInfo.Listener}, see {@link\n         * RequestFinishedInfo#getAnnotations}.\n         *\n         * @param annotation an object to pass on to the {@link RequestFinishedInfo.Listener} with a\n         * {@link RequestFinishedInfo}.\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ "org.chromium.net.RequestFinishedInfo", "RequestFinishedInfo.Listener", "org.chromium.net.RequestFinishedInfo#getAnnotations" ]
  }, {
    "name" : "public Builder bindToNetwork(long networkHandle)",
    "returnType" : "Builder",
    "comment" : "\n         * Binds the request to the specified network handle. Cronet will send this request only\n         * using the network associated to this handle. If this network disconnects the request will\n         * fail, the exact error will depend on the stage of request processing when the network\n         * disconnects. Network handles can be obtained through {@code Network#getNetworkHandle}.\n         * Only available starting from Android Marshmallow.\n         *\n         * @param networkHandle the network handle to bind the request to. Specify {@link\n         * CronetEngine#UNBIND_NETWORK_HANDLE} to unbind.\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ "org.chromium.net.CronetEngine#UNBIND_NETWORK_HANDLE" ]
  }, {
    "name" : "public Builder setTrafficStatsTag(int tag)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets {@link android.net.TrafficStats} tag to use when accounting socket traffic caused by\n         * this request. See {@link android.net.TrafficStats} for more information. If no tag is set\n         * (e.g. this method isn't called), then Android accounts for the socket traffic caused by\n         * this request as if the tag value were set to 0. <p> <b>NOTE:</b>Setting a tag disallows\n         * sharing of sockets with requests with other tags, which may adversely effect performance\n         * by prohibiting connection sharing. In other words use of multiplexed sockets (e.g. HTTP/2\n         * and QUIC) will only be allowed if all requests have the same socket tag.\n         *\n         * @param tag the tag value used to when accounting for socket traffic caused by this\n         *         request.\n         * Tags between 0xFFFFFF00 and 0xFFFFFFFF are reserved and used internally by system\n         * services like {@link android.app.DownloadManager} when performing traffic on behalf of an\n         * application.\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ "android.app.DownloadManager", "android.net.TrafficStats" ]
  }, {
    "name" : "public Builder setTrafficStatsUid(int uid)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets specific UID to use when accounting socket traffic caused by this request. See\n         * {@link android.net.TrafficStats} for more information. Designed for use when performing\n         * an operation on behalf of another application. Caller must hold {@code\n         * MODIFY_NETWORK_ACCOUNTING} permission. By default traffic is attributed to UID of caller.\n         *\n         * <p><b>NOTE:</b>Setting a UID disallows sharing of sockets with requests with other UIDs,\n         * which may adversely effect performance by prohibiting connection sharing. In other words\n         * use of multiplexed sockets (e.g. HTTP/2 and QUIC) will only be allowed if all requests\n         * have the same UID set.\n         *\n         * @param uid the UID to attribute socket traffic caused by this request.\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ "android.net.TrafficStats" ]
  }, {
    "name" : "public Builder setRequestFinishedListener(RequestFinishedInfo.Listener listener)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets a listener that gets invoked after {@link Callback#onCanceled onCanceled()}, {@link\n         * Callback#onFailed onFailed()} or {@link Callback#onSucceeded onSucceeded()} return.\n         *\n         * <p>The listener is invoked  with the request finished info on an\n         * {@link java.util.concurrent.Executor} provided by {@link\n         * RequestFinishedInfo.Listener#getExecutor getExecutor()}.\n         *\n         * @param listener the listener for finished requests.\n         * @return the builder to facilitate chaining.\n         ",
    "links" : [ "RequestFinishedInfo.Listener#getExecutor", "java.util.concurrent.Executor", "#onFailed", "#onCanceled", "#onSucceeded" ]
  }, {
    "name" : "public abstract UrlRequest build()",
    "returnType" : "UrlRequest",
    "comment" : "\n         * Creates a {@link UrlRequest} using configuration within this {@link Builder}. The\n         * returned\n         * {@code UrlRequest} can then be started by calling {@link UrlRequest#start}.\n         *\n         * @return constructed {@link UrlRequest} using configuration within this {@link Builder}.\n         ",
    "links" : [ "org.chromium.net.UrlRequest#start", "Builder", "org.chromium.net.UrlRequest" ]
  } ],
  "methodNames" : [ "public abstract Builder setHttpMethod(String method)", "public abstract Builder addHeader(String header, String value)", "public abstract Builder disableCache()", "public abstract Builder setPriority(int priority)", "public abstract Builder setUploadDataProvider(UploadDataProvider uploadDataProvider, Executor executor)", "public abstract Builder allowDirectExecutor()", "public Builder addRequestAnnotation(Object annotation)", "public Builder bindToNetwork(long networkHandle)", "public Builder setTrafficStatsTag(int tag)", "public Builder setTrafficStatsUid(int uid)", "public Builder setRequestFinishedListener(RequestFinishedInfo.Listener listener)", "public abstract UrlRequest build()" ],
  "variableNames" : [ "REQUEST_PRIORITY_IDLE", "REQUEST_PRIORITY_LOWEST", "REQUEST_PRIORITY_LOW", "REQUEST_PRIORITY_MEDIUM", "REQUEST_PRIORITY_HIGHEST" ]
}