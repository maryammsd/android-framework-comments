{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/DisplayOptions.java",
  "packageName" : "android.icu.text",
  "className" : "DisplayOptions",
  "comment" : "\n * Represents all the display options that are supported by CLDR such as grammatical case, noun\n * class, ... etc. It currently supports enums, but may be extended in the future to have other\n * types of data. It replaces a DisplayContext[] as a method parameter.\n * <p>\n * NOTE: This class is Immutable, and uses a Builder interface.\n * <p>For example:\n * {@code DisplayOptions x =\n *                DisplayOptions.builder()\n *                             .setNounClass(NounClass.DATIVE)\n *                             .setPluralCategory(PluralCategory.FEW)\n *                             .build();\n *                             }\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "grammaticalCase",
    "type" : "GrammaticalCase",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "nounClass",
    "type" : "NounClass",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "pluralCategory",
    "type" : "PluralCategory",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "capitalization",
    "type" : "Capitalization",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "nameStyle",
    "type" : "NameStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "displayLength",
    "type" : "DisplayLength",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "substituteHandling",
    "type" : "SubstituteHandling",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Builder builder()",
    "returnType" : "Builder",
    "comment" : "\n     * Creates a builder with the {@code UNDEFINED} value for all the parameters.\n     *\n     * @return Builder\n     ",
    "links" : [ ]
  }, {
    "name" : "public Builder copyToBuilder()",
    "returnType" : "Builder",
    "comment" : "\n     * Creates a builder with the same parameters from this object.\n     *\n     * @return Builder\n     ",
    "links" : [ ]
  }, {
    "name" : "public GrammaticalCase getGrammaticalCase()",
    "returnType" : "GrammaticalCase",
    "comment" : "\n     * Gets the grammatical case.\n     *\n     * @return GrammaticalCase\n     ",
    "links" : [ ]
  }, {
    "name" : "public NounClass getNounClass()",
    "returnType" : "NounClass",
    "comment" : "\n     * Gets the noun class.\n     *\n     * @return NounClass\n     ",
    "links" : [ ]
  }, {
    "name" : "public PluralCategory getPluralCategory()",
    "returnType" : "PluralCategory",
    "comment" : "\n     * Gets the plural category.\n     *\n     * @return PluralCategory\n     ",
    "links" : [ ]
  }, {
    "name" : "public Capitalization getCapitalization()",
    "returnType" : "Capitalization",
    "comment" : "\n     * Gets the capitalization.\n     *\n     * @return Capitalization\n     ",
    "links" : [ ]
  }, {
    "name" : "public NameStyle getNameStyle()",
    "returnType" : "NameStyle",
    "comment" : "\n     * Gets the name style.\n     *\n     * @return NameStyle\n     ",
    "links" : [ ]
  }, {
    "name" : "public DisplayLength getDisplayLength()",
    "returnType" : "DisplayLength",
    "comment" : "\n     * Gets the display length.\n     *\n     * @return DisplayLength\n     ",
    "links" : [ ]
  }, {
    "name" : "public SubstituteHandling getSubstituteHandling()",
    "returnType" : "SubstituteHandling",
    "comment" : "\n     * Gets the substitute handling.\n     *\n     * @return SubstituteHandling\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Builder builder()", "public Builder copyToBuilder()", "public GrammaticalCase getGrammaticalCase()", "public NounClass getNounClass()", "public PluralCategory getPluralCategory()", "public Capitalization getCapitalization()", "public NameStyle getNameStyle()", "public DisplayLength getDisplayLength()", "public SubstituteHandling getSubstituteHandling()" ],
  "variableNames" : [ "grammaticalCase", "nounClass", "pluralCategory", "capitalization", "nameStyle", "displayLength", "substituteHandling" ]
}