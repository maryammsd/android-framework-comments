{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceResponse.java",
  "packageName" : "android.net.wifi.p2p.nsd",
  "className" : "WifiP2pDnsSdServiceResponse",
  "comment" : "\n * A class for a response of bonjour service discovery.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mDnsQueryName",
    "type" : "String",
    "comment" : "\n     * DNS query name.\n     * e.g)\n     * for PTR\n     * \"_ipp._tcp.local.\"\n     * for TXT\n     * \"MyPrinter._ipp._tcp.local.\"\n     ",
    "links" : [ ]
  }, {
    "name" : "mInstanceName",
    "type" : "String",
    "comment" : "\n     * Service instance name.\n     * e.g) \"MyPrinter\"\n     * This field is only used when the dns type equals to\n     * {@link WifiP2pDnsSdServiceInfo#DNS_TYPE_PTR}.\n     ",
    "links" : [ "android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo#DNS_TYPE_PTR" ]
  }, {
    "name" : "mDnsType",
    "type" : "int",
    "comment" : "\n     * DNS Type.\n     * Should be {@link WifiP2pDnsSdServiceInfo#DNS_TYPE_PTR} or\n     * {@link WifiP2pDnsSdServiceInfo#DNS_TYPE_TXT}.\n     ",
    "links" : [ "android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo#DNS_TYPE_PTR", "android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo#DNS_TYPE_TXT" ]
  }, {
    "name" : "mVersion",
    "type" : "int",
    "comment" : "\n     * DnsSd version number.\n     * Should be {@link WifiP2pDnsSdServiceInfo#VERSION_1}.\n     ",
    "links" : [ "android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo#VERSION_1" ]
  }, {
    "name" : "mTxtRecord",
    "type" : "HashMap<String, String>",
    "comment" : "\n     * Txt record.\n     * This field is only used when the dns type equals to\n     * {@link WifiP2pDnsSdServiceInfo#DNS_TYPE_TXT}.\n     ",
    "links" : [ "android.net.wifi.p2p.nsd.WifiP2pDnsSdServiceInfo#DNS_TYPE_TXT" ]
  }, {
    "name" : "sVmpack",
    "type" : "Map<Integer, String>",
    "comment" : "\n     * Virtual memory packet.\n     * see E.3 of the Wi-Fi Direct technical specification for the detail.<br>\n     * The spec can be obtained from wi-fi.org\n     * Key: pointer Value: domain name.<br>\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getDnsQueryName()",
    "returnType" : "String",
    "comment" : "\n     * Returns query DNS name.\n     * @return DNS name.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDnsType()",
    "returnType" : "int",
    "comment" : "\n     * Return query DNS type.\n     * @return DNS type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getVersion()",
    "returnType" : "int",
    "comment" : "\n     * Return bonjour version number.\n     * @return version number.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getInstanceName()",
    "returnType" : "String",
    "comment" : "\n     * Return instance name.\n     * @return\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, String> getTxtRecord()",
    "returnType" : "Map<String, String>",
    "comment" : "\n     * Return TXT record data.\n     * @return TXT record data.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean parse()",
    "returnType" : "boolean",
    "comment" : "\n     * Parse DnsSd service discovery response.\n     *\n     * @return {@code true} if the operation succeeded\n     ",
    "links" : [ ]
  }, {
    "name" : "private String readDnsName(DataInputStream dis)",
    "returnType" : "String",
    "comment" : "\n     * Read dns name.\n     *\n     * @param dis data input stream.\n     * @return dns name\n     ",
    "links" : [ ]
  }, {
    "name" : "private boolean readTxtData(DataInputStream dis)",
    "returnType" : "boolean",
    "comment" : "\n     * Read TXT record data.\n     *\n     * @param dis\n     * @return true if TXT data is valid\n     ",
    "links" : [ ]
  }, {
    "name" : " static WifiP2pDnsSdServiceResponse newInstance(int status, int transId, WifiP2pDevice dev, byte[] data)",
    "returnType" : "WifiP2pDnsSdServiceResponse",
    "comment" : "\n     * Creates DnsSd service response.\n     *  This is only called from WifiP2pServiceResponse\n     *\n     * @param status status code.\n     * @param dev source device.\n     * @param data DnsSd response data.\n     * @return DnsSd service response data.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getDnsQueryName()", "public int getDnsType()", "public int getVersion()", "public String getInstanceName()", "public Map<String, String> getTxtRecord()", "public String toString()", "private boolean parse()", "private String readDnsName(DataInputStream dis)", "private boolean readTxtData(DataInputStream dis)", " static WifiP2pDnsSdServiceResponse newInstance(int status, int transId, WifiP2pDevice dev, byte[] data)" ],
  "variableNames" : [ "mDnsQueryName", "mInstanceName", "mDnsType", "mVersion", "mTxtRecord", "sVmpack" ]
}