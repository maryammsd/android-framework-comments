{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "Profile",
  "comment" : "\n     * <p>\n     * Constants for the user's profile data, which is represented as a single contact on\n     * the device that represents the user.  The profile contact is not aggregated\n     * together automatically in the same way that normal contacts are; instead, each\n     * account (including data set, if applicable) on the device may contribute a single\n     * raw contact representing the user's personal profile data from that source.\n     * </p>\n     * <p>\n     * Access to the profile entry through these URIs (or incidental access to parts of\n     * the profile if retrieved directly via ID) requires additional permissions beyond\n     * the read/write contact permissions required by the provider.  Querying for profile\n     * data requires android.permission.READ_PROFILE permission, and inserting or\n     * updating profile data requires android.permission.WRITE_PROFILE permission.\n     * </p>\n     * <h3>Operations</h3>\n     * <dl>\n     * <dt><b>Insert</b></dt>\n     * <dd>The user's profile entry cannot be created explicitly (attempting to do so\n     * will throw an exception). When a raw contact is inserted into the profile, the\n     * provider will check for the existence of a profile on the device.  If one is\n     * found, the raw contact's {@link RawContacts#CONTACT_ID} column gets the _ID of\n     * the profile Contact. If no match is found, the profile Contact is created and\n     * its _ID is put into the {@link RawContacts#CONTACT_ID} column of the newly\n     * inserted raw contact.</dd>\n     * <dt><b>Update</b></dt>\n     * <dd>The profile Contact has the same update restrictions as Contacts in general,\n     * but requires the android.permission.WRITE_PROFILE permission.</dd>\n     * <dt><b>Delete</b></dt>\n     * <dd>The profile Contact cannot be explicitly deleted.  It will be removed\n     * automatically if all of its constituent raw contact entries are deleted.</dd>\n     * <dt><b>Query</b></dt>\n     * <dd>\n     * <ul>\n     * <li>The {@link #CONTENT_URI} for profiles behaves in much the same way as\n     * retrieving a contact by ID, except that it will only ever return the user's\n     * profile contact.\n     * </li>\n     * <li>\n     * The profile contact supports all of the same sub-paths as an individual contact\n     * does - the content of the profile contact can be retrieved as entities or\n     * data rows.  Similarly, specific raw contact entries can be retrieved by appending\n     * the desired raw contact ID within the profile.\n     * </li>\n     * </ul>\n     * </dd>\n     * </dl>\n     ",
  "variables" : [ {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URI for this table, which requests the contact entry\n         * representing the user's personal profile data.\n         ",
    "links" : [ ]
  }, {
    "name" : "CONTENT_VCARD_URI",
    "type" : "Uri",
    "comment" : "\n         * {@link Uri} for referencing the user's profile {@link Contacts} entry,\n         * Provides {@link OpenableColumns} columns when queried, or returns the\n         * user's profile contact formatted as a vCard when opened through\n         * {@link ContentResolver#openAssetFileDescriptor(Uri, String)}.\n         ",
    "links" : [ "android.provider.Contacts", "android.net.Uri", "android.provider.OpenableColumns", "android.content.ContentResolver#openAssetFileDescriptor(Uri" ]
  }, {
    "name" : "CONTENT_RAW_CONTACTS_URI",
    "type" : "Uri",
    "comment" : "\n         * {@link Uri} for referencing the raw contacts that make up the user's profile\n         * {@link Contacts} entry.  An individual raw contact entry within the profile\n         * can be addressed by appending the raw contact ID.  The entities or data within\n         * that specific raw contact can be requested by appending the entity or data\n         * path as well.\n         ",
    "links" : [ "android.provider.Contacts", "android.net.Uri" ]
  }, {
    "name" : "MIN_ID",
    "type" : "long",
    "comment" : "\n         * The minimum ID for any entity that belongs to the profile.  This essentially\n         * defines an ID-space in which profile data is stored, and is used by the provider\n         * to determine whether a request via a non-profile-specific URI should be directed\n         * to the profile data rather than general contacts data, along with all the special\n         * permission checks that entails.\n         *\n         * Callers may use {@link #isProfileId} to check whether a specific ID falls into\n         * the set of data intended for the profile.\n         ",
    "links" : [ "#isProfileId" ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "CONTENT_URI", "CONTENT_VCARD_URI", "CONTENT_RAW_CONTACTS_URI", "MIN_ID" ],
  "methodNames" : [ ]
}