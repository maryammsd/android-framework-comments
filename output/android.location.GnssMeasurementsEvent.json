{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssMeasurementsEvent.java",
  "packageName" : "android.location",
  "className" : "GnssMeasurementsEvent",
  "comment" : "\n * A class implementing a container for data associated with a measurement event.\n * Events are delivered to registered instances of {@link Callback}.\n ",
  "links" : [ "Callback" ],
  "variables" : [ {
    "name" : "mFlag",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClock",
    "type" : "GnssClock",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMeasurements",
    "type" : "List<GnssMeasurement>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGnssAgcs",
    "type" : "List<GnssAutomaticGainControl>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsFullTracking",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HAS_IS_FULL_TRACKING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<GnssMeasurementsEvent>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public GnssClock getClock()",
    "returnType" : "GnssClock",
    "comment" : "\n     * Gets the GNSS receiver clock information associated with the measurements for the current\n     * event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Collection<GnssMeasurement> getMeasurements()",
    "returnType" : "Collection<GnssMeasurement>",
    "comment" : "\n     * Gets the collection of measurements associated with the current event.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Collection<GnssAutomaticGainControl> getGnssAutomaticGainControls()",
    "returnType" : "Collection<GnssAutomaticGainControl>",
    "comment" : "\n     * Gets the collection of {@link GnssAutomaticGainControl} associated with the\n     * current event.\n     ",
    "links" : [ "android.location.GnssAutomaticGainControl" ]
  }, {
    "name" : "public boolean isFullTracking()",
    "returnType" : "boolean",
    "comment" : "\n     * True indicates that this event was produced while the chipset was in full tracking mode, ie,\n     * the GNSS chipset switched off duty cycling. In this mode, no clock discontinuities are\n     * expected and, when supported, carrier phase should be continuous in good signal conditions.\n     * All non-blocklisted, healthy constellations, satellites and frequency bands that are\n     * meaningful to positioning accuracy must be tracked and reported in this mode.\n     *\n     * False indicates that the GNSS chipset may optimize power via duty cycling, constellations and\n     * frequency limits, etc.\n     *\n     * <p>The value is only available if {@link #hasIsFullTracking()} is {@code true}.\n     ",
    "links" : [ "#hasIsFullTracking()" ]
  }, {
    "name" : "public boolean hasIsFullTracking()",
    "returnType" : "boolean",
    "comment" : "\n     * Return {@code true} if {@link #isFullTracking()} is available, {@code false} otherwise.\n     ",
    "links" : [ "#isFullTracking()" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public GnssClock getClock()", "public Collection<GnssMeasurement> getMeasurements()", "public Collection<GnssAutomaticGainControl> getGnssAutomaticGainControls()", "public boolean isFullTracking()", "public boolean hasIsFullTracking()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)", "public String toString()" ],
  "variableNames" : [ "mFlag", "mClock", "mMeasurements", "mGnssAgcs", "mIsFullTracking", "HAS_IS_FULL_TRACKING", "CREATOR" ]
}