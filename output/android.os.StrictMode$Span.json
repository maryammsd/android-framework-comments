{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/StrictMode.java",
  "packageName" : "android.os",
  "className" : "Span",
  "comment" : "\n     * A tracked, critical time span. (e.g. during an animation.)\n     *\n     * <p>The object itself is a linked list node, to avoid any allocations during rapid span\n     * entries and exits.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCreateMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNext",
    "type" : "Span",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPrev",
    "type" : "Span",
    "comment" : " not used when in freeList, only active",
    "links" : [ ]
  }, {
    "name" : "mContainerState",
    "type" : "ThreadSpanState",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void finish()",
    "returnType" : "void",
    "comment" : "\n         * To be called when the critical span is complete (i.e. the animation is done animating).\n         * This can be called on any thread (even a different one from where the animation was\n         * taking place), but that's only a defensive implementation measure. It really makes no\n         * sense for you to call this on thread other than that where you created it.\n         *\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void finish()" ],
  "variableNames" : [ "mName", "mCreateMillis", "mNext", "mPrev", "mContainerState" ]
}