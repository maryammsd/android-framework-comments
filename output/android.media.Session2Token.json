{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/Session2Token.java",
  "packageName" : "android.media",
  "className" : "Session2Token",
  "comment" : "\n * This API is not generally intended for third party application developers.\n * Use the <a href=\"{@docRoot}jetpack/androidx.html\">AndroidX</a>\n * <a href=\"{@docRoot}reference/androidx/media2/session/package-summary.html\">Media2 session\n * Library</a> for consistent behavior across all devices.\n * <p>\n * Represents an ongoing {@link MediaSession2} or a {@link MediaSession2Service}.\n * If it's representing a session service, it may not be ongoing.\n * <p>\n * This may be passed to apps by the session owner to allow them to create a\n * {@link MediaController2} to communicate with the session.\n * <p>\n * It can be also obtained by {@link android.media.session.MediaSessionManager}.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Session2Token>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_SESSION",
    "type" : "int",
    "comment" : "\n     * Type for {@link MediaSession2}.\n     ",
    "links" : [ "android.media.MediaSession2" ]
  }, {
    "name" : "TYPE_SESSION_SERVICE",
    "type" : "int",
    "comment" : "\n     * Type for {@link MediaSession2Service}.\n     ",
    "links" : [ "android.media.MediaSession2Service" ]
  }, {
    "name" : "mUid",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mServiceName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionLink",
    "type" : "Session2Link",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mComponentName",
    "type" : "ComponentName",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getUid()",
    "returnType" : "int",
    "comment" : "\n     * @return uid of the session\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPackageName()",
    "returnType" : "String",
    "comment" : "\n     * @return package name of the session\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getServiceName()",
    "returnType" : "String",
    "comment" : "\n     * @return service name of the session. Can be {@code null} for {@link #TYPE_SESSION}.\n     ",
    "links" : [ "#TYPE_SESSION" ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * @return type of the token\n     * @see #TYPE_SESSION\n     * @see #TYPE_SESSION_SERVICE\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getExtras()",
    "returnType" : "Bundle",
    "comment" : "\n     * @return extras of the token\n     * @see MediaSession2.Builder#setExtras(Bundle)\n     ",
    "links" : [ ]
  }, {
    "name" : " Session2Link getSessionLink()",
    "returnType" : "Session2Link",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isInterfaceDeclared(PackageManager manager, String serviceInterface, ComponentName serviceComponent)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int getUid(PackageManager manager, String packageName)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "CREATOR", "TYPE_SESSION", "TYPE_SESSION_SERVICE", "mUid", "mType", "mPackageName", "mServiceName", "mSessionLink", "mComponentName", "mExtras" ],
  "methodNames" : [ "public void writeToParcel(Parcel dest, int flags)", "public int describeContents()", "public int hashCode()", "public boolean equals(Object obj)", "public String toString()", "public int getUid()", "public String getPackageName()", "public String getServiceName()", "public int getType()", "public Bundle getExtras()", " Session2Link getSessionLink()", "private static boolean isInterfaceDeclared(PackageManager manager, String serviceInterface, ComponentName serviceComponent)", "private static int getUid(PackageManager manager, String packageName)" ]
}