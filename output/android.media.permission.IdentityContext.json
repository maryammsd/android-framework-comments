{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/permission/IdentityContext.java",
  "packageName" : "android.media.permission",
  "className" : "IdentityContext",
  "comment" : "\n * An RAII-style object, used to establish a scope in which a single identity is part of the\n * context. This is used in order to avoid having to explicitly pass identity information through\n * deep call-stacks.\n * <p>\n * Intended usage:\n * <pre>\n * void caller() {\n *   Identity originator = ...;\n *   try (SafeCloseable ignored = IdentityContext.create(originator)) {\n *       // Within this scope the context is established.\n *       callee();\n *   }\n *   // Outside the scope the context is restored to its prior state.\n *\n * void callee() {\n *     // Here we can access the identity without having to explicitly take it as an argument.\n *     // This is true even if this were a deeply nested call.\n *     Identity originator = IdentityContext.getNonNull();\n *     ...\n * }\n * </pre>\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "sThreadLocalIdentity",
    "type" : "ThreadLocal<Identity>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPrior",
    "type" : "Identity",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static SafeCloseable create(@Nullable Identity identity)",
    "returnType" : "SafeCloseable",
    "comment" : "\n     * Create a scoped identity context.\n     *\n     * @param identity The identity to establish with the scope.\n     * @return A {@link SafeCloseable}, to be used in a try-with-resources block to establish a\n     * scope.\n     ",
    "links" : [ "android.media.permission.SafeCloseable" ]
  }, {
    "name" : "public static Identity get()",
    "returnType" : "Identity",
    "comment" : "\n     * Get the current identity context.\n     *\n     * @return The identity, or null if it has not been established.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Identity getNonNull()",
    "returnType" : "Identity",
    "comment" : "\n     * Get the current identity context. Throws a {@link NullPointerException} if it has not been\n     * established.\n     *\n     * @return The identity.\n     ",
    "links" : [ "NullPointerException" ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void set(@Nullable Identity identity)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static SafeCloseable create(@Nullable Identity identity)", "public static Identity get()", "public static Identity getNonNull()", "public void close()", "private static void set(@Nullable Identity identity)" ],
  "variableNames" : [ "sThreadLocalIdentity", "mPrior" ]
}