{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/BackProgressAnimator.java",
  "packageName" : "android.window",
  "className" : "BackProgressAnimator",
  "comment" : "\n * An animator that drives the predictive back progress with a spring.\n *\n * The back gesture's latest touch point and committal state determines the final position of\n * the spring. The continuous movement of the spring is used to produce {@link BackEvent}s with\n * smoothly transitioning progress values.\n *\n * @hide\n ",
  "links" : [ "android.window.BackEvent" ],
  "variables" : [ {
    "name" : "SCALE_FACTOR",
    "type" : "float",
    "comment" : "\n     *  A factor to scale the input progress by, so that it works better with the spring.\n     *  We divide the output progress by this value before sending it to apps, so that apps\n     *  always receive progress values in [0, 1].\n     ",
    "links" : [ ]
  }, {
    "name" : "mSpring",
    "type" : "SpringAnimation",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "ProgressCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProgress",
    "type" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLastBackEvent",
    "type" : "BackMotionEvent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBackAnimationInProgress",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBackCancelledFinishRunnable",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnAnimationEndListener",
    "type" : "DynamicAnimation.OnAnimationEndListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROGRESS_PROP",
    "type" : "FloatProperty<BackProgressAnimator>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private void setProgress(float progress)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private float getProgress()",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onBackProgressed(BackMotionEvent event)",
    "returnType" : "void",
    "comment" : "\n     * Sets a new target position for the back progress.\n     *\n     * @param event the {@link BackMotionEvent} containing the latest target progress.\n     ",
    "links" : [ "android.window.BackMotionEvent" ]
  }, {
    "name" : "public void onBackStarted(BackMotionEvent event, ProgressCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Starts the back progress animation.\n     *\n     * @param event the {@link BackMotionEvent} that started the gesture.\n     * @param callback the back callback to invoke for the gesture. It will receive back progress\n     *                 dispatches as the progress animation updates.\n     ",
    "links" : [ "android.window.BackMotionEvent" ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "\n     * Resets the back progress animation. This should be called when back is invoked or cancelled.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onBackCancelled(@NonNull Runnable finishCallback)",
    "returnType" : "void",
    "comment" : "\n     * Animate the back progress animation from current progress to start position.\n     * This should be called when back is cancelled.\n     *\n     * @param finishCallback the callback to be invoked when the progress is reach to 0.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void removeOnBackCancelledFinishCallback()",
    "returnType" : "void",
    "comment" : "\n     * Removes the finishCallback passed into {@link #onBackCancelled}\n     ",
    "links" : [ "#onBackCancelled" ]
  }, {
    "name" : " boolean isBackAnimationInProgress()",
    "returnType" : "boolean",
    "comment" : " Returns true if the back animation is in progress. ",
    "links" : [ ]
  }, {
    "name" : "private void updateProgressValue(float progress)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void invokeBackCancelledRunnable()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private void setProgress(float progress)", "private float getProgress()", "public void onBackProgressed(BackMotionEvent event)", "public void onBackStarted(BackMotionEvent event, ProgressCallback callback)", "public void reset()", "public void onBackCancelled(@NonNull Runnable finishCallback)", "public void removeOnBackCancelledFinishCallback()", " boolean isBackAnimationInProgress()", "private void updateProgressValue(float progress)", "private void invokeBackCancelledRunnable()" ],
  "variableNames" : [ "SCALE_FACTOR", "mSpring", "mCallback", "mProgress", "mLastBackEvent", "mBackAnimationInProgress", "mBackCancelledFinishRunnable", "mOnAnimationEndListener", "PROGRESS_PROP" ]
}