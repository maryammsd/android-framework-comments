{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/BluetoothAvrcpPlayerSettings.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothAvrcpPlayerSettings",
  "comment" : "\n * Class used to identify settings associated with the player on AG.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SETTING_EQUALIZER",
    "type" : "int",
    "comment" : " Equalizer setting. ",
    "links" : [ ]
  }, {
    "name" : "SETTING_REPEAT",
    "type" : "int",
    "comment" : " Repeat setting. ",
    "links" : [ ]
  }, {
    "name" : "SETTING_SHUFFLE",
    "type" : "int",
    "comment" : " Shuffle setting. ",
    "links" : [ ]
  }, {
    "name" : "SETTING_SCAN",
    "type" : "int",
    "comment" : " Scan mode setting. ",
    "links" : [ ]
  }, {
    "name" : "STATE_INVALID",
    "type" : "int",
    "comment" : "\n     * Invalid state.\n     *\n     * <p>Used for returning error codes.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_OFF",
    "type" : "int",
    "comment" : "\n     * OFF state.\n     *\n     * <p>Denotes a general OFF state. Applies to all settings.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATE_ON",
    "type" : "int",
    "comment" : "\n     * ON state.\n     *\n     * <p>Applies to {@link SETTING_EQUALIZER}.\n     ",
    "links" : [ "SETTING_EQUALIZER" ]
  }, {
    "name" : "STATE_SINGLE_TRACK",
    "type" : "int",
    "comment" : "\n     * Single track repeat.\n     *\n     * <p>Applies only to {@link SETTING_REPEAT}.\n     ",
    "links" : [ "SETTING_REPEAT" ]
  }, {
    "name" : "STATE_ALL_TRACK",
    "type" : "int",
    "comment" : "\n     * All track repeat/shuffle.\n     *\n     * <p>Applies to {@link #SETTING_REPEAT}, {@link #SETTING_SHUFFLE} and {@link #SETTING_SCAN}.\n     ",
    "links" : [ "#SETTING_SHUFFLE", "#SETTING_REPEAT", "#SETTING_SCAN" ]
  }, {
    "name" : "STATE_GROUP",
    "type" : "int",
    "comment" : "\n     * Group repeat/shuffle.\n     *\n     * <p>Applies to {@link #SETTING_REPEAT}, {@link #SETTING_SHUFFLE} and {@link #SETTING_SCAN}.\n     ",
    "links" : [ "#SETTING_SHUFFLE", "#SETTING_REPEAT", "#SETTING_SCAN" ]
  }, {
    "name" : "mSettings",
    "type" : "int",
    "comment" : " List of supported settings ORed. ",
    "links" : [ ]
  }, {
    "name" : "mSettingsValue",
    "type" : "Map<Integer, Integer>",
    "comment" : " Hash map of current capability values. ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<BluetoothAvrcpPlayerSettings>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSettings()",
    "returnType" : "int",
    "comment" : "\n     * Get the supported settings.\n     *\n     * @return int ORed value of supported settings.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addSettingValue(int setting, int value)",
    "returnType" : "void",
    "comment" : "\n     * Add a setting value.\n     *\n     * <p>The setting must be part of possible settings in {@link getSettings()}.\n     *\n     * @param setting setting config.\n     * @param value value for the setting.\n     * @throws IllegalStateException if the setting is not supported.\n     ",
    "links" : [ "getSettings()" ]
  }, {
    "name" : "public int getSettingValue(int setting)",
    "returnType" : "int",
    "comment" : "\n     * Get a setting value.\n     *\n     * <p>The setting must be part of possible settings in {@link getSettings()}.\n     *\n     * @param setting setting config.\n     * @return value value for the setting.\n     * @throws IllegalStateException if the setting is not supported.\n     ",
    "links" : [ "getSettings()" ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", "public int getSettings()", "public void addSettingValue(int setting, int value)", "public int getSettingValue(int setting)" ],
  "variableNames" : [ "TAG", "SETTING_EQUALIZER", "SETTING_REPEAT", "SETTING_SHUFFLE", "SETTING_SCAN", "STATE_INVALID", "STATE_OFF", "STATE_ON", "STATE_SINGLE_TRACK", "STATE_ALL_TRACK", "STATE_GROUP", "mSettings", "mSettingsValue", "CREATOR" ]
}