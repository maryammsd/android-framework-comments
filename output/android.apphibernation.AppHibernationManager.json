{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/apphibernation/AppHibernationManager.java",
  "packageName" : "android.apphibernation",
  "className" : "AppHibernationManager",
  "comment" : "\n * This class provides an API surface for system apps to manipulate the app hibernation\n * state of a package for the user provided in the context.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIAppHibernationService",
    "type" : "IAppHibernationService",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isHibernatingForUser(@NonNull String packageName)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the package is hibernating for this context's user, false otherwise.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setHibernatingForUser(@NonNull String packageName, boolean isHibernating)",
    "returnType" : "void",
    "comment" : "\n     * Set whether the package is hibernating for this context's user.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isHibernatingGlobally(@NonNull String packageName)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if app is hibernating globally / at the package level.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setHibernatingGlobally(@NonNull String packageName, boolean isHibernating)",
    "returnType" : "void",
    "comment" : "\n     * Set whether a package should be globally hibernating. This hibernates the package at a\n     * package level. User-level hibernation (e.g.. {@link #isHibernatingForUser} is independent\n     * from global hibernation.\n     *\n     * @hide\n     ",
    "links" : [ "#isHibernatingForUser" ]
  }, {
    "name" : "public List<String> getHibernatingPackagesForUser()",
    "returnType" : "List<String>",
    "comment" : "\n     * Get the hibernating packages for the user. This is equivalent to the list of packages for\n     * the user that return true for {@link #isHibernatingForUser}.\n     *\n     * @hide\n     ",
    "links" : [ "#isHibernatingForUser" ]
  }, {
    "name" : "public Map<String, HibernationStats> getHibernationStatsForUser(@NonNull Set<String> packageNames)",
    "returnType" : "Map<String, HibernationStats>",
    "comment" : "\n     * Returns the stats from app hibernation for each package provided.\n     *\n     * @param packageNames the set of packages to return stats for\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, HibernationStats> getHibernationStatsForUser()",
    "returnType" : "Map<String, HibernationStats>",
    "comment" : "\n     * Returns the stats from app hibernation for all packages for the user\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isOatArtifactDeletionEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether global hibernation should delete ART ahead-of-time compilation artifacts\n     * and prevent package manager from re-optimizing the APK.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isHibernatingForUser(@NonNull String packageName)", "public void setHibernatingForUser(@NonNull String packageName, boolean isHibernating)", "public boolean isHibernatingGlobally(@NonNull String packageName)", "public void setHibernatingGlobally(@NonNull String packageName, boolean isHibernating)", "public List<String> getHibernatingPackagesForUser()", "public Map<String, HibernationStats> getHibernationStatsForUser(@NonNull Set<String> packageNames)", "public Map<String, HibernationStats> getHibernationStatsForUser()", "public boolean isOatArtifactDeletionEnabled()" ],
  "variableNames" : [ "TAG", "mContext", "mIAppHibernationService" ]
}