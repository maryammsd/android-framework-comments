{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/bluetooth/BluetoothGattService.java",
  "packageName" : "android.bluetooth",
  "className" : "BluetoothGattService",
  "comment" : "\n * Represents a Bluetooth GATT Service\n *\n * <p> Gatt Service contains a collection of {@link BluetoothGattCharacteristic},\n * as well as referenced services.\n ",
  "variables" : [ {
    "name" : "SERVICE_TYPE_PRIMARY",
    "type" : "int",
    "comment" : "\n     * Primary service\n     ",
    "links" : [ ]
  }, {
    "name" : "SERVICE_TYPE_SECONDARY",
    "type" : "int",
    "comment" : "\n     * Secondary service (included by primary services)\n     ",
    "links" : [ ]
  }, {
    "name" : "mDevice",
    "type" : "BluetoothDevice",
    "comment" : "\n     * The remote device his service is associated with.\n     * This applies to client applications only.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mUuid",
    "type" : "UUID",
    "comment" : "\n     * The UUID of this service.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mInstanceId",
    "type" : "int",
    "comment" : "\n     * Instance ID for this service.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mHandles",
    "type" : "int",
    "comment" : "\n     * Handle counter override (for conformance testing).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mServiceType",
    "type" : "int",
    "comment" : "\n     * Service type (Primary/Secondary).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mCharacteristics",
    "type" : "List<BluetoothGattCharacteristic>",
    "comment" : "\n     * List of characteristics included in this service.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIncludedServices",
    "type" : "List<BluetoothGattService>",
    "comment" : "\n     * List of included services for this service.\n     ",
    "links" : [ ]
  }, {
    "name" : "mAdvertisePreferred",
    "type" : "boolean",
    "comment" : "\n     * Whether the service uuid should be advertised.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<BluetoothGattService>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " BluetoothDevice getDevice()",
    "returnType" : "BluetoothDevice",
    "comment" : "package",
    "links" : [ ]
  }, {
    "name" : " void setDevice(BluetoothDevice device)",
    "returnType" : "void",
    "comment" : "package",
    "links" : [ ]
  }, {
    "name" : "public boolean addService(BluetoothGattService service)",
    "returnType" : "boolean",
    "comment" : "\n     * Add an included service to this service.\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * @param service The service to be added\n     * @return true, if the included service was added to the service\n     ",
    "links" : [ "android.Manifest.permission#BLUETOOTH" ]
  }, {
    "name" : "public boolean addCharacteristic(BluetoothGattCharacteristic characteristic)",
    "returnType" : "boolean",
    "comment" : "\n     * Add a characteristic to this service.\n     * <p>Requires {@link android.Manifest.permission#BLUETOOTH} permission.\n     *\n     * @param characteristic The characteristics to be added\n     * @return true, if the characteristic was added to the service\n     ",
    "links" : [ "android.Manifest.permission#BLUETOOTH" ]
  }, {
    "name" : " BluetoothGattCharacteristic getCharacteristic(UUID uuid, int instanceId)",
    "returnType" : "BluetoothGattCharacteristic",
    "comment" : "package",
    "links" : [ ]
  }, {
    "name" : "public void setInstanceId(int instanceId)",
    "returnType" : "void",
    "comment" : "\n     * Force the instance ID.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : " int getHandles()",
    "returnType" : "int",
    "comment" : "package",
    "links" : [ ]
  }, {
    "name" : "public void setHandles(int handles)",
    "returnType" : "void",
    "comment" : "\n     * Force the number of handles to reserve for this service.\n     * This is needed for conformance testing only.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addIncludedService(BluetoothGattService includedService)",
    "returnType" : "void",
    "comment" : "\n     * Add an included service to the internal map.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public UUID getUuid()",
    "returnType" : "UUID",
    "comment" : "\n     * Returns the UUID of this service\n     *\n     * @return UUID of this service\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInstanceId()",
    "returnType" : "int",
    "comment" : "\n     * Returns the instance ID for this service\n     *\n     * <p>If a remote device offers multiple services with the same UUID\n     * (ex. multiple battery services for different batteries), the instance\n     * ID is used to distuinguish services.\n     *\n     * @return Instance ID of this service\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * Get the type of this service (primary/secondary)\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<BluetoothGattService> getIncludedServices()",
    "returnType" : "List<BluetoothGattService>",
    "comment" : "\n     * Get the list of included GATT services for this service.\n     *\n     * @return List of included services or empty list if no included services were discovered.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<BluetoothGattCharacteristic> getCharacteristics()",
    "returnType" : "List<BluetoothGattCharacteristic>",
    "comment" : "\n     * Returns a list of characteristics included in this service.\n     *\n     * @return Characteristics included in this service\n     ",
    "links" : [ ]
  }, {
    "name" : "public BluetoothGattCharacteristic getCharacteristic(UUID uuid)",
    "returnType" : "BluetoothGattCharacteristic",
    "comment" : "\n     * Returns a characteristic with a given UUID out of the list of\n     * characteristics offered by this service.\n     *\n     * <p>This is a convenience function to allow access to a given characteristic\n     * without enumerating over the list returned by {@link #getCharacteristics}\n     * manually.\n     *\n     * <p>If a remote service offers multiple characteristics with the same\n     * UUID, the first instance of a characteristic with the given UUID\n     * is returned.\n     *\n     * @return GATT characteristic object or null if no characteristic with the given UUID was\n     * found.\n     ",
    "links" : [ "#getCharacteristics" ]
  }, {
    "name" : "public boolean isAdvertisePreferred()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns whether the uuid of the service should be advertised.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setAdvertisePreferred(boolean advertisePreferred)",
    "returnType" : "void",
    "comment" : "\n     * Set whether the service uuid should be advertised.\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "SERVICE_TYPE_PRIMARY", "SERVICE_TYPE_SECONDARY", "mDevice", "mUuid", "mInstanceId", "mHandles", "mServiceType", "mCharacteristics", "mIncludedServices", "mAdvertisePreferred", "CREATOR" ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(Parcel out, int flags)", " BluetoothDevice getDevice()", " void setDevice(BluetoothDevice device)", "public boolean addService(BluetoothGattService service)", "public boolean addCharacteristic(BluetoothGattCharacteristic characteristic)", " BluetoothGattCharacteristic getCharacteristic(UUID uuid, int instanceId)", "public void setInstanceId(int instanceId)", " int getHandles()", "public void setHandles(int handles)", "public void addIncludedService(BluetoothGattService includedService)", "public UUID getUuid()", "public int getInstanceId()", "public int getType()", "public List<BluetoothGattService> getIncludedServices()", "public List<BluetoothGattCharacteristic> getCharacteristics()", "public BluetoothGattCharacteristic getCharacteristic(UUID uuid)", "public boolean isAdvertisePreferred()", "public void setAdvertisePreferred(boolean advertisePreferred)" ]
}