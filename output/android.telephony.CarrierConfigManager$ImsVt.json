{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/CarrierConfigManager.java",
  "packageName" : "android.telephony",
  "className" : "ImsVt",
  "comment" : "\n     * IMS Video Telephony configs. This groups the configs that are specific for video call.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "KEY_PREFIX",
    "type" : "String",
    "comment" : " Prefix of all imsvt.KEY_* constants. ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag specifying whether video media is allowed on default bearer.\n         *\n         * <p>If {@code true}: video media can be sent on default bearer.\n         * {@code false} otherwise.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the timeout value for no video RTP packets received.\n         * <p>On timer expiry, VT call can downgrade to voice call or end\n         * or continue depending on the operator requirement.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the timeout value for no video RTCP packets received.\n         * <p>On timer expiry, VT call can downgrade to voice call or end\n         * or continue depending on the operator requirement.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_AS_BANDWIDTH_KBPS_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the AS (Application Specific) SDP modifier for video media.\n         *\n         * <p>Expressed in kilobits per second as per RFC 3556 Section 2.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_RS_BANDWIDTH_BPS_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the RS (RTCP bandwidth-Sender) SDP modifier for video media.\n         *\n         * <p>This indicates the RTCP bandwidth allocated to active data senders\n         * for video media.\n         *\n         * <p>Expressed in bits per second as per RFC 3556 Section 2.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_RR_BANDWIDTH_BPS_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the RR (RTCP bandwidth-Receiver) SDP modifier\n         * for video media.\n         *\n         * <p>This indicates the RTCP bandwidth allocated to receivers\n         * for video media.\n         *\n         * <p>Expressed in bits per second as per RFC 3556 Section 2.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_RTP_DSCP_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the differentiated services code point (DSCP) value\n         * for Video RTP.\n         *\n         * <p>Reference: RFC 4594 Section 1.4.4\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOL",
    "type" : "String",
    "comment" : "\n         * Flag specifying whether QoS preconditions are supported for Video.\n         *\n         * <p>If {@code true}: QoS Preconditions are supported.\n         * {@code false} otherwise.\n         * <p>Reference: 3GPP TS 24.229\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE",
    "type" : "String",
    "comment" : "\n         * Specifies the Video Codec capability. This contains a list of\n         * payload types representing different Video codec instances.\n\n         * <p>Possible key(s) in this bundle are,\n         * <UL>\n         *     <LI>{@link #KEY_H264_PAYLOAD_TYPE_INT_ARRAY}</LI>\n         * </UL>\n         * <p>To specify payload descriptions for each of the payload types, see\n         * <UL>\n         *     <LI>{@link #KEY_H264_PAYLOAD_DESCRIPTION_BUNDLE}</LI>\n         * </UL>\n         ",
    "links" : [ "#KEY_H264_PAYLOAD_DESCRIPTION_BUNDLE", "#KEY_H264_PAYLOAD_TYPE_INT_ARRAY" ]
  }, {
    "name" : "KEY_H264_PAYLOAD_TYPE_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * A list of integers representing the different payload types\n         * in H264 video codec in priority order from highest to lowest.\n         * <p>Payload type is an integer in dynamic payload type range 96-127\n         * as per RFC RFC 3551 Section 6.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_H264_PAYLOAD_DESCRIPTION_BUNDLE",
    "type" : "String",
    "comment" : "\n         * Specifies the codec attributes of different payload types\n         * representing H264 video codec instances.\n         *\n         * <p> The allowed payload types of the video codecs are specified in,\n         * {@link #KEY_H264_PAYLOAD_TYPE_INT_ARRAY}.\n         *\n         * <p>Codec attributes allowed as part of H264 codec bundle are,\n         * <UL>\n         *     <LI>{@link #KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRING}</LI>\n         *     <LI>{@link #KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INT}</LI>\n         *     <LI>{@link #KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INT}</LI>\n         *     <LI>{@link #KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAY}</LI>\n         * </UL>\n         *\n         * <p>If this bundle is not configured and\n         * {@link #KEY_H264_PAYLOAD_TYPE_INT_ARRAY} is not empty,\n         * then default values as in the individual codec attributes to\n         * be used for that payload type.\n         * <p>If the codec attributes in a particular codec instance bundle\n         * is not valid together, then that codec instance should not be used.\n         ",
    "links" : [ "#KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INT", "#KEY_H264_PAYLOAD_TYPE_INT_ARRAY", "#KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAY", "#KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRING", "#KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INT" ]
  }, {
    "name" : "KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the packetization mode of the video codec.\n         *\n         * <p>Permissible values are 0 (Single NAL unit mode),\n         * 1(Non-interleaved mode).\n         *\n         * <p>If this key is not specified or invalid, then the following\n         * default value to be used.\n         * <UL>\n         *   <LI>For H264: 1(Non-interleaved mode)</LI>\n         * <UL>\n         *\n         * <p>Reference: RFC 6184 Section 5.4\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INT",
    "type" : "String",
    "comment" : "\n         * Specifies the maximum frame rate the offerer wishes to receive.\n         * This gives the maximum video frame rate in frames/sec.\n         *\n         * <p>If this key is not specified or invalid, then the following\n         * default value to be used.\n         * <UL>\n         *   <LI>For H264: 15 </LI>\n         * <UL>\n         * <p>Reference: RFC 4566 Section 6, 3GPP 26.114 Section 6.2.3.2\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAY",
    "type" : "String",
    "comment" : "\n         * Specifies the maximum resolution allowed for the video codec\n         * instance.\n         *\n         * <p>This is specified as an array of two integers, with\n         * index 0 : Width,\n         * index 1 : Height\n         *\n         * <p>If this key is not specified or invalid as per the video codec,\n         * then the following default value to be used.\n         * <UL>\n         *   <LI>For H264: 240 (WIDTH) x 320 (HEIGHT) </LI>\n         * <UL>\n         * <p>Reference: RFC 4566 Section 6, 3GPP 26.114 Section 6.2.3.2\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRING",
    "type" : "String",
    "comment" : "\n         * Specifies the profile level id of the H264 video codec.\n         * This value is represented as \"profile-level-id\" in the SDP offer\n         * as per RFC 6184 Section 8.1.\n         *\n         * <p>If this key is not specified or invalid as per the video codec,\n         * then default value of 42C00C to be used.\n         *\n         * <p>Reference: RFC 6184 Section 8.1, ITU-T Recommendation H.264\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static PersistableBundle getDefaults()",
    "returnType" : "PersistableBundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static PersistableBundle getDefaults()" ],
  "variableNames" : [ "KEY_PREFIX", "KEY_VIDEO_ON_DEFAULT_BEARER_SUPPORTED_BOOL", "KEY_VIDEO_RTP_INACTIVITY_TIMER_MILLIS_INT", "KEY_VIDEO_RTCP_INACTIVITY_TIMER_MILLIS_INT", "KEY_VIDEO_AS_BANDWIDTH_KBPS_INT", "KEY_VIDEO_RS_BANDWIDTH_BPS_INT", "KEY_VIDEO_RR_BANDWIDTH_BPS_INT", "KEY_VIDEO_RTP_DSCP_INT", "KEY_VIDEO_QOS_PRECONDITION_SUPPORTED_BOOL", "KEY_VIDEO_CODEC_CAPABILITY_PAYLOAD_TYPES_BUNDLE", "KEY_H264_PAYLOAD_TYPE_INT_ARRAY", "KEY_H264_PAYLOAD_DESCRIPTION_BUNDLE", "KEY_VIDEO_CODEC_ATTRIBUTE_PACKETIZATION_MODE_INT", "KEY_VIDEO_CODEC_ATTRIBUTE_FRAME_RATE_INT", "KEY_VIDEO_CODEC_ATTRIBUTE_RESOLUTION_INT_ARRAY", "KEY_H264_VIDEO_CODEC_ATTRIBUTE_PROFILE_LEVEL_ID_STRING" ]
}