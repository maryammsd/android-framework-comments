{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/number/CurrencyPrecision.java",
  "packageName" : "android.icu.number",
  "className" : "CurrencyPrecision",
  "comment" : "\n * A class that defines a rounding strategy parameterized by a currency to be used when formatting\n * numbers in NumberFormatter.\n *\n * <p>\n * To create a CurrencyPrecision, use one of the factory methods on Precision.\n *\n * @see NumberFormatter\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public Precision withCurrency(Currency currency)",
    "returnType" : "Precision",
    "comment" : "\n     * Associates a currency with this rounding strategy.\n     *\n     * <p>\n     * <strong>Calling this method is <em>not required</em></strong>, because the currency specified in\n     * unit() or via a CurrencyAmount passed into format(Measure) is automatically applied to currency\n     * rounding strategies. However, this method enables you to override that automatic association.\n     *\n     * <p>\n     * This method also enables numbers to be formatted using currency rounding rules without explicitly\n     * using a currency format.\n     *\n     * @param currency\n     *            The currency to associate with this rounding strategy.\n     * @return A Precision for chaining or passing to the NumberFormatter rounding() setter.\n     * @throws IllegalArgumentException for null Currency\n     * @see NumberFormatter\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Precision withCurrency(Currency currency)" ],
  "variableNames" : [ ]
}