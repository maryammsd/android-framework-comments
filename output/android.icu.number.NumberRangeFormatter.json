{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/number/NumberRangeFormatter.java",
  "packageName" : "android.icu.number",
  "className" : "NumberRangeFormatter",
  "comment" : "\n * The main entrypoint to the formatting of ranges of numbers, including currencies and other units of measurement.\n * <p>\n * Usage example:\n * <pre>\n * NumberRangeFormatter.with()\n *         .identityFallback(RangeIdentityFallback.APPROXIMATELY_OR_SINGLE_VALUE)\n *         .numberFormatterFirst(NumberFormatter.with().unit(MeasureUnit.METER))\n *         .numberFormatterSecond(NumberFormatter.with().unit(MeasureUnit.KILOMETER))\n *         .locale(ULocale.UK)\n *         .formatRange(750, 1.2)\n *         .toString();\n * // => \"750 m - 1.2 km\"\n * </pre>\n * <p>\n * Like NumberFormatter, NumberRangeFormatter instances (i.e., LocalizedNumberRangeFormatter\n * and UnlocalizedNumberRangeFormatter) are immutable and thread-safe. This API is based on the\n * <em>fluent</em> design pattern popularized by libraries such as Google's Guava.\n *\n * @author sffc\n * @see NumberFormatter\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "BASE",
    "type" : "UnlocalizedNumberRangeFormatter",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static UnlocalizedNumberRangeFormatter with()",
    "returnType" : "UnlocalizedNumberRangeFormatter",
    "comment" : "\n     * Call this method at the beginning of a NumberRangeFormatter fluent chain in which the locale is not currently\n     * known at the call site.\n     *\n     * @return An {@link UnlocalizedNumberRangeFormatter}, to be used for chaining.\n     ",
    "links" : [ "android.icu.number.UnlocalizedNumberRangeFormatter" ]
  }, {
    "name" : "public static LocalizedNumberRangeFormatter withLocale(Locale locale)",
    "returnType" : "LocalizedNumberRangeFormatter",
    "comment" : "\n     * Call this method at the beginning of a NumberRangeFormatter fluent chain in which the locale is known at the call\n     * site.\n     *\n     * @param locale\n     *            The locale from which to load formats and symbols for number range formatting.\n     * @return A {@link LocalizedNumberRangeFormatter}, to be used for chaining.\n     ",
    "links" : [ "android.icu.number.LocalizedNumberRangeFormatter" ]
  }, {
    "name" : "public static LocalizedNumberRangeFormatter withLocale(ULocale locale)",
    "returnType" : "LocalizedNumberRangeFormatter",
    "comment" : "\n     * Call this method at the beginning of a NumberRangeFormatter fluent chain in which the locale is known at the call\n     * site.\n     *\n     * @param locale\n     *            The locale from which to load formats and symbols for number range formatting.\n     * @return A {@link LocalizedNumberRangeFormatter}, to be used for chaining.\n     ",
    "links" : [ "android.icu.number.LocalizedNumberRangeFormatter" ]
  } ],
  "methodNames" : [ "public static UnlocalizedNumberRangeFormatter with()", "public static LocalizedNumberRangeFormatter withLocale(Locale locale)", "public static LocalizedNumberRangeFormatter withLocale(ULocale locale)" ],
  "variableNames" : [ "BASE" ]
}