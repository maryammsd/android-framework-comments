{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/AnnualTimeZoneRule.java",
  "packageName" : "android.icu.util",
  "className" : "AnnualTimeZoneRule",
  "comment" : "\n * <code>AnnualTimeZoneRule</code> is a class used for representing a time zone\n * rule which takes effect annually.  Years used in this class are\n * all Gregorian calendar years.\n *\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_YEAR",
    "type" : "int",
    "comment" : "\n     * The constant representing the maximum year used for designating a rule is permanent.\n     ",
    "links" : [ ]
  }, {
    "name" : "dateTimeRule",
    "type" : "DateTimeRule",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "startYear",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "endYear",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public DateTimeRule getRule()",
    "returnType" : "DateTimeRule",
    "comment" : "\n     * Gets the start date/time rule associated used by this rule.\n     *\n     * @return  An <code>AnnualDateTimeRule</code> which represents the start date/time\n     *          rule used by this time zone rule.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getStartYear()",
    "returnType" : "int",
    "comment" : "\n     * Gets the first year when this rule takes effect.\n     *\n     * @return  The start year of this rule.  The year is in Gregorian calendar\n     *          with 0 == 1 BCE, -1 == 2 BCE, etc.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEndYear()",
    "returnType" : "int",
    "comment" : "\n     * Gets the end year when this rule takes effect.\n     *\n     * @return  The end year of this rule (inclusive). The year is in Gregorian calendar\n     *          with 0 == 1 BCE, -1 == 2 BCE, etc.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getStartInYear(int year, int prevRawOffset, int prevDSTSavings)",
    "returnType" : "Date",
    "comment" : "\n     * Gets the time when this rule takes effect in the given year.\n     *\n     * @param year              The Gregorian year, with 0 == 1 BCE, -1 == 2 BCE, etc.\n     * @param prevRawOffset     The standard time offset from UTC before this rule\n     *                          takes effect in milliseconds.\n     * @param prevDSTSavings    The amount of daylight saving offset from the\n     *                          standard time.\n     *\n     * @return  The time when this rule takes effect in the year, or\n     *          null if this rule is not applicable in the year.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getFirstStart(int prevRawOffset, int prevDSTSavings)",
    "returnType" : "Date",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getFinalStart(int prevRawOffset, int prevDSTSavings)",
    "returnType" : "Date",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getNextStart(long base, int prevRawOffset, int prevDSTSavings, boolean inclusive)",
    "returnType" : "Date",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public Date getPreviousStart(long base, int prevRawOffset, int prevDSTSavings, boolean inclusive)",
    "returnType" : "Date",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isEquivalentTo(TimeZoneRule other)",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isTransitionRule()",
    "returnType" : "boolean",
    "comment" : "\n     * {@inheritDoc}<br><br>\n     * Note: This method in <code>AnnualTimeZoneRule</code> always returns true.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n     * Returns a <code>String</code> representation of this <code>AnnualTimeZoneRule</code> object.\n     * This method is used for debugging purpose only.  The string representation can be changed\n     * in future version of ICU without any notice.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public DateTimeRule getRule()", "public int getStartYear()", "public int getEndYear()", "public Date getStartInYear(int year, int prevRawOffset, int prevDSTSavings)", "public Date getFirstStart(int prevRawOffset, int prevDSTSavings)", "public Date getFinalStart(int prevRawOffset, int prevDSTSavings)", "public Date getNextStart(long base, int prevRawOffset, int prevDSTSavings, boolean inclusive)", "public Date getPreviousStart(long base, int prevRawOffset, int prevDSTSavings, boolean inclusive)", "public boolean isEquivalentTo(TimeZoneRule other)", "public boolean isTransitionRule()", "public String toString()" ],
  "variableNames" : [ "serialVersionUID", "MAX_YEAR", "dateTimeRule", "startYear", "endYear" ]
}