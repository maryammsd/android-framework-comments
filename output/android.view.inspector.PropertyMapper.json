{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/inspector/PropertyMapper.java",
  "packageName" : "android.view.inspector",
  "className" : "PropertyMapper",
  "comment" : "\n * An interface for mapping the string names of inspectable properties to integer identifiers.\n *\n * This interface is consumed by {@link InspectionCompanion#mapProperties(PropertyMapper)}.\n *\n * Mapping properties to IDs enables quick comparisons against shadow copies of inspectable\n * objects without performing a large number of string comparisons.\n *\n * Properties that derive their value from an XML attribute should provide the attribute resource\n * ID (e.g.: {@code R.attr.color}). For runtime or generated properties properties without\n * attribute IDs, supply {@link Resources#ID_NULL} for {@code attributeId}.\n *\n * @see InspectionCompanion#mapProperties(PropertyMapper)\n ",
  "links" : [ "android.view.inspector.InspectionCompanion#mapProperties(PropertyMapper)", "android.content.res.Resources#ID_NULL" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " int mapBoolean(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a primitive boolean property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapByte(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a primitive byte property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapChar(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a primitive char property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapDouble(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a primitive double property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapFloat(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a primitive float property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapInt(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a primitive int property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapLong(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a primitive long property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapShort(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a primitive short property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapObject(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for an object property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapColor(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a color property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     * @see android.graphics.Color\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapGravity(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a gravity property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     * @see android.view.Gravity\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapIntEnum(@NonNull String name, @AttrRes int attributeId, @NonNull IntFunction<String> mapping)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for an enumeration packed into an int property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @param mapping A mapping from int to String\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapResourceId(@NonNull String name, @AttrRes int attributeId)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for an attribute that contains resource IDs.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  }, {
    "name" : " int mapIntFlag(@NonNull String name, @AttrRes int attributeId, @NonNull IntFunction<Set<String>> mapping)",
    "returnType" : "int",
    "comment" : "\n     * Map a string name to an integer ID for a flag set packed into an int property.\n     *\n     * @param name The name of the property\n     * @param attributeId The attribute resource ID of this property, or {@link Resources#ID_NULL}\n     * @param mapping A mapping from int to a set of strings\n     * @return An integer ID for the property\n     * @throws PropertyConflictException If the property name is already mapped as another type.\n     ",
    "links" : [ "android.content.res.Resources#ID_NULL" ]
  } ],
  "methodNames" : [ " int mapBoolean(@NonNull String name, @AttrRes int attributeId)", " int mapByte(@NonNull String name, @AttrRes int attributeId)", " int mapChar(@NonNull String name, @AttrRes int attributeId)", " int mapDouble(@NonNull String name, @AttrRes int attributeId)", " int mapFloat(@NonNull String name, @AttrRes int attributeId)", " int mapInt(@NonNull String name, @AttrRes int attributeId)", " int mapLong(@NonNull String name, @AttrRes int attributeId)", " int mapShort(@NonNull String name, @AttrRes int attributeId)", " int mapObject(@NonNull String name, @AttrRes int attributeId)", " int mapColor(@NonNull String name, @AttrRes int attributeId)", " int mapGravity(@NonNull String name, @AttrRes int attributeId)", " int mapIntEnum(@NonNull String name, @AttrRes int attributeId, @NonNull IntFunction<String> mapping)", " int mapResourceId(@NonNull String name, @AttrRes int attributeId)", " int mapIntFlag(@NonNull String name, @AttrRes int attributeId, @NonNull IntFunction<Set<String>> mapping)" ],
  "variableNames" : [ ]
}