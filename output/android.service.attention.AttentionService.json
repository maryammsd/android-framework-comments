{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/attention/AttentionService.java",
  "packageName" : "android.service.attention",
  "className" : "AttentionService",
  "comment" : "\n * Abstract base class for Attention service.\n *\n * <p> An attention service provides attention estimation related features to the system.\n * The system's default AttentionService implementation is configured in\n * {@code config_AttentionComponent}. If this config has no value, a stub is returned.\n *\n * See: {@link com.android.server.attention.AttentionManagerService}.\n *\n * <pre>\n * {@literal\n * <service android:name=\".YourAttentionService\"\n *          android:permission=\"android.permission.BIND_ATTENTION_SERVICE\">\n * </service>}\n * </pre>\n *\n * @hide\n ",
  "links" : [ "com.android.server.attention.AttentionManagerService" ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SERVICE_INTERFACE",
    "type" : "String",
    "comment" : "\n     * The {@link Intent} that must be declared as handled by the service. To be supported, the\n     * service must also require the {@link android.Manifest.permission#BIND_ATTENTION_SERVICE}\n     * permission so that other applications can not abuse it.\n     ",
    "links" : [ "android.Manifest.permission#BIND_ATTENTION_SERVICE", "android.content.Intent" ]
  }, {
    "name" : "ATTENTION_SUCCESS_ABSENT",
    "type" : "int",
    "comment" : " Attention is absent. ",
    "links" : [ ]
  }, {
    "name" : "ATTENTION_SUCCESS_PRESENT",
    "type" : "int",
    "comment" : " Attention is present. ",
    "links" : [ ]
  }, {
    "name" : "ATTENTION_FAILURE_UNKNOWN",
    "type" : "int",
    "comment" : " Unknown reasons for failing to determine the attention. ",
    "links" : [ ]
  }, {
    "name" : "ATTENTION_FAILURE_CANCELLED",
    "type" : "int",
    "comment" : " Request has been cancelled. ",
    "links" : [ ]
  }, {
    "name" : "ATTENTION_FAILURE_PREEMPTED",
    "type" : "int",
    "comment" : " Preempted by other client. ",
    "links" : [ ]
  }, {
    "name" : "ATTENTION_FAILURE_TIMED_OUT",
    "type" : "int",
    "comment" : " Request timed out. ",
    "links" : [ ]
  }, {
    "name" : "ATTENTION_FAILURE_CAMERA_PERMISSION_ABSENT",
    "type" : "int",
    "comment" : " Camera permission is not granted. ",
    "links" : [ ]
  }, {
    "name" : "PROXIMITY_UNKNOWN",
    "type" : "double",
    "comment" : " Usersâ€™ proximity is unknown (proximity sensing was inconclusive and is unsupported). ",
    "links" : [ ]
  }, {
    "name" : "mBinder",
    "type" : "IAttentionService.Stub",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final IBinder onBind(@NonNull Intent intent)",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCheckAttention(@NonNull AttentionCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Checks the user attention and calls into the provided callback.\n     *\n     * @param callback the callback to return the result to\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCancelAttentionCheck(@NonNull AttentionCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Cancels pending work for a given callback.\n     *\n     * Implementation must call back with a failure code of {@link #ATTENTION_FAILURE_CANCELLED}.\n     ",
    "links" : [ "#ATTENTION_FAILURE_CANCELLED" ]
  }, {
    "name" : "public void onStartProximityUpdates(@NonNull ProximityUpdateCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Requests the continuous updates of proximity signal via the provided callback,\n     * until {@link #onStopProximityUpdates} is called.\n     *\n     * @param callback the callback to return the result to\n     ",
    "links" : [ "#onStopProximityUpdates" ]
  }, {
    "name" : "public void onStopProximityUpdates()",
    "returnType" : "void",
    "comment" : "\n     * Requests to stop providing continuous updates until the callback is registered.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public final IBinder onBind(@NonNull Intent intent)", "public abstract void onCheckAttention(@NonNull AttentionCallback callback)", "public abstract void onCancelAttentionCheck(@NonNull AttentionCallback callback)", "public void onStartProximityUpdates(@NonNull ProximityUpdateCallback callback)", "public void onStopProximityUpdates()" ],
  "variableNames" : [ "LOG_TAG", "SERVICE_INTERFACE", "ATTENTION_SUCCESS_ABSENT", "ATTENTION_SUCCESS_PRESENT", "ATTENTION_FAILURE_UNKNOWN", "ATTENTION_FAILURE_CANCELLED", "ATTENTION_FAILURE_PREEMPTED", "ATTENTION_FAILURE_TIMED_OUT", "ATTENTION_FAILURE_CAMERA_PERMISSION_ABSENT", "PROXIMITY_UNKNOWN", "mBinder" ]
}