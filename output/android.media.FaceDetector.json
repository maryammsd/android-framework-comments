{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/FaceDetector.java",
  "packageName" : "android.media",
  "className" : "FaceDetector",
  "comment" : "\n * Identifies the faces of people in a \n * {@link android.graphics.Bitmap} graphic object.\n ",
  "links" : [ "android.graphics.Bitmap" ],
  "variables" : [ {
    "name" : "sInitialized",
    "type" : "boolean",
    "comment" : "\n     * We use a class initializer to allow the native code to cache some\n     * field offsets.\n     ",
    "links" : [ ]
  }, {
    "name" : "mFD",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSDK",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDCR",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxFaces",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBWBuffer",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int findFaces(Bitmap bitmap, Face[] faces)",
    "returnType" : "int",
    "comment" : "\n     * Finds all the faces found in a given {@link android.graphics.Bitmap}. \n     * The supplied array is populated with {@link FaceDetector.Face}s for each\n     * face found. The bitmap must be in 565 format (for now).\n     * \n     * @param bitmap the {@link android.graphics.Bitmap} graphic to be analyzed\n     * @param faces  an array in which to place all found \n     *               {@link FaceDetector.Face}s. The array must be sized equal\n     *               to the <var>maxFaces</var> value set at initialization\n     * @return the number of faces found\n     * @throws IllegalArgumentException if the Bitmap dimensions don't match\n     *               the dimensions defined at initialization or the given array \n     *               is not sized equal to the <var>maxFaces</var> value defined\n     *               at initialization\n     ",
    "links" : [ "android.graphics.Bitmap", "FaceDetector.Face" ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : " no user serviceable parts here ... ",
    "links" : [ ]
  }, {
    "name" : "private static native void nativeClassInit()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int fft_initialize(int width, int height, int maxFaces)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native int fft_detect(Bitmap bitmap)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native void fft_get_face(Face face, int i)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native void fft_destroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int findFaces(Bitmap bitmap, Face[] faces)", "protected void finalize() throws Throwable", "private static native void nativeClassInit()", "private native int fft_initialize(int width, int height, int maxFaces)", "private native int fft_detect(Bitmap bitmap)", "private native void fft_get_face(Face face, int i)", "private native void fft_destroy()" ],
  "variableNames" : [ "sInitialized", "mFD", "mSDK", "mDCR", "mWidth", "mHeight", "mMaxFaces", "mBWBuffer" ]
}