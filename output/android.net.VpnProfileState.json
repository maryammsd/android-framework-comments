{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/VpnProfileState.java",
  "packageName" : "android.net",
  "className" : "VpnProfileState",
  "comment" : "\n * Describe the state of VPN.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STATE_DISCONNECTED",
    "type" : "int",
    "comment" : " The VPN has not been started, or some other VPN is active. ",
    "links" : [ ]
  }, {
    "name" : "STATE_CONNECTING",
    "type" : "int",
    "comment" : " The VPN is attempting to connect, potentially after a failure. ",
    "links" : [ ]
  }, {
    "name" : "STATE_CONNECTED",
    "type" : "int",
    "comment" : " The VPN was established successfully. ",
    "links" : [ ]
  }, {
    "name" : "STATE_FAILED",
    "type" : "int",
    "comment" : " A non-recoverable error has occurred, and will not be retried. ",
    "links" : [ ]
  }, {
    "name" : "mState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionKey",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAlwaysOn",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLockdown",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<VpnProfileState>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getState()",
    "returnType" : "int",
    "comment" : "\n     * Returns the state of the Platform VPN\n     *\n     * <p>This state represents the internal connection state of the VPN. This state may diverge\n     * from the VPN Network's state during error and recovery handling.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSessionId()",
    "returnType" : "String",
    "comment" : "\n     * Retrieves the Session Key\n     *\n     * <p>The session key is an ephemeral key uniquely identifying the session for a Platform VPN.\n     * The lifetime of this key is tied to the lifetime of the VPN session. In other words,\n     * reprovisioning of the VPN profile, restarting of the device, or manually restarting the\n     * platform VPN session will result in a new VPN session, and a new key.\n     *\n     * @return the unique key for the platform VPN session, or null if it is not running.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isAlwaysOn()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns the always-on status of the PlatformVpnProfile.\n     *\n     * <p>If the PlatformVpnProfile is set to be running in always-on mode, the system will ensure\n     * that the profile is always started, and restarting it when necessary (e.g. after reboot).\n     *\n     * <p>Always-on can be set by an appropriately privileged user via the Settings VPN menus, or by\n     * the Device Policy Manager app programmatically.\n     *\n     * See DevicePolicyManager#setAlwaysOnVpnPackage(ComponentName, String, boolean, Set)\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isLockdownEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns the lockdown mode status of the PlatformVpnProfile.\n     *\n     * <p>In lockdown mode, the system will ensure that apps are not allowed to bypass the VPN,\n     * including during startup or failure of the VPN.\n     *\n     * <p>Lockdown mode can be set by an appropriately privileged user via the Settings VPN menus,\n     * or by the Device Policy Manager app programmatically.\n     *\n     * See DevicePolicyManager#setAlwaysOnVpnPackage(ComponentName, String, boolean, Set)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * Implement the Parcelable interface\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Implement the Parcelable interface\n     ",
    "links" : [ ]
  }, {
    "name" : "private String convertStateToString(@State int state)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getState()", "public String getSessionId()", "public boolean isAlwaysOn()", "public boolean isLockdownEnabled()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)", "private String convertStateToString(@State int state)", "public String toString()", "public boolean equals(@Nullable Object obj)", "public int hashCode()" ],
  "variableNames" : [ "STATE_DISCONNECTED", "STATE_CONNECTING", "STATE_CONNECTED", "STATE_FAILED", "mState", "mSessionKey", "mAlwaysOn", "mLockdown", "CREATOR" ]
}