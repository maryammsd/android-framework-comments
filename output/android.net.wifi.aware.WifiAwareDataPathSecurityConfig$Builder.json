{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/aware/WifiAwareDataPathSecurityConfig.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "Builder",
  "comment" : "\n     * A builder class for a Wi-Fi Aware data-path security config to encrypt an Aware connection.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mPmk",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPassphrase",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPmkId",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCipherSuite",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setPskPassphrase(@NonNull String pskPassphrase)",
    "returnType" : "Builder",
    "comment" : "\n         * Configure the PSK Passphrase for the Wi-Fi Aware connection being requested. For shared\n         * key cipher suite {@link Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_SK_128} and\n         * {@link Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_SK_256}, either passphrase or PMK must\n         * be set.\n         *\n         * @param pskPassphrase The passphrase to be used to encrypt the link. Alternatively, use\n         *                      the {@link #setPmk(byte[])} to specify a PMK for shared key cipher\n         *                      suite.\n         * @return the current {@link Builder} builder, enabling chaining of builder methods.\n         ",
    "links" : [ "android.net.wifi.aware.Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_SK_128", "android.net.wifi.aware.Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_SK_256", "Builder", "#setPmk(byte" ]
  }, {
    "name" : "public Builder setPmk(@NonNull byte[] pmk)",
    "returnType" : "Builder",
    "comment" : "\n         * Configure the PMK for the Wi-Fi Aware connection being requested. For shared key cipher\n         * suite {@link Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_SK_128} and\n         * {@link Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_SK_256}, either passphrase or PMK must\n         * be set.\n         * For public key cipher suite {@link Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_PK_128}\n         * and {@link Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_PK_256}. Both PMK and PMKID must\n         * be set.\n         *\n         * @param pmk A PMK (pairwise master key, see IEEE 802.11i) specifying the key to use for\n         *            encrypting the data-path. Alternatively, use the\n         *            {@link #setPskPassphrase(String)} to specify a Passphrase instead for shared\n         *            key cipher suite. Use the {@link #setPmkId(byte[])} together for public key\n         *            cipher suite.\n         * @return the current {@link Builder} builder, enabling chaining of builder\n         *         methods.\n         ",
    "links" : [ "android.net.wifi.aware.Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_SK_128", "#setPmkId(byte", "android.net.wifi.aware.Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_PK_256", "android.net.wifi.aware.Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_SK_256", "Builder", "#setPskPassphrase(String)", "android.net.wifi.aware.Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_PK_128" ]
  }, {
    "name" : "public Builder setPmkId(@NonNull byte[] pmkId)",
    "returnType" : "Builder",
    "comment" : "\n         * Configure the PMKID for the Wi-Fi Aware connection being requested. For public key cipher\n         * suite {@link Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_PK_128} and\n         * {@link Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_PK_256}. both PMK and PMKID must set\n         * {@link #setPmk(byte[])}\n         *\n         * @param pmkId A PMKID (pairwise master key associated identifier, see IEEE 802.11) is\n         *              generated by Diffie-Hellman key exchange together with a Pairwise Master Key\n         *              (PMK), specifying the identifier associated to the key to use for encrypting\n         *              the data-path. Use the  {@link #setPmk(byte[])} together for public key\n         *              cipher suite.\n         * @return the current {@link Builder} builder, enabling chaining of builder\n         *         methods.\n         ",
    "links" : [ "android.net.wifi.aware.Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_PK_256", "Builder", "android.net.wifi.aware.Characteristics#WIFI_AWARE_CIPHER_SUITE_NCS_PK_128", "#setPmk(byte" ]
  }, {
    "name" : "public WifiAwareDataPathSecurityConfig build()",
    "returnType" : "WifiAwareDataPathSecurityConfig",
    "comment" : "\n         * Create a {@link WifiAwareDataPathSecurityConfig} to set in\n         * {@link WifiAwareNetworkSpecifier.Builder#setDataPathSecurityConfig(WifiAwareDataPathSecurityConfig)} to encrypt the link.\n         * @return A {@link WifiAwareDataPathSecurityConfig} to be used for encrypting the Wi-Fi\n         * Aware data-path.\n         ",
    "links" : [ "WifiAwareNetworkSpecifier.Builder#setDataPathSecurityConfig(WifiAwareDataPathSecurityConfig)", "android.net.wifi.aware.WifiAwareDataPathSecurityConfig" ]
  } ],
  "methodNames" : [ "public Builder setPskPassphrase(@NonNull String pskPassphrase)", "public Builder setPmk(@NonNull byte[] pmk)", "public Builder setPmkId(@NonNull byte[] pmkId)", "public WifiAwareDataPathSecurityConfig build()" ],
  "variableNames" : [ "mPmk", "mPassphrase", "mPmkId", "mCipherSuite" ]
}