{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/dreams/DreamActivity.java",
  "packageName" : "android.service.dreams",
  "className" : "DreamActivity",
  "comment" : "\n * The Activity used by the {@link DreamService} to draw screensaver content\n * on the screen. This activity runs in dream application's process, but is started by a\n * specialized method: {@link com.android.server.wm.ActivityTaskManagerService#startDreamActivity}.\n * Hence, it does not have to be declared in the dream application's manifest.\n *\n * We use an activity as the dream canvas, because it interacts easier with other activities on\n * the screen (compared to a hover window). However, the DreamService is in charge of the dream and\n * it receives all Window.Callbacks from its main window. Since a window can have only one callback\n * receiver, the activity will not receive any window callbacks.\n *\n * Prior to the DreamActivity, the DreamService used to work with a hovering window and give the\n * screensaver application control over that window. The DreamActivity is a replacement to that\n * hover window. Using an activity allows for better-defined interactions with the rest of the\n * activities on screen. The switch to DreamActivity should be transparent to the screensaver\n * application, i.e. the application will still use DreamService APIs and not notice that the\n * system is using an activity behind the scenes.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "EXTRA_CALLBACK",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onCreate(@Nullable Bundle bundle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onResume()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finishAndRemoveTask()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "EXTRA_CALLBACK" ],
  "methodNames" : [ "public void onCreate(@Nullable Bundle bundle)", "public void onResume()", "public void finishAndRemoveTask()" ]
}