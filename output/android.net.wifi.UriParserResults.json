{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/UriParserResults.java",
  "packageName" : "android.net.wifi",
  "className" : "UriParserResults",
  "comment" : "\n * Contains information extracted from URI\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "URI_SCHEME_ZXING_WIFI_NETWORK_CONFIG",
    "type" : "int",
    "comment" : "\n     * Return value for {@link #getUriScheme()} indicating that the URI contains\n     * a ZXing WiFi configuration.\n     ",
    "links" : [ "#getUriScheme()" ]
  }, {
    "name" : "URI_SCHEME_DPP",
    "type" : "int",
    "comment" : "\n     * Return value for {@link #getUriScheme()} indicating that the URI contains\n     * a DPP (Easy Connect) configuration.\n     ",
    "links" : [ "#getUriScheme()" ]
  }, {
    "name" : "mScheme",
    "type" : "int",
    "comment" : "\n     * URI_SCHEME_DPP for standard Wi-Fi device provision protocol;\n     * URI_SCHEME_ZXING_WIFI_NETWORK_CONFIG for ZXing reader library's Wi-Fi Network config format.\n     ",
    "links" : [ ]
  }, {
    "name" : "mPublicKey",
    "type" : "String",
    "comment" : " Public key from parsed Wi-Fi DPP URI, it is valid when mScheme is URI_SCHEME_DPP. ",
    "links" : [ ]
  }, {
    "name" : "mInformation",
    "type" : "String",
    "comment" : "\n     * Optional device specific information from the Wi-Fi DPP URI,\n     * it is valid when mScheme is URI_SCHEME_DPP\n     ",
    "links" : [ ]
  }, {
    "name" : "mWifiConfig",
    "type" : "WifiConfiguration",
    "comment" : "\n     * WifiConfiguration from parsed ZXing reader library's Wi-Fi Network config format. Valid or\n     * Not null when mScheme is URI_SCHEME_ZXING_WIFI_NETWORK_CONFIG\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<UriParserResults>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getUriScheme()",
    "returnType" : "int",
    "comment" : "\n     * The scheme described by the URI.\n     *\n     * <p>URI_SCHEME_DPP for standard Wi-Fi device provision protocol.\n     * URI_SCHEME_ZXING_WIFI_NETWORK_CONFIG for ZXing reader library's Wi-Fi Network config format.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPublicKey()",
    "returnType" : "String",
    "comment" : "\n     * The public key of the DPP (Wi-Fi Easy Connect).\n     *\n     * If {@code getUriScheme()} returns URI_SCHEME_DPP, this field contains the public key\n     * of the DPP (Wi-Fi Easy Connect). Otherwise, it is null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getInformation()",
    "returnType" : "String",
    "comment" : "\n     * The information of the DPP (Wi-Fi Easy Connect).\n     *\n     * If {@code getUriScheme()} returns URI_SCHEME_DPP, this field contains the information\n     * of the DPP (Wi-Fi Easy Connect). Otherwise, it is null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public WifiConfiguration getWifiConfiguration()",
    "returnType" : "WifiConfiguration",
    "comment" : "\n     * The WifiConfiguration of the zxing wifi network.\n     *\n     * If {@code getUriScheme()} returns URI_SCHEME_ZXING_WIFI_NETWORK_CONFIG, this field contains\n     * the WifiConfiguration of the zxing wifi network. Otherwise, it is null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getUriScheme()", "public String getPublicKey()", "public String getInformation()", "public WifiConfiguration getWifiConfiguration()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public boolean equals(Object o)", "public int hashCode()" ],
  "variableNames" : [ "URI_SCHEME_ZXING_WIFI_NETWORK_CONFIG", "URI_SCHEME_DPP", "mScheme", "mPublicKey", "mInformation", "mWifiConfig", "CREATOR" ]
}