{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/text/CollationKey.java",
  "packageName" : "java.text",
  "className" : "CollationKey",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "source",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract int compareTo(CollationKey target)",
    "returnType" : "int",
    "comment" : "\n     * Compare this CollationKey to the target CollationKey. The collation rules of the\n     * Collator object which created these keys are applied. <strong>Note:</strong>\n     * CollationKeys created by different Collators can not be compared.\n     * @param target target CollationKey\n     * @return Returns an integer value. Value is less than zero if this is less\n     * than target, value is zero if this and target are equal and value is greater than\n     * zero if this is greater than target.\n     * @see java.text.Collator#compare\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSourceString()",
    "returnType" : "String",
    "comment" : "\n     * Returns the String that this CollationKey represents.\n     *\n     * @return the source string of this CollationKey\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract byte[] toByteArray()",
    "returnType" : "byte[]",
    "comment" : "\n     * Converts the CollationKey to a sequence of bits. If two CollationKeys\n     * could be legitimately compared, then one could compare the byte arrays\n     * for each of those keys to obtain the same result.  Byte arrays are\n     * organized most significant byte first.\n     *\n     * @return a byte array representation of the CollationKey\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract int compareTo(CollationKey target)", "public String getSourceString()", "public abstract byte[] toByteArray()" ],
  "variableNames" : [ "source" ]
}