{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/Editor.java",
  "packageName" : "android.widget",
  "className" : "ProcessTextIntentActionsHandler",
  "comment" : "\n     * A helper for enabling and handling \"PROCESS_TEXT\" menu actions.\n     * These allow external applications to plug into currently selected text.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mEditor",
    "type" : "Editor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextView",
    "type" : "TextView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageManager",
    "type" : "PackageManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccessibilityIntents",
    "type" : "SparseArray<Intent>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccessibilityActions",
    "type" : "SparseArray<AccessibilityAction>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSupportedActivities",
    "type" : "List<ResolveInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onInitializeMenu(Menu menu)",
    "returnType" : "void",
    "comment" : "\n         * Adds \"PROCESS_TEXT\" menu items to the specified menu.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean performMenuItemAction(MenuItem item)",
    "returnType" : "boolean",
    "comment" : "\n         * Performs a \"PROCESS_TEXT\" action if there is one associated with the specified\n         * menu item.\n         *\n         * @return True if the action was performed, false otherwise.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void initializeAccessibilityActions()",
    "returnType" : "void",
    "comment" : "\n         * Initializes and caches \"PROCESS_TEXT\" accessibility actions.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo nodeInfo)",
    "returnType" : "void",
    "comment" : "\n         * Adds \"PROCESS_TEXT\" accessibility actions to the specified accessibility node info.\n         * NOTE: This needs a prior call to {@link #initializeAccessibilityActions()} to make the\n         * latest accessibility actions available for this call.\n         ",
    "links" : [ "#initializeAccessibilityActions()" ]
  }, {
    "name" : "public boolean performAccessibilityAction(int actionId)",
    "returnType" : "boolean",
    "comment" : "\n         * Performs a \"PROCESS_TEXT\" action if there is one associated with the specified\n         * accessibility action id.\n         *\n         * @return True if the action was performed, false otherwise.\n         ",
    "links" : [ ]
  }, {
    "name" : "private boolean fireIntent(Intent intent)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void loadSupportedActivities()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean isSupportedActivity(ResolveInfo info)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Intent createProcessTextIntentForResolveInfo(ResolveInfo info)",
    "returnType" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private Intent createProcessTextIntent()",
    "returnType" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private CharSequence getLabel(ResolveInfo resolveInfo)",
    "returnType" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void onInitializeMenu(Menu menu)", "public boolean performMenuItemAction(MenuItem item)", "public void initializeAccessibilityActions()", "public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo nodeInfo)", "public boolean performAccessibilityAction(int actionId)", "private boolean fireIntent(Intent intent)", "private void loadSupportedActivities()", "private boolean isSupportedActivity(ResolveInfo info)", "private Intent createProcessTextIntentForResolveInfo(ResolveInfo info)", "private Intent createProcessTextIntent()", "private CharSequence getLabel(ResolveInfo resolveInfo)" ],
  "variableNames" : [ "mEditor", "mTextView", "mContext", "mPackageManager", "mPackageName", "mAccessibilityIntents", "mAccessibilityActions", "mSupportedActivities" ]
}