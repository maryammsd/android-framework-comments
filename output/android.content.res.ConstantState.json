{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/res/ConstantState.java",
  "packageName" : "android.content.res",
  "className" : "ConstantState",
  "comment" : "\n * A cache class that can provide new instances of a particular resource which may change\n * depending on the current {@link Resources.Theme} or {@link Configuration}.\n * <p>\n * A constant state should be able to return a bitmask of changing configurations, which\n * identifies the type of configuration changes that may invalidate this resource. These\n * configuration changes can be obtained from {@link android.util.TypedValue}. Entities such as\n * {@link android.animation.Animator} also provide a changing configuration method to include\n * their dependencies (e.g. An AnimatorSet's changing configuration is the union of the\n * changing configurations of each Animator in the set)\n * @hide\n ",
  "links" : [ "android.util.TypedValue", "android.content.res.Configuration", "android.animation.Animator", "Resources.Theme" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract int getChangingConfigurations()",
    "returnType" : "int",
    "comment" : "\n     * Return a bit mask of configuration changes that will impact\n     * this resource (and thus require completely reloading it).\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract T newInstance()",
    "returnType" : "T",
    "comment" : "\n     * Create a new instance without supplying resources the caller\n     * is running in.\n     ",
    "links" : [ ]
  }, {
    "name" : "public T newInstance(Resources res)",
    "returnType" : "T",
    "comment" : "\n     * Create a new instance from its constant state.  This\n     * must be implemented for resources that change based on the target\n     * density of their caller (that is depending on whether it is\n     * in compatibility mode).\n     ",
    "links" : [ ]
  }, {
    "name" : "public T newInstance(Resources res, Resources.Theme theme)",
    "returnType" : "T",
    "comment" : "\n     * Create a new instance from its constant state.  This must be\n     * implemented for resources that can have a theme applied.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract int getChangingConfigurations()", "public abstract T newInstance()", "public T newInstance(Resources res)", "public T newInstance(Resources res, Resources.Theme theme)" ],
  "variableNames" : [ ]
}