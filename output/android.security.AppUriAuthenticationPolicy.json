{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/AppUriAuthenticationPolicy.java",
  "packageName" : "android.security",
  "className" : "AppUriAuthenticationPolicy",
  "comment" : "\n * The app-URI authentication policy is set by the credential management app. This policy determines\n * which alias for a private key and certificate pair should be used for authentication.\n * <p>\n * The authentication policy should be added as a parameter when calling\n * {@link KeyChain#createManageCredentialsIntent}.\n * <p>\n * Example:\n * <pre>{@code\n *     AppUriAuthenticationPolicy authenticationPolicy = new AppUriAuthenticationPolicy.Builder()\n *              .addAppAndUriMapping(\"com.test.pkg\", testUri, \"testAlias\")\n *              .addAppAndUriMapping(\"com.test2.pkg\", testUri1, \"testAlias2\")\n *              .addAppAndUriMapping(\"com.test2.pkg\", testUri2, \"testAlias2\")\n *              .build();\n *     Intent requestIntent = KeyChain.createManageCredentialsIntent(authenticationPolicy);\n * }</pre>\n * <p>\n ",
  "links" : [ "android.security.KeyChain#createManageCredentialsIntent" ],
  "variables" : [ {
    "name" : "KEY_AUTHENTICATION_POLICY_APP_TO_URIS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "KEY_AUTHENTICATION_POLICY_APP",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAppToUris",
    "type" : "Map<String, UrisToAliases>",
    "comment" : "\n     * The mappings from an app and list of URIs to a list of aliases, which will be used for\n     * authentication.\n     * <p>\n     * appPackageName -> uri -> alias\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AppUriAuthenticationPolicy>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Map<String, Map<Uri, String>> getAppAndUriMappings()",
    "returnType" : "Map<String, Map<Uri, String>>",
    "comment" : "\n     * Return the authentication policy mapping, which determines which alias for a private key\n     * and certificate pair should be used for authentication.\n     * <p>\n     * appPackageName -> uri -> alias\n     ",
    "links" : [ ]
  }, {
    "name" : "public static AppUriAuthenticationPolicy readFromXml(@NonNull XmlPullParser parser) throws IOException, XmlPullParserException",
    "returnType" : "AppUriAuthenticationPolicy",
    "comment" : "\n     * Restore a previously saved {@link AppUriAuthenticationPolicy} from XML.\n     *\n     * @hide\n     ",
    "links" : [ "android.security.AppUriAuthenticationPolicy" ]
  }, {
    "name" : "public void writeToXml(@NonNull XmlSerializer out) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Save the {@link AppUriAuthenticationPolicy} to XML.\n     *\n     * @hide\n     ",
    "links" : [ "android.security.AppUriAuthenticationPolicy" ]
  }, {
    "name" : "public Set<String> getAliases()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Get the set of aliases found in the policy.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public Map<String, Map<Uri, String>> getAppAndUriMappings()", "public static AppUriAuthenticationPolicy readFromXml(@NonNull XmlPullParser parser) throws IOException, XmlPullParserException", "public void writeToXml(@NonNull XmlSerializer out) throws IOException", "public Set<String> getAliases()", "public boolean equals(Object obj)", "public int hashCode()" ],
  "variableNames" : [ "KEY_AUTHENTICATION_POLICY_APP_TO_URIS", "KEY_AUTHENTICATION_POLICY_APP", "mAppToUris", "CREATOR" ]
}