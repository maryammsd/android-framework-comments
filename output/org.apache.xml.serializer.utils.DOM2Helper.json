{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/serializer/utils/DOM2Helper.java",
  "packageName" : "org.apache.xml.serializer.utils",
  "className" : "DOM2Helper",
  "comment" : "\n * This class provides a DOM level 2 \"helper\", which provides services currently \n * not provided be the DOM standard.\n * \n * This class is a copy of the one in org.apache.xml.utils. \n * It exists to cut the serializers dependancy on that package.\n * \n * The differences from the original class are:\n * it doesn't extend DOMHelper, not depricated, \n * dropped method isNodeAfter(Node node1, Node node2)\n * dropped method parse(InputSource)\n * dropped method supportSAX()\n * dropped method setDocument(doc) \n * dropped method checkNode(Node)\n * dropped method getDocument()\n * dropped method getElementByID(String id, Document doc)\n * dropped method getParentOfNode(Node node)\n * dropped field Document m_doc;\n * made class non-public\n *   \n * This class is not a public API, it is only public because it is \n * used in org.apache.xml.serializer.\n * \n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public String getLocalNameOfNode(Node n)",
    "returnType" : "String",
    "comment" : "\n   * Returns the local name of the given node, as defined by the\n   * XML Namespaces specification. This is prepared to handle documents\n   * built using DOM Level 1 methods by falling back upon explicitly\n   * parsing the node name.\n   *\n   * @param n Node to be examined\n   *\n   * @return String containing the local name, or null if the node\n   * was not assigned a Namespace.\n   ",
    "links" : [ ]
  }, {
    "name" : "private String getLocalNameOfNodeFallback(Node n)",
    "returnType" : "String",
    "comment" : "\n   * Returns the local name of the given node. If the node's name begins\n   * with a namespace prefix, this is the part after the colon; otherwise\n   * it's the full node name.\n   * \n   * This method is copied from org.apache.xml.utils.DOMHelper\n   *\n   * @param n the node to be examined.\n   *\n   * @return String containing the Local Name\n   ",
    "links" : [ ]
  }, {
    "name" : "public String getNamespaceOfNode(Node n)",
    "returnType" : "String",
    "comment" : "\n   * Returns the Namespace Name (Namespace URI) for the given node.\n   * In a Level 2 DOM, you can ask the node itself. Note, however, that\n   * doing so conflicts with our decision in getLocalNameOfNode not\n   * to trust the that the DOM was indeed created using the Level 2\n   * methods. If Level 1 methods were used, these two functions will\n   * disagree with each other.\n   * <p>\n   * TODO: Reconcile with getLocalNameOfNode.\n   *\n   * @param n Node to be examined\n   *\n   * @return String containing the Namespace URI bound to this DOM node\n   * at the time the Node was created.\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getLocalNameOfNode(Node n)", "private String getLocalNameOfNodeFallback(Node n)", "public String getNamespaceOfNode(Node n)" ],
  "variableNames" : [ ]
}