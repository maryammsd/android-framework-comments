{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/content/pm/ConfigurationInfo.java",
  "packageName" : "android.content.pm",
  "className" : "ConfigurationInfo",
  "comment" : "\n * Information you can retrieve about hardware configuration preferences\n * declared by an application. This corresponds to information collected from the\n * AndroidManifest.xml's &lt;uses-configuration&gt; and &lt;uses-feature&gt; tags.\n ",
  "variables" : [ {
    "name" : "reqTouchScreen",
    "type" : "int",
    "comment" : "\n     * The kind of touch screen attached to the device.\n     * One of: {@link android.content.res.Configuration#TOUCHSCREEN_NOTOUCH},\n     * {@link android.content.res.Configuration#TOUCHSCREEN_STYLUS}, \n     * {@link android.content.res.Configuration#TOUCHSCREEN_FINGER}. \n     ",
    "links" : [ "android.content.res.Configuration#TOUCHSCREEN_FINGER", "android.content.res.Configuration#TOUCHSCREEN_NOTOUCH", "android.content.res.Configuration#TOUCHSCREEN_STYLUS" ]
  }, {
    "name" : "reqKeyboardType",
    "type" : "int",
    "comment" : "\n     * Application's input method preference.\n     * One of: {@link android.content.res.Configuration#KEYBOARD_UNDEFINED},\n     * {@link android.content.res.Configuration#KEYBOARD_NOKEYS},\n     * {@link android.content.res.Configuration#KEYBOARD_QWERTY},\n     * {@link android.content.res.Configuration#KEYBOARD_12KEY}\n     ",
    "links" : [ "android.content.res.Configuration#KEYBOARD_QWERTY", "android.content.res.Configuration#KEYBOARD_NOKEYS", "android.content.res.Configuration#KEYBOARD_UNDEFINED", "android.content.res.Configuration#KEYBOARD_12KEY" ]
  }, {
    "name" : "reqNavigation",
    "type" : "int",
    "comment" : "\n     * A flag indicating whether any keyboard is available.\n     * one of: {@link android.content.res.Configuration#NAVIGATION_UNDEFINED},\n     * {@link android.content.res.Configuration#NAVIGATION_DPAD}, \n     * {@link android.content.res.Configuration#NAVIGATION_TRACKBALL},\n     * {@link android.content.res.Configuration#NAVIGATION_WHEEL}\n     ",
    "links" : [ "android.content.res.Configuration#NAVIGATION_DPAD", "android.content.res.Configuration#NAVIGATION_TRACKBALL", "android.content.res.Configuration#NAVIGATION_UNDEFINED", "android.content.res.Configuration#NAVIGATION_WHEEL" ]
  }, {
    "name" : "INPUT_FEATURE_HARD_KEYBOARD",
    "type" : "int",
    "comment" : "\n     * Value for {@link #reqInputFeatures}: if set, indicates that the application\n     * requires a hard keyboard\n     ",
    "links" : [ "#reqInputFeatures" ]
  }, {
    "name" : "INPUT_FEATURE_FIVE_WAY_NAV",
    "type" : "int",
    "comment" : "\n     * Value for {@link #reqInputFeatures}: if set, indicates that the application\n     * requires a five way navigation device\n     ",
    "links" : [ "#reqInputFeatures" ]
  }, {
    "name" : "reqInputFeatures",
    "type" : "int",
    "comment" : "\n     * Flags associated with the input features.  Any combination of\n     * {@link #INPUT_FEATURE_HARD_KEYBOARD},\n     * {@link #INPUT_FEATURE_FIVE_WAY_NAV}\n     ",
    "links" : [ "#INPUT_FEATURE_HARD_KEYBOARD", "#INPUT_FEATURE_FIVE_WAY_NAV" ]
  }, {
    "name" : "GL_ES_VERSION_UNDEFINED",
    "type" : "int",
    "comment" : "\n     * Default value for {@link #reqGlEsVersion};\n     ",
    "links" : [ "#reqGlEsVersion" ]
  }, {
    "name" : "reqGlEsVersion",
    "type" : "int",
    "comment" : "\n     * The GLES version used by an application. The upper order 16 bits represent the\n     * major version and the lower order 16 bits the minor version.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<ConfigurationInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int parcelableFlags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getGlEsVersion()",
    "returnType" : "String",
    "comment" : "\n     * This method extracts the major and minor version of reqGLEsVersion attribute\n     * and returns it as a string. Say reqGlEsVersion value of 0x00010002 is returned\n     * as 1.2\n     * @return String representation of the reqGlEsVersion attribute\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "reqTouchScreen", "reqKeyboardType", "reqNavigation", "INPUT_FEATURE_HARD_KEYBOARD", "INPUT_FEATURE_FIVE_WAY_NAV", "reqInputFeatures", "GL_ES_VERSION_UNDEFINED", "reqGlEsVersion", "CREATOR" ],
  "methodNames" : [ "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int parcelableFlags)", "public String getGlEsVersion()" ]
}