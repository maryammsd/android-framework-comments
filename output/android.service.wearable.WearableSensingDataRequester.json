{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/wearable/WearableSensingDataRequester.java",
  "packageName" : "android.service.wearable",
  "className" : "WearableSensingDataRequester",
  "comment" : "\n * An interface to request wearable sensing data.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STATUS_UNKNOWN",
    "type" : "int",
    "comment" : " An unknown status. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_SUCCESS",
    "type" : "int",
    "comment" : " The value of the status code that indicates success. ",
    "links" : [ ]
  }, {
    "name" : "STATUS_OBSERVER_CANCELLED",
    "type" : "int",
    "comment" : "\n     * The value of the status code that indicates the request is rejected because the data request\n     * observer PendingIntent has been cancelled.\n     ",
    "links" : [ ]
  }, {
    "name" : "STATUS_TOO_LARGE",
    "type" : "int",
    "comment" : "\n     * The value of the status code that indicates the request is rejected because it is larger than\n     * {@link WearableSensingDataRequest#getMaxRequestSize()}.\n     ",
    "links" : [ "android.app.wearable.WearableSensingDataRequest#getMaxRequestSize()" ]
  }, {
    "name" : "STATUS_TOO_FREQUENT",
    "type" : "int",
    "comment" : "\n     * The value of the status code that indicates the request is rejected because it exceeds the\n     * rate limit. See {@link WearableSensingDataRequest#getRateLimit()}.\n     ",
    "links" : [ "android.app.wearable.WearableSensingDataRequest#getRateLimit()" ]
  } ],
  "methods" : [ {
    "name" : " void requestData(@NonNull WearableSensingDataRequest dataRequest, @NonNull @StatusCode Consumer<Integer> statusConsumer)",
    "returnType" : "void",
    "comment" : "\n     * Sends a data request. See {@link WearableSensingService#onDataRequestObserverRegistered(int,\n     * String, WearableSensingDataRequester, Consumer)} for size and rate restrictions on data\n     * requests.\n     *\n     * @param dataRequest The data request to send.\n     * @param statusConsumer A consumer that handles the status code for the data request.\n     ",
    "links" : [ "android.service.wearable.WearableSensingService#onDataRequestObserverRegistered(int" ]
  } ],
  "methodNames" : [ " void requestData(@NonNull WearableSensingDataRequest dataRequest, @NonNull @StatusCode Consumer<Integer> statusConsumer)" ],
  "variableNames" : [ "STATUS_UNKNOWN", "STATUS_SUCCESS", "STATUS_OBSERVER_CANCELLED", "STATUS_TOO_LARGE", "STATUS_TOO_FREQUENT" ]
}