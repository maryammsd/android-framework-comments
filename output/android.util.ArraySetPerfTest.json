{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/ArraySetPerfTest.java",
  "packageName" : "android.util",
  "className" : "ArraySetPerfTest",
  "comment" : "",
  "variables" : [ {
    "name" : "NUM_ITERATIONS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SET_SIZE_SMALL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SET_SIZE_LARGE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPerfStatusReporter",
    "type" : "PerfStatusReporter",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void testValueAt_InBounds()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void testValueAt_OutOfBounds_Negative()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void testValueAt_OutOfBounds_EdgeCase()",
    "returnType" : "void",
    "comment" : "\n     * Tests the case where ArraySet could index into its array even though the index is out of\n     * bounds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void testRemoveIf_Small_Base()",
    "returnType" : "void",
    "comment" : "\n     * This is the same code as testRemoveIf_Small_* without the removeIf in order to measure\n     * the performance of the rest of the code in the loop.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void testRemoveIf_Small_RemoveNothing()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void testRemoveIf_Small_RemoveAll()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void testRemoveIf_Small_RemoveHalf()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void testRemoveIf_Large_Base()",
    "returnType" : "void",
    "comment" : "\n     * This is the same code as testRemoveIf_Large_* without the removeIf in order to measure\n     * the performance of the rest of the code in the loop.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void testRemoveIf_Large_RemoveNothing()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void testRemoveIf_Large_RemoveAll()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void testRemoveIf_Large_RemoveHalf()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "NUM_ITERATIONS", "SET_SIZE_SMALL", "SET_SIZE_LARGE", "mPerfStatusReporter" ],
  "methodNames" : [ "public void testValueAt_InBounds()", "public void testValueAt_OutOfBounds_Negative()", "public void testValueAt_OutOfBounds_EdgeCase()", "public void testRemoveIf_Small_Base()", "public void testRemoveIf_Small_RemoveNothing()", "public void testRemoveIf_Small_RemoveAll()", "public void testRemoveIf_Small_RemoveHalf()", "public void testRemoveIf_Large_Base()", "public void testRemoveIf_Large_RemoveNothing()", "public void testRemoveIf_Large_RemoveAll()", "public void testRemoveIf_Large_RemoveHalf()" ]
}