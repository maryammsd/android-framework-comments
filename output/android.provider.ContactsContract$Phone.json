{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/ContactsContract.java",
  "packageName" : "android.provider",
  "className" : "Phone",
  "comment" : "\n         * <p>\n         * A data kind representing a telephone number.\n         * </p>\n         * <p>\n         * You can use all columns defined for {@link ContactsContract.Data} as\n         * well as the following aliases.\n         * </p>\n         * <h2>Column aliases</h2>\n         * <table class=\"jd-sumtable\">\n         * <tr>\n         * <th>Type</th>\n         * <th>Alias</th><th colspan='2'>Data column</th>\n         * </tr>\n         * <tr>\n         * <td>String</td>\n         * <td>{@link #NUMBER}</td>\n         * <td>{@link #DATA1}</td>\n         * <td></td>\n         * </tr>\n         * <tr>\n         * <td>int</td>\n         * <td>{@link #TYPE}</td>\n         * <td>{@link #DATA2}</td>\n         * <td>Allowed values are:\n         * <p>\n         * <ul>\n         * <li>{@link #TYPE_CUSTOM}. Put the actual type in {@link #LABEL}.</li>\n         * <li>{@link #TYPE_HOME}</li>\n         * <li>{@link #TYPE_MOBILE}</li>\n         * <li>{@link #TYPE_WORK}</li>\n         * <li>{@link #TYPE_FAX_WORK}</li>\n         * <li>{@link #TYPE_FAX_HOME}</li>\n         * <li>{@link #TYPE_PAGER}</li>\n         * <li>{@link #TYPE_OTHER}</li>\n         * <li>{@link #TYPE_CALLBACK}</li>\n         * <li>{@link #TYPE_CAR}</li>\n         * <li>{@link #TYPE_COMPANY_MAIN}</li>\n         * <li>{@link #TYPE_ISDN}</li>\n         * <li>{@link #TYPE_MAIN}</li>\n         * <li>{@link #TYPE_OTHER_FAX}</li>\n         * <li>{@link #TYPE_RADIO}</li>\n         * <li>{@link #TYPE_TELEX}</li>\n         * <li>{@link #TYPE_TTY_TDD}</li>\n         * <li>{@link #TYPE_WORK_MOBILE}</li>\n         * <li>{@link #TYPE_WORK_PAGER}</li>\n         * <li>{@link #TYPE_ASSISTANT}</li>\n         * <li>{@link #TYPE_MMS}</li>\n         * </ul>\n         * </p>\n         * </td>\n         * </tr>\n         * <tr>\n         * <td>String</td>\n         * <td>{@link #LABEL}</td>\n         * <td>{@link #DATA3}</td>\n         * <td></td>\n         * </tr>\n         * </table>\n         ",
  "links" : [ "#TYPE_ISDN", "#TYPE_COMPANY_MAIN", "#NUMBER", "#TYPE", "#TYPE_FAX_HOME", "#TYPE_MAIN", "#TYPE_WORK_MOBILE", "#TYPE_WORK_PAGER", "#DATA3", "#TYPE_ASSISTANT", "#DATA1", "#DATA2", "#TYPE_HOME", "#TYPE_MMS", "#LABEL", "#TYPE_CAR", "ContactsContract.Data", "#TYPE_CUSTOM", "#TYPE_FAX_WORK", "#TYPE_OTHER_FAX", "#TYPE_WORK", "#TYPE_RADIO", "#TYPE_TTY_TDD", "#TYPE_PAGER", "#TYPE_MOBILE", "#TYPE_CALLBACK", "#TYPE_TELEX", "#TYPE_OTHER" ],
  "variables" : [ {
    "name" : "CONTENT_ITEM_TYPE",
    "type" : "String",
    "comment" : " MIME type used when storing this in data table. ",
    "links" : [ ]
  }, {
    "name" : "CONTENT_TYPE",
    "type" : "String",
    "comment" : "\n             * The MIME type of {@link #CONTENT_URI} providing a directory of\n             * phones.\n             ",
    "links" : [ "#CONTENT_URI" ]
  }, {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n             * The content:// style URI for all data records of the\n             * {@link #CONTENT_ITEM_TYPE} MIME type, combined with the\n             * associated raw contact and aggregate contact data.\n             ",
    "links" : [ "#CONTENT_ITEM_TYPE" ]
  }, {
    "name" : "ENTERPRISE_CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n             * URI used for getting all data records of the {@link #CONTENT_ITEM_TYPE} MIME type,\n             * combined with the associated raw contact and aggregate contact data, from both the\n             * calling user and the managed profile that is linked to it.\n             * <p>\n             * It supports the same semantics as {@link #CONTENT_URI} and returns the same\n             * columns.<br>\n             * If the device has no managed profile that is linked to the calling user, it behaves\n             * in the exact same way as {@link #CONTENT_URI}.<br>\n             * If there is a managed profile linked to the calling user, it will return merged\n             * results from both.\n             * <p>\n             * If a result is from the managed profile, the following changes are made to the data:\n             * <ul>\n             *     <li>{@link #PHOTO_THUMBNAIL_URI} and {@link #PHOTO_URI} will be rewritten to\n             *     special URIs. Use {@link ContentResolver#openAssetFileDescriptor} or its siblings\n             *     to load pictures from them.\n             *     <li>{@link #PHOTO_ID} and {@link #PHOTO_FILE_ID} will be set to null. Don't use\n             *     them.\n             *     <li>{@link #CONTACT_ID} and {@link #LOOKUP_KEY} will be replaced with artificial\n             *     values. These values will be consistent across multiple queries, but do not use\n             *     them in places that don't explicitly say they accept them. If they are used in\n             *     the {@code selection} param in {@link android.content.ContentProvider#query}, the\n             *     result is undefined.\n             *     <li>In order to tell whether a contact is from the managed profile, use\n             *     {@link ContactsContract.Contacts#isEnterpriseContactId(long)}.\n             ",
    "links" : [ "android.content.ContentProvider#query", "#PHOTO_FILE_ID", "#PHOTO_THUMBNAIL_URI", "#PHOTO_URI", "#PHOTO_ID", "#CONTACT_ID", "android.content.ContentResolver#openAssetFileDescriptor", "ContactsContract.Contacts#isEnterpriseContactId(long)", "#CONTENT_URI", "#LOOKUP_KEY", "#CONTENT_ITEM_TYPE" ]
  }, {
    "name" : "CONTENT_FILTER_URI",
    "type" : "Uri",
    "comment" : "\n             * <p>The content:// style URL for phone lookup using a filter. The filter returns\n             * records of MIME type {@link #CONTENT_ITEM_TYPE}. The filter is applied\n             * to display names as well as phone numbers. The filter argument should be passed\n             * as an additional path segment after this URI.\n             *\n             * <p class=\"caution\"><b>Caution: </b>This field doesn't sort results based on contacts\n             * frequency. For more information, see the\n             * <a href=\"/guide/topics/providers/contacts-provider#ObsoleteData\">Contacts Provider</a>\n             * page.\n             ",
    "links" : [ "#CONTENT_ITEM_TYPE" ]
  }, {
    "name" : "ENTERPRISE_CONTENT_FILTER_URI",
    "type" : "Uri",
    "comment" : "\n             * <p>It supports the similar semantics as {@link #CONTENT_FILTER_URI} and returns the\n             * same columns. This URI requires {@link ContactsContract#DIRECTORY_PARAM_KEY} in\n             * parameters, otherwise it will throw IllegalArgumentException.\n             *\n             * <p class=\"caution\"><b>Caution: </b>If you publish your app to the Google Play Store,\n             * this field doesn't sort results based on contacts frequency. For more information,\n             * see the\n             * <a href=\"/guide/topics/providers/contacts-provider#ObsoleteData\">Contacts Provider</a>\n             * page.\n             ",
    "links" : [ "#CONTENT_FILTER_URI", "android.provider.ContactsContract#DIRECTORY_PARAM_KEY" ]
  }, {
    "name" : "SEARCH_DISPLAY_NAME_KEY",
    "type" : "String",
    "comment" : "\n             * A boolean query parameter that can be used with {@link #CONTENT_FILTER_URI}.\n             * If \"1\" or \"true\", display names are searched.  If \"0\" or \"false\", display names\n             * are not searched.  Default is \"1\".\n             ",
    "links" : [ "#CONTENT_FILTER_URI" ]
  }, {
    "name" : "SEARCH_PHONE_NUMBER_KEY",
    "type" : "String",
    "comment" : "\n             * A boolean query parameter that can be used with {@link #CONTENT_FILTER_URI}.\n             * If \"1\" or \"true\", phone numbers are searched.  If \"0\" or \"false\", phone numbers\n             * are not searched.  Default is \"1\".\n             ",
    "links" : [ "#CONTENT_FILTER_URI" ]
  }, {
    "name" : "TYPE_HOME",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_MOBILE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_WORK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_FAX_WORK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_FAX_HOME",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_PAGER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_OTHER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_CALLBACK",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_CAR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_COMPANY_MAIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_ISDN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_MAIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_OTHER_FAX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_RADIO",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_TELEX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_TTY_TDD",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_WORK_MOBILE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_WORK_PAGER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_ASSISTANT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_MMS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NUMBER",
    "type" : "String",
    "comment" : "\n             * The phone number as the user entered it.\n             * <P>Type: TEXT</P>\n             ",
    "links" : [ ]
  }, {
    "name" : "NORMALIZED_NUMBER",
    "type" : "String",
    "comment" : "\n             * The phone number's E164 representation. This value can be omitted in which\n             * case the provider will try to automatically infer it.  (It'll be left null if the\n             * provider fails to infer.)\n             * If present, {@link #NUMBER} has to be set as well (it will be ignored otherwise).\n             * <P>Type: TEXT</P>\n             ",
    "links" : [ "#NUMBER" ]
  } ],
  "methods" : [ {
    "name" : "public static final CharSequence getDisplayLabel(Context context, int type, CharSequence label, CharSequence[] labelArray)",
    "returnType" : "CharSequence",
    "comment" : "\n             * @deprecated use {@link #getTypeLabel(Resources, int, CharSequence)} instead.\n             * @hide\n             ",
    "links" : [ "#getTypeLabel(Resources" ]
  }, {
    "name" : "public static final CharSequence getDisplayLabel(Context context, int type, CharSequence label)",
    "returnType" : "CharSequence",
    "comment" : "\n             * @deprecated use {@link #getTypeLabel(Resources, int, CharSequence)} instead.\n             * @hide\n             ",
    "links" : [ "#getTypeLabel(Resources" ]
  }, {
    "name" : "public static final int getTypeLabelResource(int type)",
    "returnType" : "int",
    "comment" : "\n             * Return the string resource that best describes the given\n             * {@link #TYPE}. Will always return a valid resource.\n             ",
    "links" : [ "#TYPE" ]
  }, {
    "name" : "public static final CharSequence getTypeLabel(Resources res, int type, @Nullable CharSequence label)",
    "returnType" : "CharSequence",
    "comment" : "\n             * Return a {@link CharSequence} that best describes the given type,\n             * possibly substituting the given {@link #LABEL} value\n             * for {@link #TYPE_CUSTOM}.\n             ",
    "links" : [ "#LABEL", "CharSequence", "#TYPE_CUSTOM" ]
  } ],
  "methodNames" : [ "public static final CharSequence getDisplayLabel(Context context, int type, CharSequence label, CharSequence[] labelArray)", "public static final CharSequence getDisplayLabel(Context context, int type, CharSequence label)", "public static final int getTypeLabelResource(int type)", "public static final CharSequence getTypeLabel(Resources res, int type, @Nullable CharSequence label)" ],
  "variableNames" : [ "CONTENT_ITEM_TYPE", "CONTENT_TYPE", "CONTENT_URI", "ENTERPRISE_CONTENT_URI", "CONTENT_FILTER_URI", "ENTERPRISE_CONTENT_FILTER_URI", "SEARCH_DISPLAY_NAME_KEY", "SEARCH_PHONE_NUMBER_KEY", "TYPE_HOME", "TYPE_MOBILE", "TYPE_WORK", "TYPE_FAX_WORK", "TYPE_FAX_HOME", "TYPE_PAGER", "TYPE_OTHER", "TYPE_CALLBACK", "TYPE_CAR", "TYPE_COMPANY_MAIN", "TYPE_ISDN", "TYPE_MAIN", "TYPE_OTHER_FAX", "TYPE_RADIO", "TYPE_TELEX", "TYPE_TTY_TDD", "TYPE_WORK_MOBILE", "TYPE_WORK_PAGER", "TYPE_ASSISTANT", "TYPE_MMS", "NUMBER", "NORMALIZED_NUMBER" ]
}