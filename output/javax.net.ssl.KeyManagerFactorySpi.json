{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/net/ssl/KeyManagerFactorySpi.java",
  "packageName" : "javax.net.ssl",
  "className" : "KeyManagerFactorySpi",
  "comment" : "\n * This class defines the <i>Service Provider Interface</i> (<b>SPI</b>)\n * for the <code>KeyManagerFactory</code> class.\n *\n * <p> All the abstract methods in this class must be implemented by each\n * cryptographic service provider who wishes to supply the implementation\n * of a particular key manager factory.\n *\n * @since 1.4\n * @see KeyManagerFactory\n * @see KeyManager\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "protected abstract void engineInit(KeyStore ks, char[] password) throws KeyStoreException, NoSuchAlgorithmException, UnrecoverableKeyException",
    "returnType" : "void",
    "comment" : "\n     * Initializes this factory with a source of key material.\n     *\n     * @param ks the key store or null\n     * @param password the password for recovering keys\n     * @throws KeyStoreException if this operation fails\n     * @throws NoSuchAlgorithmException if the specified algorithm is not\n     *          available from the specified provider.\n     * @throws UnrecoverableKeyException if the key cannot be recovered\n     * @see KeyManagerFactory#init(KeyStore, char[])\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract void engineInit(ManagerFactoryParameters spec) throws InvalidAlgorithmParameterException",
    "returnType" : "void",
    "comment" : "\n     * Initializes this factory with a source of key material.\n     * <P>\n     * In some cases, initialization parameters other than a keystore\n     * and password may be needed by a provider.  Users of that\n     * particular provider are expected to pass an implementation of\n     * the appropriate <CODE>ManagerFactoryParameters</CODE> as\n     * defined by the provider.  The provider can then call the\n     * specified methods in the ManagerFactoryParameters\n     * implementation to obtain the needed information.\n     *\n     * @param spec an implementation of a provider-specific parameter\n     *          specification\n     * @throws InvalidAlgorithmParameterException if there is problem\n     *          with the parameters\n     * @see KeyManagerFactory#init(ManagerFactoryParameters spec)\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract KeyManager[] engineGetKeyManagers()",
    "returnType" : "KeyManager[]",
    "comment" : "\n     * Returns one key manager for each type of key material.\n     *\n     * @return the key managers\n     * @throws IllegalStateException\n     *         if the KeyManagerFactorySpi is not initialized\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected abstract void engineInit(KeyStore ks, char[] password) throws KeyStoreException, NoSuchAlgorithmException, UnrecoverableKeyException", "protected abstract void engineInit(ManagerFactoryParameters spec) throws InvalidAlgorithmParameterException", "protected abstract KeyManager[] engineGetKeyManagers()" ],
  "variableNames" : [ ]
}