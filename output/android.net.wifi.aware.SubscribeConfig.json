{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/aware/SubscribeConfig.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "SubscribeConfig",
  "comment" : "\n * Defines the configuration of an Aware subscribe session. Built using\n * {@link SubscribeConfig.Builder}. Subscribe is done using\n * {@link WifiAwareSession#subscribe(SubscribeConfig, DiscoverySessionCallback,\n * android.os.Handler)} or\n * {@link SubscribeDiscoverySession#updateSubscribe(SubscribeConfig)}.\n ",
  "links" : [ "SubscribeConfig.Builder", "android.net.wifi.aware.SubscribeDiscoverySession#updateSubscribe(SubscribeConfig)", "android.net.wifi.aware.WifiAwareSession#subscribe(SubscribeConfig" ],
  "variables" : [ {
    "name" : "SUBSCRIBE_TYPE_PASSIVE",
    "type" : "int",
    "comment" : "\n     * Defines a passive subscribe session - a subscribe session where\n     * subscribe packets are not transmitted over-the-air and the device listens\n     * and matches to transmitted publish packets. Configuration is done using\n     * {@link SubscribeConfig.Builder#setSubscribeType(int)}.\n     ",
    "links" : [ "SubscribeConfig.Builder#setSubscribeType(int)" ]
  }, {
    "name" : "SUBSCRIBE_TYPE_ACTIVE",
    "type" : "int",
    "comment" : "\n     * Defines an active subscribe session - a subscribe session where\n     * subscribe packets are transmitted over-the-air. Configuration is done\n     * using {@link SubscribeConfig.Builder#setSubscribeType(int)}.\n     ",
    "links" : [ "SubscribeConfig.Builder#setSubscribeType(int)" ]
  }, {
    "name" : "mServiceName",
    "type" : "byte[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mServiceSpecificInfo",
    "type" : "byte[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMatchFilter",
    "type" : "byte[]",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mSubscribeType",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mTtlSec",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mEnableTerminateNotification",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMinDistanceMmSet",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMinDistanceMm",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMaxDistanceMmSet",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mMaxDistanceMm",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mEnableInstantMode",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBand",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPairingConfig",
    "type" : "AwarePairingConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSuspendable",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVendorData",
    "type" : "List<OuiKeyedData>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<SubscribeConfig>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void assertValid(Characteristics characteristics, boolean rttSupported) throws IllegalArgumentException",
    "returnType" : "void",
    "comment" : "\n     * Verifies that the contents of the SubscribeConfig are valid. Otherwise\n     * throws an IllegalArgumentException.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isInstantCommunicationModeEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Check if instant mode is enabled for this subscribe session.\n     * @see Builder#setInstantCommunicationModeEnabled(boolean, int)\n     * @return true for enabled, false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getInstantCommunicationBand()",
    "returnType" : "int",
    "comment" : "\n     * Check if enable instant mode on 5G for this subscribe session\n     *\n     * @see Builder#setInstantCommunicationModeEnabled(boolean, int)\n     * @return If instant communication mode is not enabled will return {@link\n     *     ScanResult#WIFI_BAND_24_GHZ} as default.\n     ",
    "links" : [ "android.net.wifi.ScanResult#WIFI_BAND_24_GHZ" ]
  }, {
    "name" : "public AwarePairingConfig getPairingConfig()",
    "returnType" : "AwarePairingConfig",
    "comment" : "\n     * Get the Aware Pairing config for this subscribe session\n     * @see Builder#setPairingConfig(AwarePairingConfig)\n     * @return A {@link AwarePairingConfig} specified in this config.\n     ",
    "links" : [ "android.net.wifi.aware.AwarePairingConfig" ]
  }, {
    "name" : "public boolean isSuspendable()",
    "returnType" : "boolean",
    "comment" : "\n     * Check if suspension is supported for this subscribe session.\n     * @see Builder#setSuspendable(boolean)\n     * @return true for supported, false otherwise.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<OuiKeyedData> getVendorData()",
    "returnType" : "List<OuiKeyedData>",
    "comment" : "\n     * Return the vendor-provided configuration data, if it exists. See also {@link\n     * Builder#setVendorData(List)}\n     *\n     * @return Vendor configuration data, or empty list if it does not exist.\n     * @hide\n     ",
    "links" : [ "#setVendorData(List)" ]
  } ],
  "methodNames" : [ "public String toString()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public void assertValid(Characteristics characteristics, boolean rttSupported) throws IllegalArgumentException", "public boolean isInstantCommunicationModeEnabled()", "public int getInstantCommunicationBand()", "public AwarePairingConfig getPairingConfig()", "public boolean isSuspendable()", "public List<OuiKeyedData> getVendorData()" ],
  "variableNames" : [ "SUBSCRIBE_TYPE_PASSIVE", "SUBSCRIBE_TYPE_ACTIVE", "mServiceName", "mServiceSpecificInfo", "mMatchFilter", "mSubscribeType", "mTtlSec", "mEnableTerminateNotification", "mMinDistanceMmSet", "mMinDistanceMm", "mMaxDistanceMmSet", "mMaxDistanceMm", "mEnableInstantMode", "mBand", "mPairingConfig", "mIsSuspendable", "mVendorData", "CREATOR" ]
}