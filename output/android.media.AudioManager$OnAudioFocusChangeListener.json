{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/AudioManager.java",
  "packageName" : "android.media",
  "className" : "OnAudioFocusChangeListener",
  "comment" : "\n     * Interface definition for a callback to be invoked when the audio focus of the system is\n     * updated.\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onAudioFocusChange(int focusChange)",
    "returnType" : "void",
    "comment" : "\n         * Called on the listener to notify it the audio focus for this listener has been changed.\n         * The focusChange value indicates whether the focus was gained,\n         * whether the focus was lost, and whether that loss is transient, or whether the new focus\n         * holder will hold it for an unknown amount of time.\n         * When losing focus, listeners can use the focus change information to decide what\n         * behavior to adopt when losing focus. A music player could for instance elect to lower\n         * the volume of its music stream (duck) for transient focus losses, and pause otherwise.\n         * @param focusChange the type of focus change, one of {@link AudioManager#AUDIOFOCUS_GAIN},\n         *   {@link AudioManager#AUDIOFOCUS_LOSS}, {@link AudioManager#AUDIOFOCUS_LOSS_TRANSIENT}\n         *   and {@link AudioManager#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK}.\n         ",
    "links" : [ "android.media.AudioManager#AUDIOFOCUS_LOSS_TRANSIENT", "android.media.AudioManager#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK", "android.media.AudioManager#AUDIOFOCUS_GAIN", "android.media.AudioManager#AUDIOFOCUS_LOSS" ]
  } ],
  "methodNames" : [ "public void onAudioFocusChange(int focusChange)" ],
  "variableNames" : [ ]
}