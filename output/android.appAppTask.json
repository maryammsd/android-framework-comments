{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/ActivityManager.java",
  "packageName" : "android.app",
  "className" : "AppTask",
  "comment" : "\n     * The AppTask allows you to manage your own application's tasks.\n     * See {@link android.app.ActivityManager#getAppTasks()}\n     ",
  "variables" : [ {
    "name" : "mAppTaskImpl",
    "type" : "IAppTask",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void finishAndRemoveTask()",
    "returnType" : "void",
    "comment" : "\n         * Finishes all activities in this task and removes it from the recent tasks list.\n         ",
    "links" : [ ]
  }, {
    "name" : "public RecentTaskInfo getTaskInfo()",
    "returnType" : "RecentTaskInfo",
    "comment" : "\n         * Get the RecentTaskInfo associated with this task.\n         *\n         * @return The RecentTaskInfo for this task, or null if the task no longer exists.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void moveToFront()",
    "returnType" : "void",
    "comment" : "\n         * Bring this task to the foreground.  If it contains activities, they will be\n         * brought to the foreground with it and their instances re-created if needed.\n         * If it doesn't contain activities, the root activity of the task will be\n         * re-launched.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void startActivity(Context context, Intent intent, Bundle options)",
    "returnType" : "void",
    "comment" : "\n         * Start an activity in this task.  Brings the task to the foreground.  If this task\n         * is not currently active (that is, its id < 0), then a new activity for the given\n         * Intent will be launched as the root of the task and the task brought to the\n         * foreground.  Otherwise, if this task is currently active and the Intent does not specify\n         * an activity to launch in a new task, then a new activity for the given Intent will\n         * be launched on top of the task and the task brought to the foreground.  If this\n         * task is currently active and the Intent specifies {@link Intent#FLAG_ACTIVITY_NEW_TASK}\n         * or would otherwise be launched in to a new task, then the activity not launched but\n         * this task be brought to the foreground and a new intent delivered to the top\n         * activity if appropriate.\n         *\n         * <p>In other words, you generally want to use an Intent here that does not specify\n         * {@link Intent#FLAG_ACTIVITY_NEW_TASK} or {@link Intent#FLAG_ACTIVITY_NEW_DOCUMENT},\n         * and let the system do the right thing.</p>\n         *\n         * @param intent The Intent describing the new activity to be launched on the task.\n         * @param options Optional launch options.\n         *\n         * @see Activity#startActivity(android.content.Intent, android.os.Bundle)\n         ",
    "links" : [ "Intent#FLAG_ACTIVITY_NEW_TASK", "Intent#FLAG_ACTIVITY_NEW_TASK", "Intent#FLAG_ACTIVITY_NEW_DOCUMENT" ]
  }, {
    "name" : "public void setExcludeFromRecents(boolean exclude)",
    "returnType" : "void",
    "comment" : "\n         * Modify the {@link Intent#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS} flag in the root\n         * Intent of this AppTask.\n         *\n         * @param exclude If true, {@link Intent#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS} will\n         * be set; otherwise, it will be cleared.\n         ",
    "links" : [ "Intent#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS", "Intent#FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS" ]
  } ],
  "variableNames" : [ "mAppTaskImpl" ],
  "methodNames" : [ "public void finishAndRemoveTask()", "public RecentTaskInfo getTaskInfo()", "public void moveToFront()", "public void startActivity(Context context, Intent intent, Bundle options)", "public void setExcludeFromRecents(boolean exclude)" ]
}