{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/DateIntervalInfo.java",
  "packageName" : "android.icu.text",
  "className" : "DateIntervalSink",
  "comment" : "\n     * Sink for enumerating all of the date interval skeletons.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ACCEPTED_PATTERN_LETTERS",
    "type" : "String",
    "comment" : "\n         * Accepted pattern letters:\n         * Calendar.YEAR\n         * Calendar.MONTH\n         * Calendar.DATE\n         * Calendar.AM_PM\n         * Calendar.HOUR\n         * Calendar.HOUR_OF_DAY\n         * Calendar.MINUTE\n         * Calendar.SECOND\n         * Calendar.MILLISECOND\n         ",
    "links" : [ ]
  }, {
    "name" : "dateIntervalInfo",
    "type" : "DateIntervalInfo",
    "comment" : " Output data",
    "links" : [ ]
  }, {
    "name" : "nextCalendarType",
    "type" : "String",
    "comment" : " Alias handling",
    "links" : [ ]
  }, {
    "name" : "DATE_INTERVAL_PATH_PREFIX",
    "type" : "String",
    "comment" : " Alias' path prefix and suffix.",
    "links" : [ ]
  }, {
    "name" : "DATE_INTERVAL_PATH_SUFFIX",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void put(Key key, Value value, boolean noFallback)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void processSkeletonTable(Key key, Value value)",
    "returnType" : "void",
    "comment" : " Processes the patterns for a skeleton table. ",
    "links" : [ ]
  }, {
    "name" : "public String getAndResetNextCalendarType()",
    "returnType" : "String",
    "comment" : "\n         * Returns and resets the next calendar type.\n         * @return Next calendar type\n         ",
    "links" : [ ]
  }, {
    "name" : "private String getCalendarTypeFromPath(String path)",
    "returnType" : "String",
    "comment" : "\n         * Extracts the calendar type from the path\n         * @param path\n         * @return Calendar Type\n         ",
    "links" : [ ]
  }, {
    "name" : "private CharSequence validateAndProcessPatternLetter(CharSequence patternLetter)",
    "returnType" : "CharSequence",
    "comment" : "\n         * Processes the pattern letter\n         * @param patternLetter\n         * @return Pattern letter\n         ",
    "links" : [ ]
  }, {
    "name" : "private void setIntervalPatternIfAbsent(String currentSkeleton, String lrgDiffCalUnit, Value intervalPattern)",
    "returnType" : "void",
    "comment" : "\n         * Stores the interval pattern for the current skeleton in the internal data structure\n         * if it's not present.\n         * @param lrgDiffCalUnit\n         * @param intervalPattern\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void put(Key key, Value value, boolean noFallback)", "public void processSkeletonTable(Key key, Value value)", "public String getAndResetNextCalendarType()", "private String getCalendarTypeFromPath(String path)", "private CharSequence validateAndProcessPatternLetter(CharSequence patternLetter)", "private void setIntervalPatternIfAbsent(String currentSkeleton, String lrgDiffCalUnit, Value intervalPattern)" ],
  "variableNames" : [ "ACCEPTED_PATTERN_LETTERS", "dateIntervalInfo", "nextCalendarType", "DATE_INTERVAL_PATH_PREFIX", "DATE_INTERVAL_PATH_SUFFIX" ]
}