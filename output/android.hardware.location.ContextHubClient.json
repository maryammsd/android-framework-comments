{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/location/ContextHubClient.java",
  "packageName" : "android.hardware.location",
  "className" : "ContextHubClient",
  "comment" : "\n * A class describing a client of the Context Hub Service.\n *\n * Clients can send messages to nanoapps at a Context Hub through this object. The APIs supported\n * by this object are thread-safe and can be used without external synchronization.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientProxy",
    "type" : "IContextHubClient",
    "comment" : "\n     * The proxy to the client interface at the service.\n     ",
    "links" : [ ]
  }, {
    "name" : "mAttachedHub",
    "type" : "ContextHubInfo",
    "comment" : "\n     * The Context Hub that this client is attached to.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCloseGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsClosed",
    "type" : "AtomicBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPersistent",
    "type" : "boolean",
    "comment" : "\n     * True if this is a persistent client (i.e. does not have to close the connection when the\n     * resource is freed from the system).\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " void setClientProxy(IContextHubClient clientProxy)",
    "returnType" : "void",
    "comment" : " package ",
    "links" : [ ]
  }, {
    "name" : "public ContextHubInfo getAttachedHub()",
    "returnType" : "ContextHubInfo",
    "comment" : "\n     * Returns the hub that this client is attached to.\n     *\n     * @return the ContextHubInfo of the attached hub\n     ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n     * Closes the connection for this client and the Context Hub Service.\n     *\n     * When this function is invoked, the messaging associated with this client is invalidated.\n     * All futures messages targeted for this client are dropped at the service, and the\n     * ContextHubClient is unregistered from the service.\n     *\n     * If this object has a PendingIntent, i.e. the object was generated via\n     * {@link ContextHubManager.createClient(PendingIntent, ContextHubInfo, long)}, then the\n     * Intent events corresponding to the PendingIntent will no longer be triggered.\n     ",
    "links" : [ "ContextHubManager.createClient(PendingIntent" ]
  }, {
    "name" : "public int sendMessageToNanoApp(@NonNull NanoAppMessage message)",
    "returnType" : "int",
    "comment" : "\n     * Sends a message to a nanoapp through the Context Hub Service.\n     *\n     * This function returns RESULT_SUCCESS if the message has reached the HAL, but\n     * does not guarantee delivery of the message to the target nanoapp.\n     *\n     * @param message the message object to send\n     *\n     * @return the result of sending the message defined as in ContextHubTransaction.Result\n     *\n     * @throws NullPointerException if NanoAppMessage is null\n     *\n     * @see NanoAppMessage\n     * @see ContextHubTransaction.Result\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mClientProxy", "mAttachedHub", "mCloseGuard", "mIsClosed", "mPersistent" ],
  "methodNames" : [ " void setClientProxy(IContextHubClient clientProxy)", "public ContextHubInfo getAttachedHub()", "public void close()", "public int sendMessageToNanoApp(@NonNull NanoAppMessage message)", "protected void finalize() throws Throwable" ]
}