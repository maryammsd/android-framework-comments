{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/job/JobWorkItem.java",
  "packageName" : "android.app.job",
  "className" : "Builder",
  "comment" : "\n     * Builder class for constructing {@link JobWorkItem} objects.\n     ",
  "links" : [ "android.app.job.JobWorkItem" ],
  "variables" : [ {
    "name" : "mDeliveryCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExtras",
    "type" : "PersistableBundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIntent",
    "type" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkDownloadBytes",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNetworkUploadBytes",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinimumNetworkChunkBytes",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setDeliveryCount(int deliveryCount)",
    "returnType" : "Builder",
    "comment" : "\n         * @see JobWorkItem#getDeliveryCount()\n         * @return This object for method chaining\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setExtras(@NonNull PersistableBundle extras)",
    "returnType" : "Builder",
    "comment" : "\n         * Set optional extras. This can be persisted, so we only allow primitive types.\n         * @param extras Bundle containing extras you want the scheduler to hold on to for you.\n         * @return This object for method chaining\n         * @see JobWorkItem#getExtras()\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setIntent(@NonNull Intent intent)",
    "returnType" : "Builder",
    "comment" : "\n         * Set an intent with information relevant to this work item.\n         *\n         * <p>\n         * Intents cannot be used for persisted JobWorkItems.\n         * Use {@link #setExtras(PersistableBundle)} instead for persisted JobWorkItems.\n         *\n         * @return This object for method chaining\n         * @see JobWorkItem#getIntent()\n         ",
    "links" : [ "#setExtras(PersistableBundle)" ]
  }, {
    "name" : "public Builder setEstimatedNetworkBytes(@BytesLong long downloadBytes, @BytesLong long uploadBytes)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the estimated size of network traffic that will be performed for this work item,\n         * in bytes.\n         *\n         * See {@link JobInfo.Builder#setEstimatedNetworkBytes(long, long)} for\n         * details about how to estimate network traffic.\n         *\n         * @param downloadBytes The estimated size of network traffic that will be\n         *                      downloaded for this work item, in bytes.\n         * @param uploadBytes   The estimated size of network traffic that will be\n         *                      uploaded for this work item, in bytes.\n         * @return This object for method chaining\n         * @see JobInfo.Builder#setEstimatedNetworkBytes(long, long)\n         * @see JobWorkItem#getEstimatedNetworkDownloadBytes()\n         * @see JobWorkItem#getEstimatedNetworkUploadBytes()\n         ",
    "links" : [ "JobInfo.Builder#setEstimatedNetworkBytes(long" ]
  }, {
    "name" : "public Builder setMinimumNetworkChunkBytes(@BytesLong long chunkSizeBytes)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the minimum size of non-resumable network traffic this work item requires, in bytes.\n         * When the upload or download can be easily paused and resumed, use this to set the\n         * smallest size that must be transmitted between start and stop events to be considered\n         * successful. If the transfer cannot be paused and resumed, then this should be the sum\n         * of the values provided to {@link #setEstimatedNetworkBytes(long, long)}.\n         *\n         * See {@link JobInfo.Builder#setMinimumNetworkChunkBytes(long)} for\n         * details about how to set the minimum chunk.\n         *\n         * @param chunkSizeBytes The smallest piece of data that cannot be easily paused and\n         *                       resumed, in bytes.\n         * @return This object for method chaining\n         * @see JobInfo.Builder#setMinimumNetworkChunkBytes(long)\n         * @see JobWorkItem#getMinimumNetworkChunkBytes()\n         * @see JobWorkItem#JobWorkItem(android.content.Intent, long, long, long)\n         ",
    "links" : [ "#setEstimatedNetworkBytes(long", "JobInfo.Builder#setMinimumNetworkChunkBytes(long)" ]
  }, {
    "name" : "public JobWorkItem build()",
    "returnType" : "JobWorkItem",
    "comment" : "\n         * @return The JobWorkItem object to hand to the JobScheduler. This object is immutable.\n         ",
    "links" : [ ]
  }, {
    "name" : "public JobWorkItem build(boolean rejectNegativeNetworkEstimates)",
    "returnType" : "JobWorkItem",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setDeliveryCount(int deliveryCount)", "public Builder setExtras(@NonNull PersistableBundle extras)", "public Builder setIntent(@NonNull Intent intent)", "public Builder setEstimatedNetworkBytes(@BytesLong long downloadBytes, @BytesLong long uploadBytes)", "public Builder setMinimumNetworkChunkBytes(@BytesLong long chunkSizeBytes)", "public JobWorkItem build()", "public JobWorkItem build(boolean rejectNegativeNetworkEstimates)" ],
  "variableNames" : [ "mDeliveryCount", "mExtras", "mIntent", "mNetworkDownloadBytes", "mNetworkUploadBytes", "mMinimumNetworkChunkBytes" ]
}