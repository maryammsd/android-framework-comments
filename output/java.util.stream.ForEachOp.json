{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/ForEachOps.java",
  "packageName" : "java.util.stream",
  "className" : "ForEachOp",
  "comment" : "\n     * A {@code TerminalOp} that evaluates a stream pipeline and sends the\n     * output to itself as a {@code TerminalSink}.  Elements will be sent in\n     * whatever thread they become available.  If the traversal is unordered,\n     * they will be sent independent of the stream's encounter order.\n     *\n     * <p>This terminal operation is stateless.  For parallel evaluation, each\n     * leaf instance of a {@code ForEachTask} will send elements to the same\n     * {@code TerminalSink} reference that is an instance of this class.\n     *\n     * @param <T> the output type of the stream pipeline\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "ordered",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getOpFlags()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Void evaluateSequential(PipelineHelper<T> helper, Spliterator<S> spliterator)",
    "returnType" : "Void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Void evaluateParallel(PipelineHelper<T> helper, Spliterator<S> spliterator)",
    "returnType" : "Void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Void get()",
    "returnType" : "Void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getOpFlags()", "public Void evaluateSequential(PipelineHelper<T> helper, Spliterator<S> spliterator)", "public Void evaluateParallel(PipelineHelper<T> helper, Spliterator<S> spliterator)", "public Void get()" ],
  "variableNames" : [ "ordered" ]
}