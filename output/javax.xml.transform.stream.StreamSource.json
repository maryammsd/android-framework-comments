{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/javax/xml/transform/stream/StreamSource.java",
  "packageName" : "javax.xml.transform.stream",
  "className" : "StreamSource",
  "comment" : "\n * <p>Acts as an holder for a transformation Source in the form\n * of a stream of XML markup.</p>\n *\n * <p><em>Note:</em> Due to their internal use of either a {@link Reader} or {@link InputStream} instance,\n * <code>StreamSource</code> instances may only be used once.</p>\n *\n * @author <a href=\"Jeff.Suttor@Sun.com\">Jeff Suttor</a>\n * @version $Revision: 829971 $, $Date: 2009-10-26 14:15:39 -0700 (Mon, 26 Oct 2009) $\n ",
  "links" : [ "java.io.Reader", "java.io.InputStream" ],
  "variables" : [ {
    "name" : "FEATURE",
    "type" : "String",
    "comment" : " If {@link javax.xml.transform.TransformerFactory#getFeature}\n     * returns true when passed this value as an argument,\n     * the Transformer supports Source input of this type.\n     ",
    "links" : [ "javax.xml.transform.TransformerFactory#getFeature" ]
  }, {
    "name" : "publicId",
    "type" : "String",
    "comment" : "\n     * The public identifier for this input source, or null.\n     ",
    "links" : [ ]
  }, {
    "name" : "systemId",
    "type" : "String",
    "comment" : "\n     * The system identifier as a URL string, or null.\n     ",
    "links" : [ ]
  }, {
    "name" : "inputStream",
    "type" : "InputStream",
    "comment" : "\n     * The byte stream for this Source, or null.\n     ",
    "links" : [ ]
  }, {
    "name" : "reader",
    "type" : "Reader",
    "comment" : "\n     * The character stream for this Source, or null.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setInputStream(InputStream inputStream)",
    "returnType" : "void",
    "comment" : "\n     * Set the byte stream to be used as input.  Normally,\n     * a stream should be used rather than a reader, so that\n     * the XML parser can resolve character encoding specified\n     * by the XML declaration.\n     *\n     * <p>If this Source object is used to process a stylesheet, normally\n     * setSystemId should also be called, so that relative URL references\n     * can be resolved.</p>\n     *\n     * @param inputStream A valid InputStream reference to an XML stream.\n     ",
    "links" : [ ]
  }, {
    "name" : "public InputStream getInputStream()",
    "returnType" : "InputStream",
    "comment" : "\n     * Get the byte stream that was set with setByteStream.\n     *\n     * @return The byte stream that was set with setByteStream, or null\n     * if setByteStream or the ByteStream constructor was not called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setReader(Reader reader)",
    "returnType" : "void",
    "comment" : "\n     * Set the input to be a character reader.  Normally,\n     * a stream should be used rather than a reader, so that\n     * the XML parser can resolve character encoding specified\n     * by the XML declaration.  However, in many cases the encoding\n     * of the input stream is already resolved, as in the case of\n     * reading XML from a StringReader.\n     *\n     * @param reader A valid Reader reference to an XML CharacterStream.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Reader getReader()",
    "returnType" : "Reader",
    "comment" : "\n     * Get the character stream that was set with setReader.\n     *\n     * @return The character stream that was set with setReader, or null\n     * if setReader or the Reader constructor was not called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setPublicId(String publicId)",
    "returnType" : "void",
    "comment" : "\n     * Set the public identifier for this Source.\n     *\n     * <p>The public identifier is always optional: if the application\n     * writer includes one, it will be provided as part of the\n     * location information.</p>\n     *\n     * @param publicId The public identifier as a string.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getPublicId()",
    "returnType" : "String",
    "comment" : "\n     * Get the public identifier that was set with setPublicId.\n     *\n     * @return The public identifier that was set with setPublicId, or null\n     * if setPublicId was not called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSystemId(String systemId)",
    "returnType" : "void",
    "comment" : "\n     * Set the system identifier for this Source.\n     *\n     * <p>The system identifier is optional if there is a byte stream\n     * or a character stream, but it is still useful to provide one,\n     * since the application can use it to resolve relative URIs\n     * and can include it in error messages and warnings (the parser\n     * will attempt to open a connection to the URI only if\n     * there is no byte stream or character stream specified).</p>\n     *\n     * @param systemId The system identifier as a URL string.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSystemId()",
    "returnType" : "String",
    "comment" : "\n     * Get the system identifier that was set with setSystemId.\n     *\n     * @return The system identifier that was set with setSystemId, or null\n     * if setSystemId was not called.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSystemId(File f)",
    "returnType" : "void",
    "comment" : "\n     * Set the system ID from a File reference.\n     *\n     * @param f Must a non-null File reference.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setInputStream(InputStream inputStream)", "public InputStream getInputStream()", "public void setReader(Reader reader)", "public Reader getReader()", "public void setPublicId(String publicId)", "public String getPublicId()", "public void setSystemId(String systemId)", "public String getSystemId()", "public void setSystemId(File f)" ],
  "variableNames" : [ "FEATURE", "publicId", "systemId", "inputStream", "reader" ]
}