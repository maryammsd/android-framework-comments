{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/widget/Editor.java",
  "packageName" : "android.widget",
  "className" : "InsertionPointCursorController",
  "comment" : " Controller for the insertion cursor. ",
  "variables" : [ {
    "name" : "mHandle",
    "type" : "InsertionHandleView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsDraggingCursor",
    "type" : "boolean",
    "comment" : " Tracks whether the cursor is currently being dragged.",
    "links" : [ ]
  }, {
    "name" : "mIsTouchSnappedToHandleDuringDrag",
    "type" : "boolean",
    "comment" : " than the cursor bar.",
    "links" : [ ]
  }, {
    "name" : "mPrevLineDuringDrag",
    "type" : "int",
    "comment" : " During a drag, tracks the line of text where the cursor was last positioned.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void onTouchEvent(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void positionCursorDuringDrag(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getLineDuringDrag(MotionEvent event)",
    "returnType" : "int",
    "comment" : "\n         * Returns the line where the cursor should be positioned during a cursor drag. Rather than\n         * simply returning the line directly at the touch position, this function has the following\n         * additional logic:\n         * 1) Apply some slop to avoid switching lines if the touch moves just slightly off the\n         * current line.\n         * 2) Allow the user's finger to slide down and \"snap\" to the handle to provide better\n         * visibility of the cursor and text.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void startCursorDrag(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void performCursorDrag(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void endCursorDrag(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void show()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void hide()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onTouchModeChanged(boolean isInTouchMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InsertionHandleView getHandle()",
    "returnType" : "InsertionHandleView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void reloadHandleDrawable()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDetached()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isCursorBeingModified()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isActive()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void invalidateHandle()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mHandle", "mIsDraggingCursor", "mIsTouchSnappedToHandleDuringDrag", "mPrevLineDuringDrag" ],
  "methodNames" : [ "public void onTouchEvent(MotionEvent event)", "private void positionCursorDuringDrag(MotionEvent event)", "private int getLineDuringDrag(MotionEvent event)", "private void startCursorDrag(MotionEvent event)", "private void performCursorDrag(MotionEvent event)", "private void endCursorDrag(MotionEvent event)", "public void show()", "public void hide()", "public void onTouchModeChanged(boolean isInTouchMode)", "public InsertionHandleView getHandle()", "private void reloadHandleDrawable()", "public void onDetached()", "public boolean isCursorBeingModified()", "public boolean isActive()", "public void invalidateHandle()" ]
}