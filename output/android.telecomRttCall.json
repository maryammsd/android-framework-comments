{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telecom/Call.java",
  "packageName" : "android.telecom",
  "className" : "RttCall",
  "comment" : "\n     * A class that holds the state that describes the state of the RTT channel to the remote\n     * party, if it is active.\n     ",
  "variables" : [ {
    "name" : "RTT_MODE_INVALID",
    "type" : "int",
    "comment" : "\n         * For metrics use. Default value in the proto.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "RTT_MODE_FULL",
    "type" : "int",
    "comment" : "\n         * Indicates that there should be a bidirectional audio stream between the two parties\n         * on the call.\n         ",
    "links" : [ ]
  }, {
    "name" : "RTT_MODE_HCO",
    "type" : "int",
    "comment" : "\n         * Indicates that the local user should be able to hear the audio stream from the remote\n         * user, but not vice versa. Equivalent to muting the microphone.\n         ",
    "links" : [ ]
  }, {
    "name" : "RTT_MODE_VCO",
    "type" : "int",
    "comment" : "\n         * Indicates that the remote user should be able to hear the audio stream from the local\n         * user, but not vice versa. Equivalent to setting the volume to zero.\n         ",
    "links" : [ ]
  }, {
    "name" : "READ_BUFFER_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReceiveStream",
    "type" : "InputStreamReader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransmitStream",
    "type" : "OutputStreamWriter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRttMode",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInCallAdapter",
    "type" : "InCallAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTelecomCallId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReadBuffer",
    "type" : "char[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getRttAudioMode()",
    "returnType" : "int",
    "comment" : "\n         * Returns the current RTT audio mode.\n         * @return Current RTT audio mode. One of {@link #RTT_MODE_FULL}, {@link #RTT_MODE_VCO}, or\n         * {@link #RTT_MODE_HCO}.\n         ",
    "links" : [ "#RTT_MODE_FULL", "#RTT_MODE_VCO", "#RTT_MODE_HCO" ]
  }, {
    "name" : "public void setRttMode(@RttAudioMode int mode)",
    "returnType" : "void",
    "comment" : "\n         * Sets the RTT audio mode. The requested mode change will be communicated through\n         * {@link Callback#onRttModeChanged(Call, int)}.\n         * @param mode The desired RTT audio mode, one of {@link #RTT_MODE_FULL},\n         * {@link #RTT_MODE_VCO}, or {@link #RTT_MODE_HCO}.\n         ",
    "links" : [ "Callback#onRttModeChanged", "#RTT_MODE_FULL", "#RTT_MODE_VCO", "#RTT_MODE_HCO" ]
  }, {
    "name" : "public void write(String input) throws IOException",
    "returnType" : "void",
    "comment" : "\n         * Writes the string {@param input} into the outgoing text stream for this RTT call. Since\n         * RTT transmits text in real-time, this method should be called once for each character\n         * the user enters into the device.\n         *\n         * This method is not thread-safe -- calling it from multiple threads simultaneously may\n         * lead to interleaved text.\n         * @param input The message to send to the remote user.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String read()",
    "returnType" : "String",
    "comment" : "\n         * Reads a string from the remote user, blocking if there is no data available. Returns\n         * {@code null} if the RTT conversation has been terminated and there is no further data\n         * to read.\n         *\n         * This method is not thread-safe -- calling it from multiple threads simultaneously may\n         * lead to interleaved text.\n         * @return A string containing text sent by the remote user, or {@code null} if the\n         * conversation has been terminated or if there was an error while reading.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String readImmediately() throws IOException",
    "returnType" : "String",
    "comment" : "\n         * Non-blocking version of {@link #read()}. Returns {@code null} if there is nothing to\n         * be read.\n         * @return A string containing text entered by the user, or {@code null} if the user has\n         * not entered any new text yet.\n         ",
    "links" : [ "#read" ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n         * Closes the underlying file descriptors\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "RTT_MODE_INVALID", "RTT_MODE_FULL", "RTT_MODE_HCO", "RTT_MODE_VCO", "READ_BUFFER_SIZE", "mReceiveStream", "mTransmitStream", "mRttMode", "mInCallAdapter", "mTelecomCallId", "mReadBuffer" ],
  "methodNames" : [ "public int getRttAudioMode()", "public void setRttMode(@RttAudioMode int mode)", "public void write(String input) throws IOException", "public String read()", "public String readImmediately() throws IOException", "public void close()" ]
}