{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/PluralRulesLoader.java",
  "packageName" : "android.icu.impl",
  "className" : "PluralRulesLoader",
  "comment" : "\n * Loader for plural rules data.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "pluralRulesCache",
    "type" : "Map<String, PluralRules>",
    "comment" : " Key is rules set + ranges set",
    "links" : [ ]
  }, {
    "name" : "localeIdToCardinalRulesId",
    "type" : "Map<String, String>",
    "comment" : " lazy init, use getLocaleIdToRulesIdMap to access",
    "links" : [ ]
  }, {
    "name" : "localeIdToOrdinalRulesId",
    "type" : "Map<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "rulesIdToEquivalentULocale",
    "type" : "Map<String, ULocale>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "loader",
    "type" : "PluralRulesLoader",
    "comment" : "\n     * The only instance of the loader.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ULocale[] getAvailableULocales()",
    "returnType" : "ULocale[]",
    "comment" : "\n     * Returns the locales for which we have plurals data. Utility for testing.\n     ",
    "links" : [ ]
  }, {
    "name" : "public ULocale getFunctionalEquivalent(ULocale locale, boolean[] isAvailable)",
    "returnType" : "ULocale",
    "comment" : "\n     * Returns the functionally equivalent locale.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Map<String, String> getLocaleIdToRulesIdMap(PluralType type)",
    "returnType" : "Map<String, String>",
    "comment" : "\n     * Returns the lazily-constructed map.\n     ",
    "links" : [ ]
  }, {
    "name" : "private Map<String, ULocale> getRulesIdToEquivalentULocaleMap()",
    "returnType" : "Map<String, ULocale>",
    "comment" : "\n     * Returns the lazily-constructed map.\n     ",
    "links" : [ ]
  }, {
    "name" : "private void checkBuildRulesIdMaps()",
    "returnType" : "void",
    "comment" : "\n     * Lazily constructs the localeIdToRulesId and rulesIdToEquivalentULocale\n     * maps if necessary. These exactly reflect the contents of the locales\n     * resource in plurals.res.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getRulesIdForLocale(ULocale locale, PluralType type)",
    "returnType" : "String",
    "comment" : "\n     * Gets the rulesId from the locale,with locale fallback. If there is no\n     * rulesId, return null. The rulesId might be the empty string if the rule\n     * is the default rule.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PluralRules getOrCreateRulesForLocale(ULocale locale, PluralRules.PluralType type)",
    "returnType" : "PluralRules",
    "comment" : "\n     * Gets the rule from the rulesId. If there is no rule for this rulesId,\n     * return null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public UResourceBundle getPluralBundle() throws MissingResourceException",
    "returnType" : "UResourceBundle",
    "comment" : "\n     * Return the plurals resource. Note MissingResourceException is unchecked,\n     * listed here for clarity. Callers should handle this exception.\n     ",
    "links" : [ ]
  }, {
    "name" : "public PluralRules forLocale(ULocale locale, PluralRules.PluralType type)",
    "returnType" : "PluralRules",
    "comment" : "\n     * Returns the plural rules for the the locale. If we don't have data,\n     * android.icu.text.PluralRules.DEFAULT is returned.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasOverride(ULocale locale)",
    "returnType" : "boolean",
    "comment" : " (non-Javadoc)\n     * @see android.icu.text.PluralRules.Factory#hasOverride(android.icu.util.ULocale)\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ULocale[] getAvailableULocales()", "public ULocale getFunctionalEquivalent(ULocale locale, boolean[] isAvailable)", "private Map<String, String> getLocaleIdToRulesIdMap(PluralType type)", "private Map<String, ULocale> getRulesIdToEquivalentULocaleMap()", "private void checkBuildRulesIdMaps()", "public String getRulesIdForLocale(ULocale locale, PluralType type)", "public PluralRules getOrCreateRulesForLocale(ULocale locale, PluralRules.PluralType type)", "public UResourceBundle getPluralBundle() throws MissingResourceException", "public PluralRules forLocale(ULocale locale, PluralRules.PluralType type)", "public boolean hasOverride(ULocale locale)" ],
  "variableNames" : [ "pluralRulesCache", "localeIdToCardinalRulesId", "localeIdToOrdinalRulesId", "rulesIdToEquivalentULocale", "loader" ]
}