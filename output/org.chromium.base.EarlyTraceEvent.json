{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/EarlyTraceEvent.java",
  "packageName" : "org.chromium.base",
  "className" : "EarlyTraceEvent",
  "comment" : "\n * Support for early tracing, before the native library is loaded.\n *\n * Note that arguments are not currently supported for early events, but could\n * be added in the future.\n *\n * Events recorded here are buffered in Java until the native library is available, at which point\n * they are flushed to the native side and regular java tracing (TraceEvent) takes over.\n *\n * Locking: This class is threadsafe. It is enabled when general tracing is, and then disabled when\n *          tracing is enabled from the native side. At this point, buffered events are flushed to\n *          the native side and then early tracing is permanently disabled after dumping the events.\n *\n * Like the TraceEvent, the event name of the trace events must be a string literal or a |static\n * final String| class member. Otherwise NoDynamicStringsInTraceEventCheck error will be thrown.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STATE_DISABLED",
    "type" : "int",
    "comment" : " - disable(): ENABLED -> FINISHED",
    "links" : [ ]
  }, {
    "name" : "STATE_ENABLED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_FINISHED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sState",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sEnabledInChildProcessBeforeCommandLine",
    "type" : "boolean",
    "comment" : " unconditionally in Chrome. This flag allows not to enable early tracing twice in this case.",
    "links" : [ ]
  }, {
    "name" : "BACKGROUND_STARTUP_TRACING_ENABLED_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sCachedBackgroundStartupTracingFlag",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TRACE_CONFIG_FILENAME",
    "type" : "String",
    "comment" : " kept in sync with the native kAndroidTraceConfigFile.",
    "links" : [ ]
  }, {
    "name" : "TRACE_STARTUP_SWITCH",
    "type" : "String",
    "comment" : " Must be kept in sync with switches::kTraceStartup.",
    "links" : [ ]
  }, {
    "name" : "TRACE_EARLY_JAVA_IN_CHILD_SWITCH",
    "type" : "String",
    "comment" : " ChildProcessLauncherHelperImpl.",
    "links" : [ ]
  }, {
    "name" : "sLock",
    "type" : "Object",
    "comment" : " Protects the fields below.",
    "links" : [ ]
  }, {
    "name" : "sEvents",
    "type" : "List<Event>",
    "comment" : " Not final because in many configurations these objects are not used.",
    "links" : [ ]
  }, {
    "name" : "sAsyncEvents",
    "type" : "List<AsyncEvent>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static void maybeEnableInBrowserProcess()",
    "returnType" : "void",
    "comment" : " @see TraceEvent#maybeEnableEarlyTracing(boolean) ",
    "links" : [ ]
  }, {
    "name" : "public static void earlyEnableInChildWithoutCommandLine()",
    "returnType" : "void",
    "comment" : " Enables early tracing in child processes before CommandLine arrives there. ",
    "links" : [ ]
  }, {
    "name" : "public static void onCommandLineAvailableInChildProcess()",
    "returnType" : "void",
    "comment" : "\n     * Based on a command line switch from the process launcher, enables or resets early tracing.\n     * Should be called only in child processes and as soon as possible after the CommandLine is\n     * initialized.\n     ",
    "links" : [ ]
  }, {
    "name" : " static void enable()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void disable()",
    "returnType" : "void",
    "comment" : "\n     * Disables Early tracing and flushes buffered events to the native side.\n     *\n     * Once this is called, no new event will be registered.\n     ",
    "links" : [ ]
  }, {
    "name" : " static void reset()",
    "returnType" : "void",
    "comment" : " Stops early tracing without flushing the buffered events. ",
    "links" : [ ]
  }, {
    "name" : " static boolean enabled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void setBackgroundStartupTracingFlag(boolean enabled)",
    "returnType" : "void",
    "comment" : " Sets the background startup tracing enabled in app preferences for next startup. ",
    "links" : [ ]
  }, {
    "name" : "public static boolean getBackgroundStartupTracingFlag()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the background startup tracing flag is set.\n     *\n     * This does not return the correct value if called before maybeEnable() was called. But that is\n     * called really early in startup.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void begin(String name, boolean isToplevel)",
    "returnType" : "void",
    "comment" : " @see TraceEvent#begin ",
    "links" : [ ]
  }, {
    "name" : "public static void end(String name, boolean isToplevel)",
    "returnType" : "void",
    "comment" : " @see TraceEvent#end ",
    "links" : [ ]
  }, {
    "name" : "public static void startAsync(String name, long id)",
    "returnType" : "void",
    "comment" : " @see TraceEvent#startAsync ",
    "links" : [ ]
  }, {
    "name" : "public static void finishAsync(String name, long id)",
    "returnType" : "void",
    "comment" : " @see TraceEvent#finishAsync ",
    "links" : [ ]
  }, {
    "name" : " static List<Event> getMatchingCompletedEventsForTesting(String eventName)",
    "returnType" : "List<Event>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void dumpEvents(List<Event> events)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void dumpAsyncEvents(List<AsyncEvent> events)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static void maybeEnableInBrowserProcess()", "public static void earlyEnableInChildWithoutCommandLine()", "public static void onCommandLineAvailableInChildProcess()", " static void enable()", " static void disable()", " static void reset()", " static boolean enabled()", " static void setBackgroundStartupTracingFlag(boolean enabled)", "public static boolean getBackgroundStartupTracingFlag()", "public static void begin(String name, boolean isToplevel)", "public static void end(String name, boolean isToplevel)", "public static void startAsync(String name, long id)", "public static void finishAsync(String name, long id)", " static List<Event> getMatchingCompletedEventsForTesting(String eventName)", "private static void dumpEvents(List<Event> events)", "private static void dumpAsyncEvents(List<AsyncEvent> events)" ],
  "variableNames" : [ "STATE_DISABLED", "STATE_ENABLED", "STATE_FINISHED", "sState", "sEnabledInChildProcessBeforeCommandLine", "BACKGROUND_STARTUP_TRACING_ENABLED_KEY", "sCachedBackgroundStartupTracingFlag", "TRACE_CONFIG_FILENAME", "TRACE_STARTUP_SWITCH", "TRACE_EARLY_JAVA_IN_CHILD_SWITCH", "sLock", "sEvents", "sAsyncEvents" ]
}