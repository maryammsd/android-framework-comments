{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/file/attribute/PosixFileAttributeView.java",
  "packageName" : "java.nio.file.attribute",
  "className" : "PosixFileAttributeView",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " String name()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the attribute view. Attribute views of this type\n     * have the name {@code \"posix\"}.\n     ",
    "links" : [ ]
  }, {
    "name" : " PosixFileAttributes readAttributes() throws IOException",
    "returnType" : "PosixFileAttributes",
    "comment" : "\n     * @throws  IOException                {@inheritDoc}\n     * @throws  SecurityException\n     *          In the case of the default provider, a security manager is\n     *          installed, and it denies\n     *          {@link RuntimePermission}{@code (\"accessUserInformation\")}\n     *          or its {@link SecurityManager#checkRead(String) checkRead} method\n     *          denies read access to the file.\n     ",
    "links" : [ "#checkRead(String)", "RuntimePermission" ]
  }, {
    "name" : " void setPermissions(Set<PosixFilePermission> perms) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Updates the file permissions.\n     *\n     * @param   perms\n     *          the new set of permissions\n     *\n     * @throws  ClassCastException\n     *          if the sets contains elements that are not of type {@code\n     *          PosixFilePermission}\n     * @throws  IOException\n     *          if an I/O error occurs\n     * @throws  SecurityException\n     *          In the case of the default provider, a security manager is\n     *          installed, and it denies\n     *          {@link RuntimePermission}{@code (\"accessUserInformation\")}\n     *          or its {@link SecurityManager#checkWrite(String) checkWrite}\n     *          method denies write access to the file.\n     ",
    "links" : [ "RuntimePermission", "#checkWrite(String)" ]
  }, {
    "name" : " void setGroup(GroupPrincipal group) throws IOException",
    "returnType" : "void",
    "comment" : "\n     * Updates the file group-owner.\n     *\n     * @param   group\n     *          the new file group-owner\n     *\n     * @throws  IOException\n     *          if an I/O error occurs\n     * @throws  SecurityException\n     *          In the case of the default provider, and a security manager is\n     *          installed, it denies\n     *          {@link RuntimePermission}{@code (\"accessUserInformation\")}\n     *          or its {@link SecurityManager#checkWrite(String) checkWrite}\n     *          method denies write access to the file.\n     ",
    "links" : [ "RuntimePermission", "#checkWrite(String)" ]
  } ],
  "methodNames" : [ " String name()", " PosixFileAttributes readAttributes() throws IOException", " void setPermissions(Set<PosixFilePermission> perms) throws IOException", " void setGroup(GroupPrincipal group) throws IOException" ],
  "variableNames" : [ ]
}