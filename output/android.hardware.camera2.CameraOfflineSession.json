{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/CameraOfflineSession.java",
  "packageName" : "android.hardware.camera2",
  "className" : "CameraOfflineSession",
  "comment" : "\n * A camera capture session that was switched to offline mode via successful call to\n * {@link CameraCaptureSession#switchToOffline}.\n *\n * <p>Offline capture sessions allow clients to select a set of camera registered surfaces that\n * support offline mode.  After a successful offline mode switch all non-repeating pending requests\n * on those surfaces will continue to be processed by the camera stack even if clients close the\n * corresponding camera device.<p>\n *\n * <p>Offline capture session instances will replace the previously active capture session arguments\n * in all capture callbacks after {@link CameraCaptureSession#switchToOffline} completes.</p>\n *\n * <p>Processing of pending offline capture requests will begin only after the offline session\n * moves to ready state which will be indicated by the {@link CameraOfflineSessionCallback#onReady}\n * callback.</p>\n *\n * <p>In contrast to a regular {@link CameraCaptureSession} an offline capture session will\n * not accept any further capture requests. Besides {@link CameraOfflineSession#close} all\n * remaining methods will throw {@link UnsupportedOperationException} and are not supported.</p>\n *\n * @see CameraCaptureSession#supportsOfflineProcessing\n ",
  "links" : [ "#onReady", "android.hardware.camera2.CameraCaptureSession", "android.hardware.camera2.CameraCaptureSession#switchToOffline", "android.hardware.camera2.CameraOfflineSession#close", "UnsupportedOperationException" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public abstract void close()",
    "returnType" : "void",
    "comment" : "\n     * Close this offline capture session.\n     *\n     * <p>Abort all pending offline requests and close the connection to the offline camera session\n     * as quickly as possible.</p>\n     *\n     * <p>This method can be called only after clients receive\n     * {@link CameraOfflineSessionCallback#onReady}.</p>\n     *\n     * <p>Immediately after this call, besides the final\n     * {@link CameraOfflineSessionCallback#onClosed} notification, no further callbacks from the\n     * offline session will be triggered and all remaining offline capture requests will be\n     * discarded.</p>\n     *\n     * <p>Closing a session is idempotent; closing more than once has no effect.</p>\n     *\n     * @throws IllegalStateException if the offline session is not ready.\n     ",
    "links" : [ "#onReady", "#onClosed" ]
  } ],
  "methodNames" : [ "public abstract void close()" ],
  "variableNames" : [ ]
}