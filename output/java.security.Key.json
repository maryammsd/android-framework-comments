{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/Key.java",
  "packageName" : "java.security",
  "className" : "Key",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "\n    * The class fingerprint that is set to indicate\n    * serialization compatibility with a previous\n    * version of the class.\n    *\n    * @deprecated A {@code serialVersionUID} field in an interface is\n    * ineffectual. Do not use; no replacement.\n    ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getAlgorithm()",
    "returnType" : "String",
    "comment" : "\n     * Returns the standard algorithm name for this key. For\n     * example, \"DSA\" would indicate that this key is a DSA key.\n     * See the key related sections (KeyFactory, KeyGenerator,\n     * KeyPairGenerator, and SecretKeyFactory) in the <a href=\n     * \"{@docRoot}/../specs/security/standard-names.html\">\n     * Java Security Standard Algorithm Names Specification</a>\n     * for information about standard key algorithm names.\n     *\n     * @return the name of the algorithm associated with this key.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFormat()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the primary encoding format of this key,\n     * or null if this key does not support encoding.\n     * The primary encoding format is\n     * named in terms of the appropriate ASN.1 data format, if an\n     * ASN.1 specification for this key exists.\n     * For example, the name of the ASN.1 data format for public\n     * keys is <I>SubjectPublicKeyInfo</I>, as\n     * defined by the X.509 standard; in this case, the returned format is\n     * {@code \"X.509\"}. Similarly,\n     * the name of the ASN.1 data format for private keys is\n     * <I>PrivateKeyInfo</I>,\n     * as defined by the PKCS #8 standard; in this case, the returned format is\n     * {@code \"PKCS#8\"}.\n     *\n     * @return the primary encoding format of the key.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getEncoded()",
    "returnType" : "byte[]",
    "comment" : "\n     * Returns the key in its primary encoding format, or null\n     * if this key does not support encoding.\n     *\n     * @return the encoded key, or null if the key does not support\n     * encoding.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getAlgorithm()", "public String getFormat()", "public byte[] getEncoded()" ],
  "variableNames" : [ "serialVersionUID" ]
}