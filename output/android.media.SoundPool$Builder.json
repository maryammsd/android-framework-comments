{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/SoundPool.java",
  "packageName" : "android.media",
  "className" : "Builder",
  "comment" : "\n     * Builder class for {@link SoundPool} objects.\n     ",
  "links" : [ "android.media.SoundPool" ],
  "variables" : [ {
    "name" : "mMaxStreams",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAudioAttributes",
    "type" : "AudioAttributes",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mContext",
    "type" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSessionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setMaxStreams(int maxStreams) throws IllegalArgumentException",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the maximum of number of simultaneous streams that can be played simultaneously.\n         * @param maxStreams a value equal to 1 or greater.\n         * @return the same Builder instance\n         * @throws IllegalArgumentException\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAudioAttributes(AudioAttributes attributes) throws IllegalArgumentException",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the {@link AudioAttributes}. For examples, game applications will use attributes\n         * built with usage information set to {@link AudioAttributes#USAGE_GAME}.\n         * @param attributes a non-null\n         * @return\n         ",
    "links" : [ "android.media.AudioAttributes#USAGE_GAME", "android.media.AudioAttributes" ]
  }, {
    "name" : "public Builder setAudioSessionId(int sessionId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the session ID the {@link SoundPool} will be attached to.\n         *\n         * Note, that if there's a device specific session id associated with the context\n         * (see {@link Builder#setContext(Context)}), explicitly setting a session id using this\n         * method will override it.\n         *\n         * @param sessionId a strictly positive ID number retrieved from another player or\n         *   allocated by {@link AudioManager} via {@link AudioManager#generateAudioSessionId()},\n         *   or {@link AudioManager#AUDIO_SESSION_ID_GENERATE}.\n         * @return the same {@link Builder} instance\n         * @throws IllegalArgumentException when sessionId is invalid.\n         ",
    "links" : [ "android.media.SoundPool", "android.media.AudioManager#generateAudioSessionId()", "Builder", "#setContext(Context)", "android.media.AudioManager#AUDIO_SESSION_ID_GENERATE", "android.media.AudioManager" ]
  }, {
    "name" : "public Builder setContext(@NonNull Context context)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the context the SoundPool belongs to.\n         *\n         * The context will be used to pull information, such as\n         * {@link android.content.AttributionSource} and device specific audio session ids,\n         * which will be associated with the {@link SoundPool}. However, the context itself will\n         * not be retained by the {@link SoundPool} instance after initialization.\n         *\n         * @param context a non-null {@link Context} instance\n         * @return the same {@link Builder} instance.\n         ",
    "links" : [ "android.media.SoundPool", "android.content.Context", "android.content.AttributionSource", "Builder" ]
  }, {
    "name" : "public SoundPool build()",
    "returnType" : "SoundPool",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setMaxStreams(int maxStreams) throws IllegalArgumentException", "public Builder setAudioAttributes(AudioAttributes attributes) throws IllegalArgumentException", "public Builder setAudioSessionId(int sessionId)", "public Builder setContext(@NonNull Context context)", "public SoundPool build()" ],
  "variableNames" : [ "mMaxStreams", "mAudioAttributes", "mContext", "mSessionId" ]
}