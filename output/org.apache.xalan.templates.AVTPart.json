{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/templates/AVTPart.java",
  "packageName" : "org.apache.xalan.templates",
  "className" : "AVTPart",
  "comment" : "\n * Class to hold a part, either a string or XPath,\n * of an Attribute Value Template.\n * @xsl.usage internal\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract String getSimpleString()",
    "returnType" : "String",
    "comment" : "\n   * Get the AVT part as the original string.\n   *\n   * @return the AVT part as the original string.\n   ",
    "links" : [ ]
  }, {
    "name" : "public abstract void evaluate(XPathContext xctxt, FastStringBuffer buf, int context, org.apache.xml.utils.PrefixResolver nsNode) throws javax.xml.transform.TransformerException",
    "returnType" : "void",
    "comment" : "\n   * Write the evaluated value into the given\n   * string buffer.\n   *\n   * @param xctxt The XPath context to use to evaluate this AVT.\n   * @param buf Buffer to write into.\n   * @param context The current source tree context.\n   * @param nsNode The current namespace context (stylesheet tree context).\n   *\n   * @throws javax.xml.transform.TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public void setXPathSupport(XPathContext support)",
    "returnType" : "void",
    "comment" : "\n   * Set the XPath support.\n   *\n   * @param support XPathContext to set. \n   ",
    "links" : [ ]
  }, {
    "name" : "public boolean canTraverseOutsideSubtree()",
    "returnType" : "boolean",
    "comment" : "\n   * Tell if this expression or it's subexpressions can traverse outside \n   * the current subtree.\n   * \n   * @return true if traversal outside the context node's subtree can occur.\n   ",
    "links" : [ ]
  }, {
    "name" : "public abstract void fixupVariables(java.util.Vector vars, int globalsSize)",
    "returnType" : "void",
    "comment" : "\n   * This function is used to fixup variables from QNames to stack frame \n   * indexes at stylesheet build time.\n   * @param vars List of QNames that correspond to variables.  This list \n   * should be searched backwards for the first qualified name that \n   * corresponds to the variable reference qname.  The position of the \n   * QName in the vector from the start of the vector will be its position \n   * in the stack frame (but variables above the globalsTop value will need \n   * to be offset to the current stack frame).\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract String getSimpleString()", "public abstract void evaluate(XPathContext xctxt, FastStringBuffer buf, int context, org.apache.xml.utils.PrefixResolver nsNode) throws javax.xml.transform.TransformerException", "public void setXPathSupport(XPathContext support)", "public boolean canTraverseOutsideSubtree()", "public abstract void fixupVariables(java.util.Vector vars, int globalsSize)" ],
  "variableNames" : [ "serialVersionUID" ]
}