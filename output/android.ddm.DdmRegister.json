{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/ddm/DdmRegister.java",
  "packageName" : "android.ddm",
  "className" : "DdmRegister",
  "comment" : "\n * Just a place to stick handler registrations, instead of scattering\n * them around.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static void registerHandlers()",
    "returnType" : "void",
    "comment" : "\n     * Register handlers for all known chunk types.\n     *\n     * If you write a handler, add a registration call here.\n     *\n     * Note that this is invoked by the application (usually through a\n     * static initializer in the main class), not the VM.  It's done this\n     * way so that the handlers can use Android classes with native calls\n     * that aren't registered until after the VM is initialized (e.g.\n     * logging).  It also allows debugging of DDM handler initialization.\n     *\n     * The chunk dispatcher will pause until we call registrationComplete(),\n     * so that we don't have a race that causes us to drop packets before\n     * we finish here.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void registerHandlers()" ],
  "variableNames" : [ ]
}