{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/task/UiThreadTaskExecutor.java",
  "packageName" : "org.chromium.base.task",
  "className" : "UiThreadTaskExecutor",
  "comment" : "\n * This {@link TaskExecutor} is for tasks posted with UI Thread {@link TaskTraits}. It maps to\n * content::BrowserTaskExecutor in C++, except that in Java the UI thread is a base/ concept and\n * only UI thread posting is supported.\n ",
  "links" : [ "org.chromium.base.task.TaskExecutor", "TaskTraits" ],
  "variables" : [ {
    "name" : "sRegistered",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBestEffortTaskRunner",
    "type" : "SingleThreadTaskRunner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserVisibleTaskRunner",
    "type" : "SingleThreadTaskRunner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserBlockingTaskRunner",
    "type" : "SingleThreadTaskRunner",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public TaskRunner createTaskRunner(@TaskTraits int taskTraits)",
    "returnType" : "TaskRunner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SequencedTaskRunner createSequencedTaskRunner(@TaskTraits int taskTraits)",
    "returnType" : "SequencedTaskRunner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public SingleThreadTaskRunner createSingleThreadTaskRunner(@TaskTraits int taskTraits)",
    "returnType" : "SingleThreadTaskRunner",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void postDelayedTask(@TaskTraits int taskTraits, Runnable task, long delay)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean canRunTaskImmediately(@TaskTraits int traits)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public TaskRunner createTaskRunner(@TaskTraits int taskTraits)", "public SequencedTaskRunner createSequencedTaskRunner(@TaskTraits int taskTraits)", "public SingleThreadTaskRunner createSingleThreadTaskRunner(@TaskTraits int taskTraits)", "public void postDelayedTask(@TaskTraits int taskTraits, Runnable task, long delay)", "public boolean canRunTaskImmediately(@TaskTraits int traits)" ],
  "variableNames" : [ "sRegistered", "mBestEffortTaskRunner", "mUserVisibleTaskRunner", "mUserBlockingTaskRunner" ]
}