{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/service/wallpaper/WallpaperService.java",
  "packageName" : "android.service.wallpaper",
  "className" : "IWallpaperEngineWrapper",
  "comment" : "",
  "variables" : [ {
    "name" : "mCaller",
    "type" : "HandlerCaller",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnection",
    "type" : "IWallpaperConnection",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowToken",
    "type" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsPreview",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShownReported",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReqWidth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mReqHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayPadding",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplayManager",
    "type" : "DisplayManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDisplay",
    "type" : "Display",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDetached",
    "type" : "AtomicBoolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEngine",
    "type" : "Engine",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setDesiredSize(int width, int height)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setDisplayPadding(Rect padding)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setVisibility(boolean visible)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setInAmbientMode(boolean inAmbientDisplay, long animationDuration) throws RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dispatchPointer(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dispatchWallpaperCommand(String action, int x, int y, int z, Bundle extras)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setZoomOut(float scale)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void reportShown()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void requestWallpaperColors()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void destroy()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void detach()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void doDetachEngine()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void executeMessage(Message message)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mCaller", "mConnection", "mWindowToken", "mWindowType", "mIsPreview", "mShownReported", "mReqWidth", "mReqHeight", "mDisplayPadding", "mDisplayId", "mDisplayManager", "mDisplay", "mDetached", "mEngine" ],
  "methodNames" : [ "public void setDesiredSize(int width, int height)", "public void setDisplayPadding(Rect padding)", "public void setVisibility(boolean visible)", "public void setInAmbientMode(boolean inAmbientDisplay, long animationDuration) throws RemoteException", "public void dispatchPointer(MotionEvent event)", "public void dispatchWallpaperCommand(String action, int x, int y, int z, Bundle extras)", "public void setZoomOut(float scale)", "public void reportShown()", "public void requestWallpaperColors()", "public void destroy()", "public void detach()", "private void doDetachEngine()", "public void executeMessage(Message message)" ]
}