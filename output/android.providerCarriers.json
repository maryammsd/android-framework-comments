{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/Telephony.java",
  "packageName" : "android.provider",
  "className" : "Carriers",
  "comment" : "\n     * Carriers class contains information about APNs, including MMSC information.\n     ",
  "variables" : [ {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The {@code content://} style URL for this table.\n         * For MSIM, this will return APNs for the default subscription\n         * {@link SubscriptionManager#getDefaultSubscriptionId()}. To specify subId for MSIM,\n         * use {@link Uri#withAppendedPath(Uri, String)} to append with subscription id.\n         ",
    "links" : [ "SubscriptionManager#getDefaultSubscriptionId", "Uri#withAppendedPath" ]
  }, {
    "name" : "SIM_APN_URI",
    "type" : "Uri",
    "comment" : "\n         * The {@code content://} style URL for this table. Used for APN query based on current\n         * subscription. Instead of specifying carrier matching information in the selection,\n         * this API will return all matching APNs from current subscription carrier and queries\n         * will be applied on top of that. If there is no match for MVNO (Mobile Virtual Network\n         * Operator) APNs, return APNs from its MNO (based on mccmnc) instead. For MSIM, this will\n         * return APNs for the default subscription\n         * {@link SubscriptionManager#getDefaultSubscriptionId()}. To specify subId for MSIM,\n         * use {@link Uri#withAppendedPath(Uri, String)} to append with subscription id.\n         ",
    "links" : [ "SubscriptionManager#getDefaultSubscriptionId", "Uri#withAppendedPath" ]
  }, {
    "name" : "DPC_URI",
    "type" : "Uri",
    "comment" : "\n         * The {@code content://} style URL to be called from DevicePolicyManagerService,\n         * can manage DPC-owned APNs.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "FILTERED_URI",
    "type" : "Uri",
    "comment" : "\n         * The {@code content://} style URL to be called from Telephony to query APNs.\n         * When DPC-owned APNs are enforced, only DPC-owned APNs are returned, otherwise only\n         * non-DPC-owned APNs are returned. For MSIM, this will return APNs for the default\n         * subscription {@link SubscriptionManager#getDefaultSubscriptionId()}. To specify subId\n         * for MSIM, use {@link Uri#withAppendedPath(Uri, String)} to append with subscription id.\n         * @hide\n         ",
    "links" : [ "SubscriptionManager#getDefaultSubscriptionId", "Uri#withAppendedPath" ]
  }, {
    "name" : "ENFORCE_MANAGED_URI",
    "type" : "Uri",
    "comment" : "\n         * The {@code content://} style URL to be called from DevicePolicyManagerService\n         * or Telephony to manage whether DPC-owned APNs are enforced.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "ENFORCE_KEY",
    "type" : "String",
    "comment" : "\n         * The column name for ENFORCE_MANAGED_URI, indicates whether DPC-owned APNs are enforced.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_SORT_ORDER",
    "type" : "String",
    "comment" : "\n         * The default sort order for this table.\n         ",
    "links" : [ ]
  }, {
    "name" : "NAME",
    "type" : "String",
    "comment" : "\n         * Entry name.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "APN",
    "type" : "String",
    "comment" : "\n         * APN name.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "PROXY",
    "type" : "String",
    "comment" : "\n         * Proxy address.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "PORT",
    "type" : "String",
    "comment" : "\n         * Proxy port.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "MMSPROXY",
    "type" : "String",
    "comment" : "\n         * MMS proxy address.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "MMSPORT",
    "type" : "String",
    "comment" : "\n         * MMS proxy port.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "SERVER",
    "type" : "String",
    "comment" : "\n         * Server address.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "USER",
    "type" : "String",
    "comment" : "\n         * APN username.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "PASSWORD",
    "type" : "String",
    "comment" : "\n         * APN password.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "MMSC",
    "type" : "String",
    "comment" : "\n         * MMSC URL.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "MCC",
    "type" : "String",
    "comment" : "\n         * Mobile Country Code (MCC).\n         * <P>Type: TEXT</P>\n         * @deprecated Use {@link #SIM_APN_URI} to query APN instead, this API will return\n         * matching APNs based on current subscription carrier, thus no need to specify MCC and\n         * other carrier matching information. In the future, Android will not support MCC for\n         * APN query.\n         ",
    "links" : [ "#SIM_APN_URI" ]
  }, {
    "name" : "MNC",
    "type" : "String",
    "comment" : "\n         * Mobile Network Code (MNC).\n         * <P>Type: TEXT</P>\n         * @deprecated Use {@link #SIM_APN_URI} to query APN instead, this API will return\n         * matching APNs based on current subscription carrier, thus no need to specify MNC and\n         * other carrier matching information. In the future, Android will not support MNC for\n         * APN query.\n         ",
    "links" : [ "#SIM_APN_URI" ]
  }, {
    "name" : "NUMERIC",
    "type" : "String",
    "comment" : "\n         * Numeric operator ID (as String). Usually {@code MCC + MNC}.\n         * <P>Type: TEXT</P>\n         * @deprecated Use {@link #SIM_APN_URI} to query APN instead, this API will return\n         * matching APNs based on current subscription carrier, thus no need to specify Numeric\n         * and other carrier matching information. In the future, Android will not support Numeric\n         * for APN query.\n         ",
    "links" : [ "#SIM_APN_URI" ]
  }, {
    "name" : "AUTH_TYPE",
    "type" : "String",
    "comment" : "\n         * Authentication type.\n         * <P>Type:  INTEGER</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "TYPE",
    "type" : "String",
    "comment" : "\n         * Comma-delimited list of APN types.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "PROTOCOL",
    "type" : "String",
    "comment" : "\n         * The protocol to use to connect to this APN.\n         *\n         * One of the {@code PDP_type} values in TS 27.007 section 10.1.1.\n         * For example: {@code IP}, {@code IPV6}, {@code IPV4V6}, or {@code PPP}.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "ROAMING_PROTOCOL",
    "type" : "String",
    "comment" : "\n         * The protocol to use to connect to this APN when roaming.\n         * The syntax is the same as protocol.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CURRENT",
    "type" : "String",
    "comment" : "\n         * Is this the current APN?\n         * <P>Type: INTEGER (boolean)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CARRIER_ENABLED",
    "type" : "String",
    "comment" : "\n         * Is this APN enabled?\n         * <P>Type: INTEGER (boolean)</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "BEARER",
    "type" : "String",
    "comment" : "\n         * Radio Access Technology info.\n         * To check what values are allowed, refer to {@link android.telephony.ServiceState}.\n         * This should be spread to other technologies,\n         * but is currently only used for LTE (14) and eHRPD (13).\n         * <P>Type: INTEGER</P>\n         * @deprecated this column is no longer supported, use {@link #NETWORK_TYPE_BITMASK} instead\n         ",
    "links" : [ "android.telephony.ServiceState", "#NETWORK_TYPE_BITMASK" ]
  }, {
    "name" : "BEARER_BITMASK",
    "type" : "String",
    "comment" : "\n         * Radio Access Technology bitmask.\n         * To check what values can be contained, refer to {@link android.telephony.ServiceState}.\n         * 0 indicates all techs otherwise first bit refers to RAT/bearer 1, second bit refers to\n         * RAT/bearer 2 and so on.\n         * Bitmask for a radio tech R is (1 << (R - 1))\n         * <P>Type: INTEGER</P>\n         * @hide\n         * @deprecated this column is no longer supported, use {@link #NETWORK_TYPE_BITMASK} instead\n         ",
    "links" : [ "android.telephony.ServiceState", "#NETWORK_TYPE_BITMASK" ]
  }, {
    "name" : "NETWORK_TYPE_BITMASK",
    "type" : "String",
    "comment" : "\n         * Radio technology (network type) bitmask.\n         * To check what values can be contained, refer to the NETWORK_TYPE_ constants in\n         * {@link android.telephony.TelephonyManager}.\n         * Bitmask for a radio tech R is (1 << (R - 1))\n         * <P>Type: INTEGER</P>\n         ",
    "links" : [ "android.telephony.TelephonyManager" ]
  }, {
    "name" : "MVNO_TYPE",
    "type" : "String",
    "comment" : "\n         * MVNO type:\n         * {@code SPN (Service Provider Name), IMSI, GID (Group Identifier Level 1)}.\n         * <P>Type: TEXT</P>\n         * @deprecated Use {@link #SIM_APN_URI} to query APN instead, this API will return\n         * matching APNs based on current subscription carrier, thus no need to specify MVNO_TYPE\n         * and other carrier matching information. In the future, Android will not support MVNO_TYPE\n         * for APN query.\n         ",
    "links" : [ "#SIM_APN_URI" ]
  }, {
    "name" : "MVNO_MATCH_DATA",
    "type" : "String",
    "comment" : "\n         * MVNO data.\n         * Use the following examples.\n         * <ul>\n         *     <li>SPN: A MOBILE, BEN NL, ...</li>\n         *     <li>IMSI: 302720x94, 2060188, ...</li>\n         *     <li>GID: 4E, 33, ...</li>\n         * </ul>\n         * <P>Type: TEXT</P>\n         * @deprecated Use {@link #SIM_APN_URI} to query APN instead, this API will return\n         * matching APNs based on current subscription carrier, thus no need to specify\n         * MVNO_MATCH_DATA and other carrier matching information. In the future, Android will not\n         * support MVNO_MATCH_DATA for APN query.\n         ",
    "links" : [ "#SIM_APN_URI" ]
  }, {
    "name" : "SUBSCRIPTION_ID",
    "type" : "String",
    "comment" : "\n         * The subscription to which the APN belongs to\n         * <p>Type: INTEGER (long) </p>\n         ",
    "links" : [ ]
  }, {
    "name" : "PROFILE_ID",
    "type" : "String",
    "comment" : "\n         * The profile_id to which the APN saved in modem.\n         * <p>Type: INTEGER</p>\n         *@hide\n         ",
    "links" : [ ]
  }, {
    "name" : "MODEM_PERSIST",
    "type" : "String",
    "comment" : "\n         * If set to {@code true}, then the APN setting will persist to the modem.\n         * <p>Type: INTEGER (boolean)</p>\n         *@hide\n         ",
    "links" : [ ]
  }, {
    "name" : "MAX_CONNECTIONS",
    "type" : "String",
    "comment" : "\n         * The max number of connections of this APN.\n         * <p>Type: INTEGER</p>\n         *@hide\n         ",
    "links" : [ ]
  }, {
    "name" : "WAIT_TIME_RETRY",
    "type" : "String",
    "comment" : "\n         * The wait time for retrying the APN, in milliseconds.\n         * <p>Type: INTEGER</p>\n         *@hide\n         ",
    "links" : [ ]
  }, {
    "name" : "TIME_LIMIT_FOR_MAX_CONNECTIONS",
    "type" : "String",
    "comment" : "\n         * The max number of seconds this APN will support its maximum number of connections\n         * as defined in {@link #MAX_CONNECTIONS}.\n         * <p>Type: INTEGER</p>\n         *@hide\n         ",
    "links" : [ "#MAX_CONNECTIONS" ]
  }, {
    "name" : "MTU",
    "type" : "String",
    "comment" : "\n         * The MTU (maximum transmit unit) size of the mobile interface to which the APN is\n         * connected, in bytes.\n         * <p>Type: INTEGER </p>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "EDITED_STATUS",
    "type" : "String",
    "comment" : "\n         * APN edit status. APN could be added/edited/deleted by a user or carrier.\n         * see all possible returned APN edit status.\n         * <ul>\n         *     <li>{@link #UNEDITED}</li>\n         *     <li>{@link #USER_EDITED}</li>\n         *     <li>{@link #USER_DELETED}</li>\n         *     <li>{@link #CARRIER_EDITED}</li>\n         *     <li>{@link #CARRIER_DELETED}</li>\n         * </ul>\n         * <p>Type: INTEGER </p>\n         * @hide\n         ",
    "links" : [ "#UNEDITED", "#USER_EDITED", "#USER_DELETED", "#CARRIER_EDITED", "#CARRIER_DELETED" ]
  }, {
    "name" : "USER_VISIBLE",
    "type" : "String",
    "comment" : "\n         * {@code true} if this APN visible to the user, {@code false} otherwise.\n         * <p>Type: INTEGER (boolean)</p>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "USER_EDITABLE",
    "type" : "String",
    "comment" : "\n         * {@code true} if the user allowed to edit this APN, {@code false} otherwise.\n         * <p>Type: INTEGER (boolean)</p>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "INVALID_APN_ID",
    "type" : "int",
    "comment" : "\n         * Integer value denoting an invalid APN id\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "UNEDITED",
    "type" : "int",
    "comment" : "\n         * {@link #EDITED_STATUS APN edit status} indicates that this APN has not been edited or\n         * fails to edit.\n         * <p>Type: INTEGER </p>\n         * @hide\n         ",
    "links" : [ "#EDITED_STATUS" ]
  }, {
    "name" : "USER_EDITED",
    "type" : "int",
    "comment" : "\n         * {@link #EDITED_STATUS APN edit status} indicates that this APN has been edited by users.\n         * <p>Type: INTEGER </p>\n         * @hide\n         ",
    "links" : [ "#EDITED_STATUS" ]
  }, {
    "name" : "USER_DELETED",
    "type" : "int",
    "comment" : "\n         * {@link #EDITED_STATUS APN edit status} indicates that this APN has been deleted by users.\n         * <p>Type: INTEGER </p>\n         * @hide\n         ",
    "links" : [ "#EDITED_STATUS" ]
  }, {
    "name" : "USER_DELETED_BUT_PRESENT_IN_XML",
    "type" : "int",
    "comment" : "\n         * {@link #EDITED_STATUS APN edit status} is an intermediate value used to indicate that an\n         * entry deleted by the user is still present in the new APN database and therefore must\n         * remain tagged as user deleted rather than completely removed from the database.\n         * @hide\n         ",
    "links" : [ "#EDITED_STATUS" ]
  }, {
    "name" : "CARRIER_EDITED",
    "type" : "int",
    "comment" : "\n         * {@link #EDITED_STATUS APN edit status} indicates that this APN has been edited by\n         * carriers.\n         * <p>Type: INTEGER </p>\n         * @hide\n         ",
    "links" : [ "#EDITED_STATUS" ]
  }, {
    "name" : "CARRIER_DELETED",
    "type" : "int",
    "comment" : "\n         * {@link #EDITED_STATUS APN edit status} indicates that this APN has been deleted by\n         * carriers. CARRIER_DELETED values are currently not used as there is no use case.\n         * If they are used, delete() will have to change accordingly. Currently it is hardcoded to\n         * USER_DELETED.\n         * <p>Type: INTEGER </p>\n         * @hide\n         ",
    "links" : [ "#EDITED_STATUS" ]
  }, {
    "name" : "CARRIER_DELETED_BUT_PRESENT_IN_XML",
    "type" : "int",
    "comment" : "\n         * {@link #EDITED_STATUS APN edit status} is an intermediate value used to indicate that an\n         * entry deleted by the carrier is still present in the new APN database and therefore must\n         * remain tagged as user deleted rather than completely removed from the database.\n         * @hide\n         ",
    "links" : [ "#EDITED_STATUS" ]
  }, {
    "name" : "OWNED_BY",
    "type" : "String",
    "comment" : "\n         * The owner of the APN.\n         * <p>Type: INTEGER</p>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "OWNED_BY_DPC",
    "type" : "int",
    "comment" : "\n         * Possible value for the OWNED_BY field.\n         * APN is owned by DPC.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "OWNED_BY_OTHERS",
    "type" : "int",
    "comment" : "\n         * Possible value for the OWNED_BY field.\n         * APN is owned by other sources.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "APN_SET_ID",
    "type" : "String",
    "comment" : "\n         * The APN set id. When the user manually selects an APN or the framework sets an APN as\n         * preferred, all APNs with the same set id as the selected APN should be prioritized over\n         * APNs in other sets.\n         * <p>Type: INTEGER</p>\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "NO_APN_SET_ID",
    "type" : "int",
    "comment" : "\n         * Possible value for the {@link #APN_SET_ID} field. By default APNs will not belong to a\n         * set. If the user manually selects an APN without apn set id, there is no need to\n         * prioritize any specific APN set ids.\n         * <p>Type: INTEGER</p>\n         * @hide\n         ",
    "links" : [ "#APN_SET_ID" ]
  }, {
    "name" : "CARRIER_ID",
    "type" : "String",
    "comment" : "\n         * A unique carrier id associated with this APN\n         * {@see TelephonyManager#getSimCarrierId()}\n         * <p>Type: STRING</p>\n         ",
    "links" : [ ]
  }, {
    "name" : "SKIP_464XLAT",
    "type" : "String",
    "comment" : "\n         * The skip 464xlat flag. Flag works as follows.\n         * {@link #SKIP_464XLAT_DEFAULT}: the APN will skip only APN is IMS and no internet.\n         * {@link #SKIP_464XLAT_DISABLE}: the APN will NOT skip 464xlat\n         * {@link #SKIP_464XLAT_ENABLE}: the APN will skip 464xlat\n         * <p>Type: INTEGER</p>\n         *\n         * @hide\n         ",
    "links" : [ "#SKIP_464XLAT_DEFAULT", "#SKIP_464XLAT_DISABLE", "#SKIP_464XLAT_ENABLE" ]
  }, {
    "name" : "SKIP_464XLAT_DEFAULT",
    "type" : "int",
    "comment" : "\n         * Possible value for the {@link #SKIP_464XLAT} field.\n         * <p>Type: INTEGER</p>\n         *\n         * @hide\n         ",
    "links" : [ "#SKIP_464XLAT" ]
  }, {
    "name" : "SKIP_464XLAT_DISABLE",
    "type" : "int",
    "comment" : "\n         * Possible value for the {@link #SKIP_464XLAT} field.\n         * <p>Type: INTEGER</p>\n         *\n         * @hide\n         ",
    "links" : [ "#SKIP_464XLAT" ]
  }, {
    "name" : "SKIP_464XLAT_ENABLE",
    "type" : "int",
    "comment" : "\n         * Possible value for the {@link #SKIP_464XLAT} field.\n         * <p>Type: INTEGER</p>\n         *\n         * @hide\n         ",
    "links" : [ "#SKIP_464XLAT" ]
  }, {
    "name" : "APN_READING_PERMISSION_CHANGE_ID",
    "type" : "long",
    "comment" : "\n         * Compat framework change ID for the APN db read permission change.\n         *\n         * In API level 30 and beyond, accessing the APN database will require the\n         * {@link android.Manifest.permission#WRITE_APN_SETTINGS} permission. This change ID tracks\n         * apps that are affected because they don't hold this permission.\n         * @hide\n         ",
    "links" : [ "android.Manifest.permission#WRITE_APN_SETTINGS" ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "CONTENT_URI", "SIM_APN_URI", "DPC_URI", "FILTERED_URI", "ENFORCE_MANAGED_URI", "ENFORCE_KEY", "DEFAULT_SORT_ORDER", "NAME", "APN", "PROXY", "PORT", "MMSPROXY", "MMSPORT", "SERVER", "USER", "PASSWORD", "MMSC", "MCC", "MNC", "NUMERIC", "AUTH_TYPE", "TYPE", "PROTOCOL", "ROAMING_PROTOCOL", "CURRENT", "CARRIER_ENABLED", "BEARER", "BEARER_BITMASK", "NETWORK_TYPE_BITMASK", "MVNO_TYPE", "MVNO_MATCH_DATA", "SUBSCRIPTION_ID", "PROFILE_ID", "MODEM_PERSIST", "MAX_CONNECTIONS", "WAIT_TIME_RETRY", "TIME_LIMIT_FOR_MAX_CONNECTIONS", "MTU", "EDITED_STATUS", "USER_VISIBLE", "USER_EDITABLE", "INVALID_APN_ID", "UNEDITED", "USER_EDITED", "USER_DELETED", "USER_DELETED_BUT_PRESENT_IN_XML", "CARRIER_EDITED", "CARRIER_DELETED", "CARRIER_DELETED_BUT_PRESENT_IN_XML", "OWNED_BY", "OWNED_BY_DPC", "OWNED_BY_OTHERS", "APN_SET_ID", "NO_APN_SET_ID", "CARRIER_ID", "SKIP_464XLAT", "SKIP_464XLAT_DEFAULT", "SKIP_464XLAT_DISABLE", "SKIP_464XLAT_ENABLE", "APN_READING_PERMISSION_CHANGE_ID" ],
  "methodNames" : [ ]
}