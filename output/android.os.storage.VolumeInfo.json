{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/storage/VolumeInfo.java",
  "packageName" : "android.os.storage",
  "className" : "VolumeInfo",
  "comment" : "\n * Information about a storage volume that may be mounted. A volume may be a\n * partition on a physical {@link DiskInfo}, an emulated volume above some other\n * storage medium, or a standalone container like an ASEC or OBB.\n * <p>\n * Volumes may be mounted with various flags:\n * <ul>\n * <li>{@link #MOUNT_FLAG_PRIMARY} means the volume provides primary external\n * storage, historically found at {@code /sdcard}.\n * <li>{@link #MOUNT_FLAG_VISIBLE} means the volume is visible to third-party\n * apps for direct filesystem access. The system should send out relevant\n * storage broadcasts and index any media on visible volumes. Visible volumes\n * are considered a more stable part of the device, which is why we take the\n * time to index them. In particular, transient volumes like USB OTG devices\n * <em>should not</em> be marked as visible; their contents should be surfaced\n * to apps through the Storage Access Framework.\n * </ul>\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "ACTION_VOLUME_STATE_CHANGED",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_VOLUME_ID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXTRA_VOLUME_STATE",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ID_PRIVATE_INTERNAL",
    "type" : "String",
    "comment" : " Stub volume representing internal private storage ",
    "links" : [ ]
  }, {
    "name" : "ID_EMULATED_INTERNAL",
    "type" : "String",
    "comment" : " Real volume representing internal emulated storage ",
    "links" : [ ]
  }, {
    "name" : "TYPE_PUBLIC",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_PRIVATE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_EMULATED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_ASEC",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_OBB",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TYPE_STUB",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_UNMOUNTED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_CHECKING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_MOUNTED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_MOUNTED_READ_ONLY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_FORMATTING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_EJECTING",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_UNMOUNTABLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_REMOVED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "STATE_BAD_REMOVAL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MOUNT_FLAG_PRIMARY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MOUNT_FLAG_VISIBLE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sStateToEnvironment",
    "type" : "SparseArray<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sEnvironmentToBroadcast",
    "type" : "ArrayMap<String, String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sStateToDescrip",
    "type" : "SparseIntArray",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sDescriptionComparator",
    "type" : "Comparator<VolumeInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "id",
    "type" : "String",
    "comment" : " vold state ",
    "links" : [ ]
  }, {
    "name" : "type",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "disk",
    "type" : "DiskInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "partGuid",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mountFlags",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mountUserId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "state",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fsType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fsUuid",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "fsLabel",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "path",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "internalPath",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DOCUMENT_AUTHORITY",
    "type" : "String",
    "comment" : " TODO: avoid this layering violation",
    "links" : [ ]
  }, {
    "name" : "DOCUMENT_ROOT_PRIMARY_EMULATED",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<VolumeInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static String getEnvironmentForState(int state)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String getBroadcastForEnvironment(String envState)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String getBroadcastForState(int state)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static Comparator<VolumeInfo> getDescriptionComparator()",
    "returnType" : "Comparator<VolumeInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getId()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public DiskInfo getDisk()",
    "returnType" : "DiskInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getDiskId()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getState()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getStateDescription()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getFsUuid()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getNormalizedFsUuid()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMountUserId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getDescription()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isMountedReadable()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isMountedWritable()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isPrimary()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isPrimaryPhysical()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isVisible()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isVisibleForUser(int userId)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isPrimaryEmulatedForUser(int userId)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if this volume is the primary emulated volume for {@code userId},\n     * {@code false} otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isVisibleForRead(int userId)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isVisibleForWrite(int userId)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public File getPath()",
    "returnType" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public File getInternalPath()",
    "returnType" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public File getPathForUser(int userId)",
    "returnType" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public File getInternalPathForUser(int userId)",
    "returnType" : "File",
    "comment" : "\n     * Path which is accessible to apps holding\n     * {@link android.Manifest.permission#WRITE_MEDIA_STORAGE}.\n     ",
    "links" : [ "android.Manifest.permission#WRITE_MEDIA_STORAGE" ]
  }, {
    "name" : "public StorageVolume buildStorageVolume(Context context, int userId, boolean reportUnmounted)",
    "returnType" : "StorageVolume",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int buildStableMtpStorageId(String fsUuid)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Intent buildBrowseIntent()",
    "returnType" : "Intent",
    "comment" : "\n     * Build an intent to browse the contents of this volume. Only valid for\n     * {@link #TYPE_EMULATED} or {@link #TYPE_PUBLIC}.\n     ",
    "links" : [ "#TYPE_EMULATED", "#TYPE_PUBLIC" ]
  }, {
    "name" : "public Intent buildBrowseIntentForUser(int userId)",
    "returnType" : "Intent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void dump(IndentingPrintWriter pw)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public VolumeInfo clone()",
    "returnType" : "VolumeInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "ACTION_VOLUME_STATE_CHANGED", "EXTRA_VOLUME_ID", "EXTRA_VOLUME_STATE", "ID_PRIVATE_INTERNAL", "ID_EMULATED_INTERNAL", "TYPE_PUBLIC", "TYPE_PRIVATE", "TYPE_EMULATED", "TYPE_ASEC", "TYPE_OBB", "TYPE_STUB", "STATE_UNMOUNTED", "STATE_CHECKING", "STATE_MOUNTED", "STATE_MOUNTED_READ_ONLY", "STATE_FORMATTING", "STATE_EJECTING", "STATE_UNMOUNTABLE", "STATE_REMOVED", "STATE_BAD_REMOVAL", "MOUNT_FLAG_PRIMARY", "MOUNT_FLAG_VISIBLE", "sStateToEnvironment", "sEnvironmentToBroadcast", "sStateToDescrip", "sDescriptionComparator", "id", "type", "disk", "partGuid", "mountFlags", "mountUserId", "state", "fsType", "fsUuid", "fsLabel", "path", "internalPath", "DOCUMENT_AUTHORITY", "DOCUMENT_ROOT_PRIMARY_EMULATED", "CREATOR" ],
  "methodNames" : [ "public static String getEnvironmentForState(int state)", "public static String getBroadcastForEnvironment(String envState)", "public static String getBroadcastForState(int state)", "public static Comparator<VolumeInfo> getDescriptionComparator()", "public String getId()", "public DiskInfo getDisk()", "public String getDiskId()", "public int getType()", "public int getState()", "public int getStateDescription()", "public String getFsUuid()", "public String getNormalizedFsUuid()", "public int getMountUserId()", "public String getDescription()", "public boolean isMountedReadable()", "public boolean isMountedWritable()", "public boolean isPrimary()", "public boolean isPrimaryPhysical()", "public boolean isVisible()", "public boolean isVisibleForUser(int userId)", "public boolean isPrimaryEmulatedForUser(int userId)", "public boolean isVisibleForRead(int userId)", "public boolean isVisibleForWrite(int userId)", "public File getPath()", "public File getInternalPath()", "public File getPathForUser(int userId)", "public File getInternalPathForUser(int userId)", "public StorageVolume buildStorageVolume(Context context, int userId, boolean reportUnmounted)", "public static int buildStableMtpStorageId(String fsUuid)", "public Intent buildBrowseIntent()", "public Intent buildBrowseIntentForUser(int userId)", "public String toString()", "public void dump(IndentingPrintWriter pw)", "public VolumeInfo clone()", "public boolean equals(Object o)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(Parcel parcel, int flags)" ]
}