{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/usage/TimeSparseArray.java",
  "packageName" : "android.app.usage",
  "className" : "TimeSparseArray",
  "comment" : "\n * An array that indexes by a long timestamp, representing milliseconds since the epoch.\n *\n * {@hide}\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWtfReported",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int closestIndexOnOrAfter(long time)",
    "returnType" : "int",
    "comment" : "\n     * Finds the index of the first element whose timestamp is greater or equal to\n     * the given time.\n     *\n     * @param time The timestamp for which to search the array.\n     * @return The index of the matched element, or -1 if no such match exists.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void put(long key, E value)",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * <p> As this container is being used only to keep {@link android.util.AtomicFile files},\n     * there should not be any collisions. Reporting a {@link Slog#wtf(String, String)} in case that\n     * happens, as that will lead to one whole file being dropped.\n     ",
    "links" : [ "android.util.AtomicFile", "Slog#wtf" ]
  }, {
    "name" : "public int closestIndexOnOrBefore(long time)",
    "returnType" : "int",
    "comment" : "\n     * Finds the index of the first element whose timestamp is less than or equal to\n     * the given time.\n     *\n     * @param time The timestamp for which to search the array.\n     * @return The index of the matched element, or -1 if no such match exists.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "mWtfReported" ],
  "methodNames" : [ "public int closestIndexOnOrAfter(long time)", "public void put(long key, E value)", "public int closestIndexOnOrBefore(long time)" ]
}