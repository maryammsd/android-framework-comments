{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/inputmethodservice/InlineSuggestionSession.java",
  "packageName" : "android.inputmethodservice",
  "className" : "InlineSuggestionSession",
  "comment" : "\n * Maintains an inline suggestion session with the autofill manager service.\n *\n * <p> Each session correspond to one request from the Autofill manager service to create an\n * {@link InlineSuggestionsRequest}. It's responsible for calling back to the Autofill manager\n * service with {@link InlineSuggestionsRequest} and receiving {@link InlineSuggestionsResponse}\n * from it.\n * <p>\n * TODO(b/151123764): currently the session may receive responses for different views on the same\n * screen, but we will fix it so each session corresponds to one view.\n *\n * <p> All the methods are expected to be called from the main thread, to ensure thread safety.\n ",
  "links" : [ "android.view.inputmethod.InlineSuggestionsResponse", "android.view.inputmethod.InlineSuggestionsRequest" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EMPTY_RESPONSE",
    "type" : "InlineSuggestionsResponse",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMainThreadHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInlineSuggestionSessionController",
    "type" : "InlineSuggestionSessionController",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestInfo",
    "type" : "InlineSuggestionsRequestInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "IInlineSuggestionsRequestCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRequestSupplier",
    "type" : "Function<Bundle, InlineSuggestionsRequest>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHostInputTokenSupplier",
    "type" : "Supplier<IBinder>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mResponseConsumer",
    "type" : "Consumer<InlineSuggestionsResponse>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreviousResponseIsEmpty",
    "type" : "Boolean",
    "comment" : " been called yet, the value would be null.",
    "links" : [ ]
  }, {
    "name" : "mCallbackInvoked",
    "type" : "boolean",
    "comment" : "\n     * Indicates whether {@link #makeInlineSuggestionRequestUncheck()} has been called or not,\n     * because it should only be called at most once.\n     ",
    "links" : [ "#makeInlineSuggestionRequestUncheck()" ]
  }, {
    "name" : "mResponseCallback",
    "type" : "InlineSuggestionsResponseCallbackImpl",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " InlineSuggestionsRequestInfo getRequestInfo()",
    "returnType" : "InlineSuggestionsRequestInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " IInlineSuggestionsRequestCallback getRequestCallback()",
    "returnType" : "IInlineSuggestionsRequestCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean shouldSendImeStatus()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the session should send Ime status updates to Autofill.\n     *\n     * <p> The session only starts to send Ime status updates to Autofill after the sending back\n     * an {@link InlineSuggestionsRequest}.\n     ",
    "links" : [ "android.view.inputmethod.InlineSuggestionsRequest" ]
  }, {
    "name" : " boolean isCallbackInvoked()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if {@link #makeInlineSuggestionRequestUncheck()} is called. It doesn't not\n     * necessarily mean an {@link InlineSuggestionsRequest} was sent, because it may call {@link\n     * IInlineSuggestionsRequestCallback#onInlineSuggestionsUnsupported()}.\n     *\n     * <p> The callback should be invoked at most once for each session.\n     ",
    "links" : [ "com.android.internal.inputmethod.IInlineSuggestionsRequestCallback#onInlineSuggestionsUnsupported()", "#makeInlineSuggestionRequestUncheck()", "android.view.inputmethod.InlineSuggestionsRequest" ]
  }, {
    "name" : " void invalidate()",
    "returnType" : "void",
    "comment" : "\n     * Invalidates the current session so it doesn't process any further {@link\n     * InlineSuggestionsResponse} from Autofill.\n     *\n     * <p> This method should be called when the session is de-referenced from the {@link\n     * InlineSuggestionSessionController}.\n     ",
    "links" : [ "android.view.inputmethod.InlineSuggestionsResponse", "android.inputmethodservice.InlineSuggestionSessionController" ]
  }, {
    "name" : " void makeInlineSuggestionRequestUncheck()",
    "returnType" : "void",
    "comment" : "\n     * Gets the {@link InlineSuggestionsRequest} from IME and send it back to the Autofill if it's\n     * not null.\n     *\n     * <p>Calling this method implies that the input is started on the view corresponding to the\n     * session.\n     ",
    "links" : [ "android.view.inputmethod.InlineSuggestionsRequest" ]
  }, {
    "name" : " void handleOnInlineSuggestionsResponse(@NonNull AutofillId fieldId, @NonNull InlineSuggestionsResponse response)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void consumeInlineSuggestionsResponse(@NonNull InlineSuggestionsResponse response)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " InlineSuggestionsRequestInfo getRequestInfo()", " IInlineSuggestionsRequestCallback getRequestCallback()", " boolean shouldSendImeStatus()", " boolean isCallbackInvoked()", " void invalidate()", " void makeInlineSuggestionRequestUncheck()", " void handleOnInlineSuggestionsResponse(@NonNull AutofillId fieldId, @NonNull InlineSuggestionsResponse response)", " void consumeInlineSuggestionsResponse(@NonNull InlineSuggestionsResponse response)" ],
  "variableNames" : [ "TAG", "EMPTY_RESPONSE", "mMainThreadHandler", "mInlineSuggestionSessionController", "mRequestInfo", "mCallback", "mRequestSupplier", "mHostInputTokenSupplier", "mResponseConsumer", "mPreviousResponseIsEmpty", "mCallbackInvoked", "mResponseCallback" ]
}