{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/NetworkScore.java",
  "packageName" : "android.net",
  "className" : "NetworkScore",
  "comment" : "\n * Object representing the quality of a network as perceived by the user.\n *\n * A NetworkScore object represents the characteristics of a network that affects how good the\n * network is considered for a particular use.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mLegacyInt",
    "type" : "int",
    "comment" : " a migration.",
    "links" : [ ]
  }, {
    "name" : "KEEP_CONNECTED_NONE",
    "type" : "int",
    "comment" : "\n     * Do not keep this network connected if there is no outstanding request for it.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEEP_CONNECTED_FOR_HANDOVER",
    "type" : "int",
    "comment" : "\n     * Keep this network connected even if there is no outstanding request for it, because it\n     * is being considered for handover.\n     ",
    "links" : [ ]
  }, {
    "name" : "KEEP_CONNECTED_FOR_TEST",
    "type" : "int",
    "comment" : "\n     * Keep this network connected even if there is no outstanding request for it, because it\n     * is used in a test and it's not necessarily easy to file the right request for it.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "KEEP_CONNECTED_LOCAL_NETWORK",
    "type" : "int",
    "comment" : "\n     * Keep this network connected even if there is no outstanding request for it, because\n     * it is a local network.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "POLICY_YIELD_TO_BAD_WIFI",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "POLICY_TRANSPORT_PRIMARY",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "POLICY_EXITING",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MIN_AGENT_MANAGED_POLICY",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "MAX_AGENT_MANAGED_POLICY",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "mPolicies",
    "type" : "long",
    "comment" : " Bitmask of all the policies applied to this score.",
    "links" : [ ]
  }, {
    "name" : "mKeepConnectedReason",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<NetworkScore>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getLegacyInt()",
    "returnType" : "int",
    "comment" : "\n     * Get the legacy int score embedded in this NetworkScore.\n     * @see Builder#setLegacyInt(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getKeepConnectedReason()",
    "returnType" : "int",
    "comment" : "\n     * Returns the keep-connected reason, or KEEP_CONNECTED_NONE.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasPolicy(final int policy)",
    "returnType" : "boolean",
    "comment" : "\n     * @return whether this score has a particular policy.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getPolicies()",
    "returnType" : "long",
    "comment" : "\n     * To the exclusive usage of FullScore\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean shouldYieldToBadWifi()",
    "returnType" : "boolean",
    "comment" : " In the mean time this is handled by Connectivity in a backward-compatible manner.",
    "links" : [ ]
  }, {
    "name" : "public boolean isTransportPrimary()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether this network is primary for this transport.\n     *\n     * When multiple networks of the same transport are active, the device prefers the ones that\n     * are primary. This is meant in particular for DS-DA devices with a user setting to choose the\n     * default SIM card, or for WiFi STA+STA and make-before-break cases.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isExiting()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether this network is exiting.\n     *\n     * If this policy is set, the device will expect this network to disconnect within seconds.\n     * It will try to migrate to some other network if any is available, policy permitting, to\n     * avoid service disruption.\n     * This is useful in particular when a good cellular network is available and WiFi is getting\n     * weak and risks disconnecting soon. The WiFi network should be marked as exiting so that\n     * the device will prefer the reliable mobile network over this soon-to-be-lost WiFi.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull final Parcel dest, final int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getLegacyInt()", "public int getKeepConnectedReason()", "public boolean hasPolicy(final int policy)", "public long getPolicies()", "public boolean shouldYieldToBadWifi()", "public boolean isTransportPrimary()", "public boolean isExiting()", "public String toString()", "public void writeToParcel(@NonNull final Parcel dest, final int flags)", "public int describeContents()" ],
  "variableNames" : [ "mLegacyInt", "KEEP_CONNECTED_NONE", "KEEP_CONNECTED_FOR_HANDOVER", "KEEP_CONNECTED_FOR_TEST", "KEEP_CONNECTED_LOCAL_NETWORK", "POLICY_YIELD_TO_BAD_WIFI", "POLICY_TRANSPORT_PRIMARY", "POLICY_EXITING", "MIN_AGENT_MANAGED_POLICY", "MAX_AGENT_MANAGED_POLICY", "mPolicies", "mKeepConnectedReason", "CREATOR" ]
}