{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/gesture/Gesture.java",
  "packageName" : "android.gesture",
  "className" : "Gesture",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "GESTURE_ID_BASE",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BITMAP_RENDERING_WIDTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BITMAP_RENDERING_ANTIALIAS",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BITMAP_RENDERING_DITHER",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sGestureCount",
    "type" : "AtomicInteger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBoundingBox",
    "type" : "RectF",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGestureID",
    "type" : "long",
    "comment" : " the same as its instance ID",
    "links" : [ ]
  }, {
    "name" : "mStrokes",
    "type" : "ArrayList<GestureStroke>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<Gesture>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Object clone()",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ArrayList<GestureStroke> getStrokes()",
    "returnType" : "ArrayList<GestureStroke>",
    "comment" : "\n     * @return all the strokes of the gesture\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getStrokesCount()",
    "returnType" : "int",
    "comment" : "\n     * @return the number of strokes included by this gesture\n     ",
    "links" : [ ]
  }, {
    "name" : "public void addStroke(GestureStroke stroke)",
    "returnType" : "void",
    "comment" : "\n     * Adds a stroke to the gesture.\n     * \n     * @param stroke\n     ",
    "links" : [ ]
  }, {
    "name" : "public float getLength()",
    "returnType" : "float",
    "comment" : "\n     * Calculates the total length of the gesture. When there are multiple strokes in\n     * the gesture, this returns the sum of the lengths of all the strokes.\n     * \n     * @return the length of the gesture\n     ",
    "links" : [ ]
  }, {
    "name" : "public RectF getBoundingBox()",
    "returnType" : "RectF",
    "comment" : "\n     * @return the bounding box of the gesture\n     ",
    "links" : [ ]
  }, {
    "name" : "public Path toPath()",
    "returnType" : "Path",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Path toPath(Path path)",
    "returnType" : "Path",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Path toPath(int width, int height, int edge, int numSample)",
    "returnType" : "Path",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Path toPath(Path path, int width, int height, int edge, int numSample)",
    "returnType" : "Path",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void setID(long id)",
    "returnType" : "void",
    "comment" : "\n     * Sets the id of the gesture.\n     * \n     * @param id\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getID()",
    "returnType" : "long",
    "comment" : "\n     * @return the id of the gesture\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bitmap toBitmap(int width, int height, int edge, int numSample, int color)",
    "returnType" : "Bitmap",
    "comment" : "\n     * Creates a bitmap of the gesture with a transparent background.\n     * \n     * @param width width of the target bitmap\n     * @param height height of the target bitmap\n     * @param edge the edge\n     * @param numSample\n     * @param color\n     * @return the bitmap\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bitmap toBitmap(int width, int height, int inset, int color)",
    "returnType" : "Bitmap",
    "comment" : "\n     * Creates a bitmap of the gesture with a transparent background.\n     * \n     * @param width\n     * @param height\n     * @param inset\n     * @param color\n     * @return the bitmap\n     ",
    "links" : [ ]
  }, {
    "name" : " void serialize(DataOutputStream out) throws IOException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static Gesture deserialize(DataInputStream in) throws IOException",
    "returnType" : "Gesture",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Object clone()", "public ArrayList<GestureStroke> getStrokes()", "public int getStrokesCount()", "public void addStroke(GestureStroke stroke)", "public float getLength()", "public RectF getBoundingBox()", "public Path toPath()", "public Path toPath(Path path)", "public Path toPath(int width, int height, int edge, int numSample)", "public Path toPath(Path path, int width, int height, int edge, int numSample)", " void setID(long id)", "public long getID()", "public Bitmap toBitmap(int width, int height, int edge, int numSample, int color)", "public Bitmap toBitmap(int width, int height, int inset, int color)", " void serialize(DataOutputStream out) throws IOException", " static Gesture deserialize(DataInputStream in) throws IOException", "public void writeToParcel(Parcel out, int flags)", "public int describeContents()" ],
  "variableNames" : [ "GESTURE_ID_BASE", "BITMAP_RENDERING_WIDTH", "BITMAP_RENDERING_ANTIALIAS", "BITMAP_RENDERING_DITHER", "sGestureCount", "mBoundingBox", "mGestureID", "mStrokes", "CREATOR" ]
}