{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/text/format/Formatter.java",
  "packageName" : "android.text.format",
  "className" : "Formatter",
  "comment" : "\n * Utility class to aid in formatting common values that are not covered\n * by the {@link java.util.Formatter} class in {@link java.util}\n ",
  "variables" : [ {
    "name" : "FLAG_SHORTER",
    "type" : "int",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "FLAG_CALCULATE_ROUNDED",
    "type" : "int",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "FLAG_SI_UNITS",
    "type" : "int",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "FLAG_IEC_UNITS",
    "type" : "int",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "SECONDS_PER_MINUTE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SECONDS_PER_HOUR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SECONDS_PER_DAY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MILLIS_PER_MINUTE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static Locale localeFromContext(@NonNull Context context)",
    "returnType" : "Locale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String bidiWrap(@NonNull Context context, String source)",
    "returnType" : "String",
    "comment" : " Wraps the source string in bidi formatting characters in RTL locales ",
    "links" : [ ]
  }, {
    "name" : "public static String formatFileSize(@Nullable Context context, long sizeBytes)",
    "returnType" : "String",
    "comment" : "\n     * Formats a content size to be in the form of bytes, kilobytes, megabytes, etc.\n     *\n     * <p>As of O, the prefixes are used in their standard meanings in the SI system, so kB = 1000\n     * bytes, MB = 1,000,000 bytes, etc.</p>\n     *\n     * <p class=\"note\">In {@link android.os.Build.VERSION_CODES#N} and earlier, powers of 1024 are\n     * used instead, with KB = 1024 bytes, MB = 1,048,576 bytes, etc.</p>\n     *\n     * <p>If the context has a right-to-left locale, the returned string is wrapped in bidi\n     * formatting characters to make sure it's displayed correctly if inserted inside a\n     * right-to-left string. (This is useful in cases where the unit strings, like \"MB\", are\n     * left-to-right, but the locale is right-to-left.)</p>\n     *\n     * @param context Context to use to load the localized units\n     * @param sizeBytes size value to be formatted, in bytes\n     * @return formatted string with the number\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#N" ]
  }, {
    "name" : "public static String formatFileSize(@Nullable Context context, long sizeBytes, int flags)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static String formatShortFileSize(@Nullable Context context, long sizeBytes)",
    "returnType" : "String",
    "comment" : "\n     * Like {@link #formatFileSize}, but trying to generate shorter numbers\n     * (showing fewer digits of precision).\n     ",
    "links" : [ "#formatFileSize" ]
  }, {
    "name" : "public static BytesResult formatBytes(Resources res, long sizeBytes, int flags)",
    "returnType" : "BytesResult",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "public static String formatIpAddress(int ipv4Address)",
    "returnType" : "String",
    "comment" : "\n     * Returns a string in the canonical IPv4 format ###.###.###.### from a packed integer\n     * containing the IP address. The IPv4 address is expected to be in little-endian\n     * format (LSB first). That is, 0x01020304 will return \"4.3.2.1\".\n     *\n     * @deprecated Use {@link java.net.InetAddress#getHostAddress()}, which supports both IPv4 and\n     *     IPv6 addresses. This method does not support IPv6 addresses.\n     ",
    "links" : [ "java.net.InetAddress#getHostAddress" ]
  }, {
    "name" : "public static String formatShortElapsedTime(Context context, long millis)",
    "returnType" : "String",
    "comment" : "\n     * Returns elapsed time for the given millis, in the following format:\n     * 1 day, 5 hr; will include at most two units, can go down to seconds precision.\n     * @param context the application context\n     * @param millis the elapsed time in milli seconds\n     * @return the formatted elapsed time\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String formatShortElapsedTimeRoundingUpToMinutes(Context context, long millis)",
    "returnType" : "String",
    "comment" : "\n     * Returns elapsed time for the given millis, in the following format:\n     * 1 day, 5 hr; will include at most two units, can go down to minutes precision.\n     * @param context the application context\n     * @param millis the elapsed time in milli seconds\n     * @return the formatted elapsed time\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "FLAG_SHORTER", "FLAG_CALCULATE_ROUNDED", "FLAG_SI_UNITS", "FLAG_IEC_UNITS", "SECONDS_PER_MINUTE", "SECONDS_PER_HOUR", "SECONDS_PER_DAY", "MILLIS_PER_MINUTE" ],
  "methodNames" : [ "private static Locale localeFromContext(@NonNull Context context)", "private static String bidiWrap(@NonNull Context context, String source)", "public static String formatFileSize(@Nullable Context context, long sizeBytes)", "public static String formatFileSize(@Nullable Context context, long sizeBytes, int flags)", "public static String formatShortFileSize(@Nullable Context context, long sizeBytes)", "public static BytesResult formatBytes(Resources res, long sizeBytes, int flags)", "public static String formatIpAddress(int ipv4Address)", "public static String formatShortElapsedTime(Context context, long millis)", "public static String formatShortElapsedTimeRoundingUpToMinutes(Context context, long millis)" ]
}