{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telecom/Voicemail.java",
  "packageName" : "android.telecom",
  "className" : "Voicemail",
  "comment" : "\n * Represents a single voicemail stored in the voicemail content provider.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mTimestamp",
    "type" : "Long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumber",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPhoneAccount",
    "type" : "PhoneAccountHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mId",
    "type" : "Long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDuration",
    "type" : "Long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSource",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProviderData",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUri",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsRead",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHasContent",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTranscription",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Voicemail>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static Builder createForInsertion(long timestamp, String number)",
    "returnType" : "Builder",
    "comment" : "\n     * Create a {@link Builder} for a new {@link Voicemail} to be inserted.\n     * <p>\n     * The number and the timestamp are mandatory for insertion.\n     ",
    "links" : [ "Builder", "android.telecom.Voicemail" ]
  }, {
    "name" : "public static Builder createForUpdate(long id, String sourceData)",
    "returnType" : "Builder",
    "comment" : "\n     * Create a {@link Builder} for a {@link Voicemail} to be updated (or deleted).\n     * <p>\n     * The id and source data fields are mandatory for update - id is necessary for updating the\n     * database and source data is necessary for updating the server.\n     ",
    "links" : [ "Builder", "android.telecom.Voicemail" ]
  }, {
    "name" : "public long getId()",
    "returnType" : "long",
    "comment" : "\n     * The identifier of the voicemail in the content provider.\n     * <p>\n     * This may be missing in the case of a new {@link Voicemail} that we plan to insert into the\n     * content provider, since until it has been inserted we don't know what id it should have. If\n     * none is specified, we return -1.\n     ",
    "links" : [ "android.telecom.Voicemail" ]
  }, {
    "name" : "public String getNumber()",
    "returnType" : "String",
    "comment" : " The number of the person leaving the voicemail, empty string if unknown, null if not set. ",
    "links" : [ ]
  }, {
    "name" : "public PhoneAccountHandle getPhoneAccount()",
    "returnType" : "PhoneAccountHandle",
    "comment" : " The phone account associated with the voicemail, null if not set. ",
    "links" : [ ]
  }, {
    "name" : "public long getTimestampMillis()",
    "returnType" : "long",
    "comment" : " The timestamp the voicemail was received, in millis since the epoch, zero if not set. ",
    "links" : [ ]
  }, {
    "name" : "public long getDuration()",
    "returnType" : "long",
    "comment" : " Gets the duration of the voicemail in millis, or zero if the field is not set. ",
    "links" : [ ]
  }, {
    "name" : "public String getSourcePackage()",
    "returnType" : "String",
    "comment" : "\n     * Returns the package name of the source that added this voicemail, or null if this field is\n     * not set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSourceData()",
    "returnType" : "String",
    "comment" : "\n     * Returns the application-specific data type stored with the voicemail, or null if this field\n     * is not set.\n     * <p>\n     * Source data is typically used as an identifier to uniquely identify the voicemail against\n     * the voicemail server. This is likely to be something like the IMAP UID, or some other\n     * server-generated identifying string.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Uri getUri()",
    "returnType" : "Uri",
    "comment" : "\n     * Gets the Uri that can be used to refer to this voicemail, and to make it play.\n     * <p>\n     * Returns null if we don't know the Uri.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isRead()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells us if the voicemail message has been marked as read.\n     * <p>\n     * Always returns false if this field has not been set, i.e. if hasRead() returns false.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasContent()",
    "returnType" : "boolean",
    "comment" : "\n     * Tells us if there is content stored at the Uri.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTranscription()",
    "returnType" : "String",
    "comment" : "\n     * Returns the text transcription of this voicemail, or null if this field is not set.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mTimestamp", "mNumber", "mPhoneAccount", "mId", "mDuration", "mSource", "mProviderData", "mUri", "mIsRead", "mHasContent", "mTranscription", "CREATOR" ],
  "methodNames" : [ "public static Builder createForInsertion(long timestamp, String number)", "public static Builder createForUpdate(long id, String sourceData)", "public long getId()", "public String getNumber()", "public PhoneAccountHandle getPhoneAccount()", "public long getTimestampMillis()", "public long getDuration()", "public String getSourcePackage()", "public String getSourceData()", "public Uri getUri()", "public boolean isRead()", "public boolean hasContent()", "public String getTranscription()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ]
}