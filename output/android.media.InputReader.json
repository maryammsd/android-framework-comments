{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaParser.java",
  "packageName" : "android.media",
  "className" : "InputReader",
  "comment" : " Provides input data to {@link MediaParser}. ",
  "links" : [ "android.media.MediaParser" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " int read(@NonNull byte[] buffer, int offset, int readLength) throws IOException",
    "returnType" : "int",
    "comment" : "\n         * Reads up to {@code readLength} bytes of data and stores them into {@code buffer},\n         * starting at index {@code offset}.\n         *\n         * <p>This method blocks until at least one byte is read, the end of input is detected, or\n         * an exception is thrown. The read position advances to the first unread byte.\n         *\n         * @param buffer The buffer into which the read data should be stored.\n         * @param offset The start offset into {@code buffer} at which data should be written.\n         * @param readLength The maximum number of bytes to read.\n         * @return The non-zero number of bytes read, or -1 if no data is available because the end\n         *     of the input has been reached.\n         * @throws java.io.IOException If an error occurs reading from the source.\n         ",
    "links" : [ ]
  }, {
    "name" : " long getPosition()",
    "returnType" : "long",
    "comment" : " Returns the current read position (byte offset) in the stream. ",
    "links" : [ ]
  }, {
    "name" : " long getLength()",
    "returnType" : "long",
    "comment" : " Returns the length of the input in bytes, or -1 if the length is unknown. ",
    "links" : [ ]
  } ],
  "methodNames" : [ " int read(@NonNull byte[] buffer, int offset, int readLength) throws IOException", " long getPosition()", " long getLength()" ],
  "variableNames" : [ ]
}