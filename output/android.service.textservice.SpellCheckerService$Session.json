{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/textservice/SpellCheckerService.java",
  "packageName" : "android.service.textservice",
  "className" : "Session",
  "comment" : "\n     * This abstract class should be overridden by a concrete implementation of a spell checker.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mInternalSession",
    "type" : "InternalISpellCheckerSession",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSentenceLevelAdapter",
    "type" : "SentenceLevelAdapter",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void setInternalISpellCheckerSession(InternalISpellCheckerSession session)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract void onCreate()",
    "returnType" : "void",
    "comment" : "\n         * This is called after the class is initialized, at which point it knows it can call\n         * getLocale() etc...\n         ",
    "links" : [ ]
  }, {
    "name" : "public abstract SuggestionsInfo onGetSuggestions(TextInfo textInfo, int suggestionsLimit)",
    "returnType" : "SuggestionsInfo",
    "comment" : "\n         * Get suggestions for specified text in TextInfo.\n         * This function will run on the incoming IPC thread.\n         * So, this is not called on the main thread,\n         * but will be called in series on another thread.\n         * @param textInfo the text metadata\n         * @param suggestionsLimit the maximum number of suggestions to be returned\n         * @return SuggestionsInfo which contains suggestions for textInfo\n         ",
    "links" : [ ]
  }, {
    "name" : "public SuggestionsInfo[] onGetSuggestionsMultiple(TextInfo[] textInfos, int suggestionsLimit, boolean sequentialWords)",
    "returnType" : "SuggestionsInfo[]",
    "comment" : "\n         * A batch process of onGetSuggestions.\n         * This function will run on the incoming IPC thread.\n         * So, this is not called on the main thread,\n         * but will be called in series on another thread.\n         * @param textInfos an array of the text metadata\n         * @param suggestionsLimit the maximum number of suggestions to be returned\n         * @param sequentialWords true if textInfos can be treated as sequential words.\n         * @return an array of {@link SentenceSuggestionsInfo} returned by\n         * {@link SpellCheckerService.Session#onGetSuggestions(TextInfo, int)}\n         ",
    "links" : [ "SpellCheckerService.Session#onGetSuggestions(TextInfo", "android.view.textservice.SentenceSuggestionsInfo" ]
  }, {
    "name" : "public SentenceSuggestionsInfo[] onGetSentenceSuggestionsMultiple(TextInfo[] textInfos, int suggestionsLimit)",
    "returnType" : "SentenceSuggestionsInfo[]",
    "comment" : "\n         * Get sentence suggestions for specified texts in an array of TextInfo.\n         * The default implementation splits the input text to words and returns\n         * {@link SentenceSuggestionsInfo} which contains suggestions for each word.\n         * This function will run on the incoming IPC thread.\n         * So, this is not called on the main thread,\n         * but will be called in series on another thread.\n         * When you override this method, make sure that suggestionsLimit is applied to suggestions\n         * that share the same start position and length.\n         * @param textInfos an array of the text metadata\n         * @param suggestionsLimit the maximum number of suggestions to be returned\n         * @return an array of {@link SentenceSuggestionsInfo} returned by\n         * {@link SpellCheckerService.Session#onGetSuggestions(TextInfo, int)}\n         ",
    "links" : [ "SpellCheckerService.Session#onGetSuggestions(TextInfo", "android.view.textservice.SentenceSuggestionsInfo" ]
  }, {
    "name" : "public void onCancel()",
    "returnType" : "void",
    "comment" : "\n         * Request to abort all tasks executed in SpellChecker.\n         * This function will run on the incoming IPC thread.\n         * So, this is not called on the main thread,\n         * but will be called in series on another thread.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onClose()",
    "returnType" : "void",
    "comment" : "\n         * Request to close this session.\n         * This function will run on the incoming IPC thread.\n         * So, this is not called on the main thread,\n         * but will be called in series on another thread.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getLocale()",
    "returnType" : "String",
    "comment" : "\n         * @return Locale for this session\n         ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getBundle()",
    "returnType" : "Bundle",
    "comment" : "\n         * @return Bundle for this session\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSupportedAttributes()",
    "returnType" : "int",
    "comment" : "\n         * Returns result attributes supported for this session.\n         *\n         * <p>The session implementation should not set attributes that are not included in the\n         * return value of {@code getSupportedAttributes()} when creating {@link SuggestionsInfo}.\n         *\n         * @return The supported result attributes for this session\n         ",
    "links" : [ "android.view.textservice.SentenceSuggestionsInfo" ]
  } ],
  "methodNames" : [ "public final void setInternalISpellCheckerSession(InternalISpellCheckerSession session)", "public abstract void onCreate()", "public abstract SuggestionsInfo onGetSuggestions(TextInfo textInfo, int suggestionsLimit)", "public SuggestionsInfo[] onGetSuggestionsMultiple(TextInfo[] textInfos, int suggestionsLimit, boolean sequentialWords)", "public SentenceSuggestionsInfo[] onGetSentenceSuggestionsMultiple(TextInfo[] textInfos, int suggestionsLimit)", "public void onCancel()", "public void onClose()", "public String getLocale()", "public Bundle getBundle()", "public int getSupportedAttributes()" ],
  "variableNames" : [ "mInternalSession", "mSentenceLevelAdapter" ]
}