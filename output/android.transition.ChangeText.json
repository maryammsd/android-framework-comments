{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/transition/ChangeText.java",
  "packageName" : "android.transition",
  "className" : "ChangeText",
  "comment" : "\n * This transition tracks changes to the text in TextView targets. If the text\n * changes between the start and end scenes, the transition ensures that the\n * starting text stays until the transition ends, at which point it changes\n * to the end text.  This is useful in situations where you want to resize a\n * text view to its new size before displaying the text that goes there.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPNAME_TEXT",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPNAME_TEXT_SELECTION_START",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPNAME_TEXT_SELECTION_END",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PROPNAME_TEXT_COLOR",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChangeBehavior",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CHANGE_BEHAVIOR_KEEP",
    "type" : "int",
    "comment" : "\n     * Flag specifying that the text in affected/changing TextView targets will keep\n     * their original text during the transition, setting it to the final text when\n     * the transition ends. This is the default behavior.\n     *\n     * @see #setChangeBehavior(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "CHANGE_BEHAVIOR_OUT",
    "type" : "int",
    "comment" : "\n     * Flag specifying that the text changing animation should first fade\n     * out the original text completely. The new text is set on the target\n     * view at the end of the fade-out animation. This transition is typically\n     * used with a later {@link #CHANGE_BEHAVIOR_IN} transition, allowing more\n     * flexibility than the {@link #CHANGE_BEHAVIOR_OUT_IN} by allowing other\n     * transitions to be run sequentially or in parallel with these fades.\n     *\n     * @see #setChangeBehavior(int)\n     ",
    "links" : [ "#CHANGE_BEHAVIOR_OUT_IN", "#CHANGE_BEHAVIOR_IN" ]
  }, {
    "name" : "CHANGE_BEHAVIOR_IN",
    "type" : "int",
    "comment" : "\n     * Flag specifying that the text changing animation should fade in the\n     * end text into the affected target view(s). This transition is typically\n     * used in conjunction with an earlier {@link #CHANGE_BEHAVIOR_OUT}\n     * transition, possibly with other transitions running as well, such as\n     * a sequence to fade out, then resize the view, then fade in.\n     *\n     * @see #setChangeBehavior(int)\n     ",
    "links" : [ "#CHANGE_BEHAVIOR_OUT" ]
  }, {
    "name" : "CHANGE_BEHAVIOR_OUT_IN",
    "type" : "int",
    "comment" : "\n     * Flag specifying that the text changing animation should first fade\n     * out the original text completely and then fade in the\n     * new text.\n     *\n     * @see #setChangeBehavior(int)\n     ",
    "links" : [ ]
  }, {
    "name" : "sTransitionProperties",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ChangeText setChangeBehavior(int changeBehavior)",
    "returnType" : "ChangeText",
    "comment" : "\n     * Sets the type of changing animation that will be run, one of\n     * {@link #CHANGE_BEHAVIOR_KEEP}, {@link #CHANGE_BEHAVIOR_OUT},\n     * {@link #CHANGE_BEHAVIOR_IN}, and {@link #CHANGE_BEHAVIOR_OUT_IN}.\n     *\n     * @param changeBehavior The type of fading animation to use when this\n     * transition is run.\n     * @return this textChange object.\n     ",
    "links" : [ "#CHANGE_BEHAVIOR_OUT_IN", "#CHANGE_BEHAVIOR_KEEP", "#CHANGE_BEHAVIOR_OUT", "#CHANGE_BEHAVIOR_IN" ]
  }, {
    "name" : "public String[] getTransitionProperties()",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getChangeBehavior()",
    "returnType" : "int",
    "comment" : "\n     * Returns the type of changing animation that will be run.\n     *\n     * @return either {@link #CHANGE_BEHAVIOR_KEEP}, {@link #CHANGE_BEHAVIOR_OUT},\n     * {@link #CHANGE_BEHAVIOR_IN}, or {@link #CHANGE_BEHAVIOR_OUT_IN}.\n     ",
    "links" : [ "#CHANGE_BEHAVIOR_OUT_IN", "#CHANGE_BEHAVIOR_KEEP", "#CHANGE_BEHAVIOR_OUT", "#CHANGE_BEHAVIOR_IN" ]
  }, {
    "name" : "private void captureValues(TransitionValues transitionValues)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void captureStartValues(TransitionValues transitionValues)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void captureEndValues(TransitionValues transitionValues)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Animator createAnimator(ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues)",
    "returnType" : "Animator",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void setSelection(EditText editText, int start, int end)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOG_TAG", "PROPNAME_TEXT", "PROPNAME_TEXT_SELECTION_START", "PROPNAME_TEXT_SELECTION_END", "PROPNAME_TEXT_COLOR", "mChangeBehavior", "CHANGE_BEHAVIOR_KEEP", "CHANGE_BEHAVIOR_OUT", "CHANGE_BEHAVIOR_IN", "CHANGE_BEHAVIOR_OUT_IN", "sTransitionProperties" ],
  "methodNames" : [ "public ChangeText setChangeBehavior(int changeBehavior)", "public String[] getTransitionProperties()", "public int getChangeBehavior()", "private void captureValues(TransitionValues transitionValues)", "public void captureStartValues(TransitionValues transitionValues)", "public void captureEndValues(TransitionValues transitionValues)", "public Animator createAnimator(ViewGroup sceneRoot, TransitionValues startValues, TransitionValues endValues)", "private void setSelection(EditText editText, int start, int end)" ]
}