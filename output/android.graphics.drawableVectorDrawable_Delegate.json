{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/graphics/drawable/VectorDrawable_Delegate.java",
  "packageName" : "android.graphics.drawable",
  "className" : "VectorDrawable_Delegate",
  "comment" : "\n * Delegate used to provide new implementation of a select few methods of {@link VectorDrawable}\n * <p>\n * Through the layoutlib_create tool, the original  methods of VectorDrawable have been replaced by\n * calls to methods of the same name in this delegate class.\n ",
  "variables" : [ {
    "name" : "LOGTAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DBG_VECTOR_DRAWABLE",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sPathManager",
    "type" : "DelegateManager<VNativeObject>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static long addNativeObject(VNativeObject object)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static TypedArray obtainAttributes(Resources res, Theme theme, AttributeSet set, int[] attrs)",
    "returnType" : "TypedArray",
    "comment" : "\n     * Obtains styled attributes from the theme, if available, or unstyled resources if the theme is\n     * null.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static int applyAlpha(int color, float alpha)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateTree(long rootGroupPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateTreeFromCopy(long rendererToCopyPtr, long rootGroupPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetRendererViewportSize(long rendererPtr, float viewportWidth, float viewportHeight)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nSetRootAlpha(long rendererPtr, float alpha)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetRootAlpha(long rendererPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetAntiAlias(long rendererPtr, boolean aa)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetAllowCaching(long rendererPtr, boolean allowCaching)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int nDraw(long rendererPtr, long canvasWrapperPtr, long colorFilterPtr, Rect bounds, boolean needsMirroring, boolean canReuseCache)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateFullPath()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateFullPath(long nativeFullPathPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nGetFullPathProperties(long pathPtr, byte[] propertiesData, int length)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nUpdateFullPathProperties(long pathPtr, float strokeWidth, int strokeColor, float strokeAlpha, int fillColor, float fillAlpha, float trimPathStart, float trimPathEnd, float trimPathOffset, float strokeMiterLimit, int strokeLineCap, int strokeLineJoin, int fillType)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nUpdateFullPathFillGradient(long pathPtr, long fillGradientPtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nUpdateFullPathStrokeGradient(long pathPtr, long strokeGradientPtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateClipPath()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateClipPath(long clipPathPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateGroup()",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static long nCreateGroup(long groupPtr)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetName(long nodePtr, String name)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static boolean nGetGroupProperties(long groupPtr, float[] propertiesData, int length)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nUpdateGroupProperties(long groupPtr, float rotate, float pivotX, float pivotY, float scaleX, float scaleY, float translateX, float translateY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nAddChild(long groupPtr, long nodePtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetPathString(long pathPtr, String pathString, int length)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetRotation(long groupPtr)",
    "returnType" : "float",
    "comment" : " Setters and getters during animation.",
    "links" : [ ]
  }, {
    "name" : " static void nSetRotation(long groupPtr, float rotation)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetPivotX(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetPivotX(long groupPtr, float pivotX)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetPivotY(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetPivotY(long groupPtr, float pivotY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetScaleX(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetScaleX(long groupPtr, float scaleX)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetScaleY(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetScaleY(long groupPtr, float scaleY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetTranslateX(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetTranslateX(long groupPtr, float translateX)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetTranslateY(long groupPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetTranslateY(long groupPtr, float translateY)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetPathData(long pathPtr, long pathDataPtr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetStrokeWidth(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetStrokeWidth(long pathPtr, float width)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int nGetStrokeColor(long pathPtr)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetStrokeColor(long pathPtr, int strokeColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetStrokeAlpha(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetStrokeAlpha(long pathPtr, float alpha)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int nGetFillColor(long pathPtr)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetFillColor(long pathPtr, int fillColor)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetFillAlpha(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetFillAlpha(long pathPtr, float fillAlpha)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetTrimPathStart(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetTrimPathStart(long pathPtr, float trimPathStart)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetTrimPathEnd(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetTrimPathEnd(long pathPtr, float trimPathEnd)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static float nGetTrimPathOffset(long pathPtr)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void nSetTrimPathOffset(long pathPtr, float trimPathOffset)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "LOGTAG", "DBG_VECTOR_DRAWABLE", "sPathManager" ],
  "methodNames" : [ "private static long addNativeObject(VNativeObject object)", "private static TypedArray obtainAttributes(Resources res, Theme theme, AttributeSet set, int[] attrs)", "private static int applyAlpha(int color, float alpha)", " static long nCreateTree(long rootGroupPtr)", " static long nCreateTreeFromCopy(long rendererToCopyPtr, long rootGroupPtr)", " static void nSetRendererViewportSize(long rendererPtr, float viewportWidth, float viewportHeight)", " static boolean nSetRootAlpha(long rendererPtr, float alpha)", " static float nGetRootAlpha(long rendererPtr)", " static void nSetAntiAlias(long rendererPtr, boolean aa)", " static void nSetAllowCaching(long rendererPtr, boolean allowCaching)", " static int nDraw(long rendererPtr, long canvasWrapperPtr, long colorFilterPtr, Rect bounds, boolean needsMirroring, boolean canReuseCache)", " static long nCreateFullPath()", " static long nCreateFullPath(long nativeFullPathPtr)", " static boolean nGetFullPathProperties(long pathPtr, byte[] propertiesData, int length)", " static void nUpdateFullPathProperties(long pathPtr, float strokeWidth, int strokeColor, float strokeAlpha, int fillColor, float fillAlpha, float trimPathStart, float trimPathEnd, float trimPathOffset, float strokeMiterLimit, int strokeLineCap, int strokeLineJoin, int fillType)", " static void nUpdateFullPathFillGradient(long pathPtr, long fillGradientPtr)", " static void nUpdateFullPathStrokeGradient(long pathPtr, long strokeGradientPtr)", " static long nCreateClipPath()", " static long nCreateClipPath(long clipPathPtr)", " static long nCreateGroup()", " static long nCreateGroup(long groupPtr)", " static void nSetName(long nodePtr, String name)", " static boolean nGetGroupProperties(long groupPtr, float[] propertiesData, int length)", " static void nUpdateGroupProperties(long groupPtr, float rotate, float pivotX, float pivotY, float scaleX, float scaleY, float translateX, float translateY)", " static void nAddChild(long groupPtr, long nodePtr)", " static void nSetPathString(long pathPtr, String pathString, int length)", " static float nGetRotation(long groupPtr)", " static void nSetRotation(long groupPtr, float rotation)", " static float nGetPivotX(long groupPtr)", " static void nSetPivotX(long groupPtr, float pivotX)", " static float nGetPivotY(long groupPtr)", " static void nSetPivotY(long groupPtr, float pivotY)", " static float nGetScaleX(long groupPtr)", " static void nSetScaleX(long groupPtr, float scaleX)", " static float nGetScaleY(long groupPtr)", " static void nSetScaleY(long groupPtr, float scaleY)", " static float nGetTranslateX(long groupPtr)", " static void nSetTranslateX(long groupPtr, float translateX)", " static float nGetTranslateY(long groupPtr)", " static void nSetTranslateY(long groupPtr, float translateY)", " static void nSetPathData(long pathPtr, long pathDataPtr)", " static float nGetStrokeWidth(long pathPtr)", " static void nSetStrokeWidth(long pathPtr, float width)", " static int nGetStrokeColor(long pathPtr)", " static void nSetStrokeColor(long pathPtr, int strokeColor)", " static float nGetStrokeAlpha(long pathPtr)", " static void nSetStrokeAlpha(long pathPtr, float alpha)", " static int nGetFillColor(long pathPtr)", " static void nSetFillColor(long pathPtr, int fillColor)", " static float nGetFillAlpha(long pathPtr)", " static void nSetFillAlpha(long pathPtr, float fillAlpha)", " static float nGetTrimPathStart(long pathPtr)", " static void nSetTrimPathStart(long pathPtr, float trimPathStart)", " static float nGetTrimPathEnd(long pathPtr)", " static void nSetTrimPathEnd(long pathPtr, float trimPathEnd)", " static float nGetTrimPathOffset(long pathPtr)", " static void nSetTrimPathOffset(long pathPtr, float trimPathOffset)" ]
}