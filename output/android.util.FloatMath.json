{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/FloatMath.java",
  "packageName" : "android.util",
  "className" : "FloatMath",
  "comment" : "\n * Math routines similar to those found in {@link java.lang.Math}.\n *\n * <p>Historically these methods were faster than the equivalent double-based\n * {@link java.lang.Math} methods. On versions of Android with a JIT they\n * became slower and have since been re-implemented to wrap calls to\n * {@link java.lang.Math}. {@link java.lang.Math} should be used in\n * preference.\n *\n * <p>All methods were removed from the public API in version 23.\n *\n * @deprecated Use {@link java.lang.Math} instead.\n ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static float floor(float value)",
    "returnType" : "float",
    "comment" : "\n     * Returns the float conversion of the most positive (i.e. closest to\n     * positive infinity) integer value which is less than the argument.\n     *\n     * @param value to be converted\n     * @return the floor of value\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static float ceil(float value)",
    "returnType" : "float",
    "comment" : "\n     * Returns the float conversion of the most negative (i.e. closest to\n     * negative infinity) integer value which is greater than the argument.\n     *\n     * @param value to be converted\n     * @return the ceiling of value\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static float sin(float angle)",
    "returnType" : "float",
    "comment" : "\n     * Returns the closest float approximation of the sine of the argument.\n     *\n     * @param angle to compute the cosine of, in radians\n     * @return the sine of angle\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static float cos(float angle)",
    "returnType" : "float",
    "comment" : "\n     * Returns the closest float approximation of the cosine of the argument.\n     *\n     * @param angle to compute the cosine of, in radians\n     * @return the cosine of angle\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static float sqrt(float value)",
    "returnType" : "float",
    "comment" : "\n     * Returns the closest float approximation of the square root of the\n     * argument.\n     *\n     * @param value to compute sqrt of\n     * @return the square root of value\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static float exp(float value)",
    "returnType" : "float",
    "comment" : "\n     * Returns the closest float approximation of the raising \"e\" to the power\n     * of the argument.\n     *\n     * @param value to compute the exponential of\n     * @return the exponential of value\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static float pow(float x, float y)",
    "returnType" : "float",
    "comment" : "\n     * Returns the closest float approximation of the result of raising {@code\n     * x} to the power of {@code y}.\n     *\n     * @param x the base of the operation.\n     * @param y the exponent of the operation.\n     * @return {@code x} to the power of {@code y}.\n     * @removed\n     ",
    "links" : [ ]
  }, {
    "name" : "public static float hypot(float x, float y)",
    "returnType" : "float",
    "comment" : "\n     * Returns {@code sqrt(}<i>{@code x}</i><sup>{@code 2}</sup>{@code +} <i>\n     * {@code y}</i><sup>{@code 2}</sup>{@code )}.\n     *\n     * @param x a float number\n     * @param y a float number\n     * @return the hypotenuse\n     * @removed\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public static float floor(float value)", "public static float ceil(float value)", "public static float sin(float angle)", "public static float cos(float angle)", "public static float sqrt(float value)", "public static float exp(float value)", "public static float pow(float x, float y)", "public static float hypot(float x, float y)" ]
}