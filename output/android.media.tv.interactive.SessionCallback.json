{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/tv/interactive/TvInteractiveAppManager.java",
  "packageName" : "android.media.tv.interactive",
  "className" : "SessionCallback",
  "comment" : "\n     * Interface used to receive the created session.\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public void onSessionCreated(@Nullable Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called after {@link TvInteractiveAppManager#createSession} has been processed.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} instance created. This can be\n         *                {@code null} if the creation request failed.\n         ",
    "links" : [ "android.media.tv.interactive.TvInteractiveAppManager#createSession", "TvInteractiveAppManager.Session" ]
  }, {
    "name" : "public void onSessionReleased(@NonNull Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppManager.Session} is released.\n         * This typically happens when the process hosting the session has crashed or been killed.\n         *\n         * @param session the {@link TvInteractiveAppManager.Session} instance released.\n         ",
    "links" : [ "TvInteractiveAppManager.Session" ]
  }, {
    "name" : "public void onLayoutSurface(Session session, int left, int top, int right, int bottom)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#layoutSurface} is called to\n         * change the layout of surface.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         * @param left Left position.\n         * @param top Top position.\n         * @param right Right position.\n         * @param bottom Bottom position.\n         ",
    "links" : [ "TvInteractiveAppService.Session#layoutSurface", "TvInteractiveAppManager.Session" ]
  }, {
    "name" : "public void onCommandRequest(Session session, @TvInteractiveAppService.PlaybackCommandType String cmdType, Bundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCommand} is called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         * @param cmdType type of the command.\n         * @param parameters parameters of the command.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#requestCommand" ]
  }, {
    "name" : "public void onTimeShiftCommandRequest(Session session, @TvInteractiveAppService.TimeShiftCommandType String cmdType, Bundle parameters)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestTimeShiftCommand} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         * @param cmdType type of the time shift command.\n         * @param parameters parameters of the command.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#requestTimeShiftCommand" ]
  }, {
    "name" : "public void onSetVideoBounds(Session session, Rect rect)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#setVideoBounds} is called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#setVideoBounds" ]
  }, {
    "name" : "public void onRequestCurrentVideoBounds(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCurrentVideoBounds} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#requestCurrentVideoBounds" ]
  }, {
    "name" : "public void onRequestCurrentChannelUri(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCurrentChannelUri} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#requestCurrentChannelUri" ]
  }, {
    "name" : "public void onRequestCurrentChannelLcn(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCurrentChannelLcn} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#requestCurrentChannelLcn" ]
  }, {
    "name" : "public void onRequestStreamVolume(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestStreamVolume} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestStreamVolume", "TvInteractiveAppManager.Session" ]
  }, {
    "name" : "public void onRequestTrackInfoList(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestTrackInfoList} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#requestTrackInfoList" ]
  }, {
    "name" : "public void onRequestSelectedTrackInfo(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestSelectedTrackInfo()} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#requestSelectedTrackInfo()" ]
  }, {
    "name" : "public void onRequestCurrentTvInputId(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestCurrentTvInputId} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestCurrentTvInputId", "TvInteractiveAppService.Session" ]
  }, {
    "name" : "public void onRequestTimeShiftMode(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestTimeShiftMode()} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestTimeShiftMode()", "TvInteractiveAppService.Session" ]
  }, {
    "name" : "public void onRequestAvailableSpeeds(Session session)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestAvailableSpeeds()} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         ",
    "links" : [ "TvInteractiveAppService.Session", "TvInteractiveAppService.Session#requestAvailableSpeeds()" ]
  }, {
    "name" : "public void onRequestStartRecording(Session session, String requestId, Uri programUri)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestStartRecording} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param programUri The Uri of the program to be recorded.\n         ",
    "links" : [ "TvInteractiveAppService.Session", "TvInteractiveAppService.Session#requestStartRecording" ]
  }, {
    "name" : "public void onRequestStopRecording(Session session, String recordingId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestStopRecording(String)}\n         * is called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param recordingId The recordingId of the recording to be stopped.\n         ",
    "links" : [ "TvInteractiveAppService.Session", "TvInteractiveAppService.Session#requestStopRecording(String)" ]
  }, {
    "name" : "public void onRequestScheduleRecording(Session session, @NonNull String requestId, @NonNull String inputId, @NonNull Uri channelUri, @NonNull Uri programUri, @NonNull Bundle params)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestScheduleRecording(String, String, Uri, Uri, Bundle)}\n         * is called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param inputId The ID of the TV input for the given channel.\n         * @param channelUri The URI of a channel to be recorded.\n         * @param programUri The URI of the TV program to be recorded.\n         * @param params Domain-specific data for this tune request. Keys <em>must</em> be a scoped\n         *            name, i.e. prefixed with a package name you own, so that different developers\n         *            will not create conflicting keys.\n         * @see android.media.tv.TvRecordingClient#tune(String, Uri, Bundle)\n         * @see android.media.tv.TvRecordingClient#startRecording(Uri)\n         ",
    "links" : [ "TvInteractiveAppService.Session", "TvInteractiveAppService.Session#requestScheduleRecording(String" ]
  }, {
    "name" : "public void onRequestScheduleRecording(Session session, @NonNull String requestId, @NonNull String inputId, @NonNull Uri channelUri, long startTime, long duration, int repeatDays, @NonNull Bundle params)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestScheduleRecording(String, String, Uri, long, long, int, Bundle)}\n         * is called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param inputId The ID of the TV input for the given channel.\n         * @param channelUri The URI of a channel to be recorded.\n         * @param startTime The start time of the recording in milliseconds since epoch.\n         * @param duration The duration of the recording in milliseconds.\n         * @param repeatDays The repeated days. 0 if not repeated.\n         * @param params Domain-specific data for this tune request. Keys <em>must</em> be a scoped\n         *            name, i.e. prefixed with a package name you own, so that different developers\n         *            will not create conflicting keys.\n         * @see android.media.tv.TvRecordingClient#tune(String, Uri, Bundle)\n         * @see android.media.tv.TvRecordingClient#startRecording(Uri)\n         ",
    "links" : [ "TvInteractiveAppService.Session", "TvInteractiveAppService.Session#requestScheduleRecording(String" ]
  }, {
    "name" : "public void onSetTvRecordingInfo(Session session, String recordingId, TvRecordingInfo recordingInfo)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#setTvRecordingInfo(String, TvRecordingInfo)} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param recordingId The recordingId of the recording which will have the info set.\n         * @param recordingInfo The recording info to set to the recording.\n         ",
    "links" : [ "TvInteractiveAppService.Session", "TvInteractiveAppService.Session#setTvRecordingInfo(String" ]
  }, {
    "name" : "public void onRequestTvRecordingInfo(Session session, String recordingId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestTvRecordingInfo} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param recordingId The recordingId of the recording to be stopped.\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestTvRecordingInfo", "TvInteractiveAppService.Session" ]
  }, {
    "name" : "public void onRequestTvRecordingInfoList(Session session, @TvRecordingInfo.TvRecordingListType int type)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#requestTvRecordingInfoList} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param type The type of recordings to return\n         ",
    "links" : [ "TvInteractiveAppService.Session#requestTvRecordingInfoList", "TvInteractiveAppService.Session" ]
  }, {
    "name" : "public void onRequestSigning(Session session, String signingId, String algorithm, String alias, byte[] data)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestSigning(String, String, String, byte[])} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param signingId the ID to identify the request.\n         * @param algorithm the standard name of the signature algorithm requested, such as\n         *                  MD5withRSA, SHA256withDSA, etc.\n         * @param alias the alias of the corresponding {@link java.security.KeyStore}.\n         * @param data the original bytes to be signed.\n         ",
    "links" : [ "TvInteractiveAppService.Session", "TvInteractiveAppService.Session#requestSigning(String", "java.security.KeyStore" ]
  }, {
    "name" : "public void onRequestSigning(Session session, String signingId, String algorithm, String host, int port, byte[] data)",
    "returnType" : "void",
    "comment" : "\n         * This is called when\n         * {@link TvInteractiveAppService.Session#requestSigning(String, String, String, int, byte[])}\n         * is called.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param signingId the ID to identify the request.\n         * @param algorithm the standard name of the signature algorithm requested, such as\n         *                  MD5withRSA, SHA256withDSA, etc.\n         * @param host The host of the SSL CLient Authentication Server\n         * @param port The port of the SSL Client Authentication Server\n         * @param data the original bytes to be signed.\n         ",
    "links" : [ "TvInteractiveAppService.Session", "TvInteractiveAppService.Session#requestSigning(String" ]
  }, {
    "name" : "public void onRequestCertificate(Session session, String host, int port)",
    "returnType" : "void",
    "comment" : "\n         * This is called when the service requests a SSL certificate for client validation.\n         *\n         * @param session A {@link TvInteractiveAppService.Session} associated with this callback.\n         * @param host the host name of the SSL authentication server.\n         * @param port the port of the SSL authentication server. E.g., 443\n         ",
    "links" : [ "TvInteractiveAppService.Session" ]
  }, {
    "name" : "public void onSessionStateChanged(Session session, @InteractiveAppState int state, @ErrorCode int err)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#notifySessionStateChanged} is\n         * called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         * @param state the current state.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#notifySessionStateChanged" ]
  }, {
    "name" : "public void onBiInteractiveAppCreated(Session session, Uri biIAppUri, String biIAppId)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#notifyBiInteractiveAppCreated}\n         * is called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         * @param biIAppUri URI associated this BI interactive app. This is the same URI in\n         *                  {@link Session#createBiInteractiveApp(Uri, Bundle)}\n         * @param biIAppId BI interactive app ID, which can be used to destroy the BI interactive\n         *                 app.\n         ",
    "links" : [ "TvInteractiveAppService.Session#notifyBiInteractiveAppCreated", "#createBiInteractiveApp(Uri", "TvInteractiveAppManager.Session" ]
  }, {
    "name" : "public void onTeletextAppStateChanged(Session session, @TvInteractiveAppManager.TeletextAppState int state)",
    "returnType" : "void",
    "comment" : "\n         * This is called when {@link TvInteractiveAppService.Session#notifyTeletextAppStateChanged}\n         * is called.\n         *\n         * @param session A {@link TvInteractiveAppManager.Session} associated with this callback.\n         * @param state the current state.\n         ",
    "links" : [ "TvInteractiveAppManager.Session", "TvInteractiveAppService.Session#notifyTeletextAppStateChanged" ]
  } ],
  "methodNames" : [ "public void onSessionCreated(@Nullable Session session)", "public void onSessionReleased(@NonNull Session session)", "public void onLayoutSurface(Session session, int left, int top, int right, int bottom)", "public void onCommandRequest(Session session, @TvInteractiveAppService.PlaybackCommandType String cmdType, Bundle parameters)", "public void onTimeShiftCommandRequest(Session session, @TvInteractiveAppService.TimeShiftCommandType String cmdType, Bundle parameters)", "public void onSetVideoBounds(Session session, Rect rect)", "public void onRequestCurrentVideoBounds(Session session)", "public void onRequestCurrentChannelUri(Session session)", "public void onRequestCurrentChannelLcn(Session session)", "public void onRequestStreamVolume(Session session)", "public void onRequestTrackInfoList(Session session)", "public void onRequestSelectedTrackInfo(Session session)", "public void onRequestCurrentTvInputId(Session session)", "public void onRequestTimeShiftMode(Session session)", "public void onRequestAvailableSpeeds(Session session)", "public void onRequestStartRecording(Session session, String requestId, Uri programUri)", "public void onRequestStopRecording(Session session, String recordingId)", "public void onRequestScheduleRecording(Session session, @NonNull String requestId, @NonNull String inputId, @NonNull Uri channelUri, @NonNull Uri programUri, @NonNull Bundle params)", "public void onRequestScheduleRecording(Session session, @NonNull String requestId, @NonNull String inputId, @NonNull Uri channelUri, long startTime, long duration, int repeatDays, @NonNull Bundle params)", "public void onSetTvRecordingInfo(Session session, String recordingId, TvRecordingInfo recordingInfo)", "public void onRequestTvRecordingInfo(Session session, String recordingId)", "public void onRequestTvRecordingInfoList(Session session, @TvRecordingInfo.TvRecordingListType int type)", "public void onRequestSigning(Session session, String signingId, String algorithm, String alias, byte[] data)", "public void onRequestSigning(Session session, String signingId, String algorithm, String host, int port, byte[] data)", "public void onRequestCertificate(Session session, String host, int port)", "public void onSessionStateChanged(Session session, @InteractiveAppState int state, @ErrorCode int err)", "public void onBiInteractiveAppCreated(Session session, Uri biIAppUri, String biIAppId)", "public void onTeletextAppStateChanged(Session session, @TvInteractiveAppManager.TeletextAppState int state)" ],
  "variableNames" : [ ]
}