{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/ViewRootImpl.java",
  "packageName" : "android.view",
  "className" : "AsyncInputStage",
  "comment" : "\n     * Base class for implementing an input pipeline stage that supports\n     * asynchronous and out-of-order processing of input events.\n     * <p>\n     * In addition to what a normal input stage can do, an asynchronous\n     * input stage may also defer an input event that has been delivered to it\n     * and finish or forward it later.\n     * </p>\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mTraceCounter",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQueueHead",
    "type" : "QueuedInputEvent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQueueTail",
    "type" : "QueuedInputEvent",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQueueLength",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFER",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void defer(QueuedInputEvent q)",
    "returnType" : "void",
    "comment" : "\n         * Marks the event as deferred, which is to say that it will be handled\n         * asynchronously.  The caller is responsible for calling {@link #forward}\n         * or {@link #finish} later when it is done handling the event.\n         ",
    "links" : [ "#finish", "#forward" ]
  }, {
    "name" : "protected void forward(QueuedInputEvent q)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void apply(QueuedInputEvent q, int result)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void enqueue(QueuedInputEvent q)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void dequeue(QueuedInputEvent q, QueuedInputEvent prev)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void dump(String prefix, PrintWriter writer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected void defer(QueuedInputEvent q)", "protected void forward(QueuedInputEvent q)", "protected void apply(QueuedInputEvent q, int result)", "private void enqueue(QueuedInputEvent q)", "private void dequeue(QueuedInputEvent q, QueuedInputEvent prev)", " void dump(String prefix, PrintWriter writer)" ],
  "variableNames" : [ "mTraceCounter", "mQueueHead", "mQueueTail", "mQueueLength", "DEFER" ]
}