{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/app/Notification.java",
  "packageName" : "android.app",
  "className" : "BigPictureStyle",
  "comment" : "\n     * Helper class for generating large-format notifications that include a large image attachment.\n     *\n     * Here's how you'd set the <code>BigPictureStyle</code> on a notification:\n     * <pre class=\"prettyprint\">\n     * Notification notif = new Notification.Builder(mContext)\n     *     .setContentTitle(&quot;New photo from &quot; + sender.toString())\n     *     .setContentText(subject)\n     *     .setSmallIcon(R.drawable.new_post)\n     *     .setLargeIcon(aBitmap)\n     *     .setStyle(new Notification.BigPictureStyle()\n     *         .bigPicture(aBigBitmap))\n     *     .build();\n     * </pre>\n     *\n     * @see Notification#bigContentView\n     ",
  "variables" : [ {
    "name" : "mPicture",
    "type" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBigLargeIcon",
    "type" : "Icon",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mBigLargeIconSet",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_ASHMEM_BITMAP_SIZE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public BigPictureStyle setBigContentTitle(CharSequence title)",
    "returnType" : "BigPictureStyle",
    "comment" : "\n         * Overrides ContentTitle in the big form of the template.\n         * This defaults to the value passed to setContentTitle().\n         ",
    "links" : [ ]
  }, {
    "name" : "public BigPictureStyle setSummaryText(CharSequence cs)",
    "returnType" : "BigPictureStyle",
    "comment" : "\n         * Set the first line of text after the detail section in the big form of the template.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Bitmap getBigPicture()",
    "returnType" : "Bitmap",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public BigPictureStyle bigPicture(Bitmap b)",
    "returnType" : "BigPictureStyle",
    "comment" : "\n         * Provide the bitmap to be used as the payload for the BigPicture notification.\n         ",
    "links" : [ ]
  }, {
    "name" : "public BigPictureStyle bigLargeIcon(Bitmap b)",
    "returnType" : "BigPictureStyle",
    "comment" : "\n         * Override the large icon when the big notification is shown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public BigPictureStyle bigLargeIcon(Icon icon)",
    "returnType" : "BigPictureStyle",
    "comment" : "\n         * Override the large icon when the big notification is shown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void purgeResources()",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void reduceImageSizes(Context context)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public RemoteViews makeBigContentView()",
    "returnType" : "RemoteViews",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void addExtras(Bundle extras)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "protected void restoreFromExtras(Bundle extras)",
    "returnType" : "void",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasSummaryInHeader()",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean areNotificationsVisiblyDifferent(Style other)",
    "returnType" : "boolean",
    "comment" : "\n         * @hide\n         * Note that we aren't actually comparing the contents of the bitmaps here, so this\n         * is only doing a cursory inspection. Bitmaps of equal size will appear the same.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static boolean areBitmapsObviouslyDifferent(Bitmap a, Bitmap b)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mPicture", "mBigLargeIcon", "mBigLargeIconSet", "MIN_ASHMEM_BITMAP_SIZE" ],
  "methodNames" : [ "public BigPictureStyle setBigContentTitle(CharSequence title)", "public BigPictureStyle setSummaryText(CharSequence cs)", "public Bitmap getBigPicture()", "public BigPictureStyle bigPicture(Bitmap b)", "public BigPictureStyle bigLargeIcon(Bitmap b)", "public BigPictureStyle bigLargeIcon(Icon icon)", "public void purgeResources()", "public void reduceImageSizes(Context context)", "public RemoteViews makeBigContentView()", "public void addExtras(Bundle extras)", "protected void restoreFromExtras(Bundle extras)", "public boolean hasSummaryInHeader()", "public boolean areNotificationsVisiblyDifferent(Style other)", "private static boolean areBitmapsObviouslyDifferent(Bitmap a, Bitmap b)" ]
}