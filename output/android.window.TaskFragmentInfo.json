{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/TaskFragmentInfo.java",
  "packageName" : "android.window",
  "className" : "TaskFragmentInfo",
  "comment" : "\n * Stores information about a particular TaskFragment.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mFragmentToken",
    "type" : "IBinder",
    "comment" : "\n     * Client assigned unique token in {@link TaskFragmentCreationParams#getFragmentToken()} to\n     * create this TaskFragment with.\n     ",
    "links" : [ "android.window.TaskFragmentCreationParams#getFragmentToken()" ]
  }, {
    "name" : "mToken",
    "type" : "WindowContainerToken",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfiguration",
    "type" : "Configuration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRunningActivityCount",
    "type" : "int",
    "comment" : " The number of the running activities in the TaskFragment. ",
    "links" : [ ]
  }, {
    "name" : "mIsVisible",
    "type" : "boolean",
    "comment" : " Whether this TaskFragment is visible on the window hierarchy. ",
    "links" : [ ]
  }, {
    "name" : "mActivities",
    "type" : "List<IBinder>",
    "comment" : "\n     * List of Activity tokens that are children of this TaskFragment. It only contains Activities\n     * that belong to the organizer process for security.\n     ",
    "links" : [ ]
  }, {
    "name" : "mInRequestedTaskFragmentActivities",
    "type" : "List<IBinder>",
    "comment" : "\n     * List of Activity tokens that were explicitly requested to be launched in this TaskFragment.\n     * It only contains Activities that belong to the organizer process for security.\n     ",
    "links" : [ ]
  }, {
    "name" : "mPositionInParent",
    "type" : "Point",
    "comment" : " Relative position of the fragment's top left corner in the parent container. ",
    "links" : [ ]
  }, {
    "name" : "mIsTaskClearedForReuse",
    "type" : "boolean",
    "comment" : "\n     * Whether the last running activity in the TaskFragment was finished due to clearing task while\n     * launching an activity in the host Task.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsTaskFragmentClearedForPip",
    "type" : "boolean",
    "comment" : "\n     * Whether the last running activity in the TaskFragment was reparented to a different Task\n     * because it is entering PiP.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsClearedForReorderActivityToFront",
    "type" : "boolean",
    "comment" : "\n     * Whether the last running activity of the TaskFragment was removed because it was reordered to\n     * front of the Task.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMinimumDimensions",
    "type" : "Point",
    "comment" : "\n     * The maximum {@link android.content.pm.ActivityInfo.WindowLayout#minWidth} and\n     * {@link android.content.pm.ActivityInfo.WindowLayout#minHeight} aggregated from the\n     * TaskFragment's child activities.\n     ",
    "links" : [ "android.content.pm.ActivityInfo.WindowLayout#minHeight", "android.content.pm.ActivityInfo.WindowLayout#minWidth" ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TaskFragmentInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public IBinder getFragmentToken()",
    "returnType" : "IBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public WindowContainerToken getToken()",
    "returnType" : "WindowContainerToken",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Configuration getConfiguration()",
    "returnType" : "Configuration",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasRunningActivity()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getRunningActivityCount()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isVisible()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<IBinder> getActivities()",
    "returnType" : "List<IBinder>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public List<IBinder> getActivitiesRequestedInTaskFragment()",
    "returnType" : "List<IBinder>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Point getPositionInParent()",
    "returnType" : "Point",
    "comment" : " Returns the relative position of the fragment's top left corner in the parent container. ",
    "links" : [ ]
  }, {
    "name" : "public boolean isTaskClearedForReuse()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isTaskFragmentClearedForPip()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public boolean isClearedForReorderActivityToFront()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int getWindowingMode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMinimumWidth()",
    "returnType" : "int",
    "comment" : "\n     * Returns the minimum width this TaskFragment can be resized to.\n     * Client side must not {@link WindowContainerTransaction#setRelativeBounds}\n     * that {@link Rect#width()} is shorter than the reported value.\n     * @hide pending unhide\n     ",
    "links" : [ "android.graphics.Rect#width()", "android.window.WindowContainerTransaction#setRelativeBounds" ]
  }, {
    "name" : "public int getMinimumHeight()",
    "returnType" : "int",
    "comment" : "\n     * Returns the minimum width this TaskFragment can be resized to.\n     * Client side must not {@link WindowContainerTransaction#setRelativeBounds}\n     * that {@link Rect#height()} is shorter than the reported value.\n     * @hide pending unhide\n     ",
    "links" : [ "android.window.WindowContainerTransaction#setRelativeBounds", "android.graphics.Rect#height()" ]
  }, {
    "name" : "public boolean equalsForTaskFragmentOrganizer(@Nullable TaskFragmentInfo that)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if the parameters that are important for task fragment organizers are\n     * equal between this {@link TaskFragmentInfo} and {@param that}.\n     * Note that this method is usually called with\n     * {@link com.android.server.wm.WindowOrganizerController#configurationsAreEqualForOrganizer(\n     * Configuration, Configuration)} to determine if this {@link TaskFragmentInfo} should\n     * be dispatched to the client.\n     ",
    "links" : [ "com.android.server.wm.WindowOrganizerController#configurationsAreEqualForOrganizer(", "android.window.TaskFragmentInfo" ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public IBinder getFragmentToken()", "public WindowContainerToken getToken()", "public Configuration getConfiguration()", "public boolean isEmpty()", "public boolean hasRunningActivity()", "public int getRunningActivityCount()", "public boolean isVisible()", "public List<IBinder> getActivities()", "public List<IBinder> getActivitiesRequestedInTaskFragment()", "public Point getPositionInParent()", "public boolean isTaskClearedForReuse()", "public boolean isTaskFragmentClearedForPip()", "public boolean isClearedForReorderActivityToFront()", "public int getWindowingMode()", "public int getMinimumWidth()", "public int getMinimumHeight()", "public boolean equalsForTaskFragmentOrganizer(@Nullable TaskFragmentInfo that)", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()", "public int describeContents()" ],
  "variableNames" : [ "mFragmentToken", "mToken", "mConfiguration", "mRunningActivityCount", "mIsVisible", "mActivities", "mInRequestedTaskFragmentActivities", "mPositionInParent", "mIsTaskClearedForReuse", "mIsTaskFragmentClearedForPip", "mIsClearedForReorderActivityToFront", "mMinimumDimensions", "CREATOR" ]
}