{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/Appendable.java",
  "packageName" : "java.lang",
  "className" : "Appendable",
  "comment" : "\n * An object to which {@code char} sequences and values can be appended.  The\n * {@code Appendable} interface must be implemented by any class whose\n * instances are intended to receive formatted output from a {@link\n * java.util.Formatter}.\n *\n * <p> The characters to be appended should be valid Unicode characters as\n * described in <a href=\"Character.html#unicode\">Unicode Character\n * Representation</a>.  Note that supplementary characters may be composed of\n * multiple 16-bit {@code char} values.\n *\n * <p> Appendables are not necessarily safe for multithreaded access.  Thread\n * safety is the responsibility of classes that extend and implement this\n * interface.\n *\n * <p> Since this interface may be implemented by existing classes\n * with different styles of error handling there is no guarantee that\n * errors will be propagated to the invoker.\n *\n * @since 1.5\n ",
  "links" : [ "java.util.Formatter" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " Appendable append(CharSequence csq) throws IOException",
    "returnType" : "Appendable",
    "comment" : "\n     * Appends the specified character sequence to this {@code Appendable}.\n     *\n     * <p> Depending on which class implements the character sequence\n     * {@code csq}, the entire sequence may not be appended.  For\n     * instance, if {@code csq} is a {@link java.nio.CharBuffer} then\n     * the subsequence to append is defined by the buffer's position and limit.\n     *\n     * @param  csq\n     *         The character sequence to append.  If {@code csq} is\n     *         {@code null}, then the four characters {@code \"null\"} are\n     *         appended to this Appendable.\n     *\n     * @return  A reference to this {@code Appendable}\n     *\n     * @throws  IOException\n     *          If an I/O error occurs\n     ",
    "links" : [ "java.nio.CharBuffer" ]
  }, {
    "name" : " Appendable append(CharSequence csq, int start, int end) throws IOException",
    "returnType" : "Appendable",
    "comment" : "\n     * Appends a subsequence of the specified character sequence to this\n     * {@code Appendable}.\n     *\n     * <p> An invocation of this method of the form {@code out.append(csq, start, end)}\n     * when {@code csq} is not {@code null}, behaves in\n     * exactly the same way as the invocation\n     *\n     * <pre>\n     *     out.append(csq.subSequence(start, end)) </pre>\n     *\n     * @param  csq\n     *         The character sequence from which a subsequence will be\n     *         appended.  If {@code csq} is {@code null}, then characters\n     *         will be appended as if {@code csq} contained the four\n     *         characters {@code \"null\"}.\n     *\n     * @param  start\n     *         The index of the first character in the subsequence\n     *\n     * @param  end\n     *         The index of the character following the last character in the\n     *         subsequence\n     *\n     * @return  A reference to this {@code Appendable}\n     *\n     * @throws  IndexOutOfBoundsException\n     *          If {@code start} or {@code end} are negative, {@code start}\n     *          is greater than {@code end}, or {@code end} is greater than\n     *          {@code csq.length()}\n     *\n     * @throws  IOException\n     *          If an I/O error occurs\n     ",
    "links" : [ ]
  }, {
    "name" : " Appendable append(char c) throws IOException",
    "returnType" : "Appendable",
    "comment" : "\n     * Appends the specified character to this {@code Appendable}.\n     *\n     * @param  c\n     *         The character to append\n     *\n     * @return  A reference to this {@code Appendable}\n     *\n     * @throws  IOException\n     *          If an I/O error occurs\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " Appendable append(CharSequence csq) throws IOException", " Appendable append(CharSequence csq, int start, int end) throws IOException", " Appendable append(char c) throws IOException" ],
  "variableNames" : [ ]
}