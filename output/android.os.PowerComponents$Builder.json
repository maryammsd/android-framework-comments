{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/PowerComponents.java",
  "packageName" : "android.os",
  "className" : "Builder",
  "comment" : "\n     * Builder for PowerComponents.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "POWER_MODEL_UNINITIALIZED",
    "type" : "byte",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mData",
    "type" : "BatteryConsumer.BatteryConsumerData",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinConsumedPowerThreshold",
    "type" : "double",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setConsumedPower(BatteryConsumer.Key key, double componentPower, int powerModel)",
    "returnType" : "Builder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Builder addConsumedPower(BatteryConsumer.Key key, double componentPower, int powerModel)",
    "returnType" : "Builder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Builder setConsumedPowerForCustomComponent(int componentId, double componentPower)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the amount of drain attributed to the specified custom drain type.\n         *\n         * @param componentId    The ID of the custom power component.\n         * @param componentPower Amount of consumed power in mAh.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUsageDurationMillis(BatteryConsumer.Key key, long componentUsageDurationMillis)",
    "returnType" : "Builder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Builder setUsageDurationForCustomComponentMillis(int componentId, long componentUsageDurationMillis)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the amount of time used by the specified custom component.\n         *\n         * @param componentId                  The ID of the custom power component.\n         * @param componentUsageDurationMillis Amount of time in milliseconds.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void addPowerAndDuration(PowerComponents.Builder other)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addPowerAndDuration(PowerComponents other)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addPowerAndDuration(BatteryConsumer.BatteryConsumerData otherData)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public double getTotalPower()",
    "returnType" : "double",
    "comment" : "\n         * Returns the total power accumulated by this builder so far. It may change\n         * by the time the {@code build()} method is called.\n         ",
    "links" : [ ]
  }, {
    "name" : "public PowerComponents build()",
    "returnType" : "PowerComponents",
    "comment" : "\n         * Creates a read-only object out of the Builder values.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setConsumedPower(BatteryConsumer.Key key, double componentPower, int powerModel)", "public Builder addConsumedPower(BatteryConsumer.Key key, double componentPower, int powerModel)", "public Builder setConsumedPowerForCustomComponent(int componentId, double componentPower)", "public Builder setUsageDurationMillis(BatteryConsumer.Key key, long componentUsageDurationMillis)", "public Builder setUsageDurationForCustomComponentMillis(int componentId, long componentUsageDurationMillis)", "public void addPowerAndDuration(PowerComponents.Builder other)", "public void addPowerAndDuration(PowerComponents other)", "private void addPowerAndDuration(BatteryConsumer.BatteryConsumerData otherData)", "public double getTotalPower()", "public PowerComponents build()" ],
  "variableNames" : [ "POWER_MODEL_UNINITIALIZED", "mData", "mMinConsumedPowerThreshold" ]
}