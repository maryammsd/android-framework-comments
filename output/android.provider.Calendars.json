{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/CalendarContract.java",
  "packageName" : "android.provider",
  "className" : "Calendars",
  "comment" : "\n     * Constants and helpers for the Calendars table, which contains details for\n     * individual calendars. <h3>Operations</h3> All operations can be done\n     * either as an app or as a sync adapter. To perform an operation as a sync\n     * adapter {@link #CALLER_IS_SYNCADAPTER} should be set to true and\n     * {@link #ACCOUNT_NAME} and {@link #ACCOUNT_TYPE} must be set in the Uri\n     * parameters. See\n     * {@link Uri.Builder#appendQueryParameter(java.lang.String, java.lang.String)}\n     * for details on adding parameters. Sync adapters have write access to more\n     * columns but are restricted to a single account at a time. Calendars are\n     * designed to be primarily managed by a sync adapter and inserting new\n     * calendars should be done as a sync adapter. For the most part, apps\n     * should only update calendars (such as changing the color or display\n     * name). If a local calendar is required an app can do so by inserting as a\n     * sync adapter and using an {@link #ACCOUNT_TYPE} of\n     * {@link #ACCOUNT_TYPE_LOCAL} .\n     * <dl>\n     * <dt><b>Insert</b></dt>\n     * <dd>When inserting a new calendar the following fields must be included:\n     * <ul>\n     * <li>{@link #ACCOUNT_NAME}</li>\n     * <li>{@link #ACCOUNT_TYPE}</li>\n     * <li>{@link #NAME}</li>\n     * <li>{@link #CALENDAR_DISPLAY_NAME}</li>\n     * <li>{@link #CALENDAR_COLOR}</li>\n     * <li>{@link #CALENDAR_ACCESS_LEVEL}</li>\n     * <li>{@link #OWNER_ACCOUNT}</li>\n     * </ul>\n     * The following fields are not required when inserting a Calendar but are\n     * generally a good idea to include:\n     * <ul>\n     * <li>{@link #SYNC_EVENTS} set to 1</li>\n     * <li>{@link #CALENDAR_TIME_ZONE}</li>\n     * <li>{@link #ALLOWED_REMINDERS}</li>\n     * <li>{@link #ALLOWED_AVAILABILITY}</li>\n     * <li>{@link #ALLOWED_ATTENDEE_TYPES}</li>\n     * </ul>\n     * <dt><b>Update</b></dt>\n     * <dd>To perform an update on a calendar the {@link #_ID} of the calendar\n     * should be provided either as an appended id to the Uri (\n     * {@link ContentUris#withAppendedId}) or as the first selection item--the\n     * selection should start with \"_id=?\" and the first selectionArg should be\n     * the _id of the calendar. Calendars may also be updated using a selection\n     * without the id. In general, the {@link #ACCOUNT_NAME} and\n     * {@link #ACCOUNT_TYPE} should not be changed after a calendar is created\n     * as this can cause issues for sync adapters.\n     * <dt><b>Delete</b></dt>\n     * <dd>Calendars can be deleted either by the {@link #_ID} as an appended id\n     * on the Uri or using any standard selection. Deleting a calendar should\n     * generally be handled by a sync adapter as it will remove the calendar\n     * from the database and all associated data (aka events).</dd>\n     * <dt><b>Query</b></dt>\n     * <dd>Querying the Calendars table will get you all information about a set\n     * of calendars. There will be one row returned for each calendar that\n     * matches the query selection, or at most a single row if the {@link #_ID}\n     * is appended to the Uri.</dd>\n     * </dl>\n     * <h3>Calendar Columns</h3> The following Calendar columns are writable by\n     * both an app and a sync adapter.\n     * <ul>\n     * <li>{@link #NAME}</li>\n     * <li>{@link #CALENDAR_DISPLAY_NAME}</li>\n     * <li>{@link #VISIBLE}</li>\n     * <li>{@link #SYNC_EVENTS}</li>\n     * </ul>\n     * The following Calendars columns are writable only by a sync adapter\n     * <ul>\n     * <li>{@link #ACCOUNT_NAME}</li>\n     * <li>{@link #ACCOUNT_TYPE}</li>\n     * <li>{@link #CALENDAR_COLOR}</li>\n     * <li>{@link #_SYNC_ID}</li>\n     * <li>{@link #DIRTY}</li>\n     * <li>{@link #MUTATORS}</li>\n     * <li>{@link #OWNER_ACCOUNT}</li>\n     * <li>{@link #MAX_REMINDERS}</li>\n     * <li>{@link #ALLOWED_REMINDERS}</li>\n     * <li>{@link #ALLOWED_AVAILABILITY}</li>\n     * <li>{@link #ALLOWED_ATTENDEE_TYPES}</li>\n     * <li>{@link #CAN_MODIFY_TIME_ZONE}</li>\n     * <li>{@link #CAN_ORGANIZER_RESPOND}</li>\n     * <li>{@link #CAN_PARTIALLY_UPDATE}</li>\n     * <li>{@link #CALENDAR_LOCATION}</li>\n     * <li>{@link #CALENDAR_TIME_ZONE}</li>\n     * <li>{@link #CALENDAR_ACCESS_LEVEL}</li>\n     * <li>{@link #DELETED}</li>\n     * <li>{@link #CAL_SYNC1}</li>\n     * <li>{@link #CAL_SYNC2}</li>\n     * <li>{@link #CAL_SYNC3}</li>\n     * <li>{@link #CAL_SYNC4}</li>\n     * <li>{@link #CAL_SYNC5}</li>\n     * <li>{@link #CAL_SYNC6}</li>\n     * <li>{@link #CAL_SYNC7}</li>\n     * <li>{@link #CAL_SYNC8}</li>\n     * <li>{@link #CAL_SYNC9}</li>\n     * <li>{@link #CAL_SYNC10}</li>\n     * </ul>\n     ",
  "variables" : [ {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URL for accessing Calendars\n         ",
    "links" : [ ]
  }, {
    "name" : "ENTERPRISE_CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The content:// style URL for querying Calendars table in the managed profile. Appending\n         * a calendar id using {@link ContentUris#withAppendedId(Uri, long)} specifies\n         * a single calendar.\n         *\n         * <p>The following columns are allowed to be queried via this uri:\n         * <ul>\n         * <li>{@link #_ID}</li>\n         * <li>{@link #CALENDAR_COLOR}</li>\n         * <li>{@link #VISIBLE}</li>\n         * <li>{@link #CALENDAR_LOCATION}</li>\n         * <li>{@link #CALENDAR_TIME_ZONE}</li>\n         * <li>{@link #IS_PRIMARY}</li>\n         * </ul>\n         *\n         * <p>{@link IllegalArgumentException} is thrown if there exists columns in the\n         * projection of the query to this uri that are not contained in the above list.\n         *\n         * <p>This uri returns an empty cursor if the calling user is not a parent profile\n         * of a managed profile, or the managed profile is disabled, or cross-profile calendar is\n         * disabled in Settings, or this uri is queried from a package that is not allowed by\n         * the profile owner of the managed profile via\n         * {@link DevicePolicyManager#setCrossProfileCalendarPackages(ComponentName, Set)}.\n         *\n         * <p>Apps can register a {@link android.database.ContentObserver} for this URI to listen\n         * to changes.\n         *\n         * @see DevicePolicyManager#getCrossProfileCalendarPackages(ComponentName)\n         ",
    "links" : [ "#_ID", "android.content.ContentUris#withAppendedId(Uri", "#CALENDAR_TIME_ZONE", "#CALENDAR_COLOR", "#VISIBLE", "#CALENDAR_LOCATION", "#IS_PRIMARY", "android.app.admin.DevicePolicyManager#setCrossProfileCalendarPackages(ComponentName", "IllegalArgumentException", "android.database.ContentObserver" ]
  }, {
    "name" : "DEFAULT_SORT_ORDER",
    "type" : "String",
    "comment" : "\n         * The default sort order for this table\n         ",
    "links" : [ ]
  }, {
    "name" : "NAME",
    "type" : "String",
    "comment" : "\n         * The name of the calendar. Column name.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "CALENDAR_LOCATION",
    "type" : "String",
    "comment" : "\n         * The default location for the calendar. Column name.\n         * <P>Type: TEXT</P>\n         ",
    "links" : [ ]
  }, {
    "name" : "SYNC_WRITABLE_COLUMNS",
    "type" : "String[]",
    "comment" : "\n         * These fields are only writable by a sync adapter. To modify them the\n         * caller must include {@link #CALLER_IS_SYNCADAPTER},\n         * {@link #ACCOUNT_NAME}, and {@link #ACCOUNT_TYPE} in the Uri's query\n         * parameters. TODO move to provider\n         *\n         * @hide\n         ",
    "links" : [ "#ACCOUNT_NAME", "#ACCOUNT_TYPE", "#CALLER_IS_SYNCADAPTER" ]
  } ],
  "methods" : [ ],
  "variableNames" : [ "CONTENT_URI", "ENTERPRISE_CONTENT_URI", "DEFAULT_SORT_ORDER", "NAME", "CALENDAR_LOCATION", "SYNC_WRITABLE_COLUMNS" ],
  "methodNames" : [ ]
}