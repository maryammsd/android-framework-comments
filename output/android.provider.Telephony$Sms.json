{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/provider/Telephony.java",
  "packageName" : "android.provider",
  "className" : "Sms",
  "comment" : "\n     * Contains all text-based SMS messages.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "CONTENT_URI",
    "type" : "Uri",
    "comment" : "\n         * The {@code content://} style URL for this table.\n         ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_SORT_ORDER",
    "type" : "String",
    "comment" : "\n         * The default sort order for this table.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static String getDefaultSmsPackage(Context context)",
    "returnType" : "String",
    "comment" : "\n         * Used to determine the currently configured default SMS package.\n         * <p>\n         * As of Android 11 apps will need specific permission to query other packages. To use\n         * this method an app must include in their AndroidManifest:\n         * <pre>{@code\n         * <queries>\n         *   <intent>\n         *     <action android:name=\"android.provider.Telephony.SMS_DELIVER\"/>\n         *   </intent>\n         * </queries>\n         * }</pre>\n         * Which will allow them to query packages which declare intent filters that include\n         * the {@link android.provider.Telephony.Sms.Intents#SMS_DELIVER_ACTION} intent.\n         * </p>\n         *\n         * @param context context of the requesting application\n         * @return package name for the default SMS package or null\n         ",
    "links" : [ "android.provider.Telephony.Sms.Intents#SMS_DELIVER_ACTION" ]
  }, {
    "name" : "public static Cursor query(ContentResolver cr, String[] projection)",
    "returnType" : "Cursor",
    "comment" : "\n         * Return cursor for table query.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Cursor query(ContentResolver cr, String[] projection, String where, String orderBy)",
    "returnType" : "Cursor",
    "comment" : "\n         * Return cursor for table query.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri addMessageToUri(ContentResolver resolver, Uri uri, String address, String body, String subject, Long date, boolean read, boolean deliveryReport)",
    "returnType" : "Uri",
    "comment" : "\n         * Add an SMS to the given URI.\n         *\n         * @param resolver the content resolver to use\n         * @param uri the URI to add the message to\n         * @param address the address of the sender\n         * @param body the body of the message\n         * @param subject the pseudo-subject of the message\n         * @param date the timestamp for the message\n         * @param read true if the message has been read, false if not\n         * @param deliveryReport true if a delivery report was requested, false if not\n         * @return the URI for the new message\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri addMessageToUri(int subId, ContentResolver resolver, Uri uri, String address, String body, String subject, Long date, boolean read, boolean deliveryReport)",
    "returnType" : "Uri",
    "comment" : "\n         * Add an SMS to the given URI.\n         *\n         * @param resolver the content resolver to use\n         * @param uri the URI to add the message to\n         * @param address the address of the sender\n         * @param body the body of the message\n         * @param subject the psuedo-subject of the message\n         * @param date the timestamp for the message\n         * @param read true if the message has been read, false if not\n         * @param deliveryReport true if a delivery report was requested, false if not\n         * @param subId the subscription which the message belongs to\n         * @return the URI for the new message\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri addMessageToUri(ContentResolver resolver, Uri uri, String address, String body, String subject, Long date, boolean read, boolean deliveryReport, long threadId)",
    "returnType" : "Uri",
    "comment" : "\n         * Add an SMS to the given URI with the specified thread ID.\n         *\n         * @param resolver the content resolver to use\n         * @param uri the URI to add the message to\n         * @param address the address of the sender\n         * @param body the body of the message\n         * @param subject the pseudo-subject of the message\n         * @param date the timestamp for the message\n         * @param read true if the message has been read, false if not\n         * @param deliveryReport true if a delivery report was requested, false if not\n         * @param threadId the thread_id of the message\n         * @return the URI for the new message\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static Uri addMessageToUri(int subId, ContentResolver resolver, Uri uri, String address, String body, String subject, Long date, boolean read, boolean deliveryReport, long threadId)",
    "returnType" : "Uri",
    "comment" : "\n         * Add an SMS to the given URI with thread_id specified.\n         *\n         * @param resolver the content resolver to use\n         * @param uri the URI to add the message to\n         * @param address the address of the sender\n         * @param body the body of the message\n         * @param subject the psuedo-subject of the message\n         * @param date the timestamp for the message\n         * @param read true if the message has been read, false if not\n         * @param deliveryReport true if a delivery report was requested, false if not\n         * @param threadId the thread_id of the message\n         * @param subId the subscription which the message belongs to\n         * @return the URI for the new message\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static boolean moveMessageToFolder(Context context, Uri uri, int folder, int error)",
    "returnType" : "boolean",
    "comment" : "\n         * Move a message to the given folder.\n         *\n         * @param context the context to use\n         * @param uri the message to move\n         * @param folder the folder to move to\n         * @return true if the operation succeeded\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isOutgoingFolder(int messageType)",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true iff the folder (message type) identifies an\n         * outgoing message.\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static String getDefaultSmsPackage(Context context)", "public static Cursor query(ContentResolver cr, String[] projection)", "public static Cursor query(ContentResolver cr, String[] projection, String where, String orderBy)", "public static Uri addMessageToUri(ContentResolver resolver, Uri uri, String address, String body, String subject, Long date, boolean read, boolean deliveryReport)", "public static Uri addMessageToUri(int subId, ContentResolver resolver, Uri uri, String address, String body, String subject, Long date, boolean read, boolean deliveryReport)", "public static Uri addMessageToUri(ContentResolver resolver, Uri uri, String address, String body, String subject, Long date, boolean read, boolean deliveryReport, long threadId)", "public static Uri addMessageToUri(int subId, ContentResolver resolver, Uri uri, String address, String body, String subject, Long date, boolean read, boolean deliveryReport, long threadId)", "public static boolean moveMessageToFolder(Context context, Uri uri, int folder, int error)", "public static boolean isOutgoingFolder(int messageType)" ],
  "variableNames" : [ "CONTENT_URI", "DEFAULT_SORT_ORDER" ]
}