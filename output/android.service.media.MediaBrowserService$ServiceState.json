{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/media/MediaBrowserService.java",
  "packageName" : "android.service.media",
  "className" : "ServiceState",
  "comment" : "\n     * Holds all state associated with {@link #mSession}.\n     *\n     * <p>This class decouples the state associated with the session from the lifecycle of the\n     * service. This allows us to put the service in a valid state once the session is released\n     * (which is an irrecoverable invalid state). More details about this in b/185136506.\n     ",
  "links" : [ "#mSession" ],
  "variables" : [ {
    "name" : "mSession",
    "type" : "MediaSession.Token",
    "comment" : " Fields accessed from any caller thread.",
    "links" : [ ]
  }, {
    "name" : "mConnections",
    "type" : "ArrayMap<IBinder, ConnectionRecord>",
    "comment" : " Fields accessed from mHandler only.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ServiceBinder getBinder()",
    "returnType" : "ServiceBinder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void postOnHandler(Runnable runnable)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void release()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void clearConnectionsOnHandler()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void removeConnectionRecordOnHandler(IMediaBrowserServiceCallbacks callbacks)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifySessionTokenInitializedOnHandler(MediaSession.Token token)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void notifyChildrenChangeOnHandler(String parentId, Bundle options)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addSubscriptionOnHandler(String id, IMediaBrowserServiceCallbacks callbacks, IBinder token, Bundle options)",
    "returnType" : "void",
    "comment" : " Save the subscription and if it is a new subscription send the results. ",
    "links" : [ ]
  }, {
    "name" : "public void connectOnHandler(String pkg, int pid, int uid, Bundle rootHints, IMediaBrowserServiceCallbacks callbacks)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean removeSubscriptionOnHandler(String id, IMediaBrowserServiceCallbacks callbacks, IBinder token)",
    "returnType" : "boolean",
    "comment" : " Remove the subscription. ",
    "links" : [ ]
  }, {
    "name" : "public void performLoadChildrenOnHandler(String parentId, ConnectionRecord connection, Bundle options)",
    "returnType" : "void",
    "comment" : "\n         * Call onLoadChildren and then send the results back to the connection.\n         *\n         * <p>Callers must make sure that this connection is still connected.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void performLoadItemOnHandler(String itemId, IMediaBrowserServiceCallbacks callbacks, ResultReceiver receiver)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isValidPackage(String providedPackage, int uid)",
    "returnType" : "boolean",
    "comment" : " Return whether the given package corresponds to the given uid. ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ServiceBinder getBinder()", "public void postOnHandler(Runnable runnable)", "public void release()", "private void clearConnectionsOnHandler()", "public void removeConnectionRecordOnHandler(IMediaBrowserServiceCallbacks callbacks)", "public void notifySessionTokenInitializedOnHandler(MediaSession.Token token)", "public void notifyChildrenChangeOnHandler(String parentId, Bundle options)", "public void addSubscriptionOnHandler(String id, IMediaBrowserServiceCallbacks callbacks, IBinder token, Bundle options)", "public void connectOnHandler(String pkg, int pid, int uid, Bundle rootHints, IMediaBrowserServiceCallbacks callbacks)", "public boolean removeSubscriptionOnHandler(String id, IMediaBrowserServiceCallbacks callbacks, IBinder token)", "public void performLoadChildrenOnHandler(String parentId, ConnectionRecord connection, Bundle options)", "public void performLoadItemOnHandler(String itemId, IMediaBrowserServiceCallbacks callbacks, ResultReceiver receiver)", "public boolean isValidPackage(String providedPackage, int uid)" ],
  "variableNames" : [ "mSession", "mConnections" ]
}