{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/RoutingSessionInfo.java",
  "packageName" : "android.media",
  "className" : "Builder",
  "comment" : "\n     * Builder class for {@link RoutingSessionInfo}.\n     ",
  "links" : [ "android.media.RoutingSessionInfo" ],
  "variables" : [ {
    "name" : "mId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "CharSequence",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOwnerPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mProviderId",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSelectedRoutes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSelectableRoutes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeselectableRoutes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransferableRoutes",
    "type" : "List<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolumeHandling",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolumeMax",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVolume",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mControlHints",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsSystemSession",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransferReason",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransferInitiatorUserHandle",
    "type" : "UserHandle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTransferInitiatorPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setName(@Nullable CharSequence name)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the user-visible name of the session.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setOwnerPackageName(@Nullable String packageName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the package name of the session owner. It is expected to be called by the system.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setClientPackageName(@Nullable String packageName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the client package name of the session.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setProviderId(@NonNull String providerId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the provider ID of the session.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearSelectedRoutes()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears the selected routes.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addSelectedRoute(@NonNull String routeId)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a route to the selected routes. The {@code routeId} must not be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder removeSelectedRoute(@NonNull String routeId)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes a route from the selected routes. The {@code routeId} must not be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearSelectableRoutes()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears the selectable routes.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addSelectableRoute(@NonNull String routeId)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a route to the selectable routes. The {@code routeId} must not be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder removeSelectableRoute(@NonNull String routeId)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes a route from the selectable routes. The {@code routeId} must not be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearDeselectableRoutes()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears the deselectable routes.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addDeselectableRoute(@NonNull String routeId)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a route to the deselectable routes. The {@code routeId} must not be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder removeDeselectableRoute(@NonNull String routeId)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes a route from the deselectable routes. The {@code routeId} must not be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder clearTransferableRoutes()",
    "returnType" : "Builder",
    "comment" : "\n         * Clears the transferable routes.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addTransferableRoute(@NonNull String routeId)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds a route to the transferable routes. The {@code routeId} must not be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder removeTransferableRoute(@NonNull String routeId)",
    "returnType" : "Builder",
    "comment" : "\n         * Removes a route from the transferable routes. The {@code routeId} must not be empty.\n         ",
    "links" : [ ]
  }, {
    "name" : "public RoutingSessionInfo.Builder setVolumeHandling(@MediaRoute2Info.PlaybackVolume int volumeHandling)",
    "returnType" : "RoutingSessionInfo.Builder",
    "comment" : "\n         * Sets the session's volume handling.\n         * {@link MediaRoute2Info#PLAYBACK_VOLUME_FIXED} or\n         * {@link MediaRoute2Info#PLAYBACK_VOLUME_VARIABLE}.\n         ",
    "links" : [ "android.media.MediaRoute2Info#PLAYBACK_VOLUME_VARIABLE", "android.media.MediaRoute2Info#PLAYBACK_VOLUME_FIXED" ]
  }, {
    "name" : "public RoutingSessionInfo.Builder setVolumeMax(int volumeMax)",
    "returnType" : "RoutingSessionInfo.Builder",
    "comment" : "\n         * Sets the session's maximum volume, or 0 if unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public RoutingSessionInfo.Builder setVolume(int volume)",
    "returnType" : "RoutingSessionInfo.Builder",
    "comment" : "\n         * Sets the session's current volume, or 0 if unknown.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setControlHints(@Nullable Bundle controlHints)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets control hints.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSystemSession(boolean isSystemSession)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether this session is in system media route provider.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setTransferReason(@TransferReason int transferReason)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets transfer reason for the current session.\n         *\n         * <p>By default the transfer reason is set to {@link\n         * RoutingSessionInfo#TRANSFER_REASON_FALLBACK}.\n         ",
    "links" : [ "android.media.RoutingSessionInfo#TRANSFER_REASON_FALLBACK" ]
  }, {
    "name" : "public Builder setTransferInitiator(@Nullable UserHandle transferInitiatorUserHandle, @Nullable String transferInitiatorPackageName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the user handle and package name of the process that initiated the transfer.\n         *\n         * <p>By default the transfer initiation user handle and package name are set to {@code\n         * null}.\n         ",
    "links" : [ ]
  }, {
    "name" : "public RoutingSessionInfo build()",
    "returnType" : "RoutingSessionInfo",
    "comment" : "\n         * Builds a routing session info.\n         *\n         * @throws IllegalArgumentException if no selected routes are added.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setName(@Nullable CharSequence name)", "public Builder setOwnerPackageName(@Nullable String packageName)", "public Builder setClientPackageName(@Nullable String packageName)", "public Builder setProviderId(@NonNull String providerId)", "public Builder clearSelectedRoutes()", "public Builder addSelectedRoute(@NonNull String routeId)", "public Builder removeSelectedRoute(@NonNull String routeId)", "public Builder clearSelectableRoutes()", "public Builder addSelectableRoute(@NonNull String routeId)", "public Builder removeSelectableRoute(@NonNull String routeId)", "public Builder clearDeselectableRoutes()", "public Builder addDeselectableRoute(@NonNull String routeId)", "public Builder removeDeselectableRoute(@NonNull String routeId)", "public Builder clearTransferableRoutes()", "public Builder addTransferableRoute(@NonNull String routeId)", "public Builder removeTransferableRoute(@NonNull String routeId)", "public RoutingSessionInfo.Builder setVolumeHandling(@MediaRoute2Info.PlaybackVolume int volumeHandling)", "public RoutingSessionInfo.Builder setVolumeMax(int volumeMax)", "public RoutingSessionInfo.Builder setVolume(int volume)", "public Builder setControlHints(@Nullable Bundle controlHints)", "public Builder setSystemSession(boolean isSystemSession)", "public Builder setTransferReason(@TransferReason int transferReason)", "public Builder setTransferInitiator(@Nullable UserHandle transferInitiatorUserHandle, @Nullable String transferInitiatorPackageName)", "public RoutingSessionInfo build()" ],
  "variableNames" : [ "mId", "mName", "mOwnerPackageName", "mClientPackageName", "mProviderId", "mSelectedRoutes", "mSelectableRoutes", "mDeselectableRoutes", "mTransferableRoutes", "mVolumeHandling", "mVolumeMax", "mVolume", "mControlHints", "mIsSystemSession", "mTransferReason", "mTransferInitiatorUserHandle", "mTransferInitiatorPackageName" ]
}