{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/provider/ProviderRequest.java",
  "packageName" : "android.location.provider",
  "className" : "Builder",
  "comment" : "\n     * A Builder for {@link ProviderRequest}s.\n     ",
  "links" : [ "android.location.provider.ProviderRequest" ],
  "variables" : [ {
    "name" : "mIntervalMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mQuality",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxUpdateDelayMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLowPower",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAdasGnssBypass",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLocationSettingsIgnored",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWorkSource",
    "type" : "WorkSource",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setIntervalMillis(@IntRange(from = 0) long intervalMillis)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the request interval. Use {@link #INTERVAL_DISABLED} for an inactive request.\n         * Defaults to {@link #INTERVAL_DISABLED}.\n         ",
    "links" : [ "#INTERVAL_DISABLED" ]
  }, {
    "name" : "public Builder setQuality(@Quality int quality)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the request quality. The quality is a hint to providers on how they should weigh\n         * power vs accuracy tradeoffs. High accuracy locations may cost more power to produce, and\n         * lower accuracy locations may cost less power to produce. Defaults to\n         * {@link LocationRequest#QUALITY_BALANCED_POWER_ACCURACY}.\n         ",
    "links" : [ "android.location.LocationRequest#QUALITY_BALANCED_POWER_ACCURACY" ]
  }, {
    "name" : "public Builder setMaxUpdateDelayMillis(@IntRange(from = 0) long maxUpdateDelayMillis)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the maximum time any location update may be delayed, and thus grouped with following\n         * updates to enable location batching. If the maximum update delay is equal to or greater\n         * than twice the interval, then location providers may provide batched results. Defaults to\n         * 0.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLowPower(boolean lowPower)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether hardware low power mode should be used. False by default.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAdasGnssBypass(boolean adasGnssBypass)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether this ADAS request should bypass GNSS settings. False by default.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLocationSettingsIgnored(boolean locationSettingsIgnored)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether location settings should be ignored. False by default.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setWorkSource(@NonNull WorkSource workSource)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the work source for power blame. Empty by default.\n         ",
    "links" : [ ]
  }, {
    "name" : "public ProviderRequest build()",
    "returnType" : "ProviderRequest",
    "comment" : "\n         * Builds a ProviderRequest.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setIntervalMillis(@IntRange(from = 0) long intervalMillis)", "public Builder setQuality(@Quality int quality)", "public Builder setMaxUpdateDelayMillis(@IntRange(from = 0) long maxUpdateDelayMillis)", "public Builder setLowPower(boolean lowPower)", "public Builder setAdasGnssBypass(boolean adasGnssBypass)", "public Builder setLocationSettingsIgnored(boolean locationSettingsIgnored)", "public Builder setWorkSource(@NonNull WorkSource workSource)", "public ProviderRequest build()" ],
  "variableNames" : [ "mIntervalMillis", "mQuality", "mMaxUpdateDelayMillis", "mLowPower", "mAdasGnssBypass", "mLocationSettingsIgnored", "mWorkSource" ]
}