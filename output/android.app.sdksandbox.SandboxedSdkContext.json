{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/sdksandbox/SandboxedSdkContext.java",
  "packageName" : "android.app.sdksandbox",
  "className" : "SandboxedSdkContext",
  "comment" : "\n * Refers to the context of the SDK loaded in the SDK sandbox process.\n *\n * <p>It is a wrapper of the client application (which loading SDK to the sandbox) context, to\n * represent the context of the SDK loaded by that application.\n *\n * <p>An instance of the {@link SandboxedSdkContext} will be created by the SDK sandbox, and then\n * attached to the {@link SandboxedSdkProvider} after the SDK is loaded.\n *\n * <p>Each sdk will get their own private storage directories and the file storage API on this\n * object will utilize those areas.\n *\n * @hide\n ",
  "links" : [ "android.app.sdksandbox.SandboxedSdkProvider", "android.app.sdksandbox.SandboxedSdkContext" ],
  "variables" : [ {
    "name" : "mResources",
    "type" : "Resources",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAssets",
    "type" : "AssetManager",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClientPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSdkName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSdkProviderInfo",
    "type" : "ApplicationInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCeDataDir",
    "type" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDeDataDir",
    "type" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSdkSandboxSystemServiceRegistry",
    "type" : "SdkSandboxSystemServiceRegistry",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClassLoader",
    "type" : "ClassLoader",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsCustomizedSdkContextEnabled",
    "type" : "boolean",
    "comment" : "\n     * Starting from Android U, we customize the base context directly instead of adding information\n     * to the ContextWrapper.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Context createCredentialProtectedStorageContext()",
    "returnType" : "Context",
    "comment" : "\n     * Return a new Context object for the current SandboxedSdkContext but whose storage APIs are\n     * backed by sdk specific credential-protected storage.\n     *\n     * @see Context#isCredentialProtectedStorage()\n     ",
    "links" : [ ]
  }, {
    "name" : "public Context createDeviceProtectedStorageContext()",
    "returnType" : "Context",
    "comment" : "\n     * Return a new Context object for the current SandboxedSdkContext but whose storage\n     * APIs are backed by sdk specific device-protected storage.\n     *\n     * @see Context#isDeviceProtectedStorage()\n     ",
    "links" : [ ]
  }, {
    "name" : "public SandboxedSdkContext createContextWithNewBase(@NonNull Context newBaseContext)",
    "returnType" : "SandboxedSdkContext",
    "comment" : "\n     * Returns a new SandboxedSdkContext object with the same fields of the caller {@link\n     * SandboxedSdkContext} but with new base {@link Context}.\n     *\n     * @param newBaseContext The new base {@link Context} to use.\n     ",
    "links" : [ "android.content.Context", "android.app.sdksandbox.SandboxedSdkContext" ]
  }, {
    "name" : "public String getSdkName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the SDK name defined in the SDK's manifest.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSdkPackageName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the SDK package name defined in the SDK's manifest.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getClientPackageName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the package name of the client application corresponding to the sandbox.\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public Resources getResources()",
    "returnType" : "Resources",
    "comment" : " Returns the resources defined in the SDK's .apk file. ",
    "links" : [ ]
  }, {
    "name" : "public AssetManager getAssets()",
    "returnType" : "AssetManager",
    "comment" : " Returns the assets defined in the SDK's .apk file. ",
    "links" : [ ]
  }, {
    "name" : "public File getDataDir()",
    "returnType" : "File",
    "comment" : " Returns sdk-specific internal storage directory. ",
    "links" : [ ]
  }, {
    "name" : "public Object getSystemService(String name)",
    "returnType" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public ClassLoader getClassLoader()",
    "returnType" : "ClassLoader",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Context createCredentialProtectedStorageContext()", "public Context createDeviceProtectedStorageContext()", "public SandboxedSdkContext createContextWithNewBase(@NonNull Context newBaseContext)", "public String getSdkName()", "public String getSdkPackageName()", "public String getClientPackageName()", "public Resources getResources()", "public AssetManager getAssets()", "public File getDataDir()", "public Object getSystemService(String name)", "public ClassLoader getClassLoader()" ],
  "variableNames" : [ "mResources", "mAssets", "mClientPackageName", "mSdkName", "mSdkProviderInfo", "mCeDataDir", "mDeDataDir", "mSdkSandboxSystemServiceRegistry", "mClassLoader", "mIsCustomizedSdkContextEnabled" ]
}