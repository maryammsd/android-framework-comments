{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/NetworkAgentConfig.java",
  "packageName" : "android.net",
  "className" : "Builder",
  "comment" : "\n     * Builder class to facilitate constructing {@link NetworkAgentConfig} objects.\n     ",
  "links" : [ "android.net.NetworkAgentConfig" ],
  "variables" : [ {
    "name" : "mConfig",
    "type" : "NetworkAgentConfig",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setExplicitlySelected(final boolean explicitlySelected)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the network was explicitly selected by the user.\n         *\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUnvalidatedConnectivityAcceptable(final boolean unvalidatedConnectivityAcceptable)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the system should validate this network even if it is found not to offer\n         * Internet connectivity.\n         *\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setPartialConnectivityAcceptable(final boolean partialConnectivityAcceptable)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the system should validate this network even if it is found to only offer\n         * partial Internet connectivity.\n         *\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSubscriberId(@Nullable String subscriberId)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the subscriber ID for this network.\n         *\n         * @return this builder, to facilitate chaining.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNat64DetectionEnabled(boolean enabled)",
    "returnType" : "Builder",
    "comment" : "\n         * Enables or disables active detection of NAT64 (e.g., via RFC 7050 DNS lookups). Used to\n         * save power and reduce idle traffic on networks that are known to be IPv6-only without a\n         * NAT64. By default, NAT64 detection is enabled.\n         *\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setProvisioningNotificationEnabled(boolean enabled)",
    "returnType" : "Builder",
    "comment" : "\n         * Enables or disables the \"Sign in to network\" notification. Used if the network transport\n         * will perform its own carrier-specific provisioning procedure. By default, the\n         * notification is enabled.\n         *\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLegacyType(int legacyType)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the legacy type for this network.\n         *\n         * @param legacyType the type\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLegacySubType(final int legacySubType)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the legacy sub-type for this network.\n         *\n         * @param legacySubType the type\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLegacyTypeName(@NonNull String legacyTypeName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the name of the legacy type of the agent. It's a free-form string used in logging.\n         * @param legacyTypeName the name\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLegacySubTypeName(@NonNull String legacySubTypeName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the name of the legacy Sub-type of the agent. It's a free-form string.\n         * @param legacySubTypeName the name\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLegacyExtraInfo(@NonNull String legacyExtraInfo)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the legacy extra info of the agent.\n         * @param legacyExtraInfo the legacy extra info.\n         * @return this builder, to facilitate chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setVpnRequiresValidation(boolean vpnRequiresValidation)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether network validation should be performed for this VPN network.\n         *\n         * Only agents registering a VPN network should use this setter. On other network\n         * types it will be ignored.\n         * False means this network should always be considered validated;\n         * true means it follows the same validation semantics as general internet.\n         *\n         * @param vpnRequiresValidation whether this VPN requires validation.\n         *                              Default is {@code false}.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setBypassableVpn(boolean allowBypass)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the apps can bypass the VPN connection.\n         *\n         * @return this builder, to facilitate chaining.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setLocalRoutesExcludedForVpn(boolean excludeLocalRoutes)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets whether the local traffic is exempted from VPN.\n         *\n         * @return this builder, to facilitate chaining.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public NetworkAgentConfig build()",
    "returnType" : "NetworkAgentConfig",
    "comment" : "\n         * Returns the constructed {@link NetworkAgentConfig} object.\n         ",
    "links" : [ "android.net.NetworkAgentConfig" ]
  } ],
  "methodNames" : [ "public Builder setExplicitlySelected(final boolean explicitlySelected)", "public Builder setUnvalidatedConnectivityAcceptable(final boolean unvalidatedConnectivityAcceptable)", "public Builder setPartialConnectivityAcceptable(final boolean partialConnectivityAcceptable)", "public Builder setSubscriberId(@Nullable String subscriberId)", "public Builder setNat64DetectionEnabled(boolean enabled)", "public Builder setProvisioningNotificationEnabled(boolean enabled)", "public Builder setLegacyType(int legacyType)", "public Builder setLegacySubType(final int legacySubType)", "public Builder setLegacyTypeName(@NonNull String legacyTypeName)", "public Builder setLegacySubTypeName(@NonNull String legacySubTypeName)", "public Builder setLegacyExtraInfo(@NonNull String legacyExtraInfo)", "public Builder setVpnRequiresValidation(boolean vpnRequiresValidation)", "public Builder setBypassableVpn(boolean allowBypass)", "public Builder setLocalRoutesExcludedForVpn(boolean excludeLocalRoutes)", "public NetworkAgentConfig build()" ],
  "variableNames" : [ "mConfig" ]
}