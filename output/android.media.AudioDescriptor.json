{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/AudioDescriptor.java",
  "packageName" : "android.media",
  "className" : "AudioDescriptor",
  "comment" : "\n * The AudioDescriptor contains the information to describe the audio playback/capture\n * capabilities. The capabilities are described by a byte array, which is defined by a\n * particular standard. This is used when the format is unrecognized to the platform.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "STANDARD_NONE",
    "type" : "int",
    "comment" : "\n     * The audio standard is not specified.\n     ",
    "links" : [ ]
  }, {
    "name" : "STANDARD_EDID",
    "type" : "int",
    "comment" : "\n     * The Extended Display Identification Data (EDID) standard for a short audio descriptor.\n     ",
    "links" : [ ]
  }, {
    "name" : "STANDARD_SADB",
    "type" : "int",
    "comment" : "\n     * The standard for a Speaker Allocation Data Block (SADB).\n     ",
    "links" : [ ]
  }, {
    "name" : "STANDARD_VSADB",
    "type" : "int",
    "comment" : "\n     * The standard for a Vendor-Specific Audio Data Block (VSADB).\n     ",
    "links" : [ ]
  }, {
    "name" : "mStandard",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDescriptor",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEncapsulationType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<AudioDescriptor>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getStandard()",
    "returnType" : "int",
    "comment" : "\n     * @return the standard that defines audio playback/capture capabilities.\n     ",
    "links" : [ ]
  }, {
    "name" : "public byte[] getDescriptor()",
    "returnType" : "byte[]",
    "comment" : "\n     * @return a byte array that describes audio playback/capture capabilities as encoded by the\n     * standard for this AudioDescriptor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getEncapsulationType()",
    "returnType" : "int",
    "comment" : "\n     * The encapsulation type indicates what encapsulation type is required when the framework is\n     * using this extra audio descriptor for playing to a device exposing this audio profile.\n     * When encapsulation is required, only playback with {@link android.media.AudioTrack} API is\n     * supported. But playback with {@link android.media.MediaPlayer} is not.\n     * When an encapsulation type is required, the {@link AudioFormat} encoding selected when\n     * creating the {@link AudioTrack} must match the encapsulation type, e.g.\n     * AudioFormat#ENCODING_IEC61937 for AudioProfile.AUDIO_ENCAPSULATION_TYPE_IEC61937.\n     *\n     * @return an integer representing the encapsulation type\n     *\n     * @see AudioProfile#AUDIO_ENCAPSULATION_TYPE_NONE\n     * @see AudioProfile#AUDIO_ENCAPSULATION_TYPE_IEC61937\n     ",
    "links" : [ "android.media.AudioFormat", "android.media.MediaPlayer", "android.media.AudioTrack" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getStandard()", "public byte[] getDescriptor()", "public int getEncapsulationType()", "public int hashCode()", "public boolean equals(Object o)", "public String toString()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "STANDARD_NONE", "STANDARD_EDID", "STANDARD_SADB", "STANDARD_VSADB", "mStandard", "mDescriptor", "mEncapsulationType", "CREATOR" ]
}