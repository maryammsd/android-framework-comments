{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/printservice/recommendation/RecommendationInfo.java",
  "packageName" : "android.printservice.recommendation",
  "className" : "RecommendationInfo",
  "comment" : "\n * A recommendation to install a {@link PrintService print service}.\n *\n * @hide\n ",
  "links" : [ "android.printservice.PrintService" ],
  "variables" : [ {
    "name" : "mPackageName",
    "type" : "CharSequence",
    "comment" : " Package name of the print service. ",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "CharSequence",
    "comment" : " Display name of the print service. ",
    "links" : [ ]
  }, {
    "name" : "mDiscoveredPrinters",
    "type" : "List<InetAddress>",
    "comment" : " Printers the print service would discover if installed. ",
    "links" : [ ]
  }, {
    "name" : "mRecommendsMultiVendorService",
    "type" : "boolean",
    "comment" : " If the service detects printer from multiple vendors. ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<RecommendationInfo>",
    "comment" : "\n     * Utility class used to create new print service recommendation objects from parcels.\n     *\n     * @see #RecommendationInfo(Parcel)\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static ArrayList<InetAddress> readDiscoveredPrinters(@NonNull Parcel parcel)",
    "returnType" : "ArrayList<InetAddress>",
    "comment" : "\n     * Read a list of blobs from the parcel and return it as a list of {@link InetAddress\n     * addresses}.\n     *\n     * @param parcel the parcel to read the blobs from\n     *\n     * @return The list of {@link InetAddress addresses} or null if no printers were found.\n     *\n     * @see #writeToParcel(Parcel, int)\n     ",
    "links" : [ "java.net.InetAddress", "InetAddressaddresses" ]
  }, {
    "name" : "public CharSequence getPackageName()",
    "returnType" : "CharSequence",
    "comment" : "\n     * @return The package name the recommendations recommends.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean recommendsMultiVendorService()",
    "returnType" : "boolean",
    "comment" : "\n     * @return Whether the recommended print service detects printers of more than one vendor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<InetAddress> getDiscoveredPrinters()",
    "returnType" : "List<InetAddress>",
    "comment" : "\n     * @return The {@link InetAddress address} of the printers the print service would detect.\n     ",
    "links" : [ "java.net.InetAddress" ]
  }, {
    "name" : "public int getNumDiscoveredPrinters()",
    "returnType" : "int",
    "comment" : "\n     * @return The number of printer the print service would detect.\n     ",
    "links" : [ ]
  }, {
    "name" : "public CharSequence getName()",
    "returnType" : "CharSequence",
    "comment" : "\n     * @return The name of the recommended print service.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static ArrayList<InetAddress> readDiscoveredPrinters(@NonNull Parcel parcel)", "public CharSequence getPackageName()", "public boolean recommendsMultiVendorService()", "public List<InetAddress> getDiscoveredPrinters()", "public int getNumDiscoveredPrinters()", "public CharSequence getName()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)" ],
  "variableNames" : [ "mPackageName", "mName", "mDiscoveredPrinters", "mRecommendsMultiVendorService", "CREATOR" ]
}