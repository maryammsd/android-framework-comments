{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/CurrencyMetaInfo.java",
  "packageName" : "android.icu.text",
  "className" : "CurrencyFilter",
  "comment" : "\n     * A filter used to select which currency info is returned.\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "region",
    "type" : "String",
    "comment" : "\n         * The region to filter on.  If null, accepts any region.\n         ",
    "links" : [ ]
  }, {
    "name" : "currency",
    "type" : "String",
    "comment" : "\n         * The currency to filter on.  If null, accepts any currency.\n         ",
    "links" : [ ]
  }, {
    "name" : "from",
    "type" : "long",
    "comment" : "\n         * The from date to filter on (as milliseconds).  Accepts any currency on or after this date.\n         ",
    "links" : [ ]
  }, {
    "name" : "to",
    "type" : "long",
    "comment" : "\n         * The to date to filter on (as milliseconds).  Accepts any currency on or before this date.\n         ",
    "links" : [ ]
  }, {
    "name" : "tenderOnly",
    "type" : "boolean",
    "comment" : "\n         * true if we are filtering only for currencies used as legal tender.\n         * @deprecated This API is ICU internal only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "ALL",
    "type" : "CurrencyFilter",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static CurrencyFilter all()",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a filter that accepts all currency data.\n         * @return a filter\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyFilter now()",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a filter that accepts all currencies in use as of the current date.\n         * @return a filter\n         * @see #withDate(Date)\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyFilter onRegion(String region)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a filter that accepts all currencies ever used in the given region.\n         * @param region the region code\n         * @return a filter\n         * @see #withRegion(String)\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyFilter onCurrency(String currency)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a filter that accepts the given currency.\n         * @param currency the currency code\n         * @return a filter\n         * @see #withCurrency(String)\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyFilter onDate(Date date)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a filter that accepts all currencies in use on the given date.\n         * @param date the date\n         * @return a filter\n         * @see #withDate(Date)\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyFilter onDateRange(Date from, Date to)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a filter that accepts all currencies that were in use at some point between\n         * the given dates, or if dates are equal, currencies in use on that date.\n         * @param from date on or after a currency must have been in use\n         * @param to date on or before which a currency must have been in use,\n         * or if equal to from, the date on which a currency must have been in use\n         * @return a filter\n         * @see #withDateRange(Date, Date)\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyFilter onDate(long date)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a filter that accepts all currencies in use on the given date.\n         * @param date the date as milliseconds after Jan 1, 1970\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyFilter onDateRange(long from, long to)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a filter that accepts all currencies that were in use at some\n         * point between the given dates, or if dates are equal, currencies in\n         * use on that date.\n         * @param from The date on or after a currency must have been in use.\n         *   Measured in milliseconds since Jan 1, 1970 GMT.\n         * @param to The date on or before which a currency must have been in use.\n         *   Measured in milliseconds since Jan 1, 1970 GMT.\n         ",
    "links" : [ ]
  }, {
    "name" : "public static CurrencyFilter onTender()",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a CurrencyFilter for finding currencies that were either once used,\n         * are used, or will be used as tender.\n         ",
    "links" : [ ]
  }, {
    "name" : "public CurrencyFilter withRegion(String region)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a copy of this filter, with the specified region.  Region can be null to\n         * indicate no filter on region.\n         * @param region the region code\n         * @return the filter\n         * @see #onRegion(String)\n         ",
    "links" : [ ]
  }, {
    "name" : "public CurrencyFilter withCurrency(String currency)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a copy of this filter, with the specified currency.  Currency can be null to\n         * indicate no filter on currency.\n         * @param currency the currency code\n         * @return the filter\n         * @see #onCurrency(String)\n         ",
    "links" : [ ]
  }, {
    "name" : "public CurrencyFilter withDate(Date date)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a copy of this filter, with from and to set to the given date.\n         * @param date the date on which the currency must have been in use\n         * @return the filter\n         * @see #onDate(Date)\n         ",
    "links" : [ ]
  }, {
    "name" : "public CurrencyFilter withDateRange(Date from, Date to)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a copy of this filter, with from and to set to the given dates.\n         * @param from date on or after which the currency must have been in use\n         * @param to date on or before which the currency must have been in use\n         * @return the filter\n         * @see #onDateRange(Date, Date)\n         ",
    "links" : [ ]
  }, {
    "name" : "public CurrencyFilter withDate(long date)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a copy of this filter that accepts all currencies in use on\n         * the given date.\n         * @param date the date as milliseconds after Jan 1, 1970\n         ",
    "links" : [ ]
  }, {
    "name" : "public CurrencyFilter withDateRange(long from, long to)",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a copy of this filter that accepts all currencies that were\n         * in use at some point between the given dates, or if dates are equal,\n         * currencies in use on that date.\n         * @param from The date on or after a currency must have been in use.\n         *   Measured in milliseconds since Jan 1, 1970 GMT.\n         * @param to The date on or before which a currency must have been in use.\n         *   Measured in milliseconds since Jan 1, 1970 GMT.\n         ",
    "links" : [ ]
  }, {
    "name" : "public CurrencyFilter withTender()",
    "returnType" : "CurrencyFilter",
    "comment" : "\n         * Returns a copy of this filter that filters for currencies that were\n         * either once used, are used, or will be used as tender.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object rhs)",
    "returnType" : "boolean",
    "comment" : "\n         * {@inheritDoc}\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(CurrencyFilter rhs)",
    "returnType" : "boolean",
    "comment" : "\n         * Type-safe override of {@link #equals(Object)}.\n         * @param rhs the currency filter to compare to\n         * @return true if the filters are equal\n         ",
    "links" : [ "#equals(Object)" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n         * {@inheritDoc}\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n         * Returns a string representing the filter, for debugging.\n         * @return A string representing the filter.\n         ",
    "links" : [ ]
  }, {
    "name" : "private static boolean equals(String lhs, String rhs)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static CurrencyFilter all()", "public static CurrencyFilter now()", "public static CurrencyFilter onRegion(String region)", "public static CurrencyFilter onCurrency(String currency)", "public static CurrencyFilter onDate(Date date)", "public static CurrencyFilter onDateRange(Date from, Date to)", "public static CurrencyFilter onDate(long date)", "public static CurrencyFilter onDateRange(long from, long to)", "public static CurrencyFilter onTender()", "public CurrencyFilter withRegion(String region)", "public CurrencyFilter withCurrency(String currency)", "public CurrencyFilter withDate(Date date)", "public CurrencyFilter withDateRange(Date from, Date to)", "public CurrencyFilter withDate(long date)", "public CurrencyFilter withDateRange(long from, long to)", "public CurrencyFilter withTender()", "public boolean equals(Object rhs)", "public boolean equals(CurrencyFilter rhs)", "public int hashCode()", "public String toString()", "private static boolean equals(String lhs, String rhs)" ],
  "variableNames" : [ "region", "currency", "from", "to", "tenderOnly", "ALL" ]
}