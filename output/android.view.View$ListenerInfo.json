{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/View.java",
  "packageName" : "android.view",
  "className" : "ListenerInfo",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mOnFocusChangeListener",
    "type" : "OnFocusChangeListener",
    "comment" : "\n         * Listener used to dispatch focus change events.\n         * This field should be made private, so it is hidden from the SDK.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "mOnLayoutChangeListeners",
    "type" : "ArrayList<OnLayoutChangeListener>",
    "comment" : "\n         * Listeners for layout change events.\n         ",
    "links" : [ ]
  }, {
    "name" : "mOnScrollChangeListener",
    "type" : "OnScrollChangeListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnAttachStateChangeListeners",
    "type" : "CopyOnWriteArrayList<OnAttachStateChangeListener>",
    "comment" : "\n         * Listeners for attach events.\n         ",
    "links" : [ ]
  }, {
    "name" : "mOnClickListener",
    "type" : "OnClickListener",
    "comment" : "\n         * Listener used to dispatch click events.\n         * This field should be made private, so it is hidden from the SDK.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "mOnLongClickListener",
    "type" : "OnLongClickListener",
    "comment" : "\n         * Listener used to dispatch long click events.\n         * This field should be made private, so it is hidden from the SDK.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "mOnContextClickListener",
    "type" : "OnContextClickListener",
    "comment" : "\n         * Listener used to dispatch context click events. This field should be made private, so it\n         * is hidden from the SDK.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "mOnCreateContextMenuListener",
    "type" : "OnCreateContextMenuListener",
    "comment" : "\n         * Listener used to build the context menu.\n         * This field should be made private, so it is hidden from the SDK.\n         * {@hide}\n         ",
    "links" : [ ]
  }, {
    "name" : "mOnKeyListener",
    "type" : "OnKeyListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnTouchListener",
    "type" : "OnTouchListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnHoverListener",
    "type" : "OnHoverListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnGenericMotionListener",
    "type" : "OnGenericMotionListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnDragListener",
    "type" : "OnDragListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnSystemUiVisibilityChangeListener",
    "type" : "OnSystemUiVisibilityChangeListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnApplyWindowInsetsListener",
    "type" : "OnApplyWindowInsetsListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOnCapturedPointerListener",
    "type" : "OnCapturedPointerListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUnhandledKeyListeners",
    "type" : "ArrayList<OnUnhandledKeyEventListener>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWindowInsetsAnimationCallback",
    "type" : "WindowInsetsAnimation.Callback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSystemGestureExclusionRects",
    "type" : "List<Rect>",
    "comment" : "\n         * This lives here since it's only valid for interactive views. This list is null\n         * until its first use.\n         ",
    "links" : [ ]
  }, {
    "name" : "mKeepClearRects",
    "type" : "List<Rect>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUnrestrictedKeepClearRects",
    "type" : "List<Rect>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPreferKeepClear",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandwritingArea",
    "type" : "Rect",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPositionUpdateListener",
    "type" : "RenderNode.PositionUpdateListener",
    "comment" : "\n         * Used to track {@link #mSystemGestureExclusionRects}, {@link #mKeepClearRects} and\n         * {@link #mHandwritingArea}.\n         ",
    "links" : [ "#mHandwritingArea", "#mKeepClearRects", "#mSystemGestureExclusionRects" ]
  }, {
    "name" : "mPositionChangedUpdate",
    "type" : "Runnable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScrollCaptureCallback",
    "type" : "ScrollCaptureCallback",
    "comment" : "\n         * Allows the application to implement custom scroll capture support.\n         ",
    "links" : [ ]
  }, {
    "name" : "mOnReceiveContentListener",
    "type" : "OnReceiveContentListener",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ ],
  "methodNames" : [ ],
  "variableNames" : [ "mOnFocusChangeListener", "mOnLayoutChangeListeners", "mOnScrollChangeListener", "mOnAttachStateChangeListeners", "mOnClickListener", "mOnLongClickListener", "mOnContextClickListener", "mOnCreateContextMenuListener", "mOnKeyListener", "mOnTouchListener", "mOnHoverListener", "mOnGenericMotionListener", "mOnDragListener", "mOnSystemUiVisibilityChangeListener", "mOnApplyWindowInsetsListener", "mOnCapturedPointerListener", "mUnhandledKeyListeners", "mWindowInsetsAnimationCallback", "mSystemGestureExclusionRects", "mKeepClearRects", "mUnrestrictedKeepClearRects", "mPreferKeepClear", "mHandwritingArea", "mPositionUpdateListener", "mPositionChangedUpdate", "mScrollCaptureCallback", "mOnReceiveContentListener" ]
}