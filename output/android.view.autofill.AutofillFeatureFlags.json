{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/autofill/AutofillFeatureFlags.java",
  "packageName" : "android.view.autofill",
  "className" : "AutofillFeatureFlags",
  "comment" : "\n * Feature flags associated with autofill.\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEVICE_CONFIG_AUTOFILL_SMART_SUGGESTION_SUPPORTED_MODES",
    "type" : "String",
    "comment" : "\n     * {@code DeviceConfig} property used to set which Smart Suggestion modes for Augmented Autofill\n     * are available.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUGMENTED_SERVICE_IDLE_UNBIND_TIMEOUT",
    "type" : "String",
    "comment" : "\n     * Sets how long (in ms) the augmented autofill service is bound while idle.\n     *\n     * <p>Use {@code 0} to keep it permanently bound.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUGMENTED_SERVICE_REQUEST_TIMEOUT",
    "type" : "String",
    "comment" : "\n     * Sets how long (in ms) the augmented autofill service request is killed if not replied.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_COMPAT_MODE_ALLOWED_PACKAGES",
    "type" : "String",
    "comment" : "\n     * Sets allowed list for the autofill compatibility mode.\n     *\n     * The list of packages is {@code \":\"} colon delimited, and each entry has the name of the\n     * package and an optional list of url bar resource ids (the list is delimited by\n     * brackets&mdash{@code [} and {@code ]}&mdash and is also comma delimited).\n     *\n     * <p>For example, a list with 3 packages {@code p1}, {@code p2}, and {@code p3}, where\n     * package {@code p1} have one id ({@code url_bar}, {@code p2} has none, and {@code p3 }\n     * have 2 ids {@code url_foo} and {@code url_bas}) would be\n     * {@code p1[url_bar]:p2:p3[url_foo,url_bas]}\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_DIALOG_ENABLED",
    "type" : "String",
    "comment" : "\n     * Indicates Fill dialog feature enabled or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_DIALOG_HINTS",
    "type" : "String",
    "comment" : "\n     * Sets the autofill hints allowed list for the fields that can trigger the fill dialog\n     * feature at Activity starting.\n     *\n     * The list of autofill hints is {@code \":\"} colon delimited.\n     *\n     *  <p>For example, a list with 3 hints {@code password}, {@code phone}, and\n     * { @code emailAddress}, would be {@code password:phone:emailAddress}\n     *\n     * Note: By default the password field is enabled even there is no password hint in the list\n     *\n     * @see View#setAutofillHints(String...)\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_IGNORE_VIEWS",
    "type" : "String",
    "comment" : "\n     * Indicates whether credential manager tagged views should be ignored from autofill structures.\n     * This flag is further gated by {@link #DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_ENABLED}\n     ",
    "links" : [ "#DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_ENABLED" ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_ENABLED",
    "type" : "String",
    "comment" : "\n     * Indicates CredentialManager feature enabled or not.\n     * This is the overall feature flag. Individual behavior of credential manager may be controlled\n     * via a different flag, but gated by this flag.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_SUPPRESS_FILL_AND_SAVE_DIALOG",
    "type" : "String",
    "comment" : "\n     * Indicates whether credential manager tagged views should suppress fill and save dialog.\n     * This flag is further gated by {@link #DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_ENABLED}\n     *\n     * @hide\n     ",
    "links" : [ "#DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_ENABLED" ]
  }, {
    "name" : "DEVICE_CONFIG_PACKAGE_DENYLIST_FOR_UNIMPORTANT_VIEW",
    "type" : "String",
    "comment" : "\n     * Sets the list of activities and packages denied for autofill\n     *\n     * The list is {@code \";\"} colon delimited. Activities under a package is separated by\n     * {@code \",\"}. Each package name much be followed by a {@code \":\"}. Each package entry must be\n     * ends with a {@code \";\"}\n     *\n     * <p>For example, a list with only 1 package would be, {@code Package1:;}. A list with one\n     * denied activity {@code Activity1} under {@code Package1} and a full denied package\n     * {@code Package2} would be {@code Package1:Activity1;Package2:;}\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_PACKAGE_AND_ACTIVITY_ALLOWLIST_FOR_TRIGGERING_FILL_REQUEST",
    "type" : "String",
    "comment" : "\n     * Sets the list of activities and packages allowed for autofill. The format is same with\n     * {@link #DEVICE_CONFIG_PACKAGE_DENYLIST_FOR_UNIMPORTANT_VIEW}\n     *\n     * @hide\n     ",
    "links" : [ "#DEVICE_CONFIG_PACKAGE_DENYLIST_FOR_UNIMPORTANT_VIEW" ]
  }, {
    "name" : "DEVICE_CONFIG_TRIGGER_FILL_REQUEST_ON_UNIMPORTANT_VIEW",
    "type" : "String",
    "comment" : "\n     * Whether the heuristics check for view is enabled\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_TRIGGER_FILL_REQUEST_ON_FILTERED_IMPORTANT_VIEWS",
    "type" : "String",
    "comment" : "\n     * Whether to apply heuristic check on important views.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_NON_AUTOFILLABLE_IME_ACTION_IDS",
    "type" : "String",
    "comment" : "\n     * Continas imeAction ids that is irrelevant for autofill. For example, ime_action_search. We\n     * use this to avoid trigger fill request on unimportant views.\n     *\n     * The list is {@code \",\"} delimited.\n     *\n     * <p> For example, a imeAction list could be \"2,3,4\", corresponding to ime_action definition\n     * in {@link android.view.inputmethod.EditorInfo.java}</p>\n     ",
    "links" : [ "android.view.inputmethod.EditorInfo.java" ]
  }, {
    "name" : "DEVICE_CONFIG_SHOULD_ENABLE_AUTOFILL_ON_ALL_VIEW_TYPES",
    "type" : "String",
    "comment" : "\n     * Whether to enable autofill on all view types (not just checkbox, spinner, datepicker etc...)\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_MULTILINE_FILTER_ENABLED",
    "type" : "String",
    "comment" : "\n     * Whether to enable multi-line filter when checking if view is autofillable\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_INCLUDE_ALL_AUTOFILL_TYPE_NOT_NONE_VIEWS_IN_ASSIST_STRUCTURE",
    "type" : "String",
    "comment" : "\n     * Whether include all autofill type not none views in assist structure\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_INCLUDE_ALL_VIEWS_IN_ASSIST_STRUCTURE",
    "type" : "String",
    "comment" : "\n     * Whether include all views in assist structure\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_ALWAYS_INCLUDE_WEBVIEW_IN_ASSIST_STRUCTURE",
    "type" : "String",
    "comment" : "\n     * Whether to always include WebView in assist structure. WebView is a container view that\n     * providers \"virtual\" views. We want to always include such a container view since it can\n     * contain arbitrary views in it, some of which could be fillable.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_INCLUDE_INVISIBLE_VIEW_GROUP_IN_ASSIST_STRUCTURE",
    "type" : "String",
    "comment" : "\n     * Whether to include invisible views in the assist structure. Including invisible views can fix\n     * some cases in which Session is destroyed earlier than it is suppose to.\n     *\n     * <p>See\n     * frameworks/base/services/autofill/bugfixes.aconfig#include_invisible_view_group_in_assist_structure\n     * for more information.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_IGNORE_VIEW_STATE_RESET_TO_EMPTY",
    "type" : "String",
    "comment" : "\n     * Bugfix flag, Autofill should ignore views resetting to empty states.\n     *\n     * See frameworks/base/services/autofill/bugfixes.aconfig#ignore_view_state_reset_to_empty\n     * for more information.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_IGNORE_RELAYOUT_WHEN_AUTH_PENDING",
    "type" : "String",
    "comment" : "\n     * Bugfix flag, Autofill should ignore view updates if an Auth intent is showing.\n     *\n     * See frameworks/base/services/autofill/bugfixes.aconfig#relayout\n     * for more information.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_FILL_FIELDS_FROM_CURRENT_SESSION_ONLY",
    "type" : "String",
    "comment" : "\n     * Bugfix flag, Autofill should only fill in value from current session.\n     *\n     * See frameworks/base/services/autofill/bugfixes.aconfig#fill_fields_from_current_session_only\n     * for more information\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_PCC_CLASSIFICATION_ENABLED",
    "type" : "String",
    "comment" : "\n     * Sets the fill dialog feature enabled or not.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_PREFER_PROVIDER_OVER_PCC",
    "type" : "String",
    "comment" : "\n     * Give preference to autofill provider's detection.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_PCC_FEATURE_PROVIDER_HINTS",
    "type" : "String",
    "comment" : "\n     * Indicates the Autofill Hints that would be requested by the service from the Autofill\n     * Provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_PCC_USE_FALLBACK",
    "type" : "String",
    "comment" : "\n     * Use data from secondary source if primary not present .\n     * For eg: if we prefer PCC over provider, and PCC detection didn't classify a field, however,\n     * autofill provider did, this flag would decide whether we use that result, and show some\n     * presentation for that particular field.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_MAX_INPUT_LENGTH_FOR_AUTOFILL",
    "type" : "String",
    "comment" : "\n     * Define the max input length for autofill to show suggesiton UI\n     *\n     * E.g. if flag is set to 3, autofill will only show suggestions when user inputs less than 3\n     * characters\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEVICE_CONFIG_AUTOFILL_TOOLTIP_SHOW_UP_DELAY",
    "type" : "String",
    "comment" : "\n     * Sets a value of delay time to show up the inline tooltip view.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DIALOG_HINTS_DELIMITER",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_HAS_FILL_DIALOG_UI_FEATURE",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_FILL_DIALOG_ENABLED_HINTS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_CREDENTIAL_MANAGER_ENABLED",
    "type" : "boolean",
    "comment" : " Credential manager is enabled by default so as to allow testing by app developers",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_CREDENTIAL_MANAGER_SUPPRESS_FILL_AND_SAVE_DIALOG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AUTOFILL_PCC_CLASSIFICATION_ENABLED",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AFAA_ON_UNIMPORTANT_VIEW_ENABLED",
    "type" : "boolean",
    "comment" : " AUTOFILL FOR ALL APPS DEFAULTS",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AFAA_ON_IMPORTANT_VIEW_ENABLED",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AFAA_DENYLIST",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AFAA_ALLOWLIST",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AFAA_NON_AUTOFILLABLE_IME_ACTIONS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AFAA_SHOULD_ENABLE_AUTOFILL_ON_ALL_VIEW_TYPES",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AFAA_SHOULD_ENABLE_MULTILINE_FILTER",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_AFAA_SHOULD_INCLUDE_ALL_AUTOFILL_TYPE_NOT_NONE_VIEWS_IN_ASSIST_STRUCTURE",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MAX_INPUT_LENGTH_FOR_AUTOFILL",
    "type" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean isFillDialogEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether the fill dialog feature is enabled or not\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String[] getFillDialogEnabledHints()",
    "returnType" : "String[]",
    "comment" : "\n     * Gets fill dialog enabled hints.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isCredentialManagerEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether the Credential Manager feature is enabled or not\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isFillAndSaveDialogDisabledForCredentialManager()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether credential manager tagged views should not trigger fill dialog requests.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isTriggerFillRequestOnUnimportantViewEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether triggering fill request on unimportant view is enabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isTriggerFillRequestOnFilteredImportantViewsEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether to apply heuristic check on important views before triggering fill request\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldEnableAutofillOnAllViewTypes()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether to enable autofill on all view types.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Set<String> getNonAutofillableImeActionIdSetFromFlag()",
    "returnType" : "Set<String>",
    "comment" : "\n     * Get the non-autofillable ime actions from flag. This will be used in filtering\n     * condition to trigger fill request.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getDenylistStringFromFlag()",
    "returnType" : "String",
    "comment" : "\n     * Get denylist string from flag.\n     *\n     * Note: This denylist works both on important view and not important views. The flag used here\n     * is legacy flag which will be replaced with soon.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getAllowlistStringFromFlag()",
    "returnType" : "String",
    "comment" : "\n     * Get autofill allowlist from flag\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldIncludeAllViewsAutofillTypeNotNoneInAssistStructrue()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether include all views that have autofill type not none in assist structure.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldIncludeAllChildrenViewInAssistStructure()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether include all views in assist structure.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldAlwaysIncludeWebviewInAssistStructure()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldIncludeInvisibleViewInAssistStructure()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldIgnoreViewStateResetToEmpty()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldIgnoreRelayoutWhenAuthPending()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldFillFieldsFromCurrentSessionOnly()",
    "returnType" : "boolean",
    "comment" : " @hide *",
    "links" : [ ]
  }, {
    "name" : "public static boolean shouldEnableMultilineFilter()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether should enable multi-line filter\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isAutofillPccClassificationEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Whether Autofill PCC Detection is enabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static boolean isFillDialogEnabled()", "public static String[] getFillDialogEnabledHints()", "public static boolean isCredentialManagerEnabled()", "public static boolean isFillAndSaveDialogDisabledForCredentialManager()", "public static boolean isTriggerFillRequestOnUnimportantViewEnabled()", "public static boolean isTriggerFillRequestOnFilteredImportantViewsEnabled()", "public static boolean shouldEnableAutofillOnAllViewTypes()", "public static Set<String> getNonAutofillableImeActionIdSetFromFlag()", "public static String getDenylistStringFromFlag()", "public static String getAllowlistStringFromFlag()", "public static boolean shouldIncludeAllViewsAutofillTypeNotNoneInAssistStructrue()", "public static boolean shouldIncludeAllChildrenViewInAssistStructure()", "public static boolean shouldAlwaysIncludeWebviewInAssistStructure()", "public static boolean shouldIncludeInvisibleViewInAssistStructure()", "public static boolean shouldIgnoreViewStateResetToEmpty()", "public static boolean shouldIgnoreRelayoutWhenAuthPending()", "public static boolean shouldFillFieldsFromCurrentSessionOnly()", "public static boolean shouldEnableMultilineFilter()", "public static boolean isAutofillPccClassificationEnabled()" ],
  "variableNames" : [ "DEVICE_CONFIG_AUTOFILL_SMART_SUGGESTION_SUPPORTED_MODES", "DEVICE_CONFIG_AUGMENTED_SERVICE_IDLE_UNBIND_TIMEOUT", "DEVICE_CONFIG_AUGMENTED_SERVICE_REQUEST_TIMEOUT", "DEVICE_CONFIG_AUTOFILL_COMPAT_MODE_ALLOWED_PACKAGES", "DEVICE_CONFIG_AUTOFILL_DIALOG_ENABLED", "DEVICE_CONFIG_AUTOFILL_DIALOG_HINTS", "DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_IGNORE_VIEWS", "DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_ENABLED", "DEVICE_CONFIG_AUTOFILL_CREDENTIAL_MANAGER_SUPPRESS_FILL_AND_SAVE_DIALOG", "DEVICE_CONFIG_PACKAGE_DENYLIST_FOR_UNIMPORTANT_VIEW", "DEVICE_CONFIG_PACKAGE_AND_ACTIVITY_ALLOWLIST_FOR_TRIGGERING_FILL_REQUEST", "DEVICE_CONFIG_TRIGGER_FILL_REQUEST_ON_UNIMPORTANT_VIEW", "DEVICE_CONFIG_TRIGGER_FILL_REQUEST_ON_FILTERED_IMPORTANT_VIEWS", "DEVICE_CONFIG_NON_AUTOFILLABLE_IME_ACTION_IDS", "DEVICE_CONFIG_SHOULD_ENABLE_AUTOFILL_ON_ALL_VIEW_TYPES", "DEVICE_CONFIG_MULTILINE_FILTER_ENABLED", "DEVICE_CONFIG_INCLUDE_ALL_AUTOFILL_TYPE_NOT_NONE_VIEWS_IN_ASSIST_STRUCTURE", "DEVICE_CONFIG_INCLUDE_ALL_VIEWS_IN_ASSIST_STRUCTURE", "DEVICE_CONFIG_ALWAYS_INCLUDE_WEBVIEW_IN_ASSIST_STRUCTURE", "DEVICE_CONFIG_INCLUDE_INVISIBLE_VIEW_GROUP_IN_ASSIST_STRUCTURE", "DEVICE_CONFIG_IGNORE_VIEW_STATE_RESET_TO_EMPTY", "DEVICE_CONFIG_IGNORE_RELAYOUT_WHEN_AUTH_PENDING", "DEVICE_CONFIG_FILL_FIELDS_FROM_CURRENT_SESSION_ONLY", "DEVICE_CONFIG_AUTOFILL_PCC_CLASSIFICATION_ENABLED", "DEVICE_CONFIG_PREFER_PROVIDER_OVER_PCC", "DEVICE_CONFIG_AUTOFILL_PCC_FEATURE_PROVIDER_HINTS", "DEVICE_CONFIG_PCC_USE_FALLBACK", "DEVICE_CONFIG_MAX_INPUT_LENGTH_FOR_AUTOFILL", "DEVICE_CONFIG_AUTOFILL_TOOLTIP_SHOW_UP_DELAY", "DIALOG_HINTS_DELIMITER", "DEFAULT_HAS_FILL_DIALOG_UI_FEATURE", "DEFAULT_FILL_DIALOG_ENABLED_HINTS", "DEFAULT_CREDENTIAL_MANAGER_ENABLED", "DEFAULT_CREDENTIAL_MANAGER_SUPPRESS_FILL_AND_SAVE_DIALOG", "DEFAULT_AUTOFILL_PCC_CLASSIFICATION_ENABLED", "DEFAULT_AFAA_ON_UNIMPORTANT_VIEW_ENABLED", "DEFAULT_AFAA_ON_IMPORTANT_VIEW_ENABLED", "DEFAULT_AFAA_DENYLIST", "DEFAULT_AFAA_ALLOWLIST", "DEFAULT_AFAA_NON_AUTOFILLABLE_IME_ACTIONS", "DEFAULT_AFAA_SHOULD_ENABLE_AUTOFILL_ON_ALL_VIEW_TYPES", "DEFAULT_AFAA_SHOULD_ENABLE_MULTILINE_FILTER", "DEFAULT_AFAA_SHOULD_INCLUDE_ALL_AUTOFILL_TYPE_NOT_NONE_VIEWS_IN_ASSIST_STRUCTURE", "DEFAULT_MAX_INPUT_LENGTH_FOR_AUTOFILL" ]
}