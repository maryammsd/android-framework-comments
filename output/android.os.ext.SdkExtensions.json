{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/ext/SdkExtensions.java",
  "packageName" : "android.os.ext",
  "className" : "SdkExtensions",
  "comment" : "\n * Methods for interacting with the extension SDK.\n *\n * <p>This class provides information about the extension SDK versions present on this device. Use\n * the {@link #getExtensionVersion(int) getExtension} method to lookup the version of a given\n * extension.\n *\n * <p>The extension version advances as the platform evolves and new APIs are added, so is suitable\n * to use for determining API availability at runtime.\n ",
  "links" : [ "#getExtensionVersion(int)" ],
  "variables" : [ {
    "name" : "AD_SERVICES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "R_EXTENSION_INT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "S_EXTENSION_INT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "T_EXTENSION_INT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "U_EXTENSION_INT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "V_EXTENSION_INT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "AD_SERVICES_EXTENSION_INT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ALL_EXTENSION_INTS",
    "type" : "Map<Integer, Integer>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int getExtensionVersion(@Extension int extension)",
    "returnType" : "int",
    "comment" : "\n     * Return the version of the specified extensions.\n     *\n     * <p>This method is suitable to use in conditional statements to determine whether an API is\n     * available and is safe to use. For example:\n     *\n     * <pre>\n     * if (getExtensionVersion(VERSION_CODES.R) >= 3) {\n     *   // Safely use API available since R extensions version 3\n     * }\n     * </pre>\n     *\n     * @param extension the extension to get the version of.\n     * @throws IllegalArgumentException if extension is not a valid extension\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Map<Integer, Integer> getAllExtensionVersions()",
    "returnType" : "Map<Integer, Integer>",
    "comment" : "\n     * Return all extension versions that exist on this device.\n     *\n     * @return a map from extension to extension version.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static int getExtensionVersion(@Extension int extension)", "public static Map<Integer, Integer> getAllExtensionVersions()" ],
  "variableNames" : [ "AD_SERVICES", "R_EXTENSION_INT", "S_EXTENSION_INT", "T_EXTENSION_INT", "U_EXTENSION_INT", "V_EXTENSION_INT", "AD_SERVICES_EXTENSION_INT", "ALL_EXTENSION_INTS" ]
}