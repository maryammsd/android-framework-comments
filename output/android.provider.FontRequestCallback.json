{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/provider/FontsContract.java",
  "packageName" : "android.provider",
  "className" : "FontRequestCallback",
  "comment" : "\n     * Interface used to receive asynchronously fetched typefaces.\n     ",
  "variables" : [ {
    "name" : "FAIL_REASON_PROVIDER_NOT_FOUND",
    "type" : "int",
    "comment" : "\n         * Constant returned by {@link #onTypefaceRequestFailed(int)} signaling that the given\n         * provider was not found on the device.\n         ",
    "links" : [ "#onTypefaceRequestFailed(int)" ]
  }, {
    "name" : "FAIL_REASON_WRONG_CERTIFICATES",
    "type" : "int",
    "comment" : "\n         * Constant returned by {@link #onTypefaceRequestFailed(int)} signaling that the given\n         * provider must be authenticated and the given certificates do not match its signature.\n         ",
    "links" : [ "#onTypefaceRequestFailed(int)" ]
  }, {
    "name" : "FAIL_REASON_FONT_LOAD_ERROR",
    "type" : "int",
    "comment" : "\n         * Constant returned by {@link #onTypefaceRequestFailed(int)} signaling that the font\n         * returned by the provider was not loaded properly.\n         ",
    "links" : [ "#onTypefaceRequestFailed(int)" ]
  }, {
    "name" : "FAIL_REASON_FONT_NOT_FOUND",
    "type" : "int",
    "comment" : "\n         * Constant returned by {@link #onTypefaceRequestFailed(int)} signaling that the font\n         * provider did not return any results for the given query.\n         ",
    "links" : [ "#onTypefaceRequestFailed(int)" ]
  }, {
    "name" : "FAIL_REASON_FONT_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n         * Constant returned by {@link #onTypefaceRequestFailed(int)} signaling that the font\n         * provider found the queried font, but it is currently unavailable.\n         ",
    "links" : [ "#onTypefaceRequestFailed(int)" ]
  }, {
    "name" : "FAIL_REASON_MALFORMED_QUERY",
    "type" : "int",
    "comment" : "\n         * Constant returned by {@link #onTypefaceRequestFailed(int)} signaling that the given\n         * query was not supported by the provider.\n         ",
    "links" : [ "#onTypefaceRequestFailed(int)" ]
  } ],
  "methods" : [ {
    "name" : "public void onTypefaceRetrieved(Typeface typeface)",
    "returnType" : "void",
    "comment" : "\n         * Called then a Typeface request done via {@link #requestFonts} is complete. Note that this\n         * method will not be called if {@link #onTypefaceRequestFailed(int)} is called instead.\n         * @param typeface  The Typeface object retrieved.\n         ",
    "links" : [ "#onTypefaceRequestFailed(int)", "#requestFonts" ]
  }, {
    "name" : "public void onTypefaceRequestFailed(@FontRequestFailReason int reason)",
    "returnType" : "void",
    "comment" : "\n         * Called when a Typeface request done via {@link #requestFonts}} fails.\n         * @param reason One of {@link #FAIL_REASON_PROVIDER_NOT_FOUND},\n         *               {@link #FAIL_REASON_FONT_NOT_FOUND},\n         *               {@link #FAIL_REASON_FONT_LOAD_ERROR},\n         *               {@link #FAIL_REASON_FONT_UNAVAILABLE} or\n         *               {@link #FAIL_REASON_MALFORMED_QUERY} if returned by the system. May also be\n         *               a positive value greater than 0 defined by the font provider as an\n         *               additional error code. Refer to the provider's documentation for more\n         *               information on possible returned error codes.\n         ",
    "links" : [ "#FAIL_REASON_MALFORMED_QUERY", "#FAIL_REASON_FONT_LOAD_ERROR", "#FAIL_REASON_PROVIDER_NOT_FOUND", "#FAIL_REASON_FONT_NOT_FOUND", "#FAIL_REASON_FONT_UNAVAILABLE", "#requestFonts" ]
  } ],
  "variableNames" : [ "FAIL_REASON_PROVIDER_NOT_FOUND", "FAIL_REASON_WRONG_CERTIFICATES", "FAIL_REASON_FONT_LOAD_ERROR", "FAIL_REASON_FONT_NOT_FOUND", "FAIL_REASON_FONT_UNAVAILABLE", "FAIL_REASON_MALFORMED_QUERY" ],
  "methodNames" : [ "public void onTypefaceRetrieved(Typeface typeface)", "public void onTypefaceRequestFailed(@FontRequestFailReason int reason)" ]
}