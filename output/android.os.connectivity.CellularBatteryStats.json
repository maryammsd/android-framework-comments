{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/os/connectivity/CellularBatteryStats.java",
  "packageName" : "android.os.connectivity",
  "className" : "CellularBatteryStats",
  "comment" : "\n * API for Cellular power stats\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "mLoggingDurationMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mKernelActiveTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumPacketsTx",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumBytesTx",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumPacketsRx",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumBytesRx",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSleepTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIdleTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRxTimeMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEnergyConsumedMaMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeInRatMs",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeInRxSignalStrengthLevelMs",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxTimeMs",
    "type" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMonitoredRailChargeConsumedMaMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<CellularBatteryStats>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object other)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long getLoggingDurationMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the duration for which these cellular stats were collected.\n     *\n     * @return Duration of stats collection in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getKernelActiveTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the duration for which the kernel was active within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Duration of kernel active time in milliseconds.\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getNumPacketsTx()",
    "returnType" : "long",
    "comment" : "\n     * Returns the number of packets transmitted over cellular within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Number of packets transmitted.\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getNumBytesTx()",
    "returnType" : "long",
    "comment" : "\n     * Returns the number of packets received over cellular within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Number of packets received.\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getNumPacketsRx()",
    "returnType" : "long",
    "comment" : "\n     * Returns the number of bytes transmitted over cellular within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Number of bytes transmitted.\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getNumBytesRx()",
    "returnType" : "long",
    "comment" : "\n     * Returns the number of bytes received over cellular within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Number of bytes received.\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getSleepTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the duration for which the device was sleeping within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Duration of sleep time in milliseconds.\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getIdleTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the duration for which the device was idle within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Duration of idle time in milliseconds.\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getRxTimeMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the duration for which the device was receiving over cellular within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Duration of cellular reception time in milliseconds.\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getEnergyConsumedMaMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns an estimation of energy consumed by cellular chip within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @return Energy consumed in milli-ampere milliseconds (mAmS).\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getTimeInRatMicros(@NetworkType int networkType)",
    "returnType" : "long",
    "comment" : "\n     * Returns the time in microseconds that the phone has been running with\n     * the given data connection.\n     *\n     * @param networkType The network type to query.\n     * @return The amount of time the phone spends in the {@code networkType} network type. The\n     * unit is in microseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTimeInRxSignalStrengthLevelMicros(@IntRange(from = CellSignalStrength.SIGNAL_STRENGTH_NONE_OR_UNKNOWN, to = CellSignalStrength.SIGNAL_STRENGTH_GREAT) int signalStrengthBin)",
    "returnType" : "long",
    "comment" : "\n     * Returns the time in microseconds that the phone has been running with\n     * the given signal strength.\n     *\n     * @param signalStrengthBin a single integer from 0 to 4 representing the general signal\n     * quality.\n     * @return Amount of time phone spends in specific cellular rx signal strength levels\n     * in microseconds. The index is signal strength bin.\n     ",
    "links" : [ ]
  }, {
    "name" : "public long getTxTimeMillis(@IntRange(from = ModemActivityInfo.TX_POWER_LEVEL_0, to = ModemActivityInfo.TX_POWER_LEVEL_4) int level)",
    "returnType" : "long",
    "comment" : "\n     * Returns the duration for which the device was transmitting over cellular within\n     * {@link #getLoggingDurationMillis()}.\n     *\n     * @param level a single integer from 0 to 4 representing the Tx(transmit) power level.\n     * @return Duration of cellular transmission time for specific power level in milliseconds.\n     *\n     * Tx(transmit) power level. see power index @ModemActivityInfo.TxPowerLevel below\n     * <ul>\n     * <li> index 0 = tx_power < 0dBm. </li>\n     * <li> index 1 = 0dBm < tx_power < 5dBm. </li>\n     * <li> index 2 = 5dBm < tx_power < 15dBm. </li>\n     * <li> index 3 = 15dBm < tx_power < 20dBm. </li>\n     * <li> index 4 = tx_power > 20dBm. </li>\n     * </ul>\n     *\n     * @hide\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public long getMonitoredRailChargeConsumedMaMillis()",
    "returnType" : "long",
    "comment" : "\n     * Returns the energy consumed by cellular chip within {@link #getLoggingDurationMillis()}.\n     *\n     * @return Energy consumed in milli-ampere milli-seconds (mAmS).\n     ",
    "links" : [ "#getLoggingDurationMillis()" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mLoggingDurationMs", "mKernelActiveTimeMs", "mNumPacketsTx", "mNumBytesTx", "mNumPacketsRx", "mNumBytesRx", "mSleepTimeMs", "mIdleTimeMs", "mRxTimeMs", "mEnergyConsumedMaMs", "mTimeInRatMs", "mTimeInRxSignalStrengthLevelMs", "mTxTimeMs", "mMonitoredRailChargeConsumedMaMs", "CREATOR" ],
  "methodNames" : [ "public void writeToParcel(@NonNull Parcel out, int flags)", "public boolean equals(@Nullable Object other)", "public int hashCode()", "public long getLoggingDurationMillis()", "public long getKernelActiveTimeMillis()", "public long getNumPacketsTx()", "public long getNumBytesTx()", "public long getNumPacketsRx()", "public long getNumBytesRx()", "public long getSleepTimeMillis()", "public long getIdleTimeMillis()", "public long getRxTimeMillis()", "public long getEnergyConsumedMaMillis()", "public long getTimeInRatMicros(@NetworkType int networkType)", "public long getTimeInRxSignalStrengthLevelMicros(@IntRange(from = CellSignalStrength.SIGNAL_STRENGTH_NONE_OR_UNKNOWN, to = CellSignalStrength.SIGNAL_STRENGTH_GREAT) int signalStrengthBin)", "public long getTxTimeMillis(@IntRange(from = ModemActivityInfo.TX_POWER_LEVEL_0, to = ModemActivityInfo.TX_POWER_LEVEL_4) int level)", "public long getMonitoredRailChargeConsumedMaMillis()", "public int describeContents()" ]
}