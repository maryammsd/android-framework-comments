{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/view/autofill/AutofillManager.java",
  "packageName" : "android.view.autofill",
  "className" : "TrackedViews",
  "comment" : "\n     * View tracking information. Once all tracked views become invisible the session is finished.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mVisibleTrackedIds",
    "type" : "ArraySet<AutofillId>",
    "comment" : " Visible tracked views ",
    "links" : [ ]
  }, {
    "name" : "mInvisibleTrackedIds",
    "type" : "ArraySet<AutofillId>",
    "comment" : " Invisible tracked views ",
    "links" : [ ]
  }, {
    "name" : "mVisibleDialogTrackedIds",
    "type" : "ArraySet<AutofillId>",
    "comment" : " Visible tracked views for fill dialog ",
    "links" : [ ]
  }, {
    "name" : "mInvisibleDialogTrackedIds",
    "type" : "ArraySet<AutofillId>",
    "comment" : " Invisible tracked views for fill dialog ",
    "links" : [ ]
  }, {
    "name" : "mHasNewTrackedView",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsTrackedSaveView",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private boolean isInSet(@Nullable ArraySet<T> set, T value)",
    "returnType" : "boolean",
    "comment" : " TODO: move to Helper as static method",
    "links" : [ ]
  }, {
    "name" : "private ArraySet<T> addToSet(@Nullable ArraySet<T> set, T valueToAdd)",
    "returnType" : "ArraySet<T>",
    "comment" : " TODO: move to Helper as static method",
    "links" : [ ]
  }, {
    "name" : "private ArraySet<T> removeFromSet(@Nullable ArraySet<T> set, T valueToRemove)",
    "returnType" : "ArraySet<T>",
    "comment" : " TODO: move to Helper as static method",
    "links" : [ ]
  }, {
    "name" : "private void initialTrackedViews(AutofillId[] trackedIds, @NonNull ArraySet<AutofillId> visibleSet, @NonNull ArraySet<AutofillId> invisibleSet)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void notifyViewVisibilityChangedLocked(@NonNull AutofillId id, boolean isVisible)",
    "returnType" : "void",
    "comment" : "\n         * Called when a {@link View view's} visibility changes.\n         *\n         * @param id the id of the view/virtual view whose visibility changed.\n         * @param isVisible visible if the view is visible in the view hierarchy.\n         ",
    "links" : [ "android.view.View" ]
  }, {
    "name" : " void onVisibleForAutofillChangedLocked()",
    "returnType" : "void",
    "comment" : "\n         * Called once the client becomes visible.\n         *\n         * @see AutofillClient#autofillClientIsVisibleForAutofill()\n         ",
    "links" : [ ]
  }, {
    "name" : " void onVisibleForAutofillChangedInternalLocked(@NonNull ArraySet<AutofillId> visibleSet, @NonNull ArraySet<AutofillId> invisibleSet)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void processNoVisibleTrackedAllViews()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void checkViewState(AutofillId id)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "private boolean isInSet(@Nullable ArraySet<T> set, T value)", "private ArraySet<T> addToSet(@Nullable ArraySet<T> set, T valueToAdd)", "private ArraySet<T> removeFromSet(@Nullable ArraySet<T> set, T valueToRemove)", "private void initialTrackedViews(AutofillId[] trackedIds, @NonNull ArraySet<AutofillId> visibleSet, @NonNull ArraySet<AutofillId> invisibleSet)", " void notifyViewVisibilityChangedLocked(@NonNull AutofillId id, boolean isVisible)", " void onVisibleForAutofillChangedLocked()", " void onVisibleForAutofillChangedInternalLocked(@NonNull ArraySet<AutofillId> visibleSet, @NonNull ArraySet<AutofillId> invisibleSet)", "private void processNoVisibleTrackedAllViews()", " void checkViewState(AutofillId id)" ],
  "variableNames" : [ "mVisibleTrackedIds", "mInvisibleTrackedIds", "mVisibleDialogTrackedIds", "mInvisibleDialogTrackedIds", "mHasNewTrackedView", "mIsTrackedSaveView" ]
}