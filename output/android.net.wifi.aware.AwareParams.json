{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/aware/AwareParams.java",
  "packageName" : "android.net.wifi.aware",
  "className" : "AwareParams",
  "comment" : "\n * An object to use with {@link WifiAwareManager#setAwareParams(AwareParams)} specifying\n * configuration of the Wi-Fi Aware protocol implementation.\n * @hide\n ",
  "links" : [ "android.net.wifi.aware.WifiAwareManager#setAwareParams(AwareParams)" ],
  "variables" : [ {
    "name" : "UNSET_PARAMETER",
    "type" : "int",
    "comment" : "\n     *  An integer representing the parameter is never set.\n     ",
    "links" : [ ]
  }, {
    "name" : "mDw24Ghz",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDw5Ghz",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDw6Ghz",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDiscoveryBeaconIntervalMs",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumSpatialStreamsInDiscovery",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsDwEarlyTerminationEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMacRandomIntervalSec",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<AwareParams>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setDiscoveryWindowWakeInterval24Ghz(@IntRange(from = 1, to = 5) int dw)",
    "returnType" : "void",
    "comment" : "\n     * Specifies the discovery window (DW) interval for Sync beacons and SDF frames for 2.4Ghz.\n     * Defined as per Wi-Fi Alliance (WFA) Wi-Fi Aware specifications version 3.1 Section 4.1.1.1\n     * Valid values of DW Interval are: 1, 2, 3, 4 and 5 corresponding to waking up every  1, 2, 4,\n     * 8, and 16 DWs.\n     * @param dw A positive number specifying the discovery window (DW) interval\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDiscoveryWindowWakeInterval5Ghz(@IntRange(from = 0, to = 5) int dw)",
    "returnType" : "void",
    "comment" : "\n     * Specifies the discovery window (DW) interval for Sync beacons and SDF frames for 5Ghz.\n     * Defined as per Wi-Fi Alliance (WFA) Wi-Fi Aware specifications version 3.1 Section 4.1.1.1\n     * <ul>\n     *     <li>0: indicating no discovery in the 5GHz band</li>\n     * <li>1, 2, 3, 4, or 5: corresponding to waking up every 1, 2, 4, 8, and 16 DWs.</li>\n     * </ul>\n     * @param dw An integer specifying the discovery window (DW) interval\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDiscoveryWindow6Ghz(@IntRange(from = 0) int dw)",
    "returnType" : "void",
    "comment" : "\n     * Set the discovery windows (DW) for 6Ghz reserved.\n     * @param dw An integer specifying the discovery window (DW) interval\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDiscoveryBeaconIntervalMillis(@IntRange(from = 1) int intervalInMs)",
    "returnType" : "void",
    "comment" : "\n     * Specify the Discovery Beacon interval in ms. Specification only applicable if the device\n     * transmits Discovery Beacons (based on the Wi-Fi Aware protocol selection criteria). The value\n     * can be increased to reduce power consumption (on devices which would transmit Discovery\n     * Beacons), however - cluster synchronization time will likely increase.\n     * @param intervalInMs An integer specifying the interval in millisecond\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setNumSpatialStreamsInDiscovery(@IntRange(from = 1) int spatialStreamsNum)",
    "returnType" : "void",
    "comment" : "\n     * The number of spatial streams to be used for transmitting Wi-Fi Aware management frames (does\n     * NOT apply to data-path packets). A small value may reduce power consumption for small\n     * discovery packets.\n     * @param spatialStreamsNum A positive number specifying the number of spatial streams\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMacRandomizationIntervalSeconds(@IntRange(from = 1, to = 1800) int intervalSec)",
    "returnType" : "void",
    "comment" : "\n     * Specifies the interval in seconds that the Wi-Fi Aware management interface MAC address is\n     * re-randomized.\n     * @param intervalSec A positive number indicating the interval for the MAC address to\n     *                    re-randomize, must not exceed 1800 second (30 mins).\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setDwEarlyTerminationEnabled(boolean enable)",
    "returnType" : "void",
    "comment" : "\n     * Controls whether the device may terminate listening on a Discovery Window (DW) earlier than\n     * the DW termination (16ms) if no information is received. Enabling the feature will result in\n     * lower power consumption, but may result in some missed messages and hence increased latency.\n     *\n     * @param enable true to enable, false otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDiscoveryWindowWakeInterval24Ghz()",
    "returnType" : "int",
    "comment" : "\n     * Get the discovery window (DW) interval for 2.4Ghz.\n     * @see #setDiscoveryWindowWakeInterval24Ghz(int)\n     * @return an integer represents discovery window interval, {@link #UNSET_PARAMETER} represent\n     * this parameter is not set\n     ",
    "links" : [ "#UNSET_PARAMETER" ]
  }, {
    "name" : "public int getDiscoveryWindowWakeInterval5Ghz()",
    "returnType" : "int",
    "comment" : "\n     * Get the discovery window (DW) interval for 5Ghz.\n     * @see #setDiscoveryWindowWakeInterval5Ghz(int)\n     * @return an integer represents discovery window interval, {@link #UNSET_PARAMETER} represent\n     * this parameter is not set\n     ",
    "links" : [ "#UNSET_PARAMETER" ]
  }, {
    "name" : "public int getDiscoveryWindowWakeInterval6Ghz()",
    "returnType" : "int",
    "comment" : "\n     * Get the discovery window (DW) interval for 6ghz.\n     * @see #setDiscoveryWindowWakeInterval5Ghz(int)\n     * @return an integer represents discovery window interval, {@link #UNSET_PARAMETER} represent\n     * this parameter is not\n     * set\n     * @hide\n     ",
    "links" : [ "#UNSET_PARAMETER" ]
  }, {
    "name" : "public int getDiscoveryBeaconIntervalMillis()",
    "returnType" : "int",
    "comment" : "\n     * Get the discovery beacon interval in milliseconds\n     * @see #setDiscoveryBeaconIntervalMillis(int)\n     * @return an integer represents discovery beacon interval in milliseconds,\n     * {@link #UNSET_PARAMETER} represent this parameter is not set\n     ",
    "links" : [ "#UNSET_PARAMETER" ]
  }, {
    "name" : "public int getNumSpatialStreamsInDiscovery()",
    "returnType" : "int",
    "comment" : "\n     * Get the number of the spatial streams used in discovery\n     * @see #setNumSpatialStreamsInDiscovery(int)\n     * @return an integer represents number of the spatial streams, {@link #UNSET_PARAMETER}\n     * represent this parameter is not set\n     ",
    "links" : [ "#UNSET_PARAMETER" ]
  }, {
    "name" : "public boolean isDwEarlyTerminationEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Check if discovery window early termination is enabled.\n     * @see #setDwEarlyTerminationEnabled(boolean)\n     * @return true if enabled, false otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMacRandomizationIntervalSeconds()",
    "returnType" : "int",
    "comment" : "\n     * Get the interval of the MAC address randomization.\n     * @return An integer represents the interval in seconds, {@link #UNSET_PARAMETER} represent\n     * this parameter is not set\n     ",
    "links" : [ "#UNSET_PARAMETER" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setDiscoveryWindowWakeInterval24Ghz(@IntRange(from = 1, to = 5) int dw)", "public void setDiscoveryWindowWakeInterval5Ghz(@IntRange(from = 0, to = 5) int dw)", "public void setDiscoveryWindow6Ghz(@IntRange(from = 0) int dw)", "public void setDiscoveryBeaconIntervalMillis(@IntRange(from = 1) int intervalInMs)", "public void setNumSpatialStreamsInDiscovery(@IntRange(from = 1) int spatialStreamsNum)", "public void setMacRandomizationIntervalSeconds(@IntRange(from = 1, to = 1800) int intervalSec)", "public void setDwEarlyTerminationEnabled(boolean enable)", "public int getDiscoveryWindowWakeInterval24Ghz()", "public int getDiscoveryWindowWakeInterval5Ghz()", "public int getDiscoveryWindowWakeInterval6Ghz()", "public int getDiscoveryBeaconIntervalMillis()", "public int getNumSpatialStreamsInDiscovery()", "public boolean isDwEarlyTerminationEnabled()", "public int getMacRandomizationIntervalSeconds()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public String toString()" ],
  "variableNames" : [ "UNSET_PARAMETER", "mDw24Ghz", "mDw5Ghz", "mDw6Ghz", "mDiscoveryBeaconIntervalMs", "mNumSpatialStreamsInDiscovery", "mIsDwEarlyTerminationEnabled", "mMacRandomIntervalSec", "CREATOR" ]
}