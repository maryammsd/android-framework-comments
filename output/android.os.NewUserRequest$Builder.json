{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/NewUserRequest.java",
  "packageName" : "android.os",
  "className" : "Builder",
  "comment" : "\n     * Builder for building {@link NewUserRequest}\n     ",
  "links" : [ "android.os.NewUserRequest" ],
  "variables" : [ {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAdmin",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEphemeral",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUserIcon",
    "type" : "Bitmap",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccountName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccountType",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAccountOptions",
    "type" : "PersistableBundle",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setName(@Nullable String name)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets user name.\n         *\n         * @return This object for method chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAdmin()",
    "returnType" : "Builder",
    "comment" : "\n         * Sets user as admin.\n         *\n         * <p> Admin user is with administrative privileges and such user can create\n         * and delete users.\n         *\n         * @return This object for method chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setEphemeral()",
    "returnType" : "Builder",
    "comment" : "\n         * Sets user as ephemeral.\n         *\n         * <p> Ephemeral user will be removed after leaving the foreground.\n         *\n         * @return This object for method chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUserType(@NonNull String type)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets user type.\n         *\n         * <p> Default value is {link UserManager#USER_TYPE_FULL_SECONDARY}.\n         *\n         * @return This object for method chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUserIcon(@Nullable Bitmap userIcon)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets user icon.\n         *\n         * @return This object for method chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAccountName(@Nullable String accountName)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets account name that will be used by the setup wizard to initialize the user.\n         *\n         * @see android.accounts.Account\n         * @return This object for method chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAccountType(@Nullable String accountType)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets account type for the account to be created. This is required if the account name\n         * is not null. This will be used by the setup wizard to initialize the user.\n         *\n         * @see android.accounts.Account\n         * @return This object for method chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAccountOptions(@Nullable PersistableBundle accountOptions)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets account options that can contain account-specific extra information\n         * to be used by setup wizard to initialize the account for the user.\n         *\n         * @return This object for method chaining.\n         ",
    "links" : [ ]
  }, {
    "name" : "public NewUserRequest build()",
    "returnType" : "NewUserRequest",
    "comment" : "\n         * Builds {@link NewUserRequest}\n         *\n         * @throws IllegalStateException if builder is configured with incompatible properties and\n         * it is not possible to create such user. For example - a guest admin user.\n         ",
    "links" : [ "android.os.NewUserRequest" ]
  }, {
    "name" : "private void checkIfPropertiesAreCompatible()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setName(@Nullable String name)", "public Builder setAdmin()", "public Builder setEphemeral()", "public Builder setUserType(@NonNull String type)", "public Builder setUserIcon(@Nullable Bitmap userIcon)", "public Builder setAccountName(@Nullable String accountName)", "public Builder setAccountType(@Nullable String accountType)", "public Builder setAccountOptions(@Nullable PersistableBundle accountOptions)", "public NewUserRequest build()", "private void checkIfPropertiesAreCompatible()" ],
  "variableNames" : [ "mName", "mAdmin", "mEphemeral", "mUserType", "mUserIcon", "mAccountName", "mAccountType", "mAccountOptions" ]
}