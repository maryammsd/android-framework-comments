{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/StatsLog.java",
  "packageName" : "android.util",
  "className" : "StatsLog",
  "comment" : "\n * StatsLog provides an API for developers to send events to statsd. The events can be used to\n * define custom metrics inside statsd.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "EXPERIMENT_IDS_FIELD_ID",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static boolean logStart(int label)",
    "returnType" : "boolean",
    "comment" : "\n     * Logs a start event.\n     *\n     * @param label developer-chosen label.\n     * @return True if the log request was sent to statsd.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean logStop(int label)",
    "returnType" : "boolean",
    "comment" : "\n     * Logs a stop event.\n     *\n     * @param label developer-chosen label.\n     * @return True if the log request was sent to statsd.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean logEvent(int label)",
    "returnType" : "boolean",
    "comment" : "\n     * Logs an event that does not represent a start or stop boundary.\n     *\n     * @param label developer-chosen label.\n     * @return True if the log request was sent to statsd.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean logBinaryPushStateChanged(@NonNull String trainName, long trainVersionCode, int options, int state, @NonNull long[] experimentIds)",
    "returnType" : "boolean",
    "comment" : "\n     * Logs an event for binary push for module updates.\n     *\n     * @param trainName        name of install train.\n     * @param trainVersionCode version code of the train.\n     * @param options          optional flags about this install.\n     *                         The last 3 bits indicate options:\n     *                             0x01: FLAG_REQUIRE_STAGING\n     *                             0x02: FLAG_ROLLBACK_ENABLED\n     *                             0x04: FLAG_REQUIRE_LOW_LATENCY_MONITOR\n     * @param state            current install state. Defined as State enums in\n     *                         BinaryPushStateChanged atom in\n     *                         frameworks/base/cmds/statsd/src/atoms.proto\n     * @param experimentIds    experiment ids.\n     * @return True if the log request was sent to statsd.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void writeRaw(@NonNull byte[] buffer, int size)",
    "returnType" : "void",
    "comment" : " TODO(b/144935988): Mark deprecated.",
    "links" : [ ]
  }, {
    "name" : "private static native void writeImpl(@NonNull byte[] buffer, int size, int atomId)",
    "returnType" : "void",
    "comment" : "\n     * Write an event to stats log using the raw format.\n     *\n     * @param buffer    The encoded buffer of data to write.\n     * @param size      The number of bytes from the buffer to write.\n     * @param atomId    The id of the atom to which the event belongs.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static void write(@NonNull final StatsEvent statsEvent)",
    "returnType" : "void",
    "comment" : "\n     * Write an event to stats log using the raw format encapsulated in StatsEvent.\n     * After writing to stats log, release() is called on the StatsEvent object.\n     * No further action should be taken on the StatsEvent object following this call.\n     *\n     * @param statsEvent    The StatsEvent object containing the encoded buffer of data to write.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void enforceDumpCallingPermission(Context context)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static void enforcesageStatsCallingPermission(Context context)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "DEBUG", "EXPERIMENT_IDS_FIELD_ID" ],
  "methodNames" : [ "public static boolean logStart(int label)", "public static boolean logStop(int label)", "public static boolean logEvent(int label)", "public static boolean logBinaryPushStateChanged(@NonNull String trainName, long trainVersionCode, int options, int state, @NonNull long[] experimentIds)", "public static void writeRaw(@NonNull byte[] buffer, int size)", "private static native void writeImpl(@NonNull byte[] buffer, int size, int atomId)", "public static void write(@NonNull final StatsEvent statsEvent)", "private static void enforceDumpCallingPermission(Context context)", "private static void enforcesageStatsCallingPermission(Context context)" ]
}