{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/text/method/BaseMovementMethod.java",
  "packageName" : "android.text.method",
  "className" : "BaseMovementMethod",
  "comment" : "\n * Base classes for movement methods.\n ",
  "variables" : [ ],
  "methods" : [ {
    "name" : "public boolean canSelectArbitrarily()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void initialize(TextView widget, Spannable text)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyDown(TextView widget, Spannable text, int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyOther(TextView widget, Spannable text, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onKeyUp(TextView widget, Spannable text, int keyCode, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onTakeFocus(TextView widget, Spannable text, int direction)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTouchEvent(TextView widget, Spannable text, MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTrackballEvent(TextView widget, Spannable text, MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onGenericMotionEvent(TextView widget, Spannable text, MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int getMovementMetaState(Spannable buffer, KeyEvent event)",
    "returnType" : "int",
    "comment" : "\n     * Gets the meta state used for movement using the modifiers tracked by the text\n     * buffer as well as those present in the key event.\n     *\n     * The movement meta state excludes the state of locked modifiers or the SHIFT key\n     * since they are not used by movement actions (but they may be used for selection).\n     *\n     * @param buffer The text buffer.\n     * @param event The key event.\n     * @return The keyboard meta states used for movement.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean handleMovementKey(TextView widget, Spannable buffer, int keyCode, int movementMetaState, KeyEvent event)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a movement key action.\n     * The default implementation decodes the key down and invokes movement actions\n     * such as {@link #down} and {@link #up}.\n     * {@link #onKeyDown(TextView, Spannable, int, KeyEvent)} calls this method once\n     * to handle an {@link KeyEvent#ACTION_DOWN}.\n     * {@link #onKeyOther(TextView, Spannable, KeyEvent)} calls this method repeatedly\n     * to handle each repetition of an {@link KeyEvent#ACTION_MULTIPLE}.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @param event The key event.\n     * @param keyCode The key code.\n     * @param movementMetaState The keyboard meta states used for movement.\n     * @param event The key event.\n     * @return True if the event was handled.\n     ",
    "links" : [ "#down", "#up", "#onKeyDown", "KeyEvent#ACTION_DOWN", "#onKeyOther", "KeyEvent#ACTION_MULTIPLE" ]
  }, {
    "name" : "protected boolean left(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a left movement action.\n     * Moves the cursor or scrolls left by one character.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean right(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a right movement action.\n     * Moves the cursor or scrolls right by one character.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean up(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs an up movement action.\n     * Moves the cursor or scrolls up by one line.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean down(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a down movement action.\n     * Moves the cursor or scrolls down by one line.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean pageUp(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a page-up movement action.\n     * Moves the cursor or scrolls up by one page.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean pageDown(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a page-down movement action.\n     * Moves the cursor or scrolls down by one page.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean top(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a top movement action.\n     * Moves the cursor or scrolls to the top of the buffer.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean bottom(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a bottom movement action.\n     * Moves the cursor or scrolls to the bottom of the buffer.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean lineStart(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a line-start movement action.\n     * Moves the cursor or scrolls to the start of the line.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean lineEnd(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a line-end movement action.\n     * Moves the cursor or scrolls to the end of the line.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean leftWord(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "protected boolean rightWord(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : " {@hide} ",
    "links" : [ ]
  }, {
    "name" : "protected boolean home(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a home movement action.\n     * Moves the cursor or scrolls to the start of the line or to the top of the\n     * document depending on whether the insertion point is being moved or\n     * the document is being scrolled.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean end(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs an end movement action.\n     * Moves the cursor or scrolls to the start of the line or to the top of the\n     * document depending on whether the insertion point is being moved or\n     * the document is being scrolled.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     ",
    "links" : [ ]
  }, {
    "name" : "private int getTopLine(TextView widget)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getBottomLine(TextView widget)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getInnerWidth(TextView widget)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getInnerHeight(TextView widget)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getCharacterWidth(TextView widget)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getScrollBoundsLeft(TextView widget)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int getScrollBoundsRight(TextView widget)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollLeft(TextView widget, Spannable buffer, int amount)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll left action.\n     * Scrolls left by the specified number of characters.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @param amount The number of characters to scroll by.  Must be at least 1.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollRight(TextView widget, Spannable buffer, int amount)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll right action.\n     * Scrolls right by the specified number of characters.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @param amount The number of characters to scroll by.  Must be at least 1.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollUp(TextView widget, Spannable buffer, int amount)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll up action.\n     * Scrolls up by the specified number of lines.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @param amount The number of lines to scroll by.  Must be at least 1.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollDown(TextView widget, Spannable buffer, int amount)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll down action.\n     * Scrolls down by the specified number of lines.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @param amount The number of lines to scroll by.  Must be at least 1.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollPageUp(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll page up action.\n     * Scrolls up by one page.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollPageDown(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll page up action.\n     * Scrolls down by one page.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollTop(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll to top action.\n     * Scrolls to the top of the document.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollBottom(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll to bottom action.\n     * Scrolls to the bottom of the document.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollLineStart(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll to line start action.\n     * Scrolls to the start of the line.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected boolean scrollLineEnd(TextView widget, Spannable buffer)",
    "returnType" : "boolean",
    "comment" : "\n     * Performs a scroll to line end action.\n     * Scrolls to the end of the line.\n     *\n     * @param widget The text view.\n     * @param buffer The text buffer.\n     * @return True if the event was handled.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ ],
  "methodNames" : [ "public boolean canSelectArbitrarily()", "public void initialize(TextView widget, Spannable text)", "public boolean onKeyDown(TextView widget, Spannable text, int keyCode, KeyEvent event)", "public boolean onKeyOther(TextView widget, Spannable text, KeyEvent event)", "public boolean onKeyUp(TextView widget, Spannable text, int keyCode, KeyEvent event)", "public void onTakeFocus(TextView widget, Spannable text, int direction)", "public boolean onTouchEvent(TextView widget, Spannable text, MotionEvent event)", "public boolean onTrackballEvent(TextView widget, Spannable text, MotionEvent event)", "public boolean onGenericMotionEvent(TextView widget, Spannable text, MotionEvent event)", "protected int getMovementMetaState(Spannable buffer, KeyEvent event)", "protected boolean handleMovementKey(TextView widget, Spannable buffer, int keyCode, int movementMetaState, KeyEvent event)", "protected boolean left(TextView widget, Spannable buffer)", "protected boolean right(TextView widget, Spannable buffer)", "protected boolean up(TextView widget, Spannable buffer)", "protected boolean down(TextView widget, Spannable buffer)", "protected boolean pageUp(TextView widget, Spannable buffer)", "protected boolean pageDown(TextView widget, Spannable buffer)", "protected boolean top(TextView widget, Spannable buffer)", "protected boolean bottom(TextView widget, Spannable buffer)", "protected boolean lineStart(TextView widget, Spannable buffer)", "protected boolean lineEnd(TextView widget, Spannable buffer)", "protected boolean leftWord(TextView widget, Spannable buffer)", "protected boolean rightWord(TextView widget, Spannable buffer)", "protected boolean home(TextView widget, Spannable buffer)", "protected boolean end(TextView widget, Spannable buffer)", "private int getTopLine(TextView widget)", "private int getBottomLine(TextView widget)", "private int getInnerWidth(TextView widget)", "private int getInnerHeight(TextView widget)", "private int getCharacterWidth(TextView widget)", "private int getScrollBoundsLeft(TextView widget)", "private int getScrollBoundsRight(TextView widget)", "protected boolean scrollLeft(TextView widget, Spannable buffer, int amount)", "protected boolean scrollRight(TextView widget, Spannable buffer, int amount)", "protected boolean scrollUp(TextView widget, Spannable buffer, int amount)", "protected boolean scrollDown(TextView widget, Spannable buffer, int amount)", "protected boolean scrollPageUp(TextView widget, Spannable buffer)", "protected boolean scrollPageDown(TextView widget, Spannable buffer)", "protected boolean scrollTop(TextView widget, Spannable buffer)", "protected boolean scrollBottom(TextView widget, Spannable buffer)", "protected boolean scrollLineStart(TextView widget, Spannable buffer)", "protected boolean scrollLineEnd(TextView widget, Spannable buffer)" ]
}