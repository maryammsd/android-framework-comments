{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/nl80211/PnoSettings.java",
  "packageName" : "android.net.wifi.nl80211",
  "className" : "PnoSettings",
  "comment" : "\n * Configuration for a PNO (preferred network offload). A mechanism by which scans are offloaded\n * from the host device to the Wi-Fi chip.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mIntervalMs",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMin2gRssi",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMin5gRssi",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMin6gRssi",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScanIterations",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mScanIntervalMultiplier",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPnoNetworks",
    "type" : "List<PnoNetwork>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<PnoSettings>",
    "comment" : " implement Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public long getIntervalMillis()",
    "returnType" : "long",
    "comment" : "\n     * Get the requested PNO scan interval in milliseconds.\n     *\n     * @return An interval in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIntervalMillis(@DurationMillisLong long intervalMillis)",
    "returnType" : "void",
    "comment" : "\n     * Set the requested PNO scan interval in milliseconds.\n     *\n     * @param intervalMillis An interval in milliseconds.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMin2gRssiDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the requested minimum RSSI threshold (in dBm) for APs to report in scan results in the\n     * 2.4GHz band.\n     *\n     * @return An RSSI value in dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMin2gRssiDbm(int min2gRssiDbm)",
    "returnType" : "void",
    "comment" : "\n     * Set the requested minimum RSSI threshold (in dBm) for APs to report in scan scan results in\n     * the 2.4GHz band.\n     *\n     * @param min2gRssiDbm An RSSI value in dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMin5gRssiDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the requested minimum RSSI threshold (in dBm) for APs to report in scan results in the\n     * 5GHz band.\n     *\n     * @return An RSSI value in dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMin5gRssiDbm(int min5gRssiDbm)",
    "returnType" : "void",
    "comment" : "\n     * Set the requested minimum RSSI threshold (in dBm) for APs to report in scan scan results in\n     * the 5GHz band.\n     *\n     * @param min5gRssiDbm An RSSI value in dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMin6gRssiDbm()",
    "returnType" : "int",
    "comment" : "\n     * Get the requested minimum RSSI threshold (in dBm) for APs to report in scan results in the\n     * 6GHz band.\n     *\n     * @return An RSSI value in dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMin6gRssiDbm(int min6gRssiDbm)",
    "returnType" : "void",
    "comment" : "\n     * Set the requested minimum RSSI threshold (in dBm) for APs to report in scan scan results in\n     * the 6GHz band.\n     *\n     * @param min6gRssiDbm An RSSI value in dBm.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getScanIterations()",
    "returnType" : "int",
    "comment" : "\n     * Get the requested PNO scan iterations.\n     *\n     * @return PNO scan iterations.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setScanIterations(int scanIterations)",
    "returnType" : "void",
    "comment" : "\n     * Set the requested PNO scan iterations.\n     *\n     * @param scanIterations the PNO scan iterations.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getScanIntervalMultiplier()",
    "returnType" : "int",
    "comment" : "\n     * Get the requested PNO scan interval multiplier.\n     *\n     * @return PNO scan interval multiplier.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setScanIntervalMultiplier(int scanIntervalMultiplier)",
    "returnType" : "void",
    "comment" : "\n     * Set the requested PNO scan interval multiplier.\n     *\n     * @param scanIntervalMultiplier the PNO scan interval multiplier.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<PnoNetwork> getPnoNetworks()",
    "returnType" : "List<PnoNetwork>",
    "comment" : "\n     * Return the configured list of specific networks to search for in a PNO scan.\n     *\n     * @return A list of {@link PnoNetwork} objects, possibly empty if non configured.\n     ",
    "links" : [ "android.net.wifi.nl80211.PnoNetwork" ]
  }, {
    "name" : "public void setPnoNetworks(@NonNull List<PnoNetwork> pnoNetworks)",
    "returnType" : "void",
    "comment" : "\n     * Set the list of specified networks to scan for in a PNO scan. The networks (APs) are\n     * specified using {@link PnoNetwork}s. An empty list indicates that all networks are scanned\n     * for.\n     *\n     * @param pnoNetworks A (possibly empty) list of {@link PnoNetwork} objects.\n     ",
    "links" : [ "android.net.wifi.nl80211.PnoNetwork" ]
  }, {
    "name" : "public boolean equals(Object rhs)",
    "returnType" : "boolean",
    "comment" : " override comparator ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : " override hash code ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " implement Parcelable interface ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "\n     * implement Parcelable interface\n     * |flag| is ignored.\n     *",
    "links" : [ ]
  } ],
  "methodNames" : [ "public long getIntervalMillis()", "public void setIntervalMillis(@DurationMillisLong long intervalMillis)", "public int getMin2gRssiDbm()", "public void setMin2gRssiDbm(int min2gRssiDbm)", "public int getMin5gRssiDbm()", "public void setMin5gRssiDbm(int min5gRssiDbm)", "public int getMin6gRssiDbm()", "public void setMin6gRssiDbm(int min6gRssiDbm)", "public int getScanIterations()", "public void setScanIterations(int scanIterations)", "public int getScanIntervalMultiplier()", "public void setScanIntervalMultiplier(int scanIntervalMultiplier)", "public List<PnoNetwork> getPnoNetworks()", "public void setPnoNetworks(@NonNull List<PnoNetwork> pnoNetworks)", "public boolean equals(Object rhs)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel out, int flags)" ],
  "variableNames" : [ "mIntervalMs", "mMin2gRssi", "mMin5gRssi", "mMin6gRssi", "mScanIterations", "mScanIntervalMultiplier", "mPnoNetworks", "CREATOR" ]
}