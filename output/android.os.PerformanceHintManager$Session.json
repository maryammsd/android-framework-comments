{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/PerformanceHintManager.java",
  "packageName" : "android.os",
  "className" : "Session",
  "comment" : "\n     * A Session represents a group of threads with an inter-related workload such that hints for\n     * their performance should be considered as a unit. The threads in a given session should be\n     * long-lived and not created or destroyed dynamically.\n     *\n     * The work duration API can be used with periodic workloads to dynamically adjust thread\n     * performance and keep the work on schedule while optimizing the available power budget.\n     * When using the work duration API, the starting target duration should be specified\n     * while creating the session, but can later be adjusted with\n     * {@link #updateTargetWorkDuration(long)}. While using the work duration API, the client is be\n     * expected to call {@link #reportActualWorkDuration(long)} each cycle to report the actual\n     * time taken to complete to the system.\n     *\n     * Any call in this class will change its internal data, so you must do your own thread\n     * safety to protect from racing.\n     *\n     * All timings should be in {@link SystemClock#uptimeNanos()}.\n     ",
  "links" : [ "#reportActualWorkDuration(long)", "#updateTargetWorkDuration(long)", "android.os.SystemClock#uptimeNanos()" ],
  "variables" : [ {
    "name" : "mNativeSessionPtr",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CPU_LOAD_UP",
    "type" : "int",
    "comment" : "\n        * This hint indicates a sudden increase in CPU workload intensity. It means\n        * that this hint session needs extra CPU resources immediately to meet the\n        * target duration for the current work cycle.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "CPU_LOAD_DOWN",
    "type" : "int",
    "comment" : "\n        * This hint indicates a decrease in CPU workload intensity. It means that\n        * this hint session can reduce CPU resources and still meet the target duration.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "CPU_LOAD_RESET",
    "type" : "int",
    "comment" : "\n        * This hint indicates an upcoming CPU workload that is completely changed and\n        * unknown. It means that the hint session should reset CPU resources to a known\n        * baseline to prepare for an arbitrary load, and must wake up if inactive.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "CPU_LOAD_RESUME",
    "type" : "int",
    "comment" : "\n        * This hint indicates that the most recent CPU workload is resuming after a\n        * period of inactivity. It means that the hint session should allocate similar\n        * CPU resources to what was used previously, and must wake up if inactive.\n        *\n        * @hide\n        ",
    "links" : [ ]
  }, {
    "name" : "GPU_LOAD_UP",
    "type" : "int",
    "comment" : "\n         * This hint indicates an increase in GPU workload intensity. It means that\n         * this hint session needs extra GPU resources to meet the target duration.\n         * This hint must be sent before reporting the actual duration to the session.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GPU_LOAD_DOWN",
    "type" : "int",
    "comment" : "\n         * This hint indicates a decrease in GPU workload intensity. It means that\n         * this hint session can reduce GPU resources and still meet the target duration.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "GPU_LOAD_RESET",
    "type" : "int",
    "comment" : "\n        * This hint indicates an upcoming GPU workload that is completely changed and\n        * unknown. It means that the hint session should reset GPU resources to a known\n        * baseline to prepare for an arbitrary load, and must wake up if inactive.\n         *\n         * @hide\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void updateTargetWorkDuration(long targetDurationNanos)",
    "returnType" : "void",
    "comment" : "\n         * Updates this session's target total duration for each cycle of work.\n         *\n         * @param targetDurationNanos the new desired duration in nanoseconds\n         ",
    "links" : [ ]
  }, {
    "name" : "public void reportActualWorkDuration(long actualDurationNanos)",
    "returnType" : "void",
    "comment" : "\n         * Reports the actual duration for the last cycle of work.\n         *\n         * The system will attempt to adjust the core placement of the threads within the thread\n         * group and/or the frequency of the core on which they are run to bring the actual duration\n         * close to the target duration.\n         *\n         * @param actualDurationNanos how long the thread group took to complete its last task in\n         *     nanoseconds\n         ",
    "links" : [ ]
  }, {
    "name" : "public void close()",
    "returnType" : "void",
    "comment" : "\n         * Ends the current hint session.\n         *\n         * Once called, you should not call anything else on this object.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void sendHint(@Hint int hint)",
    "returnType" : "void",
    "comment" : "\n         * Sends performance hints to inform the hint session of changes in the workload.\n         *\n         * @param hint The hint to send to the session\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setPreferPowerEfficiency(boolean enabled)",
    "returnType" : "void",
    "comment" : "\n         * This tells the session that these threads can be\n         * safely scheduled to prefer power efficiency over performance.\n         *\n         * @param enabled The flag that sets whether this session uses power-efficient scheduling.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void setThreads(@NonNull int[] tids)",
    "returnType" : "void",
    "comment" : "\n         * Set a list of threads to the performance hint session. This operation will replace\n         * the current list of threads with the given list of threads.\n         * Note that this is not an oneway method.\n         *\n         * @param tids The list of threads to be associated with this session. They must be\n         *     part of this app's thread group\n         *\n         * @throws IllegalStateException if the hint session is not in the foreground\n         * @throws IllegalArgumentException if the thread id list is empty\n         * @throws SecurityException if any thread id doesn't belong to the application\n         ",
    "links" : [ ]
  }, {
    "name" : "public int[] getThreadIds()",
    "returnType" : "int[]",
    "comment" : "\n         * Returns the list of thread ids.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public void reportActualWorkDuration(@NonNull WorkDuration workDuration)",
    "returnType" : "void",
    "comment" : "\n         * Reports the work duration for the last cycle of work.\n         *\n         * The system will attempt to adjust the core placement of the threads within the thread\n         * group and/or the frequency of the core on which they are run to bring the actual duration\n         * close to the target duration.\n         *\n         * @param workDuration the work duration of each component.\n         * @throws IllegalArgumentException if\n         * the work period start timestamp or the total duration are less than or equal to zero,\n         * if either the actual CPU duration or actual GPU duration is less than zero,\n         * or if both the CPU and GPU durations are zero.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected void finalize() throws Throwable", "public void updateTargetWorkDuration(long targetDurationNanos)", "public void reportActualWorkDuration(long actualDurationNanos)", "public void close()", "public void sendHint(@Hint int hint)", "public void setPreferPowerEfficiency(boolean enabled)", "public void setThreads(@NonNull int[] tids)", "public int[] getThreadIds()", "public void reportActualWorkDuration(@NonNull WorkDuration workDuration)" ],
  "variableNames" : [ "mNativeSessionPtr", "CPU_LOAD_UP", "CPU_LOAD_DOWN", "CPU_LOAD_RESET", "CPU_LOAD_RESUME", "GPU_LOAD_UP", "GPU_LOAD_DOWN", "GPU_LOAD_RESET" ]
}