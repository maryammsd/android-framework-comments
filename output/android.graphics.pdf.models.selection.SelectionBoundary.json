{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/graphics/pdf/models/selection/SelectionBoundary.java",
  "packageName" : "android.graphics.pdf.models.selection",
  "className" : "SelectionBoundary",
  "comment" : "\n * Represents one edge of the selected content.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "CREATOR",
    "type" : "Creator<SelectionBoundary>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPoint",
    "type" : "Point",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIsRtl",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getIndex()",
    "returnType" : "int",
    "comment" : "\n     * Gets the index of the text as determined by the text stream processed. If the value is -1\n     * then the {@link #getPoint()} will determine the selection boundary.\n     *\n     * @return index of the selection boundary.\n     ",
    "links" : [ "#getPoint()" ]
  }, {
    "name" : "public Point getPoint()",
    "returnType" : "Point",
    "comment" : "\n     * Gets the x, y coordinates of the selection boundary in points (1/72\"). These coordinates are\n     * represented by a {@link Point} . If the value is {@code null} then the {@link #getIndex()}\n     * will determine the selection boundary.\n     * <p><strong>Note:</strong> Point (0,0) represents the top-left corner of the page\n     *\n     * @return The point of the selection boundary.\n     ",
    "links" : [ "#getIndex()", "android.graphics.Point" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@androidx.annotation.NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean getIsRtl()",
    "returnType" : "boolean",
    "comment" : "\n     * Gets whether the direction of selection is right-to-left (rtl) or reverse. The value of isRtl\n     * is determined by the underlying native layer using the start and stop boundaries.\n     *\n     * @return The direction of selection\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getIndex()", "public Point getPoint()", "public int describeContents()", "public void writeToParcel(@androidx.annotation.NonNull Parcel dest, int flags)", "public boolean getIsRtl()" ],
  "variableNames" : [ "CREATOR", "mIndex", "mPoint", "mIsRtl" ]
}