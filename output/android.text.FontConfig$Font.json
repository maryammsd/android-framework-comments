{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/FontConfig.java",
  "packageName" : "android.text",
  "className" : "Font",
  "comment" : "\n     * Represents single font entry in system font configuration.\n     *\n     * A font is the most primitive unit of drawing character shapes. A font in system configuration\n     * is always referring a single OpenType compliant regular file in the file system.\n     *\n     * @see android.graphics.fonts.Font\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mFile",
    "type" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOriginalFile",
    "type" : "File",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPostScriptName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStyle",
    "type" : "FontStyle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIndex",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFontVariationSettings",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFontFamilyName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVarTypeAxes",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "VAR_TYPE_AXES_NONE",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "VAR_TYPE_AXES_WGHT",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "VAR_TYPE_AXES_ITAL",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<Font>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public File getFile()",
    "returnType" : "File",
    "comment" : "\n         * Returns the font file.\n         ",
    "links" : [ ]
  }, {
    "name" : "public File getOriginalFile()",
    "returnType" : "File",
    "comment" : "\n         * Returns the original font file in the system directory.\n         *\n         * If the font file is not updated, returns null.\n         *\n         * @return returns the original font file in the system if the font file is updated. Returns\n         *         null if the font file is not updated.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public FontStyle getStyle()",
    "returnType" : "FontStyle",
    "comment" : "\n         * Returns the font style.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getFontVariationSettings()",
    "returnType" : "String",
    "comment" : "\n         * Return a font variation settings.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getFontFamilyName()",
    "returnType" : "String",
    "comment" : "\n         * A {@link Font} can be configured to be in the {@code Fallback List} for a\n         * {@link FontFamily}.\n         *\n         * For example a serif Hebrew [Font] can be defined in the {@code Fallback List} for\n         * {@code \"serif\"} {@link FontFamily}.\n         *\n         * If the return value is not {@code null}, then the font will be used in the\n         * {@code Fallback List} of that {@link FontFamily}.\n         *\n         * If the return value is {@code null}, then the font will be used in {@code Fallback List}\n         * of all {@link FontFamily}s.\n         ",
    "links" : [ "FontFamily", "Font" ]
  }, {
    "name" : "public int getTtcIndex()",
    "returnType" : "int",
    "comment" : "\n         * Returns the index to be used to access this font when accessing a TTC file.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String getPostScriptName()",
    "returnType" : "String",
    "comment" : "\n         * Returns the PostScript name of this font.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getVarTypeAxes()",
    "returnType" : "int",
    "comment" : "\n         * Returns the list of supported axes tags for variable family type resolution.\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public FontVariationAxis[] getAxes()",
    "returnType" : "FontVariationAxis[]",
    "comment" : "\n         * Returns the list of axes associated to this font.\n         * @deprecated Use getFontVariationSettings\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getWeight()",
    "returnType" : "int",
    "comment" : "\n         * Returns the weight value for this font.\n         * @deprecated Use getStyle instead.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isItalic()",
    "returnType" : "boolean",
    "comment" : "\n         * Returns whether this font is italic.\n         * @deprecated Use getStyle instead.\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public File getFile()", "public File getOriginalFile()", "public FontStyle getStyle()", "public String getFontVariationSettings()", "public String getFontFamilyName()", "public int getTtcIndex()", "public String getPostScriptName()", "public int getVarTypeAxes()", "public FontVariationAxis[] getAxes()", "public int getWeight()", "public boolean isItalic()", "public boolean equals(Object o)", "public int hashCode()", "public String toString()" ],
  "variableNames" : [ "mFile", "mOriginalFile", "mPostScriptName", "mStyle", "mIndex", "mFontVariationSettings", "mFontFamilyName", "mVarTypeAxes", "VAR_TYPE_AXES_NONE", "VAR_TYPE_AXES_WGHT", "VAR_TYPE_AXES_ITAL", "CREATOR" ]
}