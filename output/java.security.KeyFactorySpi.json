{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/security/KeyFactorySpi.java",
  "packageName" : "java.security",
  "className" : "KeyFactorySpi",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "protected abstract PublicKey engineGeneratePublic(KeySpec keySpec) throws InvalidKeySpecException",
    "returnType" : "PublicKey",
    "comment" : "\n     * Generates a public key object from the provided key\n     * specification (key material).\n     *\n     * @param keySpec the specification (key material) of the public key.\n     *\n     * @return the public key.\n     *\n     * @exception InvalidKeySpecException if the given key specification\n     * is inappropriate for this key factory to produce a public key.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract PrivateKey engineGeneratePrivate(KeySpec keySpec) throws InvalidKeySpecException",
    "returnType" : "PrivateKey",
    "comment" : "\n     * Generates a private key object from the provided key\n     * specification (key material).\n     *\n     * @param keySpec the specification (key material) of the private key.\n     *\n     * @return the private key.\n     *\n     * @exception InvalidKeySpecException if the given key specification\n     * is inappropriate for this key factory to produce a private key.\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract T engineGetKeySpec(Key key, Class<T> keySpec) throws InvalidKeySpecException",
    "returnType" : "T",
    "comment" : "\n     * Returns a specification (key material) of the given key\n     * object.\n     * {@code keySpec} identifies the specification class in which\n     * the key material should be returned. It could, for example, be\n     * {@code DSAPublicKeySpec.class}, to indicate that the\n     * key material should be returned in an instance of the\n     * {@code DSAPublicKeySpec} class.\n     *\n     * @param <T> the type of the key specification to be returned\n     *\n     * @param key the key.\n     *\n     * @param keySpec the specification class in which\n     * the key material should be returned.\n     *\n     * @return the underlying key specification (key material) in an instance\n     * of the requested specification class.\n\n     * @exception InvalidKeySpecException if the requested key specification is\n     * inappropriate for the given key, or the given key cannot be dealt with\n     * (e.g., the given key has an unrecognized format).\n     ",
    "links" : [ ]
  }, {
    "name" : "protected abstract Key engineTranslateKey(Key key) throws InvalidKeyException",
    "returnType" : "Key",
    "comment" : "\n     * Translates a key object, whose provider may be unknown or\n     * potentially untrusted, into a corresponding key object of this key\n     * factory.\n     *\n     * @param key the key whose provider is unknown or untrusted.\n     *\n     * @return the translated key.\n     *\n     * @exception InvalidKeyException if the given key cannot be processed\n     * by this key factory.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected abstract PublicKey engineGeneratePublic(KeySpec keySpec) throws InvalidKeySpecException", "protected abstract PrivateKey engineGeneratePrivate(KeySpec keySpec) throws InvalidKeySpecException", "protected abstract T engineGetKeySpec(Key key, Class<T> keySpec) throws InvalidKeySpecException", "protected abstract Key engineTranslateKey(Key key) throws InvalidKeyException" ],
  "variableNames" : [ ]
}