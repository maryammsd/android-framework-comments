{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/window/OnBackInvokedDispatcher.java",
  "packageName" : "android.window",
  "className" : "OnBackInvokedDispatcher",
  "comment" : "\n * Dispatcher to register {@link OnBackInvokedCallback} instances for handling\n * back invocations.\n *\n * It also provides interfaces to update the attributes of {@link OnBackInvokedCallback}.\n * Attribute updates are proactively pushed to the window manager if they change the dispatch\n * target (a.k.a. the callback to be invoked next), or its behavior.\n ",
  "links" : [ "android.window.OnBackInvokedCallback" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "PRIORITY_OVERLAY",
    "type" : "int",
    "comment" : "\n     * Priority level of {@link OnBackInvokedCallback}s for overlays such as menus and\n     * navigation drawers that should receive back dispatch before non-overlays.\n     ",
    "links" : [ "android.window.OnBackInvokedCallback" ]
  }, {
    "name" : "PRIORITY_DEFAULT",
    "type" : "int",
    "comment" : "\n     * Default priority level of {@link OnBackInvokedCallback}s.\n     ",
    "links" : [ "android.window.OnBackInvokedCallback" ]
  }, {
    "name" : "PRIORITY_SYSTEM",
    "type" : "int",
    "comment" : "\n     * Priority level of {@link OnBackInvokedCallback}s registered by the system.\n     *\n     * System back animation will play when the callback to receive dispatch has this priority.\n     * @hide\n     ",
    "links" : [ "android.window.OnBackInvokedCallback" ]
  } ],
  "methods" : [ {
    "name" : " void registerOnBackInvokedCallback(@Priority @IntRange(from = 0) int priority, @NonNull OnBackInvokedCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Registers a {@link OnBackInvokedCallback}.\n     *\n     * Within the same priority level, callbacks are invoked in the reverse order in which\n     * they are registered. Higher priority callbacks are invoked before lower priority ones.\n     *\n     * @param priority The priority of the callback.\n     * @param callback The callback to be registered. If the callback instance has been already\n     *                 registered, the existing instance (no matter its priority) will be\n     *                 unregistered and registered again.\n     * @throws {@link IllegalArgumentException} if the priority is negative.\n     ",
    "links" : [ "android.window.OnBackInvokedCallback", "IllegalArgumentException" ]
  }, {
    "name" : " void unregisterOnBackInvokedCallback(@NonNull OnBackInvokedCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Unregisters a {@link OnBackInvokedCallback}.\n     *\n     * @param callback The callback to be unregistered. Does nothing if the callback has not been\n     *                 registered.\n     ",
    "links" : [ "android.window.OnBackInvokedCallback" ]
  }, {
    "name" : " void registerSystemOnBackInvokedCallback(@NonNull OnBackInvokedCallback callback)",
    "returnType" : "void",
    "comment" : "\n     * Registers a {@link OnBackInvokedCallback} with system priority.\n     * @hide\n     ",
    "links" : [ "android.window.OnBackInvokedCallback" ]
  }, {
    "name" : " void setImeOnBackInvokedDispatcher(@NonNull ImeOnBackInvokedDispatcher imeDispatcher)",
    "returnType" : "void",
    "comment" : "\n     * Sets an {@link ImeOnBackInvokedDispatcher} to forward {@link OnBackInvokedCallback}s\n     * from IME to the app process to be registered on the app window.\n     *\n     * Only call this on the IME window. Create the {@link ImeOnBackInvokedDispatcher} from\n     * the application process and override\n     * {@link ImeOnBackInvokedDispatcher#getReceivingDispatcher()} to point to the app\n     * window's {@link WindowOnBackInvokedDispatcher}.\n     *\n     * @hide\n     ",
    "links" : [ "android.window.ImeOnBackInvokedDispatcher#getReceivingDispatcher()", "android.window.OnBackInvokedCallback", "android.window.WindowOnBackInvokedDispatcher", "android.window.ImeOnBackInvokedDispatcher" ]
  } ],
  "methodNames" : [ " void registerOnBackInvokedCallback(@Priority @IntRange(from = 0) int priority, @NonNull OnBackInvokedCallback callback)", " void unregisterOnBackInvokedCallback(@NonNull OnBackInvokedCallback callback)", " void registerSystemOnBackInvokedCallback(@NonNull OnBackInvokedCallback callback)", " void setImeOnBackInvokedDispatcher(@NonNull ImeOnBackInvokedDispatcher imeDispatcher)" ],
  "variableNames" : [ "TAG", "DEBUG", "PRIORITY_OVERLAY", "PRIORITY_DEFAULT", "PRIORITY_SYSTEM" ]
}