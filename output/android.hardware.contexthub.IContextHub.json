{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/contexthub/IContextHub.java",
  "packageName" : "android.hardware.contexthub",
  "className" : "IContextHub",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "VERSION",
    "type" : "int",
    "comment" : "\n   * The version of this interface that the caller is built against.\n   * This might be different from what {@link #getInterfaceVersion()\n   * getInterfaceVersion} returns as that is the version of the interface\n   * that the remote object is implementing.\n   ",
    "links" : [ "#getInterfaceVersion()" ]
  }, {
    "name" : "HASH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "EX_CONTEXT_HUB_UNSPECIFIED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public java.util.List<android.hardware.contexthub.ContextHubInfo> getContextHubs() throws android.os.RemoteException",
    "returnType" : "java.util.List<android.hardware.contexthub.ContextHubInfo>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void loadNanoapp(int contextHubId, android.hardware.contexthub.NanoappBinary appBinary, int transactionId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void unloadNanoapp(int contextHubId, long appId, int transactionId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void disableNanoapp(int contextHubId, long appId, int transactionId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void enableNanoapp(int contextHubId, long appId, int transactionId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onSettingChanged(byte setting, boolean enabled) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void queryNanoapps(int contextHubId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void registerCallback(int contextHubId, android.hardware.contexthub.IContextHubCallback cb) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendMessageToHub(int contextHubId, android.hardware.contexthub.ContextHubMessage message) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onHostEndpointConnected(android.hardware.contexthub.HostEndpointInfo hostEndpointInfo) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onHostEndpointDisconnected(char hostEndpointId) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public long[] getPreloadedNanoappIds(int contextHubId) throws android.os.RemoteException",
    "returnType" : "long[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onNanSessionStateChanged(android.hardware.contexthub.NanSessionStateUpdate update) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void setTestMode(boolean enable) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendMessageDeliveryStatusToHub(int contextHubId, android.hardware.contexthub.MessageDeliveryStatus messageDeliveryStatus) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceVersion() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getInterfaceHash() throws android.os.RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public java.util.List<android.hardware.contexthub.ContextHubInfo> getContextHubs() throws android.os.RemoteException", "public void loadNanoapp(int contextHubId, android.hardware.contexthub.NanoappBinary appBinary, int transactionId) throws android.os.RemoteException", "public void unloadNanoapp(int contextHubId, long appId, int transactionId) throws android.os.RemoteException", "public void disableNanoapp(int contextHubId, long appId, int transactionId) throws android.os.RemoteException", "public void enableNanoapp(int contextHubId, long appId, int transactionId) throws android.os.RemoteException", "public void onSettingChanged(byte setting, boolean enabled) throws android.os.RemoteException", "public void queryNanoapps(int contextHubId) throws android.os.RemoteException", "public void registerCallback(int contextHubId, android.hardware.contexthub.IContextHubCallback cb) throws android.os.RemoteException", "public void sendMessageToHub(int contextHubId, android.hardware.contexthub.ContextHubMessage message) throws android.os.RemoteException", "public void onHostEndpointConnected(android.hardware.contexthub.HostEndpointInfo hostEndpointInfo) throws android.os.RemoteException", "public void onHostEndpointDisconnected(char hostEndpointId) throws android.os.RemoteException", "public long[] getPreloadedNanoappIds(int contextHubId) throws android.os.RemoteException", "public void onNanSessionStateChanged(android.hardware.contexthub.NanSessionStateUpdate update) throws android.os.RemoteException", "public void setTestMode(boolean enable) throws android.os.RemoteException", "public void sendMessageDeliveryStatusToHub(int contextHubId, android.hardware.contexthub.MessageDeliveryStatus messageDeliveryStatus) throws android.os.RemoteException", "public int getInterfaceVersion() throws android.os.RemoteException", "public String getInterfaceHash() throws android.os.RemoteException" ],
  "variableNames" : [ "VERSION", "HASH", "DESCRIPTOR", "EX_CONTEXT_HUB_UNSPECIFIED" ]
}