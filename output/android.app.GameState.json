{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/GameState.java",
  "packageName" : "android.app",
  "className" : "GameState",
  "comment" : "\n * State of the game passed to the GameManager.\n *\n * This includes a top-level state for the game (indicating if the game can be interrupted without\n * interfering with content that can't be paused). Since content can be loaded in any state, it\n * includes an independent boolean flag to indicate loading status.\n *\n * Free-form metadata (as a Bundle) and a string description can also be specified by the\n * application.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "MODE_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Default Game mode is unknown.\n     ",
    "links" : [ ]
  }, {
    "name" : "MODE_NONE",
    "type" : "int",
    "comment" : "\n     * No mode means that the game is not in active play, for example the user is using the game\n     * menu.\n     ",
    "links" : [ ]
  }, {
    "name" : "MODE_GAMEPLAY_INTERRUPTIBLE",
    "type" : "int",
    "comment" : "\n     * Indicates if the game is in active, but interruptible, game play.\n     ",
    "links" : [ ]
  }, {
    "name" : "MODE_GAMEPLAY_UNINTERRUPTIBLE",
    "type" : "int",
    "comment" : "\n     * Indicates if the game is in active user play mode, which is real time and cannot be\n     *  interrupted.\n     ",
    "links" : [ ]
  }, {
    "name" : "MODE_CONTENT",
    "type" : "int",
    "comment" : "\n     * Indicates that the current content shown is not gameplay related. For example it can be an\n     * ad, a web page, a text, or a video.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<GameState>",
    "comment" : "\n     * Implement the parcelable interface.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsLoading",
    "type" : "boolean",
    "comment" : " background.",
    "links" : [ ]
  }, {
    "name" : "mMode",
    "type" : "int",
    "comment" : " One of the states listed above.",
    "links" : [ ]
  }, {
    "name" : "mLabel",
    "type" : "int",
    "comment" : " A developer-supplied enum, e.g. to indicate level or scene.",
    "links" : [ ]
  }, {
    "name" : "mQuality",
    "type" : "int",
    "comment" : " The developer-supplied enum, e.g. to indicate the current quality level.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isLoading()",
    "returnType" : "boolean",
    "comment" : "\n     * @return If the game is loading assets/resources/compiling/etc.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMode()",
    "returnType" : "int",
    "comment" : "\n     * @return The game state mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getLabel()",
    "returnType" : "int",
    "comment" : "\n     * @return The developer-supplied enum, e.g. to indicate level or scene. The default value (if\n     * not supplied) is -1.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getQuality()",
    "returnType" : "int",
    "comment" : "\n     * @return The developer-supplied enum, e.g. to indicate the current quality level. The default\n     * value (if not suplied) is -1.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isLoading()", "public int getMode()", "public int getLabel()", "public int getQuality()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel parcel, int flags)" ],
  "variableNames" : [ "MODE_UNKNOWN", "MODE_NONE", "MODE_GAMEPLAY_INTERRUPTIBLE", "MODE_GAMEPLAY_UNINTERRUPTIBLE", "MODE_CONTENT", "CREATOR", "mIsLoading", "mMode", "mLabel", "mQuality" ]
}