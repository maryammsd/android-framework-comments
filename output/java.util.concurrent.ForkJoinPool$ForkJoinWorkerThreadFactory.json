{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/ForkJoinPool.java",
  "packageName" : "java.util.concurrent",
  "className" : "ForkJoinWorkerThreadFactory",
  "comment" : "\n     * Factory for creating new {@link ForkJoinWorkerThread}s.\n     * A {@code ForkJoinWorkerThreadFactory} must be defined and used\n     * for {@code ForkJoinWorkerThread} subclasses that extend base\n     * functionality or initialize threads with different contexts.\n     ",
  "links" : [ "java.util.concurrent.ForkJoinWorkerThread" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public ForkJoinWorkerThread newThread(ForkJoinPool pool)",
    "returnType" : "ForkJoinWorkerThread",
    "comment" : "\n         * Returns a new worker thread operating in the given pool.\n         * Returning null or throwing an exception may result in tasks\n         * never being executed.  If this method throws an exception,\n         * it is relayed to the caller of the method (for example\n         * {@code execute}) causing attempted thread creation. If this\n         * method returns null or throws an exception, it is not\n         * retried until the next attempted creation (for example\n         * another call to {@code execute}).\n         *\n         * @param pool the pool this thread works in\n         * @return the new worker thread, or {@code null} if the request\n         *         to create a thread is rejected\n         * @throws NullPointerException if the pool is null\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ForkJoinWorkerThread newThread(ForkJoinPool pool)" ],
  "variableNames" : [ ]
}