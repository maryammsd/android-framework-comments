{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/webkit/WebViewFactory.java",
  "packageName" : "android.webkit",
  "className" : "WebViewFactory",
  "comment" : "\n * Top level factory, used creating all the main WebView implementation classes.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "CHROMIUM_WEBVIEW_FACTORY",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "CHROMIUM_WEBVIEW_FACTORY_METHOD",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOGTAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sProviderInstance",
    "type" : "WebViewFactoryProvider",
    "comment" : " same provider.",
    "links" : [ ]
  }, {
    "name" : "sProviderLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sPackageInfo",
    "type" : "PackageInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sWebViewSupported",
    "type" : "Boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sWebViewDisabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sDataDirectorySuffix",
    "type" : "String",
    "comment" : " stored here so it can be set without loading WV",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_SUCCESS",
    "type" : "int",
    "comment" : " Error codes for loadWebViewNativeLibraryFromPackage",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_WRONG_PACKAGE_NAME",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_ADDRESS_SPACE_NOT_RESERVED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_FAILED_WAITING_FOR_RELRO",
    "type" : "int",
    "comment" : " error codes for waiting for WebView preparation",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_FAILED_LISTING_WEBVIEW_PACKAGES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_FAILED_TO_OPEN_RELRO_FILE",
    "type" : "int",
    "comment" : " native relro loading error codes",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_FAILED_TO_LOAD_LIBRARY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_FAILED_JNI_CALL",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_FAILED_WAITING_FOR_WEBVIEW_REASON_UNKNOWN",
    "type" : "int",
    "comment" : " more error codes for waiting for WebView preparation",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_FAILED_TO_FIND_NAMESPACE",
    "type" : "int",
    "comment" : " error for namespace lookup",
    "links" : [ ]
  }, {
    "name" : "LIBLOAD_FAILED_OTHER",
    "type" : "int",
    "comment" : " generic error for future use",
    "links" : [ ]
  }, {
    "name" : "sTimestamps",
    "type" : "StartupTimestamps",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "WEBVIEW_UPDATE_SERVICE_NAME",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static StartupTimestamps getStartupTimestamps()",
    "returnType" : "StartupTimestamps",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static String getWebViewPreparationErrorReason(int error)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isWebViewSupported()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static void disableWebView()",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : " static void setDataDirectorySuffix(String suffix)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : " static String getDataDirectorySuffix()",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getWebViewLibrary(ApplicationInfo ai)",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static PackageInfo getLoadedPackageInfo()",
    "returnType" : "PackageInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static Class<WebViewFactoryProvider> getWebViewProviderClass(ClassLoader clazzLoader) throws ClassNotFoundException",
    "returnType" : "Class<WebViewFactoryProvider>",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int loadWebViewNativeLibraryFromPackage(String packageName, ClassLoader clazzLoader)",
    "returnType" : "int",
    "comment" : "\n     * Load the native library for the given package name if that package\n     * name is the same as the one providing the webview.\n     ",
    "links" : [ ]
  }, {
    "name" : " static WebViewFactoryProvider getProvider()",
    "returnType" : "WebViewFactoryProvider",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean signaturesEquals(Signature[] s1, Signature[] s2)",
    "returnType" : "boolean",
    "comment" : "\n     * Returns {@code true} if the signatures match, {@code false} otherwise\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void verifyPackageInfo(PackageInfo chosen, PackageInfo toUse) throws MissingWebViewPackageException",
    "returnType" : "void",
    "comment" : " Throws MissingWebViewPackageException on failure",
    "links" : [ ]
  }, {
    "name" : "private static boolean isEnabledPackage(PackageInfo packageInfo)",
    "returnType" : "boolean",
    "comment" : " This state can be changed by the user from Settings->Apps",
    "links" : [ ]
  }, {
    "name" : "private static boolean isInstalledPackage(PackageInfo packageInfo)",
    "returnType" : "boolean",
    "comment" : " Return {@code true} if the package is installed and not hidden",
    "links" : [ ]
  }, {
    "name" : "private static Context getWebViewContextAndSetProvider() throws MissingWebViewPackageException",
    "returnType" : "Context",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Class<WebViewFactoryProvider> getProviderClass()",
    "returnType" : "Class<WebViewFactoryProvider>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void prepareWebViewInZygote()",
    "returnType" : "void",
    "comment" : "\n     * Perform any WebView loading preparations that must happen in the zygote.\n     * Currently, this means allocating address space to load the real JNI library later.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int onWebViewProviderChanged(PackageInfo packageInfo)",
    "returnType" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static IWebViewUpdateService getUpdateService()",
    "returnType" : "IWebViewUpdateService",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " static IWebViewUpdateService getUpdateServiceUnchecked()",
    "returnType" : "IWebViewUpdateService",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static StartupTimestamps getStartupTimestamps()", "private static String getWebViewPreparationErrorReason(int error)", "private static boolean isWebViewSupported()", " static void disableWebView()", " static void setDataDirectorySuffix(String suffix)", " static String getDataDirectorySuffix()", "public static String getWebViewLibrary(ApplicationInfo ai)", "public static PackageInfo getLoadedPackageInfo()", "public static Class<WebViewFactoryProvider> getWebViewProviderClass(ClassLoader clazzLoader) throws ClassNotFoundException", "public static int loadWebViewNativeLibraryFromPackage(String packageName, ClassLoader clazzLoader)", " static WebViewFactoryProvider getProvider()", "private static boolean signaturesEquals(Signature[] s1, Signature[] s2)", "private static void verifyPackageInfo(PackageInfo chosen, PackageInfo toUse) throws MissingWebViewPackageException", "private static boolean isEnabledPackage(PackageInfo packageInfo)", "private static boolean isInstalledPackage(PackageInfo packageInfo)", "private static Context getWebViewContextAndSetProvider() throws MissingWebViewPackageException", "private static Class<WebViewFactoryProvider> getProviderClass()", "public static void prepareWebViewInZygote()", "public static int onWebViewProviderChanged(PackageInfo packageInfo)", "public static IWebViewUpdateService getUpdateService()", " static IWebViewUpdateService getUpdateServiceUnchecked()" ],
  "variableNames" : [ "CHROMIUM_WEBVIEW_FACTORY", "CHROMIUM_WEBVIEW_FACTORY_METHOD", "LOGTAG", "DEBUG", "sProviderInstance", "sProviderLock", "sPackageInfo", "sWebViewSupported", "sWebViewDisabled", "sDataDirectorySuffix", "LIBLOAD_SUCCESS", "LIBLOAD_WRONG_PACKAGE_NAME", "LIBLOAD_ADDRESS_SPACE_NOT_RESERVED", "LIBLOAD_FAILED_WAITING_FOR_RELRO", "LIBLOAD_FAILED_LISTING_WEBVIEW_PACKAGES", "LIBLOAD_FAILED_TO_OPEN_RELRO_FILE", "LIBLOAD_FAILED_TO_LOAD_LIBRARY", "LIBLOAD_FAILED_JNI_CALL", "LIBLOAD_FAILED_WAITING_FOR_WEBVIEW_REASON_UNKNOWN", "LIBLOAD_FAILED_TO_FIND_NAMESPACE", "LIBLOAD_FAILED_OTHER", "sTimestamps", "WEBVIEW_UPDATE_SERVICE_NAME" ]
}