{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/number/IntegerWidth.java",
  "packageName" : "android.icu.number",
  "className" : "IntegerWidth",
  "comment" : "\n * A class that defines the strategy for padding and truncating integers before the decimal separator.\n *\n * <p>\n * To create an IntegerWidth, use one of the factory methods.\n *\n * @see NumberFormatter\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DEFAULT",
    "type" : "IntegerWidth",
    "comment" : " package-private ",
    "links" : [ ]
  }, {
    "name" : "minInt",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "maxInt",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static IntegerWidth zeroFillTo(int minInt)",
    "returnType" : "IntegerWidth",
    "comment" : "\n     * Pad numbers at the beginning with zeros to guarantee a certain number of numerals before the\n     * decimal separator.\n     *\n     * <p>\n     * For example, with minInt=3, the number 55 will get printed as \"055\".\n     *\n     * @param minInt\n     *            The minimum number of places before the decimal separator.\n     * @return An IntegerWidth for chaining or passing to the NumberFormatter integerWidth() setter.\n     * @throws IllegalArgumentException if the input number is too big or smaller than 0.\n     * @see NumberFormatter\n     ",
    "links" : [ ]
  }, {
    "name" : "public IntegerWidth truncateAt(int maxInt)",
    "returnType" : "IntegerWidth",
    "comment" : "\n     * Truncate numbers exceeding a certain number of numerals before the decimal separator.\n     *\n     * For example, with maxInt=3, the number 1234 will get printed as \"234\".\n     *\n     * @param maxInt\n     *            The maximum number of places before the decimal separator. maxInt == -1 means no\n     *            truncation.\n     * @return An IntegerWidth for passing to the NumberFormatter integerWidth() setter.\n     * @throws IllegalArgumentException if the input number is too big or smaller than -1.\n     * @see NumberFormatter\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static IntegerWidth zeroFillTo(int minInt)", "public IntegerWidth truncateAt(int maxInt)" ],
  "variableNames" : [ "DEFAULT", "minInt", "maxInt" ]
}