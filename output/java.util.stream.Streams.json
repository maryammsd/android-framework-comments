{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/stream/Streams.java",
  "packageName" : "java.util.stream",
  "className" : "Streams",
  "comment" : "\n * Utility methods for operating on and creating streams.\n *\n * <p>Unless otherwise stated, streams are created as sequential streams.  A\n * sequential stream can be transformed into a parallel stream by calling the\n * {@code parallel()} method on the created stream.\n *\n * @since 1.8\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " static Runnable composeWithExceptions(Runnable a, Runnable b)",
    "returnType" : "Runnable",
    "comment" : "\n     * Given two Runnables, return a Runnable that executes both in sequence,\n     * even if the first throws an exception, and if both throw exceptions, add\n     * any exceptions thrown by the second as suppressed exceptions of the first.\n     ",
    "links" : [ ]
  }, {
    "name" : " static Runnable composedClose(BaseStream<?, ?> a, BaseStream<?, ?> b)",
    "returnType" : "Runnable",
    "comment" : "\n     * Given two streams, return a Runnable that\n     * executes both of their {@link BaseStream#close} methods in sequence,\n     * even if the first throws an exception, and if both throw exceptions, add\n     * any exceptions thrown by the second as suppressed exceptions of the first.\n     ",
    "links" : [ "java.util.stream.BaseStream#close" ]
  } ],
  "methodNames" : [ " static Runnable composeWithExceptions(Runnable a, Runnable b)", " static Runnable composedClose(BaseStream<?, ?> a, BaseStream<?, ?> b)" ],
  "variableNames" : [ ]
}