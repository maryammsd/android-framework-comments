{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/text/Transliterator.java",
  "packageName" : "android.icu.text",
  "className" : "Position",
  "comment" : "\n     * Position structure for incremental transliteration.  This data\n     * structure defines two substrings of the text being\n     * transliterated.  The first region, [contextStart,\n     * contextLimit), defines what characters the transliterator will\n     * read as context.  The second region, [start, limit), defines\n     * what characters will actually be transliterated.  The second\n     * region should be a subset of the first.\n     *\n     * <p>After a transliteration operation, some of the indices in this\n     * structure will be modified.  See the field descriptions for\n     * details.\n     *\n     * <p>contextStart &lt;= start &lt;= limit &lt;= contextLimit\n     *\n     * <p>Note: All index values in this structure must be at code point\n     * boundaries.  That is, none of them may occur between two code units\n     * of a surrogate pair.  If any index does split a surrogate pair,\n     * results are unspecified.\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "contextStart",
    "type" : "int",
    "comment" : "\n         * Beginning index, inclusive, of the context to be considered for\n         * a transliteration operation.  The transliterator will ignore\n         * anything before this index.  INPUT/OUTPUT parameter: This parameter\n         * is updated by a transliteration operation to reflect the maximum\n         * amount of antecontext needed by a transliterator.\n         ",
    "links" : [ ]
  }, {
    "name" : "contextLimit",
    "type" : "int",
    "comment" : "\n         * Ending index, exclusive, of the context to be considered for a\n         * transliteration operation.  The transliterator will ignore\n         * anything at or after this index.  INPUT/OUTPUT parameter: This\n         * parameter is updated to reflect changes in the length of the\n         * text, but points to the same logical position in the text.\n         ",
    "links" : [ ]
  }, {
    "name" : "start",
    "type" : "int",
    "comment" : "\n         * Beginning index, inclusive, of the text to be transliteratd.\n         * INPUT/OUTPUT parameter: This parameter is advanced past\n         * characters that have already been transliterated by a\n         * transliteration operation.\n         ",
    "links" : [ ]
  }, {
    "name" : "limit",
    "type" : "int",
    "comment" : "\n         * Ending index, exclusive, of the text to be transliteratd.\n         * INPUT/OUTPUT parameter: This parameter is updated to reflect\n         * changes in the length of the text, but points to the same\n         * logical position in the text.\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void set(Position pos)",
    "returnType" : "void",
    "comment" : "\n         * Copies the indices of this position from another.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "\n         * Returns true if this Position is equal to the given object.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "\n         * {@inheritDoc}\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n         * Returns a string representation of this Position.\n         * @return a string representation of the object.\n         ",
    "links" : [ ]
  }, {
    "name" : "public final void validate(int length)",
    "returnType" : "void",
    "comment" : "\n         * Check all bounds.  If they are invalid, throw an exception.\n         * @param length the length of the string this object applies to\n         * @exception IllegalArgumentException if any indices are out\n         * of bounds\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void set(Position pos)", "public boolean equals(Object obj)", "public int hashCode()", "public String toString()", "public final void validate(int length)" ],
  "variableNames" : [ "contextStart", "contextLimit", "start", "limit" ]
}