{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/SystemVibrator.java",
  "packageName" : "android.os",
  "className" : "MultiVibratorStateListener",
  "comment" : "\n     * Listener for all vibrators state change.\n     *\n     * <p>This registers a listener to all vibrators to merge the callbacks into a single state\n     * that is set to true if any individual vibrator is also true, and false otherwise.\n     *\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExecutor",
    "type" : "Executor",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDelegate",
    "type" : "OnVibratorStateChangedListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVibratorListeners",
    "type" : "SparseArray<SingleVibratorStateListener>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInitializedMask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mVibratingMask",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean hasRegisteredListeners()",
    "returnType" : "boolean",
    "comment" : " Returns true if at least one listener was registered to an individual vibrator. ",
    "links" : [ ]
  }, {
    "name" : "public void register(VibratorManager vibratorManager)",
    "returnType" : "void",
    "comment" : " Registers a listener to all individual vibrators in {@link VibratorManager}. ",
    "links" : [ "android.os.VibratorManager" ]
  }, {
    "name" : "public void unregister(VibratorManager vibratorManager)",
    "returnType" : "void",
    "comment" : " Unregisters the listeners from all individual vibrators in {@link VibratorManager}. ",
    "links" : [ "android.os.VibratorManager" ]
  }, {
    "name" : "public void onVibrating(int vibratorIdx, boolean vibrating)",
    "returnType" : "void",
    "comment" : " Callback triggered by {@link SingleVibratorStateListener} for each vibrator. ",
    "links" : [ "SingleVibratorStateListener" ]
  } ],
  "methodNames" : [ "public boolean hasRegisteredListeners()", "public void register(VibratorManager vibratorManager)", "public void unregister(VibratorManager vibratorManager)", "public void onVibrating(int vibratorIdx, boolean vibrating)" ],
  "variableNames" : [ "mLock", "mExecutor", "mDelegate", "mVibratorListeners", "mInitializedMask", "mVibratingMask" ]
}