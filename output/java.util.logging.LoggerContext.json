{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/logging/LogManager.java",
  "packageName" : "java.util.logging",
  "className" : "LoggerContext",
  "comment" : " added in the user context.",
  "links" : [ ],
  "variables" : [ {
    "name" : "namedLoggers",
    "type" : "Hashtable<String, LoggerWeakRef>",
    "comment" : " Table of named Loggers that maps names to Loggers.",
    "links" : [ ]
  }, {
    "name" : "root",
    "type" : "LogNode",
    "comment" : " Tree of named Loggers",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " final boolean requiresDefaultLoggers()",
    "returnType" : "boolean",
    "comment" : " If true, the default loggers will be lazily added.",
    "links" : [ ]
  }, {
    "name" : " final LogManager getOwner()",
    "returnType" : "LogManager",
    "comment" : " This context's LogManager.",
    "links" : [ ]
  }, {
    "name" : " final Logger getRootLogger()",
    "returnType" : "Logger",
    "comment" : " logger's tree.",
    "links" : [ ]
  }, {
    "name" : " final Logger getGlobalLogger()",
    "returnType" : "Logger",
    "comment" : " logger's tree.",
    "links" : [ ]
  }, {
    "name" : " Logger demandLogger(String name, String resourceBundleName)",
    "returnType" : "Logger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void ensureInitialized()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized Logger findLogger(String name)",
    "returnType" : "Logger",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void ensureAllDefaultLoggers(Logger logger)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void ensureDefaultLogger(Logger logger)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " boolean addLocalLogger(Logger logger)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized boolean addLocalLogger(Logger logger, boolean addDefaultLoggersIfNeeded)",
    "returnType" : "boolean",
    "comment" : " and process parent loggers.  It doesn't set its handlers.",
    "links" : [ ]
  }, {
    "name" : " synchronized void removeLoggerRef(String name, LoggerWeakRef ref)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " synchronized Enumeration<String> getLoggerNames()",
    "returnType" : "Enumeration<String>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void processParentHandlers(final Logger logger, final String name)",
    "returnType" : "void",
    "comment" : " parents have levels or handlers defined, make sure they are instantiated.",
    "links" : [ ]
  }, {
    "name" : " LogNode getNode(String name)",
    "returnType" : "LogNode",
    "comment" : " If necessary, create it.",
    "links" : [ ]
  } ],
  "methodNames" : [ " final boolean requiresDefaultLoggers()", " final LogManager getOwner()", " final Logger getRootLogger()", " final Logger getGlobalLogger()", " Logger demandLogger(String name, String resourceBundleName)", "private void ensureInitialized()", " synchronized Logger findLogger(String name)", "private void ensureAllDefaultLoggers(Logger logger)", "private void ensureDefaultLogger(Logger logger)", " boolean addLocalLogger(Logger logger)", " synchronized boolean addLocalLogger(Logger logger, boolean addDefaultLoggersIfNeeded)", " synchronized void removeLoggerRef(String name, LoggerWeakRef ref)", " synchronized Enumeration<String> getLoggerNames()", "private void processParentHandlers(final Logger logger, final String name)", " LogNode getNode(String name)" ],
  "variableNames" : [ "namedLoggers", "root" ]
}