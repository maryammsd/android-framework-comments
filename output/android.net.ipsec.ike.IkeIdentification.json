{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ipsec/ike/IkeIdentification.java",
  "packageName" : "android.net.ipsec.ike",
  "className" : "IkeIdentification",
  "comment" : "\n * IkeIdentification is abstract base class that represents the common information for all types of\n * IKE entity identification.\n *\n * <p>{@link IkeIdentification} is used in IKE authentication.\n *\n * @see <a href=\"https://tools.ietf.org/html/rfc7296#section-3.5\">RFC 7296, Internet Key Exchange\n *     Protocol Version 2 (IKEv2)</a>\n ",
  "links" : [ "android.net.ipsec.ike.IkeIdentification" ],
  "variables" : [ {
    "name" : "SUPPORTED_ID_TYPES",
    "type" : "Set<Integer>",
    "comment" : " Set of supported ID types.",
    "links" : [ ]
  }, {
    "name" : "INDEX_SAN_TYPE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INDEX_SAN_DATA",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ID_TYPE_IPV4_ADDR",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ID_TYPE_FQDN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ID_TYPE_RFC822_ADDR",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ID_TYPE_IPV6_ADDR",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ID_TYPE_DER_ASN1_DN",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "ID_TYPE_KEY_ID",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "SAN_TYPE_RFC822_NAME",
    "type" : "int",
    "comment" : " @hide Subject Alternative Name Type for RFC822 Email Address defined in RFC 5280 ",
    "links" : [ ]
  }, {
    "name" : "SAN_TYPE_DNS",
    "type" : "int",
    "comment" : " @hide Subject Alternative Name Type for DNS Name defined in RFC 5280 ",
    "links" : [ ]
  }, {
    "name" : "SAN_TYPE_IP_ADDRESS",
    "type" : "int",
    "comment" : " @hide Subject Alternative Name Type for IP Address defined in RFC 5280 ",
    "links" : [ ]
  }, {
    "name" : "ID_TYPE_KEY",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "idType",
    "type" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static IkeIdentification fromPersistableBundle(@NonNull PersistableBundle in)",
    "returnType" : "IkeIdentification",
    "comment" : "\n     * Constructs this object by deserializing a PersistableBundle\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public PersistableBundle toPersistableBundle()",
    "returnType" : "PersistableBundle",
    "comment" : "\n     * Serializes this object to a PersistableBundle\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract String getIdTypeString()",
    "returnType" : "String",
    "comment" : "\n     * Returns ID type as a String\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void validateEndCertIdOrThrow(X509Certificate endCert) throws AuthenticationFailedException",
    "returnType" : "void",
    "comment" : "\n     * Check if the end certificate's subject DN or SAN matches this identification\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "protected void validateEndCertSanOrThrow(X509Certificate endCert, int expectedSanType, Object expectedSanData) throws AuthenticationFailedException",
    "returnType" : "void",
    "comment" : "\n     * Check if the end certificate SAN matches the identification\n     *\n     * <p>According to RFC 7296, the received IKE ID that types are FQDN, IPv4/IPv6 Address and\n     * RFC822 Address should match the end certificate Subject Alternative Name (SAN).\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract byte[] getEncodedIdData()",
    "returnType" : "byte[]",
    "comment" : "\n     * Return the encoded identification data in a byte array.\n     *\n     * @return the encoded identification data.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static IkeIdentification fromPersistableBundle(@NonNull PersistableBundle in)", "public PersistableBundle toPersistableBundle()", "public abstract String getIdTypeString()", "public abstract void validateEndCertIdOrThrow(X509Certificate endCert) throws AuthenticationFailedException", "protected void validateEndCertSanOrThrow(X509Certificate endCert, int expectedSanType, Object expectedSanData) throws AuthenticationFailedException", "public abstract byte[] getEncodedIdData()" ],
  "variableNames" : [ "SUPPORTED_ID_TYPES", "INDEX_SAN_TYPE", "INDEX_SAN_DATA", "ID_TYPE_IPV4_ADDR", "ID_TYPE_FQDN", "ID_TYPE_RFC822_ADDR", "ID_TYPE_IPV6_ADDR", "ID_TYPE_DER_ASN1_DN", "ID_TYPE_KEY_ID", "SAN_TYPE_RFC822_NAME", "SAN_TYPE_DNS", "SAN_TYPE_IP_ADDRESS", "ID_TYPE_KEY", "idType" ]
}