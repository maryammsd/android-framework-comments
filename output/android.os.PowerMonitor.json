{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/os/PowerMonitor.java",
  "packageName" : "android.os",
  "className" : "PowerMonitor",
  "comment" : "\n * A PowerMonitor represents either an ODPM rail (on-device power rail monitor) or a modeled\n * energy consumer.\n * <p/>\n * ODPM rail names are device-specific. No assumptions should be made about the names and\n * exact purpose of ODPM rails across different device models. A rail name may be something\n * like \"S2S_VDD_G3D\"; specific knowledge of the device hardware is required to interpret\n * the corresponding power monitor data.\n * <p/>\n * Energy consumer have more human-readable names, e.g. \"GPU\", \"MODEM\" etc. However, developers\n * must be extra cautious about using energy consumers across different device models,\n * as their exact implementations are also hardware dependent and are customized by OEMs.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "POWER_MONITOR_TYPE_CONSUMER",
    "type" : "int",
    "comment" : "\n     * Power monitor corresponding to a subsystem. The energy value may be a direct pass-through\n     * power rail measurement, or modeled in some fashion.  For example, an energy consumer may\n     * represent a combination of multiple rails or a portion of a rail shared between subsystems,\n     * e.g. WiFi and Bluetooth are often handled by the same chip, powered by a shared rail.\n     * Some consumer names are standardized, others are not.\n     ",
    "links" : [ ]
  }, {
    "name" : "POWER_MONITOR_TYPE_MEASUREMENT",
    "type" : "int",
    "comment" : "\n     * Power monitor corresponding to a directly measured power rail. Rails are device-specific:\n     * no assumptions can be made about the source of those measurements across different devices,\n     * even if they have the same name.\n     ",
    "links" : [ ]
  }, {
    "name" : "index",
    "type" : "int",
    "comment" : "\n     * These indices are not guaranteed to be stable across reboots and should not\n     * be persisted.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<PowerMonitor>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getType()",
    "returnType" : "int",
    "comment" : "\n     * Returns the type of the power monitor.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getName()",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the power monitor, either a power rail or an energy consumer.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getType()", "public String getName()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()" ],
  "variableNames" : [ "POWER_MONITOR_TYPE_CONSUMER", "POWER_MONITOR_TYPE_MEASUREMENT", "index", "mType", "mName", "CREATOR" ]
}