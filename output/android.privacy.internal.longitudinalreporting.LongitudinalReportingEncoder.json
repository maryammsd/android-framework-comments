{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/privacy/internal/longitudinalreporting/LongitudinalReportingEncoder.java",
  "packageName" : "android.privacy.internal.longitudinalreporting",
  "className" : "LongitudinalReportingEncoder",
  "comment" : "\n * Differential privacy encoder by using Longitudinal Reporting algorithm.\n *\n * <b>\n * Notes: It supports encodeBoolean() only for now.\n * </b>\n *\n * <p>\n * Definition:\n * PRR = Permanent Randomized Response\n * IRR = Instantaneous Randomized response\n *\n * Algorithm:\n * Step 1: Create long-term secrets x(ignoreOriginalInput)=Ber(P), y=Ber(Q), where Ber denotes\n * Bernoulli distribution on {0, 1}, and we use it as a long-term secret, we implement Ber(x) by\n * using PRR(2x, 0) when x < 1/2, PRR(2(1-x), 1) when x >= 1/2.\n * Step 2: If x is 0, report IRR(F, original), otherwise report IRR(F, y)\n * </p>\n *\n * Reference: go/bit-reporting-with-longitudinal-privacy\n * TODO: Add a public blog / site to explain how it works.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PRR1_ENCODER_ID",
    "type" : "String",
    "comment" : " other Rappor encoder may re-use the same encoder id.",
    "links" : [ ]
  }, {
    "name" : "PRR2_ENCODER_ID",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConfig",
    "type" : "LongitudinalReportingConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIRREncoder",
    "type" : "RapporEncoder",
    "comment" : " IRR encoder to encode input value.",
    "links" : [ ]
  }, {
    "name" : "mFakeValue",
    "type" : "Boolean",
    "comment" : " Null if original value does not need to be replaced.",
    "links" : [ ]
  }, {
    "name" : "mIsSecure",
    "type" : "boolean",
    "comment" : " True if encoder is securely randomized.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static LongitudinalReportingEncoder createEncoder(LongitudinalReportingConfig config, byte[] userSecret)",
    "returnType" : "LongitudinalReportingEncoder",
    "comment" : "\n     * Create {@link LongitudinalReportingEncoder} with\n     * {@link LongitudinalReportingConfig} provided.\n     *\n     * @param config     Longitudinal Reporting parameters to encode input\n     * @param userSecret User generated secret that used to generate PRR\n     * @return {@link LongitudinalReportingEncoder} instance\n     ",
    "links" : [ "android.privacy.internal.longitudinalreporting.LongitudinalReportingEncoder", "android.privacy.internal.longitudinalreporting.LongitudinalReportingConfig" ]
  }, {
    "name" : "public static LongitudinalReportingEncoder createInsecureEncoderForTest(LongitudinalReportingConfig config)",
    "returnType" : "LongitudinalReportingEncoder",
    "comment" : "\n     * Create <strong>insecure</strong> {@link LongitudinalReportingEncoder} with\n     * {@link LongitudinalReportingConfig} provided.\n     * Should not use it to process sensitive data.\n     *\n     * @param config Rappor parameters to encode input.\n     * @return {@link LongitudinalReportingEncoder} instance.\n     ",
    "links" : [ "android.privacy.internal.longitudinalreporting.LongitudinalReportingEncoder", "android.privacy.internal.longitudinalreporting.LongitudinalReportingConfig" ]
  }, {
    "name" : "public byte[] encodeString(String original)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] encodeBoolean(boolean original)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] encodeBits(byte[] bits)",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public LongitudinalReportingConfig getConfig()",
    "returnType" : "LongitudinalReportingConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isInsecureEncoderForTest()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static boolean getLongTermRandomizedResult(double p, boolean secureEncoder, byte[] userSecret, String encoderId)",
    "returnType" : "boolean",
    "comment" : "\n     * Get PRR result that with probability p is 1, probability 1-p is 0.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static LongitudinalReportingEncoder createEncoder(LongitudinalReportingConfig config, byte[] userSecret)", "public static LongitudinalReportingEncoder createInsecureEncoderForTest(LongitudinalReportingConfig config)", "public byte[] encodeString(String original)", "public byte[] encodeBoolean(boolean original)", "public byte[] encodeBits(byte[] bits)", "public LongitudinalReportingConfig getConfig()", "public boolean isInsecureEncoderForTest()", "public static boolean getLongTermRandomizedResult(double p, boolean secureEncoder, byte[] userSecret, String encoderId)" ],
  "variableNames" : [ "TAG", "DEBUG", "PRR1_ENCODER_ID", "PRR2_ENCODER_ID", "mConfig", "mIRREncoder", "mFakeValue", "mIsSecure" ]
}