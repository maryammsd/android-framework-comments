{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/Norm2AllModes.java",
  "packageName" : "android.icu.impl",
  "className" : "NoopNormalizer2",
  "comment" : "\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public StringBuilder normalize(CharSequence src, StringBuilder dest)",
    "returnType" : "StringBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public Appendable normalize(CharSequence src, Appendable dest)",
    "returnType" : "Appendable",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuilder normalizeSecondAndAppend(StringBuilder first, CharSequence second)",
    "returnType" : "StringBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public StringBuilder append(StringBuilder first, CharSequence second)",
    "returnType" : "StringBuilder",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getDecomposition(int c)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isNormalized(CharSequence s)",
    "returnType" : "boolean",
    "comment" : " No need to override the default getRawDecomposition().",
    "links" : [ ]
  }, {
    "name" : "public Normalizer.QuickCheckResult quickCheck(CharSequence s)",
    "returnType" : "Normalizer.QuickCheckResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int spanQuickCheckYes(CharSequence s)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasBoundaryBefore(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean hasBoundaryAfter(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isInert(int c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public StringBuilder normalize(CharSequence src, StringBuilder dest)", "public Appendable normalize(CharSequence src, Appendable dest)", "public StringBuilder normalizeSecondAndAppend(StringBuilder first, CharSequence second)", "public StringBuilder append(StringBuilder first, CharSequence second)", "public String getDecomposition(int c)", "public boolean isNormalized(CharSequence s)", "public Normalizer.QuickCheckResult quickCheck(CharSequence s)", "public int spanQuickCheckYes(CharSequence s)", "public boolean hasBoundaryBefore(int c)", "public boolean hasBoundaryAfter(int c)", "public boolean isInert(int c)" ],
  "variableNames" : [ ]
}