{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/apk/VerityBuilder.java",
  "packageName" : "android.util.apk",
  "className" : "BufferedDigester",
  "comment" : "\n     * A helper class to consume and digest data by block continuously, and write into a buffer.\n     ",
  "variables" : [ {
    "name" : "BUFFER_SIZE",
    "type" : "int",
    "comment" : " Amount of the data to digest in each cycle before writting out the digest. ",
    "links" : [ ]
  }, {
    "name" : "mBytesDigestedSinceReset",
    "type" : "int",
    "comment" : "\n         * Amount of data the {@link MessageDigest} has consumed since the last reset. This must be\n         * always less than BUFFER_SIZE since {@link MessageDigest} is reset whenever it has\n         * consumed BUFFER_SIZE of data.\n         ",
    "links" : [ "MessageDigest", "MessageDigest" ]
  }, {
    "name" : "mOutput",
    "type" : "ByteBuffer",
    "comment" : " The final output {@link ByteBuffer} to write the digest to sequentially. ",
    "links" : [ "ByteBuffer" ]
  }, {
    "name" : "mMd",
    "type" : "MessageDigest",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDigestBuffer",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSalt",
    "type" : "byte[]",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void consume(ByteBuffer buffer) throws DigestException",
    "returnType" : "void",
    "comment" : "\n         * Consumes and digests data up to BUFFER_SIZE (may continue from the previous remaining),\n         * then writes the final digest to the output buffer.  Repeat until all data are consumed.\n         * If the last consumption is not enough for BUFFER_SIZE, the state will stay and future\n         * consumption will continuous from there.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void assertEmptyBuffer() throws DigestException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void fillUpLastOutputChunk()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "BUFFER_SIZE", "mBytesDigestedSinceReset", "mOutput", "mMd", "mDigestBuffer", "mSalt" ],
  "methodNames" : [ "public void consume(ByteBuffer buffer) throws DigestException", "public void assertEmptyBuffer() throws DigestException", "private void fillUpLastOutputChunk()" ]
}