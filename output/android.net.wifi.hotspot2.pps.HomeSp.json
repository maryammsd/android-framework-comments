{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/wifi/hotspot2/pps/HomeSp.java",
  "packageName" : "android.net.wifi.hotspot2.pps",
  "className" : "HomeSp",
  "comment" : "\n * Class representing HomeSP subtree in PerProviderSubscription (PPS)\n * Management Object (MO) tree.\n *\n * For more info, refer to Hotspot 2.0 PPS MO defined in section 9.1 of the Hotspot 2.0\n * Release 2 Technical Specification.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_SSID_BYTES",
    "type" : "int",
    "comment" : "\n     * Maximum number of bytes allowed for a SSID.\n     ",
    "links" : [ ]
  }, {
    "name" : "NULL_VALUE",
    "type" : "int",
    "comment" : "\n     * Integer value used for indicating null value in the Parcel.\n     ",
    "links" : [ ]
  }, {
    "name" : "mFqdn",
    "type" : "String",
    "comment" : "\n     * FQDN (Fully Qualified Domain Name) of this home service provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "mFriendlyName",
    "type" : "String",
    "comment" : "\n     * Friendly name of this home service provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIconUrl",
    "type" : "String",
    "comment" : "\n     * Icon URL of this home service provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "mHomeNetworkIds",
    "type" : "Map<String, Long>",
    "comment" : "\n     * <SSID, HESSID> duple of the networks that are consider home networks.\n     *\n     * According to the Section 9.1.2 of the Hotspot 2.0 Release 2 Technical Specification,\n     * all nodes in the PSS MO are encoded using UTF-8 unless stated otherwise.  Thus, the SSID\n     * string is assumed to be encoded using UTF-8.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMatchAllOis",
    "type" : "long[]",
    "comment" : "\n     * Used for determining if this provider is a member of a given Hotspot provider.\n     * Every Organization Identifiers (OIs) in this list are required to match an OI in the\n     * the Roaming Consortium advertised by a Hotspot, in order to consider this provider\n     * as a member of that Hotspot provider (e.g. successful authentication with such Hotspot\n     * is possible).\n     *\n     * Refer to HomeSP/HomeOIList subtree in PerProviderSubscription (PPS) Management Object\n     * (MO) tree for more detail.\n     ",
    "links" : [ ]
  }, {
    "name" : "mMatchAnyOis",
    "type" : "long[]",
    "comment" : "\n     * Used for determining if this provider is a member of a given Hotspot provider.\n     * Matching of any Organization Identifiers (OIs) in this list with an OI in the\n     * Roaming Consortium advertised by a Hotspot, will consider this provider as a member\n     * of that Hotspot provider (e.g. successful authentication with such Hotspot\n     * is possible).\n     *\n     * The list set by {@link #setMatchAllOis(long[])} will have precedence over this one, meaning\n     * this list will only be used for matching if the list set by {@link #setMatchAllOis(long[])}\n     * is null or empty.\n     *\n     * Refer to HomeSP/HomeOIList subtree in PerProviderSubscription (PPS) Management Object\n     * (MO) tree for more detail.\n     ",
    "links" : [ "#setMatchAllOis(long" ]
  }, {
    "name" : "mOtherHomePartners",
    "type" : "String[]",
    "comment" : "\n     * List of FQDN (Fully Qualified Domain Name) of partner providers.\n     * These providers should also be regarded as home Hotspot operators.\n     * This relationship is most likely achieved via a commercial agreement or\n     * operator merges between the providers.\n     ",
    "links" : [ ]
  }, {
    "name" : "mRoamingConsortiumOis",
    "type" : "long[]",
    "comment" : "\n     * List of Organization Identifiers (OIs) identifying a roaming consortium of\n     * which this provider is a member.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<HomeSp>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void setFqdn(String fqdn)",
    "returnType" : "void",
    "comment" : "\n     * Set the FQDN (Fully Qualified Domain Name) associated with this home service provider.\n     *\n     * @param fqdn The FQDN to set to\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFqdn()",
    "returnType" : "String",
    "comment" : "\n     * Get the FQDN (Fully Qualified Domain Name) associated with this home service provider.\n     *\n     * @return the FQDN associated with this home service provider\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setFriendlyName(String friendlyName)",
    "returnType" : "void",
    "comment" : "\n     * Set the friendly name associated with this home service provider.\n     *\n     * @param friendlyName The friendly name to set to\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getFriendlyName()",
    "returnType" : "String",
    "comment" : "\n     * Get the friendly name associated with this home service provider.\n     *\n     * @return the friendly name associated with this home service provider\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setIconUrl(String iconUrl)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getIconUrl()",
    "returnType" : "String",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setHomeNetworkIds(Map<String, Long> homeNetworkIds)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, Long> getHomeNetworkIds()",
    "returnType" : "Map<String, Long>",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMatchAllOis(@Nullable long[] matchAllOis)",
    "returnType" : "void",
    "comment" : "\n     * Set a list of HomeOIs such that all OIs in the list must match an OI in the Roaming\n     * Consortium advertised by a hotspot operator. The list set by this API will have precedence\n     * over {@link #setMatchAnyOis(long[])}, meaning the list set in {@link #setMatchAnyOis(long[])}\n     * will only be used for matching if the list set by this API is null or empty.\n     *\n     * @param matchAllOis An array of longs containing the HomeOIs\n     ",
    "links" : [ "#setMatchAnyOis(long" ]
  }, {
    "name" : "public long[] getMatchAllOis()",
    "returnType" : "long[]",
    "comment" : "\n     * Get the list of HomeOIs such that all OIs in the list must match an OI in the Roaming\n     * Consortium advertised by a hotspot operator.\n     *\n     * @return An array of longs containing the HomeOIs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setMatchAnyOis(@Nullable long[] matchAnyOis)",
    "returnType" : "void",
    "comment" : "\n     * Set a list of HomeOIs such that any OI in the list matches an OI in the Roaming Consortium\n     * advertised by a hotspot operator. The list set by {@link #setMatchAllOis(long[])}\n     * will have precedence over this API, meaning this list will only be used for matching if the\n     * list set by {@link #setMatchAllOis(long[])} is null or empty.\n     *\n     * @param matchAnyOis An array of longs containing the HomeOIs\n     ",
    "links" : [ "#setMatchAllOis(long" ]
  }, {
    "name" : "public long[] getMatchAnyOis()",
    "returnType" : "long[]",
    "comment" : "\n     * Get a list of HomeOIs such that any OI in the list matches an OI in the Roaming Consortium\n     * advertised by a hotspot operator.\n     *\n     * @return An array of longs containing the HomeOIs\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setOtherHomePartners(@Nullable String[] otherHomePartners)",
    "returnType" : "void",
    "comment" : "\n     * Set the list of FQDN (Fully Qualified Domain Name) of other Home partner providers.\n     *\n     * @param otherHomePartners Array of Strings containing the FQDNs of other Home partner\n     *                         providers\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setOtherHomePartnersList(@NonNull Collection<String> otherHomePartners)",
    "returnType" : "void",
    "comment" : "\n     * Set the list of FQDN (Fully Qualified Domain Name) of other Home partner providers.\n     *\n     * @param otherHomePartners Collection of Strings containing the FQDNs of other Home partner\n     *                         providers\n     ",
    "links" : [ ]
  }, {
    "name" : "public String[] getOtherHomePartners()",
    "returnType" : "String[]",
    "comment" : "\n     * Get the list of FQDN (Fully Qualified Domain Name) of other Home partner providers set in\n     * the profile.\n     *\n     * @return Array of Strings containing the FQDNs of other Home partner providers set in the\n     * profile\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Collection<String> getOtherHomePartnersList()",
    "returnType" : "Collection<String>",
    "comment" : "\n     * Get the list of FQDN (Fully Qualified Domain Name) of other Home partner providers set in\n     * the profile.\n     *\n     * @return Collection of Strings containing the FQDNs of other Home partner providers set in the\n     * profile\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setRoamingConsortiumOis(long[] roamingConsortiumOis)",
    "returnType" : "void",
    "comment" : "\n     * Set the Organization Identifiers (OIs) identifying a roaming consortium of which this\n     * provider is a member.\n     *\n     * @param roamingConsortiumOis Array of roaming consortium OIs\n     ",
    "links" : [ ]
  }, {
    "name" : "public long[] getRoamingConsortiumOis()",
    "returnType" : "long[]",
    "comment" : "\n     * Get the Organization Identifiers (OIs) identifying a roaming consortium of which this\n     * provider is a member.\n     *\n     * @return array of roaming consortium OIs\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object thatObject)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getUniqueId()",
    "returnType" : "int",
    "comment" : "\n     * Get a unique identifier for HomeSp. This identifier depends only on items that remain\n     * constant throughout the lifetime of a subscription.\n     *\n     * @hide\n     * @return a Unique identifier for a HomeSp object\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean validate()",
    "returnType" : "boolean",
    "comment" : "\n     * Validate HomeSp data.\n     *\n     * @return true on success or false on failure\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private static void writeHomeNetworkIds(Parcel dest, Map<String, Long> networkIds)",
    "returnType" : "void",
    "comment" : "\n     * Helper function for writing Home Network IDs map to a Parcel.\n     *\n     * @param dest The Parcel to write to\n     * @param networkIds The map of home network IDs\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void setFqdn(String fqdn)", "public String getFqdn()", "public void setFriendlyName(String friendlyName)", "public String getFriendlyName()", "public void setIconUrl(String iconUrl)", "public String getIconUrl()", "public void setHomeNetworkIds(Map<String, Long> homeNetworkIds)", "public Map<String, Long> getHomeNetworkIds()", "public void setMatchAllOis(@Nullable long[] matchAllOis)", "public long[] getMatchAllOis()", "public void setMatchAnyOis(@Nullable long[] matchAnyOis)", "public long[] getMatchAnyOis()", "public void setOtherHomePartners(@Nullable String[] otherHomePartners)", "public void setOtherHomePartnersList(@NonNull Collection<String> otherHomePartners)", "public String[] getOtherHomePartners()", "public Collection<String> getOtherHomePartnersList()", "public void setRoamingConsortiumOis(long[] roamingConsortiumOis)", "public long[] getRoamingConsortiumOis()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public boolean equals(Object thatObject)", "public int hashCode()", "public int getUniqueId()", "public String toString()", "public boolean validate()", "private static void writeHomeNetworkIds(Parcel dest, Map<String, Long> networkIds)" ],
  "variableNames" : [ "TAG", "MAX_SSID_BYTES", "NULL_VALUE", "mFqdn", "mFriendlyName", "mIconUrl", "mHomeNetworkIds", "mMatchAllOis", "mMatchAnyOis", "mOtherHomePartners", "mRoamingConsortiumOis", "CREATOR" ]
}