{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/soundtrigger/SoundTriggerDetector.java",
  "packageName" : "android.media.soundtrigger",
  "className" : "SoundTriggerDetector",
  "comment" : "\n * A class that allows interaction with the actual sound trigger detection on the system.\n * Sound trigger detection refers to a detectors that match generic sound patterns that are\n * not voice-based. The voice-based recognition models should utilize the {@link\n * VoiceInteractionService} instead. Access to this class is protected by a permission\n * granted only to system or privileged apps.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "DBG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_AVAILABILITY_CHANGED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_SOUND_TRIGGER_DETECTED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_DETECTION_ERROR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_DETECTION_PAUSE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MSG_DETECTION_RESUME",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSoundTriggerService",
    "type" : "ISoundTriggerService",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSoundModelId",
    "type" : "UUID",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallback",
    "type" : "Callback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRecognitionCallback",
    "type" : "RecognitionCallback",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RECOGNITION_FLAG_NONE",
    "type" : "int",
    "comment" : "\n     * Empty flag for {@link #startRecognition(int)}.\n     *\n     *  @hide\n     ",
    "links" : [ "#startRecognition(int)" ]
  }, {
    "name" : "RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO",
    "type" : "int",
    "comment" : "\n     * Recognition flag for {@link #startRecognition(int)} that indicates\n     * whether the trigger audio for hotword needs to be captured.\n     ",
    "links" : [ "#startRecognition(int)" ]
  }, {
    "name" : "RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS",
    "type" : "int",
    "comment" : "\n     * Recognition flag for {@link #startRecognition(int)} that indicates\n     * whether the recognition should keep going on even after the\n     * model triggers.\n     * If this flag is specified, it's possible to get multiple\n     * triggers after a call to {@link #startRecognition(int)}, if the model\n     * triggers multiple times.\n     * When this isn't specified, the default behavior is to stop recognition once the\n     * trigger happens, till the caller starts recognition again.\n     ",
    "links" : [ "#startRecognition(int)" ]
  }, {
    "name" : "RECOGNITION_FLAG_ENABLE_AUDIO_ECHO_CANCELLATION",
    "type" : "int",
    "comment" : "\n     * Audio capabilities flag for {@link #startRecognition(int)} that indicates\n     * if the underlying recognition should use AEC.\n     * This capability may or may not be supported by the system, and support can be queried\n     * by calling {@link SoundTriggerManager#getModuleProperties()} and checking\n     * {@link ModuleProperties#audioCapabilities}. The corresponding capabilities field for\n     * this flag is {@link SoundTrigger.ModuleProperties#AUDIO_CAPABILITY_ECHO_CANCELLATION}.\n     * If this flag is passed without the audio capability supported, there will be no audio effect\n     * applied.\n     ",
    "links" : [ "#startRecognition(int)", "SoundTrigger.ModuleProperties#AUDIO_CAPABILITY_ECHO_CANCELLATION", "android.media.soundtrigger.SoundTriggerManager#getModuleProperties()", "android.hardware.soundtrigger.SoundTrigger.ModuleProperties#audioCapabilities" ]
  }, {
    "name" : "RECOGNITION_FLAG_ENABLE_AUDIO_NOISE_SUPPRESSION",
    "type" : "int",
    "comment" : "\n     * Audio capabilities flag for {@link #startRecognition(int)} that indicates\n     * if the underlying recognition should use noise suppression.\n     * This capability may or may not be supported by the system, and support can be queried\n     * by calling {@link SoundTriggerManager#getModuleProperties()} and checking\n     * {@link ModuleProperties#audioCapabilities}. The corresponding capabilities field for\n     * this flag is {@link SoundTrigger.ModuleProperties#AUDIO_CAPABILITY_NOISE_SUPPRESSION}.\n     * If this flag is passed without the audio capability supported, there will be no audio effect\n     * applied.\n     ",
    "links" : [ "#startRecognition(int)", "android.media.soundtrigger.SoundTriggerManager#getModuleProperties()", "SoundTrigger.ModuleProperties#AUDIO_CAPABILITY_NOISE_SUPPRESSION", "android.hardware.soundtrigger.SoundTrigger.ModuleProperties#audioCapabilities" ]
  } ],
  "methods" : [ {
    "name" : "public boolean startRecognition(@RecognitionFlags int recognitionFlags)",
    "returnType" : "boolean",
    "comment" : "\n     * Starts recognition on the associated sound model. Result is indicated via the\n     * {@link Callback}.\n     * @return Indicates whether the call succeeded or not.\n     ",
    "links" : [ "android.hardware.soundtrigger.IRecognitionStatusCallback" ]
  }, {
    "name" : "public boolean stopRecognition()",
    "returnType" : "boolean",
    "comment" : "\n     * Stops recognition for the associated model.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void dump(String prefix, PrintWriter pw)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "DBG", "TAG", "MSG_AVAILABILITY_CHANGED", "MSG_SOUND_TRIGGER_DETECTED", "MSG_DETECTION_ERROR", "MSG_DETECTION_PAUSE", "MSG_DETECTION_RESUME", "mLock", "mSoundTriggerService", "mSoundModelId", "mCallback", "mHandler", "mRecognitionCallback", "RECOGNITION_FLAG_NONE", "RECOGNITION_FLAG_CAPTURE_TRIGGER_AUDIO", "RECOGNITION_FLAG_ALLOW_MULTIPLE_TRIGGERS", "RECOGNITION_FLAG_ENABLE_AUDIO_ECHO_CANCELLATION", "RECOGNITION_FLAG_ENABLE_AUDIO_NOISE_SUPPRESSION" ],
  "methodNames" : [ "public boolean startRecognition(@RecognitionFlags int recognitionFlags)", "public boolean stopRecognition()", "public void dump(String prefix, PrintWriter pw)" ]
}