{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/urlconnection/CronetURLStreamHandlerFactory.java",
  "packageName" : "org.chromium.net.urlconnection",
  "className" : "CronetURLStreamHandlerFactory",
  "comment" : "\n * An implementation of {@link URLStreamHandlerFactory} to handle HTTP and HTTPS\n * traffic. An instance of this class can be installed via\n * {@link java.net.URL#setURLStreamHandlerFactory} thus using Cronet by default for all requests\n * created via {@link java.net.URL#openConnection}.\n * <p>\n * Cronet does not use certain HTTP features provided via the system:\n * <ul>\n * <li>the HTTP cache installed via\n *     {@link android.net.http.HttpResponseCache#install}</li>\n * <li>the HTTP authentication method installed via\n *     {@link java.net.Authenticator#setDefault}</li>\n * <li>the HTTP cookie storage installed via {@link java.net.CookieHandler#setDefault}</li>\n * </ul>\n * <p>\n * While Cronet supports and encourages requests using the HTTPS protocol,\n * Cronet does not provide support for the\n * {@link javax.net.ssl.HttpsURLConnection} API. This lack of support also\n * includes not using certain HTTPS features provided via the system:\n * <ul>\n * <li>the HTTPS hostname verifier installed via {@link\n *     javax.net.ssl.HttpsURLConnection#setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)\n *     HttpsURLConnection.setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)}</li>\n * <li>the HTTPS socket factory installed via {@link\n *     javax.net.ssl.HttpsURLConnection#setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)\n *     HttpsURLConnection.setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)}</li>\n * </ul>\n *\n * {@hide}\n ",
  "links" : [ "android.net.http.HttpResponseCache#install", "javax.net.ssl.HttpsURLConnection", "java.net.CookieHandler#setDefault", "javax.net.ssl.HttpsURLConnection#setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier)", "java.net.Authenticator#setDefault", "javax.net.ssl.HttpsURLConnection#setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory)", "java.net.URLStreamHandlerFactory", "java.net.URL#setURLStreamHandlerFactory", "java.net.URL#openConnection" ],
  "variables" : [ {
    "name" : "mCronetEngine",
    "type" : "ExperimentalCronetEngine",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public URLStreamHandler createURLStreamHandler(String protocol)",
    "returnType" : "URLStreamHandler",
    "comment" : "\n     * Returns a {@link CronetHttpURLStreamHandler} for HTTP and HTTPS, and\n     * {@code null} for other protocols.\n     ",
    "links" : [ "org.chromium.net.urlconnection.CronetHttpURLStreamHandler" ]
  } ],
  "methodNames" : [ "public URLStreamHandler createURLStreamHandler(String protocol)" ],
  "variableNames" : [ "mCronetEngine" ]
}