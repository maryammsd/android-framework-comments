{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/telephony/ims/stub/RcsSipOptionsImplBase.java",
  "packageName" : "android.telephony.ims.stub",
  "className" : "RcsSipOptionsImplBase",
  "comment" : "\n * Base implementation for RCS User Capability Exchange using SIP OPTIONS.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_GENERIC_FAILURE",
    "type" : "int",
    "comment" : "\n     * Indicates a SIP response from the remote user other than 200, 480, 408, 404, or 604.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_SUCCESS",
    "type" : "int",
    "comment" : "\n     * Indicates that the remote user responded with a 200 OK response.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_TEMPORARILY_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n     * Indicates that the remote user responded with a 480 TEMPORARY UNAVAILABLE response.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_REQUEST_TIMEOUT",
    "type" : "int",
    "comment" : "\n     * Indicates that the remote user responded with a 408 REQUEST TIMEOUT response.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_NOT_FOUND",
    "type" : "int",
    "comment" : "\n     * Indicates that the remote user responded with a 404 NOT FOUND response.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_DOES_NOT_EXIST_ANYWHERE",
    "type" : "int",
    "comment" : "\n     * Indicates that the remote user responded with a 604 DOES NOT EXIST ANYWHERE response.\n     ",
    "links" : [ ]
  }, {
    "name" : "RESPONSE_BAD_REQUEST",
    "type" : "int",
    "comment" : "\n     * Indicates that the remote user responded with a 400 BAD REQUEST response.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public final void onCapabilityRequestResponse(@SipResponseCode int code, @NonNull String reason, @Nullable RcsContactUceCapability info, int operationToken) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Send the response of a SIP OPTIONS capability exchange to the framework. If {@code code} is\n     * {@link #RESPONSE_SUCCESS}, info must be non-null.\n     * @param code The SIP response code that was sent by the network in response to the request\n     *        sent by {@link #sendCapabilityRequest(Uri, RcsContactUceCapability, int)}.\n     * @param reason The optional SIP response reason sent by the network. If none was sent, this\n     *        should be an empty string.\n     * @param info the contact's UCE capabilities associated with the capability request.\n     * @param operationToken The token associated with the original capability request, set by\n     *        {@link #sendCapabilityRequest(Uri, RcsContactUceCapability, int)}.\n     * @throws ImsException If this {@link RcsSipOptionsImplBase} instance is not currently\n     * connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received the\n     * {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare cases when the\n     * Telephony stack has crashed.\n     ",
    "links" : [ "android.telephony.ims.stub.RcsSipOptionsImplBase", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "#sendCapabilityRequest(Uri", "android.telephony.ims.feature.RcsFeature", "#RESPONSE_SUCCESS" ]
  }, {
    "name" : "public final void onRemoteCapabilityRequest(@NonNull Uri contactUri, @NonNull RcsContactUceCapability remoteInfo, int operationToken) throws ImsException",
    "returnType" : "void",
    "comment" : "\n     * Inform the framework of a query for this device's UCE capabilities.\n     * <p>\n     * The framework will respond via the\n     * {@link #respondToCapabilityRequest(String, RcsContactUceCapability, int)} or\n     * {@link #respondToCapabilityRequestWithError(Uri, int, String, int)} method.\n     * @param contactUri The URI associated with the remote contact that is requesting capabilities.\n     * @param remoteInfo The remote contact's capability information.\n     * @param operationToken An unique operation token that you have generated that will be returned\n     *         by the framework in\n     *         {@link #respondToCapabilityRequest(String, RcsContactUceCapability, int)}.\n     * @throws ImsException If this {@link RcsSipOptionsImplBase} instance is not currently\n     * connected to the framework. This can happen if the {@link RcsFeature} is not\n     * {@link ImsFeature#STATE_READY} and the {@link RcsFeature} has not received the\n     * {@link ImsFeature#onFeatureReady()} callback. This may also happen in rare cases when the\n     * Telephony stack has crashed.\n     ",
    "links" : [ "#respondToCapabilityRequestWithError(Uri", "android.telephony.ims.stub.RcsSipOptionsImplBase", "android.telephony.ims.feature.ImsFeature#onFeatureReady()", "android.telephony.ims.feature.ImsFeature#STATE_READY", "android.telephony.ims.feature.RcsFeature", "#respondToCapabilityRequest(String" ]
  }, {
    "name" : "public void sendCapabilityRequest(@NonNull Uri contactUri, @NonNull RcsContactUceCapability capabilities, int operationToken)",
    "returnType" : "void",
    "comment" : "\n     * Push one's own capabilities to a remote user via the SIP OPTIONS presence exchange mechanism\n     * in order to receive the capabilities of the remote user in response.\n     * <p>\n     * The implementer must call\n     * {@link #onCapabilityRequestResponse(int, String, RcsContactUceCapability, int)} to send the\n     * response of this query back to the framework.\n     * @param contactUri The URI of the remote user that we wish to get the capabilities of.\n     * @param capabilities The capabilities of this device to send to the remote user.\n     * @param operationToken A token generated by the framework that will be passed through\n     * {@link #onCapabilityRequestResponse(int, String, RcsContactUceCapability, int)} when this\n     *         operation has succeeded.\n     ",
    "links" : [ "#onCapabilityRequestResponse(int" ]
  }, {
    "name" : "public void respondToCapabilityRequest(@NonNull String contactUri, @NonNull RcsContactUceCapability ownCapabilities, int operationToken)",
    "returnType" : "void",
    "comment" : "\n     * Respond to a remote capability request from the contact specified with the capabilities of\n     * this device.\n     * <p>\n     * The framework will use the same token and uri as what was passed in to\n     * {@link #onRemoteCapabilityRequest(Uri, RcsContactUceCapability, int)}.\n     * @param contactUri The URI of the remote contact.\n     * @param ownCapabilities The capabilities of this device.\n     * @param operationToken The token generated by the framework that this service obtained when\n     *         {@link #onRemoteCapabilityRequest(Uri, RcsContactUceCapability, int)} was called.\n     ",
    "links" : [ "#onRemoteCapabilityRequest(Uri" ]
  }, {
    "name" : "public void respondToCapabilityRequestWithError(@NonNull Uri contactUri, @SipResponseCode int code, @NonNull String reason, int operationToken)",
    "returnType" : "void",
    "comment" : "\n     * Respond to a remote capability request from the contact specified with the specified error.\n     * <p>\n     * The framework will use the same token and uri as what was passed in to\n     * {@link #onRemoteCapabilityRequest(Uri, RcsContactUceCapability, int)}.\n     * @param contactUri A URI containing the remote contact.\n     * @param code The SIP response code to respond with.\n     * @param reason A non-null String containing the reason associated with the SIP code.\n     * @param operationToken The token provided by the framework when\n     *         {@link #onRemoteCapabilityRequest(Uri, RcsContactUceCapability, int)} was called.\n     ",
    "links" : [ "#onRemoteCapabilityRequest(Uri" ]
  } ],
  "variableNames" : [ "LOG_TAG", "RESPONSE_GENERIC_FAILURE", "RESPONSE_SUCCESS", "RESPONSE_TEMPORARILY_UNAVAILABLE", "RESPONSE_REQUEST_TIMEOUT", "RESPONSE_NOT_FOUND", "RESPONSE_DOES_NOT_EXIST_ANYWHERE", "RESPONSE_BAD_REQUEST" ],
  "methodNames" : [ "public final void onCapabilityRequestResponse(@SipResponseCode int code, @NonNull String reason, @Nullable RcsContactUceCapability info, int operationToken) throws ImsException", "public final void onRemoteCapabilityRequest(@NonNull Uri contactUri, @NonNull RcsContactUceCapability remoteInfo, int operationToken) throws ImsException", "public void sendCapabilityRequest(@NonNull Uri contactUri, @NonNull RcsContactUceCapability capabilities, int operationToken)", "public void respondToCapabilityRequest(@NonNull String contactUri, @NonNull RcsContactUceCapability ownCapabilities, int operationToken)", "public void respondToCapabilityRequestWithError(@NonNull Uri contactUri, @SipResponseCode int code, @NonNull String reason, int operationToken)" ]
}