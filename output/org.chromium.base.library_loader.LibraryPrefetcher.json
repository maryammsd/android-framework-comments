{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/base/library_loader/LibraryPrefetcher.java",
  "packageName" : "org.chromium.base.library_loader",
  "className" : "LibraryPrefetcher",
  "comment" : "\n * Handles native library prefetch.\n *\n * See also base/android/library_loader/library_prefetcher_hooks.cc, which contains\n * the native counterpart to this class.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sPrefetchLibraryHasBeenCalled",
    "type" : "AtomicBoolean",
    "comment" : " One-way switch that becomes true once {@link asyncPrefetchLibrariesToMemory} has been called.",
    "links" : [ "asyncPrefetchLibrariesToMemory" ]
  } ],
  "methods" : [ {
    "name" : "public static void asyncPrefetchLibrariesToMemory()",
    "returnType" : "void",
    "comment" : "\n     * Prefetches the native libraries in a background thread.\n     *\n     * Launches a task that, through a short-lived forked process, reads a\n     * part of each page of the native library.  This is done to warm up the\n     * page cache, turning hard page faults into soft ones.\n     *\n     * This is done this way, as testing shows that fadvise(FADV_WILLNEED) is\n     * detrimental to the startup time.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void asyncPrefetchLibrariesToMemory()" ],
  "variableNames" : [ "TAG", "sPrefetchLibraryHasBeenCalled" ]
}