{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/nio/channels/NetworkChannel.java",
  "packageName" : "java.nio.channels",
  "className" : "NetworkChannel",
  "comment" : "",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " NetworkChannel bind(SocketAddress local) throws IOException",
    "returnType" : "NetworkChannel",
    "comment" : "\n     * Binds the channel's socket to a local address.\n     *\n     * <p> This method is used to establish an association between the socket and\n     * a local address. Once an association is established then the socket remains\n     * bound until the channel is closed. If the {@code local} parameter has the\n     * value {@code null} then the socket will be bound to an address that is\n     * assigned automatically.\n     *\n     * @param   local\n     *          The address to bind the socket, or {@code null} to bind the socket\n     *          to an automatically assigned socket address\n     *\n     * @return  This channel\n     *\n     * @throws  AlreadyBoundException\n     *          If the socket is already bound\n     * @throws  UnsupportedAddressTypeException\n     *          If the type of the given address is not supported\n     * @throws  ClosedChannelException\n     *          If the channel is closed\n     * @throws  IOException\n     *          If some other I/O error occurs\n     * @throws  SecurityException\n     *          If a security manager is installed and it denies an unspecified\n     *          permission. An implementation of this interface should specify\n     *          any required permissions.\n     *\n     * @see #getLocalAddress\n     ",
    "links" : [ ]
  }, {
    "name" : " SocketAddress getLocalAddress() throws IOException",
    "returnType" : "SocketAddress",
    "comment" : "\n     * Returns the socket address that this channel's socket is bound to.\n     *\n     * <p> Where the channel is {@link #bind bound} to an Internet Protocol\n     * socket address then the return value from this method is of type {@link\n     * java.net.InetSocketAddress}.\n     *\n     * @return  The socket address that the socket is bound to, or {@code null}\n     *          if the channel's socket is not bound\n     *\n     * @throws  ClosedChannelException\n     *          If the channel is closed\n     * @throws  IOException\n     *          If an I/O error occurs\n     ",
    "links" : [ "#bind", "java.net.InetSocketAddress" ]
  }, {
    "name" : " NetworkChannel setOption(SocketOption<T> name, T value) throws IOException",
    "returnType" : "NetworkChannel",
    "comment" : "\n     * Sets the value of a socket option.\n     *\n     * @param   <T>\n     *          The type of the socket option value\n     * @param   name\n     *          The socket option\n     * @param   value\n     *          The value of the socket option. A value of {@code null} may be\n     *          a valid value for some socket options.\n     *\n     * @return  This channel\n     *\n     * @throws  UnsupportedOperationException\n     *          If the socket option is not supported by this channel\n     * @throws  IllegalArgumentException\n     *          If the value is not a valid value for this socket option\n     * @throws  ClosedChannelException\n     *          If this channel is closed\n     * @throws  IOException\n     *          If an I/O error occurs\n     *\n     * @see java.net.StandardSocketOptions\n     ",
    "links" : [ ]
  }, {
    "name" : " T getOption(SocketOption<T> name) throws IOException",
    "returnType" : "T",
    "comment" : "\n     * Returns the value of a socket option.\n     *\n     * @param   <T>\n     *          The type of the socket option value\n     * @param   name\n     *          The socket option\n     *\n     * @return  The value of the socket option. A value of {@code null} may be\n     *          a valid value for some socket options.\n     *\n     * @throws  UnsupportedOperationException\n     *          If the socket option is not supported by this channel\n     * @throws  ClosedChannelException\n     *          If this channel is closed\n     * @throws  IOException\n     *          If an I/O error occurs\n     *\n     * @see java.net.StandardSocketOptions\n     ",
    "links" : [ ]
  }, {
    "name" : " Set<SocketOption<?>> supportedOptions()",
    "returnType" : "Set<SocketOption<?>>",
    "comment" : "\n     * Returns a set of the socket options supported by this channel.\n     *\n     * <p> This method will continue to return the set of options even after the\n     * channel has been closed.\n     *\n     * @return  A set of the socket options supported by this channel\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ " NetworkChannel bind(SocketAddress local) throws IOException", " SocketAddress getLocalAddress() throws IOException", " NetworkChannel setOption(SocketOption<T> name, T value) throws IOException", " T getOption(SocketOption<T> name) throws IOException", " Set<SocketOption<?>> supportedOptions()" ],
  "variableNames" : [ ]
}