{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/wifi/RttManager.java",
  "packageName" : "android.net.wifi",
  "className" : "RttParams",
  "comment" : " specifies parameters for RTT request ",
  "variables" : [ {
    "name" : "deviceType",
    "type" : "int",
    "comment" : "\n         * type of destination device being ranged\n         * currently only support RTT_PEER_TYPE_AP\n         * Range:RTT_PEER_TYPE_xxxx Default value:RTT_PEER_TYPE_AP\n         ",
    "links" : [ ]
  }, {
    "name" : "requestType",
    "type" : "int",
    "comment" : "\n         * type of RTT measurement method. Need check scan result and RttCapabilities first\n         * Range: RTT_TYPE_ONE_SIDED or RTT_TYPE_TWO_SIDED\n         * Default value: RTT_TYPE_ONE_SIDED\n         ",
    "links" : [ ]
  }, {
    "name" : "secure",
    "type" : "boolean",
    "comment" : "\n         * Whether the secure RTT protocol needs to be used for ranging this peer device.\n         ",
    "links" : [ ]
  }, {
    "name" : "bssid",
    "type" : "String",
    "comment" : "\n         * mac address of the device being ranged\n         * Default value: null\n         ",
    "links" : [ ]
  }, {
    "name" : "frequency",
    "type" : "int",
    "comment" : "\n         * The primary control channel over which the client is\n         * communicating with the AP.Same as ScanResult.frequency\n         * Default value: 0\n         ",
    "links" : [ ]
  }, {
    "name" : "channelWidth",
    "type" : "int",
    "comment" : "\n         * channel width of the destination AP. Same as ScanResult.channelWidth\n         * Default value: 0\n         ",
    "links" : [ ]
  }, {
    "name" : "centerFreq0",
    "type" : "int",
    "comment" : "\n         * Not used if the AP bandwidth is 20 MHz\n         * If the AP use 40, 80 or 160 MHz, this is the center frequency\n         * if the AP use 80 + 80 MHz, this is the center frequency of the first segment\n         * same as ScanResult.centerFreq0\n         * Default value: 0\n         ",
    "links" : [ ]
  }, {
    "name" : "centerFreq1",
    "type" : "int",
    "comment" : "\n          * Only used if the AP bandwidth is 80 + 80 MHz\n          * if the AP use 80 + 80 MHz, this is the center frequency of the second segment\n          * same as ScanResult.centerFreq1\n          * Default value: 0\n          ",
    "links" : [ ]
  }, {
    "name" : "num_samples",
    "type" : "int",
    "comment" : "\n         * number of samples to be taken\n         * @deprecated Use the new {@link android.net.wifi.RttManager.RttParams#numSamplesPerBurst}\n         ",
    "links" : [ "android.net.wifi.RttManager.RttParams#numSamplesPerBurst" ]
  }, {
    "name" : "num_retries",
    "type" : "int",
    "comment" : "\n         * number of retries if a sample fails\n         * @deprecated\n         * Use {@link android.net.wifi.RttManager.RttParams#numRetriesPerMeasurementFrame} API.\n         ",
    "links" : [ "android.net.wifi.RttManager.RttParams#numRetriesPerMeasurementFrame" ]
  }, {
    "name" : "numberBurst",
    "type" : "int",
    "comment" : " Number of burst in exp , 2^x. 0 means single shot measurement, range 0-15\n         * Currently only single shot is supported\n         * Default value: 0\n         ",
    "links" : [ ]
  }, {
    "name" : "interval",
    "type" : "int",
    "comment" : "\n         * valid only if numberBurst > 1, interval between burst(100ms).\n         * Range : 0-31, 0--means no specific\n         * Default value: 0\n         ",
    "links" : [ ]
  }, {
    "name" : "numSamplesPerBurst",
    "type" : "int",
    "comment" : "\n         * number of samples to be taken in one burst\n         * Range: 1-31\n         * Default value: 8\n         ",
    "links" : [ ]
  }, {
    "name" : "numRetriesPerMeasurementFrame",
    "type" : "int",
    "comment" : " number of retries for each measurement frame if a sample fails\n         *  Only used by single side RTT,\n         *  Range 0 - 3 Default value: 0\n         ",
    "links" : [ ]
  }, {
    "name" : "numRetriesPerFTMR",
    "type" : "int",
    "comment" : "\n         * number of retries for FTMR frame (control frame) if it fails.\n         * Only used by 80211MC double side RTT\n         * Range: 0-3  Default Value : 0\n         ",
    "links" : [ ]
  }, {
    "name" : "LCIRequest",
    "type" : "boolean",
    "comment" : "\n         * Request LCI information, only available when choose double side RTT measurement\n         * need check RttCapabilties first.\n         * Default value: false\n         * ",
    "links" : [ ]
  }, {
    "name" : "LCRRequest",
    "type" : "boolean",
    "comment" : "\n         * Request LCR information, only available when choose double side RTT measurement\n         * need check RttCapabilties first.\n         * Default value: false\n         * ",
    "links" : [ ]
  }, {
    "name" : "burstTimeout",
    "type" : "int",
    "comment" : "\n         * Timeout for each burst, (250 * 2^x) us,\n         * Range 1-11 and 15. 15 means no control Default value: 15\n         * ",
    "links" : [ ]
  }, {
    "name" : "preamble",
    "type" : "int",
    "comment" : " preamble used for RTT measurement\n         *  Range: PREAMBLE_LEGACY, PREAMBLE_HT, PREAMBLE_VHT\n         *  Default value: PREAMBLE_HT\n         ",
    "links" : [ ]
  }, {
    "name" : "bandwidth",
    "type" : "int",
    "comment" : " bandWidth used for RTT measurement.User need verify the highest BW the destination\n         * support (from scan result etc) before set this value. Wider channels result usually give\n         * better accuracy. However, the frame loss can increase too.\n         * should be one of RTT_BW_5_SUPPORT to RTT_BW_160_SUPPORT. However, need check\n         * RttCapabilities firstto verify HW support this bandwidth.\n         * Default value:RTT_BW_20_SUPPORT\n         ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n         * {@hide}\n         ",
    "links" : [ ]
  } ],
  "variableNames" : [ "deviceType", "requestType", "secure", "bssid", "frequency", "channelWidth", "centerFreq0", "centerFreq1", "num_samples", "num_retries", "numberBurst", "interval", "numSamplesPerBurst", "numRetriesPerMeasurementFrame", "numRetriesPerFTMR", "LCIRequest", "LCRRequest", "burstTimeout", "preamble", "bandwidth" ],
  "methodNames" : [ "public String toString()" ]
}