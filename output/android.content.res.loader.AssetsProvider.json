{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/res/loader/AssetsProvider.java",
  "packageName" : "android.content.res.loader",
  "className" : "AssetsProvider",
  "comment" : "\n * Provides callbacks that allow for the value of a file-based resources or assets of a\n * {@link ResourcesProvider} to be specified or overridden.\n ",
  "links" : [ "android.content.res.loader.ResourcesProvider" ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " AssetFileDescriptor loadAssetFd(@NonNull String path, int accessMode)",
    "returnType" : "AssetFileDescriptor",
    "comment" : "\n     * Callback that allows the value of a file-based resources or asset to be specified or\n     * overridden.\n     *\n     * <p>The system will take ownership of the file descriptor returned from this method, so\n     * {@link ParcelFileDescriptor#dup() dup} the file descriptor before returning if the system\n     * should not own it.\n     *\n     * <p>There are two situations in which this method will be called:\n     * <ul>\n     * <li>AssetManager is queried for an InputStream of an asset using APIs like\n     * {@link AssetManager#open} and {@link AssetManager#openXmlResourceParser}.\n     * <li>AssetManager is resolving the value of a file-based resource provided by the\n     * {@link ResourcesProvider} this instance is associated with.\n     * </ul>\n     *\n     * <p>If the value retrieved from this callback is null, AssetManager will attempt to find the\n     * file-based resource or asset within the APK provided by the ResourcesProvider this instance\n     * is associated with.\n     *\n     * @param path the asset path being loaded\n     * @param accessMode the {@link AssetManager} access mode\n     *\n     * @see AssetManager#open\n     ",
    "links" : [ "android.os.ParcelFileDescriptor#dup()", "android.content.res.AssetManager", "android.content.res.AssetManager#openXmlResourceParser", "android.content.res.AssetManager#open", "android.content.res.loader.ResourcesProvider" ]
  } ],
  "methodNames" : [ " AssetFileDescriptor loadAssetFd(@NonNull String path, int accessMode)" ],
  "variableNames" : [ ]
}