{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/soundtrigger/SoundTriggerDetectionService.java",
  "packageName" : "android.media.soundtrigger",
  "className" : "SoundTriggerDetectionService",
  "comment" : "\n * A service that allows interaction with the actual sound trigger detection on the system.\n *\n * <p> Sound trigger detection refers to detectors that match generic sound patterns that are\n * not voice-based. The voice-based recognition models should utilize the {@link\n * android.service.voice.VoiceInteractionService} instead. Access to this class needs to be\n * protected by the {@value android.Manifest.permission.BIND_SOUND_TRIGGER_DETECTION_SERVICE}\n * permission granted only to the system.\n *\n * <p>This service has to be explicitly started by an app, the system does not scan for and start\n * these services.\n *\n * <p>If an operation ({@link #onGenericRecognitionEvent}, {@link #onError},\n * {@link #onRecognitionPaused}, {@link #onRecognitionResumed}) is triggered the service is\n * considered as running in the foreground. Once the operation is processed the service should call\n * {@link #operationFinished(UUID, int)}. If this does not happen in\n * {@link SoundTriggerManager#getDetectionServiceOperationsTimeout()} milliseconds\n * {@link #onStopOperation(UUID, Bundle, int)} is called and the service is unbound.\n *\n * <p>The total amount of operations per day might be limited.\n *\n * @hide\n ",
  "links" : [ "#operationFinished(UUID", "android.media.soundtrigger.SoundTriggerManager#getDetectionServiceOperationsTimeout()", "android.service.voice.VoiceInteractionService", "#onError", "#onStopOperation(UUID", "#onRecognitionPaused", "#onGenericRecognitionEvent", "#onRecognitionResumed" ],
  "variables" : [ {
    "name" : "LOG_TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mClients",
    "type" : "ArrayMap<UUID, ISoundTriggerDetectionServiceClient>",
    "comment" : "\n     * Client indexed by model uuid. This is needed for the {@link #operationFinished(UUID, int)}\n     * callbacks.\n     ",
    "links" : [ "#operationFinished(UUID" ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected final void attachBaseContext(Context base)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "private void setClient(@NonNull UUID uuid, @Nullable Bundle params, @NonNull ISoundTriggerDetectionServiceClient client)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void removeClient(@NonNull UUID uuid, @Nullable Bundle params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onConnected(@NonNull UUID uuid, @Nullable Bundle params)",
    "returnType" : "void",
    "comment" : "\n     * The system has connected to this service for the recognition registered for the model\n     * {@code uuid}.\n     *\n     * <p> This is called before any operations are delivered.\n     *\n     * @param uuid   The {@code uuid} of the model the recognitions is registered for\n     * @param params The {@code params} passed when the recognition was started\n     ",
    "links" : [ ]
  }, {
    "name" : "public void onDisconnected(@NonNull UUID uuid, @Nullable Bundle params)",
    "returnType" : "void",
    "comment" : "\n     * The system has disconnected from this service for the recognition registered for the model\n     * {@code uuid}.\n     *\n     * <p>Once this is called {@link #operationFinished} cannot be called anymore for\n     * {@code uuid}.\n     *\n     * <p> {@link #onConnected(UUID, Bundle)} is called before any further operations are delivered.\n     *\n     * @param uuid   The {@code uuid} of the model the recognitions is registered for\n     * @param params The {@code params} passed when the recognition was started\n     ",
    "links" : [ "#operationFinished", "#onConnected(UUID" ]
  }, {
    "name" : "public void onGenericRecognitionEvent(@NonNull UUID uuid, @Nullable Bundle params, int opId, @NonNull SoundTrigger.RecognitionEvent event)",
    "returnType" : "void",
    "comment" : "\n     * A new generic sound trigger event has been detected.\n     *\n     * @param uuid   The {@code uuid} of the model the recognition is registered for\n     * @param params The {@code params} passed when the recognition was started\n     * @param opId The id of this operation. Once the operation is done, this service needs to call\n     *             {@link #operationFinished(UUID, int)}\n     * @param event The event that has been detected\n     ",
    "links" : [ "#operationFinished(UUID" ]
  }, {
    "name" : "public void onError(@NonNull UUID uuid, @Nullable Bundle params, int opId, int status)",
    "returnType" : "void",
    "comment" : "\n     * A error has been detected.\n     *\n     * @param uuid   The {@code uuid} of the model the recognition is registered for\n     * @param params The {@code params} passed when the recognition was started\n     * @param opId The id of this operation. Once the operation is done, this service needs to call\n     *             {@link #operationFinished(UUID, int)}\n     * @param status The error code detected\n     ",
    "links" : [ "#operationFinished(UUID" ]
  }, {
    "name" : "public abstract void onStopOperation(@NonNull UUID uuid, @Nullable Bundle params, int opId)",
    "returnType" : "void",
    "comment" : "\n     * An operation took too long and should be stopped.\n     *\n     * @param uuid   The {@code uuid} of the model the recognition is registered for\n     * @param params The {@code params} passed when the recognition was started\n     * @param opId The id of the operation that took too long\n     ",
    "links" : [ ]
  }, {
    "name" : "public final void operationFinished(@Nullable UUID uuid, int opId)",
    "returnType" : "void",
    "comment" : "\n     * Tell that the system that an operation has been fully processed.\n     *\n     * @param uuid The {@code uuid} of the model the recognition is registered for\n     * @param opId The id of the operation that is processed\n     ",
    "links" : [ ]
  }, {
    "name" : "public final IBinder onBind(Intent intent)",
    "returnType" : "IBinder",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean onUnbind(Intent intent)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected final void attachBaseContext(Context base)", "private void setClient(@NonNull UUID uuid, @Nullable Bundle params, @NonNull ISoundTriggerDetectionServiceClient client)", "private void removeClient(@NonNull UUID uuid, @Nullable Bundle params)", "public void onConnected(@NonNull UUID uuid, @Nullable Bundle params)", "public void onDisconnected(@NonNull UUID uuid, @Nullable Bundle params)", "public void onGenericRecognitionEvent(@NonNull UUID uuid, @Nullable Bundle params, int opId, @NonNull SoundTrigger.RecognitionEvent event)", "public void onError(@NonNull UUID uuid, @Nullable Bundle params, int opId, int status)", "public abstract void onStopOperation(@NonNull UUID uuid, @Nullable Bundle params, int opId)", "public final void operationFinished(@Nullable UUID uuid, int opId)", "public final IBinder onBind(Intent intent)", "public boolean onUnbind(Intent intent)" ],
  "variableNames" : [ "LOG_TAG", "DEBUG", "mLock", "mClients", "mHandler" ]
}