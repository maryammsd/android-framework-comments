{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/LocaleUtility.java",
  "packageName" : "android.icu.impl",
  "className" : "LocaleUtility",
  "comment" : "\n * A class to hold utility functions missing from java.util.Locale.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public static Locale getLocaleFromName(String name)",
    "returnType" : "Locale",
    "comment" : "\n     * A helper function to convert a string of the form\n     * aa_BB_CC to a locale object.  Why isn't this in Locale?\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isFallbackOf(String parent, String child)",
    "returnType" : "boolean",
    "comment" : "\n     * Compare two locale strings of the form aa_BB_CC, and\n     * return true if parent is a 'strict' fallback of child, that is,\n     * if child =~ \"^parent(_.+)*\" (roughly).\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean isFallbackOf(Locale parent, Locale child)",
    "returnType" : "boolean",
    "comment" : "\n     * Compare two locales, and return true if the parent is a\n     * 'strict' fallback of the child (parent string is a fallback\n     * of child string).\n     ",
    "links" : [ ]
  }, {
    "name" : "public static Locale fallback(Locale loc)",
    "returnType" : "Locale",
    "comment" : "\n     * Fallback from the given locale name by removing the rightmost _-delimited\n     * element. If there is none, return the root locale (\"\", \"\", \"\"). If this\n     * is the root locale, return null. NOTE: The string \"root\" is not\n     * recognized; do not use it.\n     * \n     * @return a new Locale that is a fallback from the given locale, or null.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static Locale getLocaleFromName(String name)", "public static boolean isFallbackOf(String parent, String child)", "public static boolean isFallbackOf(Locale parent, Locale child)", "public static Locale fallback(Locale loc)" ],
  "variableNames" : [ ]
}