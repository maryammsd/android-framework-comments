{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/app/ForegroundServiceTypePolicy.java",
  "packageName" : "android.app",
  "className" : "ForegroundServiceTypePolicy",
  "comment" : "\n * This class enforces the policies around the foreground service types.\n *\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEBUG_FOREGROUND_SERVICE_TYPE_POLICY",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "FGS_TYPE_NONE_DEPRECATION_CHANGE_ID",
    "type" : "long",
    "comment" : "\n     * The FGS type enforcement:\n     * deprecating the {@link android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_NONE}.\n     *\n     * <p>Starting a FGS with this type (equivalent of no type) from apps with\n     * targetSdkVersion {@link android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE} or later will\n     * result in a warning in the log.</p>\n     *\n     * @hide\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_NONE" ]
  }, {
    "name" : "FGS_TYPE_NONE_DISABLED_CHANGE_ID",
    "type" : "long",
    "comment" : "\n     * The FGS type enforcement:\n     * disabling the {@link android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_NONE}.\n     *\n     * <p>Starting a FGS with this type (equivalent of no type) from apps with\n     * targetSdkVersion {@link android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE} or later will\n     * result in an exception.</p>\n     *\n     * @hide\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_NONE" ]
  }, {
    "name" : "FGS_TYPE_DATA_SYNC_DEPRECATION_CHANGE_ID",
    "type" : "long",
    "comment" : "\n     * The FGS type enforcement:\n     * deprecating the {@link android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_DATA_SYNC}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_DATA_SYNC" ]
  }, {
    "name" : "FGS_TYPE_DATA_SYNC_DISABLED_CHANGE_ID",
    "type" : "long",
    "comment" : "\n     * The FGS type enforcement:\n     * disabling the {@link android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_DATA_SYNC}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_DATA_SYNC" ]
  }, {
    "name" : "FGS_TYPE_PERMISSION_CHANGE_ID",
    "type" : "long",
    "comment" : "\n     * The FGS type enforcement: Starting a FGS from apps with targetSdkVersion\n     * {@link android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE} or later but without the required\n     * permissions associated with the FGS type will result in a SecurityException.\n     *\n     * @hide\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_PREFIX",
    "type" : "String",
    "comment" : "\n     * The prefix for the feature flags of the permission enforcement.\n     ",
    "links" : [ ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_DATA_SYNC",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_DATA_SYNC},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_DATA_SYNC" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_MEDIA_PLAYBACK",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK", "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_PHONE_CALL",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_PHONE_CALL},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_PHONE_CALL" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_LOCATION",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_LOCATION},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_LOCATION" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_CONNECTED_DEVICE",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_CONNECTED_DEVICE},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_CONNECTED_DEVICE" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_MEDIA_PROJECTION",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_CAMERA",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_CAMERA},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_CAMERA" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_MICROPHONE",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MICROPHONE},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MICROPHONE" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_HEALTH",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_HEALTH},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_HEALTH" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_REMOTE_MESSAGING",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_REMOTE_MESSAGING},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_REMOTE_MESSAGING" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_SYSTEM_EXEMPTED",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_SYSTEM_EXEMPTED},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_SYSTEM_EXEMPTED" ]
  }, {
    "name" : "FGS_TYPE_PERM_ENFORCEMENT_FLAG_SPECIAL_USE",
    "type" : "String",
    "comment" : "\n     * The feature flag of the permission enforcement for\n     * {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_SPECIAL_USE},\n     * in the namespace of {@link DeviceConfig#NAMESPACE_ACTIVITY_MANAGER}.\n     ",
    "links" : [ "android.provider.DeviceConfig#NAMESPACE_ACTIVITY_MANAGER", "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_SPECIAL_USE" ]
  }, {
    "name" : "FGS_TYPE_POLICY_MANIFEST",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MANIFEST}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MANIFEST" ]
  }, {
    "name" : "FGS_TYPE_POLICY_NONE",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_NONE}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_NONE" ]
  }, {
    "name" : "FGS_TYPE_POLICY_DATA_SYNC",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_DATA_SYNC}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_DATA_SYNC" ]
  }, {
    "name" : "FGS_TYPE_POLICY_MEDIA_PLAYBACK",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PLAYBACK" ]
  }, {
    "name" : "FGS_TYPE_POLICY_PHONE_CALL",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_PHONE_CALL}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_PHONE_CALL" ]
  }, {
    "name" : "FGS_TYPE_POLICY_LOCATION",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_LOCATION}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_LOCATION" ]
  }, {
    "name" : "FGS_TYPE_POLICY_CONNECTED_DEVICE",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_CONNECTED_DEVICE}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_CONNECTED_DEVICE" ]
  }, {
    "name" : "FGS_TYPE_POLICY_MEDIA_PROJECTION",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PROJECTION" ]
  }, {
    "name" : "FGS_TYPE_POLICY_CAMERA",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_CAMERA}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_CAMERA" ]
  }, {
    "name" : "FGS_TYPE_POLICY_MICROPHONE",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MICROPHONE}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MICROPHONE" ]
  }, {
    "name" : "FGS_TYPE_POLICY_HEALTH",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_HEALTH}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_HEALTH" ]
  }, {
    "name" : "FGS_TYPE_POLICY_REMOTE_MESSAGING",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_REMOTE_MESSAGING}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_REMOTE_MESSAGING" ]
  }, {
    "name" : "FGS_TYPE_POLICY_SYSTEM_EXEMPTED",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_SYSTEM_EXEMPTED}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_SYSTEM_EXEMPTED" ]
  }, {
    "name" : "FGS_TYPE_POLICY_SHORT_SERVICE",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_SHORT_SERVICE}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_SHORT_SERVICE" ]
  }, {
    "name" : "FGS_TYPE_POLICY_FILE_MANAGEMENT",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_FILE_MANAGEMENT}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_FILE_MANAGEMENT" ]
  }, {
    "name" : "FGS_TYPE_POLICY_MEDIA_PROCESSING",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_MEDIA_PROCESSING" ]
  }, {
    "name" : "FGS_TYPE_POLICY_SPECIAL_USE",
    "type" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * The policy for the {@link ServiceInfo#FOREGROUND_SERVICE_TYPE_SPECIAL_USE}.\n     *\n     * @hide\n     ",
    "links" : [ "android.content.pm.ServiceInfo#FOREGROUND_SERVICE_TYPE_SPECIAL_USE" ]
  }, {
    "name" : "FGS_TYPE_POLICY_CHECK_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * Foreground service policy check result code: this one is not actually being used.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FGS_TYPE_POLICY_CHECK_OK",
    "type" : "int",
    "comment" : "\n     * Foreground service policy check result code: okay to go.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FGS_TYPE_POLICY_CHECK_DEPRECATED",
    "type" : "int",
    "comment" : "\n     * Foreground service policy check result code: this foreground service type is deprecated.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FGS_TYPE_POLICY_CHECK_DISABLED",
    "type" : "int",
    "comment" : "\n     * Foreground service policy check result code: this foreground service type is disabled.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FGS_TYPE_POLICY_CHECK_PERMISSION_DENIED_PERMISSIVE",
    "type" : "int",
    "comment" : "\n     * Foreground service policy check result code: the caller doesn't have permission to start\n     * foreground service with this type, but the policy is permissive.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FGS_TYPE_POLICY_CHECK_PERMISSION_DENIED_ENFORCED",
    "type" : "int",
    "comment" : "\n     * Foreground service policy check result code: the caller doesn't have permission to start\n     * foreground service with this type, and the policy is enforced.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "FGS_TYPE_FG_PERM_ENFORCEMENT_FLAG",
    "type" : "String",
    "comment" : "\n     * Whether or not to require that app to have actual access to certain foreground only\n     * permissions before starting the foreground service.\n     *\n     * <p>\n     * Examples here are microphone, camera and fg location related permissions.\n     * When the user grants the permission, its permission state is set to \"granted\",\n     * but the actual capability to access these sensors, is to be evaluated according to\n     * its process state. The Android {@link android.os.Build.VERSION_CODES#R} introduced\n     * the while-in-use permission, basically the background-started FGS will not have access\n     * to these sensors. In this context, there is no legitimate reasons to start a FGS from\n     * the background with these types. This flag controls the behavior of the enforcement,\n     * when it's enabled, in the aforementioned case, the FGS start will result in\n     * a SecurityException. </p>\n     ",
    "links" : [ "android.os.Build.VERSION_CODES#R" ]
  }, {
    "name" : "DEFAULT_FGS_TYPE_FG_PERM_ENFORCEMENT_FLAG_VALUE",
    "type" : "boolean",
    "comment" : "\n     * The default value to the {@link #FGS_TYPE_FG_PERM_ENFORCEMENT_FLAG}.\n     ",
    "links" : [ "#FGS_TYPE_FG_PERM_ENFORCEMENT_FLAG" ]
  }, {
    "name" : "sDefaultForegroundServiceTypePolicy",
    "type" : "ForegroundServiceTypePolicy",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public abstract ForegroundServiceTypePolicyInfo getForegroundServiceTypePolicyInfo(@ForegroundServiceType int type, @ForegroundServiceType int defaultToType)",
    "returnType" : "ForegroundServiceTypePolicyInfo",
    "comment" : "\n     * @return The policy info for the given type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract int checkForegroundServiceTypePolicy(@NonNull Context context, @NonNull String packageName, int callerUid, int callerPid, boolean allowWhileInUse, @NonNull ForegroundServiceTypePolicyInfo policy)",
    "returnType" : "int",
    "comment" : "\n     * Run check on the foreground service type policy for the given uid/pid\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public abstract void updatePermissionEnforcementFlagIfNecessary(@NonNull String flag)",
    "returnType" : "void",
    "comment" : "\n     * Run the given {@code policyFunctor} on the matching policy, if the flag is known\n     * to the policy.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static ForegroundServiceTypePolicy getDefaultPolicy()",
    "returnType" : "ForegroundServiceTypePolicy",
    "comment" : "\n     * Return the default policy for FGS type.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean isFgsTypeFgPermissionEnforcementEnabled()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public abstract ForegroundServiceTypePolicyInfo getForegroundServiceTypePolicyInfo(@ForegroundServiceType int type, @ForegroundServiceType int defaultToType)", "public abstract int checkForegroundServiceTypePolicy(@NonNull Context context, @NonNull String packageName, int callerUid, int callerPid, boolean allowWhileInUse, @NonNull ForegroundServiceTypePolicyInfo policy)", "public abstract void updatePermissionEnforcementFlagIfNecessary(@NonNull String flag)", "public static ForegroundServiceTypePolicy getDefaultPolicy()", "private static boolean isFgsTypeFgPermissionEnforcementEnabled()" ],
  "variableNames" : [ "TAG", "DEBUG_FOREGROUND_SERVICE_TYPE_POLICY", "FGS_TYPE_NONE_DEPRECATION_CHANGE_ID", "FGS_TYPE_NONE_DISABLED_CHANGE_ID", "FGS_TYPE_DATA_SYNC_DEPRECATION_CHANGE_ID", "FGS_TYPE_DATA_SYNC_DISABLED_CHANGE_ID", "FGS_TYPE_PERMISSION_CHANGE_ID", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_PREFIX", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_DATA_SYNC", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_MEDIA_PLAYBACK", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_PHONE_CALL", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_LOCATION", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_CONNECTED_DEVICE", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_MEDIA_PROJECTION", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_CAMERA", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_MICROPHONE", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_HEALTH", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_REMOTE_MESSAGING", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_SYSTEM_EXEMPTED", "FGS_TYPE_PERM_ENFORCEMENT_FLAG_SPECIAL_USE", "FGS_TYPE_POLICY_MANIFEST", "FGS_TYPE_POLICY_NONE", "FGS_TYPE_POLICY_DATA_SYNC", "FGS_TYPE_POLICY_MEDIA_PLAYBACK", "FGS_TYPE_POLICY_PHONE_CALL", "FGS_TYPE_POLICY_LOCATION", "FGS_TYPE_POLICY_CONNECTED_DEVICE", "FGS_TYPE_POLICY_MEDIA_PROJECTION", "FGS_TYPE_POLICY_CAMERA", "FGS_TYPE_POLICY_MICROPHONE", "FGS_TYPE_POLICY_HEALTH", "FGS_TYPE_POLICY_REMOTE_MESSAGING", "FGS_TYPE_POLICY_SYSTEM_EXEMPTED", "FGS_TYPE_POLICY_SHORT_SERVICE", "FGS_TYPE_POLICY_FILE_MANAGEMENT", "FGS_TYPE_POLICY_MEDIA_PROCESSING", "FGS_TYPE_POLICY_SPECIAL_USE", "FGS_TYPE_POLICY_CHECK_UNKNOWN", "FGS_TYPE_POLICY_CHECK_OK", "FGS_TYPE_POLICY_CHECK_DEPRECATED", "FGS_TYPE_POLICY_CHECK_DISABLED", "FGS_TYPE_POLICY_CHECK_PERMISSION_DENIED_PERMISSIVE", "FGS_TYPE_POLICY_CHECK_PERMISSION_DENIED_ENFORCED", "FGS_TYPE_FG_PERM_ENFORCEMENT_FLAG", "DEFAULT_FGS_TYPE_FG_PERM_ENFORCEMENT_FLAG_VALUE", "sDefaultForegroundServiceTypePolicy", "sLock" ]
}