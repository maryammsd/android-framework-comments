{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/chromium/net/impl/CronetEngineBase.java",
  "packageName" : "org.chromium.net.impl",
  "className" : "CronetEngineBase",
  "comment" : "\n * Base class of {@link CronetUrlRequestContext} and {@link JavaCronetEngine} that contains\n * shared logic.\n ",
  "links" : [ "JavaCronetEngine", "org.chromium.net.impl.CronetUrlRequestContext" ],
  "variables" : [ {
    "name" : "DEFAULT_NETWORK_HANDLE",
    "type" : "long",
    "comment" : "\n     * Network handle representing the default network. To be used when a network has not been\n     * explicitly set.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "protected abstract UrlRequestBase createRequest(String url, UrlRequest.Callback callback, Executor executor, @RequestPriority int priority, Collection<Object> requestAnnotations, boolean disableCache, boolean disableConnectionMigration, boolean allowDirectExecutor, boolean trafficStatsTagSet, int trafficStatsTag, boolean trafficStatsUidSet, int trafficStatsUid, @Nullable RequestFinishedInfo.Listener requestFinishedListener, @Idempotency int idempotency, long networkHandle)",
    "returnType" : "UrlRequestBase",
    "comment" : "\n     * Creates a {@link UrlRequest} object. All callbacks will\n     * be called on {@code executor}'s thread. {@code executor} must not run\n     * tasks on the current thread to prevent blocking networking operations\n     * and causing exceptions during shutdown.\n     *\n     * @param url {@link URL} for the request.\n     * @param callback callback object that gets invoked on different events.\n     * @param executor {@link Executor} on which all callbacks will be invoked.\n     * @param priority priority of the request which should be one of the\n     *         {@link UrlRequest.Builder#REQUEST_PRIORITY_IDLE REQUEST_PRIORITY_*}\n     *         values.\n     * @param requestAnnotations Objects to pass on to\n     *        {@link org.chromium.net.RequestFinishedInfo.Listener}.\n     * @param disableCache disables cache for the request.\n     *         If context is not set up to use cache this param has no effect.\n     * @param disableConnectionMigration disables connection migration for this\n     *         request if it is enabled for the session.\n     * @param allowDirectExecutor whether executors used by this request are permitted\n     *         to execute submitted tasks inline.\n     * @param trafficStatsTagSet {@code true} if {@code trafficStatsTag} represents a TrafficStats\n     *         tag to apply to sockets used to perform this request.\n     * @param trafficStatsTag TrafficStats tag to apply to sockets used to perform this request.\n     * @param trafficStatsUidSet {@code true} if {@code trafficStatsUid} represents a UID to\n     *         attribute traffic used to perform this request.\n     * @param trafficStatsUid UID to attribute traffic used to perform this request.\n     * @param requestFinishedListener callback to get invoked with metrics when request is finished.\n     *        Set to {@code null} if not used.\n     * @param idempotency idempotency of the request which should be one of the\n     *         {@link ExperimentalUrlRequest.Builder#DEFAULT_IDEMPOTENCY IDEMPOTENT NOT_IDEMPOTENT}\n     *         values.\n     * @param network network to be used to send this request. Set to {@code null} if not specified.\n     * @return new request.\n     ",
    "links" : [ "org.chromium.net.RequestFinishedInfo.Listener", "UrlRequest.Builder#REQUEST_PRIORITY_IDLE", "java.util.concurrent.Executor", "java.net.URL", "org.chromium.net.ExperimentalUrlRequest", "ExperimentalUrlRequest.Builder#DEFAULT_IDEMPOTENCY" ]
  }, {
    "name" : "protected abstract ExperimentalBidirectionalStream createBidirectionalStream(String url, BidirectionalStream.Callback callback, Executor executor, String httpMethod, List<Map.Entry<String, String>> requestHeaders, @StreamPriority int priority, boolean delayRequestHeadersUntilFirstFlush, Collection<Object> requestAnnotations, boolean trafficStatsTagSet, int trafficStatsTag, boolean trafficStatsUidSet, int trafficStatsUid, long networkHandle)",
    "returnType" : "ExperimentalBidirectionalStream",
    "comment" : "\n     * Creates a {@link BidirectionalStream} object. {@code callback} methods will\n     * be invoked on {@code executor}. {@code executor} must not run\n     * tasks on the current thread to prevent blocking networking operations\n     * and causing exceptions during shutdown.\n     *\n     * @param url the URL for the stream\n     * @param callback the object whose methods get invoked upon different events\n     * @param executor the {@link Executor} on which all callbacks will be called\n     * @param httpMethod the HTTP method to use for the stream\n     * @param requestHeaders the list of request headers\n     * @param priority priority of the stream which should be one of the\n     *         {@link BidirectionalStream.Builder#STREAM_PRIORITY_IDLE STREAM_PRIORITY_*}\n     *         values.\n     * @param delayRequestHeadersUntilFirstFlush whether to delay sending request\n     *         headers until flush() is called, and try to combine them\n     *         with the next data frame.\n     * @param requestAnnotations Objects to pass on to\n     *       {@link org.chromium.net.RequestFinishedInfo.Listener}.\n     * @param trafficStatsTagSet {@code true} if {@code trafficStatsTag} represents a TrafficStats\n     *         tag to apply to sockets used to perform this request.\n     * @param trafficStatsTag TrafficStats tag to apply to sockets used to perform this request.\n     * @param trafficStatsUidSet {@code true} if {@code trafficStatsUid} represents a UID to\n     *         attribute traffic used to perform this request.\n     * @param trafficStatsUid UID to attribute traffic used to perform this request.\n     * @param network network to be used to send this request. Set to {@code null} if not specified.\n     * @return a new stream.\n     ",
    "links" : [ "org.chromium.net.RequestFinishedInfo.Listener", "java.util.concurrent.Executor", "BidirectionalStream.Builder#STREAM_PRIORITY_IDLE", "org.chromium.net.BidirectionalStream" ]
  }, {
    "name" : "public ExperimentalUrlRequest.Builder newUrlRequestBuilder(String url, UrlRequest.Callback callback, Executor executor)",
    "returnType" : "ExperimentalUrlRequest.Builder",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "protected abstract UrlRequestBase createRequest(String url, UrlRequest.Callback callback, Executor executor, @RequestPriority int priority, Collection<Object> requestAnnotations, boolean disableCache, boolean disableConnectionMigration, boolean allowDirectExecutor, boolean trafficStatsTagSet, int trafficStatsTag, boolean trafficStatsUidSet, int trafficStatsUid, @Nullable RequestFinishedInfo.Listener requestFinishedListener, @Idempotency int idempotency, long networkHandle)", "protected abstract ExperimentalBidirectionalStream createBidirectionalStream(String url, BidirectionalStream.Callback callback, Executor executor, String httpMethod, List<Map.Entry<String, String>> requestHeaders, @StreamPriority int priority, boolean delayRequestHeadersUntilFirstFlush, Collection<Object> requestAnnotations, boolean trafficStatsTagSet, int trafficStatsTag, boolean trafficStatsUidSet, int trafficStatsUid, long networkHandle)", "public ExperimentalUrlRequest.Builder newUrlRequestBuilder(String url, UrlRequest.Callback callback, Executor executor)" ],
  "variableNames" : [ "DEFAULT_NETWORK_HANDLE" ]
}