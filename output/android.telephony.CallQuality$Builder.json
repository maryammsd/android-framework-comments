{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/telephony/CallQuality.java",
  "packageName" : "android.telephony",
  "className" : "Builder",
  "comment" : "\n     * Provides a convenient way to set the fields of a {@link CallQuality} when creating a new\n     * instance.\n     *\n     * <p>The example below shows how you might create a new {@code CallQuality}:\n     *\n     * <pre><code>\n     *\n     * CallQuality callQuality = new CallQuality.Builder()\n     *     .setNumRtpPacketsTransmitted(150)\n     *     .setNumRtpPacketsReceived(200)\n     *     .build();\n     * </code></pre>\n     ",
  "links" : [ "android.telephony.CallQuality" ],
  "variables" : [ {
    "name" : "mDownlinkCallQualityLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mUplinkCallQualityLevel",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCallDuration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumRtpPacketsTransmitted",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumRtpPacketsReceived",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumRtpPacketsTransmittedLost",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumRtpPacketsNotReceived",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAverageRelativeJitter",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxRelativeJitter",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAverageRoundTripTime",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mCodecType",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRtpInactivityDetected",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRxSilenceDetected",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTxSilenceDetected",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumVoiceFrames",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumNoDataFrames",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumDroppedRtpPackets",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinPlayoutDelayMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMaxPlayoutDelayMillis",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumRtpSidPacketsReceived",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mNumRtpDuplicatePackets",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setDownlinkCallQualityLevel(@CallQualityLevel int downlinkCallQualityLevel)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the downlink call quality level for ongoing call.\n         *\n         * @param downlinkCallQualityLevel the Downlink call quality level\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setUplinkCallQualityLevel(@CallQualityLevel int uplinkCallQualityLevel)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the uplink call quality level for ongoing call.\n         *\n         * @param uplinkCallQualityLevel the Uplink call quality level\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setCallDurationMillis(int callDurationMillis)",
    "returnType" : "Builder",
    "comment" : " Newer builder includes guidelines compliant units; existing method does not.",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumRtpPacketsTransmitted(int numRtpPacketsTransmitted)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the number of RTP packets sent for ongoing call.\n         *\n         * @param numRtpPacketsTransmitted RTP packets sent to network\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumRtpPacketsReceived(int numRtpPacketsReceived)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the number of RTP packets received for ongoing call.\n         *\n         * @param numRtpPacketsReceived RTP packets received from network\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumRtpPacketsTransmittedLost(int numRtpPacketsTransmittedLost)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the number of RTP packets which were lost in network and never\n         * transmitted.\n         *\n         * @param numRtpPacketsTransmittedLost RTP packets which were lost in network and never\n         * transmitted\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumRtpPacketsNotReceived(int numRtpPacketsNotReceived)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the number of RTP packets which were lost in network and never received.\n         *\n         * @param numRtpPacketsNotReceived RTP packets which were lost in network and\n         * never received\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAverageRelativeJitter(int averageRelativeJitter)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the average relative jitter in milliseconds.\n         *\n         * @param averageRelativeJitter average relative jitter in milliseconds\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxRelativeJitter(int maxRelativeJitter)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the maximum relative jitter in milliseconds.\n         *\n         * @param maxRelativeJitter maximum relative jitter in milliseconds\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setAverageRoundTripTimeMillis(int averageRoundTripTimeMillis)",
    "returnType" : "Builder",
    "comment" : " Newer builder includes guidelines compliant units; existing method does not.",
    "links" : [ ]
  }, {
    "name" : "public Builder setCodecType(int codecType)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the codec type used in the ongoing call.\n         *\n         * @param codecType the codec type.\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setRtpInactivityDetected(boolean rtpInactivityDetected)",
    "returnType" : "Builder",
    "comment" : "\n         * Set to be True if no incoming RTP is received for a continuous\n         * duration of 4 seconds.\n         *\n         * @param rtpInactivityDetected True if no incoming RTP is received for\n         * a continuous duration of 4 seconds\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setIncomingSilenceDetectedAtCallSetup(boolean rxSilenceDetected)",
    "returnType" : "Builder",
    "comment" : "\n         * Set to be True if only silence RTP packets are received for 20 seconds\n         * immediately after call is connected.\n         *\n         * @param rxSilenceDetected True if only silence RTP packets are received for 20 seconds\n         * immediately after call is connected\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setOutgoingSilenceDetectedAtCallSetup(boolean txSilenceDetected)",
    "returnType" : "Builder",
    "comment" : "\n         * Set to be True if only silence RTP packets are sent for 20 seconds immediately\n         * after call is connected.\n         *\n         * @param txSilenceDetected True if only silence RTP packets are sent for\n         * 20 seconds immediately after call is connected.\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumVoiceFrames(int numVoiceFrames)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the number of voice frames sent by jitter buffer to audio.\n         *\n         * @param numVoiceFrames Voice frames sent by jitter buffer to audio.\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumNoDataFrames(int numNoDataFrames)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the number of no-data frames sent by jitter buffer to audio.\n         *\n         * @param numNoDataFrames no-data frames sent by jitter buffer to audio\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumDroppedRtpPackets(int numDroppedRtpPackets)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the number of RTP Voice packets dropped by jitter buffer.\n         *\n         * @param numDroppedRtpPackets number of RTP Voice packets dropped by jitter buffer\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMinPlayoutDelayMillis(long minPlayoutDelayMillis)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the minimum playout delay in the reporting interval in milliseconds.\n         *\n         * @param minPlayoutDelayMillis minimum playout delay in the reporting interval\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxPlayoutDelayMillis(long maxPlayoutDelayMillis)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the maximum Playout delay in the reporting interval in milliseconds.\n         *\n         * @param maxPlayoutDelayMillis maximum Playout delay in the reporting interval\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumRtpSidPacketsReceived(int numRtpSidPacketsReceived)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the total number of RTP SID (Silence Insertion Descriptor)\n         * packets received by this device for an ongoing call.\n         *\n         * @param numRtpSidPacketsReceived the total number of RTP SID packets received\n         * by this device for an ongoing call.\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNumRtpDuplicatePackets(int numRtpDuplicatePackets)",
    "returnType" : "Builder",
    "comment" : "\n         * Set the total number of RTP duplicate packets received by this device\n         * for an ongoing call.\n         *\n         * @param numRtpDuplicatePackets the total number of RTP duplicate packets\n         * received by this device for an ongoing call\n         * @return The same instance of the builder.\n         ",
    "links" : [ ]
  }, {
    "name" : "public CallQuality build()",
    "returnType" : "CallQuality",
    "comment" : "\n         * Build the CallQuality.\n         *\n         * @return the CallQuality object.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setDownlinkCallQualityLevel(@CallQualityLevel int downlinkCallQualityLevel)", "public Builder setUplinkCallQualityLevel(@CallQualityLevel int uplinkCallQualityLevel)", "public Builder setCallDurationMillis(int callDurationMillis)", "public Builder setNumRtpPacketsTransmitted(int numRtpPacketsTransmitted)", "public Builder setNumRtpPacketsReceived(int numRtpPacketsReceived)", "public Builder setNumRtpPacketsTransmittedLost(int numRtpPacketsTransmittedLost)", "public Builder setNumRtpPacketsNotReceived(int numRtpPacketsNotReceived)", "public Builder setAverageRelativeJitter(int averageRelativeJitter)", "public Builder setMaxRelativeJitter(int maxRelativeJitter)", "public Builder setAverageRoundTripTimeMillis(int averageRoundTripTimeMillis)", "public Builder setCodecType(int codecType)", "public Builder setRtpInactivityDetected(boolean rtpInactivityDetected)", "public Builder setIncomingSilenceDetectedAtCallSetup(boolean rxSilenceDetected)", "public Builder setOutgoingSilenceDetectedAtCallSetup(boolean txSilenceDetected)", "public Builder setNumVoiceFrames(int numVoiceFrames)", "public Builder setNumNoDataFrames(int numNoDataFrames)", "public Builder setNumDroppedRtpPackets(int numDroppedRtpPackets)", "public Builder setMinPlayoutDelayMillis(long minPlayoutDelayMillis)", "public Builder setMaxPlayoutDelayMillis(long maxPlayoutDelayMillis)", "public Builder setNumRtpSidPacketsReceived(int numRtpSidPacketsReceived)", "public Builder setNumRtpDuplicatePackets(int numRtpDuplicatePackets)", "public CallQuality build()" ],
  "variableNames" : [ "mDownlinkCallQualityLevel", "mUplinkCallQualityLevel", "mCallDuration", "mNumRtpPacketsTransmitted", "mNumRtpPacketsReceived", "mNumRtpPacketsTransmittedLost", "mNumRtpPacketsNotReceived", "mAverageRelativeJitter", "mMaxRelativeJitter", "mAverageRoundTripTime", "mCodecType", "mRtpInactivityDetected", "mRxSilenceDetected", "mTxSilenceDetected", "mNumVoiceFrames", "mNumNoDataFrames", "mNumDroppedRtpPackets", "mMinPlayoutDelayMillis", "mMaxPlayoutDelayMillis", "mNumRtpSidPacketsReceived", "mNumRtpDuplicatePackets" ]
}