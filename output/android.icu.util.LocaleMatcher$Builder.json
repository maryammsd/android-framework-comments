{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/util/LocaleMatcher.java",
  "packageName" : "android.icu.util",
  "className" : "Builder",
  "comment" : "\n     * LocaleMatcher Builder.\n     *\n     * @see LocaleMatcher#builder()\n     * @hide Only a subset of ICU is exposed in Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "supportedLocales",
    "type" : "List<ULocale>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "thresholdDistance",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "demotion",
    "type" : "Demotion",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "defaultLocale",
    "type" : "ULocale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "withDefault",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "favor",
    "type" : "FavorSubtag",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "direction",
    "type" : "Direction",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "maxDistanceDesired",
    "type" : "ULocale",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "maxDistanceSupported",
    "type" : "ULocale",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setSupportedLocales(String locales)",
    "returnType" : "Builder",
    "comment" : "\n         * Parses the string like {@link LocalePriorityList} does and\n         * sets the supported locales accordingly.\n         * Clears any previously set/added supported locales first.\n         *\n         * @param locales the string of locales to set, to be parsed like LocalePriorityList does\n         * @return this Builder object\n         ",
    "links" : [ "android.icu.util.LocalePriorityList" ]
  }, {
    "name" : "public Builder setSupportedULocales(Collection<ULocale> locales)",
    "returnType" : "Builder",
    "comment" : "\n         * Copies the supported locales, preserving iteration order.\n         * Clears any previously set/added supported locales first.\n         * Duplicates are allowed, and are not removed.\n         *\n         * @param locales the list of locales\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setSupportedLocales(Collection<Locale> locales)",
    "returnType" : "Builder",
    "comment" : "\n         * Copies the supported locales, preserving iteration order.\n         * Clears any previously set/added supported locales first.\n         * Duplicates are allowed, and are not removed.\n         *\n         * @param locales the list of locale\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addSupportedULocale(ULocale locale)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds another supported locale.\n         * Duplicates are allowed, and are not removed.\n         *\n         * @param locale another locale\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder addSupportedLocale(Locale locale)",
    "returnType" : "Builder",
    "comment" : "\n         * Adds another supported locale.\n         * Duplicates are allowed, and are not removed.\n         *\n         * @param locale another locale\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setNoDefaultLocale()",
    "returnType" : "Builder",
    "comment" : "\n         * Sets no default locale.\n         * There will be no explicit or implicit default locale.\n         * If there is no good match, then the matcher will return null for the\n         * best supported locale.\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDefaultULocale(ULocale defaultLocale)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the default locale; if null, or if it is not set explicitly,\n         * then the first supported locale is used as the default locale.\n         * There is no default locale at all (null will be returned instead)\n         * if {@link #setNoDefaultLocale()} is called.\n         *\n         * @param defaultLocale the default locale\n         * @return this Builder object\n         ",
    "links" : [ "#setNoDefaultLocale()" ]
  }, {
    "name" : "public Builder setDefaultLocale(Locale defaultLocale)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the default locale; if null, or if it is not set explicitly,\n         * then the first supported locale is used as the default locale.\n         * There is no default locale at all (null will be returned instead)\n         * if {@link #setNoDefaultLocale()} is called.\n         *\n         * @param defaultLocale the default locale\n         * @return this Builder object\n         ",
    "links" : [ "#setNoDefaultLocale()" ]
  }, {
    "name" : "public Builder setFavorSubtag(FavorSubtag subtag)",
    "returnType" : "Builder",
    "comment" : "\n         * If SCRIPT, then the language differences are smaller than script differences.\n         * This is used in situations (such as maps) where\n         * it is better to fall back to the same script than a similar language.\n         *\n         * @param subtag the subtag to favor\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDemotionPerDesiredLocale(Demotion demotion)",
    "returnType" : "Builder",
    "comment" : "\n         * Option for whether all desired locales are treated equally or\n         * earlier ones are preferred (this is the default).\n         *\n         * @param demotion the demotion per desired locale to set.\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setDirection(Direction direction)",
    "returnType" : "Builder",
    "comment" : "\n         * Option for whether to include or ignore one-way (fallback) match data.\n         * By default, they are included.\n         *\n         * @param direction the match direction to set.\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxDistance(Locale desired, Locale supported)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the maximum distance for an acceptable match.\n         * The matcher will return a match for a pair of locales only if\n         * they match at least as well as the pair given here.\n         *\n         * <p>For example, setMaxDistance(en-US, en-GB) limits matches to ones where the\n         * (desired, support) locales have a distance no greater than a region subtag difference.\n         * This is much stricter than the CLDR default.\n         *\n         * <p>The details of locale matching are subject to changes in\n         * CLDR data and in the algorithm.\n         * Specifying a maximum distance in relative terms via a sample pair of locales\n         * insulates from changes that affect all distance metrics similarly,\n         * but some changes will necessarily affect relative distances between\n         * different pairs of locales.\n         *\n         * @param desired the desired locale for distance comparison.\n         * @param supported the supported locale for distance comparison.\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder setMaxDistance(ULocale desired, ULocale supported)",
    "returnType" : "Builder",
    "comment" : "\n         * Sets the maximum distance for an acceptable match.\n         * The matcher will return a match for a pair of locales only if\n         * they match at least as well as the pair given here.\n         *\n         * <p>For example, setMaxDistance(en-US, en-GB) limits matches to ones where the\n         * (desired, support) locales have a distance no greater than a region subtag difference.\n         * This is much stricter than the CLDR default.\n         *\n         * <p>The details of locale matching are subject to changes in\n         * CLDR data and in the algorithm.\n         * Specifying a maximum distance in relative terms via a sample pair of locales\n         * insulates from changes that affect all distance metrics similarly,\n         * but some changes will necessarily affect relative distances between\n         * different pairs of locales.\n         *\n         * @param desired the desired locale for distance comparison.\n         * @param supported the supported locale for distance comparison.\n         * @return this Builder object\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder internalSetThresholdDistance(int thresholdDistance)",
    "returnType" : "Builder",
    "comment" : "\n         * <i>Internal only!</i>\n         *\n         * @param thresholdDistance the thresholdDistance to set, with -1 = default\n         * @return this Builder object\n         * @deprecated This API is ICU internal only.\n         * @hide draft / provisional / internal are hidden on Android\n         ",
    "links" : [ ]
  }, {
    "name" : "public LocaleMatcher build()",
    "returnType" : "LocaleMatcher",
    "comment" : "\n         * Builds and returns a new locale matcher.\n         * This builder can continue to be used.\n         *\n         * @return new LocaleMatcher.\n         ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "\n         * {@inheritDoc}\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setSupportedLocales(String locales)", "public Builder setSupportedULocales(Collection<ULocale> locales)", "public Builder setSupportedLocales(Collection<Locale> locales)", "public Builder addSupportedULocale(ULocale locale)", "public Builder addSupportedLocale(Locale locale)", "public Builder setNoDefaultLocale()", "public Builder setDefaultULocale(ULocale defaultLocale)", "public Builder setDefaultLocale(Locale defaultLocale)", "public Builder setFavorSubtag(FavorSubtag subtag)", "public Builder setDemotionPerDesiredLocale(Demotion demotion)", "public Builder setDirection(Direction direction)", "public Builder setMaxDistance(Locale desired, Locale supported)", "public Builder setMaxDistance(ULocale desired, ULocale supported)", "public Builder internalSetThresholdDistance(int thresholdDistance)", "public LocaleMatcher build()", "public String toString()" ],
  "variableNames" : [ "supportedLocales", "thresholdDistance", "demotion", "defaultLocale", "withDefault", "favor", "direction", "maxDistanceDesired", "maxDistanceSupported" ]
}