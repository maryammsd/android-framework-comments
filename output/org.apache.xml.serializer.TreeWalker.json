{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xml/serializer/TreeWalker.java",
  "packageName" : "org.apache.xml.serializer",
  "className" : "TreeWalker",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "m_contentHandler",
    "type" : "ContentHandler",
    "comment" : " Local reference to a ContentHandler          ",
    "links" : [ ]
  }, {
    "name" : "m_Serializer",
    "type" : "SerializationHandler",
    "comment" : " \n   * If m_contentHandler is a SerializationHandler, then this is \n   * a reference to the same object. \n   ",
    "links" : [ ]
  }, {
    "name" : "m_dh",
    "type" : "DOM2Helper",
    "comment" : " DomHelper for this TreeWalker          ",
    "links" : [ ]
  }, {
    "name" : "m_locator",
    "type" : "LocatorImpl",
    "comment" : " Locator object for this TreeWalker          ",
    "links" : [ ]
  }, {
    "name" : "nextIsRaw",
    "type" : "boolean",
    "comment" : " Flag indicating whether following text to be processed is raw text          ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public ContentHandler getContentHandler()",
    "returnType" : "ContentHandler",
    "comment" : "\n   * Get the ContentHandler used for the tree walk.\n   *\n   * @return the ContentHandler used for the tree walk\n   ",
    "links" : [ ]
  }, {
    "name" : "public void traverse(Node pos) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Perform a pre-order traversal non-recursive style.  \n   *\n   * Note that TreeWalker assumes that the subtree is intended to represent \n   * a complete (though not necessarily well-formed) document and, during a \n   * traversal, startDocument and endDocument will always be issued to the \n   * SAX listener.\n   *  \n   * @param pos Node in the tree where to start traversal\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "public void traverse(Node pos, Node top) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Perform a pre-order traversal non-recursive style.\n\n   * Note that TreeWalker assumes that the subtree is intended to represent \n   * a complete (though not necessarily well-formed) document and, during a \n   * traversal, startDocument and endDocument will always be issued to the \n   * SAX listener.\n   *\n   * @param pos Node in the tree where to start traversal\n   * @param top Node in the tree where to end traversal\n   *\n   * @throws TransformerException\n   ",
    "links" : [ ]
  }, {
    "name" : "private final void dispatachChars(Node node) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Optimized dispatch of characters.\n   ",
    "links" : [ ]
  }, {
    "name" : "protected void startNode(Node node) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Start processing given node\n   *\n   *\n   * @param node Node to process\n   *\n   * @throws org.xml.sax.SAXException\n   ",
    "links" : [ ]
  }, {
    "name" : "protected void endNode(Node node) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * End processing of given node \n   *\n   *\n   * @param node Node we just finished processing\n   *\n   * @throws org.xml.sax.SAXException\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public ContentHandler getContentHandler()", "public void traverse(Node pos) throws org.xml.sax.SAXException", "public void traverse(Node pos, Node top) throws org.xml.sax.SAXException", "private final void dispatachChars(Node node) throws org.xml.sax.SAXException", "protected void startNode(Node node) throws org.xml.sax.SAXException", "protected void endNode(Node node) throws org.xml.sax.SAXException" ],
  "variableNames" : [ "m_contentHandler", "m_Serializer", "m_dh", "m_locator", "nextIsRaw" ]
}