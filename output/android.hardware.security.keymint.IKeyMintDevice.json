{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/security/keymint/IKeyMintDevice.java",
  "packageName" : "android.hardware.security.keymint",
  "className" : "IKeyMintDevice",
  "comment" : " @hide ",
  "links" : [ ],
  "variables" : [ {
    "name" : "VERSION",
    "type" : "int",
    "comment" : "\n   * The version of this interface that the caller is built against.\n   * This might be different from what {@link #getInterfaceVersion()\n   * getInterfaceVersion} returns as that is the version of the interface\n   * that the remote object is implementing.\n   ",
    "links" : [ "#getInterfaceVersion()" ]
  }, {
    "name" : "HASH",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DESCRIPTOR",
    "type" : "java.lang.String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "AUTH_TOKEN_MAC_LENGTH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public android.hardware.security.keymint.KeyMintHardwareInfo getHardwareInfo() throws android.os.RemoteException",
    "returnType" : "android.hardware.security.keymint.KeyMintHardwareInfo",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void addRngEntropy(byte[] data) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.security.keymint.KeyCreationResult generateKey(android.hardware.security.keymint.KeyParameter[] keyParams, android.hardware.security.keymint.AttestationKey attestationKey) throws android.os.RemoteException",
    "returnType" : "android.hardware.security.keymint.KeyCreationResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.security.keymint.KeyCreationResult importKey(android.hardware.security.keymint.KeyParameter[] keyParams, int keyFormat, byte[] keyData, android.hardware.security.keymint.AttestationKey attestationKey) throws android.os.RemoteException",
    "returnType" : "android.hardware.security.keymint.KeyCreationResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.security.keymint.KeyCreationResult importWrappedKey(byte[] wrappedKeyData, byte[] wrappingKeyBlob, byte[] maskingKey, android.hardware.security.keymint.KeyParameter[] unwrappingParams, long passwordSid, long biometricSid) throws android.os.RemoteException",
    "returnType" : "android.hardware.security.keymint.KeyCreationResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] upgradeKey(byte[] keyBlobToUpgrade, android.hardware.security.keymint.KeyParameter[] upgradeParams) throws android.os.RemoteException",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void deleteKey(byte[] keyBlob) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void deleteAllKeys() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void destroyAttestationIds() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.security.keymint.BeginResult begin(int purpose, byte[] keyBlob, android.hardware.security.keymint.KeyParameter[] params, android.hardware.security.keymint.HardwareAuthToken authToken) throws android.os.RemoteException",
    "returnType" : "android.hardware.security.keymint.BeginResult",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void deviceLocked(boolean passwordOnly, android.hardware.security.secureclock.TimeStampToken timestampToken) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void earlyBootEnded() throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] convertStorageKeyToEphemeral(byte[] storageKeyBlob) throws android.os.RemoteException",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public android.hardware.security.keymint.KeyCharacteristics[] getKeyCharacteristics(byte[] keyBlob, byte[] appId, byte[] appData) throws android.os.RemoteException",
    "returnType" : "android.hardware.security.keymint.KeyCharacteristics[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] getRootOfTrustChallenge() throws android.os.RemoteException",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public byte[] getRootOfTrust(byte[] challenge) throws android.os.RemoteException",
    "returnType" : "byte[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void sendRootOfTrust(byte[] rootOfTrust) throws android.os.RemoteException",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getInterfaceVersion() throws android.os.RemoteException",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String getInterfaceHash() throws android.os.RemoteException",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public android.hardware.security.keymint.KeyMintHardwareInfo getHardwareInfo() throws android.os.RemoteException", "public void addRngEntropy(byte[] data) throws android.os.RemoteException", "public android.hardware.security.keymint.KeyCreationResult generateKey(android.hardware.security.keymint.KeyParameter[] keyParams, android.hardware.security.keymint.AttestationKey attestationKey) throws android.os.RemoteException", "public android.hardware.security.keymint.KeyCreationResult importKey(android.hardware.security.keymint.KeyParameter[] keyParams, int keyFormat, byte[] keyData, android.hardware.security.keymint.AttestationKey attestationKey) throws android.os.RemoteException", "public android.hardware.security.keymint.KeyCreationResult importWrappedKey(byte[] wrappedKeyData, byte[] wrappingKeyBlob, byte[] maskingKey, android.hardware.security.keymint.KeyParameter[] unwrappingParams, long passwordSid, long biometricSid) throws android.os.RemoteException", "public byte[] upgradeKey(byte[] keyBlobToUpgrade, android.hardware.security.keymint.KeyParameter[] upgradeParams) throws android.os.RemoteException", "public void deleteKey(byte[] keyBlob) throws android.os.RemoteException", "public void deleteAllKeys() throws android.os.RemoteException", "public void destroyAttestationIds() throws android.os.RemoteException", "public android.hardware.security.keymint.BeginResult begin(int purpose, byte[] keyBlob, android.hardware.security.keymint.KeyParameter[] params, android.hardware.security.keymint.HardwareAuthToken authToken) throws android.os.RemoteException", "public void deviceLocked(boolean passwordOnly, android.hardware.security.secureclock.TimeStampToken timestampToken) throws android.os.RemoteException", "public void earlyBootEnded() throws android.os.RemoteException", "public byte[] convertStorageKeyToEphemeral(byte[] storageKeyBlob) throws android.os.RemoteException", "public android.hardware.security.keymint.KeyCharacteristics[] getKeyCharacteristics(byte[] keyBlob, byte[] appId, byte[] appData) throws android.os.RemoteException", "public byte[] getRootOfTrustChallenge() throws android.os.RemoteException", "public byte[] getRootOfTrust(byte[] challenge) throws android.os.RemoteException", "public void sendRootOfTrust(byte[] rootOfTrust) throws android.os.RemoteException", "public int getInterfaceVersion() throws android.os.RemoteException", "public String getInterfaceHash() throws android.os.RemoteException" ],
  "variableNames" : [ "VERSION", "HASH", "DESCRIPTOR", "AUTH_TOKEN_MAC_LENGTH" ]
}