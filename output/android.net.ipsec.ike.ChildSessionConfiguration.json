{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ipsec/ike/ChildSessionConfiguration.java",
  "packageName" : "android.net.ipsec.ike",
  "className" : "ChildSessionConfiguration",
  "comment" : "\n * ChildSessionConfiguration represents the negotiated configuration for a Child Session.\n *\n * <p>Configurations include traffic selectors and internal network information.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "IPv4_DEFAULT_PREFIX_LEN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInboundTs",
    "type" : "List<IkeTrafficSelector>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOutboundTs",
    "type" : "List<IkeTrafficSelector>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInternalAddressList",
    "type" : "List<LinkAddress>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInternalDnsAddressList",
    "type" : "List<InetAddress>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSubnetAddressList",
    "type" : "List<IpPrefix>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInternalDhcpAddressList",
    "type" : "List<InetAddress>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public List<IkeTrafficSelector> getInboundTrafficSelectors()",
    "returnType" : "List<IkeTrafficSelector>",
    "comment" : "\n     * Returns the negotiated inbound traffic selectors.\n     *\n     * <p>Only inbound traffic within the range is acceptable to the Child Session.\n     *\n     * <p>The Android platform does not support port-based routing. Port ranges of traffic selectors\n     * are only informational.\n     *\n     * @return the inbound traffic selectors.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<IkeTrafficSelector> getOutboundTrafficSelectors()",
    "returnType" : "List<IkeTrafficSelector>",
    "comment" : "\n     * Returns the negotiated outbound traffic selectors.\n     *\n     * <p>Only outbound traffic within the range is acceptable to the Child Session.\n     *\n     * <p>The Android platform does not support port-based routing. Port ranges of traffic selectors\n     * are only informational.\n     *\n     * @return the outbound traffic selectors.\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<LinkAddress> getInternalAddresses()",
    "returnType" : "List<LinkAddress>",
    "comment" : "\n     * Returns the assigned internal addresses.\n     *\n     * @return the assigned internal addresses, or an empty list when no addresses are assigned by\n     *     the remote IKE server (e.g. for a non-tunnel mode Child Session).\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<IpPrefix> getInternalSubnets()",
    "returnType" : "List<IpPrefix>",
    "comment" : "\n     * Returns the internal subnets protected by the IKE server.\n     *\n     * @return the internal subnets, or an empty list when no information of protected subnets is\n     *     provided by the IKE server (e.g. for a non-tunnel mode Child Session).\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<InetAddress> getInternalDnsServers()",
    "returnType" : "List<InetAddress>",
    "comment" : "\n     * Returns the internal DNS server addresses.\n     *\n     * @return the internal DNS server addresses, or an empty list when no DNS server is provided by\n     *     the IKE server (e.g. for a non-tunnel mode Child Session).\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public List<InetAddress> getInternalDhcpServers()",
    "returnType" : "List<InetAddress>",
    "comment" : "\n     * Returns the internal DHCP server addresses.\n     *\n     * @return the internal DHCP server addresses, or an empty list when no DHCP server is provided\n     *     by the IKE server (e.g. for a non-tunnel mode Child Session).\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public List<IkeTrafficSelector> getInboundTrafficSelectors()", "public List<IkeTrafficSelector> getOutboundTrafficSelectors()", "public List<LinkAddress> getInternalAddresses()", "public List<IpPrefix> getInternalSubnets()", "public List<InetAddress> getInternalDnsServers()", "public List<InetAddress> getInternalDhcpServers()" ],
  "variableNames" : [ "IPv4_DEFAULT_PREFIX_LEN", "mInboundTs", "mOutboundTs", "mInternalAddressList", "mInternalDnsAddressList", "mSubnetAddressList", "mInternalDhcpAddressList" ]
}