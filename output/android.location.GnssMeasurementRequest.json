{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/location/GnssMeasurementRequest.java",
  "packageName" : "android.location",
  "className" : "GnssMeasurementRequest",
  "comment" : "\n * This class contains extra parameters to pass in a GNSS measurement request.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "PASSIVE_INTERVAL",
    "type" : "int",
    "comment" : "\n     * Represents a passive only request. Such a request will not trigger any active GNSS\n     * measurements or power usage itself, but may receive GNSS measurements generated in response\n     * to other requests.\n     *\n     * <p class=\"note\">Note that on Android T, such a request will trigger one GNSS measurement.\n     * Another GNSS measurement will be triggered after {@link #PASSIVE_INTERVAL} and so on.\n     *\n     * @see GnssMeasurementRequest#getIntervalMillis()\n     ",
    "links" : [ "#PASSIVE_INTERVAL" ]
  }, {
    "name" : "mCorrelationVectorOutputsEnabled",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFullTracking",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mIntervalMillis",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mWorkSource",
    "type" : "WorkSource",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<GnssMeasurementRequest>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isCorrelationVectorOutputsEnabled()",
    "returnType" : "boolean",
    "comment" : "\n     * Represents whether to enable correlation vector outputs.\n     *\n     * <p>If true, enable correlation vectors as part of the raw GNSS measurements outputs.\n     * If false, disable correlation vectors.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isFullTracking()",
    "returnType" : "boolean",
    "comment" : "\n     * Represents whether to enable full GNSS tracking.\n     *\n     * <p>If true, GNSS chipset switches off duty cycling. In such a mode, no clock\n     * discontinuities are expected, and when supported, carrier phase should be continuous in\n     * good signal conditions. All non-blocklisted, healthy constellations, satellites and\n     * frequency bands that are meaningful to positioning accuracy must be tracked and reported in\n     * this mode. The GNSS chipset will consume more power in full tracking mode than in duty\n     * cycling mode. If false, GNSS chipset optimizes power via duty cycling, constellations and\n     * frequency limits, etc.\n     *\n     * <p>Full GNSS tracking mode affects GnssMeasurement and other GNSS functionalities\n     * including GNSS location.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getIntervalMillis()",
    "returnType" : "int",
    "comment" : "\n     * Returns the requested time interval between the reported measurements in milliseconds, or\n     * {@link #PASSIVE_INTERVAL} if this is a passive, no power request. A passive request will not\n     * actively generate GNSS measurement updates, but may receive GNSS measurement updates\n     * generated as a result of other GNSS measurement requests.\n     *\n     * <p>If the time interval is not set, the default value is 0, which means the fastest rate the\n     * GNSS chipset can report.\n     *\n     * <p>The GNSS chipset may report measurements with a rate faster than requested.\n     *\n     * <p class=\"note\">Note that on Android T, a request interval of {@link #PASSIVE_INTERVAL}\n     * will first trigger one GNSS measurement. Another GNSS measurement will be triggered after\n     * {@link #PASSIVE_INTERVAL} milliseconds ans so on.\n     ",
    "links" : [ "#PASSIVE_INTERVAL" ]
  }, {
    "name" : "public WorkSource getWorkSource()",
    "returnType" : "WorkSource",
    "comment" : "\n     * Returns the work source used for power blame for this request. If empty (i.e.,\n     * {@link WorkSource#isEmpty()} is {@code true}, the system is free to assign power blame as it\n     * deems most appropriate.\n     *\n     * @return the work source used for power blame for this request\n     *\n     * @hide\n     ",
    "links" : [ "android.os.WorkSource#isEmpty()" ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isCorrelationVectorOutputsEnabled()", "public boolean isFullTracking()", "public int getIntervalMillis()", "public WorkSource getWorkSource()", "public void writeToParcel(@NonNull Parcel parcel, int flags)", "public String toString()", "public boolean equals(Object obj)", "public int hashCode()", "public int describeContents()" ],
  "variableNames" : [ "PASSIVE_INTERVAL", "mCorrelationVectorOutputsEnabled", "mFullTracking", "mIntervalMillis", "mWorkSource", "CREATOR" ]
}