{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/uwb/RangingManager.java",
  "packageName" : "android.uwb",
  "className" : "RangingManager",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mTag",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mAdapter",
    "type" : "IUwbAdapter",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mRangingSessionTable",
    "type" : "Hashtable<SessionHandle, RangingSession>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sNextSessionId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public CancellationSignal openSession(@NonNull AttributionSource attributionSource, @NonNull PersistableBundle params, @NonNull Executor executor, @NonNull RangingSession.Callback callbacks, @Nullable String chipId)",
    "returnType" : "CancellationSignal",
    "comment" : "\n     * Open a new ranging session\n     *\n     * @param attributionSource Attribution source to use for the enforcement of\n     *                          {@link android.Manifest.permission#UWB_RANGING} runtime\n     *                          permission.\n     * @param params the parameters that define the ranging session\n     * @param executor {@link Executor} to run callbacks\n     * @param callbacks {@link RangingSession.Callback} to associate with the {@link RangingSession}\n     *                  that is being opened.\n     * @param chipId identifier of UWB chip to be used in ranging session, or {@code null} if\n     *                the default chip should be used\n     * @return a {@link CancellationSignal} that may be used to cancel the opening of the\n     *         {@link RangingSession}.\n     ",
    "links" : [ "android.Manifest.permission#UWB_RANGING", "java.util.concurrent.Executor", "RangingSession.Callback", "android.os.CancellationSignal", "android.uwb.RangingSession" ]
  }, {
    "name" : "private boolean hasSession(SessionHandle sessionHandle)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingOpened(SessionHandle sessionHandle)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingOpenFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingReconfigured(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingReconfigureFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingStarted(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingStartFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingStopped(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingStopFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingClosed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle params)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingResult(SessionHandle sessionHandle, RangingReport result)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onControleeAdded(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onControleeAddFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onControleeRemoved(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onControleeRemoveFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingPaused(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingPauseFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingResumed(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingResumeFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDataSent(SessionHandle sessionHandle, UwbAddress remoteDeviceAddress, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDataSendFailed(SessionHandle sessionHandle, UwbAddress remoteDeviceAddress, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDataTransferPhaseConfigured(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDataTransferPhaseConfigFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDataReceived(SessionHandle sessionHandle, UwbAddress remoteDeviceAddress, PersistableBundle parameters, byte[] data)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDataReceiveFailed(SessionHandle sessionHandle, UwbAddress remoteDeviceAddress, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onServiceDiscovered(SessionHandle sessionHandle, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onHybridSessionControllerConfigured(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onHybridSessionControllerConfigurationFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onHybridSessionControleeConfigured(SessionHandle sessionHandle, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onHybridSessionControleeConfigurationFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onServiceConnected(SessionHandle sessionHandle, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onRangingRoundsUpdateDtTagStatus(SessionHandle sessionHandle, @NonNull PersistableBundle parameters)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static int convertToReason(@RangingChangeReason int reason)",
    "returnType" : "int",
    "comment" : " TODO(b/211025367): Remove this conversion and use direct API values.",
    "links" : [ ]
  } ],
  "methodNames" : [ "public CancellationSignal openSession(@NonNull AttributionSource attributionSource, @NonNull PersistableBundle params, @NonNull Executor executor, @NonNull RangingSession.Callback callbacks, @Nullable String chipId)", "private boolean hasSession(SessionHandle sessionHandle)", "public void onRangingOpened(SessionHandle sessionHandle)", "public void onRangingOpenFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onRangingReconfigured(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onRangingReconfigureFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle params)", "public void onRangingStarted(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onRangingStartFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle params)", "public void onRangingStopped(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle params)", "public void onRangingStopFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onRangingClosed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle params)", "public void onRangingResult(SessionHandle sessionHandle, RangingReport result)", "public void onControleeAdded(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onControleeAddFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onControleeRemoved(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onControleeRemoveFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onRangingPaused(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onRangingPauseFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onRangingResumed(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onRangingResumeFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onDataSent(SessionHandle sessionHandle, UwbAddress remoteDeviceAddress, PersistableBundle parameters)", "public void onDataSendFailed(SessionHandle sessionHandle, UwbAddress remoteDeviceAddress, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onDataTransferPhaseConfigured(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onDataTransferPhaseConfigFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onDataReceived(SessionHandle sessionHandle, UwbAddress remoteDeviceAddress, PersistableBundle parameters, byte[] data)", "public void onDataReceiveFailed(SessionHandle sessionHandle, UwbAddress remoteDeviceAddress, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onServiceDiscovered(SessionHandle sessionHandle, @NonNull PersistableBundle parameters)", "public void onHybridSessionControllerConfigured(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onHybridSessionControllerConfigurationFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onHybridSessionControleeConfigured(SessionHandle sessionHandle, PersistableBundle parameters)", "public void onHybridSessionControleeConfigurationFailed(SessionHandle sessionHandle, @RangingChangeReason int reason, PersistableBundle parameters)", "public void onServiceConnected(SessionHandle sessionHandle, @NonNull PersistableBundle parameters)", "public void onRangingRoundsUpdateDtTagStatus(SessionHandle sessionHandle, @NonNull PersistableBundle parameters)", "private static int convertToReason(@RangingChangeReason int reason)" ],
  "variableNames" : [ "mTag", "mAdapter", "mRangingSessionTable", "sNextSessionId" ]
}