{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/OemNetworkPreferences.java",
  "packageName" : "android.net",
  "className" : "OemNetworkPreferences",
  "comment" : "\n * Network preferences to set the default active network on a per-application basis as per a given\n * {@link OemNetworkPreference}. An example of this would be to set an application's network\n * preference to {@link #OEM_NETWORK_PREFERENCE_OEM_PAID_NO_FALLBACK} which would have the default\n * network for that application set to an unmetered network first if available and if not, it then\n * set that application's default network to an OEM managed network if available.\n *\n * @hide\n ",
  "links" : [ "#OEM_NETWORK_PREFERENCE_OEM_PAID_NO_FALLBACK", "OemNetworkPreference" ],
  "variables" : [ {
    "name" : "OEM_NETWORK_PREFERENCE_TEST_ONLY",
    "type" : "int",
    "comment" : "\n     * This preference is only to be used for testing and nothing else.\n     * Use only TRANSPORT_TEST transport networks.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "OEM_NETWORK_PREFERENCE_TEST",
    "type" : "int",
    "comment" : "\n     * This preference is only to be used for testing and nothing else.\n     * If an unmetered network is available, use it.\n     * Otherwise, if a network with the TRANSPORT_TEST transport is available, use it.\n     * Otherwise, use the general default network.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "OEM_NETWORK_PREFERENCE_UNINITIALIZED",
    "type" : "int",
    "comment" : "\n     * Default in case this value is not set. Using it will result in an error.\n     ",
    "links" : [ ]
  }, {
    "name" : "OEM_NETWORK_PREFERENCE_OEM_PAID",
    "type" : "int",
    "comment" : "\n     * If an unmetered network is available, use it.\n     * Otherwise, if a network with the OEM_PAID capability is available, use it.\n     * Otherwise, use the general default network.\n     ",
    "links" : [ ]
  }, {
    "name" : "OEM_NETWORK_PREFERENCE_OEM_PAID_NO_FALLBACK",
    "type" : "int",
    "comment" : "\n     * If an unmetered network is available, use it.\n     * Otherwise, if a network with the OEM_PAID capability is available, use it.\n     * Otherwise, the app doesn't get a default network.\n     ",
    "links" : [ ]
  }, {
    "name" : "OEM_NETWORK_PREFERENCE_OEM_PAID_ONLY",
    "type" : "int",
    "comment" : "\n     * Use only NET_CAPABILITY_OEM_PAID networks.\n     ",
    "links" : [ ]
  }, {
    "name" : "OEM_NETWORK_PREFERENCE_OEM_PRIVATE_ONLY",
    "type" : "int",
    "comment" : "\n     * Use only NET_CAPABILITY_OEM_PRIVATE networks.\n     ",
    "links" : [ ]
  }, {
    "name" : "OEM_NETWORK_PREFERENCE_MAX",
    "type" : "int",
    "comment" : "\n     * The max allowed value for an OEM network preference.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mNetworkMappings",
    "type" : "Bundle",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<OemNetworkPreferences>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isEmpty()",
    "returnType" : "boolean",
    "comment" : "\n     * Return whether this object is empty.\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<String, Integer> getNetworkPreferences()",
    "returnType" : "Map<String, Integer>",
    "comment" : "\n     * Return the currently built application package name to {@link OemNetworkPreference} mappings.\n     * @return the current network preferences map.\n     ",
    "links" : [ "OemNetworkPreference" ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static Map<String, Integer> convertToUnmodifiableMap(@NonNull final Bundle bundle)",
    "returnType" : "Map<String, Integer>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String oemNetworkPreferenceToString(@OemNetworkPreference int value)",
    "returnType" : "String",
    "comment" : "\n     * Return the string value for OemNetworkPreference\n     *\n     * @param value int value of OemNetworkPreference\n     * @return string version of OemNetworkPreference\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull android.os.Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean isEmpty()", "public Map<String, Integer> getNetworkPreferences()", "public String toString()", "public boolean equals(Object o)", "public int hashCode()", "private static Map<String, Integer> convertToUnmodifiableMap(@NonNull final Bundle bundle)", "public static String oemNetworkPreferenceToString(@OemNetworkPreference int value)", "public void writeToParcel(@NonNull android.os.Parcel dest, int flags)", "public int describeContents()" ],
  "variableNames" : [ "OEM_NETWORK_PREFERENCE_TEST_ONLY", "OEM_NETWORK_PREFERENCE_TEST", "OEM_NETWORK_PREFERENCE_UNINITIALIZED", "OEM_NETWORK_PREFERENCE_OEM_PAID", "OEM_NETWORK_PREFERENCE_OEM_PAID_NO_FALLBACK", "OEM_NETWORK_PREFERENCE_OEM_PAID_ONLY", "OEM_NETWORK_PREFERENCE_OEM_PRIVATE_ONLY", "OEM_NETWORK_PREFERENCE_MAX", "mNetworkMappings", "CREATOR" ]
}