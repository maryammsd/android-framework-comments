{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/Trie2.java",
  "packageName" : "android.icu.impl",
  "className" : "Trie2Iterator",
  "comment" : "\n     * Implementation class for an iterator over a Trie2.\n     *\n     *   Iteration over a Trie2 first returns all of the ranges that are indexed by code points,\n     *   then returns the special alternate values for the lead surrogates\n     *\n     * @hide draft / provisional / internal are hidden on Android\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mapper",
    "type" : "ValueMapper",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "returnValue",
    "type" : "Range",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "nextStart",
    "type" : "int",
    "comment" : " The starting code point for the next range to be returned.",
    "links" : [ ]
  }, {
    "name" : "limitCP",
    "type" : "int",
    "comment" : "   may be lower when iterating over the code points for a single lead surrogate.",
    "links" : [ ]
  }, {
    "name" : "doingCodePoints",
    "type" : "boolean",
    "comment" : " False while iterating over the alternate values for lead surrogates.",
    "links" : [ ]
  }, {
    "name" : "doLeadSurrogates",
    "type" : "boolean",
    "comment" : "   addition to the normal values for code points.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Range next()",
    "returnType" : "Range",
    "comment" : "\n         *  The main next() function for Trie2 iterators\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean hasNext()",
    "returnType" : "boolean",
    "comment" : "\n         *\n         ",
    "links" : [ ]
  }, {
    "name" : "public void remove()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private int rangeEndLS(char startingLS)",
    "returnType" : "int",
    "comment" : "\n         * Find the last lead surrogate in a contiguous range  with the\n         * same Trie2 value as the input character.\n         *\n         * Use the alternate Lead Surrogate values from the Trie2,\n         * not the code-point values.\n         *\n         * Note: Trie2_16 and Trie2_32 override this implementation with optimized versions,\n         *       meaning that the implementation here is only being used with\n         *       Trie2Writable.  The code here is logically correct with any type\n         *       of Trie2, however.\n         *\n         * @param c  The character to begin with.\n         * @return   The last contiguous character with the same value.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Range next()", "public boolean hasNext()", "public void remove()", "private int rangeEndLS(char startingLS)" ],
  "variableNames" : [ "mapper", "returnValue", "nextStart", "limitCP", "doingCodePoints", "doLeadSurrogates" ]
}