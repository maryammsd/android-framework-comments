{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/sax/Element.java",
  "packageName" : "android.sax",
  "className" : "Element",
  "comment" : "\n * An XML element. Provides access to child elements and hooks to listen\n * for events related to this element.\n *\n * @see RootElement\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "uri",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "localName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "depth",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "parent",
    "type" : "Element",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "children",
    "type" : "Children",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "requiredChilden",
    "type" : "ArrayList<Element>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "visited",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "startElementListener",
    "type" : "StartElementListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "endElementListener",
    "type" : "EndElementListener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "endTextElementListener",
    "type" : "EndTextElementListener",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Element getChild(String localName)",
    "returnType" : "Element",
    "comment" : "\n     * Gets the child element with the given name. Uses an empty string as the\n     * namespace.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Element getChild(String uri, String localName)",
    "returnType" : "Element",
    "comment" : "\n     * Gets the child element with the given name.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Element requireChild(String localName)",
    "returnType" : "Element",
    "comment" : "\n     * Gets the child element with the given name. Uses an empty string as the\n     * namespace. We will throw a {@link org.xml.sax.SAXException} at parsing\n     * time if the specified child is missing. This helps you ensure that your\n     * listeners are called.\n     ",
    "links" : [ "org.xml.sax.SAXException" ]
  }, {
    "name" : "public Element requireChild(String uri, String localName)",
    "returnType" : "Element",
    "comment" : "\n     * Gets the child element with the given name. We will throw a\n     * {@link org.xml.sax.SAXException} at parsing time if the specified child\n     * is missing. This helps you ensure that your listeners are called.\n     ",
    "links" : [ "org.xml.sax.SAXException" ]
  }, {
    "name" : "public void setElementListener(ElementListener elementListener)",
    "returnType" : "void",
    "comment" : "\n     * Sets start and end element listeners at the same time.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setTextElementListener(TextElementListener elementListener)",
    "returnType" : "void",
    "comment" : "\n     * Sets start and end text element listeners at the same time.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setStartElementListener(StartElementListener startElementListener)",
    "returnType" : "void",
    "comment" : "\n     * Sets a listener for the start of this element.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setEndElementListener(EndElementListener endElementListener)",
    "returnType" : "void",
    "comment" : "\n     * Sets a listener for the end of this element.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setEndTextElementListener(EndTextElementListener endTextElementListener)",
    "returnType" : "void",
    "comment" : "\n     * Sets a listener for the end of this text element.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String toString(String uri, String localName)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " void resetRequiredChildren()",
    "returnType" : "void",
    "comment" : "\n     * Clears flags on required children.\n     ",
    "links" : [ ]
  }, {
    "name" : " void checkRequiredChildren(Locator locator) throws SAXParseException",
    "returnType" : "void",
    "comment" : "\n     * Throws an exception if a required child was not present.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Element getChild(String localName)", "public Element getChild(String uri, String localName)", "public Element requireChild(String localName)", "public Element requireChild(String uri, String localName)", "public void setElementListener(ElementListener elementListener)", "public void setTextElementListener(TextElementListener elementListener)", "public void setStartElementListener(StartElementListener startElementListener)", "public void setEndElementListener(EndElementListener endElementListener)", "public void setEndTextElementListener(EndTextElementListener endTextElementListener)", "public String toString()", " static String toString(String uri, String localName)", " void resetRequiredChildren()", " void checkRequiredChildren(Locator locator) throws SAXParseException" ],
  "variableNames" : [ "uri", "localName", "depth", "parent", "children", "requiredChilden", "visited", "startElementListener", "endElementListener", "endTextElementListener" ]
}