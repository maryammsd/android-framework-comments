{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/database/sqlite/SQLiteGlobal.java",
  "packageName" : "android.database.sqlite",
  "className" : "SQLiteGlobal",
  "comment" : "\n * Provides access to SQLite functions that affect all database connection,\n * such as memory management.\n *\n * The native code associated with SQLiteGlobal is also sets global configuration options\n * using sqlite3_config() then calls sqlite3_initialize() to ensure that the SQLite\n * library is properly initialized exactly once before any other framework or application\n * code has a chance to run.\n *\n * Verbose SQLite logging is enabled if the \"log.tag.SQLiteLog\" property is set to \"V\".\n * (per {@link SQLiteDebug#DEBUG_SQL_LOG}).\n *\n * @hide\n ",
  "links" : [ "android.database.sqlite.SQLiteDebug#DEBUG_SQL_LOG" ],
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SYNC_MODE_FULL",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "WIPE_CHECK_FILE_SUFFIX",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "sLock",
    "type" : "Object",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sDefaultPageSize",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "sDefaultSyncMode",
    "type" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static native int nativeReleaseMemory()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static int releaseMemory()",
    "returnType" : "int",
    "comment" : "\n     * Attempts to release memory by pruning the SQLite page cache and other\n     * internal data structures.\n     *\n     * @return The number of bytes that were freed.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getDefaultPageSize()",
    "returnType" : "int",
    "comment" : "\n     * Gets the default page size to use when creating a database.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getDefaultJournalMode()",
    "returnType" : "String",
    "comment" : "\n     * Gets the default journal mode when WAL is not in use.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getJournalSizeLimit()",
    "returnType" : "int",
    "comment" : "\n     * Gets the journal size limit in bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getDefaultSyncMode()",
    "returnType" : "String",
    "comment" : "\n     * Gets the default database synchronization mode when WAL is not in use.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static String getWALSyncMode()",
    "returnType" : "String",
    "comment" : "\n     * Gets the database synchronization mode when in WAL mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getWALAutoCheckpoint()",
    "returnType" : "int",
    "comment" : "\n     * Gets the WAL auto-checkpoint integer in database pages.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getWALConnectionPoolSize()",
    "returnType" : "int",
    "comment" : "\n     * Gets the connection pool size when in WAL mode.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getIdleConnectionTimeout()",
    "returnType" : "int",
    "comment" : "\n     * The default number of milliseconds that SQLite connection is allowed to be idle before it\n     * is closed and removed from the pool.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static long getWALTruncateSize()",
    "returnType" : "long",
    "comment" : "\n     * When opening a database, if the WAL file is larger than this size, we'll truncate it.\n     *\n     * (If it's 0, we do not truncate.)\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static boolean checkDbWipe()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static native int nativeReleaseMemory()", "public static int releaseMemory()", "public static int getDefaultPageSize()", "public static String getDefaultJournalMode()", "public static int getJournalSizeLimit()", "public static String getDefaultSyncMode()", "public static String getWALSyncMode()", "public static int getWALAutoCheckpoint()", "public static int getWALConnectionPoolSize()", "public static int getIdleConnectionTimeout()", "public static long getWALTruncateSize()", "public static boolean checkDbWipe()" ],
  "variableNames" : [ "TAG", "SYNC_MODE_FULL", "WIPE_CHECK_FILE_SUFFIX", "sLock", "sDefaultPageSize", "sDefaultSyncMode" ]
}