{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/renderscript/Program.java",
  "packageName" : "android.renderscript",
  "className" : "Program",
  "comment" : "\n * @hide\n *\n * Program is a base class for all the objects that modify\n * various stages of the graphics pipeline\n *\n *",
  "variables" : [ {
    "name" : "MAX_INPUT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_OUTPUT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_CONSTANT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MAX_TEXTURE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mInputs",
    "type" : "Element[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOutputs",
    "type" : "Element[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConstants",
    "type" : "Type[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextures",
    "type" : "TextureType[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextureNames",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTextureCount",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mShader",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getConstantCount()",
    "returnType" : "int",
    "comment" : "\n     * Program object can have zero or more constant allocations\n     * associated with it. This method returns the total count.\n     * @return number of constant input types\n     ",
    "links" : [ ]
  }, {
    "name" : "public Type getConstant(int slot)",
    "returnType" : "Type",
    "comment" : "\n     * Returns the type of the constant buffer used in the program\n     * object. It could be used to query internal elements or create\n     * an allocation to store constant data.\n     * @param slot index of the constant input type to return\n     * @return constant input type\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTextureCount()",
    "returnType" : "int",
    "comment" : "\n     * Returns the number of textures used in this program object\n     * @return number of texture inputs\n     ",
    "links" : [ ]
  }, {
    "name" : "public TextureType getTextureType(int slot)",
    "returnType" : "TextureType",
    "comment" : "\n     * Returns the type of texture at a given slot. e.g. 2D or Cube\n     * @param slot index of the texture input\n     * @return texture input type\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getTextureName(int slot)",
    "returnType" : "String",
    "comment" : "\n     * Returns the name of the texture input at a given slot. e.g.\n     * tex0, diffuse, spec\n     * @param slot index of the texture input\n     * @return texture input name\n     ",
    "links" : [ ]
  }, {
    "name" : "public void bindConstants(Allocation a, int slot)",
    "returnType" : "void",
    "comment" : "\n     * Binds a constant buffer to be used as uniform inputs to the\n     * program\n     *\n     * @param a allocation containing uniform data\n     * @param slot index within the program's list of constant\n     *             buffer allocations\n     ",
    "links" : [ ]
  }, {
    "name" : "public void bindTexture(Allocation va, int slot) throws IllegalArgumentException",
    "returnType" : "void",
    "comment" : "\n     * Binds a texture to be used in the program\n     *\n     * @param va allocation containing texture data\n     * @param slot index within the program's list of textures\n     *\n     ",
    "links" : [ ]
  }, {
    "name" : "public void bindSampler(Sampler vs, int slot) throws IllegalArgumentException",
    "returnType" : "void",
    "comment" : "\n     * Binds an object that describes how a texture at the\n     * corresponding location is sampled\n     *\n     * @param vs sampler for a corresponding texture\n     * @param slot index within the program's list of textures to\n     *             use the sampler on\n     *\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "MAX_INPUT", "MAX_OUTPUT", "MAX_CONSTANT", "MAX_TEXTURE", "mInputs", "mOutputs", "mConstants", "mTextures", "mTextureNames", "mTextureCount", "mShader" ],
  "methodNames" : [ "public int getConstantCount()", "public Type getConstant(int slot)", "public int getTextureCount()", "public TextureType getTextureType(int slot)", "public String getTextureName(int slot)", "public void bindConstants(Allocation a, int slot)", "public void bindTexture(Allocation va, int slot) throws IllegalArgumentException", "public void bindSampler(Sampler vs, int slot) throws IllegalArgumentException" ]
}