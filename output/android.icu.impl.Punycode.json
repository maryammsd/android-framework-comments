{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/Punycode.java",
  "packageName" : "android.icu.impl",
  "className" : "Punycode",
  "comment" : "\n * Ported code from ICU punycode.c\n * @author ram\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "BASE",
    "type" : "int",
    "comment" : " Punycode parameters for Bootstring ",
    "links" : [ ]
  }, {
    "name" : "TMIN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TMAX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SKEW",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DAMP",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INITIAL_BIAS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INITIAL_N",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "HYPHEN",
    "type" : "char",
    "comment" : " \"Basic\" Unicode/ASCII code points ",
    "links" : [ ]
  }, {
    "name" : "DELIMITER",
    "type" : "char",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ZERO",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SMALL_A",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SMALL_Z",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAPITAL_A",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CAPITAL_Z",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ENCODE_MAX_CODE_UNITS",
    "type" : "int",
    "comment" : " where well-formed strings are at most 59 characters long.",
    "links" : [ ]
  }, {
    "name" : "DECODE_MAX_CHARS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private static int adaptBias(int delta, int length, boolean firstTime)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static final int decodeDigit(int cp)",
    "returnType" : "int",
    "comment" : "\n     * @return the numeric value of a basic code point (for use in representing integers)\n     *         in the range 0 to BASE-1, or a negative value if cp is invalid.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static char asciiCaseMap(char b, boolean uppercase)",
    "returnType" : "char",
    "comment" : "/CLOVER:OFF",
    "links" : [ ]
  }, {
    "name" : "private static char digitToBasic(int digit, boolean uppercase)",
    "returnType" : "char",
    "comment" : "\n     * digitToBasic() returns the basic code point whose value\n     * (when used for representing integers) is d, which must be in the\n     * range 0 to BASE-1. The lowercase form is used unless the uppercase flag is\n     * nonzero, in which case the uppercase form is used.\n     ",
    "links" : [ ]
  }, {
    "name" : "public static StringBuilder encode(CharSequence src, boolean[] caseFlags) throws StringPrepParseException",
    "returnType" : "StringBuilder",
    "comment" : "\n     * Converts Unicode to Punycode.\n     * The input string must not contain single, unpaired surrogates.\n     * The output will be represented as an array of ASCII code points.\n     *\n     * @param src The source of the String Buffer passed.\n     * @param caseFlags The boolean array of case flags.\n     * @return An array of ASCII code points.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean isBasic(int ch)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isBasicUpperCase(int ch)",
    "returnType" : "boolean",
    "comment" : "/CLOVER:OFF",
    "links" : [ ]
  }, {
    "name" : "private static boolean isSurrogate(int ch)",
    "returnType" : "boolean",
    "comment" : "/CLOVER:ON",
    "links" : [ ]
  }, {
    "name" : "public static StringBuilder decode(CharSequence src, boolean[] caseFlags) throws StringPrepParseException",
    "returnType" : "StringBuilder",
    "comment" : "\n     * Converts Punycode to Unicode.\n     * The Unicode string will be at most as long as the Punycode string.\n     *\n     * @param src The source of the string buffer being passed.\n     * @param caseFlags The array of boolean case flags.\n     * @return StringBuilder string.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "private static int adaptBias(int delta, int length, boolean firstTime)", "private static final int decodeDigit(int cp)", "private static char asciiCaseMap(char b, boolean uppercase)", "private static char digitToBasic(int digit, boolean uppercase)", "public static StringBuilder encode(CharSequence src, boolean[] caseFlags) throws StringPrepParseException", "private static boolean isBasic(int ch)", "private static boolean isBasicUpperCase(int ch)", "private static boolean isSurrogate(int ch)", "public static StringBuilder decode(CharSequence src, boolean[] caseFlags) throws StringPrepParseException" ],
  "variableNames" : [ "BASE", "TMIN", "TMAX", "SKEW", "DAMP", "INITIAL_BIAS", "INITIAL_N", "HYPHEN", "DELIMITER", "ZERO", "SMALL_A", "SMALL_Z", "CAPITAL_A", "CAPITAL_Z", "ENCODE_MAX_CODE_UNITS", "DECODE_MAX_CHARS" ]
}