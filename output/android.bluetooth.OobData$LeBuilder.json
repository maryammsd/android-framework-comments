{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/OobData.java",
  "packageName" : "android.bluetooth",
  "className" : "LeBuilder",
  "comment" : "\n     * Builds an {@link OobData} object and validates that the required combination of values are\n     * present to create the LE specific OobData type.\n     *\n     * @hide\n     ",
  "links" : [ "android.bluetooth.OobData" ],
  "variables" : [ {
    "name" : "mConfirmationHash",
    "type" : "byte[]",
    "comment" : "\n         * It is recommended that this Hash C is generated anew for each pairing.\n         *\n         * <p>It should be noted that on passive NFC this isn't possible as the data is static and\n         * immutable.\n         ",
    "links" : [ ]
  }, {
    "name" : "mRandomizerHash",
    "type" : "byte[]",
    "comment" : "\n         * Optional, but adds more validity to the pairing.\n         *\n         * <p>If not present a value of 0 is assumed.\n         ",
    "links" : [ ]
  }, {
    "name" : "mDeviceName",
    "type" : "byte[]",
    "comment" : "\n         * The Bluetooth Device user-friendly name presented over Bluetooth Technology.\n         *\n         * <p>This is the name that may be displayed to the device user as part of the UI.\n         ",
    "links" : [ ]
  }, {
    "name" : "mDeviceAddressWithType",
    "type" : "byte[]",
    "comment" : "\n         * The Bluetooth Device Address is the address to which the OOB data belongs.\n         *\n         * <p>The length MUST be {@link OobData#DEVICE_ADDRESS_OCTETS} octets.\n         *\n         * <p>Address is encoded in Little Endian order.\n         *\n         * <p>e.g. 00:01:02:03:04:05 would be x05x04x03x02x01x00\n         ",
    "links" : [ "android.bluetooth.OobData#DEVICE_ADDRESS_OCTETS" ]
  }, {
    "name" : "mLeDeviceRole",
    "type" : "int",
    "comment" : "\n         * During an LE connection establishment, one must be in the Peripheral mode and the other\n         * in the Central role.\n         *\n         * <p>Possible Values: {@link LE_DEVICE_ROLE_PERIPHERAL_ONLY} Only Peripheral supported\n         * {@link LE_DEVICE_ROLE_CENTRAL_ONLY} Only Central supported {@link\n         * LE_DEVICE_ROLE_BOTH_PREFER_PERIPHERAL} Central & Peripheral supported; Peripheral\n         * Preferred {@link LE_DEVICE_ROLE_BOTH_PREFER_CENTRAL} Only peripheral supported; Central\n         * Preferred 0x04 - 0xFF Reserved\n         ",
    "links" : [ "LE_DEVICE_ROLE_BOTH_PREFER_PERIPHERAL", "LE_DEVICE_ROLE_BOTH_PREFER_CENTRAL", "LE_DEVICE_ROLE_PERIPHERAL_ONLY", "LE_DEVICE_ROLE_CENTRAL_ONLY" ]
  }, {
    "name" : "mLeTemporaryKey",
    "type" : "byte[]",
    "comment" : "\n         * Temporary key value from the Security Manager.\n         *\n         * <p>Must be {@link LE_TK_OCTETS} in size\n         ",
    "links" : [ "LE_TK_OCTETS" ]
  }, {
    "name" : "mLeAppearance",
    "type" : "byte[]",
    "comment" : "\n         * Defines the representation of the external appearance of the device.\n         *\n         * <p>For example, a mouse, remote control, or keyboard.\n         *\n         * <p>Used for visual on discovering device to represent icon/string/etc...\n         ",
    "links" : [ ]
  }, {
    "name" : "mLeFlags",
    "type" : "int",
    "comment" : " Invalid default",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public LeBuilder setDeviceName(@NonNull byte[] deviceName)",
    "returnType" : "LeBuilder",
    "comment" : "\n         * Sets the Bluetooth Device name to be used for UI purposes.\n         *\n         * <p>Optional attribute.\n         *\n         * @param deviceName byte array representing the name, may be 0 in length, not null.\n         * @return {@link OobData#ClassicBuilder}\n         * @throws NullPointerException if deviceName is null.\n         * @hide\n         ",
    "links" : [ "android.bluetooth.OobData#ClassicBuilder" ]
  }, {
    "name" : "public LeBuilder setLeTemporaryKey(@NonNull byte[] leTemporaryKey)",
    "returnType" : "LeBuilder",
    "comment" : "\n         * Sets the Temporary Key value to be used by the LE Security Manager during LE pairing.\n         *\n         * @param leTemporaryKey byte array that shall be 16 bytes. Please see Bluetooth CSSv6, Part\n         *     A 1.8 for a detailed description.\n         * @return {@link OobData#Builder}\n         * @throws IllegalArgumentException if the leTemporaryKey is an invalid format.\n         * @throws NullinterException if leTemporaryKey is null.\n         * @hide\n         ",
    "links" : [ "android.bluetooth.OobData#Builder" ]
  }, {
    "name" : "public LeBuilder setRandomizerHash(@NonNull byte[] randomizerHash)",
    "returnType" : "LeBuilder",
    "comment" : "\n         * @param randomizerHash byte array consisting of {@link OobData#RANDOMIZER_OCTETS} octets\n         *     of data. Data is derived from controller/host stack and is required for pairing OOB.\n         *     Also, randomizerHash may be all 0s or null in which case it becomes all 0s.\n         * @throws IllegalArgumentException if null or incorrect length randomizerHash was passed.\n         * @throws NullPointerException if randomizerHash is null.\n         * @hide\n         ",
    "links" : [ "android.bluetooth.OobData#RANDOMIZER_OCTETS" ]
  }, {
    "name" : "public LeBuilder setLeFlags(@LeFlag int leFlags)",
    "returnType" : "LeBuilder",
    "comment" : "\n         * Sets the LE Flags necessary for the pairing scenario or discovery mode.\n         *\n         * @param leFlags enum value representing the 1 octet of data about discovery modes.\n         *     <p>Possible LE Flags: {@link LE_FLAG_LIMITED_DISCOVERY_MODE} LE Limited Discoverable\n         *     Mode. {@link LE_FLAG_GENERAL_DISCOVERY_MODE} LE General Discoverable Mode. {@link\n         *     LE_FLAG_BREDR_NOT_SUPPORTED} BR/EDR Not Supported. Bit 37 of LMP Feature Mask\n         *     Definitions. {@link LE_FLAG_SIMULTANEOUS_CONTROLLER} Simultaneous LE and BR/EDR to\n         *     Same Device Capable (Controller) Bit 49 of LMP Feature Mask Definitions. {@link\n         *     LE_FLAG_SIMULTANEOUS_HOST} Simultaneous LE and BR/EDR to Same Device Capable (Host).\n         *     Bit 55 of LMP Feature Mask Definitions. 0x05- 0x07 Reserved\n         * @throws IllegalArgumentException for invalid flag\n         * @hide\n         ",
    "links" : [ "LE_FLAG_SIMULTANEOUS_HOST", "LE_FLAG_BREDR_NOT_SUPPORTED", "LE_FLAG_LIMITED_DISCOVERY_MODE", "LE_FLAG_GENERAL_DISCOVERY_MODE", "LE_FLAG_SIMULTANEOUS_CONTROLLER" ]
  }, {
    "name" : "public OobData build()",
    "returnType" : "OobData",
    "comment" : "\n         * Validates and builds the {@link OobData} object for LE Security.\n         *\n         * @return {@link OobData} with given builder values\n         * @throws IllegalStateException if either of the 2 required fields were not set.\n         * @hide\n         ",
    "links" : [ "android.bluetooth.OobData" ]
  } ],
  "methodNames" : [ "public LeBuilder setDeviceName(@NonNull byte[] deviceName)", "public LeBuilder setLeTemporaryKey(@NonNull byte[] leTemporaryKey)", "public LeBuilder setRandomizerHash(@NonNull byte[] randomizerHash)", "public LeBuilder setLeFlags(@LeFlag int leFlags)", "public OobData build()" ],
  "variableNames" : [ "mConfirmationHash", "mRandomizerHash", "mDeviceName", "mDeviceAddressWithType", "mLeDeviceRole", "mLeTemporaryKey", "mLeAppearance", "mLeFlags" ]
}