{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/perftests/utils/TraceMarkParser.java",
  "packageName" : "android.perftests.utils",
  "className" : "TraceMarkParser",
  "comment" : "\n * Utility to get the slice of tracing_mark_write S,F,B,E (Async: start, finish, Sync: begin, end).\n * Use {@link #visit(String)} to process the trace in text form. The filtered results can be\n * obtained by {@link #forAllSlices(BiConsumer)}.\n *\n * @see android.os.Trace\n ",
  "variables" : [ {
    "name" : "mSlicesMap",
    "type" : "Map<String, List<TraceMarkSlice>>",
    "comment" : " All slices by the name of {@link TraceMarkLine}. ",
    "links" : [ "TraceMarkLine" ]
  }, {
    "name" : "mDepthMap",
    "type" : "Map<String, Integer>",
    "comment" : " The nested depth of each task-pid. ",
    "links" : [ ]
  }, {
    "name" : "mPendingStarts",
    "type" : "Map<String, TraceMarkLine>",
    "comment" : " The start trace lines that haven't matched the corresponding end. ",
    "links" : [ ]
  }, {
    "name" : "mTraceLineFilter",
    "type" : "Predicate<TraceMarkLine>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MICROS_PER_SECOND",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void visit(String textTraceLine)",
    "returnType" : "void",
    "comment" : " Computes {@link TraceMarkSlice} by the given trace line. ",
    "links" : [ "TraceMarkSlice" ]
  }, {
    "name" : "private static String getSyncPendingStartKey(TraceMarkLine line, int depth)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void addSlice(TraceMarkLine begin, TraceMarkLine end)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void forAllSlices(BiConsumer<String, List<TraceMarkSlice>> consumer)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void reset()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static double microsecondToSeconds(long ms)",
    "returnType" : "double",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mSlicesMap", "mDepthMap", "mPendingStarts", "mTraceLineFilter", "MICROS_PER_SECOND" ],
  "methodNames" : [ "public void visit(String textTraceLine)", "private static String getSyncPendingStartKey(TraceMarkLine line, int depth)", "private void addSlice(TraceMarkLine begin, TraceMarkLine end)", "public void forAllSlices(BiConsumer<String, List<TraceMarkSlice>> consumer)", "public void reset()", "public String toString()", " static double microsecondToSeconds(long ms)" ]
}