{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/lang/StackStreamFactory.java",
  "packageName" : "java.lang",
  "className" : "StackStreamFactory",
  "comment" : "\n * StackStreamFactory class provides static factory methods\n * to get different kinds of stack walker/traverser.\n *\n * AbstractStackWalker provides the basic stack walking support\n * fetching stack frames from VM in batches.\n *\n * AbstractStackWalker subclass is specialized for a specific kind of stack traversal\n * to avoid overhead of Stream/Lambda\n * 1. Support traversing Stream<StackFrame>\n * 2. StackWalker::getCallerClass\n * 3. AccessControlContext getting ProtectionDomain\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "stackWalkImplClasses",
    "type" : "Set<Class<?>>",
    "comment" : " lazily add subclasses when they are loaded.",
    "links" : [ ]
  }, {
    "name" : "SMALL_BATCH",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BATCH_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LARGE_BATCH_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "MIN_BATCH_SIZE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEFAULT_MODE",
    "type" : "int",
    "comment" : " These flags must match the values maintained in the VM",
    "links" : [ ]
  }, {
    "name" : "FILL_CLASS_REFS_ONLY",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "GET_CALLER_CLASS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "SHOW_HIDDEN_FRAMES",
    "type" : "int",
    "comment" : " LambdaForms are hidden by the VM",
    "links" : [ ]
  }, {
    "name" : "FILL_LIVE_STACK_FRAMES",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "isDebug",
    "type" : "boolean",
    "comment" : "\n     * For Throwable to use StackWalker, set useNewThrowable to true.\n     * Performance work and extensive testing is needed to replace the\n     * VM built-in backtrace filled in Throwable with the StackWalker.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static StackFrameTraverser<T> makeStackTraverser(StackWalker walker, Function<? super Stream<StackFrame>, ? extends T> function)",
    "returnType" : "StackFrameTraverser<T>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static CallerClassFinder makeCallerFinder(StackWalker walker)",
    "returnType" : "CallerClassFinder",
    "comment" : "\n     * Gets a stack stream to find caller class.\n     ",
    "links" : [ ]
  }, {
    "name" : "private static boolean checkStackWalkModes()",
    "returnType" : "boolean",
    "comment" : " private static native boolean checkStackWalkModes();",
    "links" : [ ]
  }, {
    "name" : "private static Set<Class<?>> init()",
    "returnType" : "Set<Class<?>>",
    "comment" : " avoid loading other subclasses as they may not be used",
    "links" : [ ]
  }, {
    "name" : "private static boolean filterStackWalkImpl(Class<?> c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isMethodHandleFrame(Class<?> c)",
    "returnType" : "boolean",
    "comment" : " to filter them out",
    "links" : [ ]
  }, {
    "name" : "private static boolean isReflectionFrame(Class<?> c)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static native Object nativeGetStackAnchor()",
    "returnType" : "Object",
    "comment" : " BEGIN Android-added: Add methods to retrieve StackFrameInfo from ART.",
    "links" : [ ]
  }, {
    "name" : "private static native int nativeFetchStackFrameInfo(long mode, Object anchor, int startLevel, int batchSize, int startBufferIndex, Object[] buffer)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static StackFrameTraverser<T> makeStackTraverser(StackWalker walker, Function<? super Stream<StackFrame>, ? extends T> function)", " static CallerClassFinder makeCallerFinder(StackWalker walker)", "private static boolean checkStackWalkModes()", "private static Set<Class<?>> init()", "private static boolean filterStackWalkImpl(Class<?> c)", "private static boolean isMethodHandleFrame(Class<?> c)", "private static boolean isReflectionFrame(Class<?> c)", "private static native Object nativeGetStackAnchor()", "private static native int nativeFetchStackFrameInfo(long mode, Object anchor, int startLevel, int batchSize, int startBufferIndex, Object[] buffer)" ],
  "variableNames" : [ "stackWalkImplClasses", "SMALL_BATCH", "BATCH_SIZE", "LARGE_BATCH_SIZE", "MIN_BATCH_SIZE", "DEFAULT_MODE", "FILL_CLASS_REFS_ONLY", "GET_CALLER_CLASS", "SHOW_HIDDEN_FRAMES", "FILL_LIVE_STACK_FRAMES", "isDebug" ]
}