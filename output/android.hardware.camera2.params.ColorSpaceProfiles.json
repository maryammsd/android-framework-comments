{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/hardware/camera2/params/ColorSpaceProfiles.java",
  "packageName" : "android.hardware.camera2.params",
  "className" : "ColorSpaceProfiles",
  "comment" : "\n * Immutable class with information about supported color space profiles.\n *\n * <p>An instance of this class can be queried by retrieving the value of\n * {@link android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_COLOR_SPACE_PROFILES}.\n * </p>\n *\n * <p>All camera devices supporting the\n * {@link android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_COLOR_SPACE_PROFILES}\n * capability must advertise the supported color space profiles in\n * {@link #getSupportedColorSpaces}</p>\n *\n * @see SessionConfiguration#setColorSpace\n ",
  "links" : [ "#getSupportedColorSpaces", "android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_COLOR_SPACE_PROFILES", "android.hardware.camera2.CameraCharacteristics#REQUEST_AVAILABLE_CAPABILITIES_COLOR_SPACE_PROFILES" ],
  "variables" : [ {
    "name" : "UNSPECIFIED",
    "type" : "int",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "mProfileMap",
    "type" : "Map<ColorSpace.Named, Map<Integer, Set<Long>>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static void checkProfileValue(int colorSpace)",
    "returnType" : "void",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Map<ColorSpace.Named, Map<Integer, Set<Long>>> getProfileMap()",
    "returnType" : "Map<ColorSpace.Named, Map<Integer, Set<Long>>>",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<ColorSpace.Named> getSupportedColorSpaces(@ImageFormat.Format int imageFormat)",
    "returnType" : "Set<ColorSpace.Named>",
    "comment" : "\n     * Return a list of color spaces that are compatible with an ImageFormat. If ImageFormat.UNKNOWN\n     * is provided, this function will return a set of all unique color spaces supported by the\n     * device, regardless of image format.\n     *\n     * Color spaces which are compatible with ImageFormat.PRIVATE are able to be used with\n     * SurfaceView, SurfaceTexture, MediaCodec and MediaRecorder.\n     *\n     * @return set of color spaces\n     * @see SessionConfiguration#setColorSpace\n     * @see ColorSpace.Named\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<Integer> getSupportedImageFormatsForColorSpace(@NonNull ColorSpace.Named colorSpace)",
    "returnType" : "Set<Integer>",
    "comment" : "\n     * Return a list of image formats that are compatible with a color space.\n     *\n     * Color spaces which are compatible with ImageFormat.PRIVATE are able to be used with\n     * SurfaceView, SurfaceTexture, MediaCodec and MediaRecorder.\n     *\n     * @return set of image formats\n     * @see SessionConfiguration#setColorSpace\n     * @see ColorSpace.Named\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<Long> getSupportedDynamicRangeProfiles(@NonNull ColorSpace.Named colorSpace, @ImageFormat.Format int imageFormat)",
    "returnType" : "Set<Long>",
    "comment" : "\n     * Return a list of dynamic range profiles that are compatible with a color space and\n     * ImageFormat. If ImageFormat.UNKNOWN is provided, this function will return a set of\n     * all unique dynamic range profiles supported by the device given a color space,\n     * regardless of image format.\n     *\n     * @return set of dynamic range profiles.\n     * @see OutputConfiguration#setDynamicRangeProfile\n     * @see SessionConfiguration#setColorSpace\n     * @see ColorSpace.Named\n     * @see DynamicRangeProfiles\n     ",
    "links" : [ ]
  }, {
    "name" : "public Set<ColorSpace.Named> getSupportedColorSpacesForDynamicRange(@ImageFormat.Format int imageFormat, @DynamicRangeProfiles.Profile long dynamicRangeProfile)",
    "returnType" : "Set<ColorSpace.Named>",
    "comment" : "\n     * Return a list of color spaces that are compatible with an ImageFormat and a dynamic range\n     * profile. If ImageFormat.UNKNOWN is provided, this function will return a set of all unique\n     * color spaces compatible with the given dynamic range profile, regardless of image format.\n     *\n     * @return set of color spaces\n     * @see SessionConfiguration#setColorSpace\n     * @see OutputConfiguration#setDynamicRangeProfile\n     * @see ColorSpace.Named\n     * @see DynamicRangeProfiles\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public static void checkProfileValue(int colorSpace)", "public Map<ColorSpace.Named, Map<Integer, Set<Long>>> getProfileMap()", "public Set<ColorSpace.Named> getSupportedColorSpaces(@ImageFormat.Format int imageFormat)", "public Set<Integer> getSupportedImageFormatsForColorSpace(@NonNull ColorSpace.Named colorSpace)", "public Set<Long> getSupportedDynamicRangeProfiles(@NonNull ColorSpace.Named colorSpace, @ImageFormat.Format int imageFormat)", "public Set<ColorSpace.Named> getSupportedColorSpacesForDynamicRange(@ImageFormat.Format int imageFormat, @DynamicRangeProfiles.Profile long dynamicRangeProfile)" ],
  "variableNames" : [ "UNSPECIFIED", "mProfileMap" ]
}