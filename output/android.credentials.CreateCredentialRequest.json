{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/credentials/CreateCredentialRequest.java",
  "packageName" : "android.credentials",
  "className" : "CreateCredentialRequest",
  "comment" : "\n * A request to register a specific type of user credential, potentially launching UI flows to\n * collect user consent and any other operation needed.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mAlwaysSendAppInfoToProvider",
    "type" : "boolean",
    "comment" : "\n     * True/false value to determine if the calling app info should be\n     * sent to the provider at every stage.\n     *\n     * Developers must set this to false if they wish to remove the\n     * {@link android.service.credentials.CallingAppInfo} from the query phase request\n     * that providers receive. Note, that providers will still receive the app info in\n     * the final phase after the user has selected the entry.\n     ",
    "links" : [ "android.service.credentials.CallingAppInfo" ]
  }, {
    "name" : "mType",
    "type" : "String",
    "comment" : "\n     * The requested credential type.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCredentialData",
    "type" : "Bundle",
    "comment" : "\n     * The full credential creation request data.\n     ",
    "links" : [ ]
  }, {
    "name" : "mCandidateQueryData",
    "type" : "Bundle",
    "comment" : "\n     * The partial request data that will be sent to the provider during the initial creation\n     * candidate query stage.\n     ",
    "links" : [ ]
  }, {
    "name" : "mIsSystemProviderRequired",
    "type" : "boolean",
    "comment" : "\n     * Determines whether the request must only be fulfilled by a system provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "mOrigin",
    "type" : "String",
    "comment" : "\n     * The origin of the calling app. Callers of this special API (e.g. browsers)\n     * can set this origin for an app different from their own, to be able to get credentials\n     * on behalf of that app.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<CreateCredentialRequest>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public String getType()",
    "returnType" : "String",
    "comment" : "\n     * Returns the requested credential type.\n     ",
    "links" : [ ]
  }, {
    "name" : "public Bundle getCredentialData()",
    "returnType" : "Bundle",
    "comment" : "\n     * Returns the full credential creation request data.\n     *\n     * For security reason, a provider will receive the request data in two stages. First it gets\n     * a partial request, {@link #getCandidateQueryData()} that do not contain sensitive user\n     * information; it uses this information to provide credential creation candidates that the\n     * [@code CredentialManager] will show to the user. Next, this full request data will be sent to\n     * a provider only if the user further grants the consent by choosing a candidate from the\n     * provider.\n     ",
    "links" : [ "#getCandidateQueryData()" ]
  }, {
    "name" : "public Bundle getCandidateQueryData()",
    "returnType" : "Bundle",
    "comment" : "\n     * Returns the partial request data that will be sent to the provider during the initial\n     * creation candidate query stage.\n     *\n     * For security reason, a provider will receive the request data in two stages. First it gets\n     * this partial request that do not contain sensitive user information; it uses this information\n     * to provide credential creation candidates that the [@code CredentialManager] will show to\n     * the user. Next, the full request data, {@link #getCredentialData()}, will be sent to a\n     * provider only if the user further grants the consent by choosing a candidate from the\n     * provider.\n     ",
    "links" : [ "#getCredentialData()" ]
  }, {
    "name" : "public boolean isSystemProviderRequired()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns true if the request must only be fulfilled by a system provider, and false\n     * otherwise.\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean alwaysSendAppInfoToProvider()",
    "returnType" : "boolean",
    "comment" : "\n     * Return true/false value to determine if the calling app info should always be sent\n     * to providers (if true), or removed from the query phase (if false).\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getOrigin()",
    "returnType" : "String",
    "comment" : "\n     * Returns the origin of the calling app if set otherwise returns null.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public String getType()", "public Bundle getCredentialData()", "public Bundle getCandidateQueryData()", "public boolean isSystemProviderRequired()", "public boolean alwaysSendAppInfoToProvider()", "public String getOrigin()", "public void writeToParcel(@NonNull Parcel dest, int flags)", "public int describeContents()", "public String toString()" ],
  "variableNames" : [ "mAlwaysSendAppInfoToProvider", "mType", "mCredentialData", "mCandidateQueryData", "mIsSystemProviderRequired", "mOrigin", "CREATOR" ]
}