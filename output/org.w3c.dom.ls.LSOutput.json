{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/w3c/dom/ls/LSOutput.java",
  "packageName" : "org.w3c.dom.ls",
  "className" : "LSOutput",
  "comment" : "\n *  This interface represents an output destination for data.\n * <p> This interface allows an application to encapsulate information about\n * an output destination in a single object, which may include a URI, a byte\n * stream (possibly with a specified encoding), a base URI, and/or a\n * character stream.\n * <p> The exact definitions of a byte stream and a character stream are\n * binding dependent.\n * <p> The application is expected to provide objects that implement this\n * interface whenever such objects are needed. The application can either\n * provide its own objects that implement this interface, or it can use the\n * generic factory method <code>DOMImplementationLS.createLSOutput()</code>\n * to create objects that implement this interface.\n * <p> The <code>LSSerializer</code> will use the <code>LSOutput</code> object\n * to determine where to serialize the output to. The\n * <code>LSSerializer</code> will look at the different outputs specified in\n * the <code>LSOutput</code> in the following order to know which one to\n * output to, the first one that is not null and not an empty string will be\n * used:\n * <ol>\n * <li> <code>LSOutput.characterStream</code>\n * </li>\n * <li>\n * <code>LSOutput.byteStream</code>\n * </li>\n * <li> <code>LSOutput.systemId</code>\n * </li>\n * </ol>\n * <p> <code>LSOutput</code> objects belong to the application. The DOM\n * implementation will never modify them (though it may make copies and\n * modify the copies, if necessary).\n * <p>See also the <a href='http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407'>Document Object Model (DOM) Level 3 Load\nand Save Specification</a>.\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : "public java.io.Writer getCharacterStream()",
    "returnType" : "java.io.Writer",
    "comment" : "\n     *  An attribute of a language and binding dependent type that represents\n     * a writable stream to which 16-bit units can be output.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setCharacterStream(java.io.Writer characterStream)",
    "returnType" : "void",
    "comment" : "\n     *  An attribute of a language and binding dependent type that represents\n     * a writable stream to which 16-bit units can be output.\n     ",
    "links" : [ ]
  }, {
    "name" : "public java.io.OutputStream getByteStream()",
    "returnType" : "java.io.OutputStream",
    "comment" : "\n     *  An attribute of a language and binding dependent type that represents\n     * a writable stream of bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setByteStream(java.io.OutputStream byteStream)",
    "returnType" : "void",
    "comment" : "\n     *  An attribute of a language and binding dependent type that represents\n     * a writable stream of bytes.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getSystemId()",
    "returnType" : "String",
    "comment" : "\n     *  The system identifier, a URI reference [<a href='http://www.ietf.org/rfc/rfc2396.txt'>IETF RFC 2396</a>], for this\n     * output destination.\n     * <br> If the system ID is a relative URI reference (see section 5 in [<a href='http://www.ietf.org/rfc/rfc2396.txt'>IETF RFC 2396</a>]), the\n     * behavior is implementation dependent.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setSystemId(String systemId)",
    "returnType" : "void",
    "comment" : "\n     *  The system identifier, a URI reference [<a href='http://www.ietf.org/rfc/rfc2396.txt'>IETF RFC 2396</a>], for this\n     * output destination.\n     * <br> If the system ID is a relative URI reference (see section 5 in [<a href='http://www.ietf.org/rfc/rfc2396.txt'>IETF RFC 2396</a>]), the\n     * behavior is implementation dependent.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getEncoding()",
    "returnType" : "String",
    "comment" : "\n     *  The character encoding to use for the output. The encoding must be a\n     * string acceptable for an XML encoding declaration ([<a href='http://www.w3.org/TR/2004/REC-xml-20040204'>XML 1.0</a>] section\n     * 4.3.3 \"Character Encoding in Entities\"), it is recommended that\n     * character encodings registered (as charsets) with the Internet\n     * Assigned Numbers Authority [<a href='ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets'>IANA-CHARSETS</a>]\n     *  should be referred to using their registered names.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void setEncoding(String encoding)",
    "returnType" : "void",
    "comment" : "\n     *  The character encoding to use for the output. The encoding must be a\n     * string acceptable for an XML encoding declaration ([<a href='http://www.w3.org/TR/2004/REC-xml-20040204'>XML 1.0</a>] section\n     * 4.3.3 \"Character Encoding in Entities\"), it is recommended that\n     * character encodings registered (as charsets) with the Internet\n     * Assigned Numbers Authority [<a href='ftp://ftp.isi.edu/in-notes/iana/assignments/character-sets'>IANA-CHARSETS</a>]\n     *  should be referred to using their registered names.\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public java.io.Writer getCharacterStream()", "public void setCharacterStream(java.io.Writer characterStream)", "public java.io.OutputStream getByteStream()", "public void setByteStream(java.io.OutputStream byteStream)", "public String getSystemId()", "public void setSystemId(String systemId)", "public String getEncoding()", "public void setEncoding(String encoding)" ],
  "variableNames" : [ ]
}