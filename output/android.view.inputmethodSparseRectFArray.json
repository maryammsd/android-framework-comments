{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/view/inputmethod/SparseRectFArray.java",
  "packageName" : "android.view.inputmethod",
  "className" : "SparseRectFArray",
  "comment" : "\n * An implementation of SparseArray specialized for {@link android.graphics.RectF}.\n * <p>\n * As this is a sparse array, it represents an array of {@link RectF} most of which are null. This\n * class could be in some other packages like android.graphics or android.util but currently\n * belong to android.view.inputmethod because this class is hidden and used only in input method\n * framework.\n * </p>\n * @hide\n ",
  "variables" : [ {
    "name" : "mKeys",
    "type" : "int[]",
    "comment" : "\n     * The keys, in ascending order, of those {@link RectF} that are not null. For example,\n     * {@code [null, null, null, Rect1, null, Rect2]} would be represented by {@code [3,5]}.\n     * @see #mCoordinates\n     ",
    "links" : [ "RectF" ]
  }, {
    "name" : "mCoordinates",
    "type" : "float[]",
    "comment" : "\n     * Stores coordinates of the rectangles, in the order of\n     * {@code rects[mKeys[0]].left}, {@code rects[mKeys[0]].top},\n     * {@code rects[mKeys[0]].right}, {@code rects[mKeys[0]].bottom},\n     * {@code rects[mKeys[1]].left}, {@code rects[mKeys[1]].top},\n     * {@code rects[mKeys[1]].right}, {@code rects[mKeys[1]].bottom},\n     * {@code rects[mKeys[2]].left}, {@code rects[mKeys[2]].top}, ....\n     ",
    "links" : [ ]
  }, {
    "name" : "mFlagsArray",
    "type" : "int[]",
    "comment" : "\n     * Stores visibility information.\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<SparseRectFArray>",
    "comment" : "\n     * Used to make this class parcelable.\n     ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Used to package this object into a {@link Parcel}.\n     *\n     * @param dest The {@link Parcel} to be written.\n     * @param flags The flags used for parceling.\n     ",
    "links" : [ "Parcel", "Parcel" ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object obj)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public RectF get(final int index)",
    "returnType" : "RectF",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getFlags(final int index, final int valueIfKeyNotFound)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mKeys", "mCoordinates", "mFlagsArray", "CREATOR" ],
  "methodNames" : [ "public void writeToParcel(Parcel dest, int flags)", "public int hashCode()", "public boolean equals(Object obj)", "public String toString()", "public RectF get(final int index)", "public int getFlags(final int index, final int valueIfKeyNotFound)", "public int describeContents()" ]
}