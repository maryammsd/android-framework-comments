{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/net/ConnectivityDiagnosticsManager.java",
  "packageName" : "android.net",
  "className" : "DataStallReport",
  "comment" : " Class that includes information for a suspected data stall on a specific Network ",
  "links" : [ ],
  "variables" : [ {
    "name" : "DETECTION_METHOD_DNS_EVENTS",
    "type" : "int",
    "comment" : "\n         * Indicates that the Data Stall was detected using DNS events.\n         ",
    "links" : [ ]
  }, {
    "name" : "DETECTION_METHOD_TCP_METRICS",
    "type" : "int",
    "comment" : "\n         * Indicates that the Data Stall was detected using TCP metrics.\n         ",
    "links" : [ ]
  }, {
    "name" : "KEY_TCP_METRICS_COLLECTION_PERIOD_MILLIS",
    "type" : "String",
    "comment" : "\n         * This key represents the period in milliseconds over which other included TCP metrics\n         * were measured.\n         *\n         * <p>This key will be included if the data stall detection method is\n         * {@link #DETECTION_METHOD_TCP_METRICS}.\n         *\n         * <p>This value is an int.\n         ",
    "links" : [ "#DETECTION_METHOD_TCP_METRICS" ]
  }, {
    "name" : "KEY_TCP_PACKET_FAIL_RATE",
    "type" : "String",
    "comment" : "\n         * This key represents the fail rate of TCP packets when the suspected data stall was\n         * detected.\n         *\n         * <p>This key will be included if the data stall detection method is\n         * {@link #DETECTION_METHOD_TCP_METRICS}.\n         *\n         * <p>This value is an int percentage between 0 and 100.\n         ",
    "links" : [ "#DETECTION_METHOD_TCP_METRICS" ]
  }, {
    "name" : "KEY_DNS_CONSECUTIVE_TIMEOUTS",
    "type" : "String",
    "comment" : "\n         * This key represents the consecutive number of DNS timeouts that have occurred.\n         *\n         * <p>The consecutive count will be reset any time a DNS response is received.\n         *\n         * <p>This key will be included if the data stall detection method is\n         * {@link #DETECTION_METHOD_DNS_EVENTS}.\n         *\n         * <p>This value is an int.\n         ",
    "links" : [ "#DETECTION_METHOD_DNS_EVENTS" ]
  }, {
    "name" : "mNetwork",
    "type" : "Network",
    "comment" : " The Network for which this DataStallReport applied ",
    "links" : [ ]
  }, {
    "name" : "mReportTimestamp",
    "type" : "long",
    "comment" : "\n         * The timestamp for the report. The timestamp is taken from {@link\n         * System#currentTimeMillis}.\n         ",
    "links" : [ "#currentTimeMillis" ]
  }, {
    "name" : "mDetectionMethod",
    "type" : "int",
    "comment" : " A bitmask of the detection methods used to identify the suspected data stall ",
    "links" : [ ]
  }, {
    "name" : "mLinkProperties",
    "type" : "LinkProperties",
    "comment" : " LinkProperties available on the Network at the reported timestamp ",
    "links" : [ ]
  }, {
    "name" : "mNetworkCapabilities",
    "type" : "NetworkCapabilities",
    "comment" : " NetworkCapabilities available on the Network at the reported timestamp ",
    "links" : [ ]
  }, {
    "name" : "mStallDetails",
    "type" : "PersistableBundle",
    "comment" : " PersistableBundle that may contain additional information on the suspected data stall ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<DataStallReport>",
    "comment" : " Implement the Parcelable interface ",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Network getNetwork()",
    "returnType" : "Network",
    "comment" : "\n         * Returns the Network for this DataStallReport.\n         *\n         * @return The Network for which this DataStallReport applied\n         ",
    "links" : [ ]
  }, {
    "name" : "public long getReportTimestamp()",
    "returnType" : "long",
    "comment" : "\n         * Returns the epoch timestamp (milliseconds) for when this report was taken.\n         *\n         * @return The timestamp for the report. Taken from {@link System#currentTimeMillis}.\n         ",
    "links" : [ "#currentTimeMillis" ]
  }, {
    "name" : "public int getDetectionMethod()",
    "returnType" : "int",
    "comment" : "\n         * Returns the bitmask of detection methods used to identify this suspected data stall.\n         *\n         * @return The bitmask of detection methods used to identify the suspected data stall\n         ",
    "links" : [ ]
  }, {
    "name" : "public LinkProperties getLinkProperties()",
    "returnType" : "LinkProperties",
    "comment" : "\n         * Returns the LinkProperties available when this report was taken.\n         *\n         * @return LinkProperties available on the Network at the reported timestamp\n         ",
    "links" : [ ]
  }, {
    "name" : "public NetworkCapabilities getNetworkCapabilities()",
    "returnType" : "NetworkCapabilities",
    "comment" : "\n         * Returns the NetworkCapabilities when this report was taken.\n         *\n         * @return NetworkCapabilities available on the Network at the reported timestamp\n         ",
    "links" : [ ]
  }, {
    "name" : "public PersistableBundle getStallDetails()",
    "returnType" : "PersistableBundle",
    "comment" : "\n         * Returns a PersistableBundle with additional info for this report.\n         *\n         * <p>Gets a bundle with details about the suspected data stall including information\n         * specific to the monitoring method that detected the data stall.\n         *\n         * @return PersistableBundle that may contain additional information on the suspected data\n         *     stall\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(@Nullable Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : " {@inheritDoc} ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " {@inheritDoc} ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Network getNetwork()", "public long getReportTimestamp()", "public int getDetectionMethod()", "public LinkProperties getLinkProperties()", "public NetworkCapabilities getNetworkCapabilities()", "public PersistableBundle getStallDetails()", "public boolean equals(@Nullable Object o)", "public int hashCode()", "public int describeContents()", "public void writeToParcel(@NonNull Parcel dest, int flags)" ],
  "variableNames" : [ "DETECTION_METHOD_DNS_EVENTS", "DETECTION_METHOD_TCP_METRICS", "KEY_TCP_METRICS_COLLECTION_PERIOD_MILLIS", "KEY_TCP_PACKET_FAIL_RATE", "KEY_DNS_CONSECUTIVE_TIMEOUTS", "mNetwork", "mReportTimestamp", "mDetectionMethod", "mLinkProperties", "mNetworkCapabilities", "mStallDetails", "CREATOR" ]
}