{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/MediaParser.java",
  "packageName" : "android.media",
  "className" : "SeekMap",
  "comment" : "\n     * Maps seek positions to {@link SeekPoint SeekPoints} in the stream.\n     *\n     * <p>A {@link SeekPoint} is a position in the stream from which a player may successfully start\n     * playing media samples.\n     ",
  "variables" : [ {
    "name" : "UNKNOWN_DURATION",
    "type" : "int",
    "comment" : " Returned by {@link #getDurationMicros()} when the duration is unknown. ",
    "links" : [ "#getDurationMicros" ]
  }, {
    "name" : "DUMMY",
    "type" : "SeekMap",
    "comment" : "\n         * For each {@link #getSeekPoints} call, returns a single {@link SeekPoint} whose {@link\n         * SeekPoint#timeMicros} matches the requested timestamp, and whose {@link\n         * SeekPoint#position} is 0.\n         *\n         * @hide\n         ",
    "links" : [ "#getSeekPoints", "SeekPoint" ]
  }, {
    "name" : "mExoPlayerSeekMap",
    "type" : "com.google.android.exoplayer2.extractor.SeekMap",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean isSeekable()",
    "returnType" : "boolean",
    "comment" : " Returns whether seeking is supported. ",
    "links" : [ ]
  }, {
    "name" : "public long getDurationMicros()",
    "returnType" : "long",
    "comment" : "\n         * Returns the duration of the stream in microseconds or {@link #UNKNOWN_DURATION} if the\n         * duration is unknown.\n         ",
    "links" : [ "#UNKNOWN_DURATION" ]
  }, {
    "name" : "public Pair<SeekPoint, SeekPoint> getSeekPoints(long timeMicros)",
    "returnType" : "Pair<SeekPoint, SeekPoint>",
    "comment" : "\n         * Obtains {@link SeekPoint SeekPoints} for the specified seek time in microseconds.\n         *\n         * <p>{@code getSeekPoints(timeMicros).first} contains the latest seek point for samples\n         * with timestamp equal to or smaller than {@code timeMicros}.\n         *\n         * <p>{@code getSeekPoints(timeMicros).second} contains the earliest seek point for samples\n         * with timestamp equal to or greater than {@code timeMicros}. If a seek point exists for\n         * {@code timeMicros}, the returned pair will contain the same {@link SeekPoint} twice.\n         *\n         * @param timeMicros A seek time in microseconds.\n         * @return The corresponding {@link SeekPoint SeekPoints}.\n         ",
    "links" : [ "SeekPoint", "SeekPoint", "SeekPoint" ]
  } ],
  "variableNames" : [ "UNKNOWN_DURATION", "DUMMY", "mExoPlayerSeekMap" ],
  "methodNames" : [ "public boolean isSeekable()", "public long getDurationMicros()", "public Pair<SeekPoint, SeekPoint> getSeekPoints(long timeMicros)" ]
}