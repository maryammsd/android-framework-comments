{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/media/RemoteDisplay.java",
  "packageName" : "android.media",
  "className" : "RemoteDisplay",
  "comment" : "\n * Listens for Wifi remote display connections managed by the media server.\n *\n * @hide\n ",
  "variables" : [ {
    "name" : "DISPLAY_FLAG_SECURE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_ERROR_UNKOWN",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DISPLAY_ERROR_CONNECTION_DROPPED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGuard",
    "type" : "CloseGuard",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mListener",
    "type" : "Listener",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mHandler",
    "type" : "Handler",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mOpPackageName",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPtr",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private native long nativeListen(String iface, String opPackageName)",
    "returnType" : "long",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native void nativeDispose(long ptr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native void nativePause(long ptr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private native void nativeResume(long ptr)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void finalize() throws Throwable",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static RemoteDisplay listen(String iface, Listener listener, Handler handler, String opPackageName)",
    "returnType" : "RemoteDisplay",
    "comment" : "\n     * Starts listening for displays to be connected on the specified interface.\n     *\n     * @param iface The interface address and port in the form \"x.x.x.x:y\".\n     * @param listener The listener to invoke when displays are connected or disconnected.\n     * @param handler The handler on which to invoke the listener.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void dispose()",
    "returnType" : "void",
    "comment" : "\n     * Disconnects the remote display and stops listening for new connections.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void pause()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void resume()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void dispose(boolean finalized)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void startListening(String iface)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void notifyDisplayConnected(final Surface surface, final int width, final int height, final int flags, final int session)",
    "returnType" : "void",
    "comment" : " Called from native.",
    "links" : [ ]
  }, {
    "name" : "private void notifyDisplayDisconnected()",
    "returnType" : "void",
    "comment" : " Called from native.",
    "links" : [ ]
  }, {
    "name" : "private void notifyDisplayError(final int error)",
    "returnType" : "void",
    "comment" : " Called from native.",
    "links" : [ ]
  } ],
  "variableNames" : [ "DISPLAY_FLAG_SECURE", "DISPLAY_ERROR_UNKOWN", "DISPLAY_ERROR_CONNECTION_DROPPED", "mGuard", "mListener", "mHandler", "mOpPackageName", "mPtr" ],
  "methodNames" : [ "private native long nativeListen(String iface, String opPackageName)", "private native void nativeDispose(long ptr)", "private native void nativePause(long ptr)", "private native void nativeResume(long ptr)", "protected void finalize() throws Throwable", "public static RemoteDisplay listen(String iface, Listener listener, Handler handler, String opPackageName)", "public void dispose()", "public void pause()", "public void resume()", "private void dispose(boolean finalized)", "private void startListening(String iface)", "private void notifyDisplayConnected(final Surface surface, final int width, final int height, final int flags, final int session)", "private void notifyDisplayDisconnected()", "private void notifyDisplayError(final int error)" ]
}