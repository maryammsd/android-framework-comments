{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/media/MediaTranscodingManager.java",
  "packageName" : "android.media",
  "className" : "VideoFormatResolver",
  "comment" : "\n         * VideoFormatResolver for deciding if video transcoding is needed, and if so, the track\n         * formats to use.\n         ",
  "links" : [ ],
  "variables" : [ {
    "name" : "BIT_RATE",
    "type" : "int",
    "comment" : " 20Mbps",
    "links" : [ ]
  }, {
    "name" : "mSrcVideoFormatHint",
    "type" : "MediaFormat",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSrcAudioFormatHint",
    "type" : "MediaFormat",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public boolean shouldTranscode()",
    "returnType" : "boolean",
    "comment" : "\n             * Returns whether the source content should be transcoded.\n             *\n             * @return true if the source should be transcoded.\n             ",
    "links" : [ ]
  }, {
    "name" : "public MediaFormat resolveVideoFormat()",
    "returnType" : "MediaFormat",
    "comment" : "\n             * Retrieves the video track format to be used on\n             * {@link VideoTranscodingRequest.Builder#setVideoTrackFormat(MediaFormat)} for this\n             * configuration.\n             *\n             * @return the video track format to be used if transcoding should be performed,\n             *         and null otherwise.\n             * @throws IllegalArgumentException if the hinted source video format contains invalid\n             *         parameters.\n             ",
    "links" : [ "VideoTranscodingRequest.Builder#setVideoTrackFormat(MediaFormat)" ]
  }, {
    "name" : "private static int getDefaultBitrate(int width, int height, float frameRate)",
    "returnType" : "int",
    "comment" : "\n             * Generate a default bitrate with the fixed bpp(bits-per-pixel) 0.25.\n             * This maps to:\n             * 1080P@30fps -> 16Mbps\n             * 1080P@60fps-> 32Mbps\n             * 4K@30fps -> 62Mbps\n             ",
    "links" : [ ]
  }, {
    "name" : "private static int getAVCBitrate(int width, int height, float frameRate)",
    "returnType" : "int",
    "comment" : "\n             * Query the bitrate from CamcorderProfile. If there are two profiles that match the\n             * width/height/framerate, we will use the higher one to get better quality.\n             * Return default bitrate if could not find any match profile.\n             ",
    "links" : [ ]
  }, {
    "name" : "public MediaFormat resolveAudioFormat()",
    "returnType" : "MediaFormat",
    "comment" : "\n             * Retrieves the audio track format to be used for transcoding.\n             *\n             * @return the audio track format to be used if transcoding should be performed, and\n             *         null otherwise.\n             * @hide\n             ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public boolean shouldTranscode()", "public MediaFormat resolveVideoFormat()", "private static int getDefaultBitrate(int width, int height, float frameRate)", "private static int getAVCBitrate(int width, int height, float frameRate)", "public MediaFormat resolveAudioFormat()" ],
  "variableNames" : [ "BIT_RATE", "mSrcVideoFormatHint", "mSrcAudioFormatHint" ]
}