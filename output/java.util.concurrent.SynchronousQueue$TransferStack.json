{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/java/util/concurrent/SynchronousQueue.java",
  "packageName" : "java.util.concurrent",
  "className" : "TransferStack",
  "comment" : " Dual stack ",
  "links" : [ ],
  "variables" : [ {
    "name" : "REQUEST",
    "type" : "int",
    "comment" : " Node represents an unfulfilled consumer ",
    "links" : [ ]
  }, {
    "name" : "DATA",
    "type" : "int",
    "comment" : " Node represents an unfulfilled producer ",
    "links" : [ ]
  }, {
    "name" : "FULFILLING",
    "type" : "int",
    "comment" : " Node is fulfilling another unfulfilled DATA or REQUEST ",
    "links" : [ ]
  }, {
    "name" : "head",
    "type" : "SNode",
    "comment" : " The head (top) of the stack ",
    "links" : [ ]
  }, {
    "name" : "SHEAD",
    "type" : "VarHandle",
    "comment" : " VarHandle mechanics",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : " static boolean isFulfilling(int m)",
    "returnType" : "boolean",
    "comment" : " Returns true if m has fulfilling bit set. ",
    "links" : [ ]
  }, {
    "name" : " boolean casHead(SNode h, SNode nh)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static SNode snode(SNode s, Object e, SNode next, int mode)",
    "returnType" : "SNode",
    "comment" : "\n         * Creates or resets fields of a node. Called only from transfer\n         * where the node to push on stack is lazily created and\n         * reused when possible to help reduce intervals between reads\n         * and CASes of head and to avoid surges of garbage when CASes\n         * to push nodes fail due to contention.\n         ",
    "links" : [ ]
  }, {
    "name" : " E transfer(E e, boolean timed, long nanos)",
    "returnType" : "E",
    "comment" : "\n         * Puts or takes an item.\n         ",
    "links" : [ ]
  }, {
    "name" : " void clean(SNode s)",
    "returnType" : "void",
    "comment" : "\n         * Unlinks s from the stack.\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ " static boolean isFulfilling(int m)", " boolean casHead(SNode h, SNode nh)", " static SNode snode(SNode s, Object e, SNode next, int mode)", " E transfer(E e, boolean timed, long nanos)", " void clean(SNode s)" ],
  "variableNames" : [ "REQUEST", "DATA", "FULFILLING", "head", "SHEAD" ]
}