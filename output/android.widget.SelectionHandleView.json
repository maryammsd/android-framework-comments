{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/widget/Editor.java",
  "packageName" : "android.widget",
  "className" : "SelectionHandleView",
  "comment" : " For selection handles ",
  "variables" : [ {
    "name" : "mHandleType",
    "type" : "int",
    "comment" : " end (HANDLE_TYPE_SELECTION_END).",
    "links" : [ ]
  }, {
    "name" : "mInWord",
    "type" : "boolean",
    "comment" : " Indicates whether the cursor is making adjustments within a word.",
    "links" : [ ]
  }, {
    "name" : "mTouchWordDelta",
    "type" : "float",
    "comment" : " Difference between touch position and word boundary position.",
    "links" : [ ]
  }, {
    "name" : "mPrevX",
    "type" : "float",
    "comment" : " X value of the previous updatePosition call.",
    "links" : [ ]
  }, {
    "name" : "mLanguageDirectionChanged",
    "type" : "boolean",
    "comment" : " Indicates if the handle has moved a boundary between LTR and RTL text.",
    "links" : [ ]
  }, {
    "name" : "mTextViewEdgeSlop",
    "type" : "float",
    "comment" : " to use to switch to character mode.",
    "links" : [ ]
  }, {
    "name" : "mTextViewLocation",
    "type" : "int[]",
    "comment" : " Used to save text view location.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private boolean isStartHandle()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int getHotspotX(Drawable drawable, boolean isRtlRun)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int getHorizontalGravity(boolean isRtlRun)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getCurrentCursorOffset()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void updateSelection(int offset)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void updatePosition(float x, float y, boolean fromTouchScreen)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected void positionAtCursorOffset(int offset, boolean forceUpdatePosition, boolean fromTouchScreen)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean onTouchEvent(MotionEvent event)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void positionAndAdjustForCrossingHandles(int offset, boolean fromTouchScreen)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean positionNearEdgeOfScrollingView(float x, boolean atRtl)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected boolean isAtRtlRun(@NonNull Layout layout, int offset)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public float getHorizontal(@NonNull Layout layout, int offset)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private float getHorizontal(@NonNull Layout layout, int offset, boolean startHandle)",
    "returnType" : "float",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int getOffsetAtCoordinate(@NonNull Layout layout, int line, float x)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "protected int getMagnifierHandleTrigger()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "variableNames" : [ "mHandleType", "mInWord", "mTouchWordDelta", "mPrevX", "mLanguageDirectionChanged", "mTextViewEdgeSlop", "mTextViewLocation" ],
  "methodNames" : [ "private boolean isStartHandle()", "protected int getHotspotX(Drawable drawable, boolean isRtlRun)", "protected int getHorizontalGravity(boolean isRtlRun)", "public int getCurrentCursorOffset()", "protected void updateSelection(int offset)", "protected void updatePosition(float x, float y, boolean fromTouchScreen)", "protected void positionAtCursorOffset(int offset, boolean forceUpdatePosition, boolean fromTouchScreen)", "public boolean onTouchEvent(MotionEvent event)", "private void positionAndAdjustForCrossingHandles(int offset, boolean fromTouchScreen)", "private boolean positionNearEdgeOfScrollingView(float x, boolean atRtl)", "protected boolean isAtRtlRun(@NonNull Layout layout, int offset)", "public float getHorizontal(@NonNull Layout layout, int offset)", "private float getHorizontal(@NonNull Layout layout, int offset, boolean startHandle)", "protected int getOffsetAtCoordinate(@NonNull Layout layout, int line, float x)", "protected int getMagnifierHandleTrigger()" ]
}