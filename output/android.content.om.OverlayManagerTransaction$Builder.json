{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/content/om/OverlayManagerTransaction.java",
  "packageName" : "android.content.om",
  "className" : "Builder",
  "comment" : "\n     * Builder class for OverlayManagerTransaction objects.\n     * TODO(b/269197647): mark the API used by the systemUI.\n     * @hide\n     ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mRequests",
    "type" : "List<Request>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public Builder setEnabled(@NonNull OverlayIdentifier overlay, boolean enable)",
    "returnType" : "Builder",
    "comment" : "\n         * Request that an overlay package be enabled and change its loading\n         * order to the last package to be loaded, or disabled\n         *\n         * If the caller has the correct permissions, it is always possible to\n         * disable an overlay. Due to technical and security reasons it may not\n         * always be possible to enable an overlay, for instance if the overlay\n         * does not successfully overlay any target resources due to\n         * overlayable policy restrictions.\n         *\n         * An enabled overlay is a part of target package's resources, i.e. it will\n         * be part of any lookups performed via {@link android.content.res.Resources}\n         * and {@link android.content.res.AssetManager}. A disabled overlay will no\n         * longer affect the resources of the target package. If the target is\n         * currently running, its outdated resources will be replaced by new ones.\n         *\n         * @param overlay The name of the overlay package.\n         * @param enable true to enable the overlay, false to disable it.\n         * @return this Builder object, so you can chain additional requests\n         ",
    "links" : [ "android.content.res.AssetManager", "android.content.res.Resources" ]
  }, {
    "name" : "public Builder setEnabled(@NonNull OverlayIdentifier overlay, boolean enable, int userId)",
    "returnType" : "Builder",
    "comment" : "\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder registerFabricatedOverlay(@NonNull FabricatedOverlay overlay)",
    "returnType" : "Builder",
    "comment" : "\n         * Registers the fabricated overlay with the overlay manager so it can be enabled and\n         * disabled for any user.\n         *\n         * The fabricated overlay is initialized in a disabled state. If an overlay is re-registered\n         * the existing overlay will be replaced by the newly registered overlay and the enabled\n         * state of the overlay will be left unchanged if the target package and target overlayable\n         * have not changed.\n         *\n         * @param overlay the overlay to register with the overlay manager\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public Builder unregisterFabricatedOverlay(@NonNull OverlayIdentifier overlay)",
    "returnType" : "Builder",
    "comment" : "\n         * Disables and removes the overlay from the overlay manager for all users.\n         *\n         * @param overlay the overlay to disable and remove\n         *\n         * @hide\n         ",
    "links" : [ ]
  }, {
    "name" : "public OverlayManagerTransaction build()",
    "returnType" : "OverlayManagerTransaction",
    "comment" : "\n         * Create a new transaction out of the requests added so far. Execute\n         * the transaction by calling OverlayManager#commit.\n         *\n         * @see OverlayManager#commit\n         * @return a new transaction\n         ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public Builder setEnabled(@NonNull OverlayIdentifier overlay, boolean enable)", "public Builder setEnabled(@NonNull OverlayIdentifier overlay, boolean enable, int userId)", "public Builder registerFabricatedOverlay(@NonNull FabricatedOverlay overlay)", "public Builder unregisterFabricatedOverlay(@NonNull OverlayIdentifier overlay)", "public OverlayManagerTransaction build()" ],
  "variableNames" : [ "mRequests" ]
}