{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/service/timezone/TimeZoneProviderStatus.java",
  "packageName" : "android.service.timezone",
  "className" : "TimeZoneProviderStatus",
  "comment" : "\n * Information about the status of a {@link TimeZoneProviderService}.\n *\n * <p>Not all status properties or status values will apply to all provider implementations.\n * {@code _NOT_APPLICABLE} status can be used to indicate properties that have no meaning for a\n * given implementation.\n *\n * <p>Time zone providers are expected to work in one of two ways:\n * <ol>\n *     <li>Location: Providers will determine location and then map that location to one or more\n *     time zone IDs.</li>\n *     <li>External signals: Providers could use indirect signals like country code\n *     and/or local offset / DST information provided to the device to infer a time zone, e.g.\n *     signals like MCC and NITZ for telephony devices, IP geo location, or DHCP information\n *     (RFC4833). The time zone ID could also be fed directly to the device by an external service.\n *     </li>\n * </ol>\n *\n * <p>The status properties are:\n * <ul>\n *     <li>location detection - for location-based providers, the status of the location detection\n *     mechanism</li>\n *     <li>connectivity - connectivity can influence providers directly, for example if they use\n *     a networked service to map location to time zone ID, or use geo IP, or indirectly for\n *     location detection (e.g. for the network location provider.</li>\n *     <li>time zone resolution - the status related to determining a time zone ID or using a\n *     detected time zone ID. For example, a networked service may be reachable (i.e. connectivity\n *     is working) but the service could return errors, a time zone ID detected may not be usable\n *     for a device because of TZDB version skew, or external indirect signals may available but\n *     do not match the properties of a known time zone ID.</li>\n * </ul>\n *\n * @hide\n ",
  "links" : [ "android.service.timezone.TimeZoneProviderService" ],
  "variables" : [ {
    "name" : "DEPENDENCY_STATUS_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * The dependency's status is unknown.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "DEPENDENCY_STATUS_NOT_APPLICABLE",
    "type" : "int",
    "comment" : " The dependency is not used by the provider's implementation. ",
    "links" : [ ]
  }, {
    "name" : "DEPENDENCY_STATUS_OK",
    "type" : "int",
    "comment" : " The dependency is applicable and there are no known problems. ",
    "links" : [ ]
  }, {
    "name" : "DEPENDENCY_STATUS_TEMPORARILY_UNAVAILABLE",
    "type" : "int",
    "comment" : "\n     * The dependency is used but is temporarily unavailable, e.g. connectivity has been lost for an\n     * unpredictable amount of time.\n     *\n     * <p>This status is considered normal is may be entered many times a day.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEPENDENCY_STATUS_BLOCKED_BY_ENVIRONMENT",
    "type" : "int",
    "comment" : "\n     * The dependency is used by the provider but is blocked by the environment in a way that the\n     * provider has detected and is considered likely to persist for some time, e.g. connectivity\n     * has been lost due to boarding a plane.\n     *\n     * <p>This status is considered unusual and could be used by the system as a trigger to try\n     * other time zone providers / time zone detection mechanisms. The bar for using this status\n     * should therefore be set fairly high to avoid a device bringing up other providers or\n     * switching to a different detection mechanism that may provide a different suggestion.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEPENDENCY_STATUS_DEGRADED_BY_SETTINGS",
    "type" : "int",
    "comment" : "\n     * The dependency is used by the provider but is running in a degraded mode due to the user's\n     * settings. A user can take action to improve this, e.g. by changing a setting.\n     *\n     * <p>This status could be used by the system as a trigger to try other time zone\n     * providers / time zone detection mechanisms. The user may be informed.\n     ",
    "links" : [ ]
  }, {
    "name" : "DEPENDENCY_STATUS_BLOCKED_BY_SETTINGS",
    "type" : "int",
    "comment" : "\n     * The dependency is used by the provider but is completely blocked by the user's settings.\n     * A user can take action to correct this, e.g. by changing a setting.\n     *\n     * <p>This status could be used by the system as a trigger to try other time zone providers /\n     * time zone detection mechanisms. The user may be informed.\n     ",
    "links" : [ ]
  }, {
    "name" : "OPERATION_STATUS_UNKNOWN",
    "type" : "int",
    "comment" : "\n     * The operation's status is unknown.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "OPERATION_STATUS_NOT_APPLICABLE",
    "type" : "int",
    "comment" : " The operation is not used by the provider's implementation. ",
    "links" : [ ]
  }, {
    "name" : "OPERATION_STATUS_OK",
    "type" : "int",
    "comment" : " The operation is applicable and there are no known problems. ",
    "links" : [ ]
  }, {
    "name" : "OPERATION_STATUS_FAILED",
    "type" : "int",
    "comment" : " The operation is applicable and it recently failed. ",
    "links" : [ ]
  }, {
    "name" : "mLocationDetectionDependencyStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mConnectivityDependencyStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mTimeZoneResolutionOperationStatus",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<TimeZoneProviderStatus>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getLocationDetectionDependencyStatus()",
    "returnType" : "int",
    "comment" : "\n     * Returns the status of the location detection dependencies used by the provider (where\n     * applicable).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getConnectivityDependencyStatus()",
    "returnType" : "int",
    "comment" : "\n     * Returns the status of the connectivity dependencies used by the provider (where applicable).\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getTimeZoneResolutionOperationStatus()",
    "returnType" : "int",
    "comment" : "\n     * Returns the status of the time zone resolution operation used by the provider.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static TimeZoneProviderStatus parseProviderStatus(@NonNull String arg)",
    "returnType" : "TimeZoneProviderStatus",
    "comment" : "\n     * Parses a {@link TimeZoneProviderStatus} from a toString() string for manual command-line\n     * testing.\n     *\n     * @hide\n     ",
    "links" : [ "android.service.timezone.TimeZoneProviderStatus" ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(@NonNull Parcel parcel, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean couldEnableTelephonyFallback()",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static int requireValidOperationStatus(@OperationStatus int operationStatus)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String operationStatusToString(@OperationStatus int operationStatus)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static int operationStatusFromString(@Nullable String operationStatusString)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "private static int requireValidDependencyStatus(@DependencyStatus int dependencyStatus)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String dependencyStatusToString(@DependencyStatus int dependencyStatus)",
    "returnType" : "String",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static int dependencyStatusFromString(@Nullable String dependencyStatusString)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getLocationDetectionDependencyStatus()", "public int getConnectivityDependencyStatus()", "public int getTimeZoneResolutionOperationStatus()", "public String toString()", "public static TimeZoneProviderStatus parseProviderStatus(@NonNull String arg)", "public int describeContents()", "public void writeToParcel(@NonNull Parcel parcel, int flags)", "public boolean equals(Object o)", "public int hashCode()", "public boolean couldEnableTelephonyFallback()", "private static int requireValidOperationStatus(@OperationStatus int operationStatus)", "public static String operationStatusToString(@OperationStatus int operationStatus)", "public static int operationStatusFromString(@Nullable String operationStatusString)", "private static int requireValidDependencyStatus(@DependencyStatus int dependencyStatus)", "public static String dependencyStatusToString(@DependencyStatus int dependencyStatus)", "public static int dependencyStatusFromString(@Nullable String dependencyStatusString)" ],
  "variableNames" : [ "DEPENDENCY_STATUS_UNKNOWN", "DEPENDENCY_STATUS_NOT_APPLICABLE", "DEPENDENCY_STATUS_OK", "DEPENDENCY_STATUS_TEMPORARILY_UNAVAILABLE", "DEPENDENCY_STATUS_BLOCKED_BY_ENVIRONMENT", "DEPENDENCY_STATUS_DEGRADED_BY_SETTINGS", "DEPENDENCY_STATUS_BLOCKED_BY_SETTINGS", "OPERATION_STATUS_UNKNOWN", "OPERATION_STATUS_NOT_APPLICABLE", "OPERATION_STATUS_OK", "OPERATION_STATUS_FAILED", "mLocationDetectionDependencyStatus", "mConnectivityDependencyStatus", "mTimeZoneResolutionOperationStatus", "CREATOR" ]
}