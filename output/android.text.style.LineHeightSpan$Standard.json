{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/style/LineHeightSpan.java",
  "packageName" : "android.text.style",
  "className" : "Standard",
  "comment" : "\n     * Default implementation of the {@link LineHeightSpan}, which changes the line height of the\n     * attached paragraph.\n     * <p>\n     * For example, a paragraph with its line height equal to 100px can be set like this:\n     * <pre>\n     * SpannableString string = new SpannableString(\"This is a multiline paragraph. This is a multiline paragraph.\");\n     * string.setSpan(new LineHeightSpan.Standard(100), 0, string.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);\n     * </pre>\n     * <img src=\"{@docRoot}reference/android/images/text/style/lineheightspan.png\" />\n     * <figcaption>Text with line height set to 100 pixels.</figcaption>\n     * <p>\n     * Notice that LineHeightSpan will change the line height of the entire paragraph, even though it\n     * covers only part of the paragraph.\n     * </p>\n     ",
  "links" : [ "android.text.style.LineHeightSpan" ],
  "variables" : [ {
    "name" : "mHeight",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getHeight()",
    "returnType" : "int",
    "comment" : "\n         * Returns the line height specified by this span.\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeId()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getSpanTypeIdInternal()",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcelInternal(@NonNull Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public void chooseHeight(@NonNull CharSequence text, int start, int end, int spanstartv, int lineHeight, @NonNull Paint.FontMetricsInt fm)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public int getHeight()", "public int getSpanTypeId()", "public int getSpanTypeIdInternal()", "public int describeContents()", "public void writeToParcel(Parcel dest, int flags)", "public void writeToParcelInternal(@NonNull Parcel dest, int flags)", "public void chooseHeight(@NonNull CharSequence text, int start, int end, int spanstartv, int lineHeight, @NonNull Paint.FontMetricsInt fm)" ],
  "variableNames" : [ "mHeight" ]
}