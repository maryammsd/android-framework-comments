{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/security/keystore2/KeymasterUtils.java",
  "packageName" : "android.security.keystore2",
  "className" : "KeymasterUtils",
  "comment" : "\n * @hide\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " static int getDigestOutputSizeBits(int keymasterDigest)",
    "returnType" : "int",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " static boolean isKeymasterBlockModeIndCpaCompatibleWithSymmetricCrypto(int keymasterBlockMode)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : " static boolean isKeymasterPaddingSchemeIndCpaCompatibleWithAsymmetricCrypto(int keymasterPadding)",
    "returnType" : "boolean",
    "comment" : " @hide ",
    "links" : [ ]
  }, {
    "name" : "public static void addMinMacLengthAuthorizationIfNecessary(KeymasterArguments args, int keymasterAlgorithm, int[] keymasterBlockModes, int[] keymasterDigests)",
    "returnType" : "void",
    "comment" : "\n     * Adds {@code KM_TAG_MIN_MAC_LENGTH} tag, if necessary, to the keymaster arguments for\n     * generating or importing a key. This tag may only be needed for symmetric keys (e.g., HMAC,\n     * AES-GCM).\n     ",
    "links" : [ ]
  }, {
    "name" : " static String getEcCurveFromKeymaster(int ecCurve)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static int getKeymasterEcCurve(String ecCurveName)",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static ECParameterSpec getCurveSpec(String name) throws NoSuchAlgorithmException, InvalidParameterSpecException",
    "returnType" : "ECParameterSpec",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : " static String getCurveName(ECParameterSpec spec)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private static boolean isECParameterSpecOfCurve(ECParameterSpec spec, String curveName)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ " static int getDigestOutputSizeBits(int keymasterDigest)", " static boolean isKeymasterBlockModeIndCpaCompatibleWithSymmetricCrypto(int keymasterBlockMode)", " static boolean isKeymasterPaddingSchemeIndCpaCompatibleWithAsymmetricCrypto(int keymasterPadding)", "public static void addMinMacLengthAuthorizationIfNecessary(KeymasterArguments args, int keymasterAlgorithm, int[] keymasterBlockModes, int[] keymasterDigests)", " static String getEcCurveFromKeymaster(int ecCurve)", " static int getKeymasterEcCurve(String ecCurveName)", " static ECParameterSpec getCurveSpec(String name) throws NoSuchAlgorithmException, InvalidParameterSpecException", " static String getCurveName(ECParameterSpec spec)", "private static boolean isECParameterSpecOfCurve(ECParameterSpec spec, String curveName)" ],
  "variableNames" : [ ]
}