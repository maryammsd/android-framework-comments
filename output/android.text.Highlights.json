{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/text/Highlights.java",
  "packageName" : "android.text",
  "className" : "Highlights",
  "comment" : "\n * A class that represents of the highlight of the text.\n ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mHighlights",
    "type" : "List<Pair<Paint, int[]>>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public int getSize()",
    "returnType" : "int",
    "comment" : "\n     * Returns the number of highlight.\n     *\n     * @return the number of highlight.\n     *\n     * @see Builder#addRange(Paint, int, int)\n     * @see Builder#addRanges(Paint, int...)\n     ",
    "links" : [ ]
  }, {
    "name" : "public Paint getPaint(@IntRange(from = 0) int index)",
    "returnType" : "Paint",
    "comment" : "\n     * Returns a paint used for the i-th highlight.\n     *\n     * @param index an index of the highlight. Must be between 0 and {@link #getSize()}\n     * @return the paint object\n     *\n     * @see Builder#addRange(Paint, int, int)\n     * @see Builder#addRanges(Paint, int...)\n     ",
    "links" : [ "#getSize()" ]
  }, {
    "name" : "public int[] getRanges(int index)",
    "returnType" : "int[]",
    "comment" : "\n     * Returns ranges of the i-th highlight.\n     *\n     * Ranges are represented of flattened inclusive start and exclusive end integers array. The\n     * inclusive start offset of the {@code i}-th range is stored in {@code 2 * i}-th of the array.\n     * The exclusive end offset of the {@code i}-th range is stored in {@code 2* i + 1}-th of the\n     * array. For example, the two ranges: (1, 2) and (3, 4) are flattened into single int array\n     * [1, 2, 3, 4].\n     *\n     * @param index an index of the highlight. Must be between 0 and {@link #getSize()}\n     * @return the flattened ranges.\n     *\n     * @see Builder#addRange(Paint, int, int)\n     * @see Builder#addRanges(Paint, int...)\n     ",
    "links" : [ "#getSize()" ]
  } ],
  "methodNames" : [ "public int getSize()", "public Paint getPaint(@IntRange(from = 0) int index)", "public int[] getRanges(int index)" ],
  "variableNames" : [ "mHighlights" ]
}