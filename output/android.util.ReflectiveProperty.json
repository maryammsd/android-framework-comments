{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/util/ReflectiveProperty.java",
  "packageName" : "android.util",
  "className" : "ReflectiveProperty",
  "comment" : "\n * Internal class to automatically generate a Property for a given class/name pair, given the\n * specification of {@link Property#of(java.lang.Class, java.lang.Class, java.lang.String)}\n ",
  "variables" : [ {
    "name" : "PREFIX_GET",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PREFIX_IS",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PREFIX_SET",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mSetter",
    "type" : "Method",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mGetter",
    "type" : "Method",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mField",
    "type" : "Field",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "private boolean typesMatch(Class<V> valueType, Class getterType)",
    "returnType" : "boolean",
    "comment" : "\n     * Utility method to check whether the type of the underlying field/method on the target\n     * object matches the type of the Property. The extra checks for primitive types are because\n     * generics will force the Property type to be a class, whereas the type of the underlying\n     * method/field will probably be a primitive type instead. Accept float as matching Float,\n     * etc.\n     ",
    "links" : [ ]
  }, {
    "name" : "public void set(T object, V value)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public V get(T object)",
    "returnType" : "V",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isReadOnly()",
    "returnType" : "boolean",
    "comment" : "\n     * Returns false if there is no setter or public field underlying this Property.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "PREFIX_GET", "PREFIX_IS", "PREFIX_SET", "mSetter", "mGetter", "mField" ],
  "methodNames" : [ "private boolean typesMatch(Class<V> valueType, Class getterType)", "public void set(T object, V value)", "public V get(T object)", "public boolean isReadOnly()" ]
}