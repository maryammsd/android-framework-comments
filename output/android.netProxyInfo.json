{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/net/ProxyInfo.java",
  "packageName" : "android.net",
  "className" : "ProxyInfo",
  "comment" : "\n * Describes a proxy configuration.\n *\n * Proxy configurations are already integrated within the {@code java.net} and\n * Apache HTTP stack. So {@link URLConnection} and Apache's {@code HttpClient} will use\n * them automatically.\n *\n * Other HTTP stacks will need to obtain the proxy info from\n * {@link Proxy#PROXY_CHANGE_ACTION} broadcast as the extra {@link Proxy#EXTRA_PROXY_INFO}.\n ",
  "variables" : [ {
    "name" : "mHost",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPort",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mExclusionList",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mParsedExclusionList",
    "type" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mPacFileUrl",
    "type" : "Uri",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "LOCAL_EXCL_LIST",
    "type" : "String",
    "comment" : "\n     *@hide\n     ",
    "links" : [ ]
  }, {
    "name" : "LOCAL_PORT",
    "type" : "int",
    "comment" : "\n     *@hide\n     ",
    "links" : [ ]
  }, {
    "name" : "LOCAL_HOST",
    "type" : "String",
    "comment" : "\n     *@hide\n     ",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Creator<ProxyInfo>",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static ProxyInfo buildDirectProxy(String host, int port)",
    "returnType" : "ProxyInfo",
    "comment" : "\n     * Constructs a {@link ProxyInfo} object that points at a Direct proxy\n     * on the specified host and port.\n     ",
    "links" : [ "ProxyInfo" ]
  }, {
    "name" : "public static ProxyInfo buildDirectProxy(String host, int port, List<String> exclList)",
    "returnType" : "ProxyInfo",
    "comment" : "\n     * Constructs a {@link ProxyInfo} object that points at a Direct proxy\n     * on the specified host and port.\n     *\n     * The proxy will not be used to access any host in exclusion list, exclList.\n     *\n     * @param exclList Hosts to exclude using the proxy on connections for.  These\n     *                 hosts can use wildcards such as *.example.com.\n     ",
    "links" : [ "ProxyInfo" ]
  }, {
    "name" : "public static ProxyInfo buildPacProxy(Uri pacUri)",
    "returnType" : "ProxyInfo",
    "comment" : "\n     * Construct a {@link ProxyInfo} that will download and run the PAC script\n     * at the specified URL.\n     ",
    "links" : [ "ProxyInfo" ]
  }, {
    "name" : "public static ProxyInfo buildPacProxy(@NonNull Uri pacUrl, int port)",
    "returnType" : "ProxyInfo",
    "comment" : "\n     * Construct a {@link ProxyInfo} object that will download and run the PAC script at the\n     * specified URL and port.\n     ",
    "links" : [ "ProxyInfo" ]
  }, {
    "name" : "private static String[] parseExclusionList(String exclusionList)",
    "returnType" : "String[]",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public InetSocketAddress getSocketAddress()",
    "returnType" : "InetSocketAddress",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public Uri getPacFileUrl()",
    "returnType" : "Uri",
    "comment" : "\n     * Returns the URL of the current PAC script or null if there is\n     * no PAC script.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getHost()",
    "returnType" : "String",
    "comment" : "\n     * When configured to use a Direct Proxy this returns the host\n     * of the proxy.\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getPort()",
    "returnType" : "int",
    "comment" : "\n     * When configured to use a Direct Proxy this returns the port\n     * of the proxy\n     ",
    "links" : [ ]
  }, {
    "name" : "public String[] getExclusionList()",
    "returnType" : "String[]",
    "comment" : "\n     * When configured to use a Direct Proxy this returns the list\n     * of hosts for which the proxy is ignored.\n     ",
    "links" : [ ]
  }, {
    "name" : "public String getExclusionListAsString()",
    "returnType" : "String",
    "comment" : "\n     * comma separated\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public boolean isValid()",
    "returnType" : "boolean",
    "comment" : "\n     * Return true if the pattern of proxy is valid, otherwise return false.\n     ",
    "links" : [ ]
  }, {
    "name" : "public java.net.Proxy makeProxy()",
    "returnType" : "java.net.Proxy",
    "comment" : "\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public String toString()",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean equals(Object o)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * Implement the Parcelable interface\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int hashCode()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel dest, int flags)",
    "returnType" : "void",
    "comment" : "\n     * Implement the Parcelable interface.\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "mHost", "mPort", "mExclusionList", "mParsedExclusionList", "mPacFileUrl", "LOCAL_EXCL_LIST", "LOCAL_PORT", "LOCAL_HOST", "CREATOR" ],
  "methodNames" : [ "public static ProxyInfo buildDirectProxy(String host, int port)", "public static ProxyInfo buildDirectProxy(String host, int port, List<String> exclList)", "public static ProxyInfo buildPacProxy(Uri pacUri)", "public static ProxyInfo buildPacProxy(@NonNull Uri pacUrl, int port)", "private static String[] parseExclusionList(String exclusionList)", "public InetSocketAddress getSocketAddress()", "public Uri getPacFileUrl()", "public String getHost()", "public int getPort()", "public String[] getExclusionList()", "public String getExclusionListAsString()", "public boolean isValid()", "public java.net.Proxy makeProxy()", "public String toString()", "public boolean equals(Object o)", "public int describeContents()", "public int hashCode()", "public void writeToParcel(Parcel dest, int flags)" ]
}