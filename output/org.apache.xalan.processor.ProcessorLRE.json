{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/org/apache/xalan/processor/ProcessorLRE.java",
  "packageName" : "org.apache.xalan.processor",
  "className" : "ProcessorLRE",
  "comment" : "\n * Processes an XSLT literal-result-element, or something that looks \n * like one.  The actual {@link org.apache.xalan.templates.ElemTemplateElement}\n * produced may be a {@link org.apache.xalan.templates.ElemLiteralResult}, \n * a {@link org.apache.xalan.templates.StylesheetRoot}, or a \n * {@link org.apache.xalan.templates.ElemExtensionCall}.\n * \n * @see <a href=\"http://www.w3.org/TR/xslt#literal-result-element\">literal-result-element in XSLT Specification</a>\n * @see org.apache.xalan.templates.ElemLiteralResult\n * @xsl.usage internal\n ",
  "links" : [ "org.apache.xalan.templates.ElemExtensionCall", "org.apache.xalan.templates.StylesheetRoot", "org.apache.xalan.templates.ElemTemplateElement", "org.apache.xalan.templates.ElemLiteralResult" ],
  "variables" : [ {
    "name" : "serialVersionUID",
    "type" : "long",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void startElement(StylesheetHandler handler, String uri, String localName, String rawName, Attributes attributes) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Receive notification of the start of an element.\n   *\n   * @param handler non-null reference to current StylesheetHandler that is constructing the Templates.\n   * @param uri The Namespace URI, or an empty string.\n   * @param localName The local name (without prefix), or empty string if not namespace processing.\n   * @param rawName The qualified name (with prefix).\n   * @param attributes The specified or defaulted attributes.\n   ",
    "links" : [ ]
  }, {
    "name" : "protected Stylesheet getStylesheetRoot(StylesheetHandler handler) throws TransformerConfigurationException",
    "returnType" : "Stylesheet",
    "comment" : "\n   * This method could be over-ridden by a class that extends this class.\n   * @param handler non-null reference to current StylesheetHandler that is constructing the Templates.\n   * @return an object that represents the stylesheet element.\n   ",
    "links" : [ ]
  }, {
    "name" : "public void endElement(StylesheetHandler handler, String uri, String localName, String rawName) throws org.xml.sax.SAXException",
    "returnType" : "void",
    "comment" : "\n   * Receive notification of the end of an element.\n   *\n   * @param handler non-null reference to current StylesheetHandler that is constructing the Templates.\n   * @param uri The Namespace URI, or an empty string.\n   * @param localName The local name (without prefix), or empty string if not namespace processing.\n   * @param rawName The qualified name (with prefix).\n   ",
    "links" : [ ]
  }, {
    "name" : "private boolean declaredXSLNS(Stylesheet stylesheet)",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void startElement(StylesheetHandler handler, String uri, String localName, String rawName, Attributes attributes) throws org.xml.sax.SAXException", "protected Stylesheet getStylesheetRoot(StylesheetHandler handler) throws TransformerConfigurationException", "public void endElement(StylesheetHandler handler, String uri, String localName, String rawName) throws org.xml.sax.SAXException", "private boolean declaredXSLNS(Stylesheet stylesheet)" ],
  "variableNames" : [ "serialVersionUID" ]
}