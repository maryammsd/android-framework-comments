{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/icu/impl/duration/DurationFormatter.java",
  "packageName" : "android.icu.impl.duration",
  "className" : "DurationFormatter",
  "comment" : "\n * Formatter for durations in milliseconds.\n * @hide Only a subset of ICU is exposed in Android\n ",
  "links" : [ ],
  "variables" : [ ],
  "methods" : [ {
    "name" : " String formatDurationFromNowTo(Date targetDate)",
    "returnType" : "String",
    "comment" : "\n   * Formats the duration between now and a target date.\n   * <p>\n   * This is a convenience method that calls\n   * formatDurationFrom(long, long) using now\n   * as the reference date, and the difference between now and\n   * <code>targetDate.getTime()</code> as the duration.\n   * \n   * @param targetDate the ending date\n   * @return the formatted time\n   ",
    "links" : [ ]
  }, {
    "name" : " String formatDurationFromNow(long duration)",
    "returnType" : "String",
    "comment" : "\n   * Formats a duration expressed in milliseconds.\n   * <p>\n   * This is a convenience method that calls formatDurationFrom\n   * using the current system time as the reference date.\n   * \n   * @param duration the duration in milliseconds\n   * @param tz the time zone\n   * @return the formatted time\n   ",
    "links" : [ ]
  }, {
    "name" : " String formatDurationFrom(long duration, long referenceDate)",
    "returnType" : "String",
    "comment" : "\n   * Formats a duration expressed in milliseconds from a reference date.\n   * <p>\n   * The reference date allows formatters to use actual durations of\n   * variable-length periods (like months) if they wish.\n   * <p>\n   * The duration is expressed as the number of milliseconds in the\n   * past (negative values) or future (positive values) with respect\n   * to a reference date (expressed as milliseconds in epoch).\n   * \n   * @param duration the duration in milliseconds\n   * @param referenceDate the date from which to compute the duration\n   * @return the formatted time\n   ",
    "links" : [ ]
  }, {
    "name" : " DurationFormatter withLocale(String localeName)",
    "returnType" : "DurationFormatter",
    "comment" : "\n   * Returns a new DurationFormatter that's the same as this one \n   * but formats for a new locale.\n   *\n   * @param localeName the name of the new locale\n   * @return a new formatter for the given locale\n   ",
    "links" : [ ]
  }, {
    "name" : " DurationFormatter withTimeZone(TimeZone tz)",
    "returnType" : "DurationFormatter",
    "comment" : "\n   * Returns a new DurationFormatter that's the same as this one but\n   * uses a different time zone.\n   *\n   * @param tz the time zone in which to compute durations.\n   * @return a new formatter for the given locale\n   ",
    "links" : [ ]
  } ],
  "methodNames" : [ " String formatDurationFromNowTo(Date targetDate)", " String formatDurationFromNow(long duration)", " String formatDurationFrom(long duration, long referenceDate)", " DurationFormatter withLocale(String localeName)", " DurationFormatter withTimeZone(TimeZone tz)" ],
  "variableNames" : [ ]
}