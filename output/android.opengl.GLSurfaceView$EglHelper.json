{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/opengl/GLSurfaceView.java",
  "packageName" : "android.opengl",
  "className" : "EglHelper",
  "comment" : "",
  "links" : [ ],
  "variables" : [ {
    "name" : "mGLSurfaceViewWeakRef",
    "type" : "WeakReference<GLSurfaceView>",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEgl",
    "type" : "EGL10",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEglDisplay",
    "type" : "EGLDisplay",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEglSurface",
    "type" : "EGLSurface",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEglConfig",
    "type" : "EGLConfig",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mEglContext",
    "type" : "EGLContext",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void start()",
    "returnType" : "void",
    "comment" : "\n         * Initialize EGL for a given configuration spec.\n         * @param configSpec\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean createSurface()",
    "returnType" : "boolean",
    "comment" : "\n         * Create an egl surface for the current SurfaceHolder surface. If a surface\n         * already exists, destroy it before creating the new surface.\n         *\n         * @return true if the surface was created successfully.\n         ",
    "links" : [ ]
  }, {
    "name" : " GL createGL()",
    "returnType" : "GL",
    "comment" : "\n         * Create a GL object for the current EGL context.\n         * @return\n         ",
    "links" : [ ]
  }, {
    "name" : "public int swap()",
    "returnType" : "int",
    "comment" : "\n         * Display the current render surface.\n         * @return the EGL error code from eglSwapBuffers.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void destroySurface()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void destroySurfaceImp()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void finish()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void throwEglException(String function)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void throwEglException(String function, int error)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static void logEglErrorAsWarning(String tag, String function, int error)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public static String formatEglError(String function, int error)",
    "returnType" : "String",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void start()", "public boolean createSurface()", " GL createGL()", "public int swap()", "public void destroySurface()", "private void destroySurfaceImp()", "public void finish()", "private void throwEglException(String function)", "public static void throwEglException(String function, int error)", "public static void logEglErrorAsWarning(String tag, String function, int error)", "public static String formatEglError(String function, int error)" ],
  "variableNames" : [ "mGLSurfaceViewWeakRef", "mEgl", "mEglDisplay", "mEglSurface", "mEglConfig", "mEglContext" ]
}