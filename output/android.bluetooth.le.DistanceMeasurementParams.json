{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/bluetooth/le/DistanceMeasurementParams.java",
  "packageName" : "android.bluetooth.le",
  "className" : "DistanceMeasurementParams",
  "comment" : "\n * The {@link DistanceMeasurementParams} provide a way to adjust distance measurement preferences.\n * Use {@link DistanceMeasurementParams.Builder} to create an instance of this class.\n *\n * @hide\n ",
  "links" : [ "android.bluetooth.le.DistanceMeasurementParams", "DistanceMeasurementParams.Builder" ],
  "variables" : [ {
    "name" : "REPORT_FREQUENCY_LOW",
    "type" : "int",
    "comment" : "\n     * Perform distance measurement in low frequency. This is the default frequency as it consumes\n     * the least power.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REPORT_FREQUENCY_MEDIUM",
    "type" : "int",
    "comment" : "\n     * Perform distance measurement in medium frequency. Provides a good trade-off between report\n     * frequency and power consumption.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REPORT_FREQUENCY_HIGH",
    "type" : "int",
    "comment" : "\n     * Perform distance measurement in high frequency. It's recommended to only use this mode when\n     * the application is running in the foreground.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "REPORT_DURATION_DEFAULT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "REPORT_DURATION_MAX",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDevice",
    "type" : "BluetoothDevice",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mDuration",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mFrequency",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMethodId",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mChannelSoundingParams",
    "type" : "ChannelSoundingParams",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "CREATOR",
    "type" : "Parcelable.Creator<DistanceMeasurementParams>",
    "comment" : " A {@link Parcelable.Creator} to create {@link DistanceMeasurementParams} from parcel. ",
    "links" : [ "android.bluetooth.le.DistanceMeasurementParams", "Parcelable.Creator" ]
  } ],
  "methods" : [ {
    "name" : "public BluetoothDevice getDevice()",
    "returnType" : "BluetoothDevice",
    "comment" : "\n     * Returns device of this DistanceMeasurementParams.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getDurationSeconds()",
    "returnType" : "int",
    "comment" : "\n     * Returns duration in seconds of this DistanceMeasurementParams. Once the distance measurement\n     * successfully started, the Bluetooth process will keep reporting the measurement result until\n     * this time has been reached or the session is explicitly stopped with {@link\n     * DistanceMeasurementSession#stopSession}\n     *\n     * @hide\n     ",
    "links" : [ "android.bluetooth.le.DistanceMeasurementSession#stopSession" ]
  }, {
    "name" : "public int getFrequency()",
    "returnType" : "int",
    "comment" : "\n     * Returns frequency of this DistanceMeasurementParams. The Bluetooth process uses this value to\n     * determine report frequency of the measurement result.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int getMethodId()",
    "returnType" : "int",
    "comment" : "\n     * Returns method id of this DistanceMeasurementParams.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public ChannelSoundingParams getChannelSoundingParams()",
    "returnType" : "ChannelSoundingParams",
    "comment" : "\n     * Returns {@link ChannelSoundingParams} of this DistanceMeasurementParams.\n     *\n     * @hide\n     ",
    "links" : [ "android.bluetooth.le.ChannelSoundingParams" ]
  }, {
    "name" : "public static int getDefaultDurationSeconds()",
    "returnType" : "int",
    "comment" : "\n     * Get the default duration in seconds of the parameter.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public static int getMaxDurationSeconds()",
    "returnType" : "int",
    "comment" : "\n     * Get the maximum duration in seconds that can be set for the parameter.\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public int describeContents()",
    "returnType" : "int",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  }, {
    "name" : "public void writeToParcel(Parcel out, int flags)",
    "returnType" : "void",
    "comment" : "\n     * {@inheritDoc}\n     *\n     * @hide\n     ",
    "links" : [ ]
  } ],
  "methodNames" : [ "public BluetoothDevice getDevice()", "public int getDurationSeconds()", "public int getFrequency()", "public int getMethodId()", "public ChannelSoundingParams getChannelSoundingParams()", "public static int getDefaultDurationSeconds()", "public static int getMaxDurationSeconds()", "public int describeContents()", "public void writeToParcel(Parcel out, int flags)" ],
  "variableNames" : [ "REPORT_FREQUENCY_LOW", "REPORT_FREQUENCY_MEDIUM", "REPORT_FREQUENCY_HIGH", "REPORT_DURATION_DEFAULT", "REPORT_DURATION_MAX", "mDevice", "mDuration", "mFrequency", "mMethodId", "mChannelSoundingParams", "CREATOR" ]
}