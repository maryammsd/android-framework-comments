{
  "filePath" : "/home/maryam/clearblue/files/android-source-30/android/hardware/camera2/legacy/LegacyExceptionUtils.java",
  "packageName" : "android.hardware.camera2.legacy",
  "className" : "LegacyExceptionUtils",
  "comment" : "\n * Utility class containing exception handling used solely by the compatibility mode shim.\n ",
  "variables" : [ {
    "name" : "TAG",
    "type" : "String",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "NO_ERROR",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "PERMISSION_DENIED",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "ALREADY_EXISTS",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "BAD_VALUE",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "DEAD_OBJECT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "INVALID_OPERATION",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "TIMED_OUT",
    "type" : "int",
    "comment" : "",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public static int throwOnError(int errorFlag) throws BufferQueueAbandonedException",
    "returnType" : "int",
    "comment" : "\n     * Throw error codes used by legacy device methods as exceptions.\n     *\n     * <p>Non-negative return values are passed through, negative return values are thrown as\n     * exceptions.</p>\n     *\n     * @param errorFlag error to throw as an exception.\n     * @throws {@link BufferQueueAbandonedException} for BAD_VALUE.\n     * @throws {@link UnsupportedOperationException} for an unknown negative error code.\n     * @return {@code errorFlag} if the value was non-negative, throws otherwise.\n     ",
    "links" : [ "BufferQueueAbandonedException", "UnsupportedOperationException" ]
  }, {
    "name" : "public static void throwOnServiceError(int errorFlag)",
    "returnType" : "void",
    "comment" : "\n     * Throw error codes returned by the camera service as exceptions.\n     *\n     * @param errorFlag error to throw as an exception.\n     ",
    "links" : [ ]
  } ],
  "variableNames" : [ "TAG", "NO_ERROR", "PERMISSION_DENIED", "ALREADY_EXISTS", "BAD_VALUE", "DEAD_OBJECT", "INVALID_OPERATION", "TIMED_OUT" ],
  "methodNames" : [ "public static int throwOnError(int errorFlag) throws BufferQueueAbandonedException", "public static void throwOnServiceError(int errorFlag)" ]
}