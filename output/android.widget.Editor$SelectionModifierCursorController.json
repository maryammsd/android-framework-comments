{
  "filePath" : "/home/maryam/clearblue/files/android-source-35/android/widget/Editor.java",
  "packageName" : "android.widget",
  "className" : "SelectionModifierCursorController",
  "comment" : " Controller for selection. ",
  "links" : [ ],
  "variables" : [ {
    "name" : "mStartHandle",
    "type" : "SelectionHandleView",
    "comment" : " The cursor controller handles, lazily created when shown.",
    "links" : [ ]
  }, {
    "name" : "mEndHandle",
    "type" : "SelectionHandleView",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mMinTouchOffset",
    "type" : "int",
    "comment" : " The offsets of that last touch down event. Remembered to start selection there.",
    "links" : [ ]
  }, {
    "name" : "mMaxTouchOffset",
    "type" : "int",
    "comment" : " The offsets of that last touch down event. Remembered to start selection there.",
    "links" : [ ]
  }, {
    "name" : "mGestureStayedInTapRegion",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mStartOffset",
    "type" : "int",
    "comment" : " Where the user first starts the drag motion.",
    "links" : [ ]
  }, {
    "name" : "mHaventMovedEnoughToStartDrag",
    "type" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "mLineSelectionIsOn",
    "type" : "int",
    "comment" : " The line that a selection happened most recently with the drag accelerator.",
    "links" : [ ]
  }, {
    "name" : "mSwitchedLines",
    "type" : "boolean",
    "comment" : " Whether the drag accelerator has selected past the initial line.",
    "links" : [ ]
  }, {
    "name" : "mDragAcceleratorMode",
    "type" : "int",
    "comment" : " Indicates the drag accelerator mode that the user is currently using.",
    "links" : [ ]
  }, {
    "name" : "DRAG_ACCELERATOR_MODE_INACTIVE",
    "type" : "int",
    "comment" : " Drag accelerator is inactive.",
    "links" : [ ]
  }, {
    "name" : "DRAG_ACCELERATOR_MODE_CHARACTER",
    "type" : "int",
    "comment" : " Character based selection by dragging. Only for mouse.",
    "links" : [ ]
  }, {
    "name" : "DRAG_ACCELERATOR_MODE_WORD",
    "type" : "int",
    "comment" : " Word based selection by dragging. Enabled after long pressing or double tapping.",
    "links" : [ ]
  }, {
    "name" : "DRAG_ACCELERATOR_MODE_PARAGRAPH",
    "type" : "int",
    "comment" : " Paragraph based selection by dragging. Enabled after mouse triple click.",
    "links" : [ ]
  } ],
  "methods" : [ {
    "name" : "public void show()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void initHandles()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void reloadHandleDrawables()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void hide()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void enterDrag(int dragAcceleratorMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onTouchEvent(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateSelection(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private boolean selectCurrentParagraphAndStartDrag()",
    "returnType" : "boolean",
    "comment" : "\n         * If the TextView allows text selection, selects the current paragraph and starts a drag.\n         *\n         * @return true if the drag was started.\n         ",
    "links" : [ ]
  }, {
    "name" : "private void updateCharacterBasedSelection(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateWordBasedSelection(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateParagraphBasedSelection(MotionEvent event)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateSelectionInternal(int selectionStart, int selectionEnd, boolean fromTouchScreen)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void updateMinAndMaxOffsets(MotionEvent event)",
    "returnType" : "void",
    "comment" : "\n         * @param event\n         ",
    "links" : [ ]
  }, {
    "name" : "public int getMinTouchOffset()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public int getMaxTouchOffset()",
    "returnType" : "int",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void resetTouchOffsets()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "private void resetDragAcceleratorState()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isSelectionStartDragged()",
    "returnType" : "boolean",
    "comment" : "\n         * @return true iff this controller is currently used to move the selection start.\n         ",
    "links" : [ ]
  }, {
    "name" : "public boolean isCursorBeingModified()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isDragAcceleratorActive()",
    "returnType" : "boolean",
    "comment" : "\n         * @return true if the user is selecting text using the drag accelerator.\n         ",
    "links" : [ ]
  }, {
    "name" : "public void onTouchModeChanged(boolean isInTouchMode)",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void onDetached()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public boolean isActive()",
    "returnType" : "boolean",
    "comment" : "",
    "links" : [ ]
  }, {
    "name" : "public void invalidateHandles()",
    "returnType" : "void",
    "comment" : "",
    "links" : [ ]
  } ],
  "methodNames" : [ "public void show()", "private void initHandles()", "private void reloadHandleDrawables()", "public void hide()", "public void enterDrag(int dragAcceleratorMode)", "public void onTouchEvent(MotionEvent event)", "private void updateSelection(MotionEvent event)", "private boolean selectCurrentParagraphAndStartDrag()", "private void updateCharacterBasedSelection(MotionEvent event)", "private void updateWordBasedSelection(MotionEvent event)", "private void updateParagraphBasedSelection(MotionEvent event)", "private void updateSelectionInternal(int selectionStart, int selectionEnd, boolean fromTouchScreen)", "private void updateMinAndMaxOffsets(MotionEvent event)", "public int getMinTouchOffset()", "public int getMaxTouchOffset()", "public void resetTouchOffsets()", "private void resetDragAcceleratorState()", "public boolean isSelectionStartDragged()", "public boolean isCursorBeingModified()", "public boolean isDragAcceleratorActive()", "public void onTouchModeChanged(boolean isInTouchMode)", "public void onDetached()", "public boolean isActive()", "public void invalidateHandles()" ],
  "variableNames" : [ "mStartHandle", "mEndHandle", "mMinTouchOffset", "mMaxTouchOffset", "mGestureStayedInTapRegion", "mStartOffset", "mHaventMovedEnoughToStartDrag", "mLineSelectionIsOn", "mSwitchedLines", "mDragAcceleratorMode", "DRAG_ACCELERATOR_MODE_INACTIVE", "DRAG_ACCELERATOR_MODE_CHARACTER", "DRAG_ACCELERATOR_MODE_WORD", "DRAG_ACCELERATOR_MODE_PARAGRAPH" ]
}